{"id":"870ba3b479f0b1614c50845b2072306a","_format":"hh-sol-build-info-1","solcVersion":"0.8.15","solcLongVersion":"0.8.15+commit.e14f2714","input":{"language":"Solidity","sources":{"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { ERC721Bridge } from \"../universal/ERC721Bridge.sol\";\nimport { IERC721 } from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport { L2ERC721Bridge } from \"../L2/L2ERC721Bridge.sol\";\nimport { Semver } from \"../universal/Semver.sol\";\n\n/**\n * @title L1ERC721Bridge\n * @notice The L1 ERC721 bridge is a contract which works together with the L2 ERC721 bridge to\n *         make it possible to transfer ERC721 tokens from Ethereum to Optimism. This contract\n *         acts as an escrow for ERC721 tokens deposited into L2.\n */\ncontract L1ERC721Bridge is ERC721Bridge, Semver {\n    /**\n     * @notice Mapping of L1 token to L2 token to ID to boolean, indicating if the given L1 token\n     *         by ID was deposited for a given L2 token.\n     */\n    mapping(address => mapping(address => mapping(uint256 => bool))) public deposits;\n\n    /**\n     * @custom:semver 1.0.0\n     *\n     * @param _messenger   Address of the CrossDomainMessenger on this network.\n     * @param _otherBridge Address of the ERC721 bridge on the other network.\n     */\n    constructor(address _messenger, address _otherBridge)\n        Semver(1, 1, 0)\n        ERC721Bridge(_messenger, _otherBridge)\n    {}\n\n    /**\n     * @notice Completes an ERC721 bridge from the other domain and sends the ERC721 token to the\n     *         recipient on this domain.\n     *\n     * @param _localToken  Address of the ERC721 token on this domain.\n     * @param _remoteToken Address of the ERC721 token on the other domain.\n     * @param _from        Address that triggered the bridge on the other domain.\n     * @param _to          Address to receive the token on this domain.\n     * @param _tokenId     ID of the token being deposited.\n     * @param _extraData   Optional data to forward to L2. Data supplied here will not be used to\n     *                     execute any code on L2 and is only emitted as extra data for the\n     *                     convenience of off-chain tooling.\n     */\n    function finalizeBridgeERC721(\n        address _localToken,\n        address _remoteToken,\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes calldata _extraData\n    ) external onlyOtherBridge {\n        require(_localToken != address(this), \"L1ERC721Bridge: local token cannot be self\");\n\n        // Checks that the L1/L2 NFT pair has a token ID that is escrowed in the L1 Bridge.\n        require(\n            deposits[_localToken][_remoteToken][_tokenId] == true,\n            \"L1ERC721Bridge: Token ID is not escrowed in the L1 Bridge\"\n        );\n\n        // Mark that the token ID for this L1/L2 token pair is no longer escrowed in the L1\n        // Bridge.\n        deposits[_localToken][_remoteToken][_tokenId] = false;\n\n        // When a withdrawal is finalized on L1, the L1 Bridge transfers the NFT to the\n        // withdrawer.\n        IERC721(_localToken).safeTransferFrom(address(this), _to, _tokenId);\n\n        // slither-disable-next-line reentrancy-events\n        emit ERC721BridgeFinalized(_localToken, _remoteToken, _from, _to, _tokenId, _extraData);\n    }\n\n    /**\n     * @inheritdoc ERC721Bridge\n     */\n    function _initiateBridgeERC721(\n        address _localToken,\n        address _remoteToken,\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        uint32 _minGasLimit,\n        bytes calldata _extraData\n    ) internal override {\n        require(_remoteToken != address(0), \"L1ERC721Bridge: remote token cannot be address(0)\");\n\n        // Construct calldata for _l2Token.finalizeBridgeERC721(_to, _tokenId)\n        bytes memory message = abi.encodeWithSelector(\n            L2ERC721Bridge.finalizeBridgeERC721.selector,\n            _remoteToken,\n            _localToken,\n            _from,\n            _to,\n            _tokenId,\n            _extraData\n        );\n\n        // Lock token into bridge\n        deposits[_localToken][_remoteToken][_tokenId] = true;\n        IERC721(_localToken).transferFrom(_from, address(this), _tokenId);\n\n        // Send calldata into L2\n        MESSENGER.sendMessage(OTHER_BRIDGE, message, _minGasLimit);\n        emit ERC721BridgeInitiated(_localToken, _remoteToken, _from, _to, _tokenId, _extraData);\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { ERC721Bridge } from \"../universal/ERC721Bridge.sol\";\nimport { ERC165Checker } from \"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\";\nimport { L1ERC721Bridge } from \"../L1/L1ERC721Bridge.sol\";\nimport { IOptimismMintableERC721 } from \"../universal/IOptimismMintableERC721.sol\";\nimport { Semver } from \"../universal/Semver.sol\";\n\n/**\n * @title L2ERC721Bridge\n * @notice The L2 ERC721 bridge is a contract which works together with the L1 ERC721 bridge to\n *         make it possible to transfer ERC721 tokens from Ethereum to Optimism. This contract\n *         acts as a minter for new tokens when it hears about deposits into the L1 ERC721 bridge.\n *         This contract also acts as a burner for tokens being withdrawn.\n *         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n *         bridge ONLY supports ERC721s originally deployed on Ethereum. Users will need to\n *         wait for the one-week challenge period to elapse before their Optimism-native NFT\n *         can be refunded on L2.\n */\ncontract L2ERC721Bridge is ERC721Bridge, Semver {\n    /**\n     * @custom:semver 1.0.0\n     *\n     * @param _messenger   Address of the CrossDomainMessenger on this network.\n     * @param _otherBridge Address of the ERC721 bridge on the other network.\n     */\n    constructor(address _messenger, address _otherBridge)\n        Semver(1, 1, 0)\n        ERC721Bridge(_messenger, _otherBridge)\n    {}\n\n    /**\n     * @notice Completes an ERC721 bridge from the other domain and sends the ERC721 token to the\n     *         recipient on this domain.\n     *\n     * @param _localToken  Address of the ERC721 token on this domain.\n     * @param _remoteToken Address of the ERC721 token on the other domain.\n     * @param _from        Address that triggered the bridge on the other domain.\n     * @param _to          Address to receive the token on this domain.\n     * @param _tokenId     ID of the token being deposited.\n     * @param _extraData   Optional data to forward to L1. Data supplied here will not be used to\n     *                     execute any code on L1 and is only emitted as extra data for the\n     *                     convenience of off-chain tooling.\n     */\n    function finalizeBridgeERC721(\n        address _localToken,\n        address _remoteToken,\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        bytes calldata _extraData\n    ) external onlyOtherBridge {\n        require(_localToken != address(this), \"L2ERC721Bridge: local token cannot be self\");\n\n        // Note that supportsInterface makes a callback to the _localToken address which is user\n        // provided.\n        require(\n            ERC165Checker.supportsInterface(_localToken, type(IOptimismMintableERC721).interfaceId),\n            \"L2ERC721Bridge: local token interface is not compliant\"\n        );\n\n        require(\n            _remoteToken == IOptimismMintableERC721(_localToken).remoteToken(),\n            \"L2ERC721Bridge: wrong remote token for Optimism Mintable ERC721 local token\"\n        );\n\n        // When a deposit is finalized, we give the NFT with the same tokenId to the account\n        // on L2. Note that safeMint makes a callback to the _to address which is user provided.\n        IOptimismMintableERC721(_localToken).safeMint(_to, _tokenId);\n\n        // slither-disable-next-line reentrancy-events\n        emit ERC721BridgeFinalized(_localToken, _remoteToken, _from, _to, _tokenId, _extraData);\n    }\n\n    /**\n     * @inheritdoc ERC721Bridge\n     */\n    function _initiateBridgeERC721(\n        address _localToken,\n        address _remoteToken,\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        uint32 _minGasLimit,\n        bytes calldata _extraData\n    ) internal override {\n        require(_remoteToken != address(0), \"L2ERC721Bridge: remote token cannot be address(0)\");\n\n        // Check that the withdrawal is being initiated by the NFT owner\n        require(\n            _from == IOptimismMintableERC721(_localToken).ownerOf(_tokenId),\n            \"L2ERC721Bridge: Withdrawal is not being initiated by NFT owner\"\n        );\n\n        // Construct calldata for l1ERC721Bridge.finalizeBridgeERC721(_to, _tokenId)\n        // slither-disable-next-line reentrancy-events\n        address remoteToken = IOptimismMintableERC721(_localToken).remoteToken();\n        require(\n            remoteToken == _remoteToken,\n            \"L2ERC721Bridge: remote token does not match given value\"\n        );\n\n        // When a withdrawal is initiated, we burn the withdrawer's NFT to prevent subsequent L2\n        // usage\n        // slither-disable-next-line reentrancy-events\n        IOptimismMintableERC721(_localToken).burn(_from, _tokenId);\n\n        bytes memory message = abi.encodeWithSelector(\n            L1ERC721Bridge.finalizeBridgeERC721.selector,\n            remoteToken,\n            _localToken,\n            _from,\n            _to,\n            _tokenId,\n            _extraData\n        );\n\n        // Send message to L1 bridge\n        // slither-disable-next-line reentrancy-events\n        MESSENGER.sendMessage(OTHER_BRIDGE, message, _minGasLimit);\n\n        // slither-disable-next-line reentrancy-events\n        emit ERC721BridgeInitiated(_localToken, remoteToken, _from, _to, _tokenId, _extraData);\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title Constants\n * @notice Constants is a library for storing constants. Simple! Don't put everything in here, just\n *         the stuff used in multiple contracts. Constants that only apply to a single contract\n *         should be defined in that contract instead.\n */\nlibrary Constants {\n    /**\n     * @notice Special address to be used as the tx origin for gas estimation calls in the\n     *         OptimismPortal and CrossDomainMessenger calls. You only need to use this address if\n     *         the minimum gas limit specified by the user is not actually enough to execute the\n     *         given message and you're attempting to estimate the actual necessary gas limit. We\n     *         use address(1) because it's the ecrecover precompile and therefore guaranteed to\n     *         never have any code on any EVM chain.\n     */\n    address internal constant ESTIMATION_ADDRESS = address(1);\n\n    /**\n     * @notice Value used for the L2 sender storage slot in both the OptimismPortal and the\n     *         CrossDomainMessenger contracts before an actual sender is set. This value is\n     *         non-zero to reduce the gas cost of message passing transactions.\n     */\n    address internal constant DEFAULT_L2_SENDER = 0x000000000000000000000000000000000000dEaD;\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { Types } from \"./Types.sol\";\nimport { Hashing } from \"./Hashing.sol\";\nimport { RLPWriter } from \"./rlp/RLPWriter.sol\";\n\n/**\n * @title Encoding\n * @notice Encoding handles Optimism's various different encoding schemes.\n */\nlibrary Encoding {\n    /**\n     * @notice RLP encodes the L2 transaction that would be generated when a given deposit is sent\n     *         to the L2 system. Useful for searching for a deposit in the L2 system. The\n     *         transaction is prefixed with 0x7e to identify its EIP-2718 type.\n     *\n     * @param _tx User deposit transaction to encode.\n     *\n     * @return RLP encoded L2 deposit transaction.\n     */\n    function encodeDepositTransaction(Types.UserDepositTransaction memory _tx)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        bytes32 source = Hashing.hashDepositSource(_tx.l1BlockHash, _tx.logIndex);\n        bytes[] memory raw = new bytes[](8);\n        raw[0] = RLPWriter.writeBytes(abi.encodePacked(source));\n        raw[1] = RLPWriter.writeAddress(_tx.from);\n        raw[2] = _tx.isCreation ? RLPWriter.writeBytes(\"\") : RLPWriter.writeAddress(_tx.to);\n        raw[3] = RLPWriter.writeUint(_tx.mint);\n        raw[4] = RLPWriter.writeUint(_tx.value);\n        raw[5] = RLPWriter.writeUint(uint256(_tx.gasLimit));\n        raw[6] = RLPWriter.writeBool(false);\n        raw[7] = RLPWriter.writeBytes(_tx.data);\n        return abi.encodePacked(uint8(0x7e), RLPWriter.writeList(raw));\n    }\n\n    /**\n     * @notice Encodes the cross domain message based on the version that is encoded into the\n     *         message nonce.\n     *\n     * @param _nonce    Message nonce with version encoded into the first two bytes.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Encoded cross domain message.\n     */\n    function encodeCrossDomainMessage(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes memory) {\n        (, uint16 version) = decodeVersionedNonce(_nonce);\n        if (version == 0) {\n            return encodeCrossDomainMessageV0(_target, _sender, _data, _nonce);\n        } else if (version == 1) {\n            return encodeCrossDomainMessageV1(_nonce, _sender, _target, _value, _gasLimit, _data);\n        } else {\n            revert(\"Encoding: unknown cross domain message version\");\n        }\n    }\n\n    /**\n     * @notice Encodes a cross domain message based on the V0 (legacy) encoding.\n     *\n     * @param _target Address of the target of the message.\n     * @param _sender Address of the sender of the message.\n     * @param _data   Data to send with the message.\n     * @param _nonce  Message nonce.\n     *\n     * @return Encoded cross domain message.\n     */\n    function encodeCrossDomainMessageV0(\n        address _target,\n        address _sender,\n        bytes memory _data,\n        uint256 _nonce\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSignature(\n                \"relayMessage(address,address,bytes,uint256)\",\n                _target,\n                _sender,\n                _data,\n                _nonce\n            );\n    }\n\n    /**\n     * @notice Encodes a cross domain message based on the V1 (current) encoding.\n     *\n     * @param _nonce    Message nonce.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Encoded cross domain message.\n     */\n    function encodeCrossDomainMessageV1(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSignature(\n                \"relayMessage(uint256,address,address,uint256,uint256,bytes)\",\n                _nonce,\n                _sender,\n                _target,\n                _value,\n                _gasLimit,\n                _data\n            );\n    }\n\n    /**\n     * @notice Adds a version number into the first two bytes of a message nonce.\n     *\n     * @param _nonce   Message nonce to encode into.\n     * @param _version Version number to encode into the message nonce.\n     *\n     * @return Message nonce with version encoded into the first two bytes.\n     */\n    function encodeVersionedNonce(uint240 _nonce, uint16 _version) internal pure returns (uint256) {\n        uint256 nonce;\n        assembly {\n            nonce := or(shl(240, _version), _nonce)\n        }\n        return nonce;\n    }\n\n    /**\n     * @notice Pulls the version out of a version-encoded nonce.\n     *\n     * @param _nonce Message nonce with version encoded into the first two bytes.\n     *\n     * @return Nonce without encoded version.\n     * @return Version of the message.\n     */\n    function decodeVersionedNonce(uint256 _nonce) internal pure returns (uint240, uint16) {\n        uint240 nonce;\n        uint16 version;\n        assembly {\n            nonce := and(_nonce, 0x0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n            version := shr(240, _nonce)\n        }\n        return (nonce, version);\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { Types } from \"./Types.sol\";\nimport { Encoding } from \"./Encoding.sol\";\n\n/**\n * @title Hashing\n * @notice Hashing handles Optimism's various different hashing schemes.\n */\nlibrary Hashing {\n    /**\n     * @notice Computes the hash of the RLP encoded L2 transaction that would be generated when a\n     *         given deposit is sent to the L2 system. Useful for searching for a deposit in the L2\n     *         system.\n     *\n     * @param _tx User deposit transaction to hash.\n     *\n     * @return Hash of the RLP encoded L2 deposit transaction.\n     */\n    function hashDepositTransaction(Types.UserDepositTransaction memory _tx)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return keccak256(Encoding.encodeDepositTransaction(_tx));\n    }\n\n    /**\n     * @notice Computes the deposit transaction's \"source hash\", a value that guarantees the hash\n     *         of the L2 transaction that corresponds to a deposit is unique and is\n     *         deterministically generated from L1 transaction data.\n     *\n     * @param _l1BlockHash Hash of the L1 block where the deposit was included.\n     * @param _logIndex    The index of the log that created the deposit transaction.\n     *\n     * @return Hash of the deposit transaction's \"source hash\".\n     */\n    function hashDepositSource(bytes32 _l1BlockHash, uint256 _logIndex)\n        internal\n        pure\n        returns (bytes32)\n    {\n        bytes32 depositId = keccak256(abi.encode(_l1BlockHash, _logIndex));\n        return keccak256(abi.encode(bytes32(0), depositId));\n    }\n\n    /**\n     * @notice Hashes the cross domain message based on the version that is encoded into the\n     *         message nonce.\n     *\n     * @param _nonce    Message nonce with version encoded into the first two bytes.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Hashed cross domain message.\n     */\n    function hashCrossDomainMessage(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes32) {\n        (, uint16 version) = Encoding.decodeVersionedNonce(_nonce);\n        if (version == 0) {\n            return hashCrossDomainMessageV0(_target, _sender, _data, _nonce);\n        } else if (version == 1) {\n            return hashCrossDomainMessageV1(_nonce, _sender, _target, _value, _gasLimit, _data);\n        } else {\n            revert(\"Hashing: unknown cross domain message version\");\n        }\n    }\n\n    /**\n     * @notice Hashes a cross domain message based on the V0 (legacy) encoding.\n     *\n     * @param _target Address of the target of the message.\n     * @param _sender Address of the sender of the message.\n     * @param _data   Data to send with the message.\n     * @param _nonce  Message nonce.\n     *\n     * @return Hashed cross domain message.\n     */\n    function hashCrossDomainMessageV0(\n        address _target,\n        address _sender,\n        bytes memory _data,\n        uint256 _nonce\n    ) internal pure returns (bytes32) {\n        return keccak256(Encoding.encodeCrossDomainMessageV0(_target, _sender, _data, _nonce));\n    }\n\n    /**\n     * @notice Hashes a cross domain message based on the V1 (current) encoding.\n     *\n     * @param _nonce    Message nonce.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Hashed cross domain message.\n     */\n    function hashCrossDomainMessageV1(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes32) {\n        return\n            keccak256(\n                Encoding.encodeCrossDomainMessageV1(\n                    _nonce,\n                    _sender,\n                    _target,\n                    _value,\n                    _gasLimit,\n                    _data\n                )\n            );\n    }\n\n    /**\n     * @notice Derives the withdrawal hash according to the encoding in the L2 Withdrawer contract\n     *\n     * @param _tx Withdrawal transaction to hash.\n     *\n     * @return Hashed withdrawal transaction.\n     */\n    function hashWithdrawal(Types.WithdrawalTransaction memory _tx)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(_tx.nonce, _tx.sender, _tx.target, _tx.value, _tx.gasLimit, _tx.data)\n            );\n    }\n\n    /**\n     * @notice Hashes the various elements of an output root proof into an output root hash which\n     *         can be used to check if the proof is valid.\n     *\n     * @param _outputRootProof Output root proof which should hash to an output root.\n     *\n     * @return Hashed output root proof.\n     */\n    function hashOutputRootProof(Types.OutputRootProof memory _outputRootProof)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(\n                    _outputRootProof.version,\n                    _outputRootProof.stateRoot,\n                    _outputRootProof.messagePasserStorageRoot,\n                    _outputRootProof.latestBlockhash\n                )\n            );\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @custom:attribution https://github.com/bakaoh/solidity-rlp-encode\n * @title RLPWriter\n * @author RLPWriter is a library for encoding Solidity types to RLP bytes. Adapted from Bakaoh's\n *         RLPEncode library (https://github.com/bakaoh/solidity-rlp-encode) with minor\n *         modifications to improve legibility.\n */\nlibrary RLPWriter {\n    /**\n     * @notice RLP encodes a byte string.\n     *\n     * @param _in The byte string to encode.\n     *\n     * @return The RLP encoded string in bytes.\n     */\n    function writeBytes(bytes memory _in) internal pure returns (bytes memory) {\n        bytes memory encoded;\n\n        if (_in.length == 1 && uint8(_in[0]) < 128) {\n            encoded = _in;\n        } else {\n            encoded = abi.encodePacked(_writeLength(_in.length, 128), _in);\n        }\n\n        return encoded;\n    }\n\n    /**\n     * @notice RLP encodes a list of RLP encoded byte byte strings.\n     *\n     * @param _in The list of RLP encoded byte strings.\n     *\n     * @return The RLP encoded list of items in bytes.\n     */\n    function writeList(bytes[] memory _in) internal pure returns (bytes memory) {\n        bytes memory list = _flatten(_in);\n        return abi.encodePacked(_writeLength(list.length, 192), list);\n    }\n\n    /**\n     * @notice RLP encodes a string.\n     *\n     * @param _in The string to encode.\n     *\n     * @return The RLP encoded string in bytes.\n     */\n    function writeString(string memory _in) internal pure returns (bytes memory) {\n        return writeBytes(bytes(_in));\n    }\n\n    /**\n     * @notice RLP encodes an address.\n     *\n     * @param _in The address to encode.\n     *\n     * @return The RLP encoded address in bytes.\n     */\n    function writeAddress(address _in) internal pure returns (bytes memory) {\n        return writeBytes(abi.encodePacked(_in));\n    }\n\n    /**\n     * @notice RLP encodes a uint.\n     *\n     * @param _in The uint256 to encode.\n     *\n     * @return The RLP encoded uint256 in bytes.\n     */\n    function writeUint(uint256 _in) internal pure returns (bytes memory) {\n        return writeBytes(_toBinary(_in));\n    }\n\n    /**\n     * @notice RLP encodes a bool.\n     *\n     * @param _in The bool to encode.\n     *\n     * @return The RLP encoded bool in bytes.\n     */\n    function writeBool(bool _in) internal pure returns (bytes memory) {\n        bytes memory encoded = new bytes(1);\n        encoded[0] = (_in ? bytes1(0x01) : bytes1(0x80));\n        return encoded;\n    }\n\n    /**\n     * @notice Encode the first byte and then the `len` in binary form if `length` is more than 55.\n     *\n     * @param _len    The length of the string or the payload.\n     * @param _offset 128 if item is string, 192 if item is list.\n     *\n     * @return RLP encoded bytes.\n     */\n    function _writeLength(uint256 _len, uint256 _offset) private pure returns (bytes memory) {\n        bytes memory encoded;\n\n        if (_len < 56) {\n            encoded = new bytes(1);\n            encoded[0] = bytes1(uint8(_len) + uint8(_offset));\n        } else {\n            uint256 lenLen;\n            uint256 i = 1;\n            while (_len / i != 0) {\n                lenLen++;\n                i *= 256;\n            }\n\n            encoded = new bytes(lenLen + 1);\n            encoded[0] = bytes1(uint8(lenLen) + uint8(_offset) + 55);\n            for (i = 1; i <= lenLen; i++) {\n                encoded[i] = bytes1(uint8((_len / (256**(lenLen - i))) % 256));\n            }\n        }\n\n        return encoded;\n    }\n\n    /**\n     * @notice Encode integer in big endian binary form with no leading zeroes.\n     *\n     * @param _x The integer to encode.\n     *\n     * @return RLP encoded bytes.\n     */\n    function _toBinary(uint256 _x) private pure returns (bytes memory) {\n        bytes memory b = abi.encodePacked(_x);\n\n        uint256 i = 0;\n        for (; i < 32; i++) {\n            if (b[i] != 0) {\n                break;\n            }\n        }\n\n        bytes memory res = new bytes(32 - i);\n        for (uint256 j = 0; j < res.length; j++) {\n            res[j] = b[i++];\n        }\n\n        return res;\n    }\n\n    /**\n     * @custom:attribution https://github.com/Arachnid/solidity-stringutils\n     * @notice Copies a piece of memory to another location.\n     *\n     * @param _dest Destination location.\n     * @param _src  Source location.\n     * @param _len  Length of memory to copy.\n     */\n    function _memcpy(\n        uint256 _dest,\n        uint256 _src,\n        uint256 _len\n    ) private pure {\n        uint256 dest = _dest;\n        uint256 src = _src;\n        uint256 len = _len;\n\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        uint256 mask;\n        unchecked {\n            mask = 256**(32 - len) - 1;\n        }\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n    }\n\n    /**\n     * @custom:attribution https://github.com/sammayo/solidity-rlp-encoder\n     * @notice Flattens a list of byte strings into one byte string.\n     *\n     * @param _list List of byte strings to flatten.\n     *\n     * @return The flattened byte string.\n     */\n    function _flatten(bytes[] memory _list) private pure returns (bytes memory) {\n        if (_list.length == 0) {\n            return new bytes(0);\n        }\n\n        uint256 len;\n        uint256 i = 0;\n        for (; i < _list.length; i++) {\n            len += _list[i].length;\n        }\n\n        bytes memory flattened = new bytes(len);\n        uint256 flattenedPtr;\n        assembly {\n            flattenedPtr := add(flattened, 0x20)\n        }\n\n        for (i = 0; i < _list.length; i++) {\n            bytes memory item = _list[i];\n\n            uint256 listPtr;\n            assembly {\n                listPtr := add(item, 0x20)\n            }\n\n            _memcpy(flattenedPtr, listPtr, item.length);\n            flattenedPtr += _list[i].length;\n        }\n\n        return flattened;\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n/**\n * @title SafeCall\n * @notice Perform low level safe calls\n */\nlibrary SafeCall {\n    /**\n     * @notice Perform a low level call without copying any returndata\n     *\n     * @param _target   Address to call\n     * @param _gas      Amount of gas to pass to the call\n     * @param _value    Amount of value to pass to the call\n     * @param _calldata Calldata to pass to the call\n     */\n    function call(\n        address _target,\n        uint256 _gas,\n        uint256 _value,\n        bytes memory _calldata\n    ) internal returns (bool) {\n        bool _success;\n        assembly {\n            _success := call(\n                _gas, // gas\n                _target, // recipient\n                _value, // ether value\n                add(_calldata, 32), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n        }\n        return _success;\n    }\n\n    /**\n     * @notice Perform a low level call without copying any returndata. This function\n     *         will revert if the call cannot be performed with the specified minimum\n     *         gas.\n     *\n     * @param _target   Address to call\n     * @param _minGas   The minimum amount of gas that may be passed to the call\n     * @param _value    Amount of value to pass to the call\n     * @param _calldata Calldata to pass to the call\n     */\n    function callWithMinGas(\n        address _target,\n        uint256 _minGas,\n        uint256 _value,\n        bytes memory _calldata\n    ) internal returns (bool) {\n        bool _success;\n        assembly {\n            // Assertion: gasleft() >= ((_minGas + 200) * 64) / 63\n            //\n            // Because EIP-150 ensures that, a maximum of 63/64ths of the remaining gas in the call\n            // frame may be passed to a subcontext, we need to ensure that the gas will not be\n            // truncated to hold this function's invariant: \"If a call is performed by\n            // `callWithMinGas`, it must receive at least the specified minimum gas limit.\" In\n            // addition, exactly 51 gas is consumed between the below `GAS` opcode and the `CALL`\n            // opcode, so it is factored in with some extra room for error.\n            if lt(gas(), div(mul(64, add(_minGas, 200)), 63)) {\n                // Store the \"Error(string)\" selector in scratch space.\n                mstore(0, 0x08c379a0)\n                // Store the pointer to the string length in scratch space.\n                mstore(32, 32)\n                // Store the string.\n                //\n                // SAFETY:\n                // - We pad the beginning of the string with two zero bytes as well as the\n                // length (24) to ensure that we override the free memory pointer at offset\n                // 0x40. This is necessary because the free memory pointer is likely to\n                // be greater than 1 byte when this function is called, but it is incredibly\n                // unlikely that it will be greater than 3 bytes. As for the data within\n                // 0x60, it is ensured that it is 0 due to 0x60 being the zero offset.\n                // - It's fine to clobber the free memory pointer, we're reverting.\n                mstore(88, 0x0000185361666543616c6c3a204e6f7420656e6f75676820676173)\n\n                // Revert with 'Error(\"SafeCall: Not enough gas\")'\n                revert(28, 100)\n            }\n\n            // The call will be supplied at least (((_minGas + 200) * 64) / 63) - 49 gas due to the\n            // above assertion. This ensures that, in all circumstances, the call will\n            // receive at least the minimum amount of gas specified.\n            // We can prove this property by solving the inequalities:\n            // ((((_minGas + 200) * 64) / 63) - 49) >= _minGas\n            // ((((_minGas + 200) * 64) / 63) - 51) * (63 / 64) >= _minGas\n            // Both inequalities hold true for all possible values of `_minGas`.\n            _success := call(\n                gas(), // gas\n                _target, // recipient\n                _value, // ether value\n                add(_calldata, 32), // inloc\n                mload(_calldata), // inlen\n                0x00, // outloc\n                0x00 // outlen\n            )\n        }\n        return _success;\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title Types\n * @notice Contains various types used throughout the Optimism contract system.\n */\nlibrary Types {\n    /**\n     * @notice OutputProposal represents a commitment to the L2 state. The timestamp is the L1\n     *         timestamp that the output root is posted. This timestamp is used to verify that the\n     *         finalization period has passed since the output root was submitted.\n     *\n     * @custom:field outputRoot    Hash of the L2 output.\n     * @custom:field timestamp     Timestamp of the L1 block that the output root was submitted in.\n     * @custom:field l2BlockNumber L2 block number that the output corresponds to.\n     */\n    struct OutputProposal {\n        bytes32 outputRoot;\n        uint128 timestamp;\n        uint128 l2BlockNumber;\n    }\n\n    /**\n     * @notice Struct representing the elements that are hashed together to generate an output root\n     *         which itself represents a snapshot of the L2 state.\n     *\n     * @custom:field version                  Version of the output root.\n     * @custom:field stateRoot                Root of the state trie at the block of this output.\n     * @custom:field messagePasserStorageRoot Root of the message passer storage trie.\n     * @custom:field latestBlockhash          Hash of the block this output was generated from.\n     */\n    struct OutputRootProof {\n        bytes32 version;\n        bytes32 stateRoot;\n        bytes32 messagePasserStorageRoot;\n        bytes32 latestBlockhash;\n    }\n\n    /**\n     * @notice Struct representing a deposit transaction (L1 => L2 transaction) created by an end\n     *         user (as opposed to a system deposit transaction generated by the system).\n     *\n     * @custom:field from        Address of the sender of the transaction.\n     * @custom:field to          Address of the recipient of the transaction.\n     * @custom:field isCreation  True if the transaction is a contract creation.\n     * @custom:field value       Value to send to the recipient.\n     * @custom:field mint        Amount of ETH to mint.\n     * @custom:field gasLimit    Gas limit of the transaction.\n     * @custom:field data        Data of the transaction.\n     * @custom:field l1BlockHash Hash of the block the transaction was submitted in.\n     * @custom:field logIndex    Index of the log in the block the transaction was submitted in.\n     */\n    struct UserDepositTransaction {\n        address from;\n        address to;\n        bool isCreation;\n        uint256 value;\n        uint256 mint;\n        uint64 gasLimit;\n        bytes data;\n        bytes32 l1BlockHash;\n        uint256 logIndex;\n    }\n\n    /**\n     * @notice Struct representing a withdrawal transaction.\n     *\n     * @custom:field nonce    Nonce of the withdrawal transaction\n     * @custom:field sender   Address of the sender of the transaction.\n     * @custom:field target   Address of the recipient of the transaction.\n     * @custom:field value    Value to send to the recipient.\n     * @custom:field gasLimit Gas limit of the transaction.\n     * @custom:field data     Data of the transaction.\n     */\n    struct WithdrawalTransaction {\n        uint256 nonce;\n        address sender;\n        address target;\n        uint256 value;\n        uint256 gasLimit;\n        bytes data;\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { Initializable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport { SafeCall } from \"../libraries/SafeCall.sol\";\nimport { Hashing } from \"../libraries/Hashing.sol\";\nimport { Encoding } from \"../libraries/Encoding.sol\";\nimport { Constants } from \"../libraries/Constants.sol\";\n\n/**\n * @custom:legacy\n * @title CrossDomainMessengerLegacySpacer0\n * @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n *         libAddressManager variable used to exist. Must be the first contract in the inheritance\n *         tree of the CrossDomainMessenger.\n */\ncontract CrossDomainMessengerLegacySpacer0 {\n    /**\n     * @custom:legacy\n     * @custom:spacer libAddressManager\n     * @notice Spacer for backwards compatibility.\n     */\n    address private spacer_0_0_20;\n}\n\n/**\n * @custom:legacy\n * @title CrossDomainMessengerLegacySpacer1\n * @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n *         PausableUpgradable and OwnableUpgradeable variables used to exist. Must be\n *         the third contract in the inheritance tree of the CrossDomainMessenger.\n */\ncontract CrossDomainMessengerLegacySpacer1 {\n    /**\n     * @custom:legacy\n     * @custom:spacer __gap\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         ContextUpgradable via OwnableUpgradeable.\n     *\n     */\n    uint256[50] private spacer_1_0_1600;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer _owner\n     * @notice Spacer for backwards compatibility.\n     *         Come from OpenZeppelin OwnableUpgradeable.\n     */\n    address private spacer_51_0_20;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer __gap\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         ContextUpgradable via PausableUpgradable.\n     */\n    uint256[49] private spacer_52_0_1568;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer _paused\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         PausableUpgradable.\n     */\n    bool private spacer_101_0_1;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer __gap\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         PausableUpgradable.\n     */\n    uint256[49] private spacer_102_0_1568;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer ReentrancyGuardUpgradeable's `_status` field.\n     * @notice Spacer for backwards compatibility\n     */\n    uint256 private spacer_151_0_32;\n\n    /**\n     * @custom:spacer ReentrancyGuardUpgradeable\n     * @notice Spacer for backwards compatibility\n     */\n    uint256[49] private __gap_reentrancy_guard;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer blockedMessages\n     * @notice Spacer for backwards compatibility.\n     */\n    mapping(bytes32 => bool) private spacer_201_0_32;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer relayedMessages\n     * @notice Spacer for backwards compatibility.\n     */\n    mapping(bytes32 => bool) private spacer_202_0_32;\n}\n\n/**\n * @custom:upgradeable\n * @title CrossDomainMessenger\n * @notice CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2\n *         cross-chain messenger contracts. It's designed to be a universal interface that only\n *         needs to be extended slightly to provide low-level message passing functionality on each\n *         chain it's deployed on. Currently only designed for message passing between two paired\n *         chains and does not support one-to-many interactions.\n *\n *         Any changes to this contract MUST result in a semver bump for contracts that inherit it.\n */\nabstract contract CrossDomainMessenger is\n    CrossDomainMessengerLegacySpacer0,\n    Initializable,\n    CrossDomainMessengerLegacySpacer1\n{\n    /**\n     * @notice Current message version identifier.\n     */\n    uint16 public constant MESSAGE_VERSION = 1;\n\n    /**\n     * @notice Constant overhead added to the base gas for a message.\n     */\n    uint64 public constant MIN_GAS_CONSTANT_OVERHEAD = 200_000;\n\n    /**\n     * @notice Numerator for dynamic overhead added to the base gas for a message.\n     */\n    uint64 public constant MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR = 1016;\n\n    /**\n     * @notice Denominator for dynamic overhead added to the base gas for a message.\n     */\n    uint64 public constant MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR = 1000;\n\n    /**\n     * @notice Extra gas added to base gas for each byte of calldata in a message.\n     */\n    uint64 public constant MIN_GAS_CALLDATA_OVERHEAD = 16;\n\n    /**\n     * @notice Address of the paired CrossDomainMessenger contract on the other chain.\n     */\n    address public immutable OTHER_MESSENGER;\n\n    /**\n     * @notice Mapping of message hashes to boolean receipt values. Note that a message will only\n     *         be present in this mapping if it has successfully been relayed on this chain, and\n     *         can therefore not be relayed again.\n     */\n    mapping(bytes32 => bool) public successfulMessages;\n\n    /**\n     * @notice Address of the sender of the currently executing message on the other chain. If the\n     *         value of this variable is the default value (0x00000000...dead) then no message is\n     *         currently being executed. Use the xDomainMessageSender getter which will throw an\n     *         error if this is the case.\n     */\n    address internal xDomainMsgSender;\n\n    /**\n     * @notice Nonce for the next message to be sent, without the message version applied. Use the\n     *         messageNonce getter which will insert the message version into the nonce to give you\n     *         the actual nonce to be used for the message.\n     */\n    uint240 internal msgNonce;\n\n    /**\n     * @notice Mapping of message hashes to a boolean if and only if the message has failed to be\n     *         executed at least once. A message will not be present in this mapping if it\n     *         successfully executed on the first attempt.\n     */\n    mapping(bytes32 => bool) public failedMessages;\n\n    /**\n     * @notice A mapping of hashes to reentrancy locks.\n     */\n    mapping(bytes32 => bool) internal reentrancyLocks;\n\n    /**\n     * @notice Reserve extra slots in the storage layout for future upgrades.\n     *         A gap size of 41 was chosen here, so that the first slot used in a child contract\n     *         would be a multiple of 50.\n     */\n    uint256[41] private __gap;\n\n    /**\n     * @notice Emitted whenever a message is sent to the other chain.\n     *\n     * @param target       Address of the recipient of the message.\n     * @param sender       Address of the sender of the message.\n     * @param message      Message to trigger the recipient address with.\n     * @param messageNonce Unique nonce attached to the message.\n     * @param gasLimit     Minimum gas limit that the message can be executed with.\n     */\n    event SentMessage(\n        address indexed target,\n        address sender,\n        bytes message,\n        uint256 messageNonce,\n        uint256 gasLimit\n    );\n\n    /**\n     * @notice Additional event data to emit, required as of Bedrock. Cannot be merged with the\n     *         SentMessage event without breaking the ABI of this contract, this is good enough.\n     *\n     * @param sender Address of the sender of the message.\n     * @param value  ETH value sent along with the message to the recipient.\n     */\n    event SentMessageExtension1(address indexed sender, uint256 value);\n\n    /**\n     * @notice Emitted whenever a message is successfully relayed on this chain.\n     *\n     * @param msgHash Hash of the message that was relayed.\n     */\n    event RelayedMessage(bytes32 indexed msgHash);\n\n    /**\n     * @notice Emitted whenever a message fails to be relayed on this chain.\n     *\n     * @param msgHash Hash of the message that failed to be relayed.\n     */\n    event FailedRelayedMessage(bytes32 indexed msgHash);\n\n    /**\n     * @param _otherMessenger Address of the messenger on the paired chain.\n     */\n    constructor(address _otherMessenger) {\n        OTHER_MESSENGER = _otherMessenger;\n    }\n\n    /**\n     * @notice Sends a message to some target address on the other chain. Note that if the call\n     *         always reverts, then the message will be unrelayable, and any ETH sent will be\n     *         permanently locked. The same will occur if the target on the other chain is\n     *         considered unsafe (see the _isUnsafeTarget() function).\n     *\n     * @param _target      Target contract or wallet address.\n     * @param _message     Message to trigger the target address with.\n     * @param _minGasLimit Minimum gas limit that the message can be executed with.\n     */\n    function sendMessage(\n        address _target,\n        bytes calldata _message,\n        uint32 _minGasLimit\n    ) external payable {\n        // Triggers a message to the other messenger. Note that the amount of gas provided to the\n        // message is the amount of gas requested by the user PLUS the base gas value. We want to\n        // guarantee the property that the call to the target contract will always have at least\n        // the minimum gas limit specified by the user.\n        _sendMessage(\n            OTHER_MESSENGER,\n            baseGas(_message, _minGasLimit),\n            msg.value,\n            abi.encodeWithSelector(\n                this.relayMessage.selector,\n                messageNonce(),\n                msg.sender,\n                _target,\n                msg.value,\n                _minGasLimit,\n                _message\n            )\n        );\n\n        emit SentMessage(_target, msg.sender, _message, messageNonce(), _minGasLimit);\n        emit SentMessageExtension1(msg.sender, msg.value);\n\n        unchecked {\n            ++msgNonce;\n        }\n    }\n\n    /**\n     * @notice Relays a message that was sent by the other CrossDomainMessenger contract. Can only\n     *         be executed via cross-chain call from the other messenger OR if the message was\n     *         already received once and is currently being replayed.\n     *\n     * @param _nonce       Nonce of the message being relayed.\n     * @param _sender      Address of the user who sent the message.\n     * @param _target      Address that the message is targeted at.\n     * @param _value       ETH value to send with the message.\n     * @param _minGasLimit Minimum amount of gas that the message can be executed with.\n     * @param _message     Message to send to the target.\n     */\n    function relayMessage(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _minGasLimit,\n        bytes calldata _message\n    ) external payable {\n        (, uint16 version) = Encoding.decodeVersionedNonce(_nonce);\n        require(\n            version < 2,\n            \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\"\n        );\n\n        // If the message is version 0, then it's a migrated legacy withdrawal. We therefore need\n        // to check that the legacy version of the message has not already been relayed.\n        if (version == 0) {\n            bytes32 oldHash = Hashing.hashCrossDomainMessageV0(_target, _sender, _message, _nonce);\n            require(\n                successfulMessages[oldHash] == false,\n                \"CrossDomainMessenger: legacy withdrawal already relayed\"\n            );\n        }\n\n        // We use the v1 message hash as the unique identifier for the message because it commits\n        // to the value and minimum gas limit of the message.\n        bytes32 versionedHash = Hashing.hashCrossDomainMessageV1(\n            _nonce,\n            _sender,\n            _target,\n            _value,\n            _minGasLimit,\n            _message\n        );\n\n        // Check if the reentrancy lock for the `versionedHash` is already set.\n        if (reentrancyLocks[versionedHash]) {\n            revert(\"ReentrancyGuard: reentrant call\");\n        }\n        // Trigger the reentrancy lock for `versionedHash`\n        reentrancyLocks[versionedHash] = true;\n\n        if (_isOtherMessenger()) {\n            // These properties should always hold when the message is first submitted (as\n            // opposed to being replayed).\n            assert(msg.value == _value);\n            assert(!failedMessages[versionedHash]);\n        } else {\n            require(\n                msg.value == 0,\n                \"CrossDomainMessenger: value must be zero unless message is from a system address\"\n            );\n\n            require(\n                failedMessages[versionedHash],\n                \"CrossDomainMessenger: message cannot be replayed\"\n            );\n        }\n\n        require(\n            _isUnsafeTarget(_target) == false,\n            \"CrossDomainMessenger: cannot send message to blocked system address\"\n        );\n\n        require(\n            successfulMessages[versionedHash] == false,\n            \"CrossDomainMessenger: message has already been relayed\"\n        );\n\n        xDomainMsgSender = _sender;\n        bool success = SafeCall.callWithMinGas(_target, _minGasLimit, _value, _message);\n        xDomainMsgSender = Constants.DEFAULT_L2_SENDER;\n\n        if (success) {\n            successfulMessages[versionedHash] = true;\n            emit RelayedMessage(versionedHash);\n        } else {\n            failedMessages[versionedHash] = true;\n            emit FailedRelayedMessage(versionedHash);\n\n            // Revert in this case if the transaction was triggered by the estimation address. This\n            // should only be possible during gas estimation or we have bigger problems. Reverting\n            // here will make the behavior of gas estimation change such that the gas limit\n            // computed will be the amount required to relay the message, even if that amount is\n            // greater than the minimum gas limit specified by the user.\n            if (tx.origin == Constants.ESTIMATION_ADDRESS) {\n                revert(\"CrossDomainMessenger: failed to relay message\");\n            }\n        }\n\n        // Clear the reentrancy lock for `versionedHash`\n        reentrancyLocks[versionedHash] = false;\n    }\n\n    /**\n     * @notice Retrieves the address of the contract or wallet that initiated the currently\n     *         executing message on the other chain. Will throw an error if there is no message\n     *         currently being executed. Allows the recipient of a call to see who triggered it.\n     *\n     * @return Address of the sender of the currently executing message on the other chain.\n     */\n    function xDomainMessageSender() external view returns (address) {\n        require(\n            xDomainMsgSender != Constants.DEFAULT_L2_SENDER,\n            \"CrossDomainMessenger: xDomainMessageSender is not set\"\n        );\n\n        return xDomainMsgSender;\n    }\n\n    /**\n     * @notice Retrieves the next message nonce. Message version will be added to the upper two\n     *         bytes of the message nonce. Message version allows us to treat messages as having\n     *         different structures.\n     *\n     * @return Nonce of the next message to be sent, with added message version.\n     */\n    function messageNonce() public view returns (uint256) {\n        return Encoding.encodeVersionedNonce(msgNonce, MESSAGE_VERSION);\n    }\n\n    /**\n     * @notice Computes the amount of gas required to guarantee that a given message will be\n     *         received on the other chain without running out of gas. Guaranteeing that a message\n     *         will not run out of gas is important because this ensures that a message can always\n     *         be replayed on the other chain if it fails to execute completely.\n     *\n     * @param _message     Message to compute the amount of required gas for.\n     * @param _minGasLimit Minimum desired gas limit when message goes to target.\n     *\n     * @return Amount of gas required to guarantee message receipt.\n     */\n    function baseGas(bytes calldata _message, uint32 _minGasLimit) public pure returns (uint64) {\n        // We peform the following math on uint64s to avoid overflow errors. Multiplying the\n        // by MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR would otherwise limit the _minGasLimit to\n        // type(uint32).max / MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR ~= 4.2m.\n        return\n            // Dynamic overhead\n            ((uint64(_minGasLimit) * MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR) /\n                MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR) +\n            // Calldata overhead\n            (uint64(_message.length) * MIN_GAS_CALLDATA_OVERHEAD) +\n            // Constant overhead\n            MIN_GAS_CONSTANT_OVERHEAD;\n    }\n\n    /**\n     * @notice Intializer.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __CrossDomainMessenger_init() internal onlyInitializing {\n        xDomainMsgSender = Constants.DEFAULT_L2_SENDER;\n    }\n\n    /**\n     * @notice Sends a low-level message to the other messenger. Needs to be implemented by child\n     *         contracts because the logic for this depends on the network where the messenger is\n     *         being deployed.\n     *\n     * @param _to       Recipient of the message on the other chain.\n     * @param _gasLimit Minimum gas limit the message can be executed with.\n     * @param _value    Amount of ETH to send with the message.\n     * @param _data     Message data.\n     */\n    function _sendMessage(\n        address _to,\n        uint64 _gasLimit,\n        uint256 _value,\n        bytes memory _data\n    ) internal virtual;\n\n    /**\n     * @notice Checks whether the message is coming from the other messenger. Implemented by child\n     *         contracts because the logic for this depends on the network where the messenger is\n     *         being deployed.\n     *\n     * @return Whether the message is coming from the other messenger.\n     */\n    function _isOtherMessenger() internal view virtual returns (bool);\n\n    /**\n     * @notice Checks whether a given call target is a system address that could cause the\n     *         messenger to peform an unsafe action. This is NOT a mechanism for blocking user\n     *         addresses. This is ONLY used to prevent the execution of messages to specific\n     *         system addresses that could cause security issues, e.g., having the\n     *         CrossDomainMessenger send messages to itself.\n     *\n     * @param _target Address of the contract to check.\n     *\n     * @return Whether or not the address is an unsafe system address.\n     */\n    function _isUnsafeTarget(address _target) internal view virtual returns (bool);\n}\n"},"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { CrossDomainMessenger } from \"./CrossDomainMessenger.sol\";\nimport { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\n\n/**\n * @title ERC721Bridge\n * @notice ERC721Bridge is a base contract for the L1 and L2 ERC721 bridges.\n */\nabstract contract ERC721Bridge {\n    /**\n     * @notice Messenger contract on this domain.\n     */\n    CrossDomainMessenger public immutable MESSENGER;\n\n    /**\n     * @notice Address of the bridge on the other network.\n     */\n    address public immutable OTHER_BRIDGE;\n\n    /**\n     * @notice Reserve extra slots (to a total of 50) in the storage layout for future upgrades.\n     */\n    uint256[49] private __gap;\n\n    /**\n     * @notice Emitted when an ERC721 bridge to the other network is initiated.\n     *\n     * @param localToken  Address of the token on this domain.\n     * @param remoteToken Address of the token on the remote domain.\n     * @param from        Address that initiated bridging action.\n     * @param to          Address to receive the token.\n     * @param tokenId     ID of the specific token deposited.\n     * @param extraData   Extra data for use on the client-side.\n     */\n    event ERC721BridgeInitiated(\n        address indexed localToken,\n        address indexed remoteToken,\n        address indexed from,\n        address to,\n        uint256 tokenId,\n        bytes extraData\n    );\n\n    /**\n     * @notice Emitted when an ERC721 bridge from the other network is finalized.\n     *\n     * @param localToken  Address of the token on this domain.\n     * @param remoteToken Address of the token on the remote domain.\n     * @param from        Address that initiated bridging action.\n     * @param to          Address to receive the token.\n     * @param tokenId     ID of the specific token deposited.\n     * @param extraData   Extra data for use on the client-side.\n     */\n    event ERC721BridgeFinalized(\n        address indexed localToken,\n        address indexed remoteToken,\n        address indexed from,\n        address to,\n        uint256 tokenId,\n        bytes extraData\n    );\n\n    /**\n     * @notice Ensures that the caller is a cross-chain message from the other bridge.\n     */\n    modifier onlyOtherBridge() {\n        require(\n            msg.sender == address(MESSENGER) && MESSENGER.xDomainMessageSender() == OTHER_BRIDGE,\n            \"ERC721Bridge: function can only be called from the other bridge\"\n        );\n        _;\n    }\n\n    /**\n     * @param _messenger   Address of the CrossDomainMessenger on this network.\n     * @param _otherBridge Address of the ERC721 bridge on the other network.\n     */\n    constructor(address _messenger, address _otherBridge) {\n        require(_messenger != address(0), \"ERC721Bridge: messenger cannot be address(0)\");\n        require(_otherBridge != address(0), \"ERC721Bridge: other bridge cannot be address(0)\");\n\n        MESSENGER = CrossDomainMessenger(_messenger);\n        OTHER_BRIDGE = _otherBridge;\n    }\n\n    /**\n     * @custom:legacy\n     * @notice Legacy getter for messenger contract.\n     *\n     * @return Messenger contract on this domain.\n     */\n    function messenger() external view returns (CrossDomainMessenger) {\n        return MESSENGER;\n    }\n\n    /**\n     * @custom:legacy\n     * @notice Legacy getter for other bridge address.\n     *\n     * @return Address of the bridge on the other network.\n     */\n    function otherBridge() external view returns (address) {\n        return OTHER_BRIDGE;\n    }\n\n    /**\n     * @notice Initiates a bridge of an NFT to the caller's account on the other chain. Note that\n     *         this function can only be called by EOAs. Smart contract wallets should use the\n     *         `bridgeERC721To` function after ensuring that the recipient address on the remote\n     *         chain exists. Also note that the current owner of the token on this chain must\n     *         approve this contract to operate the NFT before it can be bridged.\n     *         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n     *         bridge only supports ERC721s originally deployed on Ethereum. Users will need to\n     *         wait for the one-week challenge period to elapse before their Optimism-native NFT\n     *         can be refunded on L2.\n     *\n     * @param _localToken  Address of the ERC721 on this domain.\n     * @param _remoteToken Address of the ERC721 on the remote domain.\n     * @param _tokenId     Token ID to bridge.\n     * @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n     * @param _extraData   Optional data to forward to the other chain. Data supplied here will not\n     *                     be used to execute any code on the other chain and is only emitted as\n     *                     extra data for the convenience of off-chain tooling.\n     */\n    function bridgeERC721(\n        address _localToken,\n        address _remoteToken,\n        uint256 _tokenId,\n        uint32 _minGasLimit,\n        bytes calldata _extraData\n    ) external {\n        // Modifier requiring sender to be EOA. This prevents against a user error that would occur\n        // if the sender is a smart contract wallet that has a different address on the remote chain\n        // (or doesn't have an address on the remote chain at all). The user would fail to receive\n        // the NFT if they use this function because it sends the NFT to the same address as the\n        // caller. This check could be bypassed by a malicious contract via initcode, but it takes\n        // care of the user error we want to avoid.\n        require(!Address.isContract(msg.sender), \"ERC721Bridge: account is not externally owned\");\n\n        _initiateBridgeERC721(\n            _localToken,\n            _remoteToken,\n            msg.sender,\n            msg.sender,\n            _tokenId,\n            _minGasLimit,\n            _extraData\n        );\n    }\n\n    /**\n     * @notice Initiates a bridge of an NFT to some recipient's account on the other chain. Note\n     *         that the current owner of the token on this chain must approve this contract to\n     *         operate the NFT before it can be bridged.\n     *         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n     *         bridge only supports ERC721s originally deployed on Ethereum. Users will need to\n     *         wait for the one-week challenge period to elapse before their Optimism-native NFT\n     *         can be refunded on L2.\n     *\n     * @param _localToken  Address of the ERC721 on this domain.\n     * @param _remoteToken Address of the ERC721 on the remote domain.\n     * @param _to          Address to receive the token on the other domain.\n     * @param _tokenId     Token ID to bridge.\n     * @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n     * @param _extraData   Optional data to forward to the other chain. Data supplied here will not\n     *                     be used to execute any code on the other chain and is only emitted as\n     *                     extra data for the convenience of off-chain tooling.\n     */\n    function bridgeERC721To(\n        address _localToken,\n        address _remoteToken,\n        address _to,\n        uint256 _tokenId,\n        uint32 _minGasLimit,\n        bytes calldata _extraData\n    ) external {\n        require(_to != address(0), \"ERC721Bridge: nft recipient cannot be address(0)\");\n\n        _initiateBridgeERC721(\n            _localToken,\n            _remoteToken,\n            msg.sender,\n            _to,\n            _tokenId,\n            _minGasLimit,\n            _extraData\n        );\n    }\n\n    /**\n     * @notice Internal function for initiating a token bridge to the other domain.\n     *\n     * @param _localToken  Address of the ERC721 on this domain.\n     * @param _remoteToken Address of the ERC721 on the remote domain.\n     * @param _from        Address of the sender on this domain.\n     * @param _to          Address to receive the token on the other domain.\n     * @param _tokenId     Token ID to bridge.\n     * @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n     * @param _extraData   Optional data to forward to the other domain. Data supplied here will\n     *                     not be used to execute any code on the other domain and is only emitted\n     *                     as extra data for the convenience of off-chain tooling.\n     */\n    function _initiateBridgeERC721(\n        address _localToken,\n        address _remoteToken,\n        address _from,\n        address _to,\n        uint256 _tokenId,\n        uint32 _minGasLimit,\n        bytes calldata _extraData\n    ) internal virtual;\n}\n"},"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {\n    IERC721Enumerable\n} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n\n/**\n * @title IOptimismMintableERC721\n * @notice Interface for contracts that are compatible with the OptimismMintableERC721 standard.\n *         Tokens that follow this standard can be easily transferred across the ERC721 bridge.\n */\ninterface IOptimismMintableERC721 is IERC721Enumerable {\n    /**\n     * @notice Emitted when a token is minted.\n     *\n     * @param account Address of the account the token was minted to.\n     * @param tokenId Token ID of the minted token.\n     */\n    event Mint(address indexed account, uint256 tokenId);\n\n    /**\n     * @notice Emitted when a token is burned.\n     *\n     * @param account Address of the account the token was burned from.\n     * @param tokenId Token ID of the burned token.\n     */\n    event Burn(address indexed account, uint256 tokenId);\n\n    /**\n     * @notice Mints some token ID for a user, checking first that contract recipients\n     *         are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * @param _to      Address of the user to mint the token for.\n     * @param _tokenId Token ID to mint.\n     */\n    function safeMint(address _to, uint256 _tokenId) external;\n\n    /**\n     * @notice Burns a token ID from a user.\n     *\n     * @param _from    Address of the user to burn the token from.\n     * @param _tokenId Token ID to burn.\n     */\n    function burn(address _from, uint256 _tokenId) external;\n\n    /**\n     * @notice Chain ID of the chain where the remote token is deployed.\n     */\n    function REMOTE_CHAIN_ID() external view returns (uint256);\n\n    /**\n     * @notice Address of the token on the remote domain.\n     */\n    function REMOTE_TOKEN() external view returns (address);\n\n    /**\n     * @notice Address of the ERC721 bridge on this network.\n     */\n    function BRIDGE() external view returns (address);\n\n    /**\n     * @notice Chain ID of the chain where the remote token is deployed.\n     */\n    function remoteChainId() external view returns (uint256);\n\n    /**\n     * @notice Address of the token on the remote domain.\n     */\n    function remoteToken() external view returns (address);\n\n    /**\n     * @notice Address of the ERC721 bridge on this network.\n     */\n    function bridge() external view returns (address);\n}\n"},"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { Strings } from \"@openzeppelin/contracts/utils/Strings.sol\";\n\n/**\n * @title Semver\n * @notice Semver is a simple contract for managing contract versions.\n */\ncontract Semver {\n    /**\n     * @notice Contract version number (major).\n     */\n    uint256 private immutable MAJOR_VERSION;\n\n    /**\n     * @notice Contract version number (minor).\n     */\n    uint256 private immutable MINOR_VERSION;\n\n    /**\n     * @notice Contract version number (patch).\n     */\n    uint256 private immutable PATCH_VERSION;\n\n    /**\n     * @param _major Version number (major).\n     * @param _minor Version number (minor).\n     * @param _patch Version number (patch).\n     */\n    constructor(\n        uint256 _major,\n        uint256 _minor,\n        uint256 _patch\n    ) {\n        MAJOR_VERSION = _major;\n        MINOR_VERSION = _minor;\n        PATCH_VERSION = _patch;\n    }\n\n    /**\n     * @notice Returns the full semver contract version.\n     *\n     * @return Semver contract version as a string.\n     */\n    function version() public view returns (string memory) {\n        return\n            string(\n                abi.encodePacked(\n                    Strings.toString(MAJOR_VERSION),\n                    \".\",\n                    Strings.toString(MINOR_VERSION),\n                    \".\",\n                    Strings.toString(PATCH_VERSION)\n                )\n            );\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.2) (utils/introspection/ERC165Checker.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface,\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return\n            _supportsERC165Interface(account, type(IERC165).interfaceId) &&\n            !_supportsERC165Interface(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) && _supportsERC165Interface(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds)\n        internal\n        view\n        returns (bool[] memory)\n    {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = _supportsERC165Interface(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in _interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!_supportsERC165Interface(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     * Interface identification is specified in ERC-165.\n     */\n    function _supportsERC165Interface(address account, bytes4 interfaceId) private view returns (bool) {\n        // prepare call\n        bytes memory encodedParams = abi.encodeWithSelector(IERC165.supportsInterface.selector, interfaceId);\n\n        // perform static call\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly {\n            success := staticcall(30000, account, add(encodedParams, 0x20), mload(encodedParams), 0x00, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0x00)\n        }\n\n        return success && returnSize >= 0x20 && returnValue > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"contracts/L1Bridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { L1ERC721Bridge } from \"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol\";\n\ncontract L1Bridge is L1ERC721Bridge {\n    /**\n     * @custom:semver 1.0.0\n     *\n     * @param _messenger   Address of the CrossDomainMessenger on this network.\n     * @param _otherBridge Address of the ERC721 bridge on the other network.\n     */\n    constructor(address _messenger, address _otherBridge)\n        L1ERC721Bridge(_messenger, _otherBridge)\n    {}\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol","exportedSymbols":{"ERC721Bridge":[2267],"IERC721":[2917],"L1ERC721Bridge":[199],"L2ERC721Bridge":[401],"Semver":[2407]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol","file":"../universal/ERC721Bridge.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":200,"sourceUnit":2268,"src":"57:61:0","symbolAliases":[{"foreign":{"id":2,"name":"ERC721Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"66:12:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":200,"sourceUnit":2918,"src":"119:75:0","symbolAliases":[{"foreign":{"id":4,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"128:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol","file":"../L2/L2ERC721Bridge.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":200,"sourceUnit":402,"src":"195:58:0","symbolAliases":[{"foreign":{"id":6,"name":"L2ERC721Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"204:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol","file":"../universal/Semver.sol","id":9,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":200,"sourceUnit":2408,"src":"254:49:0","symbolAliases":[{"foreign":{"id":8,"name":"Semver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"263:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11,"name":"ERC721Bridge","nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"622:12:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"622:12:0"},{"baseName":{"id":13,"name":"Semver","nodeType":"IdentifierPath","referencedDeclaration":2407,"src":"636:6:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"636:6:0"}],"canonicalName":"L1ERC721Bridge","contractDependencies":[],"contractKind":"contract","documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"305:289:0","text":" @title L1ERC721Bridge\n @notice The L1 ERC721 bridge is a contract which works together with the L2 ERC721 bridge to\n         make it possible to transfer ERC721 tokens from Ethereum to Optimism. This contract\n         acts as an escrow for ERC721 tokens deposited into L2."},"fullyImplemented":true,"id":199,"linearizedBaseContracts":[199,2407,2267],"name":"L1ERC721Bridge","nameLocation":"604:14:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"649:166:0","text":" @notice Mapping of L1 token to L2 token to ID to boolean, indicating if the given L1 token\n         by ID was deposited for a given L2 token."},"functionSelector":"5d93a3fc","id":23,"mutability":"mutable","name":"deposits","nameLocation":"892:8:0","nodeType":"VariableDeclaration","scope":199,"src":"820:80:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => bool)))"},"typeName":{"id":22,"keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"820:64:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => bool)))"},"valueType":{"id":21,"keyType":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"847:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"839:44:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueType":{"id":20,"keyType":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"866:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"858:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueType":{"id":19,"name":"bool","nodeType":"ElementaryTypeName","src":"877:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}}},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"1245:2:0","statements":[]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"907:204:0","text":" @custom:semver 1.0.0\n @param _messenger   Address of the CrossDomainMessenger on this network.\n @param _otherBridge Address of the ERC721 bridge on the other network."},"id":41,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"31","id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1185:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1188:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1191:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":34,"kind":"baseConstructorSpecifier","modifierName":{"id":30,"name":"Semver","nodeType":"IdentifierPath","referencedDeclaration":2407,"src":"1178:6:0"},"nodeType":"ModifierInvocation","src":"1178:15:0"},{"arguments":[{"id":36,"name":"_messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1215:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":37,"name":"_otherBridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1227:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":38,"kind":"baseConstructorSpecifier","modifierName":{"id":35,"name":"ERC721Bridge","nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"1202:12:0"},"nodeType":"ModifierInvocation","src":"1202:38:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"mutability":"mutable","name":"_messenger","nameLocation":"1136:10:0","nodeType":"VariableDeclaration","scope":41,"src":"1128:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"_otherBridge","nameLocation":"1156:12:0","nodeType":"VariableDeclaration","scope":41,"src":"1148:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1127:42:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1245:0:0"},"scope":199,"src":"1116:131:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":113,"nodeType":"Block","src":"2252:877:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":60,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2270:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":63,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2293:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_L1ERC721Bridge_$199","typeString":"contract L1ERC721Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_L1ERC721Bridge_$199","typeString":"contract L1ERC721Bridge"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2285:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"2285:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2285:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2270:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e6f742062652073656c66","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2300:44:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832","typeString":"literal_string \"L1ERC721Bridge: local token cannot be self\""},"value":"L1ERC721Bridge: local token cannot be self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832","typeString":"literal_string \"L1ERC721Bridge: local token cannot be self\""}],"id":59,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2262:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2262:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":68,"nodeType":"ExpressionStatement","src":"2262:83:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":70,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"2469:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => bool)))"}},"id":72,"indexExpression":{"id":71,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2478:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2469:21:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":74,"indexExpression":{"id":73,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"2491:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2469:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":76,"indexExpression":{"id":75,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2505:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2469:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":77,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2518:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2469:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c314552433732314272696467653a20546f6b656e204944206973206e6f7420657363726f77656420696e20746865204c3120427269646765","id":79,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2536:59:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af","typeString":"literal_string \"L1ERC721Bridge: Token ID is not escrowed in the L1 Bridge\""},"value":"L1ERC721Bridge: Token ID is not escrowed in the L1 Bridge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af","typeString":"literal_string \"L1ERC721Bridge: Token ID is not escrowed in the L1 Bridge\""}],"id":69,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2448:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2448:157:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":81,"nodeType":"ExpressionStatement","src":"2448:157:0"},{"expression":{"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":82,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"2727:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => bool)))"}},"id":86,"indexExpression":{"id":83,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2736:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2727:21:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":87,"indexExpression":{"id":84,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"2749:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2727:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":88,"indexExpression":{"id":85,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2763:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2727:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":89,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2775:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2727:53:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":91,"nodeType":"ExpressionStatement","src":"2727:53:0"},{"expression":{"arguments":[{"arguments":[{"id":98,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2948:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_L1ERC721Bridge_$199","typeString":"contract L1ERC721Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_L1ERC721Bridge_$199","typeString":"contract L1ERC721Bridge"}],"id":97,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2940:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","typeDescriptions":{}}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2940:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":100,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"2955:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":101,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"2960:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":93,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2910:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":92,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"2902:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2917_$","typeString":"type(contract IERC721)"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2902:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2917","typeString":"contract IERC721"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2872,"src":"2902:37:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2902:67:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"2902:67:0"},{"eventCall":{"arguments":[{"id":105,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"3062:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":106,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"3075:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"3089:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":108,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"3096:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":52,"src":"3101:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":110,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3111:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":104,"name":"ERC721BridgeFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"3040:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,address,uint256,bytes memory)"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3040:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":112,"nodeType":"EmitStatement","src":"3035:87:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1253:769:0","text":" @notice Completes an ERC721 bridge from the other domain and sends the ERC721 token to the\n         recipient on this domain.\n @param _localToken  Address of the ERC721 token on this domain.\n @param _remoteToken Address of the ERC721 token on the other domain.\n @param _from        Address that triggered the bridge on the other domain.\n @param _to          Address to receive the token on this domain.\n @param _tokenId     ID of the token being deposited.\n @param _extraData   Optional data to forward to L2. Data supplied here will not be used to\n                     execute any code on L2 and is only emitted as extra data for the\n                     convenience of off-chain tooling."},"functionSelector":"761f4493","id":114,"implemented":true,"kind":"function","modifiers":[{"id":57,"kind":"modifierInvocation","modifierName":{"id":56,"name":"onlyOtherBridge","nodeType":"IdentifierPath","referencedDeclaration":2115,"src":"2236:15:0"},"nodeType":"ModifierInvocation","src":"2236:15:0"}],"name":"finalizeBridgeERC721","nameLocation":"2036:20:0","nodeType":"FunctionDefinition","parameters":{"id":55,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"_localToken","nameLocation":"2074:11:0","nodeType":"VariableDeclaration","scope":114,"src":"2066:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"_remoteToken","nameLocation":"2103:12:0","nodeType":"VariableDeclaration","scope":114,"src":"2095:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"_from","nameLocation":"2133:5:0","nodeType":"VariableDeclaration","scope":114,"src":"2125:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2125:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"mutability":"mutable","name":"_to","nameLocation":"2156:3:0","nodeType":"VariableDeclaration","scope":114,"src":"2148:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52,"mutability":"mutable","name":"_tokenId","nameLocation":"2177:8:0","nodeType":"VariableDeclaration","scope":114,"src":"2169:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"2169:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":54,"mutability":"mutable","name":"_extraData","nameLocation":"2210:10:0","nodeType":"VariableDeclaration","scope":114,"src":"2195:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":53,"name":"bytes","nodeType":"ElementaryTypeName","src":"2195:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2056:170:0"},"returnParameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"2252:0:0"},"scope":199,"src":"2027:1102:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2266],"body":{"id":197,"nodeType":"Block","src":"3431:812:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":134,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"3449:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3473:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3465:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"3465:7:0","typeDescriptions":{}}},"id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3465:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3449:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e6e6f742062652061646472657373283029","id":140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3477:51:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1","typeString":"literal_string \"L1ERC721Bridge: remote token cannot be address(0)\""},"value":"L1ERC721Bridge: remote token cannot be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1","typeString":"literal_string \"L1ERC721Bridge: remote token cannot be address(0)\""}],"id":133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3441:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3441:88:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":142,"nodeType":"ExpressionStatement","src":"3441:88:0"},{"assignments":[144],"declarations":[{"constant":false,"id":144,"mutability":"mutable","name":"message","nameLocation":"3632:7:0","nodeType":"VariableDeclaration","scope":197,"src":"3619:20:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":143,"name":"bytes","nodeType":"ElementaryTypeName","src":"3619:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":157,"initialValue":{"arguments":[{"expression":{"expression":{"id":147,"name":"L2ERC721Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"3678:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_L2ERC721Bridge_$401_$","typeString":"type(contract L2ERC721Bridge)"}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"finalizeBridgeERC721","nodeType":"MemberAccess","referencedDeclaration":303,"src":"3678:35:0","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function L2ERC721Bridge.finalizeBridgeERC721(address,address,address,address,uint256,bytes calldata)"}},"id":149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"3678:44:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":150,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"3736:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":151,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3762:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":152,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3787:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":153,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3806:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":154,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"3823:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":155,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3845:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":145,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3642:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"3642:22:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3642:223:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3619:246:0"},{"expression":{"id":166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":158,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"3910:8:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$_$","typeString":"mapping(address => mapping(address => mapping(uint256 => bool)))"}},"id":162,"indexExpression":{"id":159,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3919:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3910:21:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":163,"indexExpression":{"id":160,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"3932:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3910:35:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":164,"indexExpression":{"id":161,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"3946:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3910:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3958:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3910:52:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":167,"nodeType":"ExpressionStatement","src":"3910:52:0"},{"expression":{"arguments":[{"id":172,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"4006:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":175,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4021:4:0","typeDescriptions":{"typeIdentifier":"t_contract$_L1ERC721Bridge_$199","typeString":"contract L1ERC721Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_L1ERC721Bridge_$199","typeString":"contract L1ERC721Bridge"}],"id":174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4013:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:0","typeDescriptions":{}}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4013:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":177,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"4028:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":169,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"3980:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":168,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"3972:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2917_$","typeString":"type(contract IERC721)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3972:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$2917","typeString":"contract IERC721"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2882,"src":"3972:33:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3972:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":179,"nodeType":"ExpressionStatement","src":"3972:65:0"},{"expression":{"arguments":[{"id":183,"name":"OTHER_BRIDGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4103:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":184,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":144,"src":"4117:7:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":185,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"4126:12:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":180,"name":"MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"4081:9:0","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sendMessage","nodeType":"MemberAccess","referencedDeclaration":1748,"src":"4081:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$","typeString":"function (address,bytes memory,uint32) payable external"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4081:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":187,"nodeType":"ExpressionStatement","src":"4081:58:0"},{"eventCall":{"arguments":[{"id":189,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"4176:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":190,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":119,"src":"4189:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":191,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"4203:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":192,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"4210:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":193,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"4215:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":194,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4225:10:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":188,"name":"ERC721BridgeInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"4154:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,address,uint256,bytes memory)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4154:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":196,"nodeType":"EmitStatement","src":"4149:87:0"}]},"documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"3135:43:0","text":" @inheritdoc ERC721Bridge"},"id":198,"implemented":true,"kind":"function","modifiers":[],"name":"_initiateBridgeERC721","nameLocation":"3192:21:0","nodeType":"FunctionDefinition","overrides":{"id":131,"nodeType":"OverrideSpecifier","overrides":[],"src":"3422:8:0"},"parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":117,"mutability":"mutable","name":"_localToken","nameLocation":"3231:11:0","nodeType":"VariableDeclaration","scope":198,"src":"3223:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"3223:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"_remoteToken","nameLocation":"3260:12:0","nodeType":"VariableDeclaration","scope":198,"src":"3252:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"_from","nameLocation":"3290:5:0","nodeType":"VariableDeclaration","scope":198,"src":"3282:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"3282:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"_to","nameLocation":"3313:3:0","nodeType":"VariableDeclaration","scope":198,"src":"3305:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"3305:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"_tokenId","nameLocation":"3334:8:0","nodeType":"VariableDeclaration","scope":198,"src":"3326:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"_minGasLimit","nameLocation":"3359:12:0","nodeType":"VariableDeclaration","scope":198,"src":"3352:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":126,"name":"uint32","nodeType":"ElementaryTypeName","src":"3352:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"_extraData","nameLocation":"3396:10:0","nodeType":"VariableDeclaration","scope":198,"src":"3381:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":128,"name":"bytes","nodeType":"ElementaryTypeName","src":"3381:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3213:199:0"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"3431:0:0"},"scope":199,"src":"3183:1060:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":200,"src":"595:3650:0","usedErrors":[]}],"src":"32:4214:0"},"id":0},"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol","exportedSymbols":{"ERC165Checker":[3663],"ERC721Bridge":[2267],"IOptimismMintableERC721":[2341],"L1ERC721Bridge":[199],"L2ERC721Bridge":[401],"Semver":[2407]},"id":402,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol","file":"../universal/ERC721Bridge.sol","id":203,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":402,"sourceUnit":2268,"src":"57:61:1","symbolAliases":[{"foreign":{"id":202,"name":"ERC721Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"66:12:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","file":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","id":205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":402,"sourceUnit":3664,"src":"119:94:1","symbolAliases":[{"foreign":{"id":204,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"128:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol","file":"../L1/L1ERC721Bridge.sol","id":207,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":402,"sourceUnit":200,"src":"214:58:1","symbolAliases":[{"foreign":{"id":206,"name":"L1ERC721Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"223:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol","file":"../universal/IOptimismMintableERC721.sol","id":209,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":402,"sourceUnit":2342,"src":"273:83:1","symbolAliases":[{"foreign":{"id":208,"name":"IOptimismMintableERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"282:23:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol","file":"../universal/Semver.sol","id":211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":402,"sourceUnit":2408,"src":"357:49:1","symbolAliases":[{"foreign":{"id":210,"name":"Semver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"366:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":213,"name":"ERC721Bridge","nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"1147:12:1"},"id":214,"nodeType":"InheritanceSpecifier","src":"1147:12:1"},{"baseName":{"id":215,"name":"Semver","nodeType":"IdentifierPath","referencedDeclaration":2407,"src":"1161:6:1"},"id":216,"nodeType":"InheritanceSpecifier","src":"1161:6:1"}],"canonicalName":"L2ERC721Bridge","contractDependencies":[],"contractKind":"contract","documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"408:711:1","text":" @title L2ERC721Bridge\n @notice The L2 ERC721 bridge is a contract which works together with the L1 ERC721 bridge to\n         make it possible to transfer ERC721 tokens from Ethereum to Optimism. This contract\n         acts as a minter for new tokens when it hears about deposits into the L1 ERC721 bridge.\n         This contract also acts as a burner for tokens being withdrawn.\n         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n         bridge ONLY supports ERC721s originally deployed on Ethereum. Users will need to\n         wait for the one-week challenge period to elapse before their Optimism-native NFT\n         can be refunded on L2."},"fullyImplemented":true,"id":401,"linearizedBaseContracts":[401,2407,2267],"name":"L2ERC721Bridge","nameLocation":"1129:14:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":233,"nodeType":"Block","src":"1512:2:1","statements":[]},"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"1174:204:1","text":" @custom:semver 1.0.0\n @param _messenger   Address of the CrossDomainMessenger on this network.\n @param _otherBridge Address of the ERC721 bridge on the other network."},"id":234,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"31","id":224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1452:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1455:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1458:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":227,"kind":"baseConstructorSpecifier","modifierName":{"id":223,"name":"Semver","nodeType":"IdentifierPath","referencedDeclaration":2407,"src":"1445:6:1"},"nodeType":"ModifierInvocation","src":"1445:15:1"},{"arguments":[{"id":229,"name":"_messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1482:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":230,"name":"_otherBridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1494:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":231,"kind":"baseConstructorSpecifier","modifierName":{"id":228,"name":"ERC721Bridge","nodeType":"IdentifierPath","referencedDeclaration":2267,"src":"1469:12:1"},"nodeType":"ModifierInvocation","src":"1469:38:1"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"_messenger","nameLocation":"1403:10:1","nodeType":"VariableDeclaration","scope":234,"src":"1395:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"_otherBridge","nameLocation":"1423:12:1","nodeType":"VariableDeclaration","scope":234,"src":"1415:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":220,"name":"address","nodeType":"ElementaryTypeName","src":"1415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1394:42:1"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"1512:0:1"},"scope":401,"src":"1383:131:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":302,"nodeType":"Block","src":"2519:1030:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":253,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2537:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":256,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2560:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_L2ERC721Bridge_$401","typeString":"contract L2ERC721Bridge"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_L2ERC721Bridge_$401","typeString":"contract L2ERC721Bridge"}],"id":255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2552:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"2552:7:1","typeDescriptions":{}}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2552:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2537:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c324552433732314272696467653a206c6f63616c20746f6b656e2063616e6e6f742062652073656c66","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2567:44:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911","typeString":"literal_string \"L2ERC721Bridge: local token cannot be self\""},"value":"L2ERC721Bridge: local token cannot be self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911","typeString":"literal_string \"L2ERC721Bridge: local token cannot be self\""}],"id":252,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2529:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2529:83:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":261,"nodeType":"ExpressionStatement","src":"2529:83:1"},{"expression":{"arguments":[{"arguments":[{"id":265,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2794:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":267,"name":"IOptimismMintableERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"2812:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOptimismMintableERC721_$2341_$","typeString":"type(contract IOptimismMintableERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IOptimismMintableERC721_$2341_$","typeString":"type(contract IOptimismMintableERC721)"}],"id":266,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2807:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2807:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IOptimismMintableERC721_$2341","typeString":"type(contract IOptimismMintableERC721)"}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2807:41:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":263,"name":"ERC165Checker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3663,"src":"2762:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC165Checker_$3663_$","typeString":"type(library ERC165Checker)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3519,"src":"2762:31:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2762:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c324552433732314272696467653a206c6f63616c20746f6b656e20696e74657266616365206973206e6f7420636f6d706c69616e74","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:56:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad","typeString":"literal_string \"L2ERC721Bridge: local token interface is not compliant\""},"value":"L2ERC721Bridge: local token interface is not compliant"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad","typeString":"literal_string \"L2ERC721Bridge: local token interface is not compliant\""}],"id":262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2741:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2741:188:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"ExpressionStatement","src":"2741:188:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":275,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"2961:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":277,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3001:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":276,"name":"IOptimismMintableERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"2977:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOptimismMintableERC721_$2341_$","typeString":"type(contract IOptimismMintableERC721)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2977:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOptimismMintableERC721_$2341","typeString":"contract IOptimismMintableERC721"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"remoteToken","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"2977:48:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2977:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2961:66:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c324552433732314272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204f7074696d69736d204d696e7461626c6520455243373231206c6f63616c20746f6b656e","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3041:77:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd","typeString":"literal_string \"L2ERC721Bridge: wrong remote token for Optimism Mintable ERC721 local token\""},"value":"L2ERC721Bridge: wrong remote token for Optimism Mintable ERC721 local token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd","typeString":"literal_string \"L2ERC721Bridge: wrong remote token for Optimism Mintable ERC721 local token\""}],"id":274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2940:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2940:188:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"2940:188:1"},{"expression":{"arguments":[{"id":289,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3375:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":290,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3380:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":286,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3353:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":285,"name":"IOptimismMintableERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"3329:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOptimismMintableERC721_$2341_$","typeString":"type(contract IOptimismMintableERC721)"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3329:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOptimismMintableERC721_$2341","typeString":"contract IOptimismMintableERC721"}},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeMint","nodeType":"MemberAccess","referencedDeclaration":2296,"src":"3329:45:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3329:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":292,"nodeType":"ExpressionStatement","src":"3329:60:1"},{"eventCall":{"arguments":[{"id":294,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3482:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":295,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":239,"src":"3495:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":241,"src":"3509:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":297,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"3516:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":298,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":245,"src":"3521:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":299,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3531:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":293,"name":"ERC721BridgeFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"3460:21:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,address,uint256,bytes memory)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3460:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":301,"nodeType":"EmitStatement","src":"3455:87:1"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"1520:769:1","text":" @notice Completes an ERC721 bridge from the other domain and sends the ERC721 token to the\n         recipient on this domain.\n @param _localToken  Address of the ERC721 token on this domain.\n @param _remoteToken Address of the ERC721 token on the other domain.\n @param _from        Address that triggered the bridge on the other domain.\n @param _to          Address to receive the token on this domain.\n @param _tokenId     ID of the token being deposited.\n @param _extraData   Optional data to forward to L1. Data supplied here will not be used to\n                     execute any code on L1 and is only emitted as extra data for the\n                     convenience of off-chain tooling."},"functionSelector":"761f4493","id":303,"implemented":true,"kind":"function","modifiers":[{"id":250,"kind":"modifierInvocation","modifierName":{"id":249,"name":"onlyOtherBridge","nodeType":"IdentifierPath","referencedDeclaration":2115,"src":"2503:15:1"},"nodeType":"ModifierInvocation","src":"2503:15:1"}],"name":"finalizeBridgeERC721","nameLocation":"2303:20:1","nodeType":"FunctionDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"_localToken","nameLocation":"2341:11:1","nodeType":"VariableDeclaration","scope":303,"src":"2333:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"2333:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"_remoteToken","nameLocation":"2370:12:1","nodeType":"VariableDeclaration","scope":303,"src":"2362:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"2362:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"_from","nameLocation":"2400:5:1","nodeType":"VariableDeclaration","scope":303,"src":"2392:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"2392:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"_to","nameLocation":"2423:3:1","nodeType":"VariableDeclaration","scope":303,"src":"2415:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"2415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"_tokenId","nameLocation":"2444:8:1","nodeType":"VariableDeclaration","scope":303,"src":"2436:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2436:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"_extraData","nameLocation":"2477:10:1","nodeType":"VariableDeclaration","scope":303,"src":"2462:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":246,"name":"bytes","nodeType":"ElementaryTypeName","src":"2462:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2323:170:1"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"2519:0:1"},"scope":401,"src":"2294:1255:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2266],"body":{"id":399,"nodeType":"Block","src":"3851:1530:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":323,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3869:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3893:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3885:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"3885:7:1","typeDescriptions":{}}},"id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3885:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3869:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c324552433732314272696467653a2072656d6f746520746f6b656e2063616e6e6f742062652061646472657373283029","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3897:51:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9","typeString":"literal_string \"L2ERC721Bridge: remote token cannot be address(0)\""},"value":"L2ERC721Bridge: remote token cannot be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9","typeString":"literal_string \"L2ERC721Bridge: remote token cannot be address(0)\""}],"id":322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3861:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3861:88:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":331,"nodeType":"ExpressionStatement","src":"3861:88:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":333,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4054:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":338,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4108:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":335,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4087:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":334,"name":"IOptimismMintableERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"4063:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOptimismMintableERC721_$2341_$","typeString":"type(contract IOptimismMintableERC721)"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4063:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOptimismMintableERC721_$2341","typeString":"contract IOptimismMintableERC721"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"4063:44:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4063:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4054:63:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c324552433732314272696467653a205769746864726177616c206973206e6f74206265696e6720696e69746961746564206279204e4654206f776e6572","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4131:64:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f","typeString":"literal_string \"L2ERC721Bridge: Withdrawal is not being initiated by NFT owner\""},"value":"L2ERC721Bridge: Withdrawal is not being initiated by NFT owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f","typeString":"literal_string \"L2ERC721Bridge: Withdrawal is not being initiated by NFT owner\""}],"id":332,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4033:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4033:172:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"4033:172:1"},{"assignments":[345],"declarations":[{"constant":false,"id":345,"mutability":"mutable","name":"remoteToken","nameLocation":"4364:11:1","nodeType":"VariableDeclaration","scope":399,"src":"4356:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"4356:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":351,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":347,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4402:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":346,"name":"IOptimismMintableERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"4378:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOptimismMintableERC721_$2341_$","typeString":"type(contract IOptimismMintableERC721)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4378:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOptimismMintableERC721_$2341","typeString":"contract IOptimismMintableERC721"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"remoteToken","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"4378:48:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4378:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4356:72:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":353,"name":"remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4459:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":354,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4474:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4459:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c324552433732314272696467653a2072656d6f746520746f6b656e20646f6573206e6f74206d6174636820676976656e2076616c7565","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4500:57:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9","typeString":"literal_string \"L2ERC721Bridge: remote token does not match given value\""},"value":"L2ERC721Bridge: remote token does not match given value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9","typeString":"literal_string \"L2ERC721Bridge: remote token does not match given value\""}],"id":352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4438:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4438:129:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"4438:129:1"},{"expression":{"arguments":[{"id":363,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4789:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":364,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"4796:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":360,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4771:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":359,"name":"IOptimismMintableERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"4747:23:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IOptimismMintableERC721_$2341_$","typeString":"type(contract IOptimismMintableERC721)"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4747:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IOptimismMintableERC721_$2341","typeString":"contract IOptimismMintableERC721"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":2304,"src":"4747:41:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4747:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"4747:58:1"},{"assignments":[368],"declarations":[{"constant":false,"id":368,"mutability":"mutable","name":"message","nameLocation":"4829:7:1","nodeType":"VariableDeclaration","scope":399,"src":"4816:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4816:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":381,"initialValue":{"arguments":[{"expression":{"expression":{"id":371,"name":"L1ERC721Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"4875:14:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_L1ERC721Bridge_$199_$","typeString":"type(contract L1ERC721Bridge)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"finalizeBridgeERC721","nodeType":"MemberAccess","referencedDeclaration":114,"src":"4875:35:1","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function L1ERC721Bridge.finalizeBridgeERC721(address,address,address,address,uint256,bytes calldata)"}},"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4875:44:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":374,"name":"remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"4933:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":375,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4958:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":376,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4983:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":377,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"5002:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":378,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5019:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":379,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5041:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":369,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4839:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4839:22:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4839:222:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4816:245:1"},{"expression":{"arguments":[{"id":385,"name":"OTHER_BRIDGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5186:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":386,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"5200:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":387,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"5209:12:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":382,"name":"MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"5164:9:1","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sendMessage","nodeType":"MemberAccess","referencedDeclaration":1748,"src":"5164:21:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$","typeString":"function (address,bytes memory,uint32) payable external"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5164:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":389,"nodeType":"ExpressionStatement","src":"5164:58:1"},{"eventCall":{"arguments":[{"id":391,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"5315:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":392,"name":"remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"5328:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":393,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"5341:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":394,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"5348:3:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":395,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5353:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":396,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5363:10:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":390,"name":"ERC721BridgeInitiated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"5293:21:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,address,uint256,bytes memory)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5293:81:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"EmitStatement","src":"5288:86:1"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"3555:43:1","text":" @inheritdoc ERC721Bridge"},"id":400,"implemented":true,"kind":"function","modifiers":[],"name":"_initiateBridgeERC721","nameLocation":"3612:21:1","nodeType":"FunctionDefinition","overrides":{"id":320,"nodeType":"OverrideSpecifier","overrides":[],"src":"3842:8:1"},"parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"_localToken","nameLocation":"3651:11:1","nodeType":"VariableDeclaration","scope":400,"src":"3643:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"3643:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"_remoteToken","nameLocation":"3680:12:1","nodeType":"VariableDeclaration","scope":400,"src":"3672:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"3672:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"_from","nameLocation":"3710:5:1","nodeType":"VariableDeclaration","scope":400,"src":"3702:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"3702:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"mutability":"mutable","name":"_to","nameLocation":"3733:3:1","nodeType":"VariableDeclaration","scope":400,"src":"3725:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3725:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"_tokenId","nameLocation":"3754:8:1","nodeType":"VariableDeclaration","scope":400,"src":"3746:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3746:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":316,"mutability":"mutable","name":"_minGasLimit","nameLocation":"3779:12:1","nodeType":"VariableDeclaration","scope":400,"src":"3772:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":315,"name":"uint32","nodeType":"ElementaryTypeName","src":"3772:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"_extraData","nameLocation":"3816:10:1","nodeType":"VariableDeclaration","scope":400,"src":"3801:25:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":317,"name":"bytes","nodeType":"ElementaryTypeName","src":"3801:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3633:199:1"},"returnParameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"3851:0:1"},"scope":401,"src":"3603:1778:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":402,"src":"1120:4263:1","usedErrors":[]}],"src":"32:5352:1"},"id":1},"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol","exportedSymbols":{"Constants":[416]},"id":417,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":403,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Constants","contractDependencies":[],"contractKind":"library","documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"57:278:2","text":" @title Constants\n @notice Constants is a library for storing constants. Simple! Don't put everything in here, just\n         the stuff used in multiple contracts. Constants that only apply to a single contract\n         should be defined in that contract instead."},"fullyImplemented":true,"id":416,"linearizedBaseContracts":[416],"name":"Constants","nameLocation":"344:9:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"360:545:2","text":" @notice Special address to be used as the tx origin for gas estimation calls in the\n         OptimismPortal and CrossDomainMessenger calls. You only need to use this address if\n         the minimum gas limit specified by the user is not actually enough to execute the\n         given message and you're attempting to estimate the actual necessary gas limit. We\n         use address(1) because it's the ecrecover precompile and therefore guaranteed to\n         never have any code on any EVM chain."},"id":411,"mutability":"constant","name":"ESTIMATION_ADDRESS","nameLocation":"936:18:2","nodeType":"VariableDeclaration","scope":416,"src":"910:57:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"31","id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"957:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":407,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:2","typeDescriptions":{}}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"957:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":true,"documentation":{"id":412,"nodeType":"StructuredDocumentation","src":"974:275:2","text":" @notice Value used for the L2 sender storage slot in both the OptimismPortal and the\n         CrossDomainMessenger contracts before an actual sender is set. This value is\n         non-zero to reduce the gas cost of message passing transactions."},"id":415,"mutability":"constant","name":"DEFAULT_L2_SENDER","nameLocation":"1280:17:2","nodeType":"VariableDeclaration","scope":416,"src":"1254:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"1254:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303064456144","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1300:42:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000dEaD"},"visibility":"internal"}],"scope":417,"src":"336:1009:2","usedErrors":[]}],"src":"32:1314:2"},"id":2},"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol","exportedSymbols":{"Encoding":[709],"Hashing":[931],"RLPWriter":[1536],"Types":[1029]},"id":710,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":418,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol","file":"./Types.sol","id":420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":710,"sourceUnit":1030,"src":"57:36:3","symbolAliases":[{"foreign":{"id":419,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"66:5:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol","file":"./Hashing.sol","id":422,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":710,"sourceUnit":932,"src":"94:40:3","symbolAliases":[{"foreign":{"id":421,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"103:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol","file":"./rlp/RLPWriter.sol","id":424,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":710,"sourceUnit":1537,"src":"135:48:3","symbolAliases":[{"foreign":{"id":423,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"144:9:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Encoding","contractDependencies":[],"contractKind":"library","documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"185:101:3","text":" @title Encoding\n @notice Encoding handles Optimism's various different encoding schemes."},"fullyImplemented":true,"id":709,"linearizedBaseContracts":[709],"name":"Encoding","nameLocation":"295:8:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":558,"nodeType":"Block","src":"854:668:3","statements":[{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"source","nameLocation":"872:6:3","nodeType":"VariableDeclaration","scope":558,"src":"864:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":443,"initialValue":{"arguments":[{"expression":{"id":438,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"907:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"l1BlockHash","nodeType":"MemberAccess","referencedDeclaration":1012,"src":"907:15:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":440,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"924:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"logIndex","nodeType":"MemberAccess","referencedDeclaration":1014,"src":"924:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":436,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"881:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashing_$931_$","typeString":"type(library Hashing)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"hashDepositSource","nodeType":"MemberAccess","referencedDeclaration":765,"src":"881:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"864:73:3"},{"assignments":[448],"declarations":[{"constant":false,"id":448,"mutability":"mutable","name":"raw","nameLocation":"962:3:3","nodeType":"VariableDeclaration","scope":558,"src":"947:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":446,"name":"bytes","nodeType":"ElementaryTypeName","src":"947:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":447,"nodeType":"ArrayTypeName","src":"947:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":454,"initialValue":{"arguments":[{"hexValue":"38","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"980:1:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"968:11:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":449,"name":"bytes","nodeType":"ElementaryTypeName","src":"972:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":450,"nodeType":"ArrayTypeName","src":"972:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"968:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"947:35:3"},{"expression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":455,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"992:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":457,"indexExpression":{"hexValue":"30","id":456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"992:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":462,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1039:6:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":460,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1022:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1022:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1022:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":458,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1001:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"1001:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"992:55:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":466,"nodeType":"ExpressionStatement","src":"992:55:3"},{"expression":{"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":467,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1057:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":469,"indexExpression":{"hexValue":"31","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1057:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":472,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1089:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":998,"src":"1089:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":470,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1066:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeAddress","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"1066:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1066:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1057:41:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":476,"nodeType":"ExpressionStatement","src":"1057:41:3"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":477,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1108:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":479,"indexExpression":{"hexValue":"32","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1112:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1108:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"expression":{"id":480,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1117:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isCreation","nodeType":"MemberAccess","referencedDeclaration":1002,"src":"1117:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":488,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1184:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":1000,"src":"1184:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":486,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1161:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeAddress","nodeType":"MemberAccess","referencedDeclaration":1136,"src":"1161:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1161:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1117:74:3","trueExpression":{"arguments":[{"hexValue":"","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1155:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":482,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1134:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"1134:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1134:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1108:83:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":493,"nodeType":"ExpressionStatement","src":"1108:83:3"},{"expression":{"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":494,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1201:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":496,"indexExpression":{"hexValue":"33","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1205:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1201:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":499,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1230:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":1006,"src":"1230:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":497,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1210:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeUint","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"1210:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1210:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1201:38:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":503,"nodeType":"ExpressionStatement","src":"1201:38:3"},{"expression":{"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":504,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1249:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":506,"indexExpression":{"hexValue":"34","id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1253:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1249:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":509,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1278:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1004,"src":"1278:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":507,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1258:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeUint","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"1258:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1258:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1249:39:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":513,"nodeType":"ExpressionStatement","src":"1249:39:3"},{"expression":{"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":514,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1298:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":516,"indexExpression":{"hexValue":"35","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1302:1:3","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1298:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":521,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1335:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gasLimit","nodeType":"MemberAccess","referencedDeclaration":1008,"src":"1335:12:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1327:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1327:7:3","typeDescriptions":{}}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1327:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":517,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1307:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeUint","nodeType":"MemberAccess","referencedDeclaration":1151,"src":"1307:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1307:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1298:51:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":526,"nodeType":"ExpressionStatement","src":"1298:51:3"},{"expression":{"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":527,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1359:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":529,"indexExpression":{"hexValue":"36","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1363:1:3","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1359:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"66616c7365","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1388:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":530,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1368:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBool","nodeType":"MemberAccess","referencedDeclaration":1185,"src":"1368:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool) pure returns (bytes memory)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1368:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1359:35:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":535,"nodeType":"ExpressionStatement","src":"1359:35:3"},{"expression":{"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":536,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1404:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":538,"indexExpression":{"hexValue":"37","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:1:3","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1404:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":541,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1434:3:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":1010,"src":"1434:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":539,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1413:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1078,"src":"1413:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1413:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1404:39:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":545,"nodeType":"ExpressionStatement","src":"1404:39:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783765","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1483:4:3","typeDescriptions":{"typeIdentifier":"t_rational_126_by_1","typeString":"int_const 126"},"value":"0x7e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_126_by_1","typeString":"int_const 126"}],"id":549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1477:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":548,"name":"uint8","nodeType":"ElementaryTypeName","src":"1477:5:3","typeDescriptions":{}}},"id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":554,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"1510:3:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"expression":{"id":552,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1490:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1536_$","typeString":"type(library RLPWriter)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeList","nodeType":"MemberAccess","referencedDeclaration":1104,"src":"1490:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory[] memory) pure returns (bytes memory)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1490:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":546,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1460:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1460:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1460:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":433,"id":557,"nodeType":"Return","src":"1453:62:3"}]},"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"310:399:3","text":" @notice RLP encodes the L2 transaction that would be generated when a given deposit is sent\n         to the L2 system. Useful for searching for a deposit in the L2 system. The\n         transaction is prefixed with 0x7e to identify its EIP-2718 type.\n @param _tx User deposit transaction to encode.\n @return RLP encoded L2 deposit transaction."},"id":559,"implemented":true,"kind":"function","modifiers":[],"name":"encodeDepositTransaction","nameLocation":"723:24:3","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"_tx","nameLocation":"784:3:3","nodeType":"VariableDeclaration","scope":559,"src":"748:39:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction"},"typeName":{"id":428,"nodeType":"UserDefinedTypeName","pathNode":{"id":427,"name":"Types.UserDepositTransaction","nodeType":"IdentifierPath","referencedDeclaration":1015,"src":"748:28:3"},"referencedDeclaration":1015,"src":"748:28:3","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_storage_ptr","typeString":"struct Types.UserDepositTransaction"}},"visibility":"internal"}],"src":"747:41:3"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":559,"src":"836:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":431,"name":"bytes","nodeType":"ElementaryTypeName","src":"836:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"835:14:3"},"scope":709,"src":"714:808:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":614,"nodeType":"Block","src":"2336:405:3","statements":[{"assignments":[null,578],"declarations":[null,{"constant":false,"id":578,"mutability":"mutable","name":"version","nameLocation":"2356:7:3","nodeType":"VariableDeclaration","scope":614,"src":"2349:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":577,"name":"uint16","nodeType":"ElementaryTypeName","src":"2349:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":582,"initialValue":{"arguments":[{"id":580,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2388:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":579,"name":"decodeVersionedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"2367:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$","typeString":"function (uint256) pure returns (uint240,uint16)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2367:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"2346:49:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":583,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2409:7:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2420:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2409:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":594,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2524:7:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2535:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2524:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":611,"nodeType":"Block","src":"2654:81:3","statements":[{"expression":{"arguments":[{"hexValue":"456e636f64696e673a20756e6b6e6f776e2063726f737320646f6d61696e206d6573736167652076657273696f6e","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2675:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_20f286d8aba599c42275a01116f2950ae5fc870430b0c87c9769ad93ff637977","typeString":"literal_string \"Encoding: unknown cross domain message version\""},"value":"Encoding: unknown cross domain message version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_20f286d8aba599c42275a01116f2950ae5fc870430b0c87c9769ad93ff637977","typeString":"literal_string \"Encoding: unknown cross domain message version\""}],"id":607,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2668:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2668:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":610,"nodeType":"ExpressionStatement","src":"2668:56:3"}]},"id":612,"nodeType":"IfStatement","src":"2520:215:3","trueBody":{"id":606,"nodeType":"Block","src":"2538:110:3","statements":[{"expression":{"arguments":[{"id":598,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2586:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":599,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2594:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":600,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"2612:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":602,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"2620:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":603,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2631:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":597,"name":"encodeCrossDomainMessageV1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"2559:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes memory)"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2559:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":576,"id":605,"nodeType":"Return","src":"2552:85:3"}]}},"id":613,"nodeType":"IfStatement","src":"2405:330:3","trueBody":{"id":593,"nodeType":"Block","src":"2423:91:3","statements":[{"expression":{"arguments":[{"id":587,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2471:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":588,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"2480:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":589,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"2489:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":590,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2496:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":586,"name":"encodeCrossDomainMessageV0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2444:26:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes memory)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2444:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":576,"id":592,"nodeType":"Return","src":"2437:66:3"}]}}]},"documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"1528:573:3","text":" @notice Encodes the cross domain message based on the version that is encoded into the\n         message nonce.\n @param _nonce    Message nonce with version encoded into the first two bytes.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Encoded cross domain message."},"id":615,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCrossDomainMessage","nameLocation":"2115:24:3","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"_nonce","nameLocation":"2157:6:3","nodeType":"VariableDeclaration","scope":615,"src":"2149:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"_sender","nameLocation":"2181:7:3","nodeType":"VariableDeclaration","scope":615,"src":"2173:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":563,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"_target","nameLocation":"2206:7:3","nodeType":"VariableDeclaration","scope":615,"src":"2198:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"2198:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":568,"mutability":"mutable","name":"_value","nameLocation":"2231:6:3","nodeType":"VariableDeclaration","scope":615,"src":"2223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"_gasLimit","nameLocation":"2255:9:3","nodeType":"VariableDeclaration","scope":615,"src":"2247:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"_data","nameLocation":"2287:5:3","nodeType":"VariableDeclaration","scope":615,"src":"2274:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":571,"name":"bytes","nodeType":"ElementaryTypeName","src":"2274:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2139:159:3"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":615,"src":"2322:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":574,"name":"bytes","nodeType":"ElementaryTypeName","src":"2322:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2321:14:3"},"scope":709,"src":"2106:635:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"3294:233:3","statements":[{"expression":{"arguments":[{"hexValue":"72656c61794d65737361676528616464726573732c616464726573732c62797465732c75696e7432353629","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3364:45:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},"value":"relayMessage(address,address,bytes,uint256)"},{"id":632,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"3427:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"3452:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"3477:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":635,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3500:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":629,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3323:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"3323:23:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3323:197:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":628,"id":637,"nodeType":"Return","src":"3304:216:3"}]},"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"2747:361:3","text":" @notice Encodes a cross domain message based on the V0 (legacy) encoding.\n @param _target Address of the target of the message.\n @param _sender Address of the sender of the message.\n @param _data   Data to send with the message.\n @param _nonce  Message nonce.\n @return Encoded cross domain message."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCrossDomainMessageV0","nameLocation":"3122:26:3","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"_target","nameLocation":"3166:7:3","nodeType":"VariableDeclaration","scope":639,"src":"3158:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"_sender","nameLocation":"3191:7:3","nodeType":"VariableDeclaration","scope":639,"src":"3183:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"_data","nameLocation":"3221:5:3","nodeType":"VariableDeclaration","scope":639,"src":"3208:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":621,"name":"bytes","nodeType":"ElementaryTypeName","src":"3208:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"_nonce","nameLocation":"3244:6:3","nodeType":"VariableDeclaration","scope":639,"src":"3236:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":623,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3148:108:3"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":639,"src":"3280:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":626,"name":"bytes","nodeType":"ElementaryTypeName","src":"3280:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3279:14:3"},"scope":709,"src":"3113:414:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":668,"nodeType":"Block","src":"4255:300:3","statements":[{"expression":{"arguments":[{"hexValue":"72656c61794d6573736167652875696e743235362c616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4325:61:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d764ad0b7956c786c5024ab8148ae1a792e852ed69ab7c0944c91237fa2f44c0","typeString":"literal_string \"relayMessage(uint256,address,address,uint256,uint256,bytes)\""},"value":"relayMessage(uint256,address,address,uint256,uint256,bytes)"},{"id":660,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"4404:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":661,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"4428:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4453:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":663,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"4478:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":664,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"4502:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":665,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"4529:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d764ad0b7956c786c5024ab8148ae1a792e852ed69ab7c0944c91237fa2f44c0","typeString":"literal_string \"relayMessage(uint256,address,address,uint256,uint256,bytes)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":657,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4284:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"4284:23:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4284:264:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":656,"id":667,"nodeType":"Return","src":"4265:283:3"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"3533:485:3","text":" @notice Encodes a cross domain message based on the V1 (current) encoding.\n @param _nonce    Message nonce.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Encoded cross domain message."},"id":669,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCrossDomainMessageV1","nameLocation":"4032:26:3","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"_nonce","nameLocation":"4076:6:3","nodeType":"VariableDeclaration","scope":669,"src":"4068:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"4068:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"_sender","nameLocation":"4100:7:3","nodeType":"VariableDeclaration","scope":669,"src":"4092:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"4092:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":646,"mutability":"mutable","name":"_target","nameLocation":"4125:7:3","nodeType":"VariableDeclaration","scope":669,"src":"4117:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4117:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"_value","nameLocation":"4150:6:3","nodeType":"VariableDeclaration","scope":669,"src":"4142:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4142:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"_gasLimit","nameLocation":"4174:9:3","nodeType":"VariableDeclaration","scope":669,"src":"4166:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4166:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"_data","nameLocation":"4206:5:3","nodeType":"VariableDeclaration","scope":669,"src":"4193:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":651,"name":"bytes","nodeType":"ElementaryTypeName","src":"4193:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4058:159:3"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":669,"src":"4241:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":654,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:3"},"scope":709,"src":"4023:532:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":685,"nodeType":"Block","src":"4969:133:3","statements":[{"assignments":[680],"declarations":[{"constant":false,"id":680,"mutability":"mutable","name":"nonce","nameLocation":"4987:5:3","nodeType":"VariableDeclaration","scope":685,"src":"4979:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":679,"name":"uint256","nodeType":"ElementaryTypeName","src":"4979:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":681,"nodeType":"VariableDeclarationStatement","src":"4979:13:3"},{"AST":{"nodeType":"YulBlock","src":"5011:63:3","statements":[{"nodeType":"YulAssignment","src":"5025:39:3","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5041:3:3","type":"","value":"240"},{"name":"_version","nodeType":"YulIdentifier","src":"5046:8:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5037:3:3"},"nodeType":"YulFunctionCall","src":"5037:18:3"},{"name":"_nonce","nodeType":"YulIdentifier","src":"5057:6:3"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5034:2:3"},"nodeType":"YulFunctionCall","src":"5034:30:3"},"variableNames":[{"name":"nonce","nodeType":"YulIdentifier","src":"5025:5:3"}]}]},"evmVersion":"london","externalReferences":[{"declaration":672,"isOffset":false,"isSlot":false,"src":"5057:6:3","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"5046:8:3","valueSize":1},{"declaration":680,"isOffset":false,"isSlot":false,"src":"5025:5:3","valueSize":1}],"id":682,"nodeType":"InlineAssembly","src":"5002:72:3"},{"expression":{"id":683,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5090:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":678,"id":684,"nodeType":"Return","src":"5083:12:3"}]},"documentation":{"id":670,"nodeType":"StructuredDocumentation","src":"4561:308:3","text":" @notice Adds a version number into the first two bytes of a message nonce.\n @param _nonce   Message nonce to encode into.\n @param _version Version number to encode into the message nonce.\n @return Message nonce with version encoded into the first two bytes."},"id":686,"implemented":true,"kind":"function","modifiers":[],"name":"encodeVersionedNonce","nameLocation":"4883:20:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":672,"mutability":"mutable","name":"_nonce","nameLocation":"4912:6:3","nodeType":"VariableDeclaration","scope":686,"src":"4904:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":671,"name":"uint240","nodeType":"ElementaryTypeName","src":"4904:7:3","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"},{"constant":false,"id":674,"mutability":"mutable","name":"_version","nameLocation":"4927:8:3","nodeType":"VariableDeclaration","scope":686,"src":"4920:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":673,"name":"uint16","nodeType":"ElementaryTypeName","src":"4920:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4903:33:3"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":686,"src":"4960:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"4960:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4959:9:3"},"scope":709,"src":"4874:228:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":707,"nodeType":"Block","src":"5456:257:3","statements":[{"assignments":[697],"declarations":[{"constant":false,"id":697,"mutability":"mutable","name":"nonce","nameLocation":"5474:5:3","nodeType":"VariableDeclaration","scope":707,"src":"5466:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":696,"name":"uint240","nodeType":"ElementaryTypeName","src":"5466:7:3","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"id":698,"nodeType":"VariableDeclarationStatement","src":"5466:13:3"},{"assignments":[700],"declarations":[{"constant":false,"id":700,"mutability":"mutable","name":"version","nameLocation":"5496:7:3","nodeType":"VariableDeclaration","scope":707,"src":"5489:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":699,"name":"uint16","nodeType":"ElementaryTypeName","src":"5489:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":701,"nodeType":"VariableDeclarationStatement","src":"5489:14:3"},{"AST":{"nodeType":"YulBlock","src":"5522:152:3","statements":[{"nodeType":"YulAssignment","src":"5536:88:3","value":{"arguments":[{"name":"_nonce","nodeType":"YulIdentifier","src":"5549:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"5557:66:3","type":"","value":"0x0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5545:3:3"},"nodeType":"YulFunctionCall","src":"5545:79:3"},"variableNames":[{"name":"nonce","nodeType":"YulIdentifier","src":"5536:5:3"}]},{"nodeType":"YulAssignment","src":"5637:27:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5652:3:3","type":"","value":"240"},{"name":"_nonce","nodeType":"YulIdentifier","src":"5657:6:3"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5648:3:3"},"nodeType":"YulFunctionCall","src":"5648:16:3"},"variableNames":[{"name":"version","nodeType":"YulIdentifier","src":"5637:7:3"}]}]},"evmVersion":"london","externalReferences":[{"declaration":689,"isOffset":false,"isSlot":false,"src":"5549:6:3","valueSize":1},{"declaration":689,"isOffset":false,"isSlot":false,"src":"5657:6:3","valueSize":1},{"declaration":697,"isOffset":false,"isSlot":false,"src":"5536:5:3","valueSize":1},{"declaration":700,"isOffset":false,"isSlot":false,"src":"5637:7:3","valueSize":1}],"id":702,"nodeType":"InlineAssembly","src":"5513:161:3"},{"expression":{"components":[{"id":703,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5691:5:3","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},{"id":704,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"5698:7:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5690:16:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"functionReturnParameters":695,"id":706,"nodeType":"Return","src":"5683:23:3"}]},"documentation":{"id":687,"nodeType":"StructuredDocumentation","src":"5108:257:3","text":" @notice Pulls the version out of a version-encoded nonce.\n @param _nonce Message nonce with version encoded into the first two bytes.\n @return Nonce without encoded version.\n @return Version of the message."},"id":708,"implemented":true,"kind":"function","modifiers":[],"name":"decodeVersionedNonce","nameLocation":"5379:20:3","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":689,"mutability":"mutable","name":"_nonce","nameLocation":"5408:6:3","nodeType":"VariableDeclaration","scope":708,"src":"5400:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5400:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5399:16:3"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"5439:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":691,"name":"uint240","nodeType":"ElementaryTypeName","src":"5439:7:3","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"5448:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":693,"name":"uint16","nodeType":"ElementaryTypeName","src":"5448:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5438:17:3"},"scope":709,"src":"5370:343:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":710,"src":"287:5428:3","usedErrors":[]}],"src":"32:5684:3"},"id":3},"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol","exportedSymbols":{"Encoding":[709],"Hashing":[931],"Types":[1029]},"id":932,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":711,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol","file":"./Types.sol","id":713,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":932,"sourceUnit":1030,"src":"57:36:4","symbolAliases":[{"foreign":{"id":712,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"66:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol","file":"./Encoding.sol","id":715,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":932,"sourceUnit":710,"src":"94:42:4","symbolAliases":[{"foreign":{"id":714,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"103:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Hashing","contractDependencies":[],"contractKind":"library","documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"138:98:4","text":" @title Hashing\n @notice Hashing handles Optimism's various different hashing schemes."},"fullyImplemented":true,"id":931,"linearizedBaseContracts":[931],"name":"Hashing","nameLocation":"245:7:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":732,"nodeType":"Block","src":"758:73:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":728,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"819:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}],"expression":{"id":726,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"785:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$709_$","typeString":"type(library Encoding)"}},"id":727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeDepositTransaction","nodeType":"MemberAccess","referencedDeclaration":559,"src":"785:33:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserDepositTransaction_$1015_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Types.UserDepositTransaction memory) pure returns (bytes memory)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"785:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":725,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"775:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"775:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":724,"id":731,"nodeType":"Return","src":"768:56:4"}]},"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"259:361:4","text":" @notice Computes the hash of the RLP encoded L2 transaction that would be generated when a\n         given deposit is sent to the L2 system. Useful for searching for a deposit in the L2\n         system.\n @param _tx User deposit transaction to hash.\n @return Hash of the RLP encoded L2 deposit transaction."},"id":733,"implemented":true,"kind":"function","modifiers":[],"name":"hashDepositTransaction","nameLocation":"634:22:4","nodeType":"FunctionDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"_tx","nameLocation":"693:3:4","nodeType":"VariableDeclaration","scope":733,"src":"657:39:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_memory_ptr","typeString":"struct Types.UserDepositTransaction"},"typeName":{"id":719,"nodeType":"UserDefinedTypeName","pathNode":{"id":718,"name":"Types.UserDepositTransaction","nodeType":"IdentifierPath","referencedDeclaration":1015,"src":"657:28:4"},"referencedDeclaration":1015,"src":"657:28:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$1015_storage_ptr","typeString":"struct Types.UserDepositTransaction"}},"visibility":"internal"}],"src":"656:41:4"},"returnParameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":733,"src":"745:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"745:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"744:9:4"},"scope":931,"src":"625:206:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":764,"nodeType":"Block","src":"1476:144:4","statements":[{"assignments":[744],"declarations":[{"constant":false,"id":744,"mutability":"mutable","name":"depositId","nameLocation":"1494:9:4","nodeType":"VariableDeclaration","scope":764,"src":"1486:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1486:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":752,"initialValue":{"arguments":[{"arguments":[{"id":748,"name":"_l1BlockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"1527:12:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":749,"name":"_logIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"1541:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":746,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1516:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1516:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1516:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":745,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1506:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1506:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1486:66:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1590:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1590:7:4","typeDescriptions":{}}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1590:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":760,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"1602:9:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":754,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1579:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1579:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1579:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":753,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1569:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1569:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":742,"id":763,"nodeType":"Return","src":"1562:51:4"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"837:506:4","text":" @notice Computes the deposit transaction's \"source hash\", a value that guarantees the hash\n         of the L2 transaction that corresponds to a deposit is unique and is\n         deterministically generated from L1 transaction data.\n @param _l1BlockHash Hash of the L1 block where the deposit was included.\n @param _logIndex    The index of the log that created the deposit transaction.\n @return Hash of the deposit transaction's \"source hash\"."},"id":765,"implemented":true,"kind":"function","modifiers":[],"name":"hashDepositSource","nameLocation":"1357:17:4","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"_l1BlockHash","nameLocation":"1383:12:4","nodeType":"VariableDeclaration","scope":765,"src":"1375:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":735,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1375:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"_logIndex","nameLocation":"1405:9:4","nodeType":"VariableDeclaration","scope":765,"src":"1397:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1374:41:4"},"returnParameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":765,"src":"1463:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1463:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1462:9:4"},"scope":931,"src":"1348:272:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":821,"nodeType":"Block","src":"2425:409:4","statements":[{"assignments":[null,784],"declarations":[null,{"constant":false,"id":784,"mutability":"mutable","name":"version","nameLocation":"2445:7:4","nodeType":"VariableDeclaration","scope":821,"src":"2438:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":783,"name":"uint16","nodeType":"ElementaryTypeName","src":"2438:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":789,"initialValue":{"arguments":[{"id":787,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2486:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":785,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2456:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$709_$","typeString":"type(library Encoding)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeVersionedNonce","nodeType":"MemberAccess","referencedDeclaration":708,"src":"2456:29:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$","typeString":"function (uint256) pure returns (uint240,uint16)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2456:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"2435:58:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":790,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2507:7:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2518:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2507:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":801,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"2620:7:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2631:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2620:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":818,"nodeType":"Block","src":"2748:80:4","statements":[{"expression":{"arguments":[{"hexValue":"48617368696e673a20756e6b6e6f776e2063726f737320646f6d61696e206d6573736167652076657273696f6e","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_384bb798b2228f81413367d26d76c93c293c9719e4003e054257d609e7be0f72","typeString":"literal_string \"Hashing: unknown cross domain message version\""},"value":"Hashing: unknown cross domain message version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_384bb798b2228f81413367d26d76c93c293c9719e4003e054257d609e7be0f72","typeString":"literal_string \"Hashing: unknown cross domain message version\""}],"id":814,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2762:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2762:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"ExpressionStatement","src":"2762:55:4"}]},"id":819,"nodeType":"IfStatement","src":"2616:212:4","trueBody":{"id":813,"nodeType":"Block","src":"2634:108:4","statements":[{"expression":{"arguments":[{"id":805,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2680:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":806,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2688:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"2697:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"2706:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"2714:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2725:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":804,"name":"hashCrossDomainMessageV1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"2655:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes32)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2655:76:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":782,"id":812,"nodeType":"Return","src":"2648:83:4"}]}},"id":820,"nodeType":"IfStatement","src":"2503:325:4","trueBody":{"id":800,"nodeType":"Block","src":"2521:89:4","statements":[{"expression":{"arguments":[{"id":794,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"2567:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":795,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":770,"src":"2576:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2585:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":797,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"2592:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":793,"name":"hashCrossDomainMessageV0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"2542:24:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes32)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2542:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":782,"id":799,"nodeType":"Return","src":"2535:64:4"}]}}]},"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"1626:571:4","text":" @notice Hashes the cross domain message based on the version that is encoded into the\n         message nonce.\n @param _nonce    Message nonce with version encoded into the first two bytes.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Hashed cross domain message."},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"hashCrossDomainMessage","nameLocation":"2211:22:4","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"_nonce","nameLocation":"2251:6:4","nodeType":"VariableDeclaration","scope":822,"src":"2243:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2243:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"_sender","nameLocation":"2275:7:4","nodeType":"VariableDeclaration","scope":822,"src":"2267:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"_target","nameLocation":"2300:7:4","nodeType":"VariableDeclaration","scope":822,"src":"2292:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":771,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"_value","nameLocation":"2325:6:4","nodeType":"VariableDeclaration","scope":822,"src":"2317:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":773,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"_gasLimit","nameLocation":"2349:9:4","nodeType":"VariableDeclaration","scope":822,"src":"2341:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2341:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"_data","nameLocation":"2381:5:4","nodeType":"VariableDeclaration","scope":822,"src":"2368:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":777,"name":"bytes","nodeType":"ElementaryTypeName","src":"2368:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2233:159:4"},"returnParameters":{"id":782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"2416:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2416:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2415:9:4"},"scope":931,"src":"2202:632:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":846,"nodeType":"Block","src":"3378:103:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":839,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3441:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"3450:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":841,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"3459:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":842,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"3466:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":837,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"3405:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$709_$","typeString":"type(library Encoding)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeCrossDomainMessageV0","nodeType":"MemberAccess","referencedDeclaration":639,"src":"3405:35:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes memory)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3405:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":836,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3395:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3395:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":835,"id":845,"nodeType":"Return","src":"3388:86:4"}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"2840:359:4","text":" @notice Hashes a cross domain message based on the V0 (legacy) encoding.\n @param _target Address of the target of the message.\n @param _sender Address of the sender of the message.\n @param _data   Data to send with the message.\n @param _nonce  Message nonce.\n @return Hashed cross domain message."},"id":847,"implemented":true,"kind":"function","modifiers":[],"name":"hashCrossDomainMessageV0","nameLocation":"3213:24:4","nodeType":"FunctionDefinition","parameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"_target","nameLocation":"3255:7:4","nodeType":"VariableDeclaration","scope":847,"src":"3247:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"3247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"_sender","nameLocation":"3280:7:4","nodeType":"VariableDeclaration","scope":847,"src":"3272:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"3272:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"_data","nameLocation":"3310:5:4","nodeType":"VariableDeclaration","scope":847,"src":"3297:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":828,"name":"bytes","nodeType":"ElementaryTypeName","src":"3297:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"_nonce","nameLocation":"3333:6:4","nodeType":"VariableDeclaration","scope":847,"src":"3325:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"3325:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3237:108:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":847,"src":"3369:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3369:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3368:9:4"},"scope":931,"src":"3204:277:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":877,"nodeType":"Block","src":"4200:302:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":868,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"4313:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":869,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"4341:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":870,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4370:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":871,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4399:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":872,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4427:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":873,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"4458:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":866,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"4256:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$709_$","typeString":"type(library Encoding)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeCrossDomainMessageV1","nodeType":"MemberAccess","referencedDeclaration":669,"src":"4256:35:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes memory)"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4256:225:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":865,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4229:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4229:266:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":864,"id":876,"nodeType":"Return","src":"4210:285:4"}]},"documentation":{"id":848,"nodeType":"StructuredDocumentation","src":"3487:483:4","text":" @notice Hashes a cross domain message based on the V1 (current) encoding.\n @param _nonce    Message nonce.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Hashed cross domain message."},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"hashCrossDomainMessageV1","nameLocation":"3984:24:4","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"_nonce","nameLocation":"4026:6:4","nodeType":"VariableDeclaration","scope":878,"src":"4018:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"4018:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"_sender","nameLocation":"4050:7:4","nodeType":"VariableDeclaration","scope":878,"src":"4042:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"4042:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"_target","nameLocation":"4075:7:4","nodeType":"VariableDeclaration","scope":878,"src":"4067:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"4067:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"_value","nameLocation":"4100:6:4","nodeType":"VariableDeclaration","scope":878,"src":"4092:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"4092:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"_gasLimit","nameLocation":"4124:9:4","nodeType":"VariableDeclaration","scope":878,"src":"4116:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"_data","nameLocation":"4156:5:4","nodeType":"VariableDeclaration","scope":878,"src":"4143:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"4143:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4008:159:4"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":878,"src":"4191:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4191:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4190:9:4"},"scope":931,"src":"3975:527:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":905,"nodeType":"Block","src":"4857:157:4","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":890,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4924:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":1017,"src":"4924:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":892,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4935:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":1019,"src":"4935:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":894,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4947:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"target","nodeType":"MemberAccess","referencedDeclaration":1021,"src":"4947:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":896,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4959:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":1023,"src":"4959:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":898,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4970:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gasLimit","nodeType":"MemberAccess","referencedDeclaration":1025,"src":"4970:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":900,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"4984:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":1027,"src":"4984:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":888,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4913:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4913:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4913:80:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4886:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4886:121:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":886,"id":904,"nodeType":"Return","src":"4867:140:4"}]},"documentation":{"id":879,"nodeType":"StructuredDocumentation","src":"4508:220:4","text":" @notice Derives the withdrawal hash according to the encoding in the L2 Withdrawer contract\n @param _tx Withdrawal transaction to hash.\n @return Hashed withdrawal transaction."},"id":906,"implemented":true,"kind":"function","modifiers":[],"name":"hashWithdrawal","nameLocation":"4742:14:4","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"_tx","nameLocation":"4792:3:4","nodeType":"VariableDeclaration","scope":906,"src":"4757:38:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_memory_ptr","typeString":"struct Types.WithdrawalTransaction"},"typeName":{"id":881,"nodeType":"UserDefinedTypeName","pathNode":{"id":880,"name":"Types.WithdrawalTransaction","nodeType":"IdentifierPath","referencedDeclaration":1028,"src":"4757:27:4"},"referencedDeclaration":1028,"src":"4757:27:4","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$1028_storage_ptr","typeString":"struct Types.WithdrawalTransaction"}},"visibility":"internal"}],"src":"4756:40:4"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":906,"src":"4844:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4844:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4843:9:4"},"scope":931,"src":"4733:281:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":929,"nodeType":"Block","src":"5470:316:4","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":918,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5558:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$996_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"version","nodeType":"MemberAccess","referencedDeclaration":989,"src":"5558:24:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":920,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5604:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$996_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":991,"src":"5604:26:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":922,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5652:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$996_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"messagePasserStorageRoot","nodeType":"MemberAccess","referencedDeclaration":993,"src":"5652:41:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":924,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"5715:16:4","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$996_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":925,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latestBlockhash","nodeType":"MemberAccess","referencedDeclaration":995,"src":"5715:32:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":916,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5526:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5526:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5526:239:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":915,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5499:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5499:280:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":914,"id":928,"nodeType":"Return","src":"5480:299:4"}]},"documentation":{"id":907,"nodeType":"StructuredDocumentation","src":"5020:309:4","text":" @notice Hashes the various elements of an output root proof into an output root hash which\n         can be used to check if the proof is valid.\n @param _outputRootProof Output root proof which should hash to an output root.\n @return Hashed output root proof."},"id":930,"implemented":true,"kind":"function","modifiers":[],"name":"hashOutputRootProof","nameLocation":"5343:19:4","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"_outputRootProof","nameLocation":"5392:16:4","nodeType":"VariableDeclaration","scope":930,"src":"5363:45:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$996_memory_ptr","typeString":"struct Types.OutputRootProof"},"typeName":{"id":909,"nodeType":"UserDefinedTypeName","pathNode":{"id":908,"name":"Types.OutputRootProof","nodeType":"IdentifierPath","referencedDeclaration":996,"src":"5363:21:4"},"referencedDeclaration":996,"src":"5363:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$996_storage_ptr","typeString":"struct Types.OutputRootProof"}},"visibility":"internal"}],"src":"5362:47:4"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":930,"src":"5457:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5457:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5456:9:4"},"scope":931,"src":"5334:452:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":932,"src":"237:5551:4","usedErrors":[]}],"src":"32:5757:4"},"id":4},"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol","exportedSymbols":{"SafeCall":[977]},"id":978,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":933,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCall","contractDependencies":[],"contractKind":"library","documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"57:66:5","text":" @title SafeCall\n @notice Perform low level safe calls"},"fullyImplemented":true,"id":977,"linearizedBaseContracts":[977],"name":"SafeCall","nameLocation":"132:8:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":954,"nodeType":"Block","src":"599:379:5","statements":[{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"_success","nameLocation":"614:8:5","nodeType":"VariableDeclaration","scope":954,"src":"609:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":948,"name":"bool","nodeType":"ElementaryTypeName","src":"609:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":950,"nodeType":"VariableDeclarationStatement","src":"609:13:5"},{"AST":{"nodeType":"YulBlock","src":"641:306:5","statements":[{"nodeType":"YulAssignment","src":"655:282:5","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"689:4:5"},{"name":"_target","nodeType":"YulIdentifier","src":"718:7:5"},{"name":"_value","nodeType":"YulIdentifier","src":"756:6:5"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"799:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"810:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:5"},"nodeType":"YulFunctionCall","src":"795:18:5"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"846:9:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"840:5:5"},"nodeType":"YulFunctionCall","src":"840:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"883:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"912:1:5","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"667:4:5"},"nodeType":"YulFunctionCall","src":"667:270:5"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"655:8:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":943,"isOffset":false,"isSlot":false,"src":"799:9:5","valueSize":1},{"declaration":943,"isOffset":false,"isSlot":false,"src":"846:9:5","valueSize":1},{"declaration":939,"isOffset":false,"isSlot":false,"src":"689:4:5","valueSize":1},{"declaration":949,"isOffset":false,"isSlot":false,"src":"655:8:5","valueSize":1},{"declaration":937,"isOffset":false,"isSlot":false,"src":"718:7:5","valueSize":1},{"declaration":941,"isOffset":false,"isSlot":false,"src":"756:6:5","valueSize":1}],"id":951,"nodeType":"InlineAssembly","src":"632:315:5"},{"expression":{"id":952,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"963:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":947,"id":953,"nodeType":"Return","src":"956:15:5"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"147:300:5","text":" @notice Perform a low level call without copying any returndata\n @param _target   Address to call\n @param _gas      Amount of gas to pass to the call\n @param _value    Amount of value to pass to the call\n @param _calldata Calldata to pass to the call"},"id":955,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"461:4:5","nodeType":"FunctionDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"_target","nameLocation":"483:7:5","nodeType":"VariableDeclaration","scope":955,"src":"475:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"_gas","nameLocation":"508:4:5","nodeType":"VariableDeclaration","scope":955,"src":"500:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"_value","nameLocation":"530:6:5","nodeType":"VariableDeclaration","scope":955,"src":"522:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"522:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"_calldata","nameLocation":"559:9:5","nodeType":"VariableDeclaration","scope":955,"src":"546:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":942,"name":"bytes","nodeType":"ElementaryTypeName","src":"546:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"465:109:5"},"returnParameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":955,"src":"593:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":945,"name":"bool","nodeType":"ElementaryTypeName","src":"593:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"592:6:5"},"scope":977,"src":"452:526:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":975,"nodeType":"Block","src":"1593:2753:5","statements":[{"assignments":[970],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"_success","nameLocation":"1608:8:5","nodeType":"VariableDeclaration","scope":975,"src":"1603:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":969,"name":"bool","nodeType":"ElementaryTypeName","src":"1603:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":971,"nodeType":"VariableDeclarationStatement","src":"1603:13:5"},{"AST":{"nodeType":"YulBlock","src":"1635:2680:5","statements":[{"body":{"nodeType":"YulBlock","src":"2332:1124:5","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2429:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2432:10:5","type":"","value":"0x08c379a0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2422:6:5"},"nodeType":"YulFunctionCall","src":"2422:21:5"},"nodeType":"YulExpressionStatement","src":"2422:21:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2543:2:5","type":"","value":"32"},{"kind":"number","nodeType":"YulLiteral","src":"2547:2:5","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2536:6:5"},"nodeType":"YulFunctionCall","src":"2536:14:5"},"nodeType":"YulExpressionStatement","src":"2536:14:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3281:2:5","type":"","value":"88"},{"kind":"number","nodeType":"YulLiteral","src":"3285:56:5","type":"","value":"0x0000185361666543616c6c3a204e6f7420656e6f75676820676173"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3274:6:5"},"nodeType":"YulFunctionCall","src":"3274:68:5"},"nodeType":"YulExpressionStatement","src":"3274:68:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:5","type":"","value":"28"},{"kind":"number","nodeType":"YulLiteral","src":"3438:3:5","type":"","value":"100"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3427:6:5"},"nodeType":"YulFunctionCall","src":"3427:15:5"},"nodeType":"YulExpressionStatement","src":"3427:15:5"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"2288:3:5"},"nodeType":"YulFunctionCall","src":"2288:5:5"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2303:2:5","type":"","value":"64"},{"arguments":[{"name":"_minGas","nodeType":"YulIdentifier","src":"2311:7:5"},{"kind":"number","nodeType":"YulLiteral","src":"2320:3:5","type":"","value":"200"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2307:3:5"},"nodeType":"YulFunctionCall","src":"2307:17:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2299:3:5"},"nodeType":"YulFunctionCall","src":"2299:26:5"},{"kind":"number","nodeType":"YulLiteral","src":"2327:2:5","type":"","value":"63"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2295:3:5"},"nodeType":"YulFunctionCall","src":"2295:35:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2285:2:5"},"nodeType":"YulFunctionCall","src":"2285:46:5"},"nodeType":"YulIf","src":"2282:1174:5"},{"nodeType":"YulAssignment","src":"4016:289:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4050:3:5"},"nodeType":"YulFunctionCall","src":"4050:5:5"},{"name":"_target","nodeType":"YulIdentifier","src":"4080:7:5"},{"name":"_value","nodeType":"YulIdentifier","src":"4118:6:5"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4161:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"4172:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4157:3:5"},"nodeType":"YulFunctionCall","src":"4157:18:5"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4208:9:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4202:5:5"},"nodeType":"YulFunctionCall","src":"4202:16:5"},{"kind":"number","nodeType":"YulLiteral","src":"4245:4:5","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4277:4:5","type":"","value":"0x00"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"4028:4:5"},"nodeType":"YulFunctionCall","src":"4028:277:5"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"4016:8:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":964,"isOffset":false,"isSlot":false,"src":"4161:9:5","valueSize":1},{"declaration":964,"isOffset":false,"isSlot":false,"src":"4208:9:5","valueSize":1},{"declaration":960,"isOffset":false,"isSlot":false,"src":"2311:7:5","valueSize":1},{"declaration":970,"isOffset":false,"isSlot":false,"src":"4016:8:5","valueSize":1},{"declaration":958,"isOffset":false,"isSlot":false,"src":"4080:7:5","valueSize":1},{"declaration":962,"isOffset":false,"isSlot":false,"src":"4118:6:5","valueSize":1}],"id":972,"nodeType":"InlineAssembly","src":"1626:2689:5"},{"expression":{"id":973,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"4331:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":968,"id":974,"nodeType":"Return","src":"4324:15:5"}]},"documentation":{"id":956,"nodeType":"StructuredDocumentation","src":"984:444:5","text":" @notice Perform a low level call without copying any returndata. This function\n         will revert if the call cannot be performed with the specified minimum\n         gas.\n @param _target   Address to call\n @param _minGas   The minimum amount of gas that may be passed to the call\n @param _value    Amount of value to pass to the call\n @param _calldata Calldata to pass to the call"},"id":976,"implemented":true,"kind":"function","modifiers":[],"name":"callWithMinGas","nameLocation":"1442:14:5","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":958,"mutability":"mutable","name":"_target","nameLocation":"1474:7:5","nodeType":"VariableDeclaration","scope":976,"src":"1466:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":957,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"_minGas","nameLocation":"1499:7:5","nodeType":"VariableDeclaration","scope":976,"src":"1491:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"_value","nameLocation":"1524:6:5","nodeType":"VariableDeclaration","scope":976,"src":"1516:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1516:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"_calldata","nameLocation":"1553:9:5","nodeType":"VariableDeclaration","scope":976,"src":"1540:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":963,"name":"bytes","nodeType":"ElementaryTypeName","src":"1540:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1456:112:5"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":976,"src":"1587:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":966,"name":"bool","nodeType":"ElementaryTypeName","src":"1587:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1586:6:5"},"scope":977,"src":"1433:2913:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":978,"src":"124:4224:5","usedErrors":[]}],"src":"32:4317:5"},"id":5},"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol","exportedSymbols":{"Types":[1029]},"id":1030,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":979,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Types","contractDependencies":[],"contractKind":"library","documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"57:103:6","text":" @title Types\n @notice Contains various types used throughout the Optimism contract system."},"fullyImplemented":true,"id":1029,"linearizedBaseContracts":[1029],"name":"Types","nameLocation":"169:5:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Types.OutputProposal","id":987,"members":[{"constant":false,"id":982,"mutability":"mutable","name":"outputRoot","nameLocation":"762:10:6","nodeType":"VariableDeclaration","scope":987,"src":"754:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":981,"name":"bytes32","nodeType":"ElementaryTypeName","src":"754:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"timestamp","nameLocation":"790:9:6","nodeType":"VariableDeclaration","scope":987,"src":"782:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":983,"name":"uint128","nodeType":"ElementaryTypeName","src":"782:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"l2BlockNumber","nameLocation":"817:13:6","nodeType":"VariableDeclaration","scope":987,"src":"809:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":985,"name":"uint128","nodeType":"ElementaryTypeName","src":"809:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"OutputProposal","nameLocation":"729:14:6","nodeType":"StructDefinition","scope":1029,"src":"722:115:6","visibility":"public"},{"canonicalName":"Types.OutputRootProof","id":996,"members":[{"constant":false,"id":989,"mutability":"mutable","name":"version","nameLocation":"1429:7:6","nodeType":"VariableDeclaration","scope":996,"src":"1421:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":988,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1421:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"stateRoot","nameLocation":"1454:9:6","nodeType":"VariableDeclaration","scope":996,"src":"1446:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":990,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1446:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"messagePasserStorageRoot","nameLocation":"1481:24:6","nodeType":"VariableDeclaration","scope":996,"src":"1473:32:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":992,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1473:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"latestBlockhash","nameLocation":"1523:15:6","nodeType":"VariableDeclaration","scope":996,"src":"1515:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":994,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1515:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"OutputRootProof","nameLocation":"1395:15:6","nodeType":"StructDefinition","scope":1029,"src":"1388:157:6","visibility":"public"},{"canonicalName":"Types.UserDepositTransaction","id":1015,"members":[{"constant":false,"id":998,"mutability":"mutable","name":"from","nameLocation":"2468:4:6","nodeType":"VariableDeclaration","scope":1015,"src":"2460:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"to","nameLocation":"2490:2:6","nodeType":"VariableDeclaration","scope":1015,"src":"2482:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"isCreation","nameLocation":"2507:10:6","nodeType":"VariableDeclaration","scope":1015,"src":"2502:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1001,"name":"bool","nodeType":"ElementaryTypeName","src":"2502:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"value","nameLocation":"2535:5:6","nodeType":"VariableDeclaration","scope":1015,"src":"2527:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"2527:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"mint","nameLocation":"2558:4:6","nodeType":"VariableDeclaration","scope":1015,"src":"2550:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"gasLimit","nameLocation":"2579:8:6","nodeType":"VariableDeclaration","scope":1015,"src":"2572:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1007,"name":"uint64","nodeType":"ElementaryTypeName","src":"2572:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"data","nameLocation":"2603:4:6","nodeType":"VariableDeclaration","scope":1015,"src":"2597:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1009,"name":"bytes","nodeType":"ElementaryTypeName","src":"2597:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"l1BlockHash","nameLocation":"2625:11:6","nodeType":"VariableDeclaration","scope":1015,"src":"2617:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2617:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"logIndex","nameLocation":"2654:8:6","nodeType":"VariableDeclaration","scope":1015,"src":"2646:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserDepositTransaction","nameLocation":"2427:22:6","nodeType":"StructDefinition","scope":1029,"src":"2420:249:6","visibility":"public"},{"canonicalName":"Types.WithdrawalTransaction","id":1028,"members":[{"constant":false,"id":1017,"mutability":"mutable","name":"nonce","nameLocation":"3196:5:6","nodeType":"VariableDeclaration","scope":1028,"src":"3188:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1016,"name":"uint256","nodeType":"ElementaryTypeName","src":"3188:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"sender","nameLocation":"3219:6:6","nodeType":"VariableDeclaration","scope":1028,"src":"3211:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1018,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"target","nameLocation":"3243:6:6","nodeType":"VariableDeclaration","scope":1028,"src":"3235:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"3235:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"value","nameLocation":"3267:5:6","nodeType":"VariableDeclaration","scope":1028,"src":"3259:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"3259:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"gasLimit","nameLocation":"3290:8:6","nodeType":"VariableDeclaration","scope":1028,"src":"3282:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"3282:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"data","nameLocation":"3314:4:6","nodeType":"VariableDeclaration","scope":1028,"src":"3308:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1026,"name":"bytes","nodeType":"ElementaryTypeName","src":"3308:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"WithdrawalTransaction","nameLocation":"3156:21:6","nodeType":"StructDefinition","scope":1029,"src":"3149:176:6","visibility":"public"}],"scope":1030,"src":"161:3166:6","usedErrors":[]}],"src":"32:3296:6"},"id":6},"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol","exportedSymbols":{"RLPWriter":[1536]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1031,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"RLPWriter","contractDependencies":[],"contractKind":"library","documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"57:330:7","text":" @custom:attribution https://github.com/bakaoh/solidity-rlp-encode\n @title RLPWriter\n @author RLPWriter is a library for encoding Solidity types to RLP bytes. Adapted from Bakaoh's\n         RLPEncode library (https://github.com/bakaoh/solidity-rlp-encode) with minor\n         modifications to improve legibility."},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"RLPWriter","nameLocation":"396:9:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1077,"nodeType":"Block","src":"652:247:7","statements":[{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"encoded","nameLocation":"675:7:7","nodeType":"VariableDeclaration","scope":1077,"src":"662:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1040,"name":"bytes","nodeType":"ElementaryTypeName","src":"662:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1042,"nodeType":"VariableDeclarationStatement","src":"662:20:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1043,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"697:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"697:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"697:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1049,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"722:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1051,"indexExpression":{"hexValue":"30","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"722:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"716:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1047,"name":"uint8","nodeType":"ElementaryTypeName","src":"716:5:7","typeDescriptions":{}}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"716:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313238","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"732:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"716:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"697:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1073,"nodeType":"Block","src":"781:87:7","statements":[{"expression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1061,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"795:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":1065,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"835:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"835:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313238","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"847:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":1064,"name":"_writeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"822:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (bytes memory)"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"822:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1069,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"853:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"805:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"805:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"805:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"795:62:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1072,"nodeType":"ExpressionStatement","src":"795:62:7"}]},"id":1074,"nodeType":"IfStatement","src":"693:175:7","trueBody":{"id":1060,"nodeType":"Block","src":"737:38:7","statements":[{"expression":{"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1056,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"751:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1057,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"761:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"751:13:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1059,"nodeType":"ExpressionStatement","src":"751:13:7"}]}},{"expression":{"id":1075,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"885:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1039,"id":1076,"nodeType":"Return","src":"878:14:7"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"412:160:7","text":" @notice RLP encodes a byte string.\n @param _in The byte string to encode.\n @return The RLP encoded string in bytes."},"id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes","nameLocation":"586:10:7","nodeType":"FunctionDefinition","parameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"_in","nameLocation":"610:3:7","nodeType":"VariableDeclaration","scope":1078,"src":"597:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1034,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"596:18:7"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1038,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1078,"src":"638:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1037,"name":"bytes","nodeType":"ElementaryTypeName","src":"638:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"637:14:7"},"scope":1536,"src":"577:322:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"1190:121:7","statements":[{"assignments":[1088],"declarations":[{"constant":false,"id":1088,"mutability":"mutable","name":"list","nameLocation":"1213:4:7","nodeType":"VariableDeclaration","scope":1103,"src":"1200:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1087,"name":"bytes","nodeType":"ElementaryTypeName","src":"1200:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"id":1090,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"1229:3:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":1089,"name":"_flatten","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"1220:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory[] memory) pure returns (bytes memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1220:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1200:33:7"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1096,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"1280:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1280:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313932","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1293:3:7","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}],"id":1095,"name":"_writeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"1267:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1267:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1100,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"1299:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1250:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1250:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1250:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1086,"id":1102,"nodeType":"Return","src":"1243:61:7"}]},"documentation":{"id":1079,"nodeType":"StructuredDocumentation","src":"905:204:7","text":" @notice RLP encodes a list of RLP encoded byte byte strings.\n @param _in The list of RLP encoded byte strings.\n @return The RLP encoded list of items in bytes."},"id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"writeList","nameLocation":"1123:9:7","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"_in","nameLocation":"1148:3:7","nodeType":"VariableDeclaration","scope":1104,"src":"1133:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1080,"name":"bytes","nodeType":"ElementaryTypeName","src":"1133:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1081,"nodeType":"ArrayTypeName","src":"1133:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1132:20:7"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1104,"src":"1176:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"1176:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1175:14:7"},"scope":1536,"src":"1114:197:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"1549:46:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1115,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"1583:3:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1577:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1113,"name":"bytes","nodeType":"ElementaryTypeName","src":"1577:5:7","typeDescriptions":{}}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1577:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1112,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1566:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1566:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1111,"id":1118,"nodeType":"Return","src":"1559:29:7"}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"1317:150:7","text":" @notice RLP encodes a string.\n @param _in The string to encode.\n @return The RLP encoded string in bytes."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"writeString","nameLocation":"1481:11:7","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"_in","nameLocation":"1507:3:7","nodeType":"VariableDeclaration","scope":1120,"src":"1493:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1106,"name":"string","nodeType":"ElementaryTypeName","src":"1493:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1492:19:7"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"1535:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"1535:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1534:14:7"},"scope":1536,"src":"1472:123:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"1832:57:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1131,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"1877:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1129,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1860:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1860:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1860:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1128,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1849:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1849:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1127,"id":1134,"nodeType":"Return","src":"1842:40:7"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"1601:154:7","text":" @notice RLP encodes an address.\n @param _in The address to encode.\n @return The RLP encoded address in bytes."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"writeAddress","nameLocation":"1769:12:7","nodeType":"FunctionDefinition","parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1123,"mutability":"mutable","name":"_in","nameLocation":"1790:3:7","nodeType":"VariableDeclaration","scope":1136,"src":"1782:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1781:13:7"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1136,"src":"1818:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1125,"name":"bytes","nodeType":"ElementaryTypeName","src":"1818:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1817:14:7"},"scope":1536,"src":"1760:129:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"2119:50:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1146,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"2157:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"_toBinary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"2147:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2147:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1144,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"2136:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2136:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1143,"id":1149,"nodeType":"Return","src":"2129:33:7"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"1895:150:7","text":" @notice RLP encodes a uint.\n @param _in The uint256 to encode.\n @return The RLP encoded uint256 in bytes."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"writeUint","nameLocation":"2059:9:7","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"_in","nameLocation":"2077:3:7","nodeType":"VariableDeclaration","scope":1151,"src":"2069:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1138,"name":"uint256","nodeType":"ElementaryTypeName","src":"2069:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2068:13:7"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1151,"src":"2105:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"2105:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2104:14:7"},"scope":1536,"src":"2050:119:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1184,"nodeType":"Block","src":"2390:134:7","statements":[{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"encoded","nameLocation":"2413:7:7","nodeType":"VariableDeclaration","scope":1184,"src":"2400:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1159,"name":"bytes","nodeType":"ElementaryTypeName","src":"2400:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1165,"initialValue":{"arguments":[{"hexValue":"31","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2433:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2423:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1161,"name":"bytes","nodeType":"ElementaryTypeName","src":"2427:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2423:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2400:35:7"},{"expression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1166,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2445:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1168,"indexExpression":{"hexValue":"30","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2453:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2445:10:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"condition":{"id":1169,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2459:3:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30783830","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2487:4:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2480:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1174,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2480:6:7","typeDescriptions":{}}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2459:33:7","trueExpression":{"arguments":[{"hexValue":"30783031","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2465:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1170,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2465:6:7","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2465:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":1179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2458:35:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2445:48:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1181,"nodeType":"ExpressionStatement","src":"2445:48:7"},{"expression":{"id":1182,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"2510:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1158,"id":1183,"nodeType":"Return","src":"2503:14:7"}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"2175:144:7","text":" @notice RLP encodes a bool.\n @param _in The bool to encode.\n @return The RLP encoded bool in bytes."},"id":1185,"implemented":true,"kind":"function","modifiers":[],"name":"writeBool","nameLocation":"2333:9:7","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"_in","nameLocation":"2348:3:7","nodeType":"VariableDeclaration","scope":1185,"src":"2343:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1153,"name":"bool","nodeType":"ElementaryTypeName","src":"2343:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2342:10:7"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1185,"src":"2376:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1156,"name":"bytes","nodeType":"ElementaryTypeName","src":"2376:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2375:14:7"},"scope":1536,"src":"2324:200:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"2912:625:7","statements":[{"assignments":[1196],"declarations":[{"constant":false,"id":1196,"mutability":"mutable","name":"encoded","nameLocation":"2935:7:7","nodeType":"VariableDeclaration","scope":1314,"src":"2922:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1195,"name":"bytes","nodeType":"ElementaryTypeName","src":"2922:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1197,"nodeType":"VariableDeclarationStatement","src":"2922:20:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1198,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"2957:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3536","id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2964:2:7","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},"src":"2957:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1310,"nodeType":"Block","src":"3084:422:7","statements":[{"assignments":[1227],"declarations":[{"constant":false,"id":1227,"mutability":"mutable","name":"lenLen","nameLocation":"3106:6:7","nodeType":"VariableDeclaration","scope":1310,"src":"3098:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1228,"nodeType":"VariableDeclarationStatement","src":"3098:14:7"},{"assignments":[1230],"declarations":[{"constant":false,"id":1230,"mutability":"mutable","name":"i","nameLocation":"3134:1:7","nodeType":"VariableDeclaration","scope":1310,"src":"3126:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3126:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1232,"initialValue":{"hexValue":"31","id":1231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3138:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3126:13:7"},{"body":{"id":1245,"nodeType":"Block","src":"3175:67:7","statements":[{"expression":{"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3193:8:7","subExpression":{"id":1238,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3193:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1240,"nodeType":"ExpressionStatement","src":"3193:8:7"},{"expression":{"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3219:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"323536","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3224:3:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3219:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1244,"nodeType":"ExpressionStatement","src":"3219:8:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"3160:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3167:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3160:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3172:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3160:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1246,"nodeType":"WhileStatement","src":"3153:89:7"},{"expression":{"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1247,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3256:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3276:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3276:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3266:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1248,"name":"bytes","nodeType":"ElementaryTypeName","src":"3270:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3266:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3256:31:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1255,"nodeType":"ExpressionStatement","src":"3256:31:7"},{"expression":{"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1256,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3301:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1258,"indexExpression":{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3309:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3301:10:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1263,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3327:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3321:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1261,"name":"uint8","nodeType":"ElementaryTypeName","src":"3321:5:7","typeDescriptions":{}}},"id":1264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3321:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1267,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"3343:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3337:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1265,"name":"uint8","nodeType":"ElementaryTypeName","src":"3337:5:7","typeDescriptions":{}}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3321:30:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3535","id":1270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3354:2:7","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"3321:35:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3314:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1259,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3314:6:7","typeDescriptions":{}}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3314:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3301:56:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1274,"nodeType":"ExpressionStatement","src":"3301:56:7"},{"body":{"id":1308,"nodeType":"Block","src":"3401:95:7","statements":[{"expression":{"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1285,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3419:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1287,"indexExpression":{"id":1286,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3427:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3419:10:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1292,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"3446:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3454:3:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1294,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3460:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1295,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3469:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3460:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3459:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3454:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3453:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3446:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3445:28:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3476:3:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3445:34:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3439:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1290,"name":"uint8","nodeType":"ElementaryTypeName","src":"3439:5:7","typeDescriptions":{}}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3439:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3432:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1288,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3432:6:7","typeDescriptions":{}}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3432:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3419:62:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1307,"nodeType":"ExpressionStatement","src":"3419:62:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3383:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1280,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3388:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3383:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1309,"initializationExpression":{"expression":{"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1275,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3376:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3376:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1278,"nodeType":"ExpressionStatement","src":"3376:5:7"},"loopExpression":{"expression":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3396:3:7","subExpression":{"id":1282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3396:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1284,"nodeType":"ExpressionStatement","src":"3396:3:7"},"nodeType":"ForStatement","src":"3371:125:7"}]},"id":1311,"nodeType":"IfStatement","src":"2953:553:7","trueBody":{"id":1225,"nodeType":"Block","src":"2968:110:7","statements":[{"expression":{"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1201,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"2982:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3002:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2992:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1202,"name":"bytes","nodeType":"ElementaryTypeName","src":"2996:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2992:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2982:22:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1207,"nodeType":"ExpressionStatement","src":"2982:22:7"},{"expression":{"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1208,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3018:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1210,"indexExpression":{"hexValue":"30","id":1209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3026:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3018:10:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1215,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"3044:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3038:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1213,"name":"uint8","nodeType":"ElementaryTypeName","src":"3038:5:7","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3038:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1219,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1190,"src":"3058:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3052:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1217,"name":"uint8","nodeType":"ElementaryTypeName","src":"3052:5:7","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3052:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3038:28:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3031:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1211,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3031:6:7","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3031:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3018:49:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1224,"nodeType":"ExpressionStatement","src":"3018:49:7"}]}},{"expression":{"id":1312,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"3523:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1194,"id":1313,"nodeType":"Return","src":"3516:14:7"}]},"documentation":{"id":1186,"nodeType":"StructuredDocumentation","src":"2530:288:7","text":" @notice Encode the first byte and then the `len` in binary form if `length` is more than 55.\n @param _len    The length of the string or the payload.\n @param _offset 128 if item is string, 192 if item is list.\n @return RLP encoded bytes."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"_writeLength","nameLocation":"2832:12:7","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"_len","nameLocation":"2853:4:7","nodeType":"VariableDeclaration","scope":1315,"src":"2845:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1187,"name":"uint256","nodeType":"ElementaryTypeName","src":"2845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"_offset","nameLocation":"2867:7:7","nodeType":"VariableDeclaration","scope":1315,"src":"2859:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2859:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2844:31:7"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1315,"src":"2898:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"2898:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2897:14:7"},"scope":1536,"src":"2823:714:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1383,"nodeType":"Block","src":"3794:342:7","statements":[{"assignments":[1324],"declarations":[{"constant":false,"id":1324,"mutability":"mutable","name":"b","nameLocation":"3817:1:7","nodeType":"VariableDeclaration","scope":1383,"src":"3804:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"3804:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1329,"initialValue":{"arguments":[{"id":1327,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"3838:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1325,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3821:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3821:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3821:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3804:37:7"},{"assignments":[1331],"declarations":[{"constant":false,"id":1331,"mutability":"mutable","name":"i","nameLocation":"3860:1:7","nodeType":"VariableDeclaration","scope":1383,"src":"3852:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1333,"initialValue":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3864:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3852:13:7"},{"body":{"id":1348,"nodeType":"Block","src":"3895:77:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1340,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3913:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1342,"indexExpression":{"id":1341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"3915:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3913:4:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3913:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1347,"nodeType":"IfStatement","src":"3909:53:7","trueBody":{"id":1346,"nodeType":"Block","src":"3924:38:7","statements":[{"id":1345,"nodeType":"Break","src":"3942:5:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"3882:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3886:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3882:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1349,"loopExpression":{"expression":{"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3890:3:7","subExpression":{"id":1337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"3890:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1339,"nodeType":"ExpressionStatement","src":"3890:3:7"},"nodeType":"ForStatement","src":"3875:97:7"},{"assignments":[1351],"declarations":[{"constant":false,"id":1351,"mutability":"mutable","name":"res","nameLocation":"3995:3:7","nodeType":"VariableDeclaration","scope":1383,"src":"3982:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1350,"name":"bytes","nodeType":"ElementaryTypeName","src":"3982:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1358,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4011:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"4016:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4011:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4001:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1352,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4001:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3982:36:7"},{"body":{"id":1379,"nodeType":"Block","src":"4069:40:7","statements":[{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1370,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"4083:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1372,"indexExpression":{"id":1371,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4087:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4083:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1373,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"4092:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1376,"indexExpression":{"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4094:3:7","subExpression":{"id":1374,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1331,"src":"4094:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4092:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4083:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1378,"nodeType":"ExpressionStatement","src":"4083:15:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4048:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1364,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"4052:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4052:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4048:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"initializationExpression":{"assignments":[1360],"declarations":[{"constant":false,"id":1360,"mutability":"mutable","name":"j","nameLocation":"4041:1:7","nodeType":"VariableDeclaration","scope":1380,"src":"4033:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1362,"initialValue":{"hexValue":"30","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4033:13:7"},"loopExpression":{"expression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4064:3:7","subExpression":{"id":1367,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"4064:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1369,"nodeType":"ExpressionStatement","src":"4064:3:7"},"nodeType":"ForStatement","src":"4028:81:7"},{"expression":{"id":1381,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"4126:3:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1322,"id":1382,"nodeType":"Return","src":"4119:10:7"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"3543:179:7","text":" @notice Encode integer in big endian binary form with no leading zeroes.\n @param _x The integer to encode.\n @return RLP encoded bytes."},"id":1384,"implemented":true,"kind":"function","modifiers":[],"name":"_toBinary","nameLocation":"3736:9:7","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"_x","nameLocation":"3754:2:7","nodeType":"VariableDeclaration","scope":1384,"src":"3746:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1317,"name":"uint256","nodeType":"ElementaryTypeName","src":"3746:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3745:12:7"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1384,"src":"3780:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1320,"name":"bytes","nodeType":"ElementaryTypeName","src":"3780:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3779:14:7"},"scope":1536,"src":"3727:409:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1440,"nodeType":"Block","src":"4530:543:7","statements":[{"assignments":[1395],"declarations":[{"constant":false,"id":1395,"mutability":"mutable","name":"dest","nameLocation":"4548:4:7","nodeType":"VariableDeclaration","scope":1440,"src":"4540:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"4540:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1397,"initialValue":{"id":1396,"name":"_dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"4555:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4540:20:7"},{"assignments":[1399],"declarations":[{"constant":false,"id":1399,"mutability":"mutable","name":"src","nameLocation":"4578:3:7","nodeType":"VariableDeclaration","scope":1440,"src":"4570:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4570:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1401,"initialValue":{"id":1400,"name":"_src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"4584:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4570:18:7"},{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"len","nameLocation":"4606:3:7","nodeType":"VariableDeclaration","scope":1440,"src":"4598:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"4598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1405,"initialValue":{"id":1404,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"4612:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4598:18:7"},{"body":{"id":1422,"nodeType":"Block","src":"4656:136:7","statements":[{"AST":{"nodeType":"YulBlock","src":"4679:56:7","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4704:4:7"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4716:3:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4710:5:7"},"nodeType":"YulFunctionCall","src":"4710:10:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4697:6:7"},"nodeType":"YulFunctionCall","src":"4697:24:7"},"nodeType":"YulExpressionStatement","src":"4697:24:7"}]},"evmVersion":"london","externalReferences":[{"declaration":1395,"isOffset":false,"isSlot":false,"src":"4704:4:7","valueSize":1},{"declaration":1399,"isOffset":false,"isSlot":false,"src":"4716:3:7","valueSize":1}],"id":1413,"nodeType":"InlineAssembly","src":"4670:65:7"},{"expression":{"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1414,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"4748:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4756:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4748:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1417,"nodeType":"ExpressionStatement","src":"4748:10:7"},{"expression":{"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1418,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"4772:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4779:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4772:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1421,"nodeType":"ExpressionStatement","src":"4772:9:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4634:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4641:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4634:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1423,"loopExpression":{"expression":{"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1409,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4645:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4652:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4645:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1412,"nodeType":"ExpressionStatement","src":"4645:9:7"},"nodeType":"ForStatement","src":"4627:165:7"},{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"mask","nameLocation":"4810:4:7","nodeType":"VariableDeclaration","scope":1440,"src":"4802:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1426,"nodeType":"VariableDeclarationStatement","src":"4802:12:7"},{"id":1438,"nodeType":"UncheckedBlock","src":"4824:61:7","statements":[{"expression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1427,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"4848:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4855:3:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4861:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1430,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"4866:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4861:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4860:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4855:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4855:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4848:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1437,"nodeType":"ExpressionStatement","src":"4848:26:7"}]},{"AST":{"nodeType":"YulBlock","src":"4903:164:7","statements":[{"nodeType":"YulVariableDeclaration","src":"4917:41:7","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4942:3:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4936:5:7"},"nodeType":"YulFunctionCall","src":"4936:10:7"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4952:4:7"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4948:3:7"},"nodeType":"YulFunctionCall","src":"4948:9:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4932:3:7"},"nodeType":"YulFunctionCall","src":"4932:26:7"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"4921:7:7","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4971:38:7","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4997:4:7"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4991:5:7"},"nodeType":"YulFunctionCall","src":"4991:11:7"},{"name":"mask","nodeType":"YulIdentifier","src":"5004:4:7"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4987:3:7"},"nodeType":"YulFunctionCall","src":"4987:22:7"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"4975:8:7","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"5029:4:7"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"5038:8:7"},{"name":"srcpart","nodeType":"YulIdentifier","src":"5048:7:7"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5035:2:7"},"nodeType":"YulFunctionCall","src":"5035:21:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5022:6:7"},"nodeType":"YulFunctionCall","src":"5022:35:7"},"nodeType":"YulExpressionStatement","src":"5022:35:7"}]},"evmVersion":"london","externalReferences":[{"declaration":1395,"isOffset":false,"isSlot":false,"src":"4997:4:7","valueSize":1},{"declaration":1395,"isOffset":false,"isSlot":false,"src":"5029:4:7","valueSize":1},{"declaration":1425,"isOffset":false,"isSlot":false,"src":"4952:4:7","valueSize":1},{"declaration":1425,"isOffset":false,"isSlot":false,"src":"5004:4:7","valueSize":1},{"declaration":1399,"isOffset":false,"isSlot":false,"src":"4942:3:7","valueSize":1}],"id":1439,"nodeType":"InlineAssembly","src":"4894:173:7"}]},"documentation":{"id":1385,"nodeType":"StructuredDocumentation","src":"4142:280:7","text":" @custom:attribution https://github.com/Arachnid/solidity-stringutils\n @notice Copies a piece of memory to another location.\n @param _dest Destination location.\n @param _src  Source location.\n @param _len  Length of memory to copy."},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"_memcpy","nameLocation":"4436:7:7","nodeType":"FunctionDefinition","parameters":{"id":1392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"_dest","nameLocation":"4461:5:7","nodeType":"VariableDeclaration","scope":1441,"src":"4453:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"_src","nameLocation":"4484:4:7","nodeType":"VariableDeclaration","scope":1441,"src":"4476:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1388,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1391,"mutability":"mutable","name":"_len","nameLocation":"4506:4:7","nodeType":"VariableDeclaration","scope":1441,"src":"4498:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"4498:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4443:73:7"},"returnParameters":{"id":1393,"nodeType":"ParameterList","parameters":[],"src":"4530:0:7"},"scope":1536,"src":"4427:646:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1534,"nodeType":"Block","src":"5424:710:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1450,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5438:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5438:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5454:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5438:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1460,"nodeType":"IfStatement","src":"5434:67:7","trueBody":{"id":1459,"nodeType":"Block","src":"5457:44:7","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5488:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5478:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1454,"name":"bytes","nodeType":"ElementaryTypeName","src":"5482:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5478:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1449,"id":1458,"nodeType":"Return","src":"5471:19:7"}]}},{"assignments":[1462],"declarations":[{"constant":false,"id":1462,"mutability":"mutable","name":"len","nameLocation":"5519:3:7","nodeType":"VariableDeclaration","scope":1534,"src":"5511:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5511:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1463,"nodeType":"VariableDeclarationStatement","src":"5511:11:7"},{"assignments":[1465],"declarations":[{"constant":false,"id":1465,"mutability":"mutable","name":"i","nameLocation":"5540:1:7","nodeType":"VariableDeclaration","scope":1534,"src":"5532:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"5532:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1467,"initialValue":{"hexValue":"30","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5532:13:7"},{"body":{"id":1482,"nodeType":"Block","src":"5585:47:7","statements":[{"expression":{"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1475,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5599:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1476,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5606:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1478,"indexExpression":{"id":1477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5612:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5606:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5606:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5599:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1481,"nodeType":"ExpressionStatement","src":"5599:22:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5562:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1469,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5566:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5566:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5562:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1483,"loopExpression":{"expression":{"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5580:3:7","subExpression":{"id":1472,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5580:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1474,"nodeType":"ExpressionStatement","src":"5580:3:7"},"nodeType":"ForStatement","src":"5555:77:7"},{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"flattened","nameLocation":"5655:9:7","nodeType":"VariableDeclaration","scope":1534,"src":"5642:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1484,"name":"bytes","nodeType":"ElementaryTypeName","src":"5642:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1490,"initialValue":{"arguments":[{"id":1488,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"5677:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5667:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1486,"name":"bytes","nodeType":"ElementaryTypeName","src":"5671:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5667:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5642:39:7"},{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"flattenedPtr","nameLocation":"5699:12:7","nodeType":"VariableDeclaration","scope":1534,"src":"5691:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"5691:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1493,"nodeType":"VariableDeclarationStatement","src":"5691:20:7"},{"AST":{"nodeType":"YulBlock","src":"5730:60:7","statements":[{"nodeType":"YulAssignment","src":"5744:36:7","value":{"arguments":[{"name":"flattened","nodeType":"YulIdentifier","src":"5764:9:7"},{"kind":"number","nodeType":"YulLiteral","src":"5775:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:7"},"nodeType":"YulFunctionCall","src":"5760:20:7"},"variableNames":[{"name":"flattenedPtr","nodeType":"YulIdentifier","src":"5744:12:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1485,"isOffset":false,"isSlot":false,"src":"5764:9:7","valueSize":1},{"declaration":1492,"isOffset":false,"isSlot":false,"src":"5744:12:7","valueSize":1}],"id":1494,"nodeType":"InlineAssembly","src":"5721:69:7"},{"body":{"id":1530,"nodeType":"Block","src":"5835:266:7","statements":[{"assignments":[1507],"declarations":[{"constant":false,"id":1507,"mutability":"mutable","name":"item","nameLocation":"5862:4:7","nodeType":"VariableDeclaration","scope":1530,"src":"5849:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1506,"name":"bytes","nodeType":"ElementaryTypeName","src":"5849:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1511,"initialValue":{"baseExpression":{"id":1508,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5869:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1510,"indexExpression":{"id":1509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5875:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5869:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5849:28:7"},{"assignments":[1513],"declarations":[{"constant":false,"id":1513,"mutability":"mutable","name":"listPtr","nameLocation":"5900:7:7","nodeType":"VariableDeclaration","scope":1530,"src":"5892:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"5892:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1514,"nodeType":"VariableDeclarationStatement","src":"5892:15:7"},{"AST":{"nodeType":"YulBlock","src":"5930:58:7","statements":[{"nodeType":"YulAssignment","src":"5948:26:7","value":{"arguments":[{"name":"item","nodeType":"YulIdentifier","src":"5963:4:7"},{"kind":"number","nodeType":"YulLiteral","src":"5969:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:7"},"nodeType":"YulFunctionCall","src":"5959:15:7"},"variableNames":[{"name":"listPtr","nodeType":"YulIdentifier","src":"5948:7:7"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1507,"isOffset":false,"isSlot":false,"src":"5963:4:7","valueSize":1},{"declaration":1513,"isOffset":false,"isSlot":false,"src":"5948:7:7","valueSize":1}],"id":1515,"nodeType":"InlineAssembly","src":"5921:67:7"},{"expression":{"arguments":[{"id":1517,"name":"flattenedPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"6010:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1518,"name":"listPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"6024:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1519,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"6033:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6033:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1516,"name":"_memcpy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1441,"src":"6002:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6002:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"6002:43:7"},{"expression":{"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1523,"name":"flattenedPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"6059:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1524,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"6075:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1526,"indexExpression":{"id":1525,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"6081:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6075:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6075:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6059:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1529,"nodeType":"ExpressionStatement","src":"6059:31:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5812:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1500,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"5816:5:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5816:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1531,"initializationExpression":{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5805:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5809:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5805:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"5805:5:7"},"loopExpression":{"expression":{"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5830:3:7","subExpression":{"id":1503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1465,"src":"5830:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1505,"nodeType":"ExpressionStatement","src":"5830:3:7"},"nodeType":"ForStatement","src":"5800:301:7"},{"expression":{"id":1532,"name":"flattened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"6118:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1449,"id":1533,"nodeType":"Return","src":"6111:16:7"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"5079:264:7","text":" @custom:attribution https://github.com/sammayo/solidity-rlp-encoder\n @notice Flattens a list of byte strings into one byte string.\n @param _list List of byte strings to flatten.\n @return The flattened byte string."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"_flatten","nameLocation":"5357:8:7","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"_list","nameLocation":"5381:5:7","nodeType":"VariableDeclaration","scope":1535,"src":"5366:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1443,"name":"bytes","nodeType":"ElementaryTypeName","src":"5366:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1444,"nodeType":"ArrayTypeName","src":"5366:7:7","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5365:22:7"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"5410:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1447,"name":"bytes","nodeType":"ElementaryTypeName","src":"5410:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5409:14:7"},"scope":1536,"src":"5348:786:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1537,"src":"388:5748:7","usedErrors":[]}],"src":"32:6105:7"},"id":7},"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol","exportedSymbols":{"Constants":[416],"CrossDomainMessenger":[2044],"CrossDomainMessengerLegacySpacer0":[1553],"CrossDomainMessengerLegacySpacer1":[1594],"Encoding":[709],"Hashing":[931],"Initializable":[2558],"SafeCall":[977]},"id":2045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2045,"sourceUnit":2559,"src":"57:98:8","symbolAliases":[{"foreign":{"id":1539,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"66:13:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol","file":"../libraries/SafeCall.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2045,"sourceUnit":978,"src":"156:53:8","symbolAliases":[{"foreign":{"id":1541,"name":"SafeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"165:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol","file":"../libraries/Hashing.sol","id":1544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2045,"sourceUnit":932,"src":"210:51:8","symbolAliases":[{"foreign":{"id":1543,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"219:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol","file":"../libraries/Encoding.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2045,"sourceUnit":710,"src":"262:53:8","symbolAliases":[{"foreign":{"id":1545,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"271:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol","file":"../libraries/Constants.sol","id":1548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2045,"sourceUnit":417,"src":"316:55:8","symbolAliases":[{"foreign":{"id":1547,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"325:9:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CrossDomainMessengerLegacySpacer0","contractDependencies":[],"contractKind":"contract","documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"373:299:8","text":" @custom:legacy\n @title CrossDomainMessengerLegacySpacer0\n @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n         libAddressManager variable used to exist. Must be the first contract in the inheritance\n         tree of the CrossDomainMessenger."},"fullyImplemented":true,"id":1553,"linearizedBaseContracts":[1553],"name":"CrossDomainMessengerLegacySpacer0","nameLocation":"682:33:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1550,"nodeType":"StructuredDocumentation","src":"722:124:8","text":" @custom:legacy\n @custom:spacer libAddressManager\n @notice Spacer for backwards compatibility."},"id":1552,"mutability":"mutable","name":"spacer_0_0_20","nameLocation":"867:13:8","nodeType":"VariableDeclaration","scope":1553,"src":"851:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1551,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"}],"scope":2045,"src":"673:210:8","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"CrossDomainMessengerLegacySpacer1","contractDependencies":[],"contractKind":"contract","documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"885:324:8","text":" @custom:legacy\n @title CrossDomainMessengerLegacySpacer1\n @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n         PausableUpgradable and OwnableUpgradeable variables used to exist. Must be\n         the third contract in the inheritance tree of the CrossDomainMessenger."},"fullyImplemented":true,"id":1594,"linearizedBaseContracts":[1594],"name":"CrossDomainMessengerLegacySpacer1","nameLocation":"1219:33:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"1259:200:8","text":" @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         ContextUpgradable via OwnableUpgradeable."},"id":1559,"mutability":"mutable","name":"spacer_1_0_1600","nameLocation":"1484:15:8","nodeType":"VariableDeclaration","scope":1594,"src":"1464:35:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1558,"length":{"hexValue":"3530","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1472:2:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1464:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1560,"nodeType":"StructuredDocumentation","src":"1506:171:8","text":" @custom:legacy\n @custom:spacer _owner\n @notice Spacer for backwards compatibility.\n         Come from OpenZeppelin OwnableUpgradeable."},"id":1562,"mutability":"mutable","name":"spacer_51_0_20","nameLocation":"1698:14:8","nodeType":"VariableDeclaration","scope":1594,"src":"1682:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"1719:193:8","text":" @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         ContextUpgradable via PausableUpgradable."},"id":1567,"mutability":"mutable","name":"spacer_52_0_1568","nameLocation":"1937:16:8","nodeType":"VariableDeclaration","scope":1594,"src":"1917:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1566,"length":{"hexValue":"3439","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1925:2:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"1917:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"1960:173:8","text":" @custom:legacy\n @custom:spacer _paused\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         PausableUpgradable."},"id":1570,"mutability":"mutable","name":"spacer_101_0_1","nameLocation":"2151:14:8","nodeType":"VariableDeclaration","scope":1594,"src":"2138:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1569,"name":"bool","nodeType":"ElementaryTypeName","src":"2138:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"2172:171:8","text":" @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         PausableUpgradable."},"id":1575,"mutability":"mutable","name":"spacer_102_0_1568","nameLocation":"2368:17:8","nodeType":"VariableDeclaration","scope":1594,"src":"2348:37:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2348:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1574,"length":{"hexValue":"3439","id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2356:2:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2348:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1576,"nodeType":"StructuredDocumentation","src":"2392:151:8","text":" @custom:legacy\n @custom:spacer ReentrancyGuardUpgradeable's `_status` field.\n @notice Spacer for backwards compatibility"},"id":1578,"mutability":"mutable","name":"spacer_151_0_32","nameLocation":"2564:15:8","nodeType":"VariableDeclaration","scope":1594,"src":"2548:31:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"2548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"2586:110:8","text":" @custom:spacer ReentrancyGuardUpgradeable\n @notice Spacer for backwards compatibility"},"id":1583,"mutability":"mutable","name":"__gap_reentrancy_guard","nameLocation":"2721:22:8","nodeType":"VariableDeclaration","scope":1594,"src":"2701:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"length":{"hexValue":"3439","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2709:2:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2701:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"2750:122:8","text":" @custom:legacy\n @custom:spacer blockedMessages\n @notice Spacer for backwards compatibility."},"id":1588,"mutability":"mutable","name":"spacer_201_0_32","nameLocation":"2910:15:8","nodeType":"VariableDeclaration","scope":1594,"src":"2877:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1587,"keyType":{"id":1585,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2885:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2877:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1586,"name":"bool","nodeType":"ElementaryTypeName","src":"2896:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"documentation":{"id":1589,"nodeType":"StructuredDocumentation","src":"2932:122:8","text":" @custom:legacy\n @custom:spacer relayedMessages\n @notice Spacer for backwards compatibility."},"id":1593,"mutability":"mutable","name":"spacer_202_0_32","nameLocation":"3092:15:8","nodeType":"VariableDeclaration","scope":1594,"src":"3059:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1592,"keyType":{"id":1590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3067:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3059:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1591,"name":"bool","nodeType":"ElementaryTypeName","src":"3078:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"}],"scope":2045,"src":"1210:1900:8","usedErrors":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":1596,"name":"CrossDomainMessengerLegacySpacer0","nodeType":"IdentifierPath","referencedDeclaration":1553,"src":"3780:33:8"},"id":1597,"nodeType":"InheritanceSpecifier","src":"3780:33:8"},{"baseName":{"id":1598,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":2558,"src":"3819:13:8"},"id":1599,"nodeType":"InheritanceSpecifier","src":"3819:13:8"},{"baseName":{"id":1600,"name":"CrossDomainMessengerLegacySpacer1","nodeType":"IdentifierPath","referencedDeclaration":1594,"src":"3838:33:8"},"id":1601,"nodeType":"InheritanceSpecifier","src":"3838:33:8"}],"canonicalName":"CrossDomainMessenger","contractDependencies":[],"contractKind":"contract","documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"3112:621:8","text":" @custom:upgradeable\n @title CrossDomainMessenger\n @notice CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2\n         cross-chain messenger contracts. It's designed to be a universal interface that only\n         needs to be extended slightly to provide low-level message passing functionality on each\n         chain it's deployed on. Currently only designed for message passing between two paired\n         chains and does not support one-to-many interactions.\n         Any changes to this contract MUST result in a semver bump for contracts that inherit it."},"fullyImplemented":false,"id":2044,"linearizedBaseContracts":[2044,1594,2558,1553],"name":"CrossDomainMessenger","nameLocation":"3752:20:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"3878:62:8","text":" @notice Current message version identifier."},"functionSelector":"3f827a5a","id":1605,"mutability":"constant","name":"MESSAGE_VERSION","nameLocation":"3968:15:8","nodeType":"VariableDeclaration","scope":2044,"src":"3945:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1603,"name":"uint16","nodeType":"ElementaryTypeName","src":"3945:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3986:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"documentation":{"id":1606,"nodeType":"StructuredDocumentation","src":"3994:81:8","text":" @notice Constant overhead added to the base gas for a message."},"functionSelector":"7dea7cc3","id":1609,"mutability":"constant","name":"MIN_GAS_CONSTANT_OVERHEAD","nameLocation":"4103:25:8","nodeType":"VariableDeclaration","scope":2044,"src":"4080:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1607,"name":"uint64","nodeType":"ElementaryTypeName","src":"4080:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3230305f303030","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:7:8","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200_000"},"visibility":"public"},{"constant":true,"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"4145:94:8","text":" @notice Numerator for dynamic overhead added to the base gas for a message."},"functionSelector":"2828d7e8","id":1613,"mutability":"constant","name":"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR","nameLocation":"4267:34:8","nodeType":"VariableDeclaration","scope":2044,"src":"4244:64:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1611,"name":"uint64","nodeType":"ElementaryTypeName","src":"4244:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31303136","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4304:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1016_by_1","typeString":"int_const 1016"},"value":"1016"},"visibility":"public"},{"constant":true,"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"4315:96:8","text":" @notice Denominator for dynamic overhead added to the base gas for a message."},"functionSelector":"0c568498","id":1617,"mutability":"constant","name":"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR","nameLocation":"4439:36:8","nodeType":"VariableDeclaration","scope":2044,"src":"4416:66:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1615,"name":"uint64","nodeType":"ElementaryTypeName","src":"4416:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31303030","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4478:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":true,"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"4489:94:8","text":" @notice Extra gas added to base gas for each byte of calldata in a message."},"functionSelector":"028f85f7","id":1621,"mutability":"constant","name":"MIN_GAS_CALLDATA_OVERHEAD","nameLocation":"4611:25:8","nodeType":"VariableDeclaration","scope":2044,"src":"4588:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1619,"name":"uint64","nodeType":"ElementaryTypeName","src":"4588:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3136","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4639:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"public"},{"constant":false,"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"4648:98:8","text":" @notice Address of the paired CrossDomainMessenger contract on the other chain."},"functionSelector":"9fce812c","id":1624,"mutability":"immutable","name":"OTHER_MESSENGER","nameLocation":"4776:15:8","nodeType":"VariableDeclaration","scope":2044,"src":"4751:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1623,"name":"address","nodeType":"ElementaryTypeName","src":"4751:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"4798:257:8","text":" @notice Mapping of message hashes to boolean receipt values. Note that a message will only\n         be present in this mapping if it has successfully been relayed on this chain, and\n         can therefore not be relayed again."},"functionSelector":"b1b1b209","id":1629,"mutability":"mutable","name":"successfulMessages","nameLocation":"5092:18:8","nodeType":"VariableDeclaration","scope":2044,"src":"5060:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1628,"keyType":{"id":1626,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5068:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"5060:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1627,"name":"bool","nodeType":"ElementaryTypeName","src":"5079:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"5117:347:8","text":" @notice Address of the sender of the currently executing message on the other chain. If the\n         value of this variable is the default value (0x00000000...dead) then no message is\n         currently being executed. Use the xDomainMessageSender getter which will throw an\n         error if this is the case."},"id":1632,"mutability":"mutable","name":"xDomainMsgSender","nameLocation":"5486:16:8","nodeType":"VariableDeclaration","scope":2044,"src":"5469:33:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1631,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"5509:270:8","text":" @notice Nonce for the next message to be sent, without the message version applied. Use the\n         messageNonce getter which will insert the message version into the nonce to give you\n         the actual nonce to be used for the message."},"id":1635,"mutability":"mutable","name":"msgNonce","nameLocation":"5801:8:8","nodeType":"VariableDeclaration","scope":2044,"src":"5784:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1634,"name":"uint240","nodeType":"ElementaryTypeName","src":"5784:7:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"},{"constant":false,"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"5816:259:8","text":" @notice Mapping of message hashes to a boolean if and only if the message has failed to be\n         executed at least once. A message will not be present in this mapping if it\n         successfully executed on the first attempt."},"functionSelector":"a4e7f8bd","id":1640,"mutability":"mutable","name":"failedMessages","nameLocation":"6112:14:8","nodeType":"VariableDeclaration","scope":2044,"src":"6080:46:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1639,"keyType":{"id":1637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6088:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"6080:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"6099:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"6133:67:8","text":" @notice A mapping of hashes to reentrancy locks."},"id":1645,"mutability":"mutable","name":"reentrancyLocks","nameLocation":"6239:15:8","nodeType":"VariableDeclaration","scope":2044,"src":"6205:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1644,"keyType":{"id":1642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"6205:24:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1643,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"6261:228:8","text":" @notice Reserve extra slots in the storage layout for future upgrades.\n         A gap size of 41 was chosen here, so that the first slot used in a child contract\n         would be a multiple of 50."},"id":1650,"mutability":"mutable","name":"__gap","nameLocation":"6514:5:8","nodeType":"VariableDeclaration","scope":2044,"src":"6494:25:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$41_storage","typeString":"uint256[41]"},"typeName":{"baseType":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1649,"length":{"hexValue":"3431","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6502:2:8","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"ArrayTypeName","src":"6494:11:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$41_storage_ptr","typeString":"uint256[41]"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"6526:444:8","text":" @notice Emitted whenever a message is sent to the other chain.\n @param target       Address of the recipient of the message.\n @param sender       Address of the sender of the message.\n @param message      Message to trigger the recipient address with.\n @param messageNonce Unique nonce attached to the message.\n @param gasLimit     Minimum gas limit that the message can be executed with."},"eventSelector":"cb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a","id":1663,"name":"SentMessage","nameLocation":"6981:11:8","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"7018:6:8","nodeType":"VariableDeclaration","scope":1663,"src":"7002:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"7002:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1655,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"7042:6:8","nodeType":"VariableDeclaration","scope":1663,"src":"7034:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"7034:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1657,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"7064:7:8","nodeType":"VariableDeclaration","scope":1663,"src":"7058:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1656,"name":"bytes","nodeType":"ElementaryTypeName","src":"7058:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":false,"mutability":"mutable","name":"messageNonce","nameLocation":"7089:12:8","nodeType":"VariableDeclaration","scope":1663,"src":"7081:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"7081:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"gasLimit","nameLocation":"7119:8:8","nodeType":"VariableDeclaration","scope":1663,"src":"7111:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7111:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6992:141:8"},"src":"6975:159:8"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"7140:347:8","text":" @notice Additional event data to emit, required as of Bedrock. Cannot be merged with the\n         SentMessage event without breaking the ABI of this contract, this is good enough.\n @param sender Address of the sender of the message.\n @param value  ETH value sent along with the message to the recipient."},"eventSelector":"8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d546","id":1670,"name":"SentMessageExtension1","nameLocation":"7498:21:8","nodeType":"EventDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"7536:6:8","nodeType":"VariableDeclaration","scope":1670,"src":"7520:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"7552:5:8","nodeType":"VariableDeclaration","scope":1670,"src":"7544:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7519:39:8"},"src":"7492:67:8"},{"anonymous":false,"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"7565:159:8","text":" @notice Emitted whenever a message is successfully relayed on this chain.\n @param msgHash Hash of the message that was relayed."},"eventSelector":"4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c","id":1675,"name":"RelayedMessage","nameLocation":"7735:14:8","nodeType":"EventDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"7766:7:8","nodeType":"VariableDeclaration","scope":1675,"src":"7750:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7750:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7749:25:8"},"src":"7729:46:8"},{"anonymous":false,"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"7781:164:8","text":" @notice Emitted whenever a message fails to be relayed on this chain.\n @param msgHash Hash of the message that failed to be relayed."},"eventSelector":"99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f","id":1680,"name":"FailedRelayedMessage","nameLocation":"7956:20:8","nodeType":"EventDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"7993:7:8","nodeType":"VariableDeclaration","scope":1680,"src":"7977:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7977:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7976:25:8"},"src":"7950:52:8"},{"body":{"id":1690,"nodeType":"Block","src":"8137:50:8","statements":[{"expression":{"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1686,"name":"OTHER_MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"8147:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1687,"name":"_otherMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"8165:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8147:33:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1689,"nodeType":"ExpressionStatement","src":"8147:33:8"}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"8008:87:8","text":" @param _otherMessenger Address of the messenger on the paired chain."},"id":1691,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"_otherMessenger","nameLocation":"8120:15:8","nodeType":"VariableDeclaration","scope":1691,"src":"8112:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"8112:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8111:25:8"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[],"src":"8137:0:8"},"scope":2044,"src":"8100:87:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"8916:949:8","statements":[{"expression":{"arguments":[{"id":1702,"name":"OTHER_MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"9301:15:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1704,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9338:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1705,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9348:12:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1703,"name":"baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"9330:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint32_$returns$_t_uint64_$","typeString":"function (bytes calldata,uint32) pure returns (uint64)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9330:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":1707,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9375:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"9375:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"expression":{"id":1711,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9438:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayMessage","nodeType":"MemberAccess","referencedDeclaration":1942,"src":"9438:17:8","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) payable external"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"9438:26:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1714,"name":"messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"9482:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9482:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9514:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9514:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"9542:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1719,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9567:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"9567:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1721,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9594:12:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1722,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9624:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1709,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9398:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"9398:22:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9398:248:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1701,"name":"_sendMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9275:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint64_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint64,uint256,bytes memory)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9275:381:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1725,"nodeType":"ExpressionStatement","src":"9275:381:8"},{"eventCall":{"arguments":[{"id":1727,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"9684:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1728,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9693:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9693:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1730,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"9705:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1731,"name":"messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"9715:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9715:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1733,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9731:12:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1726,"name":"SentMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"9672:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,bytes memory,uint256,uint256)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9672:72:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"EmitStatement","src":"9667:77:8"},{"eventCall":{"arguments":[{"expression":{"id":1737,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9781:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9781:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1739,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9793:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"9793:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"SentMessageExtension1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"9759:21:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9759:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1742,"nodeType":"EmitStatement","src":"9754:49:8"},{"id":1746,"nodeType":"UncheckedBlock","src":"9814:45:8","statements":[{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9838:10:8","subExpression":{"id":1743,"name":"msgNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"9840:8:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"id":1745,"nodeType":"ExpressionStatement","src":"9838:10:8"}]}]},"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"8193:587:8","text":" @notice Sends a message to some target address on the other chain. Note that if the call\n         always reverts, then the message will be unrelayable, and any ETH sent will be\n         permanently locked. The same will occur if the target on the other chain is\n         considered unsafe (see the _isUnsafeTarget() function).\n @param _target      Target contract or wallet address.\n @param _message     Message to trigger the target address with.\n @param _minGasLimit Minimum gas limit that the message can be executed with."},"functionSelector":"3dbb202b","id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"sendMessage","nameLocation":"8794:11:8","nodeType":"FunctionDefinition","parameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"_target","nameLocation":"8823:7:8","nodeType":"VariableDeclaration","scope":1748,"src":"8815:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"8815:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"_message","nameLocation":"8855:8:8","nodeType":"VariableDeclaration","scope":1748,"src":"8840:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1695,"name":"bytes","nodeType":"ElementaryTypeName","src":"8840:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"_minGasLimit","nameLocation":"8880:12:8","nodeType":"VariableDeclaration","scope":1748,"src":"8873:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1697,"name":"uint32","nodeType":"ElementaryTypeName","src":"8873:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8805:93:8"},"returnParameters":{"id":1700,"nodeType":"ParameterList","parameters":[],"src":"8916:0:8"},"scope":2044,"src":"8785:1080:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1941,"nodeType":"Block","src":"10773:3450:8","statements":[{"assignments":[null,1765],"declarations":[null,{"constant":false,"id":1765,"mutability":"mutable","name":"version","nameLocation":"10793:7:8","nodeType":"VariableDeclaration","scope":1941,"src":"10786:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1764,"name":"uint16","nodeType":"ElementaryTypeName","src":"10786:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":1770,"initialValue":{"arguments":[{"id":1768,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"10834:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1766,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"10804:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$709_$","typeString":"type(library Encoding)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeVersionedNonce","nodeType":"MemberAccess","referencedDeclaration":708,"src":"10804:29:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$","typeString":"function (uint256) pure returns (uint240,uint16)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10804:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"10783:58:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1772,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"10872:7:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10882:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10872:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206f6e6c792076657273696f6e2030206f722031206d657373616765732061726520737570706f7274656420617420746869732074696d65","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10897:79:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032","typeString":"literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""},"value":"CrossDomainMessenger: only version 0 or 1 messages are supported at this time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032","typeString":"literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""}],"id":1771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10851:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10851:135:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"10851:135:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"11188:7:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11199:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11188:12:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1801,"nodeType":"IfStatement","src":"11184:293:8","trueBody":{"id":1800,"nodeType":"Block","src":"11202:275:8","statements":[{"assignments":[1782],"declarations":[{"constant":false,"id":1782,"mutability":"mutable","name":"oldHash","nameLocation":"11224:7:8","nodeType":"VariableDeclaration","scope":1800,"src":"11216:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11216:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1790,"initialValue":{"arguments":[{"id":1785,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"11267:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"11276:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1787,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"11285:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1788,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"11295:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1783,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"11234:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashing_$931_$","typeString":"type(library Hashing)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"hashCrossDomainMessageV0","nodeType":"MemberAccess","referencedDeclaration":847,"src":"11234:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes32)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11234:68:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11216:86:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1792,"name":"successfulMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"11341:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1794,"indexExpression":{"id":1793,"name":"oldHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"11360:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11341:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11372:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11341:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206c6567616379207769746864726177616c20616c72656164792072656c61796564","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11395:57:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1","typeString":"literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""},"value":"CrossDomainMessenger: legacy withdrawal already relayed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1","typeString":"literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""}],"id":1791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11316:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11316:150:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1799,"nodeType":"ExpressionStatement","src":"11316:150:8"}]}},{"assignments":[1803],"declarations":[{"constant":false,"id":1803,"mutability":"mutable","name":"versionedHash","nameLocation":"11655:13:8","nodeType":"VariableDeclaration","scope":1941,"src":"11647:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11647:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1813,"initialValue":{"arguments":[{"id":1806,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"11717:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1807,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"11737:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1808,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"11758:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1809,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"11779:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1810,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"11799:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1811,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"11825:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1804,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":931,"src":"11671:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashing_$931_$","typeString":"type(library Hashing)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"hashCrossDomainMessageV1","nodeType":"MemberAccess","referencedDeclaration":878,"src":"11671:32:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes32)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11671:172:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11647:196:8"},{"condition":{"baseExpression":{"id":1814,"name":"reentrancyLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"11938:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1816,"indexExpression":{"id":1815,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"11954:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11938:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"11934:102:8","trueBody":{"id":1821,"nodeType":"Block","src":"11970:66:8","statements":[{"expression":{"arguments":[{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11991:33:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1817,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11984:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11984:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"11984:41:8"}]}},{"expression":{"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1823,"name":"reentrancyLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"12104:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1825,"indexExpression":{"id":1824,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"12120:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12104:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12137:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12104:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1828,"nodeType":"ExpressionStatement","src":"12104:37:8"},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1829,"name":"_isOtherMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"12156:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12156:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1861,"nodeType":"Block","src":"12421:329:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1847,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12460:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"12460:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12460:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d757374206265207a65726f20756e6c657373206d6573736167652069732066726f6d20612073797374656d2061646472657373","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12492:82:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5","typeString":"literal_string \"CrossDomainMessenger: value must be zero unless message is from a system address\""},"value":"CrossDomainMessenger: value must be zero unless message is from a system address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5","typeString":"literal_string \"CrossDomainMessenger: value must be zero unless message is from a system address\""}],"id":1846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12435:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12435:153:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"ExpressionStatement","src":"12435:153:8"},{"expression":{"arguments":[{"baseExpression":{"id":1855,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12628:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1857,"indexExpression":{"id":1856,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"12643:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12628:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206d6573736167652063616e6e6f74206265207265706c61796564","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12675:50:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d","typeString":"literal_string \"CrossDomainMessenger: message cannot be replayed\""},"value":"CrossDomainMessenger: message cannot be replayed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d","typeString":"literal_string \"CrossDomainMessenger: message cannot be replayed\""}],"id":1854,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12603:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12603:136:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1860,"nodeType":"ExpressionStatement","src":"12603:136:8"}]},"id":1862,"nodeType":"IfStatement","src":"12152:598:8","trueBody":{"id":1845,"nodeType":"Block","src":"12177:238:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1832,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12332:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"12332:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1834,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"12345:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12332:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1831,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"12325:6:8","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12325:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1837,"nodeType":"ExpressionStatement","src":"12325:27:8"},{"expression":{"arguments":[{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12373:30:8","subExpression":{"baseExpression":{"id":1839,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"12374:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1841,"indexExpression":{"id":1840,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"12389:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12374:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1838,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"12366:6:8","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12366:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"ExpressionStatement","src":"12366:38:8"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1865,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"12797:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1864,"name":"_isUnsafeTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"12781:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12781:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12809:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12781:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e64206d65737361676520746f20626c6f636b65642073797374656d2061646472657373","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12828:69:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5","typeString":"literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""},"value":"CrossDomainMessenger: cannot send message to blocked system address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5","typeString":"literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""}],"id":1863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12760:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12760:147:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1871,"nodeType":"ExpressionStatement","src":"12760:147:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1873,"name":"successfulMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"12939:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1875,"indexExpression":{"id":1874,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"12958:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12939:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":1876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12976:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12939:42:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206d6573736167652068617320616c7265616479206265656e2072656c61796564","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12995:56:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150","typeString":"literal_string \"CrossDomainMessenger: message has already been relayed\""},"value":"CrossDomainMessenger: message has already been relayed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150","typeString":"literal_string \"CrossDomainMessenger: message has already been relayed\""}],"id":1872,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12918:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12918:143:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1880,"nodeType":"ExpressionStatement","src":"12918:143:8"},{"expression":{"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1881,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"13072:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1882,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"13091:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13072:26:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1884,"nodeType":"ExpressionStatement","src":"13072:26:8"},{"assignments":[1886],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"13113:7:8","nodeType":"VariableDeclaration","scope":1941,"src":"13108:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"13108:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1894,"initialValue":{"arguments":[{"id":1889,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"13147:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1890,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"13156:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1891,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"13170:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1892,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"13178:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1887,"name":"SafeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"13123:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCall_$977_$","typeString":"type(library SafeCall)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"callWithMinGas","nodeType":"MemberAccess","referencedDeclaration":976,"src":"13123:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,uint256,bytes memory) returns (bool)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13123:64:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13108:79:8"},{"expression":{"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1895,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"13197:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1896,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"13216:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$416_$","typeString":"type(library Constants)"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DEFAULT_L2_SENDER","nodeType":"MemberAccess","referencedDeclaration":415,"src":"13216:27:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13197:46:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1899,"nodeType":"ExpressionStatement","src":"13197:46:8"},{"condition":{"id":1900,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"13258:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1933,"nodeType":"Block","src":"13386:725:8","statements":[{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1912,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"13400:14:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1914,"indexExpression":{"id":1913,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13415:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13400:29:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13432:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13400:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1917,"nodeType":"ExpressionStatement","src":"13400:36:8"},{"eventCall":{"arguments":[{"id":1919,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13476:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1918,"name":"FailedRelayedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"13455:20:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13455:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"EmitStatement","src":"13450:40:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1922,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"13970:2:8","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"13970:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1924,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"13983:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$416_$","typeString":"type(library Constants)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ESTIMATION_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":411,"src":"13983:28:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13970:41:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1932,"nodeType":"IfStatement","src":"13966:135:8","trueBody":{"id":1931,"nodeType":"Block","src":"14013:88:8","statements":[{"expression":{"arguments":[{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2072656c6179206d657373616765","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14038:47:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288","typeString":"literal_string \"CrossDomainMessenger: failed to relay message\""},"value":"CrossDomainMessenger: failed to relay message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288","typeString":"literal_string \"CrossDomainMessenger: failed to relay message\""}],"id":1927,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14031:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14031:55:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1930,"nodeType":"ExpressionStatement","src":"14031:55:8"}]}}]},"id":1934,"nodeType":"IfStatement","src":"13254:857:8","trueBody":{"id":1911,"nodeType":"Block","src":"13267:113:8","statements":[{"expression":{"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1901,"name":"successfulMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"13281:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1903,"indexExpression":{"id":1902,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13300:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13281:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13317:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13281:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"ExpressionStatement","src":"13281:40:8"},{"eventCall":{"arguments":[{"id":1908,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13355:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1907,"name":"RelayedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"13340:14:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13340:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"EmitStatement","src":"13335:34:8"}]}},{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1935,"name":"reentrancyLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"14178:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1937,"indexExpression":{"id":1936,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"14194:13:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14178:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14211:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14178:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1940,"nodeType":"ExpressionStatement","src":"14178:38:8"}]},"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"9871:691:8","text":" @notice Relays a message that was sent by the other CrossDomainMessenger contract. Can only\n         be executed via cross-chain call from the other messenger OR if the message was\n         already received once and is currently being replayed.\n @param _nonce       Nonce of the message being relayed.\n @param _sender      Address of the user who sent the message.\n @param _target      Address that the message is targeted at.\n @param _value       ETH value to send with the message.\n @param _minGasLimit Minimum amount of gas that the message can be executed with.\n @param _message     Message to send to the target."},"functionSelector":"d764ad0b","id":1942,"implemented":true,"kind":"function","modifiers":[],"name":"relayMessage","nameLocation":"10576:12:8","nodeType":"FunctionDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"_nonce","nameLocation":"10606:6:8","nodeType":"VariableDeclaration","scope":1942,"src":"10598:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"10598:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1753,"mutability":"mutable","name":"_sender","nameLocation":"10630:7:8","nodeType":"VariableDeclaration","scope":1942,"src":"10622:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"10622:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1755,"mutability":"mutable","name":"_target","nameLocation":"10655:7:8","nodeType":"VariableDeclaration","scope":1942,"src":"10647:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"_value","nameLocation":"10680:6:8","nodeType":"VariableDeclaration","scope":1942,"src":"10672:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10672:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1759,"mutability":"mutable","name":"_minGasLimit","nameLocation":"10704:12:8","nodeType":"VariableDeclaration","scope":1942,"src":"10696:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"10696:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"_message","nameLocation":"10741:8:8","nodeType":"VariableDeclaration","scope":1942,"src":"10726:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1760,"name":"bytes","nodeType":"ElementaryTypeName","src":"10726:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10588:167:8"},"returnParameters":{"id":1763,"nodeType":"ParameterList","parameters":[],"src":"10773:0:8"},"scope":2044,"src":"10567:3656:8","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1958,"nodeType":"Block","src":"14693:198:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"14724:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1950,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"14744:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$416_$","typeString":"type(library Constants)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DEFAULT_L2_SENDER","nodeType":"MemberAccess","referencedDeclaration":415,"src":"14744:27:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14724:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d65737361676553656e646572206973206e6f7420736574","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14785:55:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398","typeString":"literal_string \"CrossDomainMessenger: xDomainMessageSender is not set\""},"value":"CrossDomainMessenger: xDomainMessageSender is not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398","typeString":"literal_string \"CrossDomainMessenger: xDomainMessageSender is not set\""}],"id":1948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14703:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14703:147:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1955,"nodeType":"ExpressionStatement","src":"14703:147:8"},{"expression":{"id":1956,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"14868:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1947,"id":1957,"nodeType":"Return","src":"14861:23:8"}]},"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"14229:395:8","text":" @notice Retrieves the address of the contract or wallet that initiated the currently\n         executing message on the other chain. Will throw an error if there is no message\n         currently being executed. Allows the recipient of a call to see who triggered it.\n @return Address of the sender of the currently executing message on the other chain."},"functionSelector":"6e296e45","id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"xDomainMessageSender","nameLocation":"14638:20:8","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[],"src":"14658:2:8"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1959,"src":"14684:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1945,"name":"address","nodeType":"ElementaryTypeName","src":"14684:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14683:9:8"},"scope":2044,"src":"14629:262:8","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1971,"nodeType":"Block","src":"15285:80:8","statements":[{"expression":{"arguments":[{"id":1967,"name":"msgNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"15332:8:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},{"id":1968,"name":"MESSAGE_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"15342:15:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint240","typeString":"uint240"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":1965,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"15302:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$709_$","typeString":"type(library Encoding)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeVersionedNonce","nodeType":"MemberAccess","referencedDeclaration":686,"src":"15302:29:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint240_$_t_uint16_$returns$_t_uint256_$","typeString":"function (uint240,uint16) pure returns (uint256)"}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15302:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1964,"id":1970,"nodeType":"Return","src":"15295:63:8"}]},"documentation":{"id":1960,"nodeType":"StructuredDocumentation","src":"14897:329:8","text":" @notice Retrieves the next message nonce. Message version will be added to the upper two\n         bytes of the message nonce. Message version allows us to treat messages as having\n         different structures.\n @return Nonce of the next message to be sent, with added message version."},"functionSelector":"ecc70428","id":1972,"implemented":true,"kind":"function","modifiers":[],"name":"messageNonce","nameLocation":"15240:12:8","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[],"src":"15252:2:8"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"15276:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"15276:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:9:8"},"scope":2044,"src":"15231:134:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2004,"nodeType":"Block","src":"16093:616:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1984,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"16421:12:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16414:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1982,"name":"uint64","nodeType":"ElementaryTypeName","src":"16414:6:8","typeDescriptions":{}}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16414:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1986,"name":"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"16437:34:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16414:57:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16413:59:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1989,"name":"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"16491:36:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16413:114:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16412:116:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1994,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"16584:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16584:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16577:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1992,"name":"uint64","nodeType":"ElementaryTypeName","src":"16577:6:8","typeDescriptions":{}}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16577:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1997,"name":"MIN_GAS_CALLDATA_OVERHEAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"16603:25:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16577:51:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16576:53:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16412:217:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2001,"name":"MIN_GAS_CONSTANT_OVERHEAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"16677:25:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16412:290:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1981,"id":2003,"nodeType":"Return","src":"16361:341:8"}]},"documentation":{"id":1973,"nodeType":"StructuredDocumentation","src":"15371:625:8","text":" @notice Computes the amount of gas required to guarantee that a given message will be\n         received on the other chain without running out of gas. Guaranteeing that a message\n         will not run out of gas is important because this ensures that a message can always\n         be replayed on the other chain if it fails to execute completely.\n @param _message     Message to compute the amount of required gas for.\n @param _minGasLimit Minimum desired gas limit when message goes to target.\n @return Amount of gas required to guarantee message receipt."},"functionSelector":"b28ade25","id":2005,"implemented":true,"kind":"function","modifiers":[],"name":"baseGas","nameLocation":"16010:7:8","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"_message","nameLocation":"16033:8:8","nodeType":"VariableDeclaration","scope":2005,"src":"16018:23:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"16018:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"_minGasLimit","nameLocation":"16050:12:8","nodeType":"VariableDeclaration","scope":2005,"src":"16043:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1976,"name":"uint32","nodeType":"ElementaryTypeName","src":"16043:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"16017:46:8"},"returnParameters":{"id":1981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2005,"src":"16085:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1979,"name":"uint64","nodeType":"ElementaryTypeName","src":"16085:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"16084:8:8"},"scope":2044,"src":"16001:708:8","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2016,"nodeType":"Block","src":"16876:63:8","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2011,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"16886:16:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2012,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"16905:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$416_$","typeString":"type(library Constants)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DEFAULT_L2_SENDER","nodeType":"MemberAccess","referencedDeclaration":415,"src":"16905:27:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16886:46:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2015,"nodeType":"ExpressionStatement","src":"16886:46:8"}]},"documentation":{"id":2006,"nodeType":"StructuredDocumentation","src":"16715:38:8","text":" @notice Intializer."},"id":2017,"implemented":true,"kind":"function","modifiers":[{"id":2009,"kind":"modifierInvocation","modifierName":{"id":2008,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":2521,"src":"16859:16:8"},"nodeType":"ModifierInvocation","src":"16859:16:8"}],"name":"__CrossDomainMessenger_init","nameLocation":"16820:27:8","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"16847:2:8"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[],"src":"16876:0:8"},"scope":2044,"src":"16811:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"16945:492:8","text":" @notice Sends a low-level message to the other messenger. Needs to be implemented by child\n         contracts because the logic for this depends on the network where the messenger is\n         being deployed.\n @param _to       Recipient of the message on the other chain.\n @param _gasLimit Minimum gas limit the message can be executed with.\n @param _value    Amount of ETH to send with the message.\n @param _data     Message data."},"id":2029,"implemented":false,"kind":"function","modifiers":[],"name":"_sendMessage","nameLocation":"17451:12:8","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2020,"mutability":"mutable","name":"_to","nameLocation":"17481:3:8","nodeType":"VariableDeclaration","scope":2029,"src":"17473:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2019,"name":"address","nodeType":"ElementaryTypeName","src":"17473:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2022,"mutability":"mutable","name":"_gasLimit","nameLocation":"17501:9:8","nodeType":"VariableDeclaration","scope":2029,"src":"17494:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2021,"name":"uint64","nodeType":"ElementaryTypeName","src":"17494:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"_value","nameLocation":"17528:6:8","nodeType":"VariableDeclaration","scope":2029,"src":"17520:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"17520:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2026,"mutability":"mutable","name":"_data","nameLocation":"17557:5:8","nodeType":"VariableDeclaration","scope":2029,"src":"17544:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2025,"name":"bytes","nodeType":"ElementaryTypeName","src":"17544:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17463:105:8"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"17585:0:8"},"scope":2044,"src":"17442:144:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"17592:317:8","text":" @notice Checks whether the message is coming from the other messenger. Implemented by child\n         contracts because the logic for this depends on the network where the messenger is\n         being deployed.\n @return Whether the message is coming from the other messenger."},"id":2035,"implemented":false,"kind":"function","modifiers":[],"name":"_isOtherMessenger","nameLocation":"17923:17:8","nodeType":"FunctionDefinition","parameters":{"id":2031,"nodeType":"ParameterList","parameters":[],"src":"17940:2:8"},"returnParameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"17974:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2032,"name":"bool","nodeType":"ElementaryTypeName","src":"17974:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17973:6:8"},"scope":2044,"src":"17914:66:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":2036,"nodeType":"StructuredDocumentation","src":"17986:575:8","text":" @notice Checks whether a given call target is a system address that could cause the\n         messenger to peform an unsafe action. This is NOT a mechanism for blocking user\n         addresses. This is ONLY used to prevent the execution of messages to specific\n         system addresses that could cause security issues, e.g., having the\n         CrossDomainMessenger send messages to itself.\n @param _target Address of the contract to check.\n @return Whether or not the address is an unsafe system address."},"id":2043,"implemented":false,"kind":"function","modifiers":[],"name":"_isUnsafeTarget","nameLocation":"18575:15:8","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2038,"mutability":"mutable","name":"_target","nameLocation":"18599:7:8","nodeType":"VariableDeclaration","scope":2043,"src":"18591:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"18591:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18590:17:8"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2043,"src":"18639:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2040,"name":"bool","nodeType":"ElementaryTypeName","src":"18639:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18638:6:8"},"scope":2044,"src":"18566:79:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2045,"src":"3734:14913:8","usedErrors":[]}],"src":"32:18616:8"},"id":8},"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol","exportedSymbols":{"Address":[3243],"CrossDomainMessenger":[2044],"ERC721Bridge":[2267]},"id":2268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2046,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol","file":"./CrossDomainMessenger.sol","id":2048,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2268,"sourceUnit":2045,"src":"57:66:9","symbolAliases":[{"foreign":{"id":2047,"name":"CrossDomainMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"66:20:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":2050,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2268,"sourceUnit":3244,"src":"124:68:9","symbolAliases":[{"foreign":{"id":2049,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"133:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"ERC721Bridge","contractDependencies":[],"contractKind":"contract","documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"194:107:9","text":" @title ERC721Bridge\n @notice ERC721Bridge is a base contract for the L1 and L2 ERC721 bridges."},"fullyImplemented":false,"id":2267,"linearizedBaseContracts":[2267],"name":"ERC721Bridge","nameLocation":"320:12:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"339:61:9","text":" @notice Messenger contract on this domain."},"functionSelector":"927ede2d","id":2055,"mutability":"immutable","name":"MESSENGER","nameLocation":"443:9:9","nodeType":"VariableDeclaration","scope":2267,"src":"405:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"},"typeName":{"id":2054,"nodeType":"UserDefinedTypeName","pathNode":{"id":2053,"name":"CrossDomainMessenger","nodeType":"IdentifierPath","referencedDeclaration":2044,"src":"405:20:9"},"referencedDeclaration":2044,"src":"405:20:9","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"visibility":"public"},{"constant":false,"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"459:70:9","text":" @notice Address of the bridge on the other network."},"functionSelector":"7f46ddb2","id":2058,"mutability":"immutable","name":"OTHER_BRIDGE","nameLocation":"559:12:9","nodeType":"VariableDeclaration","scope":2267,"src":"534:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2057,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"578:108:9","text":" @notice Reserve extra slots (to a total of 50) in the storage layout for future upgrades."},"id":2063,"mutability":"mutable","name":"__gap","nameLocation":"711:5:9","nodeType":"VariableDeclaration","scope":2267,"src":"691:25:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":2060,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2062,"length":{"hexValue":"3439","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"699:2:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"691:11:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"723:479:9","text":" @notice Emitted when an ERC721 bridge to the other network is initiated.\n @param localToken  Address of the token on this domain.\n @param remoteToken Address of the token on the remote domain.\n @param from        Address that initiated bridging action.\n @param to          Address to receive the token.\n @param tokenId     ID of the specific token deposited.\n @param extraData   Extra data for use on the client-side."},"eventSelector":"b7460e2a880f256ebef3406116ff3eee0cee51ebccdc2a40698f87ebb2e9c1a5","id":2078,"name":"ERC721BridgeInitiated","nameLocation":"1213:21:9","nodeType":"EventDefinition","parameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"indexed":true,"mutability":"mutable","name":"localToken","nameLocation":"1260:10:9","nodeType":"VariableDeclaration","scope":2078,"src":"1244:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"indexed":true,"mutability":"mutable","name":"remoteToken","nameLocation":"1296:11:9","nodeType":"VariableDeclaration","scope":2078,"src":"1280:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2067,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2070,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1333:4:9","nodeType":"VariableDeclaration","scope":2078,"src":"1317:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2069,"name":"address","nodeType":"ElementaryTypeName","src":"1317:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2072,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1355:2:9","nodeType":"VariableDeclaration","scope":2078,"src":"1347:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2071,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2074,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1375:7:9","nodeType":"VariableDeclaration","scope":2078,"src":"1367:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1367:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2076,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"1398:9:9","nodeType":"VariableDeclaration","scope":2078,"src":"1392:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2075,"name":"bytes","nodeType":"ElementaryTypeName","src":"1392:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1234:179:9"},"src":"1207:207:9"},{"anonymous":false,"documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"1420:481:9","text":" @notice Emitted when an ERC721 bridge from the other network is finalized.\n @param localToken  Address of the token on this domain.\n @param remoteToken Address of the token on the remote domain.\n @param from        Address that initiated bridging action.\n @param to          Address to receive the token.\n @param tokenId     ID of the specific token deposited.\n @param extraData   Extra data for use on the client-side."},"eventSelector":"1f39bf6707b5d608453e0ae4c067b562bcc4c85c0f562ef5d2c774d2e7f131ac","id":2093,"name":"ERC721BridgeFinalized","nameLocation":"1912:21:9","nodeType":"EventDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2081,"indexed":true,"mutability":"mutable","name":"localToken","nameLocation":"1959:10:9","nodeType":"VariableDeclaration","scope":2093,"src":"1943:26:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"1943:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2083,"indexed":true,"mutability":"mutable","name":"remoteToken","nameLocation":"1995:11:9","nodeType":"VariableDeclaration","scope":2093,"src":"1979:27:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2082,"name":"address","nodeType":"ElementaryTypeName","src":"1979:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2085,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2032:4:9","nodeType":"VariableDeclaration","scope":2093,"src":"2016:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2084,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2087,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"2054:2:9","nodeType":"VariableDeclaration","scope":2093,"src":"2046:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"2046:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2089,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2074:7:9","nodeType":"VariableDeclaration","scope":2093,"src":"2066:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2066:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2091,"indexed":false,"mutability":"mutable","name":"extraData","nameLocation":"2097:9:9","nodeType":"VariableDeclaration","scope":2093,"src":"2091:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2090,"name":"bytes","nodeType":"ElementaryTypeName","src":"2091:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1933:179:9"},"src":"1906:207:9"},{"body":{"id":2114,"nodeType":"Block","src":"2249:222:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2280:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2280:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2101,"name":"MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2302:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}],"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2294:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"2294:7:9","typeDescriptions":{}}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2294:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2280:32:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2104,"name":"MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2316:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"xDomainMessageSender","nodeType":"MemberAccess","referencedDeclaration":1959,"src":"2316:30:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2316:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2107,"name":"OTHER_BRIDGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"2352:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2316:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2280:84:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20746865206f7468657220627269646765","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2378:65:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","typeString":"literal_string \"ERC721Bridge: function can only be called from the other bridge\""},"value":"ERC721Bridge: function can only be called from the other bridge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","typeString":"literal_string \"ERC721Bridge: function can only be called from the other bridge\""}],"id":2096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2259:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2259:194:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2112,"nodeType":"ExpressionStatement","src":"2259:194:9"},{"id":2113,"nodeType":"PlaceholderStatement","src":"2463:1:9"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"2119:98:9","text":" @notice Ensures that the caller is a cross-chain message from the other bridge."},"id":2115,"name":"onlyOtherBridge","nameLocation":"2231:15:9","nodeType":"ModifierDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"2246:2:9"},"src":"2222:249:9","virtual":false,"visibility":"internal"},{"body":{"id":2153,"nodeType":"Block","src":"2705:286:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"_messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2723:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2745:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{}}},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2737:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2723:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314272696467653a206d657373656e6765722063616e6e6f742062652061646472657373283029","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2749:46:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","typeString":"literal_string \"ERC721Bridge: messenger cannot be address(0)\""},"value":"ERC721Bridge: messenger cannot be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","typeString":"literal_string \"ERC721Bridge: messenger cannot be address(0)\""}],"id":2123,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2715:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2715:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2132,"nodeType":"ExpressionStatement","src":"2715:81:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"_otherBridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2814:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2830:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"2830:7:9","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2830:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2814:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314272696467653a206f74686572206272696467652063616e6e6f742062652061646472657373283029","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:49:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","typeString":"literal_string \"ERC721Bridge: other bridge cannot be address(0)\""},"value":"ERC721Bridge: other bridge cannot be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","typeString":"literal_string \"ERC721Bridge: other bridge cannot be address(0)\""}],"id":2133,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2806:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2806:86:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2142,"nodeType":"ExpressionStatement","src":"2806:86:9"},{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2143,"name":"MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2903:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2145,"name":"_messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2936:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2144,"name":"CrossDomainMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2915:20:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CrossDomainMessenger_$2044_$","typeString":"type(contract CrossDomainMessenger)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2915:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"src":"2903:44:9","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"id":2148,"nodeType":"ExpressionStatement","src":"2903:44:9"},{"expression":{"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"OTHER_BRIDGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"2957:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2150,"name":"_otherBridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"2972:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2957:27:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2152,"nodeType":"ExpressionStatement","src":"2957:27:9"}]},"documentation":{"id":2116,"nodeType":"StructuredDocumentation","src":"2477:169:9","text":" @param _messenger   Address of the CrossDomainMessenger on this network.\n @param _otherBridge Address of the ERC721 bridge on the other network."},"id":2154,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"_messenger","nameLocation":"2671:10:9","nodeType":"VariableDeclaration","scope":2154,"src":"2663:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"_otherBridge","nameLocation":"2691:12:9","nodeType":"VariableDeclaration","scope":2154,"src":"2683:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2119,"name":"address","nodeType":"ElementaryTypeName","src":"2683:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2662:42:9"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[],"src":"2705:0:9"},"scope":2267,"src":"2651:340:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"3211:33:9","statements":[{"expression":{"id":2161,"name":"MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"3228:9:9","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"functionReturnParameters":2160,"id":2162,"nodeType":"Return","src":"3221:16:9"}]},"documentation":{"id":2155,"nodeType":"StructuredDocumentation","src":"2997:143:9","text":" @custom:legacy\n @notice Legacy getter for messenger contract.\n @return Messenger contract on this domain."},"functionSelector":"3cb747bf","id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"messenger","nameLocation":"3154:9:9","nodeType":"FunctionDefinition","parameters":{"id":2156,"nodeType":"ParameterList","parameters":[],"src":"3163:2:9"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"3189:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"},"typeName":{"id":2158,"nodeType":"UserDefinedTypeName","pathNode":{"id":2157,"name":"CrossDomainMessenger","nodeType":"IdentifierPath","referencedDeclaration":2044,"src":"3189:20:9"},"referencedDeclaration":2044,"src":"3189:20:9","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$2044","typeString":"contract CrossDomainMessenger"}},"visibility":"internal"}],"src":"3188:22:9"},"scope":2267,"src":"3145:99:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2172,"nodeType":"Block","src":"3464:36:9","statements":[{"expression":{"id":2170,"name":"OTHER_BRIDGE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"3481:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2169,"id":2171,"nodeType":"Return","src":"3474:19:9"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"3250:154:9","text":" @custom:legacy\n @notice Legacy getter for other bridge address.\n @return Address of the bridge on the other network."},"functionSelector":"c89701a2","id":2173,"implemented":true,"kind":"function","modifiers":[],"name":"otherBridge","nameLocation":"3418:11:9","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[],"src":"3429:2:9"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2173,"src":"3455:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"3455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3454:9:9"},"scope":2267,"src":"3409:91:9","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2209,"nodeType":"Block","src":"5060:867:9","statements":[{"expression":{"arguments":[{"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5626:31:9","subExpression":{"arguments":[{"expression":{"id":2190,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5646:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5646:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2188,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5627:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$3243_$","typeString":"type(library Address)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2966,"src":"5627:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5627:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314272696467653a206163636f756e74206973206e6f742065787465726e616c6c79206f776e6564","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5659:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","typeString":"literal_string \"ERC721Bridge: account is not externally owned\""},"value":"ERC721Bridge: account is not externally owned"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","typeString":"literal_string \"ERC721Bridge: account is not externally owned\""}],"id":2187,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5618:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5618:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2196,"nodeType":"ExpressionStatement","src":"5618:89:9"},{"expression":{"arguments":[{"id":2198,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"5753:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2199,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"5778:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2200,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5804:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5804:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2202,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5828:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5828:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2204,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"5852:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2205,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5874:12:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2206,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5900:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2197,"name":"_initiateBridgeERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"5718:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,address,address,address,uint256,uint32,bytes calldata)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5718:202:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"ExpressionStatement","src":"5718:202:9"}]},"documentation":{"id":2174,"nodeType":"StructuredDocumentation","src":"3506:1363:9","text":" @notice Initiates a bridge of an NFT to the caller's account on the other chain. Note that\n         this function can only be called by EOAs. Smart contract wallets should use the\n         `bridgeERC721To` function after ensuring that the recipient address on the remote\n         chain exists. Also note that the current owner of the token on this chain must\n         approve this contract to operate the NFT before it can be bridged.\n         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n         bridge only supports ERC721s originally deployed on Ethereum. Users will need to\n         wait for the one-week challenge period to elapse before their Optimism-native NFT\n         can be refunded on L2.\n @param _localToken  Address of the ERC721 on this domain.\n @param _remoteToken Address of the ERC721 on the remote domain.\n @param _tokenId     Token ID to bridge.\n @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n @param _extraData   Optional data to forward to the other chain. Data supplied here will not\n                     be used to execute any code on the other chain and is only emitted as\n                     extra data for the convenience of off-chain tooling."},"functionSelector":"3687011a","id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"bridgeERC721","nameLocation":"4883:12:9","nodeType":"FunctionDefinition","parameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2176,"mutability":"mutable","name":"_localToken","nameLocation":"4913:11:9","nodeType":"VariableDeclaration","scope":2210,"src":"4905:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"4905:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"_remoteToken","nameLocation":"4942:12:9","nodeType":"VariableDeclaration","scope":2210,"src":"4934:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"4934:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"mutability":"mutable","name":"_tokenId","nameLocation":"4972:8:9","nodeType":"VariableDeclaration","scope":2210,"src":"4964:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"4964:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"_minGasLimit","nameLocation":"4997:12:9","nodeType":"VariableDeclaration","scope":2210,"src":"4990:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2181,"name":"uint32","nodeType":"ElementaryTypeName","src":"4990:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"_extraData","nameLocation":"5034:10:9","nodeType":"VariableDeclaration","scope":2210,"src":"5019:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2183,"name":"bytes","nodeType":"ElementaryTypeName","src":"5019:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4895:155:9"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[],"src":"5060:0:9"},"scope":2267,"src":"4874:1053:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2247,"nodeType":"Block","src":"7370:301:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"7388:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7403:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7395:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"7395:7:9","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7395:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7388:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732314272696467653a206e667420726563697069656e742063616e6e6f742062652061646472657373283029","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7407:50:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","typeString":"literal_string \"ERC721Bridge: nft recipient cannot be address(0)\""},"value":"ERC721Bridge: nft recipient cannot be address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","typeString":"literal_string \"ERC721Bridge: nft recipient cannot be address(0)\""}],"id":2226,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7380:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7380:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2235,"nodeType":"ExpressionStatement","src":"7380:78:9"},{"expression":{"arguments":[{"id":2237,"name":"_localToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"7504:11:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2238,"name":"_remoteToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"7529:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2239,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7555:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7555:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2241,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"7579:3:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2242,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"7596:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2243,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"7618:12:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2244,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"7644:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":2236,"name":"_initiateBridgeERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"7469:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$__$","typeString":"function (address,address,address,address,uint256,uint32,bytes calldata)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7469:195:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2246,"nodeType":"ExpressionStatement","src":"7469:195:9"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"5933:1223:9","text":" @notice Initiates a bridge of an NFT to some recipient's account on the other chain. Note\n         that the current owner of the token on this chain must approve this contract to\n         operate the NFT before it can be bridged.\n         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This\n         bridge only supports ERC721s originally deployed on Ethereum. Users will need to\n         wait for the one-week challenge period to elapse before their Optimism-native NFT\n         can be refunded on L2.\n @param _localToken  Address of the ERC721 on this domain.\n @param _remoteToken Address of the ERC721 on the remote domain.\n @param _to          Address to receive the token on the other domain.\n @param _tokenId     Token ID to bridge.\n @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n @param _extraData   Optional data to forward to the other chain. Data supplied here will not\n                     be used to execute any code on the other chain and is only emitted as\n                     extra data for the convenience of off-chain tooling."},"functionSelector":"aa557452","id":2248,"implemented":true,"kind":"function","modifiers":[],"name":"bridgeERC721To","nameLocation":"7170:14:9","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"_localToken","nameLocation":"7202:11:9","nodeType":"VariableDeclaration","scope":2248,"src":"7194:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"7194:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2215,"mutability":"mutable","name":"_remoteToken","nameLocation":"7231:12:9","nodeType":"VariableDeclaration","scope":2248,"src":"7223:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"7223:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2217,"mutability":"mutable","name":"_to","nameLocation":"7261:3:9","nodeType":"VariableDeclaration","scope":2248,"src":"7253:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2216,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"_tokenId","nameLocation":"7282:8:9","nodeType":"VariableDeclaration","scope":2248,"src":"7274:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"7274:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2221,"mutability":"mutable","name":"_minGasLimit","nameLocation":"7307:12:9","nodeType":"VariableDeclaration","scope":2248,"src":"7300:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2220,"name":"uint32","nodeType":"ElementaryTypeName","src":"7300:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2223,"mutability":"mutable","name":"_extraData","nameLocation":"7344:10:9","nodeType":"VariableDeclaration","scope":2248,"src":"7329:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2222,"name":"bytes","nodeType":"ElementaryTypeName","src":"7329:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7184:176:9"},"returnParameters":{"id":2225,"nodeType":"ParameterList","parameters":[],"src":"7370:0:9"},"scope":2267,"src":"7161:510:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"7677:795:9","text":" @notice Internal function for initiating a token bridge to the other domain.\n @param _localToken  Address of the ERC721 on this domain.\n @param _remoteToken Address of the ERC721 on the remote domain.\n @param _from        Address of the sender on this domain.\n @param _to          Address to receive the token on the other domain.\n @param _tokenId     Token ID to bridge.\n @param _minGasLimit Minimum gas limit for the bridge message on the other domain.\n @param _extraData   Optional data to forward to the other domain. Data supplied here will\n                     not be used to execute any code on the other domain and is only emitted\n                     as extra data for the convenience of off-chain tooling."},"id":2266,"implemented":false,"kind":"function","modifiers":[],"name":"_initiateBridgeERC721","nameLocation":"8486:21:9","nodeType":"FunctionDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"_localToken","nameLocation":"8525:11:9","nodeType":"VariableDeclaration","scope":2266,"src":"8517:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"8517:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2253,"mutability":"mutable","name":"_remoteToken","nameLocation":"8554:12:9","nodeType":"VariableDeclaration","scope":2266,"src":"8546:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"8546:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"_from","nameLocation":"8584:5:9","nodeType":"VariableDeclaration","scope":2266,"src":"8576:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2254,"name":"address","nodeType":"ElementaryTypeName","src":"8576:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2257,"mutability":"mutable","name":"_to","nameLocation":"8607:3:9","nodeType":"VariableDeclaration","scope":2266,"src":"8599:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"8599:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2259,"mutability":"mutable","name":"_tokenId","nameLocation":"8628:8:9","nodeType":"VariableDeclaration","scope":2266,"src":"8620:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2258,"name":"uint256","nodeType":"ElementaryTypeName","src":"8620:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"_minGasLimit","nameLocation":"8653:12:9","nodeType":"VariableDeclaration","scope":2266,"src":"8646:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2260,"name":"uint32","nodeType":"ElementaryTypeName","src":"8646:6:9","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"_extraData","nameLocation":"8690:10:9","nodeType":"VariableDeclaration","scope":2266,"src":"8675:25:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2262,"name":"bytes","nodeType":"ElementaryTypeName","src":"8675:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8507:199:9"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"8723:0:9"},"scope":2267,"src":"8477:247:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2268,"src":"302:8424:9","usedErrors":[]}],"src":"32:8695:9"},"id":9},"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol","exportedSymbols":{"IERC721Enumerable":[2948],"IOptimismMintableERC721":[2341]},"id":2342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2269,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","id":2271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2342,"sourceUnit":2949,"src":"57:110:10","symbolAliases":[{"foreign":{"id":2270,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"70:17:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2273,"name":"IERC721Enumerable","nodeType":"IdentifierPath","referencedDeclaration":2948,"src":"441:17:10"},"id":2274,"nodeType":"InheritanceSpecifier","src":"441:17:10"}],"canonicalName":"IOptimismMintableERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"169:234:10","text":" @title IOptimismMintableERC721\n @notice Interface for contracts that are compatible with the OptimismMintableERC721 standard.\n         Tokens that follow this standard can be easily transferred across the ERC721 bridge."},"fullyImplemented":false,"id":2341,"linearizedBaseContracts":[2341,2948,2917,3675],"name":"IOptimismMintableERC721","nameLocation":"414:23:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"465:187:10","text":" @notice Emitted when a token is minted.\n @param account Address of the account the token was minted to.\n @param tokenId Token ID of the minted token."},"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2281,"name":"Mint","nameLocation":"663:4:10","nodeType":"EventDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"684:7:10","nodeType":"VariableDeclaration","scope":2281,"src":"668:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"668:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"701:7:10","nodeType":"VariableDeclaration","scope":2281,"src":"693:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2278,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"667:42:10"},"src":"657:53:10"},{"anonymous":false,"documentation":{"id":2282,"nodeType":"StructuredDocumentation","src":"716:189:10","text":" @notice Emitted when a token is burned.\n @param account Address of the account the token was burned from.\n @param tokenId Token ID of the burned token."},"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2288,"name":"Burn","nameLocation":"916:4:10","nodeType":"EventDefinition","parameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"937:7:10","nodeType":"VariableDeclaration","scope":2288,"src":"921:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"954:7:10","nodeType":"VariableDeclaration","scope":2288,"src":"946:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"920:42:10"},"src":"910:53:10"},{"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"969:305:10","text":" @notice Mints some token ID for a user, checking first that contract recipients\n         are aware of the ERC721 protocol to prevent tokens from being forever locked.\n @param _to      Address of the user to mint the token for.\n @param _tokenId Token ID to mint."},"functionSelector":"a1448194","id":2296,"implemented":false,"kind":"function","modifiers":[],"name":"safeMint","nameLocation":"1288:8:10","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"_to","nameLocation":"1305:3:10","nodeType":"VariableDeclaration","scope":2296,"src":"1297:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"1297:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"_tokenId","nameLocation":"1318:8:10","nodeType":"VariableDeclaration","scope":2296,"src":"1310:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"1310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1296:31:10"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"1336:0:10"},"scope":2341,"src":"1279:58:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"1343:171:10","text":" @notice Burns a token ID from a user.\n @param _from    Address of the user to burn the token from.\n @param _tokenId Token ID to burn."},"functionSelector":"9dc29fac","id":2304,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1528:4:10","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"_from","nameLocation":"1541:5:10","nodeType":"VariableDeclaration","scope":2304,"src":"1533:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"1533:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"_tokenId","nameLocation":"1556:8:10","nodeType":"VariableDeclaration","scope":2304,"src":"1548:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1548:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1532:33:10"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"1574:0:10"},"scope":2341,"src":"1519:56:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2305,"nodeType":"StructuredDocumentation","src":"1581:84:10","text":" @notice Chain ID of the chain where the remote token is deployed."},"functionSelector":"7d1d0c5b","id":2310,"implemented":false,"kind":"function","modifiers":[],"name":"REMOTE_CHAIN_ID","nameLocation":"1679:15:10","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"1694:2:10"},"returnParameters":{"id":2309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2310,"src":"1720:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1719:9:10"},"scope":2341,"src":"1670:59:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2311,"nodeType":"StructuredDocumentation","src":"1735:69:10","text":" @notice Address of the token on the remote domain."},"functionSelector":"033964be","id":2316,"implemented":false,"kind":"function","modifiers":[],"name":"REMOTE_TOKEN","nameLocation":"1818:12:10","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[],"src":"1830:2:10"},"returnParameters":{"id":2315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2314,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2316,"src":"1856:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"1856:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1855:9:10"},"scope":2341,"src":"1809:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"1871:72:10","text":" @notice Address of the ERC721 bridge on this network."},"functionSelector":"ee9a31a2","id":2322,"implemented":false,"kind":"function","modifiers":[],"name":"BRIDGE","nameLocation":"1957:6:10","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"1963:2:10"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2322,"src":"1989:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"1989:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1988:9:10"},"scope":2341,"src":"1948:50:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"2004:84:10","text":" @notice Chain ID of the chain where the remote token is deployed."},"functionSelector":"e9518196","id":2328,"implemented":false,"kind":"function","modifiers":[],"name":"remoteChainId","nameLocation":"2102:13:10","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[],"src":"2115:2:10"},"returnParameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2328,"src":"2141:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"2141:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2140:9:10"},"scope":2341,"src":"2093:57:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2329,"nodeType":"StructuredDocumentation","src":"2156:69:10","text":" @notice Address of the token on the remote domain."},"functionSelector":"d6c0b2c4","id":2334,"implemented":false,"kind":"function","modifiers":[],"name":"remoteToken","nameLocation":"2239:11:10","nodeType":"FunctionDefinition","parameters":{"id":2330,"nodeType":"ParameterList","parameters":[],"src":"2250:2:10"},"returnParameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"2276:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2331,"name":"address","nodeType":"ElementaryTypeName","src":"2276:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2275:9:10"},"scope":2341,"src":"2230:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"2291:72:10","text":" @notice Address of the ERC721 bridge on this network."},"functionSelector":"e78cea92","id":2340,"implemented":false,"kind":"function","modifiers":[],"name":"bridge","nameLocation":"2377:6:10","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[],"src":"2383:2:10"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2340,"src":"2409:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"2409:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2408:9:10"},"scope":2341,"src":"2368:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2342,"src":"404:2016:10","usedErrors":[]}],"src":"32:2389:10"},"id":10},"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol","exportedSymbols":{"Semver":[2407],"Strings":[3469]},"id":2408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2343,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":2345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2408,"sourceUnit":3470,"src":"57:68:11","symbolAliases":[{"foreign":{"id":2344,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"66:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Semver","contractDependencies":[],"contractKind":"contract","documentation":{"id":2346,"nodeType":"StructuredDocumentation","src":"127:95:11","text":" @title Semver\n @notice Semver is a simple contract for managing contract versions."},"fullyImplemented":true,"id":2407,"linearizedBaseContracts":[2407],"name":"Semver","nameLocation":"232:6:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"245:59:11","text":" @notice Contract version number (major)."},"id":2349,"mutability":"immutable","name":"MAJOR_VERSION","nameLocation":"335:13:11","nodeType":"VariableDeclaration","scope":2407,"src":"309:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"309:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"355:59:11","text":" @notice Contract version number (minor)."},"id":2352,"mutability":"immutable","name":"MINOR_VERSION","nameLocation":"445:13:11","nodeType":"VariableDeclaration","scope":2407,"src":"419:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2351,"name":"uint256","nodeType":"ElementaryTypeName","src":"419:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"documentation":{"id":2353,"nodeType":"StructuredDocumentation","src":"465:59:11","text":" @notice Contract version number (patch)."},"id":2355,"mutability":"immutable","name":"PATCH_VERSION","nameLocation":"555:13:11","nodeType":"VariableDeclaration","scope":2407,"src":"529:39:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2354,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":2377,"nodeType":"Block","src":"816:103:11","statements":[{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2365,"name":"MAJOR_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"826:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2366,"name":"_major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"842:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"826:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2368,"nodeType":"ExpressionStatement","src":"826:22:11"},{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2369,"name":"MINOR_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"858:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2370,"name":"_minor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"874:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"858:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2372,"nodeType":"ExpressionStatement","src":"858:22:11"},{"expression":{"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2373,"name":"PATCH_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"890:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2374,"name":"_patch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"906:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"890:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2376,"nodeType":"ExpressionStatement","src":"890:22:11"}]},"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"575:146:11","text":" @param _major Version number (major).\n @param _minor Version number (minor).\n @param _patch Version number (patch)."},"id":2378,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"_major","nameLocation":"755:6:11","nodeType":"VariableDeclaration","scope":2378,"src":"747:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"747:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"_minor","nameLocation":"779:6:11","nodeType":"VariableDeclaration","scope":2378,"src":"771:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2359,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"_patch","nameLocation":"803:6:11","nodeType":"VariableDeclaration","scope":2378,"src":"795:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"795:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"737:78:11"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[],"src":"816:0:11"},"scope":2407,"src":"726:193:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2405,"nodeType":"Block","src":"1112:317:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2390,"name":"MAJOR_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"1220:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2388,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"1203:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3469_$","typeString":"type(library Strings)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3331,"src":"1203:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1203:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1256:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"arguments":[{"id":2395,"name":"MINOR_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"1298:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2393,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"1281:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3469_$","typeString":"type(library Strings)"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3331,"src":"1281:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1281:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1334:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"arguments":[{"id":2400,"name":"PATCH_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2355,"src":"1376:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2398,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"1359:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3469_$","typeString":"type(library Strings)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3331,"src":"1359:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1359:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2386,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1165:3:11","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1165:16:11","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1165:243:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1141:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2384,"name":"string","nodeType":"ElementaryTypeName","src":"1141:6:11","typeDescriptions":{}}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1141:281:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2383,"id":2404,"nodeType":"Return","src":"1122:300:11"}]},"documentation":{"id":2379,"nodeType":"StructuredDocumentation","src":"925:127:11","text":" @notice Returns the full semver contract version.\n @return Semver contract version as a string."},"functionSelector":"54fd4d50","id":2406,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"1066:7:11","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[],"src":"1073:2:11"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2406,"src":"1097:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2381,"name":"string","nodeType":"ElementaryTypeName","src":"1097:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1096:15:11"},"scope":2407,"src":"1057:372:11","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2408,"src":"223:1208:11","usedErrors":[]}],"src":"32:1400:11"},"id":11},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2801],"Initializable":[2558]},"id":2559,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2409,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:12"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":2410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2559,"sourceUnit":2802,"src":"138:44:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2411,"nodeType":"StructuredDocumentation","src":"184:2198:12","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":2558,"linearizedBaseContracts":[2558],"name":"Initializable","nameLocation":"2401:13:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"2421:109:12","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":2414,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:12","nodeType":"VariableDeclaration","scope":2558,"src":"2535:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2413,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"2568:91:12","text":" @dev Indicates that the contract is in the process of being initialized."},"id":2417,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:12","nodeType":"VariableDeclaration","scope":2558,"src":"2664:26:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2416,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"2697:90:12","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":2422,"name":"Initialized","nameLocation":"2798:11:12","nodeType":"EventDefinition","parameters":{"id":2421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2420,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:12","nodeType":"VariableDeclaration","scope":2422,"src":"2810:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2419,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:12"},"src":"2792:33:12"},{"body":{"id":2477,"nodeType":"Block","src":"3101:483:12","statements":[{"assignments":[2426],"declarations":[{"constant":false,"id":2426,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3116:14:12","nodeType":"VariableDeclaration","scope":2477,"src":"3111:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2425,"name":"bool","nodeType":"ElementaryTypeName","src":"3111:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2429,"initialValue":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3133:14:12","subExpression":{"id":2427,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"3134:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3111:36:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2431,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3179:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3197:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":2433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3197:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3178:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3219:45:12","subExpression":{"arguments":[{"arguments":[{"id":2441,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3258:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$2558","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$2558","typeString":"contract Initializable"}],"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3250:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"3250:7:12","typeDescriptions":{}}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2437,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2801,"src":"3220:18:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2801_$","typeString":"type(library AddressUpgradeable)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2576,"src":"3220:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3268:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3268:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3218:68:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3178:108:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3300:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":2430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3157:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3157:201:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2453,"nodeType":"ExpressionStatement","src":"3157:201:12"},{"expression":{"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2454,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"3368:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3368:16:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2457,"nodeType":"ExpressionStatement","src":"3368:16:12"},{"condition":{"id":2458,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3398:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2464,"nodeType":"IfStatement","src":"3394:65:12","trueBody":{"id":2463,"nodeType":"Block","src":"3414:45:12","statements":[{"expression":{"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2459,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"3428:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3444:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3428:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2462,"nodeType":"ExpressionStatement","src":"3428:20:12"}]}},{"id":2465,"nodeType":"PlaceholderStatement","src":"3468:1:12"},{"condition":{"id":2466,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"3483:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"IfStatement","src":"3479:99:12","trueBody":{"id":2475,"nodeType":"Block","src":"3499:79:12","statements":[{"expression":{"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2467,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"3513:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3529:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3513:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2470,"nodeType":"ExpressionStatement","src":"3513:21:12"},{"eventCall":{"arguments":[{"hexValue":"31","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2471,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"3553:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3553:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2474,"nodeType":"EmitStatement","src":"3548:19:12"}]}}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"2831:242:12","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":2478,"name":"initializer","nameLocation":"3087:11:12","nodeType":"ModifierDefinition","parameters":{"id":2424,"nodeType":"ParameterList","parameters":[],"src":"3098:2:12"},"src":"3078:506:12","virtual":false,"visibility":"internal"},{"body":{"id":2510,"nodeType":"Block","src":"4399:255:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4417:14:12","subExpression":{"id":2484,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4418:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2486,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4435:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2487,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4450:7:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4435:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4417:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4459:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":2483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4409:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:99:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"4409:99:12"},{"expression":{"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2493,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4518:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2494,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4533:7:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4518:22:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2496,"nodeType":"ExpressionStatement","src":"4518:22:12"},{"expression":{"id":2499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2497,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4550:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4566:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4550:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2500,"nodeType":"ExpressionStatement","src":"4550:20:12"},{"id":2501,"nodeType":"PlaceholderStatement","src":"4580:1:12"},{"expression":{"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2502,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4591:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4607:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4591:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2505,"nodeType":"ExpressionStatement","src":"4591:21:12"},{"eventCall":{"arguments":[{"id":2507,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4639:7:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2506,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"4627:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4627:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2509,"nodeType":"EmitStatement","src":"4622:25:12"}]},"documentation":{"id":2479,"nodeType":"StructuredDocumentation","src":"3590:766:12","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":2511,"name":"reinitializer","nameLocation":"4370:13:12","nodeType":"ModifierDefinition","parameters":{"id":2482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2481,"mutability":"mutable","name":"version","nameLocation":"4390:7:12","nodeType":"VariableDeclaration","scope":2511,"src":"4384:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2480,"name":"uint8","nodeType":"ElementaryTypeName","src":"4384:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4383:15:12"},"src":"4361:293:12","virtual":false,"visibility":"internal"},{"body":{"id":2520,"nodeType":"Block","src":"4892:97:12","statements":[{"expression":{"arguments":[{"id":2515,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"4910:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:45:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":2514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4902:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4902:69:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2518,"nodeType":"ExpressionStatement","src":"4902:69:12"},{"id":2519,"nodeType":"PlaceholderStatement","src":"4981:1:12"}]},"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"4660:199:12","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":2521,"name":"onlyInitializing","nameLocation":"4873:16:12","nodeType":"ModifierDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"4889:2:12"},"src":"4864:125:12","virtual":false,"visibility":"internal"},{"body":{"id":2556,"nodeType":"Block","src":"5437:230:12","statements":[{"expression":{"arguments":[{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:14:12","subExpression":{"id":2526,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"5456:13:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5471:41:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":2525,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5447:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2530,"nodeType":"ExpressionStatement","src":"5447:66:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"5527:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5547:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2533,"name":"uint8","nodeType":"ElementaryTypeName","src":"5547:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2532,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5542:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5542:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5527:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2555,"nodeType":"IfStatement","src":"5523:138:12","trueBody":{"id":2554,"nodeType":"Block","src":"5559:102:12","statements":[{"expression":{"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2538,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"5573:12:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":2541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2540,"name":"uint8","nodeType":"ElementaryTypeName","src":"5593:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5588:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5588:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5588:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5573:30:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2545,"nodeType":"ExpressionStatement","src":"5573:30:12"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":2549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5639:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2548,"name":"uint8","nodeType":"ElementaryTypeName","src":"5639:5:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2547,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5634:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5634:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2546,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"5622:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5622:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2553,"nodeType":"EmitStatement","src":"5617:33:12"}]}}]},"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"4995:388:12","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":2557,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5397:20:12","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[],"src":"5417:2:12"},"returnParameters":{"id":2524,"nodeType":"ParameterList","parameters":[],"src":"5437:0:12"},"scope":2558,"src":"5388:279:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2559,"src":"2383:3286:12","usedErrors":[]}],"src":"113:5557:12"},"id":12},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2801]},"id":2802,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2560,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"126:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2801,"linearizedBaseContracts":[2801],"name":"AddressUpgradeable","nameLocation":"202:18:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2575,"nodeType":"Block","src":"1252:254:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2569,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"1476:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2568,"id":2574,"nodeType":"Return","src":"1469:30:13"}]},"documentation":{"id":2562,"nodeType":"StructuredDocumentation","src":"227:954:13","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2576,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:13","nodeType":"FunctionDefinition","parameters":{"id":2565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"account","nameLocation":"1214:7:13","nodeType":"VariableDeclaration","scope":2576,"src":"1206:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2563,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:13"},"returnParameters":{"id":2568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2576,"src":"1246:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2566,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:13"},"scope":2801,"src":"1186:320:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2609,"nodeType":"Block","src":"2494:241:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2587,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2801","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2801","typeString":"library AddressUpgradeable"}],"id":2586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2585,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:13","typeDescriptions":{}}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2590,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"2537:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2584,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2594,"nodeType":"ExpressionStatement","src":"2504:73:13"},{"assignments":[2596,null],"declarations":[{"constant":false,"id":2596,"mutability":"mutable","name":"success","nameLocation":"2594:7:13","nodeType":"VariableDeclaration","scope":2609,"src":"2589:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2595,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2603,"initialValue":{"arguments":[{"hexValue":"","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2597,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"2607:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2599,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2581,"src":"2629:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:13"},{"expression":{"arguments":[{"id":2605,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"2658:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2604,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2608,"nodeType":"ExpressionStatement","src":"2650:78:13"}]},"documentation":{"id":2577,"nodeType":"StructuredDocumentation","src":"1512:906:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2610,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:13","nodeType":"FunctionDefinition","parameters":{"id":2582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:13","nodeType":"VariableDeclaration","scope":2610,"src":"2442:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2578,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"amount","nameLocation":"2477:6:13","nodeType":"VariableDeclaration","scope":2610,"src":"2469:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:13"},"returnParameters":{"id":2583,"nodeType":"ParameterList","parameters":[],"src":"2494:0:13"},"scope":2801,"src":"2423:312:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2626,"nodeType":"Block","src":"3566:84:13","statements":[{"expression":{"arguments":[{"id":2621,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"3596:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2622,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"3604:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2620,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[2627,2647],"referencedDeclaration":2647,"src":"3583:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2619,"id":2625,"nodeType":"Return","src":"3576:67:13"}]},"documentation":{"id":2611,"nodeType":"StructuredDocumentation","src":"2741:731:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2627,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:13","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"target","nameLocation":"3507:6:13","nodeType":"VariableDeclaration","scope":2627,"src":"3499:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2612,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"data","nameLocation":"3528:4:13","nodeType":"VariableDeclaration","scope":2627,"src":"3515:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2614,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:13"},"returnParameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2627,"src":"3552:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2617,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:13"},"scope":2801,"src":"3477:173:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2646,"nodeType":"Block","src":"4019:76:13","statements":[{"expression":{"arguments":[{"id":2640,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2630,"src":"4058:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2641,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"4066:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2643,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"4075:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2639,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2667,2717],"referencedDeclaration":2717,"src":"4036:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2638,"id":2645,"nodeType":"Return","src":"4029:59:13"}]},"documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"3656:211:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2647,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:13","nodeType":"FunctionDefinition","parameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"target","nameLocation":"3911:6:13","nodeType":"VariableDeclaration","scope":2647,"src":"3903:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2629,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2632,"mutability":"mutable","name":"data","nameLocation":"3940:4:13","nodeType":"VariableDeclaration","scope":2647,"src":"3927:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2631,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:13","nodeType":"VariableDeclaration","scope":2647,"src":"3954:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2633,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:13"},"returnParameters":{"id":2638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"4005:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2636,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:13"},"scope":2801,"src":"3872:223:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2666,"nodeType":"Block","src":"4600:111:13","statements":[{"expression":{"arguments":[{"id":2660,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4639:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2661,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4647:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"4653:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2659,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2667,2717],"referencedDeclaration":2717,"src":"4617:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:87:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2658,"id":2665,"nodeType":"Return","src":"4610:94:13"}]},"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"4101:351:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2667,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:13","nodeType":"FunctionDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"target","nameLocation":"4505:6:13","nodeType":"VariableDeclaration","scope":2667,"src":"4497:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2649,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"data","nameLocation":"4534:4:13","nodeType":"VariableDeclaration","scope":2667,"src":"4521:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2651,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"value","nameLocation":"4556:5:13","nodeType":"VariableDeclaration","scope":2667,"src":"4548:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:13"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2667,"src":"4586:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2656,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:13"},"scope":2801,"src":"4457:254:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2716,"nodeType":"Block","src":"5138:320:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2684,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2801","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2801","typeString":"library AddressUpgradeable"}],"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2682,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:13","typeDescriptions":{}}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5156:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5156:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"5181:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:81:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2691,"nodeType":"ExpressionStatement","src":"5148:81:13"},{"expression":{"arguments":[{"arguments":[{"id":2694,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5258:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2693,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"5247:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2692,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:60:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2698,"nodeType":"ExpressionStatement","src":"5239:60:13"},{"assignments":[2700,2702],"declarations":[{"constant":false,"id":2700,"mutability":"mutable","name":"success","nameLocation":"5316:7:13","nodeType":"VariableDeclaration","scope":2716,"src":"5311:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2699,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:13","nodeType":"VariableDeclaration","scope":2716,"src":"5325:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2701,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2709,"initialValue":{"arguments":[{"id":2707,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"5378:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2703,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"5352:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5352:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"5371:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5352:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:13"},{"expression":{"arguments":[{"id":2711,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"5417:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2712,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"5426:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2713,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"5438:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2710,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"5400:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2680,"id":2715,"nodeType":"Return","src":"5393:58:13"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"4717:237:13","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2717,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:13","nodeType":"FunctionDefinition","parameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"target","nameLocation":"5007:6:13","nodeType":"VariableDeclaration","scope":2717,"src":"4999:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"data","nameLocation":"5036:4:13","nodeType":"VariableDeclaration","scope":2717,"src":"5023:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2671,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"value","nameLocation":"5058:5:13","nodeType":"VariableDeclaration","scope":2717,"src":"5050:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:13","nodeType":"VariableDeclaration","scope":2717,"src":"5073:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2675,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:13"},"returnParameters":{"id":2680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2717,"src":"5124:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2678,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:13"},"scope":2801,"src":"4959:499:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2733,"nodeType":"Block","src":"5735:97:13","statements":[{"expression":{"arguments":[{"id":2728,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"5771:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2729,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"5779:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2727,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2734,2769],"referencedDeclaration":2769,"src":"5752:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2726,"id":2732,"nodeType":"Return","src":"5745:80:13"}]},"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"5464:166:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:13","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"target","nameLocation":"5671:6:13","nodeType":"VariableDeclaration","scope":2734,"src":"5663:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2722,"mutability":"mutable","name":"data","nameLocation":"5692:4:13","nodeType":"VariableDeclaration","scope":2734,"src":"5679:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2721,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:13"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"5721:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2724,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:13"},"scope":2801,"src":"5635:197:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2768,"nodeType":"Block","src":"6174:228:13","statements":[{"expression":{"arguments":[{"arguments":[{"id":2748,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"6203:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2747,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"6192:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":2746,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2752,"nodeType":"ExpressionStatement","src":"6184:67:13"},{"assignments":[2754,2756],"declarations":[{"constant":false,"id":2754,"mutability":"mutable","name":"success","nameLocation":"6268:7:13","nodeType":"VariableDeclaration","scope":2768,"src":"6263:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2753,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2756,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:13","nodeType":"VariableDeclaration","scope":2768,"src":"6277:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2755,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2761,"initialValue":{"arguments":[{"id":2759,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"6322:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2757,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"6304:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:13"},{"expression":{"arguments":[{"id":2763,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"6361:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2764,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"6370:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2765,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"6382:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2762,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"6344:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2745,"id":2767,"nodeType":"Return","src":"6337:58:13"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"5838:173:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2769,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:13","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"target","nameLocation":"6061:6:13","nodeType":"VariableDeclaration","scope":2769,"src":"6053:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2736,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"data","nameLocation":"6090:4:13","nodeType":"VariableDeclaration","scope":2769,"src":"6077:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2738,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:13","nodeType":"VariableDeclaration","scope":2769,"src":"6104:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2740,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:13"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2769,"src":"6160:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2743,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:13"},"scope":2801,"src":"6016:386:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2799,"nodeType":"Block","src":"6782:582:13","statements":[{"condition":{"id":2781,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"6796:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2797,"nodeType":"Block","src":"6853:505:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2785,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"6937:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6937:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2795,"nodeType":"Block","src":"7295:53:13","statements":[{"expression":{"arguments":[{"id":2792,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"7320:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2791,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7313:6:13","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7313:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2794,"nodeType":"ExpressionStatement","src":"7313:20:13"}]},"id":2796,"nodeType":"IfStatement","src":"6933:415:13","trueBody":{"id":2790,"nodeType":"Block","src":"6960:329:13","statements":[{"AST":{"nodeType":"YulBlock","src":"7130:145:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7152:40:13","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7181:10:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7175:5:13"},"nodeType":"YulFunctionCall","src":"7175:17:13"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7156:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7224:2:13","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7228:10:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:13"},"nodeType":"YulFunctionCall","src":"7220:19:13"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7241:15:13"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7213:6:13"},"nodeType":"YulFunctionCall","src":"7213:44:13"},"nodeType":"YulExpressionStatement","src":"7213:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2774,"isOffset":false,"isSlot":false,"src":"7181:10:13","valueSize":1},{"declaration":2774,"isOffset":false,"isSlot":false,"src":"7228:10:13","valueSize":1}],"id":2789,"nodeType":"InlineAssembly","src":"7121:154:13"}]}}]},"id":2798,"nodeType":"IfStatement","src":"6792:566:13","trueBody":{"id":2784,"nodeType":"Block","src":"6805:42:13","statements":[{"expression":{"id":2782,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"6826:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2780,"id":2783,"nodeType":"Return","src":"6819:17:13"}]}}]},"documentation":{"id":2770,"nodeType":"StructuredDocumentation","src":"6408:209:13","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2800,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:13","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"success","nameLocation":"6662:7:13","nodeType":"VariableDeclaration","scope":2800,"src":"6657:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2771,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:13","nodeType":"VariableDeclaration","scope":2800,"src":"6679:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2776,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:13","nodeType":"VariableDeclaration","scope":2800,"src":"6712:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2775,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:13"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2800,"src":"6768:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:13"},"scope":2801,"src":"6622:742:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2802,"src":"194:7172:13","usedErrors":[]}],"src":"101:7266:13"},"id":13},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3675],"IERC721":[2917]},"id":2918,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2803,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2804,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2918,"sourceUnit":3676,"src":"133:47:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2806,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3675,"src":"271:7:14"},"id":2807,"nodeType":"InheritanceSpecifier","src":"271:7:14"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2805,"nodeType":"StructuredDocumentation","src":"182:67:14","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2917,"linearizedBaseContracts":[2917,3675],"name":"IERC721","nameLocation":"260:7:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"285:88:14","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2816,"name":"Transfer","nameLocation":"384:8:14","nodeType":"EventDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:14","nodeType":"VariableDeclaration","scope":2816,"src":"393:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2812,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:14","nodeType":"VariableDeclaration","scope":2816,"src":"415:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2814,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:14","nodeType":"VariableDeclaration","scope":2816,"src":"435:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:14"},"src":"378:82:14"},{"anonymous":false,"documentation":{"id":2817,"nodeType":"StructuredDocumentation","src":"466:94:14","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2825,"name":"Approval","nameLocation":"571:8:14","nodeType":"EventDefinition","parameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2819,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:14","nodeType":"VariableDeclaration","scope":2825,"src":"580:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2821,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:14","nodeType":"VariableDeclaration","scope":2825,"src":"603:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2823,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:14","nodeType":"VariableDeclaration","scope":2825,"src":"629:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:14"},"src":"565:89:14"},{"anonymous":false,"documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"660:117:14","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2834,"name":"ApprovalForAll","nameLocation":"788:14:14","nodeType":"EventDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:14","nodeType":"VariableDeclaration","scope":2834,"src":"803:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2830,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:14","nodeType":"VariableDeclaration","scope":2834,"src":"826:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2829,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2832,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:14","nodeType":"VariableDeclaration","scope":2834,"src":"852:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2831,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:14"},"src":"782:85:14"},{"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"873:76:14","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2842,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:14","nodeType":"FunctionDefinition","parameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"owner","nameLocation":"981:5:14","nodeType":"VariableDeclaration","scope":2842,"src":"973:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2836,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:14"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"balance","nameLocation":"1019:7:14","nodeType":"VariableDeclaration","scope":2842,"src":"1011:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:14"},"scope":2917,"src":"954:74:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2843,"nodeType":"StructuredDocumentation","src":"1034:131:14","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2850,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:14","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:14","nodeType":"VariableDeclaration","scope":2850,"src":"1187:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:14"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"owner","nameLocation":"1235:5:14","nodeType":"VariableDeclaration","scope":2850,"src":"1227:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2847,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:14"},"scope":2917,"src":"1170:72:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"1248:556:14","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2862,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:14","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"from","nameLocation":"1852:4:14","nodeType":"VariableDeclaration","scope":2862,"src":"1844:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"to","nameLocation":"1874:2:14","nodeType":"VariableDeclaration","scope":2862,"src":"1866:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2854,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2857,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:14","nodeType":"VariableDeclaration","scope":2862,"src":"1886:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2856,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"data","nameLocation":"1926:4:14","nodeType":"VariableDeclaration","scope":2862,"src":"1911:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2858,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:14"},"returnParameters":{"id":2861,"nodeType":"ParameterList","parameters":[],"src":"1945:0:14"},"scope":2917,"src":"1809:137:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2863,"nodeType":"StructuredDocumentation","src":"1952:687:14","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2872,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:14","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"from","nameLocation":"2687:4:14","nodeType":"VariableDeclaration","scope":2872,"src":"2679:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2864,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"to","nameLocation":"2709:2:14","nodeType":"VariableDeclaration","scope":2872,"src":"2701:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:14","nodeType":"VariableDeclaration","scope":2872,"src":"2721:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:14"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[],"src":"2751:0:14"},"scope":2917,"src":"2644:108:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2873,"nodeType":"StructuredDocumentation","src":"2758:504:14","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2882,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:14","nodeType":"FunctionDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"from","nameLocation":"3306:4:14","nodeType":"VariableDeclaration","scope":2882,"src":"3298:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2874,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"to","nameLocation":"3328:2:14","nodeType":"VariableDeclaration","scope":2882,"src":"3320:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2876,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:14","nodeType":"VariableDeclaration","scope":2882,"src":"3340:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:14"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[],"src":"3370:0:14"},"scope":2917,"src":"3267:104:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2883,"nodeType":"StructuredDocumentation","src":"3377:452:14","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2890,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:14","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"to","nameLocation":"3859:2:14","nodeType":"VariableDeclaration","scope":2890,"src":"3851:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:14","nodeType":"VariableDeclaration","scope":2890,"src":"3863:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2886,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:14"},"returnParameters":{"id":2889,"nodeType":"ParameterList","parameters":[],"src":"3888:0:14"},"scope":2917,"src":"3834:55:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2891,"nodeType":"StructuredDocumentation","src":"3895:309:14","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2898,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:14","nodeType":"FunctionDefinition","parameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"operator","nameLocation":"4244:8:14","nodeType":"VariableDeclaration","scope":2898,"src":"4236:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2892,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2895,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:14","nodeType":"VariableDeclaration","scope":2898,"src":"4254:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2894,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:14"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[],"src":"4278:0:14"},"scope":2917,"src":"4209:70:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"4285:139:14","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2906,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:14","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:14","nodeType":"VariableDeclaration","scope":2906,"src":"4450:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:14"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"operator","nameLocation":"4498:8:14","nodeType":"VariableDeclaration","scope":2906,"src":"4490:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:14"},"scope":2917,"src":"4429:79:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2907,"nodeType":"StructuredDocumentation","src":"4514:138:14","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2916,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:14","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"owner","nameLocation":"4691:5:14","nodeType":"VariableDeclaration","scope":2916,"src":"4683:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"operator","nameLocation":"4706:8:14","nodeType":"VariableDeclaration","scope":2916,"src":"4698:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:14"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2916,"src":"4739:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2913,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:14"},"scope":2917,"src":"4657:88:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2918,"src":"250:4497:14","usedErrors":[]}],"src":"108:4640:14"},"id":14},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[3675],"IERC721":[2917],"IERC721Enumerable":[2948]},"id":2949,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2919,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2949,"sourceUnit":2918,"src":"154:24:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2922,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2917,"src":"348:7:15"},"id":2923,"nodeType":"InheritanceSpecifier","src":"348:7:15"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"180:136:15","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2948,"linearizedBaseContracts":[2948,2917,3675],"name":"IERC721Enumerable","nameLocation":"327:17:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"362:82:15","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":2929,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:15","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[],"src":"469:2:15"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2929,"src":"495:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:15"},"scope":2948,"src":"449:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"510:171:15","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":2939,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:15","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"owner","nameLocation":"723:5:15","nodeType":"VariableDeclaration","scope":2939,"src":"715:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"index","nameLocation":"738:5:15","nodeType":"VariableDeclaration","scope":2939,"src":"730:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:15"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2939,"src":"768:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2936,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:15"},"scope":2948,"src":"686:91:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"783:164:15","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":2947,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:15","nodeType":"FunctionDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2942,"mutability":"mutable","name":"index","nameLocation":"982:5:15","nodeType":"VariableDeclaration","scope":2947,"src":"974:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:15"},"returnParameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"1012:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:15"},"scope":2948,"src":"952:69:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2949,"src":"317:706:15","usedErrors":[]}],"src":"129:895:15"},"id":15},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[3243]},"id":3244,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2950,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"126:67:16","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":3243,"linearizedBaseContracts":[3243],"name":"Address","nameLocation":"202:7:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2965,"nodeType":"Block","src":"1241:254:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2959,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"1465:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2958,"id":2964,"nodeType":"Return","src":"1458:30:16"}]},"documentation":{"id":2952,"nodeType":"StructuredDocumentation","src":"216:954:16","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2966,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:16","nodeType":"FunctionDefinition","parameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"account","nameLocation":"1203:7:16","nodeType":"VariableDeclaration","scope":2966,"src":"1195:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:16"},"returnParameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2966,"src":"1235:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2956,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:16"},"scope":3243,"src":"1175:320:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2999,"nodeType":"Block","src":"2483:241:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2977,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3243","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3243","typeString":"library Address"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:16","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2980,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2526:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2974,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2984,"nodeType":"ExpressionStatement","src":"2493:73:16"},{"assignments":[2986,null],"declarations":[{"constant":false,"id":2986,"mutability":"mutable","name":"success","nameLocation":"2583:7:16","nodeType":"VariableDeclaration","scope":2999,"src":"2578:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2985,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2993,"initialValue":{"arguments":[{"hexValue":"","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2987,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"2596:9:16","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2989,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"2618:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:16"},{"expression":{"arguments":[{"id":2995,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2986,"src":"2647:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2994,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2998,"nodeType":"ExpressionStatement","src":"2639:78:16"}]},"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"1501:906:16","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":3000,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:16","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:16","nodeType":"VariableDeclaration","scope":3000,"src":"2431:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:16","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"amount","nameLocation":"2466:6:16","nodeType":"VariableDeclaration","scope":3000,"src":"2458:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:16"},"returnParameters":{"id":2973,"nodeType":"ParameterList","parameters":[],"src":"2483:0:16"},"scope":3243,"src":"2412:312:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3016,"nodeType":"Block","src":"3555:84:16","statements":[{"expression":{"arguments":[{"id":3011,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"3585:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3012,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3005,"src":"3593:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":3010,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[3017,3037],"referencedDeclaration":3037,"src":"3572:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3009,"id":3015,"nodeType":"Return","src":"3565:67:16"}]},"documentation":{"id":3001,"nodeType":"StructuredDocumentation","src":"2730:731:16","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":3017,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:16","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"target","nameLocation":"3496:6:16","nodeType":"VariableDeclaration","scope":3017,"src":"3488:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3002,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3005,"mutability":"mutable","name":"data","nameLocation":"3517:4:16","nodeType":"VariableDeclaration","scope":3017,"src":"3504:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3004,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:16"},"returnParameters":{"id":3009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3017,"src":"3541:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3007,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:16"},"scope":3243,"src":"3466:173:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3036,"nodeType":"Block","src":"4008:76:16","statements":[{"expression":{"arguments":[{"id":3030,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3020,"src":"4047:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3031,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"4055:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":3032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3033,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"4064:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3029,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3057,3107],"referencedDeclaration":3107,"src":"4025:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3028,"id":3035,"nodeType":"Return","src":"4018:59:16"}]},"documentation":{"id":3018,"nodeType":"StructuredDocumentation","src":"3645:211:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:16","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3020,"mutability":"mutable","name":"target","nameLocation":"3900:6:16","nodeType":"VariableDeclaration","scope":3037,"src":"3892:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3019,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3022,"mutability":"mutable","name":"data","nameLocation":"3929:4:16","nodeType":"VariableDeclaration","scope":3037,"src":"3916:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3021,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3024,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:16","nodeType":"VariableDeclaration","scope":3037,"src":"3943:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3023,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:16"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3037,"src":"3994:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3026,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:16"},"scope":3243,"src":"3861:223:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3056,"nodeType":"Block","src":"4589:111:16","statements":[{"expression":{"arguments":[{"id":3050,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"4628:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"4636:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"4642:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":3049,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[3057,3107],"referencedDeclaration":3107,"src":"4606:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3048,"id":3055,"nodeType":"Return","src":"4599:94:16"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"4090:351:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":3057,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:16","nodeType":"FunctionDefinition","parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"target","nameLocation":"4494:6:16","nodeType":"VariableDeclaration","scope":3057,"src":"4486:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3039,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"data","nameLocation":"4523:4:16","nodeType":"VariableDeclaration","scope":3057,"src":"4510:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3041,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"value","nameLocation":"4545:5:16","nodeType":"VariableDeclaration","scope":3057,"src":"4537:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:16"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3057,"src":"4575:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3046,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:16"},"scope":3243,"src":"4446:254:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3106,"nodeType":"Block","src":"5127:320:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3074,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$3243","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$3243","typeString":"library Address"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:16","typeDescriptions":{}}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"5170:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":3071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"5137:81:16"},{"expression":{"arguments":[{"arguments":[{"id":3084,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"5247:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3083,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"5236:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":3082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3088,"nodeType":"ExpressionStatement","src":"5228:60:16"},{"assignments":[3090,3092],"declarations":[{"constant":false,"id":3090,"mutability":"mutable","name":"success","nameLocation":"5305:7:16","nodeType":"VariableDeclaration","scope":3106,"src":"5300:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3089,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:16","nodeType":"VariableDeclaration","scope":3106,"src":"5314:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3091,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3099,"initialValue":{"arguments":[{"id":3097,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"5367:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3093,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"5341:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"5360:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:16","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:16"},{"expression":{"arguments":[{"id":3101,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"5406:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3102,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"5415:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3103,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3066,"src":"5427:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3100,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"5389:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3070,"id":3105,"nodeType":"Return","src":"5382:58:16"}]},"documentation":{"id":3058,"nodeType":"StructuredDocumentation","src":"4706:237:16","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":3107,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:16","nodeType":"FunctionDefinition","parameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3060,"mutability":"mutable","name":"target","nameLocation":"4996:6:16","nodeType":"VariableDeclaration","scope":3107,"src":"4988:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3059,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"data","nameLocation":"5025:4:16","nodeType":"VariableDeclaration","scope":3107,"src":"5012:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3061,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"value","nameLocation":"5047:5:16","nodeType":"VariableDeclaration","scope":3107,"src":"5039:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:16","nodeType":"VariableDeclaration","scope":3107,"src":"5062:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3065,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:16"},"returnParameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"5113:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3068,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:16"},"scope":3243,"src":"4948:499:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3123,"nodeType":"Block","src":"5724:97:16","statements":[{"expression":{"arguments":[{"id":3118,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"5760:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3119,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5768:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":3117,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[3124,3159],"referencedDeclaration":3159,"src":"5741:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":3121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3116,"id":3122,"nodeType":"Return","src":"5734:80:16"}]},"documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"5453:166:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3124,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:16","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3110,"mutability":"mutable","name":"target","nameLocation":"5660:6:16","nodeType":"VariableDeclaration","scope":3124,"src":"5652:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3112,"mutability":"mutable","name":"data","nameLocation":"5681:4:16","nodeType":"VariableDeclaration","scope":3124,"src":"5668:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3111,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:16"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3124,"src":"5710:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3114,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:16"},"scope":3243,"src":"5624:197:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3158,"nodeType":"Block","src":"6163:228:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3138,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"6192:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3137,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"6181:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":3140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":3136,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3142,"nodeType":"ExpressionStatement","src":"6173:67:16"},{"assignments":[3144,3146],"declarations":[{"constant":false,"id":3144,"mutability":"mutable","name":"success","nameLocation":"6257:7:16","nodeType":"VariableDeclaration","scope":3158,"src":"6252:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3143,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:16","nodeType":"VariableDeclaration","scope":3158,"src":"6266:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3145,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3151,"initialValue":{"arguments":[{"id":3149,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"6311:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3147,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"6293:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:16","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:16"},{"expression":{"arguments":[{"id":3153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"6350:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3154,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"6359:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3155,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3131,"src":"6371:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3152,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"6333:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3135,"id":3157,"nodeType":"Return","src":"6326:58:16"}]},"documentation":{"id":3125,"nodeType":"StructuredDocumentation","src":"5827:173:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":3159,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:16","nodeType":"FunctionDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"target","nameLocation":"6050:6:16","nodeType":"VariableDeclaration","scope":3159,"src":"6042:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"data","nameLocation":"6079:4:16","nodeType":"VariableDeclaration","scope":3159,"src":"6066:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3128,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3131,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:16","nodeType":"VariableDeclaration","scope":3159,"src":"6093:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3130,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:16"},"returnParameters":{"id":3135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"6149:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3133,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:16"},"scope":3243,"src":"6005:386:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3175,"nodeType":"Block","src":"6667:101:16","statements":[{"expression":{"arguments":[{"id":3170,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3162,"src":"6705:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3171,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"6713:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":3169,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[3176,3211],"referencedDeclaration":3211,"src":"6684:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3168,"id":3174,"nodeType":"Return","src":"6677:84:16"}]},"documentation":{"id":3160,"nodeType":"StructuredDocumentation","src":"6397:168:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3176,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:16","nodeType":"FunctionDefinition","parameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"target","nameLocation":"6608:6:16","nodeType":"VariableDeclaration","scope":3176,"src":"6600:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3161,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"data","nameLocation":"6629:4:16","nodeType":"VariableDeclaration","scope":3176,"src":"6616:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3163,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:16"},"returnParameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3176,"src":"6653:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3166,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:16"},"scope":3243,"src":"6570:198:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3210,"nodeType":"Block","src":"7109:232:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":3190,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"7138:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3189,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"7127:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":3192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":3188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3194,"nodeType":"ExpressionStatement","src":"7119:69:16"},{"assignments":[3196,3198],"declarations":[{"constant":false,"id":3196,"mutability":"mutable","name":"success","nameLocation":"7205:7:16","nodeType":"VariableDeclaration","scope":3210,"src":"7200:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3195,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:16","nodeType":"VariableDeclaration","scope":3210,"src":"7214:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3197,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3203,"initialValue":{"arguments":[{"id":3201,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"7261:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3199,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"7241:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:16","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:16"},{"expression":{"arguments":[{"id":3205,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7300:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3206,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"7309:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3207,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"7321:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3204,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3242,"src":"7283:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3187,"id":3209,"nodeType":"Return","src":"7276:58:16"}]},"documentation":{"id":3177,"nodeType":"StructuredDocumentation","src":"6774:175:16","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":3211,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:16","nodeType":"FunctionDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"target","nameLocation":"7001:6:16","nodeType":"VariableDeclaration","scope":3211,"src":"6993:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3178,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"data","nameLocation":"7030:4:16","nodeType":"VariableDeclaration","scope":3211,"src":"7017:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3180,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3183,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:16","nodeType":"VariableDeclaration","scope":3211,"src":"7044:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3182,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:16"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3211,"src":"7095:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3185,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:16"},"scope":3243,"src":"6954:387:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3241,"nodeType":"Block","src":"7721:582:16","statements":[{"condition":{"id":3223,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"7735:7:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3239,"nodeType":"Block","src":"7792:505:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3227,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7876:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3237,"nodeType":"Block","src":"8234:53:16","statements":[{"expression":{"arguments":[{"id":3234,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"8259:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3233,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3236,"nodeType":"ExpressionStatement","src":"8252:20:16"}]},"id":3238,"nodeType":"IfStatement","src":"7872:415:16","trueBody":{"id":3232,"nodeType":"Block","src":"7899:329:16","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:16","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:16","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:16"},"nodeType":"YulFunctionCall","src":"8114:17:16"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:16","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:16","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:16"},"nodeType":"YulFunctionCall","src":"8159:19:16"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:16"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:16"},"nodeType":"YulFunctionCall","src":"8152:44:16"},"nodeType":"YulExpressionStatement","src":"8152:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":3216,"isOffset":false,"isSlot":false,"src":"8120:10:16","valueSize":1},{"declaration":3216,"isOffset":false,"isSlot":false,"src":"8167:10:16","valueSize":1}],"id":3231,"nodeType":"InlineAssembly","src":"8060:154:16"}]}}]},"id":3240,"nodeType":"IfStatement","src":"7731:566:16","trueBody":{"id":3226,"nodeType":"Block","src":"7744:42:16","statements":[{"expression":{"id":3224,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7765:10:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3222,"id":3225,"nodeType":"Return","src":"7758:17:16"}]}}]},"documentation":{"id":3212,"nodeType":"StructuredDocumentation","src":"7347:209:16","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":3242,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:16","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"success","nameLocation":"7601:7:16","nodeType":"VariableDeclaration","scope":3242,"src":"7596:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3213,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3216,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:16","nodeType":"VariableDeclaration","scope":3242,"src":"7618:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3215,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:16","nodeType":"VariableDeclaration","scope":3242,"src":"7651:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3217,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:16"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3242,"src":"7707:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3220,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:16"},"scope":3243,"src":"7561:742:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3244,"src":"194:8111:16","usedErrors":[]}],"src":"101:8205:16"},"id":16},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[3469]},"id":3470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3245,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"126:34:17","text":" @dev String operations."},"fullyImplemented":true,"id":3469,"linearizedBaseContracts":[3469],"name":"Strings","nameLocation":"169:7:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3249,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:17","nodeType":"VariableDeclaration","scope":3469,"src":"183:58:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3247,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3252,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:17","nodeType":"VariableDeclaration","scope":3469,"src":"247:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3250,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":3330,"nodeType":"Block","src":"463:632:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"665:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3266,"nodeType":"IfStatement","src":"661:51:17","trueBody":{"id":3265,"nodeType":"Block","src":"677:35:17","statements":[{"expression":{"hexValue":"30","id":3263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":3259,"id":3264,"nodeType":"Return","src":"691:10:17"}]}},{"assignments":[3268],"declarations":[{"constant":false,"id":3268,"mutability":"mutable","name":"temp","nameLocation":"729:4:17","nodeType":"VariableDeclaration","scope":3330,"src":"721:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3270,"initialValue":{"id":3269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"736:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:17"},{"assignments":[3272],"declarations":[{"constant":false,"id":3272,"mutability":"mutable","name":"digits","nameLocation":"759:6:17","nodeType":"VariableDeclaration","scope":3330,"src":"751:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3273,"nodeType":"VariableDeclarationStatement","src":"751:14:17"},{"body":{"id":3284,"nodeType":"Block","src":"793:57:17","statements":[{"expression":{"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:17","subExpression":{"id":3277,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"807:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3279,"nodeType":"ExpressionStatement","src":"807:8:17"},{"expression":{"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3280,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"829:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3283,"nodeType":"ExpressionStatement","src":"829:10:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"782:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3285,"nodeType":"WhileStatement","src":"775:75:17"},{"assignments":[3287],"declarations":[{"constant":false,"id":3287,"mutability":"mutable","name":"buffer","nameLocation":"872:6:17","nodeType":"VariableDeclaration","scope":3330,"src":"859:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3286,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3292,"initialValue":{"arguments":[{"id":3290,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"891:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3288,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:17"},{"body":{"id":3323,"nodeType":"Block","src":"927:131:17","statements":[{"expression":{"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3296,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"941:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":3297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3299,"nodeType":"ExpressionStatement","src":"941:11:17"},{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3300,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"966:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3302,"indexExpression":{"id":3301,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"973:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":3307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"1009:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":3311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:17","typeDescriptions":{}}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3305,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:17","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3303,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:17","typeDescriptions":{}}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3318,"nodeType":"ExpressionStatement","src":"966:56:17"},{"expression":{"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"1036:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":3320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3322,"nodeType":"ExpressionStatement","src":"1036:11:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3255,"src":"915:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3324,"nodeType":"WhileStatement","src":"908:150:17"},{"expression":{"arguments":[{"id":3327,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"1081:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3325,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:17","typeDescriptions":{}}},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3259,"id":3329,"nodeType":"Return","src":"1067:21:17"}]},"documentation":{"id":3253,"nodeType":"StructuredDocumentation","src":"297:90:17","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3331,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:17","nodeType":"FunctionDefinition","parameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3255,"mutability":"mutable","name":"value","nameLocation":"418:5:17","nodeType":"VariableDeclaration","scope":3331,"src":"410:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:17"},"returnParameters":{"id":3259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3331,"src":"448:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3257,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:17"},"scope":3469,"src":"392:703:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3371,"nodeType":"Block","src":"1274:255:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1288:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3345,"nodeType":"IfStatement","src":"1284:54:17","trueBody":{"id":3344,"nodeType":"Block","src":"1300:38:17","statements":[{"expression":{"hexValue":"30783030","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":3338,"id":3343,"nodeType":"Return","src":"1314:13:17"}]}},{"assignments":[3347],"declarations":[{"constant":false,"id":3347,"mutability":"mutable","name":"temp","nameLocation":"1355:4:17","nodeType":"VariableDeclaration","scope":3371,"src":"1347:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3346,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3349,"initialValue":{"id":3348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1362:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:17"},{"assignments":[3351],"declarations":[{"constant":false,"id":3351,"mutability":"mutable","name":"length","nameLocation":"1385:6:17","nodeType":"VariableDeclaration","scope":3371,"src":"1377:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3353,"initialValue":{"hexValue":"30","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:17"},{"body":{"id":3364,"nodeType":"Block","src":"1423:57:17","statements":[{"expression":{"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:17","subExpression":{"id":3357,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1437:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3359,"nodeType":"ExpressionStatement","src":"1437:8:17"},{"expression":{"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3360,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"1459:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3363,"nodeType":"ExpressionStatement","src":"1459:10:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"1412:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3365,"nodeType":"WhileStatement","src":"1405:75:17"},{"expression":{"arguments":[{"id":3367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"1508:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3368,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"1515:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3366,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3372,3448,3468],"referencedDeclaration":3448,"src":"1496:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3338,"id":3370,"nodeType":"Return","src":"1489:33:17"}]},"documentation":{"id":3332,"nodeType":"StructuredDocumentation","src":"1101:94:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3372,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:17","nodeType":"FunctionDefinition","parameters":{"id":3335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"value","nameLocation":"1229:5:17","nodeType":"VariableDeclaration","scope":3372,"src":"1221:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:17"},"returnParameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3372,"src":"1259:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3336,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:17"},"scope":3469,"src":"1200:329:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3447,"nodeType":"Block","src":"1742:351:17","statements":[{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:17","nodeType":"VariableDeclaration","scope":3447,"src":"1752:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3382,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3392,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3387,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"1788:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3384,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:17"},{"expression":{"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3393,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"1809:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3395,"indexExpression":{"hexValue":"30","id":3394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3398,"nodeType":"ExpressionStatement","src":"1809:15:17"},{"expression":{"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3399,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"1834:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3401,"indexExpression":{"hexValue":"31","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3404,"nodeType":"ExpressionStatement","src":"1834:15:17"},{"body":{"id":3433,"nodeType":"Block","src":"1904:87:17","statements":[{"expression":{"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3419,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"1918:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3421,"indexExpression":{"id":3420,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1925:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3422,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"1930:12:17","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3426,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"1943:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:17","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3428,"nodeType":"ExpressionStatement","src":"1918:37:17"},{"expression":{"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"1969:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3432,"nodeType":"ExpressionStatement","src":"1969:11:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1892:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"initializationExpression":{"assignments":[3406],"declarations":[{"constant":false,"id":3406,"mutability":"mutable","name":"i","nameLocation":"1872:1:17","nodeType":"VariableDeclaration","scope":3434,"src":"1864:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3412,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3408,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"1880:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:17"},"loopExpression":{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:17","subExpression":{"id":3416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3406,"src":"1901:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3418,"nodeType":"ExpressionStatement","src":"1899:3:17"},"nodeType":"ForStatement","src":"1859:132:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"2008:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3441,"nodeType":"ExpressionStatement","src":"2000:55:17"},{"expression":{"arguments":[{"id":3444,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"2079:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3442,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:17","typeDescriptions":{}}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3381,"id":3446,"nodeType":"Return","src":"2065:21:17"}]},"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"1535:112:17","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3448,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:17","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"value","nameLocation":"1681:5:17","nodeType":"VariableDeclaration","scope":3448,"src":"1673:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"length","nameLocation":"1696:6:17","nodeType":"VariableDeclaration","scope":3448,"src":"1688:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:17"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3448,"src":"1727:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3379,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:17"},"scope":3469,"src":"1652:441:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3467,"nodeType":"Block","src":"2318:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3461,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3451,"src":"2363:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3459,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:17","typeDescriptions":{}}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:17","typeDescriptions":{}}},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3464,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"2371:15:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3456,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3372,3448,3468],"referencedDeclaration":3448,"src":"2335:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3455,"id":3466,"nodeType":"Return","src":"2328:59:17"}]},"documentation":{"id":3449,"nodeType":"StructuredDocumentation","src":"2099:141:17","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3468,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:17","nodeType":"FunctionDefinition","parameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"addr","nameLocation":"2274:4:17","nodeType":"VariableDeclaration","scope":3468,"src":"2266:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3450,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:17"},"returnParameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3468,"src":"2303:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3453,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:17"},"scope":3469,"src":"2245:149:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3470,"src":"161:2235:17","usedErrors":[]}],"src":"101:2296:17"},"id":17},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol","exportedSymbols":{"ERC165Checker":[3663],"IERC165":[3675]},"id":3664,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3471,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"121:23:18"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3472,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3664,"sourceUnit":3676,"src":"146:23:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC165Checker","contractDependencies":[],"contractKind":"library","documentation":{"id":3473,"nodeType":"StructuredDocumentation","src":"171:277:18","text":" @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."},"fullyImplemented":true,"id":3663,"linearizedBaseContracts":[3663],"name":"ERC165Checker","nameLocation":"457:13:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":3476,"mutability":"constant","name":"_INTERFACE_ID_INVALID","nameLocation":"575:21:18","nodeType":"VariableDeclaration","scope":3663,"src":"551:58:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3474,"name":"bytes4","nodeType":"ElementaryTypeName","src":"551:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"value":{"hexValue":"30786666666666666666","id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"599:10:18","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"visibility":"private"},{"body":{"id":3498,"nodeType":"Block","src":"774:341:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3485,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"1000:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3487,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"1014:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3675_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3675_$","typeString":"type(contract IERC165)"}],"id":3486,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1009:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1009:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3675","typeString":"type(contract IERC165)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1009:25:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3484,"name":"_supportsERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"975:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"975:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1051:57:18","subExpression":{"arguments":[{"id":3492,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"1077:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3493,"name":"_INTERFACE_ID_INVALID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"1086:21:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3491,"name":"_supportsERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"1052:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1052:56:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"975:133:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3483,"id":3497,"nodeType":"Return","src":"956:152:18"}]},"documentation":{"id":3477,"nodeType":"StructuredDocumentation","src":"616:83:18","text":" @dev Returns true if `account` supports the {IERC165} interface,"},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"supportsERC165","nameLocation":"713:14:18","nodeType":"FunctionDefinition","parameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"account","nameLocation":"736:7:18","nodeType":"VariableDeclaration","scope":3499,"src":"728:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3478,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:17:18"},"returnParameters":{"id":3483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"768:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3481,"name":"bool","nodeType":"ElementaryTypeName","src":"768:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"767:6:18"},"scope":3663,"src":"704:411:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3518,"nodeType":"Block","src":"1426:181:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3510,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"1542:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3509,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"1527:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1527:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3513,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"1579:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3514,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"1588:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3512,"name":"_supportsERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"1554:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1554:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1527:73:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3508,"id":3517,"nodeType":"Return","src":"1520:80:18"}]},"documentation":{"id":3500,"nodeType":"StructuredDocumentation","src":"1121:207:18","text":" @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."},"id":3519,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1342:17:18","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3502,"mutability":"mutable","name":"account","nameLocation":"1368:7:18","nodeType":"VariableDeclaration","scope":3519,"src":"1360:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3501,"name":"address","nodeType":"ElementaryTypeName","src":"1360:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3504,"mutability":"mutable","name":"interfaceId","nameLocation":"1384:11:18","nodeType":"VariableDeclaration","scope":3519,"src":"1377:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3503,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1377:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1359:37:18"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3519,"src":"1420:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3506,"name":"bool","nodeType":"ElementaryTypeName","src":"1420:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1419:6:18"},"scope":3663,"src":"1333:274:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3574,"nodeType":"Block","src":"2137:552:18","statements":[{"assignments":[3535],"declarations":[{"constant":false,"id":3535,"mutability":"mutable","name":"interfaceIdsSupported","nameLocation":"2260:21:18","nodeType":"VariableDeclaration","scope":3574,"src":"2246:35:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3533,"name":"bool","nodeType":"ElementaryTypeName","src":"2246:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3534,"nodeType":"ArrayTypeName","src":"2246:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":3542,"initialValue":{"arguments":[{"expression":{"id":3539,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"2295:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2295:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2284:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3536,"name":"bool","nodeType":"ElementaryTypeName","src":"2288:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3537,"nodeType":"ArrayTypeName","src":"2288:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2284:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2246:69:18"},{"condition":{"arguments":[{"id":3544,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"2387:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3543,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"2372:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2372:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3571,"nodeType":"IfStatement","src":"2368:276:18","trueBody":{"id":3570,"nodeType":"Block","src":"2397:247:18","statements":[{"body":{"id":3568,"nodeType":"Block","src":"2524:110:18","statements":[{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3557,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"2542:21:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3559,"indexExpression":{"id":3558,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"2564:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2542:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3561,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"2594:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3562,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"2603:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3564,"indexExpression":{"id":3563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"2616:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:15:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3560,"name":"_supportsERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"2569:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2569:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2542:77:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3567,"nodeType":"ExpressionStatement","src":"2542:77:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"2494:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3551,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"2498:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2498:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2494:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"initializationExpression":{"assignments":[3547],"declarations":[{"constant":false,"id":3547,"mutability":"mutable","name":"i","nameLocation":"2487:1:18","nodeType":"VariableDeclaration","scope":3569,"src":"2479:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2479:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3549,"initialValue":{"hexValue":"30","id":3548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2491:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2479:13:18"},"loopExpression":{"expression":{"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2519:3:18","subExpression":{"id":3554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"2519:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3556,"nodeType":"ExpressionStatement","src":"2519:3:18"},"nodeType":"ForStatement","src":"2474:160:18"}]}},{"expression":{"id":3572,"name":"interfaceIdsSupported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"2661:21:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"functionReturnParameters":3530,"id":3573,"nodeType":"Return","src":"2654:28:18"}]},"documentation":{"id":3520,"nodeType":"StructuredDocumentation","src":"1613:374:18","text":" @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"},"id":3575,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedInterfaces","nameLocation":"2001:22:18","nodeType":"FunctionDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"account","nameLocation":"2032:7:18","nodeType":"VariableDeclaration","scope":3575,"src":"2024:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"interfaceIds","nameLocation":"2057:12:18","nodeType":"VariableDeclaration","scope":3575,"src":"2041:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3523,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2041:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3524,"nodeType":"ArrayTypeName","src":"2041:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"2023:47:18"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3575,"src":"2118:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3527,"name":"bool","nodeType":"ElementaryTypeName","src":"2118:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3528,"nodeType":"ArrayTypeName","src":"2118:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"2117:15:18"},"scope":3663,"src":"1992:697:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3620,"nodeType":"Block","src":"3131:429:18","statements":[{"condition":{"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3187:24:18","subExpression":{"arguments":[{"id":3587,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3203:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3586,"name":"supportsERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"3188:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3188:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3593,"nodeType":"IfStatement","src":"3183:67:18","trueBody":{"id":3592,"nodeType":"Block","src":"3213:37:18","statements":[{"expression":{"hexValue":"66616c7365","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3234:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3585,"id":3591,"nodeType":"Return","src":"3227:12:18"}]}},{"body":{"id":3616,"nodeType":"Block","src":"3370:126:18","statements":[{"condition":{"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3388:51:18","subExpression":{"arguments":[{"id":3606,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3414:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3607,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"3423:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3609,"indexExpression":{"id":3608,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"3436:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3423:15:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":3605,"name":"_supportsERC165Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"3389:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$","typeString":"function (address,bytes4) view returns (bool)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3389:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3615,"nodeType":"IfStatement","src":"3384:102:18","trueBody":{"id":3614,"nodeType":"Block","src":"3441:45:18","statements":[{"expression":{"hexValue":"66616c7365","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3466:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3585,"id":3613,"nodeType":"Return","src":"3459:12:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"3340:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3599,"name":"interfaceIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"3344:12:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[] memory"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3344:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3617,"initializationExpression":{"assignments":[3595],"declarations":[{"constant":false,"id":3595,"mutability":"mutable","name":"i","nameLocation":"3333:1:18","nodeType":"VariableDeclaration","scope":3617,"src":"3325:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3325:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3597,"initialValue":{"hexValue":"30","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3337:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3325:13:18"},"loopExpression":{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3365:3:18","subExpression":{"id":3602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"3365:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"3365:3:18"},"nodeType":"ForStatement","src":"3320:176:18"},{"expression":{"hexValue":"74727565","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3549:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3585,"id":3619,"nodeType":"Return","src":"3542:11:18"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"2695:324:18","text":" @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."},"id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"supportsAllInterfaces","nameLocation":"3033:21:18","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"account","nameLocation":"3063:7:18","nodeType":"VariableDeclaration","scope":3621,"src":"3055:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3577,"name":"address","nodeType":"ElementaryTypeName","src":"3055:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"interfaceIds","nameLocation":"3088:12:18","nodeType":"VariableDeclaration","scope":3621,"src":"3072:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_memory_ptr","typeString":"bytes4[]"},"typeName":{"baseType":{"id":3579,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3072:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3580,"nodeType":"ArrayTypeName","src":"3072:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes4_$dyn_storage_ptr","typeString":"bytes4[]"}},"visibility":"internal"}],"src":"3054:47:18"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3621,"src":"3125:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3583,"name":"bool","nodeType":"ElementaryTypeName","src":"3125:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3124:6:18"},"scope":3663,"src":"3024:536:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3661,"nodeType":"Block","src":"4322:539:18","statements":[{"assignments":[3632],"declarations":[{"constant":false,"id":3632,"mutability":"mutable","name":"encodedParams","nameLocation":"4369:13:18","nodeType":"VariableDeclaration","scope":3661,"src":"4356:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3631,"name":"bytes","nodeType":"ElementaryTypeName","src":"4356:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3640,"initialValue":{"arguments":[{"expression":{"expression":{"id":3635,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"4408:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3675_$","typeString":"type(contract IERC165)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3674,"src":"4408:25:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$_t_bytes4_$returns$_t_bool_$","typeString":"function IERC165.supportsInterface(bytes4) view returns (bool)"}},"id":3637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4408:34:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3638,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"4444:11:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":3633,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4385:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4385:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4385:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4356:100:18"},{"assignments":[3642],"declarations":[{"constant":false,"id":3642,"mutability":"mutable","name":"success","nameLocation":"4503:7:18","nodeType":"VariableDeclaration","scope":3661,"src":"4498:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3641,"name":"bool","nodeType":"ElementaryTypeName","src":"4498:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3643,"nodeType":"VariableDeclarationStatement","src":"4498:12:18"},{"assignments":[3645],"declarations":[{"constant":false,"id":3645,"mutability":"mutable","name":"returnSize","nameLocation":"4528:10:18","nodeType":"VariableDeclaration","scope":3661,"src":"4520:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"4520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3646,"nodeType":"VariableDeclarationStatement","src":"4520:18:18"},{"assignments":[3648],"declarations":[{"constant":false,"id":3648,"mutability":"mutable","name":"returnValue","nameLocation":"4556:11:18","nodeType":"VariableDeclaration","scope":3661,"src":"4548:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3649,"nodeType":"VariableDeclarationStatement","src":"4548:19:18"},{"AST":{"nodeType":"YulBlock","src":"4586:203:18","statements":[{"nodeType":"YulAssignment","src":"4600:97:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4622:5:18","type":"","value":"30000"},{"name":"account","nodeType":"YulIdentifier","src":"4629:7:18"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4642:13:18"},{"kind":"number","nodeType":"YulLiteral","src":"4657:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4638:3:18"},"nodeType":"YulFunctionCall","src":"4638:24:18"},{"arguments":[{"name":"encodedParams","nodeType":"YulIdentifier","src":"4670:13:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4664:5:18"},"nodeType":"YulFunctionCall","src":"4664:20:18"},{"kind":"number","nodeType":"YulLiteral","src":"4686:4:18","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4692:4:18","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"4611:10:18"},"nodeType":"YulFunctionCall","src":"4611:86:18"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"4600:7:18"}]},{"nodeType":"YulAssignment","src":"4710:30:18","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"4724:14:18"},"nodeType":"YulFunctionCall","src":"4724:16:18"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"4710:10:18"}]},{"nodeType":"YulAssignment","src":"4753:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4774:4:18","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4768:5:18"},"nodeType":"YulFunctionCall","src":"4768:11:18"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"4753:11:18"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3624,"isOffset":false,"isSlot":false,"src":"4629:7:18","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"4642:13:18","valueSize":1},{"declaration":3632,"isOffset":false,"isSlot":false,"src":"4670:13:18","valueSize":1},{"declaration":3645,"isOffset":false,"isSlot":false,"src":"4710:10:18","valueSize":1},{"declaration":3648,"isOffset":false,"isSlot":false,"src":"4753:11:18","valueSize":1},{"declaration":3642,"isOffset":false,"isSlot":false,"src":"4600:7:18","valueSize":1}],"id":3650,"nodeType":"InlineAssembly","src":"4577:212:18"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"4806:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"4817:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30783230","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4831:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4817:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4806:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3656,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"4839:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4853:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4839:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4806:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3630,"id":3660,"nodeType":"Return","src":"4799:55:18"}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"3566:652:18","text":" @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Interface identification is specified in ERC-165."},"id":3662,"implemented":true,"kind":"function","modifiers":[],"name":"_supportsERC165Interface","nameLocation":"4232:24:18","nodeType":"FunctionDefinition","parameters":{"id":3627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"account","nameLocation":"4265:7:18","nodeType":"VariableDeclaration","scope":3662,"src":"4257:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3623,"name":"address","nodeType":"ElementaryTypeName","src":"4257:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3626,"mutability":"mutable","name":"interfaceId","nameLocation":"4281:11:18","nodeType":"VariableDeclaration","scope":3662,"src":"4274:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3625,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4274:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4256:37:18"},"returnParameters":{"id":3630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3662,"src":"4316:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3628,"name":"bool","nodeType":"ElementaryTypeName","src":"4316:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4315:6:18"},"scope":3663,"src":"4223:638:18","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":3664,"src":"449:4414:18","usedErrors":[]}],"src":"121:4743:18"},"id":18},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3675]},"id":3676,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3665,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"125:279:19","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3675,"linearizedBaseContracts":[3675],"name":"IERC165","nameLocation":"415:7:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3667,"nodeType":"StructuredDocumentation","src":"429:340:19","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3674,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:19","nodeType":"FunctionDefinition","parameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:19","nodeType":"VariableDeclaration","scope":3674,"src":"801:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3668,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:19"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3674,"src":"844:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3671,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:19"},"scope":3675,"src":"774:76:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3676,"src":"405:447:19","usedErrors":[]}],"src":"100:753:19"},"id":19},"contracts/L1Bridge.sol":{"ast":{"absolutePath":"contracts/L1Bridge.sol","exportedSymbols":{"L1Bridge":[3695],"L1ERC721Bridge":[199]},"id":3696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3677,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:20"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol","file":"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol","id":3679,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3696,"sourceUnit":200,"src":"57:97:20","symbolAliases":[{"foreign":{"id":3678,"name":"L1ERC721Bridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"66:14:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3680,"name":"L1ERC721Bridge","nodeType":"IdentifierPath","referencedDeclaration":199,"src":"177:14:20"},"id":3681,"nodeType":"InheritanceSpecifier","src":"177:14:20"}],"canonicalName":"L1Bridge","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3695,"linearizedBaseContracts":[3695,199,2407,2267],"name":"L1Bridge","nameLocation":"165:8:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":3693,"nodeType":"Block","src":"514:2:20","statements":[]},"documentation":{"id":3682,"nodeType":"StructuredDocumentation","src":"198:204:20","text":" @custom:semver 1.0.0\n @param _messenger   Address of the CrossDomainMessenger on this network.\n @param _otherBridge Address of the ERC721 bridge on the other network."},"id":3694,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3689,"name":"_messenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"484:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3690,"name":"_otherBridge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3686,"src":"496:12:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3691,"kind":"baseConstructorSpecifier","modifierName":{"id":3688,"name":"L1ERC721Bridge","nodeType":"IdentifierPath","referencedDeclaration":199,"src":"469:14:20"},"nodeType":"ModifierInvocation","src":"469:40:20"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"_messenger","nameLocation":"427:10:20","nodeType":"VariableDeclaration","scope":3694,"src":"419:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3683,"name":"address","nodeType":"ElementaryTypeName","src":"419:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3686,"mutability":"mutable","name":"_otherBridge","nameLocation":"447:12:20","nodeType":"VariableDeclaration","scope":3694,"src":"439:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3685,"name":"address","nodeType":"ElementaryTypeName","src":"439:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"418:42:20"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[],"src":"514:0:20"},"scope":3695,"src":"407:109:20","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3696,"src":"156:362:20","usedErrors":[]}],"src":"32:486:20"},"id":20}},"contracts":{"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol":{"L1ERC721Bridge":{"abi":[{"inputs":[{"internalType":"address","name":"_messenger","type":"address"},{"internalType":"address","name":"_otherBridge","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeInitiated","type":"event"},{"inputs":[],"name":"MESSENGER","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OTHER_BRIDGE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721To","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposits","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"finalizeBridgeERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"messenger","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"otherBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2154":{"entryPoint":null,"id":2154,"parameterSlots":2,"returnSlots":0},"@_2378":{"entryPoint":null,"id":2378,"parameterSlots":3,"returnSlots":0},"@_41":{"entryPoint":null,"id":41,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":539,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack":{"entryPoint":706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":745,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":470,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":438,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":433,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e":{"entryPoint":779,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":490,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3601:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"939:413:21","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:21"},"nodeType":"YulFunctionCall","src":"987:79:21"},"nodeType":"YulExpressionStatement","src":"987:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:21"},"nodeType":"YulFunctionCall","src":"956:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:21"},"nodeType":"YulFunctionCall","src":"952:32:21"},"nodeType":"YulIf","src":"949:119:21"},{"nodeType":"YulBlock","src":"1078:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:21"},"nodeType":"YulFunctionCall","src":"1164:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:21"},"nodeType":"YulFunctionCall","src":"1132:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:21"}]}]},{"nodeType":"YulBlock","src":"1216:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:21"},"nodeType":"YulFunctionCall","src":"1303:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:21"},"nodeType":"YulFunctionCall","src":"1271:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:21","type":""}],"src":"845:507:21"},{"body":{"nodeType":"YulBlock","src":"1454:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:21"},"nodeType":"YulFunctionCall","src":"1464:19:21"},"nodeType":"YulExpressionStatement","src":"1464:19:21"},{"nodeType":"YulAssignment","src":"1492:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:21"},"nodeType":"YulFunctionCall","src":"1507:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:21","type":""}],"src":"1358:169:21"},{"body":{"nodeType":"YulBlock","src":"1639:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:21"},"nodeType":"YulFunctionCall","src":"1657:14:21"},{"hexValue":"4552433732314272696467653a206d657373656e6765722063616e6e6f742062","kind":"string","nodeType":"YulLiteral","src":"1673:34:21","type":"","value":"ERC721Bridge: messenger cannot b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:21"},"nodeType":"YulFunctionCall","src":"1650:58:21"},"nodeType":"YulExpressionStatement","src":"1650:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1729:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1725:3:21"},"nodeType":"YulFunctionCall","src":"1725:15:21"},{"hexValue":"652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"1742:14:21","type":"","value":"e address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1718:6:21"},"nodeType":"YulFunctionCall","src":"1718:39:21"},"nodeType":"YulExpressionStatement","src":"1718:39:21"}]},"name":"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:21","type":""}],"src":"1533:231:21"},{"body":{"nodeType":"YulBlock","src":"1916:220:21","statements":[{"nodeType":"YulAssignment","src":"1926:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1992:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1997:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1933:58:21"},"nodeType":"YulFunctionCall","src":"1933:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1926:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2098:3:21"}],"functionName":{"name":"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","nodeType":"YulIdentifier","src":"2009:88:21"},"nodeType":"YulFunctionCall","src":"2009:93:21"},"nodeType":"YulExpressionStatement","src":"2009:93:21"},{"nodeType":"YulAssignment","src":"2111:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2122:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2127:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:21"},"nodeType":"YulFunctionCall","src":"2118:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2111:3:21"}]}]},"name":"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1904:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1912:3:21","type":""}],"src":"1770:366:21"},{"body":{"nodeType":"YulBlock","src":"2313:248:21","statements":[{"nodeType":"YulAssignment","src":"2323:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2335:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2346:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:21"},"nodeType":"YulFunctionCall","src":"2331:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2323:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2381:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:21"},"nodeType":"YulFunctionCall","src":"2366:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2389:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2385:3:21"},"nodeType":"YulFunctionCall","src":"2385:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2359:6:21"},"nodeType":"YulFunctionCall","src":"2359:47:21"},"nodeType":"YulExpressionStatement","src":"2359:47:21"},{"nodeType":"YulAssignment","src":"2415:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2549:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2423:124:21"},"nodeType":"YulFunctionCall","src":"2423:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2415:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2293:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2308:4:21","type":""}],"src":"2142:419:21"},{"body":{"nodeType":"YulBlock","src":"2673:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2695:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2703:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:21"},"nodeType":"YulFunctionCall","src":"2691:14:21"},{"hexValue":"4552433732314272696467653a206f74686572206272696467652063616e6e6f","kind":"string","nodeType":"YulLiteral","src":"2707:34:21","type":"","value":"ERC721Bridge: other bridge canno"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2684:6:21"},"nodeType":"YulFunctionCall","src":"2684:58:21"},"nodeType":"YulExpressionStatement","src":"2684:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2763:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2771:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2759:3:21"},"nodeType":"YulFunctionCall","src":"2759:15:21"},{"hexValue":"742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"2776:17:21","type":"","value":"t be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2752:6:21"},"nodeType":"YulFunctionCall","src":"2752:42:21"},"nodeType":"YulExpressionStatement","src":"2752:42:21"}]},"name":"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2665:6:21","type":""}],"src":"2567:234:21"},{"body":{"nodeType":"YulBlock","src":"2953:220:21","statements":[{"nodeType":"YulAssignment","src":"2963:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3029:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3034:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2970:58:21"},"nodeType":"YulFunctionCall","src":"2970:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2963:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3135:3:21"}],"functionName":{"name":"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","nodeType":"YulIdentifier","src":"3046:88:21"},"nodeType":"YulFunctionCall","src":"3046:93:21"},"nodeType":"YulExpressionStatement","src":"3046:93:21"},{"nodeType":"YulAssignment","src":"3148:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3159:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3164:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3155:3:21"},"nodeType":"YulFunctionCall","src":"3155:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3148:3:21"}]}]},"name":"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2941:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2949:3:21","type":""}],"src":"2807:366:21"},{"body":{"nodeType":"YulBlock","src":"3350:248:21","statements":[{"nodeType":"YulAssignment","src":"3360:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3372:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3383:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3368:3:21"},"nodeType":"YulFunctionCall","src":"3368:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3360:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3418:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3403:3:21"},"nodeType":"YulFunctionCall","src":"3403:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3426:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3422:3:21"},"nodeType":"YulFunctionCall","src":"3422:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3396:6:21"},"nodeType":"YulFunctionCall","src":"3396:47:21"},"nodeType":"YulExpressionStatement","src":"3396:47:21"},{"nodeType":"YulAssignment","src":"3452:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3586:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3460:124:21"},"nodeType":"YulFunctionCall","src":"3460:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3452:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3330:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3345:4:21","type":""}],"src":"3179:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: messenger cannot b\")\n\n        mstore(add(memPtr, 32), \"e address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: other bridge canno\")\n\n        mstore(add(memPtr, 32), \"t be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101206040523480156200001257600080fd5b5060405162001ee638038062001ee683398181016040528101906200003891906200021b565b60018060008484600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000a890620002e9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000123576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011a9062000381565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050508260c081815250508160e081815250508061010081815250505050505050620003a3565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e382620001b6565b9050919050565b620001f581620001d6565b81146200020157600080fd5b50565b6000815190506200021581620001ea565b92915050565b60008060408385031215620002355762000234620001b1565b5b6000620002458582860162000204565b9250506020620002588582860162000204565b9150509250929050565b600082825260208201905092915050565b7f4552433732314272696467653a206d657373656e6765722063616e6e6f74206260008201527f6520616464726573732830290000000000000000000000000000000000000000602082015250565b6000620002d1602c8362000262565b9150620002de8262000273565b604082019050919050565b600060208201905081810360008301526200030481620002c2565b9050919050565b7f4552433732314272696467653a206f74686572206272696467652063616e6e6f60008201527f7420626520616464726573732830290000000000000000000000000000000000602082015250565b600062000369602f8362000262565b915062000376826200030b565b604082019050919050565b600060208201905081810360008301526200039c816200035a565b9050919050565b60805160a05160c05160e05161010051611acd6200041960003960006102940152600061026b015260006102420152600081816103720152818161077e015281816108500152610adf0152600081816102170152818161031c015281816103a9015281816107a20152610aa30152611acd6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063761f449311610066578063761f4493146101205780637f46ddb21461013c578063927ede2d1461015a578063aa55745214610178578063c89701a21461019457610093565b80633687011a146100985780633cb747bf146100b457806354fd4d50146100d25780635d93a3fc146100f0575b600080fd5b6100b260048036038101906100ad9190610e7c565b6101b2565b005b6100bc610213565b6040516100c99190610f75565b60405180910390f35b6100da61023b565b6040516100e79190611029565b60405180910390f35b61010a6004803603810190610105919061104b565b6102de565b60405161011791906110b9565b60405180910390f35b61013a600480360381019061013591906110d4565b61031a565b005b61014461077c565b6040516101519190611192565b60405180910390f35b6101626107a0565b60405161016f9190610f75565b60405180910390f35b610192600480360381019061018d91906111ad565b6107c4565b005b61019c61084c565b6040516101a99190611192565b60405180910390f35b6101bb33610874565b156101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906112ce565b60405180910390fd5b61020b8686333388888888610897565b505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60606102667f0000000000000000000000000000000000000000000000000000000000000000610bdd565b61028f7f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6102b87f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6040516020016102ca93929190611376565b604051602081830303815290604052905090565b6031602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561044e57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906113d2565b73ffffffffffffffffffffffffffffffffffffffff16145b61048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490611471565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290611503565b60405180910390fd5b60011515603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff161515146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390611595565b60405180910390fd5b6000603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055508673ffffffffffffffffffffffffffffffffffffffff166342842e0e3086866040518463ffffffff1660e01b81526004016106bf939291906115c4565b600060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f1f39bf6707b5d608453e0ae4c067b562bcc4c85c0f562ef5d2c774d2e7f131ac8787878760405161076b9493929190611648565b60405180910390a450505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a906116fa565b60405180910390fd5b6108438787338888888888610897565b50505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9061178c565b60405180910390fd5b600063761f449360e01b888a898989888860405160240161092d97969594939291906117ac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001603160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508873ffffffffffffffffffffffffffffffffffffffff166323b872dd8830886040518463ffffffff1660e01b8152600401610a6f939291906115c4565b600060405180830381600087803b158015610a8957600080fd5b505af1158015610a9d573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633dbb202b7f000000000000000000000000000000000000000000000000000000000000000083876040518463ffffffff1660e01b8152600401610b1e93929190611869565b600060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fb7460e2a880f256ebef3406116ff3eee0cee51ebccdc2a40698f87ebb2e9c1a589898888604051610bca9493929190611648565b60405180910390a4505050505050505050565b606060008203610c24576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d38565b600082905060005b60008214610c56578080610c3f906118d6565b915050600a82610c4f919061194d565b9150610c2c565b60008167ffffffffffffffff811115610c7257610c7161197e565b5b6040519080825280601f01601f191660200182016040528015610ca45781602001600182028036833780820191505090505b5090505b60008514610d3157600182610cbd91906119ad565b9150600a85610ccc91906119e1565b6030610cd89190611a12565b60f81b818381518110610cee57610ced611a68565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610d2a919061194d565b9450610ca8565b8093505050505b919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7282610d47565b9050919050565b610d8281610d67565b8114610d8d57600080fd5b50565b600081359050610d9f81610d79565b92915050565b6000819050919050565b610db881610da5565b8114610dc357600080fd5b50565b600081359050610dd581610daf565b92915050565b600063ffffffff82169050919050565b610df481610ddb565b8114610dff57600080fd5b50565b600081359050610e1181610deb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e3c57610e3b610e17565b5b8235905067ffffffffffffffff811115610e5957610e58610e1c565b5b602083019150836001820283011115610e7557610e74610e21565b5b9250929050565b60008060008060008060a08789031215610e9957610e98610d3d565b5b6000610ea789828a01610d90565b9650506020610eb889828a01610d90565b9550506040610ec989828a01610dc6565b9450506060610eda89828a01610e02565b935050608087013567ffffffffffffffff811115610efb57610efa610d42565b5b610f0789828a01610e26565b92509250509295509295509295565b6000819050919050565b6000610f3b610f36610f3184610d47565b610f16565b610d47565b9050919050565b6000610f4d82610f20565b9050919050565b6000610f5f82610f42565b9050919050565b610f6f81610f54565b82525050565b6000602082019050610f8a6000830184610f66565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fca578082015181840152602081019050610faf565b83811115610fd9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ffb82610f90565b6110058185610f9b565b9350611015818560208601610fac565b61101e81610fdf565b840191505092915050565b600060208201905081810360008301526110438184610ff0565b905092915050565b60008060006060848603121561106457611063610d3d565b5b600061107286828701610d90565b935050602061108386828701610d90565b925050604061109486828701610dc6565b9150509250925092565b60008115159050919050565b6110b38161109e565b82525050565b60006020820190506110ce60008301846110aa565b92915050565b600080600080600080600060c0888a0312156110f3576110f2610d3d565b5b60006111018a828b01610d90565b97505060206111128a828b01610d90565b96505060406111238a828b01610d90565b95505060606111348a828b01610d90565b94505060806111458a828b01610dc6565b93505060a088013567ffffffffffffffff81111561116657611165610d42565b5b6111728a828b01610e26565b925092505092959891949750929550565b61118c81610d67565b82525050565b60006020820190506111a76000830184611183565b92915050565b600080600080600080600060c0888a0312156111cc576111cb610d3d565b5b60006111da8a828b01610d90565b97505060206111eb8a828b01610d90565b96505060406111fc8a828b01610d90565b955050606061120d8a828b01610dc6565b945050608061121e8a828b01610e02565b93505060a088013567ffffffffffffffff81111561123f5761123e610d42565b5b61124b8a828b01610e26565b925092505092959891949750929550565b7f4552433732314272696467653a206163636f756e74206973206e6f742065787460008201527f65726e616c6c79206f776e656400000000000000000000000000000000000000602082015250565b60006112b8602d83610f9b565b91506112c38261125c565b604082019050919050565b600060208201905081810360008301526112e7816112ab565b9050919050565b600081905092915050565b600061130482610f90565b61130e81856112ee565b935061131e818560208601610fac565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b60006113606001836112ee565b915061136b8261132a565b600182019050919050565b600061138282866112f9565b915061138d82611353565b915061139982856112f9565b91506113a482611353565b91506113b082846112f9565b9150819050949350505050565b6000815190506113cc81610d79565b92915050565b6000602082840312156113e8576113e7610d3d565b5b60006113f6848285016113bd565b91505092915050565b7f4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792060008201527f62652063616c6c65642066726f6d20746865206f746865722062726964676500602082015250565b600061145b603f83610f9b565b9150611466826113ff565b604082019050919050565b6000602082019050818103600083015261148a8161144e565b9050919050565b7f4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e60008201527f6f742062652073656c6600000000000000000000000000000000000000000000602082015250565b60006114ed602a83610f9b565b91506114f882611491565b604082019050919050565b6000602082019050818103600083015261151c816114e0565b9050919050565b7f4c314552433732314272696467653a20546f6b656e204944206973206e6f742060008201527f657363726f77656420696e20746865204c312042726964676500000000000000602082015250565b600061157f603983610f9b565b915061158a82611523565b604082019050919050565b600060208201905081810360008301526115ae81611572565b9050919050565b6115be81610da5565b82525050565b60006060820190506115d96000830186611183565b6115e66020830185611183565b6115f360408301846115b5565b949350505050565b600082825260208201905092915050565b82818337600083830152505050565b600061162783856115fb565b935061163483858461160c565b61163d83610fdf565b840190509392505050565b600060608201905061165d6000830187611183565b61166a60208301866115b5565b818103604083015261167d81848661161b565b905095945050505050565b7f4552433732314272696467653a206e667420726563697069656e742063616e6e60008201527f6f74206265206164647265737328302900000000000000000000000000000000602082015250565b60006116e4603083610f9b565b91506116ef82611688565b604082019050919050565b60006020820190508181036000830152611713816116d7565b9050919050565b7f4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e60008201527f6e6f742062652061646472657373283029000000000000000000000000000000602082015250565b6000611776603183610f9b565b91506117818261171a565b604082019050919050565b600060208201905081810360008301526117a581611769565b9050919050565b600060c0820190506117c1600083018a611183565b6117ce6020830189611183565b6117db6040830188611183565b6117e86060830187611183565b6117f560808301866115b5565b81810360a083015261180881848661161b565b905098975050505050505050565b600081519050919050565b600061182c82611816565b61183681856115fb565b9350611846818560208601610fac565b61184f81610fdf565b840191505092915050565b61186381610ddb565b82525050565b600060608201905061187e6000830186611183565b81810360208301526118908185611821565b905061189f604083018461185a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118e182610da5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611913576119126118a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195882610da5565b915061196383610da5565b9250826119735761197261191e565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006119b882610da5565b91506119c383610da5565b9250828210156119d6576119d56118a7565b5b828203905092915050565b60006119ec82610da5565b91506119f783610da5565b925082611a0757611a0661191e565b5b828206905092915050565b6000611a1d82610da5565b9150611a2883610da5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5d57611a5c6118a7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122018cc0ac27b81ba758e30d7a9f9d18d9016a09fb5304cbc07f0f54942351cbaf564736f6c634300080f0033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EE6 CODESIZE SUB DUP1 PUSH3 0x1EE6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x21B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP1 PUSH3 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11A SWAP1 PUSH3 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP DUP3 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E3 DUP3 PUSH3 0x1B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F5 DUP2 PUSH3 0x1D6 JUMP JUMPDEST DUP2 EQ PUSH3 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x215 DUP2 PUSH3 0x1EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x1B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x245 DUP6 DUP3 DUP7 ADD PUSH3 0x204 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x258 DUP6 DUP3 DUP7 ADD PUSH3 0x204 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206D657373656E6765722063616E6E6F742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6520616464726573732830290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D1 PUSH1 0x2C DUP4 PUSH3 0x262 JUMP JUMPDEST SWAP2 POP PUSH3 0x2DE DUP3 PUSH3 0x273 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x304 DUP2 PUSH3 0x2C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206F74686572206272696467652063616E6E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420626520616464726573732830290000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x369 PUSH1 0x2F DUP4 PUSH3 0x262 JUMP JUMPDEST SWAP2 POP PUSH3 0x376 DUP3 PUSH3 0x30B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x39C DUP2 PUSH3 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x1ACD PUSH3 0x419 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x294 ADD MSTORE PUSH1 0x0 PUSH2 0x26B ADD MSTORE PUSH1 0x0 PUSH2 0x242 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x372 ADD MSTORE DUP2 DUP2 PUSH2 0x77E ADD MSTORE DUP2 DUP2 PUSH2 0x850 ADD MSTORE PUSH2 0xADF ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x217 ADD MSTORE DUP2 DUP2 PUSH2 0x31C ADD MSTORE DUP2 DUP2 PUSH2 0x3A9 ADD MSTORE DUP2 DUP2 PUSH2 0x7A2 ADD MSTORE PUSH2 0xAA3 ADD MSTORE PUSH2 0x1ACD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761F4493 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x761F4493 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x7F46DDB2 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x927EDE2D EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xAA557452 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC89701A2 EQ PUSH2 0x194 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x3687011A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5D93A3FC EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB CALLER PUSH2 0x874 JUMP JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20B DUP7 DUP7 CALLER CALLER DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x266 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x28F PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x31 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x44E JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x484 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F39BF6707B5D608453E0AE4C067B562BCC4C85C0F562EF5D2C774D2E7F131AC DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x843 DUP8 DUP8 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x761F4493 PUSH1 0xE0 SHL DUP9 DUP11 DUP10 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x92D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x31 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP9 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH32 0x0 DUP4 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7460E2A880F256EBEF3406116FF3EEE0CEE51EBCCDC2A40698F87EBB2E9C1A5 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xBCA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xC56 JUMPI DUP1 DUP1 PUSH2 0xC3F SWAP1 PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x197E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD31 JUMPI PUSH1 0x1 DUP3 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x19AD JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xCCC SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0x1A68 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP5 POP PUSH2 0xCA8 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9F DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD5 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP2 EQ PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE11 DUP2 PUSH2 0xDEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0xE17 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0xE1C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE75 JUMPI PUSH2 0xE74 PUSH2 0xE21 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP10 DUP3 DUP11 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xEDA DUP10 DUP3 DUP11 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0xF07 DUP10 DUP3 DUP11 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3B PUSH2 0xF36 PUSH2 0xF31 DUP5 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4D DUP3 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xF54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFAF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x1005 DUP2 DUP6 PUSH2 0xF9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1015 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1064 JUMPI PUSH2 0x1063 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1072 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1083 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1094 DUP7 DUP3 DUP8 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0x109E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1101 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1112 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1123 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1134 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1145 DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x1172 DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x118C DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1183 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11DA DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x11EB DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x11FC DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x120D DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x121E DUP11 DUP3 DUP12 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x124B DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206163636F756E74206973206E6F7420657874 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726E616C6C79206F776E656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B8 PUSH1 0x2D DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x12C3 DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E7 DUP2 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x130E DUP2 DUP6 PUSH2 0x12EE JUMP JUMPDEST SWAP4 POP PUSH2 0x131E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH1 0x1 DUP4 PUSH2 0x12EE JUMP JUMPDEST SWAP2 POP PUSH2 0x136B DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 DUP3 DUP7 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1399 DUP3 DUP6 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A4 DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x13B0 DUP3 DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CC DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E7 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F6 DUP5 DUP3 DUP6 ADD PUSH2 0x13BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A2066756E6374696F6E2063616E206F6E6C7920 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62652063616C6C65642066726F6D20746865206F746865722062726964676500 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B PUSH1 0x3F DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1466 DUP3 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148A DUP2 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A206C6F63616C20746F6B656E2063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F742062652073656C6600000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14ED PUSH1 0x2A DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x14F8 DUP3 PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151C DUP2 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A20546F6B656E204944206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657363726F77656420696E20746865204C312042726964676500000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157F PUSH1 0x39 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x158A DUP3 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AE DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 DUP4 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1634 DUP4 DUP6 DUP5 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x163D DUP4 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x165D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x166A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x167D DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206E667420726563697069656E742063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206265206164647265737328302900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E4 PUSH1 0x30 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1713 DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A2072656D6F746520746F6B656E2063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652061646472657373283029000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1776 PUSH1 0x31 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1781 DUP3 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A5 DUP2 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1808 DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x187E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1890 DUP2 DUP6 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP PUSH2 0x189F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1963 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1973 JUMPI PUSH2 0x1972 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19B8 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x19D6 JUMPI PUSH2 0x19D5 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A07 JUMPI PUSH2 0x1A06 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A5D JUMPI PUSH2 0x1A5C PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xCC EXP 0xC2 PUSH28 0x81BA758E30D7A9F9D18D9016A09FB5304CBC07F0F54942351CBAF564 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"595:3650:0:-:0;;;1116:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1185:1;1188;1191;1215:10;1227:12;2745:1:9;2723:24;;:10;:24;;;2715:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2838:1;2814:26;;:12;:26;;;2806:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2936:10;2903:44;;;;;;;;;;2972:12;2957:27;;;;;;;;;;2651:340;;842:6:11;826:22;;;;;;874:6;858:22;;;;;;906:6;890:22;;;;;;726:193;;;1116:131:0;;595:3650;;88:117:21;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:231::-;1673:34;1669:1;1661:6;1657:14;1650:58;1742:14;1737:2;1729:6;1725:15;1718:39;1533:231;:::o;1770:366::-;1912:3;1933:67;1997:2;1992:3;1933:67;:::i;:::-;1926:74;;2009:93;2098:3;2009:93;:::i;:::-;2127:2;2122:3;2118:12;2111:19;;1770:366;;;:::o;2142:419::-;2308:4;2346:2;2335:9;2331:18;2323:26;;2395:9;2389:4;2385:20;2381:1;2370:9;2366:17;2359:47;2423:131;2549:4;2423:131;:::i;:::-;2415:139;;2142:419;;;:::o;2567:234::-;2707:34;2703:1;2695:6;2691:14;2684:58;2776:17;2771:2;2763:6;2759:15;2752:42;2567:234;:::o;2807:366::-;2949:3;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3046:93;3135:3;3046:93;:::i;:::-;3164:2;3159:3;3155:12;3148:19;;2807:366;;;:::o;3179:419::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3432:9;3426:4;3422:20;3418:1;3407:9;3403:17;3396:47;3460:131;3586:4;3460:131;:::i;:::-;3452:139;;3179:419;;;:::o;595:3650:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MESSENGER_2055":{"entryPoint":1952,"id":2055,"parameterSlots":0,"returnSlots":0},"@OTHER_BRIDGE_2058":{"entryPoint":1916,"id":2058,"parameterSlots":0,"returnSlots":0},"@_initiateBridgeERC721_198":{"entryPoint":2199,"id":198,"parameterSlots":8,"returnSlots":0},"@bridgeERC721To_2248":{"entryPoint":1988,"id":2248,"parameterSlots":7,"returnSlots":0},"@bridgeERC721_2210":{"entryPoint":434,"id":2210,"parameterSlots":6,"returnSlots":0},"@deposits_23":{"entryPoint":734,"id":23,"parameterSlots":0,"returnSlots":0},"@finalizeBridgeERC721_114":{"entryPoint":794,"id":114,"parameterSlots":7,"returnSlots":0},"@isContract_2966":{"entryPoint":2164,"id":2966,"parameterSlots":1,"returnSlots":1},"@messenger_2164":{"entryPoint":531,"id":2164,"parameterSlots":0,"returnSlots":1},"@otherBridge_2173":{"entryPoint":2124,"id":2173,"parameterSlots":0,"returnSlots":1},"@toString_3331":{"entryPoint":3037,"id":3331,"parameterSlots":1,"returnSlots":1},"@version_2406":{"entryPoint":571,"id":2406,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3622,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":3526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":3586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":4308,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr":{"entryPoint":4525,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4171,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr":{"entryPoint":3708,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4483,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4266,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5659,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack":{"entryPoint":3942,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack":{"entryPoint":5993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack":{"entryPoint":5344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack":{"entryPoint":4779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack":{"entryPoint":5490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack":{"entryPoint":5847,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack":{"entryPoint":5198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5557,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":6234,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4982,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6060,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":5572,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed":{"entryPoint":6249,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5704,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed":{"entryPoint":3957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4814,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5882,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5233,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6166,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3984,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5627,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3995,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4846,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6674,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6477,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6573,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3431,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4254,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":3547,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address":{"entryPoint":3924,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3906,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3872,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":5644,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4012,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":3862,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6358,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":6625,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6311,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6430,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6760,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6526,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3612,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3607,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3617,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3394,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3389,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4063,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1":{"entryPoint":5914,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832":{"entryPoint":5265,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581":{"entryPoint":4700,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af":{"entryPoint":5411,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186":{"entryPoint":5768,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d":{"entryPoint":5119,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3449,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3503,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":3563,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24564:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"748:87:21","statements":[{"nodeType":"YulAssignment","src":"758:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:21"},"nodeType":"YulFunctionCall","src":"767:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:21"},"nodeType":"YulFunctionCall","src":"796:33:21"},"nodeType":"YulExpressionStatement","src":"796:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:21","type":""}],"src":"696:139:21"},{"body":{"nodeType":"YulBlock","src":"886:32:21","statements":[{"nodeType":"YulAssignment","src":"896:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:21","type":""}],"src":"841:77:21"},{"body":{"nodeType":"YulBlock","src":"967:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:21"},"nodeType":"YulFunctionCall","src":"1026:12:21"},"nodeType":"YulExpressionStatement","src":"1026:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:21"},"nodeType":"YulFunctionCall","src":"997:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:21"},"nodeType":"YulFunctionCall","src":"987:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:21"},"nodeType":"YulFunctionCall","src":"980:43:21"},"nodeType":"YulIf","src":"977:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:21","type":""}],"src":"924:122:21"},{"body":{"nodeType":"YulBlock","src":"1104:87:21","statements":[{"nodeType":"YulAssignment","src":"1114:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:21"},"nodeType":"YulFunctionCall","src":"1123:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:21"},"nodeType":"YulFunctionCall","src":"1152:33:21"},"nodeType":"YulExpressionStatement","src":"1152:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:21","type":""}],"src":"1052:139:21"},{"body":{"nodeType":"YulBlock","src":"1241:49:21","statements":[{"nodeType":"YulAssignment","src":"1251:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1266:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1273:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1262:3:21"},"nodeType":"YulFunctionCall","src":"1262:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1251:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1223:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1233:7:21","type":""}],"src":"1197:93:21"},{"body":{"nodeType":"YulBlock","src":"1338:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"1394:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1403:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1406:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1396:6:21"},"nodeType":"YulFunctionCall","src":"1396:12:21"},"nodeType":"YulExpressionStatement","src":"1396:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1361:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1385:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1368:16:21"},"nodeType":"YulFunctionCall","src":"1368:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1358:2:21"},"nodeType":"YulFunctionCall","src":"1358:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1351:6:21"},"nodeType":"YulFunctionCall","src":"1351:42:21"},"nodeType":"YulIf","src":"1348:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1331:5:21","type":""}],"src":"1296:120:21"},{"body":{"nodeType":"YulBlock","src":"1473:86:21","statements":[{"nodeType":"YulAssignment","src":"1483:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1505:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1492:12:21"},"nodeType":"YulFunctionCall","src":"1492:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1483:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1521:25:21"},"nodeType":"YulFunctionCall","src":"1521:32:21"},"nodeType":"YulExpressionStatement","src":"1521:32:21"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1451:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1459:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1467:5:21","type":""}],"src":"1422:137:21"},{"body":{"nodeType":"YulBlock","src":"1654:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1671:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1674:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1664:6:21"},"nodeType":"YulFunctionCall","src":"1664:12:21"},"nodeType":"YulExpressionStatement","src":"1664:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1565:117:21"},{"body":{"nodeType":"YulBlock","src":"1777:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1797:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1787:6:21"},"nodeType":"YulFunctionCall","src":"1787:12:21"},"nodeType":"YulExpressionStatement","src":"1787:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1688:117:21"},{"body":{"nodeType":"YulBlock","src":"1900:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1917:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1920:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1910:6:21"},"nodeType":"YulFunctionCall","src":"1910:12:21"},"nodeType":"YulExpressionStatement","src":"1910:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1811:117:21"},{"body":{"nodeType":"YulBlock","src":"2021:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"2070:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2072:77:21"},"nodeType":"YulFunctionCall","src":"2072:79:21"},"nodeType":"YulExpressionStatement","src":"2072:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2057:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2045:3:21"},"nodeType":"YulFunctionCall","src":"2045:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2064:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2041:3:21"},"nodeType":"YulFunctionCall","src":"2041:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2034:6:21"},"nodeType":"YulFunctionCall","src":"2034:35:21"},"nodeType":"YulIf","src":"2031:122:21"},{"nodeType":"YulAssignment","src":"2162:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2185:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2172:12:21"},"nodeType":"YulFunctionCall","src":"2172:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2162:6:21"}]},{"body":{"nodeType":"YulBlock","src":"2235:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2237:77:21"},"nodeType":"YulFunctionCall","src":"2237:79:21"},"nodeType":"YulExpressionStatement","src":"2237:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2207:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2215:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2204:2:21"},"nodeType":"YulFunctionCall","src":"2204:30:21"},"nodeType":"YulIf","src":"2201:117:21"},{"nodeType":"YulAssignment","src":"2327:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2343:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2351:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2339:3:21"},"nodeType":"YulFunctionCall","src":"2339:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2327:8:21"}]},{"body":{"nodeType":"YulBlock","src":"2410:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2412:77:21"},"nodeType":"YulFunctionCall","src":"2412:79:21"},"nodeType":"YulExpressionStatement","src":"2412:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2375:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2389:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2397:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2385:3:21"},"nodeType":"YulFunctionCall","src":"2385:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2371:3:21"},"nodeType":"YulFunctionCall","src":"2371:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"2405:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2368:2:21"},"nodeType":"YulFunctionCall","src":"2368:41:21"},"nodeType":"YulIf","src":"2365:128:21"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1988:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1996:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2004:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2014:6:21","type":""}],"src":"1947:552:21"},{"body":{"nodeType":"YulBlock","src":"2657:955:21","statements":[{"body":{"nodeType":"YulBlock","src":"2704:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2706:77:21"},"nodeType":"YulFunctionCall","src":"2706:79:21"},"nodeType":"YulExpressionStatement","src":"2706:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2678:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2674:3:21"},"nodeType":"YulFunctionCall","src":"2674:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2699:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2670:3:21"},"nodeType":"YulFunctionCall","src":"2670:33:21"},"nodeType":"YulIf","src":"2667:120:21"},{"nodeType":"YulBlock","src":"2797:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2812:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2826:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2816:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2841:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2887:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:21"},"nodeType":"YulFunctionCall","src":"2872:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2896:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2851:20:21"},"nodeType":"YulFunctionCall","src":"2851:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2841:6:21"}]}]},{"nodeType":"YulBlock","src":"2924:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2939:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2953:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2943:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2969:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3015:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:21"},"nodeType":"YulFunctionCall","src":"3000:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3024:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2979:20:21"},"nodeType":"YulFunctionCall","src":"2979:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2969:6:21"}]}]},{"nodeType":"YulBlock","src":"3052:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3067:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3081:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3071:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3097:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3132:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3143:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3128:3:21"},"nodeType":"YulFunctionCall","src":"3128:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3152:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3107:20:21"},"nodeType":"YulFunctionCall","src":"3107:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3097:6:21"}]}]},{"nodeType":"YulBlock","src":"3180:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3195:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3209:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3199:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3225:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3259:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3270:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3255:3:21"},"nodeType":"YulFunctionCall","src":"3255:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3279:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3235:19:21"},"nodeType":"YulFunctionCall","src":"3235:52:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3225:6:21"}]}]},{"nodeType":"YulBlock","src":"3307:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3322:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3353:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3364:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3349:3:21"},"nodeType":"YulFunctionCall","src":"3349:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3336:12:21"},"nodeType":"YulFunctionCall","src":"3336:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3326:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3416:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3418:77:21"},"nodeType":"YulFunctionCall","src":"3418:79:21"},"nodeType":"YulExpressionStatement","src":"3418:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3388:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3396:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3385:2:21"},"nodeType":"YulFunctionCall","src":"3385:30:21"},"nodeType":"YulIf","src":"3382:117:21"},{"nodeType":"YulAssignment","src":"3513:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3567:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3578:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:21"},"nodeType":"YulFunctionCall","src":"3563:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3587:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3531:31:21"},"nodeType":"YulFunctionCall","src":"3531:64:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3513:6:21"},{"name":"value5","nodeType":"YulIdentifier","src":"3521:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2587:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2598:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2610:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2618:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2626:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2634:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2642:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2650:6:21","type":""}],"src":"2505:1107:21"},{"body":{"nodeType":"YulBlock","src":"3650:28:21","statements":[{"nodeType":"YulAssignment","src":"3660:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3667:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3660:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3636:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3646:3:21","type":""}],"src":"3618:60:21"},{"body":{"nodeType":"YulBlock","src":"3744:82:21","statements":[{"nodeType":"YulAssignment","src":"3754:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3812:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3794:17:21"},"nodeType":"YulFunctionCall","src":"3794:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3785:8:21"},"nodeType":"YulFunctionCall","src":"3785:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3767:17:21"},"nodeType":"YulFunctionCall","src":"3767:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3754:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3734:9:21","type":""}],"src":"3684:142:21"},{"body":{"nodeType":"YulBlock","src":"3892:66:21","statements":[{"nodeType":"YulAssignment","src":"3902:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3946:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3915:30:21"},"nodeType":"YulFunctionCall","src":"3915:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3902:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3872:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3882:9:21","type":""}],"src":"3832:126:21"},{"body":{"nodeType":"YulBlock","src":"4053:66:21","statements":[{"nodeType":"YulAssignment","src":"4063:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4107:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4076:30:21"},"nodeType":"YulFunctionCall","src":"4076:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4063:9:21"}]}]},"name":"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4033:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4043:9:21","type":""}],"src":"3964:155:21"},{"body":{"nodeType":"YulBlock","src":"4219:95:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4236:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4301:5:21"}],"functionName":{"name":"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address","nodeType":"YulIdentifier","src":"4241:59:21"},"nodeType":"YulFunctionCall","src":"4241:66:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4229:6:21"},"nodeType":"YulFunctionCall","src":"4229:79:21"},"nodeType":"YulExpressionStatement","src":"4229:79:21"}]},"name":"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4207:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4214:3:21","type":""}],"src":"4125:189:21"},{"body":{"nodeType":"YulBlock","src":"4447:153:21","statements":[{"nodeType":"YulAssignment","src":"4457:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4480:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:21"},"nodeType":"YulFunctionCall","src":"4465:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4457:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4566:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4579:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4575:3:21"},"nodeType":"YulFunctionCall","src":"4575:17:21"}],"functionName":{"name":"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4493:72:21"},"nodeType":"YulFunctionCall","src":"4493:100:21"},"nodeType":"YulExpressionStatement","src":"4493:100:21"}]},"name":"abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4419:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4431:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4442:4:21","type":""}],"src":"4320:280:21"},{"body":{"nodeType":"YulBlock","src":"4665:40:21","statements":[{"nodeType":"YulAssignment","src":"4676:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4692:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4686:5:21"},"nodeType":"YulFunctionCall","src":"4686:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4676:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4648:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4658:6:21","type":""}],"src":"4606:99:21"},{"body":{"nodeType":"YulBlock","src":"4807:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4824:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"4829:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4817:6:21"},"nodeType":"YulFunctionCall","src":"4817:19:21"},"nodeType":"YulExpressionStatement","src":"4817:19:21"},{"nodeType":"YulAssignment","src":"4845:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4864:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4869:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4860:3:21"},"nodeType":"YulFunctionCall","src":"4860:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4845:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4779:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"4784:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4795:11:21","type":""}],"src":"4711:169:21"},{"body":{"nodeType":"YulBlock","src":"4935:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4945:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4954:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4949:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5014:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5039:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5044:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:21"},"nodeType":"YulFunctionCall","src":"5035:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5058:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5063:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5054:3:21"},"nodeType":"YulFunctionCall","src":"5054:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5048:5:21"},"nodeType":"YulFunctionCall","src":"5048:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5028:6:21"},"nodeType":"YulFunctionCall","src":"5028:39:21"},"nodeType":"YulExpressionStatement","src":"5028:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4975:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"4978:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4972:2:21"},"nodeType":"YulFunctionCall","src":"4972:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4986:19:21","statements":[{"nodeType":"YulAssignment","src":"4988:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4997:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5000:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4993:3:21"},"nodeType":"YulFunctionCall","src":"4993:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4988:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4968:3:21","statements":[]},"src":"4964:113:21"},{"body":{"nodeType":"YulBlock","src":"5111:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5161:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5166:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:21"},"nodeType":"YulFunctionCall","src":"5157:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"5175:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5150:6:21"},"nodeType":"YulFunctionCall","src":"5150:27:21"},"nodeType":"YulExpressionStatement","src":"5150:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5092:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"5095:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5089:2:21"},"nodeType":"YulFunctionCall","src":"5089:13:21"},"nodeType":"YulIf","src":"5086:101:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4917:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4922:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"4927:6:21","type":""}],"src":"4886:307:21"},{"body":{"nodeType":"YulBlock","src":"5247:54:21","statements":[{"nodeType":"YulAssignment","src":"5257:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5275:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5282:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5271:3:21"},"nodeType":"YulFunctionCall","src":"5271:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5291:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5287:3:21"},"nodeType":"YulFunctionCall","src":"5287:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5267:3:21"},"nodeType":"YulFunctionCall","src":"5267:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5257:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5230:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5240:6:21","type":""}],"src":"5199:102:21"},{"body":{"nodeType":"YulBlock","src":"5399:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5409:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5456:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5423:32:21"},"nodeType":"YulFunctionCall","src":"5423:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5413:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5471:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5537:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5542:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5478:58:21"},"nodeType":"YulFunctionCall","src":"5478:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5471:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5584:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5591:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5580:3:21"},"nodeType":"YulFunctionCall","src":"5580:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5598:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5603:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5558:21:21"},"nodeType":"YulFunctionCall","src":"5558:52:21"},"nodeType":"YulExpressionStatement","src":"5558:52:21"},{"nodeType":"YulAssignment","src":"5619:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5630:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5657:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5635:21:21"},"nodeType":"YulFunctionCall","src":"5635:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5626:3:21"},"nodeType":"YulFunctionCall","src":"5626:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5619:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5380:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5387:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5395:3:21","type":""}],"src":"5307:364:21"},{"body":{"nodeType":"YulBlock","src":"5795:195:21","statements":[{"nodeType":"YulAssignment","src":"5805:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5817:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5828:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:21"},"nodeType":"YulFunctionCall","src":"5813:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5805:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5852:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5848:3:21"},"nodeType":"YulFunctionCall","src":"5848:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5871:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5877:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5867:3:21"},"nodeType":"YulFunctionCall","src":"5867:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5841:6:21"},"nodeType":"YulFunctionCall","src":"5841:47:21"},"nodeType":"YulExpressionStatement","src":"5841:47:21"},{"nodeType":"YulAssignment","src":"5897:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5969:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"5978:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5905:63:21"},"nodeType":"YulFunctionCall","src":"5905:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5897:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5767:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5779:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5790:4:21","type":""}],"src":"5677:313:21"},{"body":{"nodeType":"YulBlock","src":"6096:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"6142:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6144:77:21"},"nodeType":"YulFunctionCall","src":"6144:79:21"},"nodeType":"YulExpressionStatement","src":"6144:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6117:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6126:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6113:3:21"},"nodeType":"YulFunctionCall","src":"6113:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6138:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6109:3:21"},"nodeType":"YulFunctionCall","src":"6109:32:21"},"nodeType":"YulIf","src":"6106:119:21"},{"nodeType":"YulBlock","src":"6235:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6250:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6264:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6254:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6279:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6314:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6325:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:21"},"nodeType":"YulFunctionCall","src":"6310:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6334:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6289:20:21"},"nodeType":"YulFunctionCall","src":"6289:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6279:6:21"}]}]},{"nodeType":"YulBlock","src":"6362:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6377:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6391:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6381:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6407:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6442:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6438:3:21"},"nodeType":"YulFunctionCall","src":"6438:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6462:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6417:20:21"},"nodeType":"YulFunctionCall","src":"6417:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6407:6:21"}]}]},{"nodeType":"YulBlock","src":"6490:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6505:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6519:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6509:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6535:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6570:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6581:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6566:3:21"},"nodeType":"YulFunctionCall","src":"6566:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6590:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6545:20:21"},"nodeType":"YulFunctionCall","src":"6545:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6535:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6050:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6061:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6073:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6081:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6089:6:21","type":""}],"src":"5996:619:21"},{"body":{"nodeType":"YulBlock","src":"6663:48:21","statements":[{"nodeType":"YulAssignment","src":"6673:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6698:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6691:6:21"},"nodeType":"YulFunctionCall","src":"6691:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6684:6:21"},"nodeType":"YulFunctionCall","src":"6684:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6673:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6645:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6655:7:21","type":""}],"src":"6621:90:21"},{"body":{"nodeType":"YulBlock","src":"6776:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6813:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6798:14:21"},"nodeType":"YulFunctionCall","src":"6798:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6786:6:21"},"nodeType":"YulFunctionCall","src":"6786:34:21"},"nodeType":"YulExpressionStatement","src":"6786:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6764:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6771:3:21","type":""}],"src":"6717:109:21"},{"body":{"nodeType":"YulBlock","src":"6924:118:21","statements":[{"nodeType":"YulAssignment","src":"6934:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6957:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:21"},"nodeType":"YulFunctionCall","src":"6942:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6934:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7008:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7021:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7032:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7017:3:21"},"nodeType":"YulFunctionCall","src":"7017:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"6970:37:21"},"nodeType":"YulFunctionCall","src":"6970:65:21"},"nodeType":"YulExpressionStatement","src":"6970:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6896:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6908:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6919:4:21","type":""}],"src":"6832:210:21"},{"body":{"nodeType":"YulBlock","src":"7218:1085:21","statements":[{"body":{"nodeType":"YulBlock","src":"7265:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7267:77:21"},"nodeType":"YulFunctionCall","src":"7267:79:21"},"nodeType":"YulExpressionStatement","src":"7267:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7239:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7248:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7235:3:21"},"nodeType":"YulFunctionCall","src":"7235:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7260:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7231:3:21"},"nodeType":"YulFunctionCall","src":"7231:33:21"},"nodeType":"YulIf","src":"7228:120:21"},{"nodeType":"YulBlock","src":"7358:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7373:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7387:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7377:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7402:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7437:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7448:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7433:3:21"},"nodeType":"YulFunctionCall","src":"7433:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7457:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7412:20:21"},"nodeType":"YulFunctionCall","src":"7412:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7402:6:21"}]}]},{"nodeType":"YulBlock","src":"7485:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7500:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7514:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7504:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7530:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7576:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:21"},"nodeType":"YulFunctionCall","src":"7561:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7585:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7540:20:21"},"nodeType":"YulFunctionCall","src":"7540:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7530:6:21"}]}]},{"nodeType":"YulBlock","src":"7613:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7628:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7642:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7632:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7658:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7693:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7704:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7689:3:21"},"nodeType":"YulFunctionCall","src":"7689:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7713:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7668:20:21"},"nodeType":"YulFunctionCall","src":"7668:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7658:6:21"}]}]},{"nodeType":"YulBlock","src":"7741:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7756:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7770:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7760:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7786:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7821:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7832:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7817:3:21"},"nodeType":"YulFunctionCall","src":"7817:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7841:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7796:20:21"},"nodeType":"YulFunctionCall","src":"7796:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7786:6:21"}]}]},{"nodeType":"YulBlock","src":"7869:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7884:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7898:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7888:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7915:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7950:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7961:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7946:3:21"},"nodeType":"YulFunctionCall","src":"7946:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7970:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7925:20:21"},"nodeType":"YulFunctionCall","src":"7925:53:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7915:6:21"}]}]},{"nodeType":"YulBlock","src":"7998:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8013:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8044:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8055:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8040:3:21"},"nodeType":"YulFunctionCall","src":"8040:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8027:12:21"},"nodeType":"YulFunctionCall","src":"8027:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8017:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8107:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8109:77:21"},"nodeType":"YulFunctionCall","src":"8109:79:21"},"nodeType":"YulExpressionStatement","src":"8109:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8079:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8087:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8076:2:21"},"nodeType":"YulFunctionCall","src":"8076:30:21"},"nodeType":"YulIf","src":"8073:117:21"},{"nodeType":"YulAssignment","src":"8204:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8258:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8269:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8254:3:21"},"nodeType":"YulFunctionCall","src":"8254:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8278:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"8222:31:21"},"nodeType":"YulFunctionCall","src":"8222:64:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8204:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"8212:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7140:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7151:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7163:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7171:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7179:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7187:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7195:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7203:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7211:6:21","type":""}],"src":"7048:1255:21"},{"body":{"nodeType":"YulBlock","src":"8374:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8391:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8414:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8396:17:21"},"nodeType":"YulFunctionCall","src":"8396:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8384:6:21"},"nodeType":"YulFunctionCall","src":"8384:37:21"},"nodeType":"YulExpressionStatement","src":"8384:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8362:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8369:3:21","type":""}],"src":"8309:118:21"},{"body":{"nodeType":"YulBlock","src":"8531:124:21","statements":[{"nodeType":"YulAssignment","src":"8541:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8553:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8564:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8549:3:21"},"nodeType":"YulFunctionCall","src":"8549:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8541:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8621:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8634:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8645:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8630:3:21"},"nodeType":"YulFunctionCall","src":"8630:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8577:43:21"},"nodeType":"YulFunctionCall","src":"8577:71:21"},"nodeType":"YulExpressionStatement","src":"8577:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8503:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8515:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8526:4:21","type":""}],"src":"8433:222:21"},{"body":{"nodeType":"YulBlock","src":"8830:1084:21","statements":[{"body":{"nodeType":"YulBlock","src":"8877:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8879:77:21"},"nodeType":"YulFunctionCall","src":"8879:79:21"},"nodeType":"YulExpressionStatement","src":"8879:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8851:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8847:3:21"},"nodeType":"YulFunctionCall","src":"8847:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8872:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8843:3:21"},"nodeType":"YulFunctionCall","src":"8843:33:21"},"nodeType":"YulIf","src":"8840:120:21"},{"nodeType":"YulBlock","src":"8970:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8985:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8999:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8989:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9014:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9049:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9060:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9045:3:21"},"nodeType":"YulFunctionCall","src":"9045:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9069:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9024:20:21"},"nodeType":"YulFunctionCall","src":"9024:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9014:6:21"}]}]},{"nodeType":"YulBlock","src":"9097:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9112:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9126:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9116:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9142:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9177:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9188:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9173:3:21"},"nodeType":"YulFunctionCall","src":"9173:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9197:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9152:20:21"},"nodeType":"YulFunctionCall","src":"9152:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9142:6:21"}]}]},{"nodeType":"YulBlock","src":"9225:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9240:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9254:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9244:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9270:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9305:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9316:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:21"},"nodeType":"YulFunctionCall","src":"9301:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9325:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9280:20:21"},"nodeType":"YulFunctionCall","src":"9280:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9270:6:21"}]}]},{"nodeType":"YulBlock","src":"9353:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9368:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9382:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9372:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9398:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9433:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9444:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9429:3:21"},"nodeType":"YulFunctionCall","src":"9429:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9453:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9408:20:21"},"nodeType":"YulFunctionCall","src":"9408:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9398:6:21"}]}]},{"nodeType":"YulBlock","src":"9481:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9496:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9510:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9500:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9527:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9561:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9572:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9557:3:21"},"nodeType":"YulFunctionCall","src":"9557:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9581:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"9537:19:21"},"nodeType":"YulFunctionCall","src":"9537:52:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9527:6:21"}]}]},{"nodeType":"YulBlock","src":"9609:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9624:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9655:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9666:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9651:3:21"},"nodeType":"YulFunctionCall","src":"9651:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9638:12:21"},"nodeType":"YulFunctionCall","src":"9638:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9628:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9718:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9720:77:21"},"nodeType":"YulFunctionCall","src":"9720:79:21"},"nodeType":"YulExpressionStatement","src":"9720:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9690:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9698:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9687:2:21"},"nodeType":"YulFunctionCall","src":"9687:30:21"},"nodeType":"YulIf","src":"9684:117:21"},{"nodeType":"YulAssignment","src":"9815:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9880:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:21"},"nodeType":"YulFunctionCall","src":"9865:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9889:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"9833:31:21"},"nodeType":"YulFunctionCall","src":"9833:64:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9815:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"9823:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8752:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8763:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8775:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8783:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8791:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8799:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8807:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8815:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8823:6:21","type":""}],"src":"8661:1253:21"},{"body":{"nodeType":"YulBlock","src":"10026:126:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10048:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10056:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10044:3:21"},"nodeType":"YulFunctionCall","src":"10044:14:21"},{"hexValue":"4552433732314272696467653a206163636f756e74206973206e6f7420657874","kind":"string","nodeType":"YulLiteral","src":"10060:34:21","type":"","value":"ERC721Bridge: account is not ext"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10037:6:21"},"nodeType":"YulFunctionCall","src":"10037:58:21"},"nodeType":"YulExpressionStatement","src":"10037:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10116:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10124:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10112:3:21"},"nodeType":"YulFunctionCall","src":"10112:15:21"},{"hexValue":"65726e616c6c79206f776e6564","kind":"string","nodeType":"YulLiteral","src":"10129:15:21","type":"","value":"ernally owned"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10105:6:21"},"nodeType":"YulFunctionCall","src":"10105:40:21"},"nodeType":"YulExpressionStatement","src":"10105:40:21"}]},"name":"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10018:6:21","type":""}],"src":"9920:232:21"},{"body":{"nodeType":"YulBlock","src":"10304:220:21","statements":[{"nodeType":"YulAssignment","src":"10314:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10380:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10385:2:21","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10321:58:21"},"nodeType":"YulFunctionCall","src":"10321:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10314:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10486:3:21"}],"functionName":{"name":"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","nodeType":"YulIdentifier","src":"10397:88:21"},"nodeType":"YulFunctionCall","src":"10397:93:21"},"nodeType":"YulExpressionStatement","src":"10397:93:21"},{"nodeType":"YulAssignment","src":"10499:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10510:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10515:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:21"},"nodeType":"YulFunctionCall","src":"10506:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10499:3:21"}]}]},"name":"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10292:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10300:3:21","type":""}],"src":"10158:366:21"},{"body":{"nodeType":"YulBlock","src":"10701:248:21","statements":[{"nodeType":"YulAssignment","src":"10711:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10723:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10734:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10719:3:21"},"nodeType":"YulFunctionCall","src":"10719:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10711:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10758:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10769:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10754:3:21"},"nodeType":"YulFunctionCall","src":"10754:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10777:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10783:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10773:3:21"},"nodeType":"YulFunctionCall","src":"10773:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10747:6:21"},"nodeType":"YulFunctionCall","src":"10747:47:21"},"nodeType":"YulExpressionStatement","src":"10747:47:21"},{"nodeType":"YulAssignment","src":"10803:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10937:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10811:124:21"},"nodeType":"YulFunctionCall","src":"10811:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10803:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10681:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10696:4:21","type":""}],"src":"10530:419:21"},{"body":{"nodeType":"YulBlock","src":"11069:34:21","statements":[{"nodeType":"YulAssignment","src":"11079:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"11094:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11079:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11041:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"11046:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11057:11:21","type":""}],"src":"10955:148:21"},{"body":{"nodeType":"YulBlock","src":"11219:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11229:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11276:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11243:32:21"},"nodeType":"YulFunctionCall","src":"11243:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11233:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11291:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11375:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11380:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11298:76:21"},"nodeType":"YulFunctionCall","src":"11298:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11291:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11422:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11429:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:21"},"nodeType":"YulFunctionCall","src":"11418:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11436:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11441:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11396:21:21"},"nodeType":"YulFunctionCall","src":"11396:52:21"},"nodeType":"YulExpressionStatement","src":"11396:52:21"},{"nodeType":"YulAssignment","src":"11457:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11468:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11473:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11464:3:21"},"nodeType":"YulFunctionCall","src":"11464:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11457:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11200:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11207:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11215:3:21","type":""}],"src":"11109:377:21"},{"body":{"nodeType":"YulBlock","src":"11598:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11620:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11628:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11616:3:21"},"nodeType":"YulFunctionCall","src":"11616:14:21"},{"hexValue":"2e","kind":"string","nodeType":"YulLiteral","src":"11632:3:21","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11609:6:21"},"nodeType":"YulFunctionCall","src":"11609:27:21"},"nodeType":"YulExpressionStatement","src":"11609:27:21"}]},"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11590:6:21","type":""}],"src":"11492:151:21"},{"body":{"nodeType":"YulBlock","src":"11813:236:21","statements":[{"nodeType":"YulAssignment","src":"11823:91:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11907:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11912:1:21","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11830:76:21"},"nodeType":"YulFunctionCall","src":"11830:84:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11823:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12012:3:21"}],"functionName":{"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulIdentifier","src":"11923:88:21"},"nodeType":"YulFunctionCall","src":"11923:93:21"},"nodeType":"YulExpressionStatement","src":"11923:93:21"},{"nodeType":"YulAssignment","src":"12025:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12036:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12041:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12032:3:21"},"nodeType":"YulFunctionCall","src":"12032:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12025:3:21"}]}]},"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11801:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11809:3:21","type":""}],"src":"11649:400:21"},{"body":{"nodeType":"YulBlock","src":"12489:693:21","statements":[{"nodeType":"YulAssignment","src":"12500:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12589:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"12598:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12507:81:21"},"nodeType":"YulFunctionCall","src":"12507:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12500:3:21"}]},{"nodeType":"YulAssignment","src":"12612:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12763:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12619:142:21"},"nodeType":"YulFunctionCall","src":"12619:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12612:3:21"}]},{"nodeType":"YulAssignment","src":"12777:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12866:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"12875:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12784:81:21"},"nodeType":"YulFunctionCall","src":"12784:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12777:3:21"}]},{"nodeType":"YulAssignment","src":"12889:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13040:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12896:142:21"},"nodeType":"YulFunctionCall","src":"12896:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12889:3:21"}]},{"nodeType":"YulAssignment","src":"13054:102:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13143:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"13152:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13061:81:21"},"nodeType":"YulFunctionCall","src":"13061:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13054:3:21"}]},{"nodeType":"YulAssignment","src":"13166:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"13173:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13166:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12452:3:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12458:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12466:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12474:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12485:3:21","type":""}],"src":"12055:1127:21"},{"body":{"nodeType":"YulBlock","src":"13251:80:21","statements":[{"nodeType":"YulAssignment","src":"13261:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13276:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13270:5:21"},"nodeType":"YulFunctionCall","src":"13270:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13261:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13319:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"13292:26:21"},"nodeType":"YulFunctionCall","src":"13292:33:21"},"nodeType":"YulExpressionStatement","src":"13292:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13229:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"13237:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13245:5:21","type":""}],"src":"13188:143:21"},{"body":{"nodeType":"YulBlock","src":"13414:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"13460:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13462:77:21"},"nodeType":"YulFunctionCall","src":"13462:79:21"},"nodeType":"YulExpressionStatement","src":"13462:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13435:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13444:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13431:3:21"},"nodeType":"YulFunctionCall","src":"13431:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13456:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13427:3:21"},"nodeType":"YulFunctionCall","src":"13427:32:21"},"nodeType":"YulIf","src":"13424:119:21"},{"nodeType":"YulBlock","src":"13553:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13568:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13582:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13572:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13597:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13643:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13654:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13639:3:21"},"nodeType":"YulFunctionCall","src":"13639:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13663:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"13607:31:21"},"nodeType":"YulFunctionCall","src":"13607:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13597:6:21"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13384:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13395:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13407:6:21","type":""}],"src":"13337:351:21"},{"body":{"nodeType":"YulBlock","src":"13800:144:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13822:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13830:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13818:3:21"},"nodeType":"YulFunctionCall","src":"13818:14:21"},{"hexValue":"4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c7920","kind":"string","nodeType":"YulLiteral","src":"13834:34:21","type":"","value":"ERC721Bridge: function can only "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13811:6:21"},"nodeType":"YulFunctionCall","src":"13811:58:21"},"nodeType":"YulExpressionStatement","src":"13811:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13890:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13898:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13886:3:21"},"nodeType":"YulFunctionCall","src":"13886:15:21"},{"hexValue":"62652063616c6c65642066726f6d20746865206f7468657220627269646765","kind":"string","nodeType":"YulLiteral","src":"13903:33:21","type":"","value":"be called from the other bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13879:6:21"},"nodeType":"YulFunctionCall","src":"13879:58:21"},"nodeType":"YulExpressionStatement","src":"13879:58:21"}]},"name":"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13792:6:21","type":""}],"src":"13694:250:21"},{"body":{"nodeType":"YulBlock","src":"14096:220:21","statements":[{"nodeType":"YulAssignment","src":"14106:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14172:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14177:2:21","type":"","value":"63"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14113:58:21"},"nodeType":"YulFunctionCall","src":"14113:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14106:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14278:3:21"}],"functionName":{"name":"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","nodeType":"YulIdentifier","src":"14189:88:21"},"nodeType":"YulFunctionCall","src":"14189:93:21"},"nodeType":"YulExpressionStatement","src":"14189:93:21"},{"nodeType":"YulAssignment","src":"14291:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14302:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14307:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14298:3:21"},"nodeType":"YulFunctionCall","src":"14298:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14291:3:21"}]}]},"name":"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14084:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14092:3:21","type":""}],"src":"13950:366:21"},{"body":{"nodeType":"YulBlock","src":"14493:248:21","statements":[{"nodeType":"YulAssignment","src":"14503:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14515:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14526:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14511:3:21"},"nodeType":"YulFunctionCall","src":"14511:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14503:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14550:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14561:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14546:3:21"},"nodeType":"YulFunctionCall","src":"14546:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14569:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14575:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14565:3:21"},"nodeType":"YulFunctionCall","src":"14565:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14539:6:21"},"nodeType":"YulFunctionCall","src":"14539:47:21"},"nodeType":"YulExpressionStatement","src":"14539:47:21"},{"nodeType":"YulAssignment","src":"14595:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14729:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14603:124:21"},"nodeType":"YulFunctionCall","src":"14603:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14595:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14473:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14488:4:21","type":""}],"src":"14322:419:21"},{"body":{"nodeType":"YulBlock","src":"14853:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14883:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14871:3:21"},"nodeType":"YulFunctionCall","src":"14871:14:21"},{"hexValue":"4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e","kind":"string","nodeType":"YulLiteral","src":"14887:34:21","type":"","value":"L1ERC721Bridge: local token cann"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14864:6:21"},"nodeType":"YulFunctionCall","src":"14864:58:21"},"nodeType":"YulExpressionStatement","src":"14864:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14943:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14951:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14939:3:21"},"nodeType":"YulFunctionCall","src":"14939:15:21"},{"hexValue":"6f742062652073656c66","kind":"string","nodeType":"YulLiteral","src":"14956:12:21","type":"","value":"ot be self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14932:6:21"},"nodeType":"YulFunctionCall","src":"14932:37:21"},"nodeType":"YulExpressionStatement","src":"14932:37:21"}]},"name":"store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14845:6:21","type":""}],"src":"14747:229:21"},{"body":{"nodeType":"YulBlock","src":"15128:220:21","statements":[{"nodeType":"YulAssignment","src":"15138:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15204:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15209:2:21","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15145:58:21"},"nodeType":"YulFunctionCall","src":"15145:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15138:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15310:3:21"}],"functionName":{"name":"store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832","nodeType":"YulIdentifier","src":"15221:88:21"},"nodeType":"YulFunctionCall","src":"15221:93:21"},"nodeType":"YulExpressionStatement","src":"15221:93:21"},{"nodeType":"YulAssignment","src":"15323:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15334:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15339:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15330:3:21"},"nodeType":"YulFunctionCall","src":"15330:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15323:3:21"}]}]},"name":"abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15116:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15124:3:21","type":""}],"src":"14982:366:21"},{"body":{"nodeType":"YulBlock","src":"15525:248:21","statements":[{"nodeType":"YulAssignment","src":"15535:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15547:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15558:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15543:3:21"},"nodeType":"YulFunctionCall","src":"15543:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15535:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15582:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15593:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15578:3:21"},"nodeType":"YulFunctionCall","src":"15578:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15601:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15607:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15597:3:21"},"nodeType":"YulFunctionCall","src":"15597:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15571:6:21"},"nodeType":"YulFunctionCall","src":"15571:47:21"},"nodeType":"YulExpressionStatement","src":"15571:47:21"},{"nodeType":"YulAssignment","src":"15627:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15761:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15635:124:21"},"nodeType":"YulFunctionCall","src":"15635:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15627:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15505:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15520:4:21","type":""}],"src":"15354:419:21"},{"body":{"nodeType":"YulBlock","src":"15885:138:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15907:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15915:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15903:3:21"},"nodeType":"YulFunctionCall","src":"15903:14:21"},{"hexValue":"4c314552433732314272696467653a20546f6b656e204944206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"15919:34:21","type":"","value":"L1ERC721Bridge: Token ID is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15896:6:21"},"nodeType":"YulFunctionCall","src":"15896:58:21"},"nodeType":"YulExpressionStatement","src":"15896:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15975:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15983:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15971:3:21"},"nodeType":"YulFunctionCall","src":"15971:15:21"},{"hexValue":"657363726f77656420696e20746865204c3120427269646765","kind":"string","nodeType":"YulLiteral","src":"15988:27:21","type":"","value":"escrowed in the L1 Bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15964:6:21"},"nodeType":"YulFunctionCall","src":"15964:52:21"},"nodeType":"YulExpressionStatement","src":"15964:52:21"}]},"name":"store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15877:6:21","type":""}],"src":"15779:244:21"},{"body":{"nodeType":"YulBlock","src":"16175:220:21","statements":[{"nodeType":"YulAssignment","src":"16185:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16251:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16256:2:21","type":"","value":"57"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16192:58:21"},"nodeType":"YulFunctionCall","src":"16192:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16185:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16357:3:21"}],"functionName":{"name":"store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af","nodeType":"YulIdentifier","src":"16268:88:21"},"nodeType":"YulFunctionCall","src":"16268:93:21"},"nodeType":"YulExpressionStatement","src":"16268:93:21"},{"nodeType":"YulAssignment","src":"16370:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16381:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16386:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16377:3:21"},"nodeType":"YulFunctionCall","src":"16377:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16370:3:21"}]}]},"name":"abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16163:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16171:3:21","type":""}],"src":"16029:366:21"},{"body":{"nodeType":"YulBlock","src":"16572:248:21","statements":[{"nodeType":"YulAssignment","src":"16582:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16594:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16605:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16590:3:21"},"nodeType":"YulFunctionCall","src":"16590:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16582:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16629:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16640:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16625:3:21"},"nodeType":"YulFunctionCall","src":"16625:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16648:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16654:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16644:3:21"},"nodeType":"YulFunctionCall","src":"16644:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16618:6:21"},"nodeType":"YulFunctionCall","src":"16618:47:21"},"nodeType":"YulExpressionStatement","src":"16618:47:21"},{"nodeType":"YulAssignment","src":"16674:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16808:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16682:124:21"},"nodeType":"YulFunctionCall","src":"16682:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16674:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16552:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16567:4:21","type":""}],"src":"16401:419:21"},{"body":{"nodeType":"YulBlock","src":"16891:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16908:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16931:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16913:17:21"},"nodeType":"YulFunctionCall","src":"16913:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16901:6:21"},"nodeType":"YulFunctionCall","src":"16901:37:21"},"nodeType":"YulExpressionStatement","src":"16901:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16879:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16886:3:21","type":""}],"src":"16826:118:21"},{"body":{"nodeType":"YulBlock","src":"17104:288:21","statements":[{"nodeType":"YulAssignment","src":"17114:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17126:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17137:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17122:3:21"},"nodeType":"YulFunctionCall","src":"17122:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17114:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17194:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17207:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17218:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17203:3:21"},"nodeType":"YulFunctionCall","src":"17203:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17150:43:21"},"nodeType":"YulFunctionCall","src":"17150:71:21"},"nodeType":"YulExpressionStatement","src":"17150:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17275:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17288:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17299:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17284:3:21"},"nodeType":"YulFunctionCall","src":"17284:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17231:43:21"},"nodeType":"YulFunctionCall","src":"17231:72:21"},"nodeType":"YulExpressionStatement","src":"17231:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17357:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17381:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17366:3:21"},"nodeType":"YulFunctionCall","src":"17366:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17313:43:21"},"nodeType":"YulFunctionCall","src":"17313:72:21"},"nodeType":"YulExpressionStatement","src":"17313:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17060:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17072:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17080:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17088:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17099:4:21","type":""}],"src":"16950:442:21"},{"body":{"nodeType":"YulBlock","src":"17493:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17510:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17515:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17503:6:21"},"nodeType":"YulFunctionCall","src":"17503:19:21"},"nodeType":"YulExpressionStatement","src":"17503:19:21"},{"nodeType":"YulAssignment","src":"17531:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17550:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17555:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17546:3:21"},"nodeType":"YulFunctionCall","src":"17546:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17531:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17465:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17470:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17481:11:21","type":""}],"src":"17398:168:21"},{"body":{"nodeType":"YulBlock","src":"17623:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17646:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"17651:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17656:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17633:12:21"},"nodeType":"YulFunctionCall","src":"17633:30:21"},"nodeType":"YulExpressionStatement","src":"17633:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17704:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17709:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17700:3:21"},"nodeType":"YulFunctionCall","src":"17700:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"17718:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17693:6:21"},"nodeType":"YulFunctionCall","src":"17693:27:21"},"nodeType":"YulExpressionStatement","src":"17693:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17605:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17610:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17615:6:21","type":""}],"src":"17572:154:21"},{"body":{"nodeType":"YulBlock","src":"17854:201:21","statements":[{"nodeType":"YulAssignment","src":"17864:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17929:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17934:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17871:57:21"},"nodeType":"YulFunctionCall","src":"17871:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17864:3:21"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17975:5:21"},{"name":"pos","nodeType":"YulIdentifier","src":"17982:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17987:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"17951:23:21"},"nodeType":"YulFunctionCall","src":"17951:43:21"},"nodeType":"YulExpressionStatement","src":"17951:43:21"},{"nodeType":"YulAssignment","src":"18003:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18014:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18041:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18019:21:21"},"nodeType":"YulFunctionCall","src":"18019:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18010:3:21"},"nodeType":"YulFunctionCall","src":"18010:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18003:3:21"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17827:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17834:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17842:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17850:3:21","type":""}],"src":"17754:301:21"},{"body":{"nodeType":"YulBlock","src":"18243:367:21","statements":[{"nodeType":"YulAssignment","src":"18253:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18265:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18276:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18261:3:21"},"nodeType":"YulFunctionCall","src":"18261:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18253:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18333:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18346:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18357:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18342:3:21"},"nodeType":"YulFunctionCall","src":"18342:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18289:43:21"},"nodeType":"YulFunctionCall","src":"18289:71:21"},"nodeType":"YulExpressionStatement","src":"18289:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18414:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18438:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18423:3:21"},"nodeType":"YulFunctionCall","src":"18423:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18370:43:21"},"nodeType":"YulFunctionCall","src":"18370:72:21"},"nodeType":"YulExpressionStatement","src":"18370:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18463:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18474:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18459:3:21"},"nodeType":"YulFunctionCall","src":"18459:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18483:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18489:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18479:3:21"},"nodeType":"YulFunctionCall","src":"18479:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18452:6:21"},"nodeType":"YulFunctionCall","src":"18452:48:21"},"nodeType":"YulExpressionStatement","src":"18452:48:21"},{"nodeType":"YulAssignment","src":"18509:94:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18581:6:21"},{"name":"value3","nodeType":"YulIdentifier","src":"18589:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"18598:4:21"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18517:63:21"},"nodeType":"YulFunctionCall","src":"18517:86:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18509:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18191:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18203:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18211:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18219:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18227:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18238:4:21","type":""}],"src":"18061:549:21"},{"body":{"nodeType":"YulBlock","src":"18722:129:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18744:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18752:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18740:3:21"},"nodeType":"YulFunctionCall","src":"18740:14:21"},{"hexValue":"4552433732314272696467653a206e667420726563697069656e742063616e6e","kind":"string","nodeType":"YulLiteral","src":"18756:34:21","type":"","value":"ERC721Bridge: nft recipient cann"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18733:6:21"},"nodeType":"YulFunctionCall","src":"18733:58:21"},"nodeType":"YulExpressionStatement","src":"18733:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18812:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18820:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18808:3:21"},"nodeType":"YulFunctionCall","src":"18808:15:21"},{"hexValue":"6f742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"18825:18:21","type":"","value":"ot be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18801:6:21"},"nodeType":"YulFunctionCall","src":"18801:43:21"},"nodeType":"YulExpressionStatement","src":"18801:43:21"}]},"name":"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18714:6:21","type":""}],"src":"18616:235:21"},{"body":{"nodeType":"YulBlock","src":"19003:220:21","statements":[{"nodeType":"YulAssignment","src":"19013:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19079:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19084:2:21","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19020:58:21"},"nodeType":"YulFunctionCall","src":"19020:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19013:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19185:3:21"}],"functionName":{"name":"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","nodeType":"YulIdentifier","src":"19096:88:21"},"nodeType":"YulFunctionCall","src":"19096:93:21"},"nodeType":"YulExpressionStatement","src":"19096:93:21"},{"nodeType":"YulAssignment","src":"19198:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19209:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19214:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19205:3:21"},"nodeType":"YulFunctionCall","src":"19205:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19198:3:21"}]}]},"name":"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18991:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18999:3:21","type":""}],"src":"18857:366:21"},{"body":{"nodeType":"YulBlock","src":"19400:248:21","statements":[{"nodeType":"YulAssignment","src":"19410:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19422:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19433:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19418:3:21"},"nodeType":"YulFunctionCall","src":"19418:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19410:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19457:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19468:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19453:3:21"},"nodeType":"YulFunctionCall","src":"19453:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19476:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19482:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19472:3:21"},"nodeType":"YulFunctionCall","src":"19472:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19446:6:21"},"nodeType":"YulFunctionCall","src":"19446:47:21"},"nodeType":"YulExpressionStatement","src":"19446:47:21"},{"nodeType":"YulAssignment","src":"19502:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19636:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19510:124:21"},"nodeType":"YulFunctionCall","src":"19510:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19502:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19380:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19395:4:21","type":""}],"src":"19229:419:21"},{"body":{"nodeType":"YulBlock","src":"19760:130:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19782:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19790:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19778:3:21"},"nodeType":"YulFunctionCall","src":"19778:14:21"},{"hexValue":"4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e","kind":"string","nodeType":"YulLiteral","src":"19794:34:21","type":"","value":"L1ERC721Bridge: remote token can"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19771:6:21"},"nodeType":"YulFunctionCall","src":"19771:58:21"},"nodeType":"YulExpressionStatement","src":"19771:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19850:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19858:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19846:3:21"},"nodeType":"YulFunctionCall","src":"19846:15:21"},{"hexValue":"6e6f742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"19863:19:21","type":"","value":"not be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19839:6:21"},"nodeType":"YulFunctionCall","src":"19839:44:21"},"nodeType":"YulExpressionStatement","src":"19839:44:21"}]},"name":"store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19752:6:21","type":""}],"src":"19654:236:21"},{"body":{"nodeType":"YulBlock","src":"20042:220:21","statements":[{"nodeType":"YulAssignment","src":"20052:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20118:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20123:2:21","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20059:58:21"},"nodeType":"YulFunctionCall","src":"20059:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20052:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20224:3:21"}],"functionName":{"name":"store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1","nodeType":"YulIdentifier","src":"20135:88:21"},"nodeType":"YulFunctionCall","src":"20135:93:21"},"nodeType":"YulExpressionStatement","src":"20135:93:21"},{"nodeType":"YulAssignment","src":"20237:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20248:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20253:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20244:3:21"},"nodeType":"YulFunctionCall","src":"20244:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20237:3:21"}]}]},"name":"abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20030:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20038:3:21","type":""}],"src":"19896:366:21"},{"body":{"nodeType":"YulBlock","src":"20439:248:21","statements":[{"nodeType":"YulAssignment","src":"20449:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20461:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20472:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20457:3:21"},"nodeType":"YulFunctionCall","src":"20457:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20449:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20496:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20507:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20492:3:21"},"nodeType":"YulFunctionCall","src":"20492:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20515:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20521:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20511:3:21"},"nodeType":"YulFunctionCall","src":"20511:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20485:6:21"},"nodeType":"YulFunctionCall","src":"20485:47:21"},"nodeType":"YulExpressionStatement","src":"20485:47:21"},{"nodeType":"YulAssignment","src":"20541:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20675:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20549:124:21"},"nodeType":"YulFunctionCall","src":"20549:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20541:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20419:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20434:4:21","type":""}],"src":"20268:419:21"},{"body":{"nodeType":"YulBlock","src":"20959:616:21","statements":[{"nodeType":"YulAssignment","src":"20969:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20981:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20992:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20977:3:21"},"nodeType":"YulFunctionCall","src":"20977:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20969:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21050:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21063:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21074:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21059:3:21"},"nodeType":"YulFunctionCall","src":"21059:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21006:43:21"},"nodeType":"YulFunctionCall","src":"21006:71:21"},"nodeType":"YulExpressionStatement","src":"21006:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21131:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21144:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21155:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21140:3:21"},"nodeType":"YulFunctionCall","src":"21140:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21087:43:21"},"nodeType":"YulFunctionCall","src":"21087:72:21"},"nodeType":"YulExpressionStatement","src":"21087:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21213:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21226:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21237:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21222:3:21"},"nodeType":"YulFunctionCall","src":"21222:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21169:43:21"},"nodeType":"YulFunctionCall","src":"21169:72:21"},"nodeType":"YulExpressionStatement","src":"21169:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21295:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21308:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21319:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21304:3:21"},"nodeType":"YulFunctionCall","src":"21304:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21251:43:21"},"nodeType":"YulFunctionCall","src":"21251:72:21"},"nodeType":"YulExpressionStatement","src":"21251:72:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21377:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21390:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21401:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21386:3:21"},"nodeType":"YulFunctionCall","src":"21386:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21333:43:21"},"nodeType":"YulFunctionCall","src":"21333:73:21"},"nodeType":"YulExpressionStatement","src":"21333:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21438:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21423:3:21"},"nodeType":"YulFunctionCall","src":"21423:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21448:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21454:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21444:3:21"},"nodeType":"YulFunctionCall","src":"21444:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21416:6:21"},"nodeType":"YulFunctionCall","src":"21416:49:21"},"nodeType":"YulExpressionStatement","src":"21416:49:21"},{"nodeType":"YulAssignment","src":"21474:94:21","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"21546:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"21554:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"21563:4:21"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21482:63:21"},"nodeType":"YulFunctionCall","src":"21482:86:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21474:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20883:9:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"20895:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20903:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20911:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20919:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20927:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20935:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20943:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20954:4:21","type":""}],"src":"20693:882:21"},{"body":{"nodeType":"YulBlock","src":"21639:40:21","statements":[{"nodeType":"YulAssignment","src":"21650:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21666:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21660:5:21"},"nodeType":"YulFunctionCall","src":"21660:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21650:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21622:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21632:6:21","type":""}],"src":"21581:98:21"},{"body":{"nodeType":"YulBlock","src":"21775:270:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21785:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21831:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21799:31:21"},"nodeType":"YulFunctionCall","src":"21799:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21789:6:21","type":""}]},{"nodeType":"YulAssignment","src":"21846:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21911:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"21916:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21853:57:21"},"nodeType":"YulFunctionCall","src":"21853:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21846:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21958:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21965:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21954:3:21"},"nodeType":"YulFunctionCall","src":"21954:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"21972:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"21977:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21932:21:21"},"nodeType":"YulFunctionCall","src":"21932:52:21"},"nodeType":"YulExpressionStatement","src":"21932:52:21"},{"nodeType":"YulAssignment","src":"21993:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22004:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22031:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22009:21:21"},"nodeType":"YulFunctionCall","src":"22009:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22000:3:21"},"nodeType":"YulFunctionCall","src":"22000:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21993:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21756:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21763:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21771:3:21","type":""}],"src":"21685:360:21"},{"body":{"nodeType":"YulBlock","src":"22114:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22131:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22153:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"22136:16:21"},"nodeType":"YulFunctionCall","src":"22136:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22124:6:21"},"nodeType":"YulFunctionCall","src":"22124:36:21"},"nodeType":"YulExpressionStatement","src":"22124:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22102:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22109:3:21","type":""}],"src":"22051:115:21"},{"body":{"nodeType":"YulBlock","src":"22342:355:21","statements":[{"nodeType":"YulAssignment","src":"22352:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22375:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22360:3:21"},"nodeType":"YulFunctionCall","src":"22360:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22352:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22432:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22445:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22456:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22441:3:21"},"nodeType":"YulFunctionCall","src":"22441:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22388:43:21"},"nodeType":"YulFunctionCall","src":"22388:71:21"},"nodeType":"YulExpressionStatement","src":"22388:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22480:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22491:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22476:3:21"},"nodeType":"YulFunctionCall","src":"22476:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22500:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22506:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22496:3:21"},"nodeType":"YulFunctionCall","src":"22496:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22469:6:21"},"nodeType":"YulFunctionCall","src":"22469:48:21"},"nodeType":"YulExpressionStatement","src":"22469:48:21"},{"nodeType":"YulAssignment","src":"22526:84:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22596:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"22605:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22534:61:21"},"nodeType":"YulFunctionCall","src":"22534:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22526:4:21"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22662:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22675:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22686:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22671:3:21"},"nodeType":"YulFunctionCall","src":"22671:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"22620:41:21"},"nodeType":"YulFunctionCall","src":"22620:70:21"},"nodeType":"YulExpressionStatement","src":"22620:70:21"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22298:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22310:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22318:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22326:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22337:4:21","type":""}],"src":"22172:525:21"},{"body":{"nodeType":"YulBlock","src":"22731:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22748:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22751:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22741:6:21"},"nodeType":"YulFunctionCall","src":"22741:88:21"},"nodeType":"YulExpressionStatement","src":"22741:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22845:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22848:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22838:6:21"},"nodeType":"YulFunctionCall","src":"22838:15:21"},"nodeType":"YulExpressionStatement","src":"22838:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22869:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22872:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22862:6:21"},"nodeType":"YulFunctionCall","src":"22862:15:21"},"nodeType":"YulExpressionStatement","src":"22862:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22703:180:21"},{"body":{"nodeType":"YulBlock","src":"22932:190:21","statements":[{"nodeType":"YulAssignment","src":"22942:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22969:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22951:17:21"},"nodeType":"YulFunctionCall","src":"22951:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22942:5:21"}]},{"body":{"nodeType":"YulBlock","src":"23065:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23067:16:21"},"nodeType":"YulFunctionCall","src":"23067:18:21"},"nodeType":"YulExpressionStatement","src":"23067:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22990:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22997:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22987:2:21"},"nodeType":"YulFunctionCall","src":"22987:77:21"},"nodeType":"YulIf","src":"22984:103:21"},{"nodeType":"YulAssignment","src":"23096:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23107:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"23114:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23103:3:21"},"nodeType":"YulFunctionCall","src":"23103:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23096:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22918:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22928:3:21","type":""}],"src":"22889:233:21"},{"body":{"nodeType":"YulBlock","src":"23156:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23173:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23176:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23166:6:21"},"nodeType":"YulFunctionCall","src":"23166:88:21"},"nodeType":"YulExpressionStatement","src":"23166:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23270:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23273:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23263:6:21"},"nodeType":"YulFunctionCall","src":"23263:15:21"},"nodeType":"YulExpressionStatement","src":"23263:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23294:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23297:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23287:6:21"},"nodeType":"YulFunctionCall","src":"23287:15:21"},"nodeType":"YulExpressionStatement","src":"23287:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"23128:180:21"},{"body":{"nodeType":"YulBlock","src":"23356:143:21","statements":[{"nodeType":"YulAssignment","src":"23366:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23389:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23371:17:21"},"nodeType":"YulFunctionCall","src":"23371:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23366:1:21"}]},{"nodeType":"YulAssignment","src":"23400:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23423:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23405:17:21"},"nodeType":"YulFunctionCall","src":"23405:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23400:1:21"}]},{"body":{"nodeType":"YulBlock","src":"23447:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"23449:16:21"},"nodeType":"YulFunctionCall","src":"23449:18:21"},"nodeType":"YulExpressionStatement","src":"23449:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23444:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23437:6:21"},"nodeType":"YulFunctionCall","src":"23437:9:21"},"nodeType":"YulIf","src":"23434:35:21"},{"nodeType":"YulAssignment","src":"23479:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23488:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23491:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23484:3:21"},"nodeType":"YulFunctionCall","src":"23484:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"23479:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23345:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23348:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"23354:1:21","type":""}],"src":"23314:185:21"},{"body":{"nodeType":"YulBlock","src":"23533:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23550:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23553:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23543:6:21"},"nodeType":"YulFunctionCall","src":"23543:88:21"},"nodeType":"YulExpressionStatement","src":"23543:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23647:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23650:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23640:6:21"},"nodeType":"YulFunctionCall","src":"23640:15:21"},"nodeType":"YulExpressionStatement","src":"23640:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23671:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23674:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23664:6:21"},"nodeType":"YulFunctionCall","src":"23664:15:21"},"nodeType":"YulExpressionStatement","src":"23664:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"23505:180:21"},{"body":{"nodeType":"YulBlock","src":"23736:146:21","statements":[{"nodeType":"YulAssignment","src":"23746:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23769:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23751:17:21"},"nodeType":"YulFunctionCall","src":"23751:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23746:1:21"}]},{"nodeType":"YulAssignment","src":"23780:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23803:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23785:17:21"},"nodeType":"YulFunctionCall","src":"23785:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23780:1:21"}]},{"body":{"nodeType":"YulBlock","src":"23827:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23829:16:21"},"nodeType":"YulFunctionCall","src":"23829:18:21"},"nodeType":"YulExpressionStatement","src":"23829:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23821:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23824:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23818:2:21"},"nodeType":"YulFunctionCall","src":"23818:8:21"},"nodeType":"YulIf","src":"23815:34:21"},{"nodeType":"YulAssignment","src":"23859:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23871:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23874:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23867:3:21"},"nodeType":"YulFunctionCall","src":"23867:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23859:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23722:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23725:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23731:4:21","type":""}],"src":"23691:191:21"},{"body":{"nodeType":"YulBlock","src":"23922:142:21","statements":[{"nodeType":"YulAssignment","src":"23932:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23955:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23937:17:21"},"nodeType":"YulFunctionCall","src":"23937:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23932:1:21"}]},{"nodeType":"YulAssignment","src":"23966:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23989:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23971:17:21"},"nodeType":"YulFunctionCall","src":"23971:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23966:1:21"}]},{"body":{"nodeType":"YulBlock","src":"24013:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24015:16:21"},"nodeType":"YulFunctionCall","src":"24015:18:21"},"nodeType":"YulExpressionStatement","src":"24015:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24010:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24003:6:21"},"nodeType":"YulFunctionCall","src":"24003:9:21"},"nodeType":"YulIf","src":"24000:35:21"},{"nodeType":"YulAssignment","src":"24044:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24053:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"24056:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"24049:3:21"},"nodeType":"YulFunctionCall","src":"24049:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24044:1:21"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23911:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23914:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"23920:1:21","type":""}],"src":"23888:176:21"},{"body":{"nodeType":"YulBlock","src":"24114:261:21","statements":[{"nodeType":"YulAssignment","src":"24124:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24147:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24129:17:21"},"nodeType":"YulFunctionCall","src":"24129:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24124:1:21"}]},{"nodeType":"YulAssignment","src":"24158:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24181:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24163:17:21"},"nodeType":"YulFunctionCall","src":"24163:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24158:1:21"}]},{"body":{"nodeType":"YulBlock","src":"24321:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24323:16:21"},"nodeType":"YulFunctionCall","src":"24323:18:21"},"nodeType":"YulExpressionStatement","src":"24323:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24242:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24249:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"24317:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24245:3:21"},"nodeType":"YulFunctionCall","src":"24245:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24239:2:21"},"nodeType":"YulFunctionCall","src":"24239:81:21"},"nodeType":"YulIf","src":"24236:107:21"},{"nodeType":"YulAssignment","src":"24353:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24364:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"24367:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24360:3:21"},"nodeType":"YulFunctionCall","src":"24360:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24353:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24101:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"24104:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24110:3:21","type":""}],"src":"24070:305:21"},{"body":{"nodeType":"YulBlock","src":"24409:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24426:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24429:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24419:6:21"},"nodeType":"YulFunctionCall","src":"24419:88:21"},"nodeType":"YulExpressionStatement","src":"24419:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24523:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24526:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24516:6:21"},"nodeType":"YulFunctionCall","src":"24516:15:21"},"nodeType":"YulExpressionStatement","src":"24516:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24547:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24550:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24540:6:21"},"nodeType":"YulFunctionCall","src":"24540:15:21"},"nodeType":"YulExpressionStatement","src":"24540:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"24381:180:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CrossDomainMessenger_$2044_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CrossDomainMessenger_$2044_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: account is not ext\")\n\n        mstore(add(memPtr, 32), \"ernally owned\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: function can only \")\n\n        mstore(add(memPtr, 32), \"be called from the other bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 63)\n        store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832(memPtr) {\n\n        mstore(add(memPtr, 0), \"L1ERC721Bridge: local token cann\")\n\n        mstore(add(memPtr, 32), \"ot be self\")\n\n    }\n\n    function abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af(memPtr) {\n\n        mstore(add(memPtr, 0), \"L1ERC721Bridge: Token ID is not \")\n\n        mstore(add(memPtr, 32), \"escrowed in the L1 Bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: nft recipient cann\")\n\n        mstore(add(memPtr, 32), \"ot be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1(memPtr) {\n\n        mstore(add(memPtr, 0), \"L1ERC721Bridge: remote token can\")\n\n        mstore(add(memPtr, 32), \"not be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value5, value6,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2055":[{"length":32,"start":535},{"length":32,"start":796},{"length":32,"start":937},{"length":32,"start":1954},{"length":32,"start":2723}],"2058":[{"length":32,"start":882},{"length":32,"start":1918},{"length":32,"start":2128},{"length":32,"start":2783}],"2349":[{"length":32,"start":578}],"2352":[{"length":32,"start":619}],"2355":[{"length":32,"start":660}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063761f449311610066578063761f4493146101205780637f46ddb21461013c578063927ede2d1461015a578063aa55745214610178578063c89701a21461019457610093565b80633687011a146100985780633cb747bf146100b457806354fd4d50146100d25780635d93a3fc146100f0575b600080fd5b6100b260048036038101906100ad9190610e7c565b6101b2565b005b6100bc610213565b6040516100c99190610f75565b60405180910390f35b6100da61023b565b6040516100e79190611029565b60405180910390f35b61010a6004803603810190610105919061104b565b6102de565b60405161011791906110b9565b60405180910390f35b61013a600480360381019061013591906110d4565b61031a565b005b61014461077c565b6040516101519190611192565b60405180910390f35b6101626107a0565b60405161016f9190610f75565b60405180910390f35b610192600480360381019061018d91906111ad565b6107c4565b005b61019c61084c565b6040516101a99190611192565b60405180910390f35b6101bb33610874565b156101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906112ce565b60405180910390fd5b61020b8686333388888888610897565b505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60606102667f0000000000000000000000000000000000000000000000000000000000000000610bdd565b61028f7f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6102b87f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6040516020016102ca93929190611376565b604051602081830303815290604052905090565b6031602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561044e57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906113d2565b73ffffffffffffffffffffffffffffffffffffffff16145b61048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490611471565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290611503565b60405180910390fd5b60011515603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff161515146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390611595565b60405180910390fd5b6000603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055508673ffffffffffffffffffffffffffffffffffffffff166342842e0e3086866040518463ffffffff1660e01b81526004016106bf939291906115c4565b600060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f1f39bf6707b5d608453e0ae4c067b562bcc4c85c0f562ef5d2c774d2e7f131ac8787878760405161076b9493929190611648565b60405180910390a450505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a906116fa565b60405180910390fd5b6108438787338888888888610897565b50505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9061178c565b60405180910390fd5b600063761f449360e01b888a898989888860405160240161092d97969594939291906117ac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001603160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508873ffffffffffffffffffffffffffffffffffffffff166323b872dd8830886040518463ffffffff1660e01b8152600401610a6f939291906115c4565b600060405180830381600087803b158015610a8957600080fd5b505af1158015610a9d573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633dbb202b7f000000000000000000000000000000000000000000000000000000000000000083876040518463ffffffff1660e01b8152600401610b1e93929190611869565b600060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fb7460e2a880f256ebef3406116ff3eee0cee51ebccdc2a40698f87ebb2e9c1a589898888604051610bca9493929190611648565b60405180910390a4505050505050505050565b606060008203610c24576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d38565b600082905060005b60008214610c56578080610c3f906118d6565b915050600a82610c4f919061194d565b9150610c2c565b60008167ffffffffffffffff811115610c7257610c7161197e565b5b6040519080825280601f01601f191660200182016040528015610ca45781602001600182028036833780820191505090505b5090505b60008514610d3157600182610cbd91906119ad565b9150600a85610ccc91906119e1565b6030610cd89190611a12565b60f81b818381518110610cee57610ced611a68565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610d2a919061194d565b9450610ca8565b8093505050505b919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7282610d47565b9050919050565b610d8281610d67565b8114610d8d57600080fd5b50565b600081359050610d9f81610d79565b92915050565b6000819050919050565b610db881610da5565b8114610dc357600080fd5b50565b600081359050610dd581610daf565b92915050565b600063ffffffff82169050919050565b610df481610ddb565b8114610dff57600080fd5b50565b600081359050610e1181610deb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e3c57610e3b610e17565b5b8235905067ffffffffffffffff811115610e5957610e58610e1c565b5b602083019150836001820283011115610e7557610e74610e21565b5b9250929050565b60008060008060008060a08789031215610e9957610e98610d3d565b5b6000610ea789828a01610d90565b9650506020610eb889828a01610d90565b9550506040610ec989828a01610dc6565b9450506060610eda89828a01610e02565b935050608087013567ffffffffffffffff811115610efb57610efa610d42565b5b610f0789828a01610e26565b92509250509295509295509295565b6000819050919050565b6000610f3b610f36610f3184610d47565b610f16565b610d47565b9050919050565b6000610f4d82610f20565b9050919050565b6000610f5f82610f42565b9050919050565b610f6f81610f54565b82525050565b6000602082019050610f8a6000830184610f66565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fca578082015181840152602081019050610faf565b83811115610fd9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ffb82610f90565b6110058185610f9b565b9350611015818560208601610fac565b61101e81610fdf565b840191505092915050565b600060208201905081810360008301526110438184610ff0565b905092915050565b60008060006060848603121561106457611063610d3d565b5b600061107286828701610d90565b935050602061108386828701610d90565b925050604061109486828701610dc6565b9150509250925092565b60008115159050919050565b6110b38161109e565b82525050565b60006020820190506110ce60008301846110aa565b92915050565b600080600080600080600060c0888a0312156110f3576110f2610d3d565b5b60006111018a828b01610d90565b97505060206111128a828b01610d90565b96505060406111238a828b01610d90565b95505060606111348a828b01610d90565b94505060806111458a828b01610dc6565b93505060a088013567ffffffffffffffff81111561116657611165610d42565b5b6111728a828b01610e26565b925092505092959891949750929550565b61118c81610d67565b82525050565b60006020820190506111a76000830184611183565b92915050565b600080600080600080600060c0888a0312156111cc576111cb610d3d565b5b60006111da8a828b01610d90565b97505060206111eb8a828b01610d90565b96505060406111fc8a828b01610d90565b955050606061120d8a828b01610dc6565b945050608061121e8a828b01610e02565b93505060a088013567ffffffffffffffff81111561123f5761123e610d42565b5b61124b8a828b01610e26565b925092505092959891949750929550565b7f4552433732314272696467653a206163636f756e74206973206e6f742065787460008201527f65726e616c6c79206f776e656400000000000000000000000000000000000000602082015250565b60006112b8602d83610f9b565b91506112c38261125c565b604082019050919050565b600060208201905081810360008301526112e7816112ab565b9050919050565b600081905092915050565b600061130482610f90565b61130e81856112ee565b935061131e818560208601610fac565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b60006113606001836112ee565b915061136b8261132a565b600182019050919050565b600061138282866112f9565b915061138d82611353565b915061139982856112f9565b91506113a482611353565b91506113b082846112f9565b9150819050949350505050565b6000815190506113cc81610d79565b92915050565b6000602082840312156113e8576113e7610d3d565b5b60006113f6848285016113bd565b91505092915050565b7f4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792060008201527f62652063616c6c65642066726f6d20746865206f746865722062726964676500602082015250565b600061145b603f83610f9b565b9150611466826113ff565b604082019050919050565b6000602082019050818103600083015261148a8161144e565b9050919050565b7f4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e60008201527f6f742062652073656c6600000000000000000000000000000000000000000000602082015250565b60006114ed602a83610f9b565b91506114f882611491565b604082019050919050565b6000602082019050818103600083015261151c816114e0565b9050919050565b7f4c314552433732314272696467653a20546f6b656e204944206973206e6f742060008201527f657363726f77656420696e20746865204c312042726964676500000000000000602082015250565b600061157f603983610f9b565b915061158a82611523565b604082019050919050565b600060208201905081810360008301526115ae81611572565b9050919050565b6115be81610da5565b82525050565b60006060820190506115d96000830186611183565b6115e66020830185611183565b6115f360408301846115b5565b949350505050565b600082825260208201905092915050565b82818337600083830152505050565b600061162783856115fb565b935061163483858461160c565b61163d83610fdf565b840190509392505050565b600060608201905061165d6000830187611183565b61166a60208301866115b5565b818103604083015261167d81848661161b565b905095945050505050565b7f4552433732314272696467653a206e667420726563697069656e742063616e6e60008201527f6f74206265206164647265737328302900000000000000000000000000000000602082015250565b60006116e4603083610f9b565b91506116ef82611688565b604082019050919050565b60006020820190508181036000830152611713816116d7565b9050919050565b7f4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e60008201527f6e6f742062652061646472657373283029000000000000000000000000000000602082015250565b6000611776603183610f9b565b91506117818261171a565b604082019050919050565b600060208201905081810360008301526117a581611769565b9050919050565b600060c0820190506117c1600083018a611183565b6117ce6020830189611183565b6117db6040830188611183565b6117e86060830187611183565b6117f560808301866115b5565b81810360a083015261180881848661161b565b905098975050505050505050565b600081519050919050565b600061182c82611816565b61183681856115fb565b9350611846818560208601610fac565b61184f81610fdf565b840191505092915050565b61186381610ddb565b82525050565b600060608201905061187e6000830186611183565b81810360208301526118908185611821565b905061189f604083018461185a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118e182610da5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611913576119126118a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195882610da5565b915061196383610da5565b9250826119735761197261191e565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006119b882610da5565b91506119c383610da5565b9250828210156119d6576119d56118a7565b5b828203905092915050565b60006119ec82610da5565b91506119f783610da5565b925082611a0757611a0661191e565b5b828206905092915050565b6000611a1d82610da5565b9150611a2883610da5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5d57611a5c6118a7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122018cc0ac27b81ba758e30d7a9f9d18d9016a09fb5304cbc07f0f54942351cbaf564736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761F4493 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x761F4493 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x7F46DDB2 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x927EDE2D EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xAA557452 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC89701A2 EQ PUSH2 0x194 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x3687011A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5D93A3FC EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB CALLER PUSH2 0x874 JUMP JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20B DUP7 DUP7 CALLER CALLER DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x266 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x28F PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x31 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x44E JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x484 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F39BF6707B5D608453E0AE4C067B562BCC4C85C0F562EF5D2C774D2E7F131AC DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x843 DUP8 DUP8 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x761F4493 PUSH1 0xE0 SHL DUP9 DUP11 DUP10 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x92D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x31 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP9 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH32 0x0 DUP4 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7460E2A880F256EBEF3406116FF3EEE0CEE51EBCCDC2A40698F87EBB2E9C1A5 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xBCA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xC56 JUMPI DUP1 DUP1 PUSH2 0xC3F SWAP1 PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x197E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD31 JUMPI PUSH1 0x1 DUP3 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x19AD JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xCCC SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0x1A68 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP5 POP PUSH2 0xCA8 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9F DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD5 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP2 EQ PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE11 DUP2 PUSH2 0xDEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0xE17 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0xE1C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE75 JUMPI PUSH2 0xE74 PUSH2 0xE21 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP10 DUP3 DUP11 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xEDA DUP10 DUP3 DUP11 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0xF07 DUP10 DUP3 DUP11 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3B PUSH2 0xF36 PUSH2 0xF31 DUP5 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4D DUP3 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xF54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFAF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x1005 DUP2 DUP6 PUSH2 0xF9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1015 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1064 JUMPI PUSH2 0x1063 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1072 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1083 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1094 DUP7 DUP3 DUP8 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0x109E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1101 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1112 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1123 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1134 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1145 DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x1172 DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x118C DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1183 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11DA DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x11EB DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x11FC DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x120D DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x121E DUP11 DUP3 DUP12 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x124B DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206163636F756E74206973206E6F7420657874 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726E616C6C79206F776E656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B8 PUSH1 0x2D DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x12C3 DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E7 DUP2 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x130E DUP2 DUP6 PUSH2 0x12EE JUMP JUMPDEST SWAP4 POP PUSH2 0x131E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH1 0x1 DUP4 PUSH2 0x12EE JUMP JUMPDEST SWAP2 POP PUSH2 0x136B DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 DUP3 DUP7 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1399 DUP3 DUP6 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A4 DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x13B0 DUP3 DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CC DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E7 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F6 DUP5 DUP3 DUP6 ADD PUSH2 0x13BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A2066756E6374696F6E2063616E206F6E6C7920 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62652063616C6C65642066726F6D20746865206F746865722062726964676500 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B PUSH1 0x3F DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1466 DUP3 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148A DUP2 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A206C6F63616C20746F6B656E2063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F742062652073656C6600000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14ED PUSH1 0x2A DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x14F8 DUP3 PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151C DUP2 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A20546F6B656E204944206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657363726F77656420696E20746865204C312042726964676500000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157F PUSH1 0x39 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x158A DUP3 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AE DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 DUP4 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1634 DUP4 DUP6 DUP5 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x163D DUP4 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x165D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x166A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x167D DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206E667420726563697069656E742063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206265206164647265737328302900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E4 PUSH1 0x30 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1713 DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A2072656D6F746520746F6B656E2063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652061646472657373283029000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1776 PUSH1 0x31 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1781 DUP3 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A5 DUP2 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1808 DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x187E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1890 DUP2 DUP6 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP PUSH2 0x189F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1963 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1973 JUMPI PUSH2 0x1972 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19B8 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x19D6 JUMPI PUSH2 0x19D5 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A07 JUMPI PUSH2 0x1A06 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A5D JUMPI PUSH2 0x1A5C PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xCC EXP 0xC2 PUSH28 0x81BA758E30D7A9F9D18D9016A09FB5304CBC07F0F54942351CBAF564 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"595:3650:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4874:1053:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3145:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:372:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:80:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:1102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;534:37:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7161:510;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3409:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4874:1053;5627:30;5646:10;5627:18;:30::i;:::-;5626:31;5618:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;5718:202;5753:11;5778:12;5804:10;5828;5852:8;5874:12;5900:10;;5718:21;:202::i;:::-;4874:1053;;;;;;:::o;3145:99::-;3189:20;3228:9;3221:16;;3145:99;:::o;1057:372:11:-;1097:13;1203:31;1220:13;1203:16;:31::i;:::-;1281;1298:13;1281:16;:31::i;:::-;1359;1376:13;1359:16;:31::i;:::-;1165:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1122:300;;1057:372;:::o;820:80:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2027:1102::-;2302:9:9;2280:32;;:10;:32;;;:84;;;;;2352:12;2316:48;;:9;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;2280:84;2259:194;;;;;;;;;;;;:::i;:::-;;;;;;;;;2293:4:0::1;2270:28;;:11;:28;;::::0;2262:83:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2518:4;2469:53;;:8;:21;2478:11;2469:21;;;;;;;;;;;;;;;:35;2491:12;2469:35;;;;;;;;;;;;;;;:45;2505:8;2469:45;;;;;;;;;;;;;;;;;;;;;:53;;;2448:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;2775:5;2727:8;:21;2736:11;2727:21;;;;;;;;;;;;;;;:35;2749:12;2727:35;;;;;;;;;;;;;;;:45;2763:8;2727:45;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2910:11;2902:37;;;2948:4;2955:3;2960:8;2902:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3089:5;3040:82;;3075:12;3040:82;;3062:11;3040:82;;;3096:3;3101:8;3111:10;;3040:82;;;;;;;;;:::i;:::-;;;;;;;;2027:1102:::0;;;;;;;:::o;534:37:9:-;;;:::o;405:47::-;;;:::o;7161:510::-;7403:1;7388:17;;:3;:17;;;7380:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;7469:195;7504:11;7529:12;7555:10;7579:3;7596:8;7618:12;7644:10;;7469:21;:195::i;:::-;7161:510;;;;;;;:::o;3409:91::-;3455:7;3481:12;3474:19;;3409:91;:::o;1175:320:16:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;3183:1060:0:-;3473:1;3449:26;;:12;:26;;;3441:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3619:20;3678:44;;;3736:12;3762:11;3787:5;3806:3;3823:8;3845:10;;3642:223;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3619:246;;3958:4;3910:8;:21;3919:11;3910:21;;;;;;;;;;;;;;;:35;3932:12;3910:35;;;;;;;;;;;;;;;:45;3946:8;3910:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;3980:11;3972:33;;;4006:5;4021:4;4028:8;3972:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4081:9;:21;;;4103:12;4117:7;4126:12;4081:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:5;4154:82;;4189:12;4154:82;;4176:11;4154:82;;;4210:3;4215:8;4225:10;;4154:82;;;;;;;;;:::i;:::-;;;;;;;;3431:812;3183:1060;;;;;;;;:::o;392:703:17:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;88:117:21:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:93::-;1233:7;1273:10;1266:5;1262:22;1251:33;;1197:93;;;:::o;1296:120::-;1368:23;1385:5;1368:23;:::i;:::-;1361:5;1358:34;1348:62;;1406:1;1403;1396:12;1348:62;1296:120;:::o;1422:137::-;1467:5;1505:6;1492:20;1483:29;;1521:32;1547:5;1521:32;:::i;:::-;1422:137;;;;:::o;1565:117::-;1674:1;1671;1664:12;1688:117;1797:1;1794;1787:12;1811:117;1920:1;1917;1910:12;1947:552;2004:8;2014:6;2064:3;2057:4;2049:6;2045:17;2041:27;2031:122;;2072:79;;:::i;:::-;2031:122;2185:6;2172:20;2162:30;;2215:18;2207:6;2204:30;2201:117;;;2237:79;;:::i;:::-;2201:117;2351:4;2343:6;2339:17;2327:29;;2405:3;2397:4;2389:6;2385:17;2375:8;2371:32;2368:41;2365:128;;;2412:79;;:::i;:::-;2365:128;1947:552;;;;;:::o;2505:1107::-;2610:6;2618;2626;2634;2642;2650;2699:3;2687:9;2678:7;2674:23;2670:33;2667:120;;;2706:79;;:::i;:::-;2667:120;2826:1;2851:53;2896:7;2887:6;2876:9;2872:22;2851:53;:::i;:::-;2841:63;;2797:117;2953:2;2979:53;3024:7;3015:6;3004:9;3000:22;2979:53;:::i;:::-;2969:63;;2924:118;3081:2;3107:53;3152:7;3143:6;3132:9;3128:22;3107:53;:::i;:::-;3097:63;;3052:118;3209:2;3235:52;3279:7;3270:6;3259:9;3255:22;3235:52;:::i;:::-;3225:62;;3180:117;3364:3;3353:9;3349:19;3336:33;3396:18;3388:6;3385:30;3382:117;;;3418:79;;:::i;:::-;3382:117;3531:64;3587:7;3578:6;3567:9;3563:22;3531:64;:::i;:::-;3513:82;;;;3307:298;2505:1107;;;;;;;;:::o;3618:60::-;3646:3;3667:5;3660:12;;3618:60;;;:::o;3684:142::-;3734:9;3767:53;3785:34;3794:24;3812:5;3794:24;:::i;:::-;3785:34;:::i;:::-;3767:53;:::i;:::-;3754:66;;3684:142;;;:::o;3832:126::-;3882:9;3915:37;3946:5;3915:37;:::i;:::-;3902:50;;3832:126;;;:::o;3964:155::-;4043:9;4076:37;4107:5;4076:37;:::i;:::-;4063:50;;3964:155;;;:::o;4125:189::-;4241:66;4301:5;4241:66;:::i;:::-;4236:3;4229:79;4125:189;;:::o;4320:280::-;4442:4;4480:2;4469:9;4465:18;4457:26;;4493:100;4590:1;4579:9;4575:17;4566:6;4493:100;:::i;:::-;4320:280;;;;:::o;4606:99::-;4658:6;4692:5;4686:12;4676:22;;4606:99;;;:::o;4711:169::-;4795:11;4829:6;4824:3;4817:19;4869:4;4864:3;4860:14;4845:29;;4711:169;;;;:::o;4886:307::-;4954:1;4964:113;4978:6;4975:1;4972:13;4964:113;;;5063:1;5058:3;5054:11;5048:18;5044:1;5039:3;5035:11;5028:39;5000:2;4997:1;4993:10;4988:15;;4964:113;;;5095:6;5092:1;5089:13;5086:101;;;5175:1;5166:6;5161:3;5157:16;5150:27;5086:101;4935:258;4886:307;;;:::o;5199:102::-;5240:6;5291:2;5287:7;5282:2;5275:5;5271:14;5267:28;5257:38;;5199:102;;;:::o;5307:364::-;5395:3;5423:39;5456:5;5423:39;:::i;:::-;5478:71;5542:6;5537:3;5478:71;:::i;:::-;5471:78;;5558:52;5603:6;5598:3;5591:4;5584:5;5580:16;5558:52;:::i;:::-;5635:29;5657:6;5635:29;:::i;:::-;5630:3;5626:39;5619:46;;5399:272;5307:364;;;;:::o;5677:313::-;5790:4;5828:2;5817:9;5813:18;5805:26;;5877:9;5871:4;5867:20;5863:1;5852:9;5848:17;5841:47;5905:78;5978:4;5969:6;5905:78;:::i;:::-;5897:86;;5677:313;;;;:::o;5996:619::-;6073:6;6081;6089;6138:2;6126:9;6117:7;6113:23;6109:32;6106:119;;;6144:79;;:::i;:::-;6106:119;6264:1;6289:53;6334:7;6325:6;6314:9;6310:22;6289:53;:::i;:::-;6279:63;;6235:117;6391:2;6417:53;6462:7;6453:6;6442:9;6438:22;6417:53;:::i;:::-;6407:63;;6362:118;6519:2;6545:53;6590:7;6581:6;6570:9;6566:22;6545:53;:::i;:::-;6535:63;;6490:118;5996:619;;;;;:::o;6621:90::-;6655:7;6698:5;6691:13;6684:21;6673:32;;6621:90;;;:::o;6717:109::-;6798:21;6813:5;6798:21;:::i;:::-;6793:3;6786:34;6717:109;;:::o;6832:210::-;6919:4;6957:2;6946:9;6942:18;6934:26;;6970:65;7032:1;7021:9;7017:17;7008:6;6970:65;:::i;:::-;6832:210;;;;:::o;7048:1255::-;7163:6;7171;7179;7187;7195;7203;7211;7260:3;7248:9;7239:7;7235:23;7231:33;7228:120;;;7267:79;;:::i;:::-;7228:120;7387:1;7412:53;7457:7;7448:6;7437:9;7433:22;7412:53;:::i;:::-;7402:63;;7358:117;7514:2;7540:53;7585:7;7576:6;7565:9;7561:22;7540:53;:::i;:::-;7530:63;;7485:118;7642:2;7668:53;7713:7;7704:6;7693:9;7689:22;7668:53;:::i;:::-;7658:63;;7613:118;7770:2;7796:53;7841:7;7832:6;7821:9;7817:22;7796:53;:::i;:::-;7786:63;;7741:118;7898:3;7925:53;7970:7;7961:6;7950:9;7946:22;7925:53;:::i;:::-;7915:63;;7869:119;8055:3;8044:9;8040:19;8027:33;8087:18;8079:6;8076:30;8073:117;;;8109:79;;:::i;:::-;8073:117;8222:64;8278:7;8269:6;8258:9;8254:22;8222:64;:::i;:::-;8204:82;;;;7998:298;7048:1255;;;;;;;;;;:::o;8309:118::-;8396:24;8414:5;8396:24;:::i;:::-;8391:3;8384:37;8309:118;;:::o;8433:222::-;8526:4;8564:2;8553:9;8549:18;8541:26;;8577:71;8645:1;8634:9;8630:17;8621:6;8577:71;:::i;:::-;8433:222;;;;:::o;8661:1253::-;8775:6;8783;8791;8799;8807;8815;8823;8872:3;8860:9;8851:7;8847:23;8843:33;8840:120;;;8879:79;;:::i;:::-;8840:120;8999:1;9024:53;9069:7;9060:6;9049:9;9045:22;9024:53;:::i;:::-;9014:63;;8970:117;9126:2;9152:53;9197:7;9188:6;9177:9;9173:22;9152:53;:::i;:::-;9142:63;;9097:118;9254:2;9280:53;9325:7;9316:6;9305:9;9301:22;9280:53;:::i;:::-;9270:63;;9225:118;9382:2;9408:53;9453:7;9444:6;9433:9;9429:22;9408:53;:::i;:::-;9398:63;;9353:118;9510:3;9537:52;9581:7;9572:6;9561:9;9557:22;9537:52;:::i;:::-;9527:62;;9481:118;9666:3;9655:9;9651:19;9638:33;9698:18;9690:6;9687:30;9684:117;;;9720:79;;:::i;:::-;9684:117;9833:64;9889:7;9880:6;9869:9;9865:22;9833:64;:::i;:::-;9815:82;;;;9609:298;8661:1253;;;;;;;;;;:::o;9920:232::-;10060:34;10056:1;10048:6;10044:14;10037:58;10129:15;10124:2;10116:6;10112:15;10105:40;9920:232;:::o;10158:366::-;10300:3;10321:67;10385:2;10380:3;10321:67;:::i;:::-;10314:74;;10397:93;10486:3;10397:93;:::i;:::-;10515:2;10510:3;10506:12;10499:19;;10158:366;;;:::o;10530:419::-;10696:4;10734:2;10723:9;10719:18;10711:26;;10783:9;10777:4;10773:20;10769:1;10758:9;10754:17;10747:47;10811:131;10937:4;10811:131;:::i;:::-;10803:139;;10530:419;;;:::o;10955:148::-;11057:11;11094:3;11079:18;;10955:148;;;;:::o;11109:377::-;11215:3;11243:39;11276:5;11243:39;:::i;:::-;11298:89;11380:6;11375:3;11298:89;:::i;:::-;11291:96;;11396:52;11441:6;11436:3;11429:4;11422:5;11418:16;11396:52;:::i;:::-;11473:6;11468:3;11464:16;11457:23;;11219:267;11109:377;;;;:::o;11492:151::-;11632:3;11628:1;11620:6;11616:14;11609:27;11492:151;:::o;11649:400::-;11809:3;11830:84;11912:1;11907:3;11830:84;:::i;:::-;11823:91;;11923:93;12012:3;11923:93;:::i;:::-;12041:1;12036:3;12032:11;12025:18;;11649:400;;;:::o;12055:1127::-;12485:3;12507:95;12598:3;12589:6;12507:95;:::i;:::-;12500:102;;12619:148;12763:3;12619:148;:::i;:::-;12612:155;;12784:95;12875:3;12866:6;12784:95;:::i;:::-;12777:102;;12896:148;13040:3;12896:148;:::i;:::-;12889:155;;13061:95;13152:3;13143:6;13061:95;:::i;:::-;13054:102;;13173:3;13166:10;;12055:1127;;;;;;:::o;13188:143::-;13245:5;13276:6;13270:13;13261:22;;13292:33;13319:5;13292:33;:::i;:::-;13188:143;;;;:::o;13337:351::-;13407:6;13456:2;13444:9;13435:7;13431:23;13427:32;13424:119;;;13462:79;;:::i;:::-;13424:119;13582:1;13607:64;13663:7;13654:6;13643:9;13639:22;13607:64;:::i;:::-;13597:74;;13553:128;13337:351;;;;:::o;13694:250::-;13834:34;13830:1;13822:6;13818:14;13811:58;13903:33;13898:2;13890:6;13886:15;13879:58;13694:250;:::o;13950:366::-;14092:3;14113:67;14177:2;14172:3;14113:67;:::i;:::-;14106:74;;14189:93;14278:3;14189:93;:::i;:::-;14307:2;14302:3;14298:12;14291:19;;13950:366;;;:::o;14322:419::-;14488:4;14526:2;14515:9;14511:18;14503:26;;14575:9;14569:4;14565:20;14561:1;14550:9;14546:17;14539:47;14603:131;14729:4;14603:131;:::i;:::-;14595:139;;14322:419;;;:::o;14747:229::-;14887:34;14883:1;14875:6;14871:14;14864:58;14956:12;14951:2;14943:6;14939:15;14932:37;14747:229;:::o;14982:366::-;15124:3;15145:67;15209:2;15204:3;15145:67;:::i;:::-;15138:74;;15221:93;15310:3;15221:93;:::i;:::-;15339:2;15334:3;15330:12;15323:19;;14982:366;;;:::o;15354:419::-;15520:4;15558:2;15547:9;15543:18;15535:26;;15607:9;15601:4;15597:20;15593:1;15582:9;15578:17;15571:47;15635:131;15761:4;15635:131;:::i;:::-;15627:139;;15354:419;;;:::o;15779:244::-;15919:34;15915:1;15907:6;15903:14;15896:58;15988:27;15983:2;15975:6;15971:15;15964:52;15779:244;:::o;16029:366::-;16171:3;16192:67;16256:2;16251:3;16192:67;:::i;:::-;16185:74;;16268:93;16357:3;16268:93;:::i;:::-;16386:2;16381:3;16377:12;16370:19;;16029:366;;;:::o;16401:419::-;16567:4;16605:2;16594:9;16590:18;16582:26;;16654:9;16648:4;16644:20;16640:1;16629:9;16625:17;16618:47;16682:131;16808:4;16682:131;:::i;:::-;16674:139;;16401:419;;;:::o;16826:118::-;16913:24;16931:5;16913:24;:::i;:::-;16908:3;16901:37;16826:118;;:::o;16950:442::-;17099:4;17137:2;17126:9;17122:18;17114:26;;17150:71;17218:1;17207:9;17203:17;17194:6;17150:71;:::i;:::-;17231:72;17299:2;17288:9;17284:18;17275:6;17231:72;:::i;:::-;17313;17381:2;17370:9;17366:18;17357:6;17313:72;:::i;:::-;16950:442;;;;;;:::o;17398:168::-;17481:11;17515:6;17510:3;17503:19;17555:4;17550:3;17546:14;17531:29;;17398:168;;;;:::o;17572:154::-;17656:6;17651:3;17646;17633:30;17718:1;17709:6;17704:3;17700:16;17693:27;17572:154;;;:::o;17754:301::-;17850:3;17871:70;17934:6;17929:3;17871:70;:::i;:::-;17864:77;;17951:43;17987:6;17982:3;17975:5;17951:43;:::i;:::-;18019:29;18041:6;18019:29;:::i;:::-;18014:3;18010:39;18003:46;;17754:301;;;;;:::o;18061:549::-;18238:4;18276:2;18265:9;18261:18;18253:26;;18289:71;18357:1;18346:9;18342:17;18333:6;18289:71;:::i;:::-;18370:72;18438:2;18427:9;18423:18;18414:6;18370:72;:::i;:::-;18489:9;18483:4;18479:20;18474:2;18463:9;18459:18;18452:48;18517:86;18598:4;18589:6;18581;18517:86;:::i;:::-;18509:94;;18061:549;;;;;;;:::o;18616:235::-;18756:34;18752:1;18744:6;18740:14;18733:58;18825:18;18820:2;18812:6;18808:15;18801:43;18616:235;:::o;18857:366::-;18999:3;19020:67;19084:2;19079:3;19020:67;:::i;:::-;19013:74;;19096:93;19185:3;19096:93;:::i;:::-;19214:2;19209:3;19205:12;19198:19;;18857:366;;;:::o;19229:419::-;19395:4;19433:2;19422:9;19418:18;19410:26;;19482:9;19476:4;19472:20;19468:1;19457:9;19453:17;19446:47;19510:131;19636:4;19510:131;:::i;:::-;19502:139;;19229:419;;;:::o;19654:236::-;19794:34;19790:1;19782:6;19778:14;19771:58;19863:19;19858:2;19850:6;19846:15;19839:44;19654:236;:::o;19896:366::-;20038:3;20059:67;20123:2;20118:3;20059:67;:::i;:::-;20052:74;;20135:93;20224:3;20135:93;:::i;:::-;20253:2;20248:3;20244:12;20237:19;;19896:366;;;:::o;20268:419::-;20434:4;20472:2;20461:9;20457:18;20449:26;;20521:9;20515:4;20511:20;20507:1;20496:9;20492:17;20485:47;20549:131;20675:4;20549:131;:::i;:::-;20541:139;;20268:419;;;:::o;20693:882::-;20954:4;20992:3;20981:9;20977:19;20969:27;;21006:71;21074:1;21063:9;21059:17;21050:6;21006:71;:::i;:::-;21087:72;21155:2;21144:9;21140:18;21131:6;21087:72;:::i;:::-;21169;21237:2;21226:9;21222:18;21213:6;21169:72;:::i;:::-;21251;21319:2;21308:9;21304:18;21295:6;21251:72;:::i;:::-;21333:73;21401:3;21390:9;21386:19;21377:6;21333:73;:::i;:::-;21454:9;21448:4;21444:20;21438:3;21427:9;21423:19;21416:49;21482:86;21563:4;21554:6;21546;21482:86;:::i;:::-;21474:94;;20693:882;;;;;;;;;;:::o;21581:98::-;21632:6;21666:5;21660:12;21650:22;;21581:98;;;:::o;21685:360::-;21771:3;21799:38;21831:5;21799:38;:::i;:::-;21853:70;21916:6;21911:3;21853:70;:::i;:::-;21846:77;;21932:52;21977:6;21972:3;21965:4;21958:5;21954:16;21932:52;:::i;:::-;22009:29;22031:6;22009:29;:::i;:::-;22004:3;22000:39;21993:46;;21775:270;21685:360;;;;:::o;22051:115::-;22136:23;22153:5;22136:23;:::i;:::-;22131:3;22124:36;22051:115;;:::o;22172:525::-;22337:4;22375:2;22364:9;22360:18;22352:26;;22388:71;22456:1;22445:9;22441:17;22432:6;22388:71;:::i;:::-;22506:9;22500:4;22496:20;22491:2;22480:9;22476:18;22469:48;22534:76;22605:4;22596:6;22534:76;:::i;:::-;22526:84;;22620:70;22686:2;22675:9;22671:18;22662:6;22620:70;:::i;:::-;22172:525;;;;;;:::o;22703:180::-;22751:77;22748:1;22741:88;22848:4;22845:1;22838:15;22872:4;22869:1;22862:15;22889:233;22928:3;22951:24;22969:5;22951:24;:::i;:::-;22942:33;;22997:66;22990:5;22987:77;22984:103;;23067:18;;:::i;:::-;22984:103;23114:1;23107:5;23103:13;23096:20;;22889:233;;;:::o;23128:180::-;23176:77;23173:1;23166:88;23273:4;23270:1;23263:15;23297:4;23294:1;23287:15;23314:185;23354:1;23371:20;23389:1;23371:20;:::i;:::-;23366:25;;23405:20;23423:1;23405:20;:::i;:::-;23400:25;;23444:1;23434:35;;23449:18;;:::i;:::-;23434:35;23491:1;23488;23484:9;23479:14;;23314:185;;;;:::o;23505:180::-;23553:77;23550:1;23543:88;23650:4;23647:1;23640:15;23674:4;23671:1;23664:15;23691:191;23731:4;23751:20;23769:1;23751:20;:::i;:::-;23746:25;;23785:20;23803:1;23785:20;:::i;:::-;23780:25;;23824:1;23821;23818:8;23815:34;;;23829:18;;:::i;:::-;23815:34;23874:1;23871;23867:9;23859:17;;23691:191;;;;:::o;23888:176::-;23920:1;23937:20;23955:1;23937:20;:::i;:::-;23932:25;;23971:20;23989:1;23971:20;:::i;:::-;23966:25;;24010:1;24000:35;;24015:18;;:::i;:::-;24000:35;24056:1;24053;24049:9;24044:14;;23888:176;;;;:::o;24070:305::-;24110:3;24129:20;24147:1;24129:20;:::i;:::-;24124:25;;24163:20;24181:1;24163:20;:::i;:::-;24158:25;;24317:1;24249:66;24245:74;24242:1;24239:81;24236:107;;;24323:18;;:::i;:::-;24236:107;24367:1;24364;24360:9;24353:16;;24070:305;;;;:::o;24381:180::-;24429:77;24426:1;24419:88;24526:4;24523:1;24516:15;24550:4;24547:1;24540:15"},"methodIdentifiers":{"MESSENGER()":"927ede2d","OTHER_BRIDGE()":"7f46ddb2","bridgeERC721(address,address,uint256,uint32,bytes)":"3687011a","bridgeERC721To(address,address,address,uint256,uint32,bytes)":"aa557452","deposits(address,address,uint256)":"5d93a3fc","finalizeBridgeERC721(address,address,address,address,uint256,bytes)":"761f4493","messenger()":"3cb747bf","otherBridge()":"c89701a2","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_otherBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_to\":\"Address to receive the token on the other domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"constructor\":{\"custom:semver\":\"1.0.0\",\"params\":{\"_messenger\":\"Address of the CrossDomainMessenger on this network.\",\"_otherBridge\":\"Address of the ERC721 bridge on the other network.\"}},\"finalizeBridgeERC721(address,address,address,address,uint256,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to L2. Data supplied here will not be used to                     execute any code on L2 and is only emitted as extra data for the                     convenience of off-chain tooling.\",\"_from\":\"Address that triggered the bridge on the other domain.\",\"_localToken\":\"Address of the ERC721 token on this domain.\",\"_remoteToken\":\"Address of the ERC721 token on the other domain.\",\"_to\":\"Address to receive the token on this domain.\",\"_tokenId\":\"ID of the token being deposited.\"}},\"messenger()\":{\"custom:legacy\":\"@notice Legacy getter for messenger contract.\",\"returns\":{\"_0\":\"Messenger contract on this domain.\"}},\"otherBridge()\":{\"custom:legacy\":\"@notice Legacy getter for other bridge address.\",\"returns\":{\"_0\":\"Address of the bridge on the other network.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"L1ERC721Bridge\",\"version\":1},\"userdoc\":{\"events\":{\"ERC721BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge from the other network is finalized.\"},\"ERC721BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge to the other network is initiated.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Address of the bridge on the other network.\"},\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to the caller's account on the other chain. Note that         this function can only be called by EOAs. Smart contract wallets should use the         `bridgeERC721To` function after ensuring that the recipient address on the remote         chain exists. Also note that the current owner of the token on this chain must         approve this contract to operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to some recipient's account on the other chain. Note         that the current owner of the token on this chain must approve this contract to         operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"deposits(address,address,uint256)\":{\"notice\":\"Mapping of L1 token to L2 token to ID to boolean, indicating if the given L1 token         by ID was deposited for a given L2 token.\"},\"finalizeBridgeERC721(address,address,address,address,uint256,bytes)\":{\"notice\":\"Completes an ERC721 bridge from the other domain and sends the ERC721 token to the         recipient on this domain.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The L1 ERC721 bridge is a contract which works together with the L2 ERC721 bridge to         make it possible to transfer ERC721 tokens from Ethereum to Optimism. This contract         acts as an escrow for ERC721 tokens deposited into L2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol\":\"L1ERC721Bridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol\":{\"keccak256\":\"0xf66d53c1bc80c9a204ce8752f26a6fdaa247f6fd80438020b889e0f1c8079b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab9be6161db4e3e0e598cdaf5e8f9143b4f4bfdbc65e335c5d948b00dc4a1cb\",\"dweb:/ipfs/QmaaLcDguxg1XyCNmbtKMkuTi4ngK8qCUFb1NkurJZGAhZ\"]},\"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol\":{\"keccak256\":\"0xc29eaa8bbc402ff540059207a2133bb020b26ee57e36c801fa06aff245ef30cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://589c633276ad0b7bb0f31331718bcc5f48d54cf1ae28ab0f73484013be0273c7\",\"dweb:/ipfs/QmQbiwCuLQoFW7R4GKxtU3V6C1d42YzsHCQQSDobnwUvtu\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol\":{\"keccak256\":\"0xb47389fbec63e85b2d04fce538fe1b8e048278d631729458b70e32a31971c092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7133f38e3d8d1911738057b1d4523989abd7cd029797b1d3b59cda29d42e9704\",\"dweb:/ipfs/QmUN31CLssESHrBwWA3WYP5L2xESo9Q4aq2Exua1e8UtUW\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol\":{\"keccak256\":\"0xf1a3dd4452df8882a65a31c5e2e8de7872b08cf078be7a5a7da51e6f75c53ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09a2560cae35ca4789fe1ff5edb2bae9fa7dcda115a55f7ccdcc974a2e37526\",\"dweb:/ipfs/QmPQeTvrJ4SJpng5VGZNMf1u85NWxrdus4gGn8xYkHddKM\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol":{"L2ERC721Bridge":{"abi":[{"inputs":[{"internalType":"address","name":"_messenger","type":"address"},{"internalType":"address","name":"_otherBridge","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeInitiated","type":"event"},{"inputs":[],"name":"MESSENGER","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OTHER_BRIDGE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721To","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"finalizeBridgeERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"messenger","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"otherBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2154":{"entryPoint":null,"id":2154,"parameterSlots":2,"returnSlots":0},"@_234":{"entryPoint":null,"id":234,"parameterSlots":2,"returnSlots":0},"@_2378":{"entryPoint":null,"id":2378,"parameterSlots":3,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":516,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":539,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack":{"entryPoint":858,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack":{"entryPoint":706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":745,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":610,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":470,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":438,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":433,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e":{"entryPoint":779,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f":{"entryPoint":627,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":490,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3601:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"939:413:21","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:21"},"nodeType":"YulFunctionCall","src":"987:79:21"},"nodeType":"YulExpressionStatement","src":"987:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:21"},"nodeType":"YulFunctionCall","src":"956:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:21"},"nodeType":"YulFunctionCall","src":"952:32:21"},"nodeType":"YulIf","src":"949:119:21"},{"nodeType":"YulBlock","src":"1078:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:21"},"nodeType":"YulFunctionCall","src":"1164:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:21"},"nodeType":"YulFunctionCall","src":"1132:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:21"}]}]},{"nodeType":"YulBlock","src":"1216:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:21"},"nodeType":"YulFunctionCall","src":"1303:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:21"},"nodeType":"YulFunctionCall","src":"1271:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:21","type":""}],"src":"845:507:21"},{"body":{"nodeType":"YulBlock","src":"1454:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:21"},"nodeType":"YulFunctionCall","src":"1464:19:21"},"nodeType":"YulExpressionStatement","src":"1464:19:21"},{"nodeType":"YulAssignment","src":"1492:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:21"},"nodeType":"YulFunctionCall","src":"1507:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:21","type":""}],"src":"1358:169:21"},{"body":{"nodeType":"YulBlock","src":"1639:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:21"},"nodeType":"YulFunctionCall","src":"1657:14:21"},{"hexValue":"4552433732314272696467653a206d657373656e6765722063616e6e6f742062","kind":"string","nodeType":"YulLiteral","src":"1673:34:21","type":"","value":"ERC721Bridge: messenger cannot b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:21"},"nodeType":"YulFunctionCall","src":"1650:58:21"},"nodeType":"YulExpressionStatement","src":"1650:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1729:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1725:3:21"},"nodeType":"YulFunctionCall","src":"1725:15:21"},{"hexValue":"652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"1742:14:21","type":"","value":"e address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1718:6:21"},"nodeType":"YulFunctionCall","src":"1718:39:21"},"nodeType":"YulExpressionStatement","src":"1718:39:21"}]},"name":"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:21","type":""}],"src":"1533:231:21"},{"body":{"nodeType":"YulBlock","src":"1916:220:21","statements":[{"nodeType":"YulAssignment","src":"1926:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1992:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1997:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1933:58:21"},"nodeType":"YulFunctionCall","src":"1933:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1926:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2098:3:21"}],"functionName":{"name":"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","nodeType":"YulIdentifier","src":"2009:88:21"},"nodeType":"YulFunctionCall","src":"2009:93:21"},"nodeType":"YulExpressionStatement","src":"2009:93:21"},{"nodeType":"YulAssignment","src":"2111:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2122:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2127:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:21"},"nodeType":"YulFunctionCall","src":"2118:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2111:3:21"}]}]},"name":"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1904:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1912:3:21","type":""}],"src":"1770:366:21"},{"body":{"nodeType":"YulBlock","src":"2313:248:21","statements":[{"nodeType":"YulAssignment","src":"2323:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2335:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2346:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:21"},"nodeType":"YulFunctionCall","src":"2331:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2323:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2381:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:21"},"nodeType":"YulFunctionCall","src":"2366:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2389:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2385:3:21"},"nodeType":"YulFunctionCall","src":"2385:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2359:6:21"},"nodeType":"YulFunctionCall","src":"2359:47:21"},"nodeType":"YulExpressionStatement","src":"2359:47:21"},{"nodeType":"YulAssignment","src":"2415:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2549:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2423:124:21"},"nodeType":"YulFunctionCall","src":"2423:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2415:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2293:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2308:4:21","type":""}],"src":"2142:419:21"},{"body":{"nodeType":"YulBlock","src":"2673:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2695:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2703:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:21"},"nodeType":"YulFunctionCall","src":"2691:14:21"},{"hexValue":"4552433732314272696467653a206f74686572206272696467652063616e6e6f","kind":"string","nodeType":"YulLiteral","src":"2707:34:21","type":"","value":"ERC721Bridge: other bridge canno"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2684:6:21"},"nodeType":"YulFunctionCall","src":"2684:58:21"},"nodeType":"YulExpressionStatement","src":"2684:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2763:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2771:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2759:3:21"},"nodeType":"YulFunctionCall","src":"2759:15:21"},{"hexValue":"742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"2776:17:21","type":"","value":"t be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2752:6:21"},"nodeType":"YulFunctionCall","src":"2752:42:21"},"nodeType":"YulExpressionStatement","src":"2752:42:21"}]},"name":"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2665:6:21","type":""}],"src":"2567:234:21"},{"body":{"nodeType":"YulBlock","src":"2953:220:21","statements":[{"nodeType":"YulAssignment","src":"2963:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3029:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3034:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2970:58:21"},"nodeType":"YulFunctionCall","src":"2970:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2963:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3135:3:21"}],"functionName":{"name":"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","nodeType":"YulIdentifier","src":"3046:88:21"},"nodeType":"YulFunctionCall","src":"3046:93:21"},"nodeType":"YulExpressionStatement","src":"3046:93:21"},{"nodeType":"YulAssignment","src":"3148:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3159:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3164:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3155:3:21"},"nodeType":"YulFunctionCall","src":"3155:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3148:3:21"}]}]},"name":"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2941:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2949:3:21","type":""}],"src":"2807:366:21"},{"body":{"nodeType":"YulBlock","src":"3350:248:21","statements":[{"nodeType":"YulAssignment","src":"3360:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3372:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3383:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3368:3:21"},"nodeType":"YulFunctionCall","src":"3368:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3360:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3418:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3403:3:21"},"nodeType":"YulFunctionCall","src":"3403:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3426:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3422:3:21"},"nodeType":"YulFunctionCall","src":"3422:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3396:6:21"},"nodeType":"YulFunctionCall","src":"3396:47:21"},"nodeType":"YulExpressionStatement","src":"3396:47:21"},{"nodeType":"YulAssignment","src":"3452:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3586:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3460:124:21"},"nodeType":"YulFunctionCall","src":"3460:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3452:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3330:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3345:4:21","type":""}],"src":"3179:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: messenger cannot b\")\n\n        mstore(add(memPtr, 32), \"e address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: other bridge canno\")\n\n        mstore(add(memPtr, 32), \"t be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2233 CODESIZE SUB DUP1 PUSH3 0x2233 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x21B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA8 SWAP1 PUSH3 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11A SWAP1 PUSH3 0x381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP DUP3 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E3 DUP3 PUSH3 0x1B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F5 DUP2 PUSH3 0x1D6 JUMP JUMPDEST DUP2 EQ PUSH3 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x215 DUP2 PUSH3 0x1EA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x235 JUMPI PUSH3 0x234 PUSH3 0x1B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x245 DUP6 DUP3 DUP7 ADD PUSH3 0x204 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x258 DUP6 DUP3 DUP7 ADD PUSH3 0x204 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206D657373656E6765722063616E6E6F742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6520616464726573732830290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D1 PUSH1 0x2C DUP4 PUSH3 0x262 JUMP JUMPDEST SWAP2 POP PUSH3 0x2DE DUP3 PUSH3 0x273 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x304 DUP2 PUSH3 0x2C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206F74686572206272696467652063616E6E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420626520616464726573732830290000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x369 PUSH1 0x2F DUP4 PUSH3 0x262 JUMP JUMPDEST SWAP2 POP PUSH3 0x376 DUP3 PUSH3 0x30B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x39C DUP2 PUSH3 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x1E1A PUSH3 0x419 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x259 ADD MSTORE PUSH1 0x0 PUSH2 0x230 ADD MSTORE PUSH1 0x0 PUSH2 0x207 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2FB ADD MSTORE DUP2 DUP2 PUSH2 0x6C3 ADD MSTORE DUP2 DUP2 PUSH2 0x795 ADD MSTORE PUSH2 0xB44 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1DC ADD MSTORE DUP2 DUP2 PUSH2 0x2A5 ADD MSTORE DUP2 DUP2 PUSH2 0x332 ADD MSTORE DUP2 DUP2 PUSH2 0x6E7 ADD MSTORE PUSH2 0xB08 ADD MSTORE PUSH2 0x1E1A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F46DDB2 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7F46DDB2 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x927EDE2D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xAA557452 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xC89701A2 EQ PUSH2 0x159 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x3687011A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x761F4493 EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 CALLER PUSH2 0x7B9 JUMP JUMPDEST ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D0 DUP7 DUP7 CALLER CALLER DUP9 DUP9 DUP9 DUP9 PUSH2 0x7DC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22B PUSH32 0x0 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x254 PUSH32 0x0 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x27D PUSH32 0x0 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3D7 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40D SWAP1 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AE DUP8 PUSH32 0x74259EBF00000000000000000000000000000000000000000000000000000000 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E4 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD6C0B2C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP3 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F39BF6707B5D608453E0AE4C067B562BCC4C85C0F562EF5D2C774D2E7F131AC DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x788 DUP8 DUP8 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x7DC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD6C0B2C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP9 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP3 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH4 0x761F4493 PUSH1 0xE0 SHL DUP3 DUP12 DUP11 DUP11 DUP11 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAA7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH32 0x0 DUP4 DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7460E2A880F256EBEF3406116FF3EEE0CEE51EBCCDC2A40698F87EBB2E9C1A5 DUP11 DUP11 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xC2F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xCBC JUMPI DUP1 DUP1 PUSH2 0xCA5 SWAP1 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH2 0xCD7 PUSH2 0x1C75 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD0A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD97 JUMPI PUSH1 0x1 DUP3 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xD3E SWAP2 SWAP1 PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD54 JUMPI PUSH2 0xD53 PUSH2 0x1D5F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xD90 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP5 POP PUSH2 0xD0E JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAE DUP4 PUSH2 0xDC8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDC0 JUMPI POP PUSH2 0xDBF DUP4 DUP4 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF4 DUP3 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH2 0xE15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH2 0xE0C DUP3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH2 0xE15 JUMP JUMPDEST ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xEBC JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xEC8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF09 DUP3 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0xEFE JUMP JUMPDEST DUP2 EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF36 DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0xF3C JUMP JUMPDEST DUP2 EQ PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF6C DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xF72 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA8 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0xFAE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x100C JUMPI PUSH2 0x100B PUSH2 0xFB8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP10 DUP3 DUP11 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x104F DUP10 DUP3 DUP11 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1060 DUP10 DUP3 DUP11 ADD PUSH2 0xF5D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1071 DUP10 DUP3 DUP11 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST PUSH2 0x109E DUP10 DUP3 DUP11 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D2 PUSH2 0x10CD PUSH2 0x10C8 DUP5 PUSH2 0xEDE JUMP JUMPDEST PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E4 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F6 DUP3 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1106 DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1121 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1161 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1146 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1192 DUP3 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x119C DUP2 DUP6 PUSH2 0x1132 JUMP JUMPDEST SWAP4 POP PUSH2 0x11AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x11B5 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11DA DUP2 DUP5 PUSH2 0x1187 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x120F DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1220 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1231 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1242 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1253 DUP11 DUP3 DUP12 ADD PUSH2 0xF5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1274 JUMPI PUSH2 0x1273 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST PUSH2 0x1280 DUP11 DUP3 DUP12 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x129A DUP2 PUSH2 0xEFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D9 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E8 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x12F9 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x130A DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x131B DUP11 DUP3 DUP12 ADD PUSH2 0xF5D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x132C DUP11 DUP3 DUP12 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134C PUSH2 0xED9 JUMP JUMPDEST JUMPDEST PUSH2 0x1359 DUP11 DUP3 DUP12 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206163636F756E74206973206E6F7420657874 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726E616C6C79206F776E656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C6 PUSH1 0x2D DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D1 DUP3 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F5 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1412 DUP3 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x141C DUP2 DUP6 PUSH2 0x13FC JUMP JUMPDEST SWAP4 POP PUSH2 0x142C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1143 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146E PUSH1 0x1 DUP4 PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1479 DUP3 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP3 DUP7 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP PUSH2 0x149B DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A7 DUP3 DUP6 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B2 DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BE DUP3 DUP5 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14DA DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14F5 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1504 DUP5 DUP3 DUP6 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A2066756E6374696F6E2063616E206F6E6C7920 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62652063616C6C65642066726F6D20746865206F746865722062726964676500 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1569 PUSH1 0x3F DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1574 DUP3 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1598 DUP2 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A206C6F63616C20746F6B656E2063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F742062652073656C6600000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FB PUSH1 0x2A DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1606 DUP3 PUSH2 0x159F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x162A DUP2 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A206C6F63616C20746F6B656E20696E7465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7266616365206973206E6F7420636F6D706C69616E7400000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168D PUSH1 0x36 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1698 DUP3 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16BC DUP2 PUSH2 0x1680 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A2077726F6E672072656D6F746520746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E20666F72204F7074696D69736D204D696E7461626C652045524337323120 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C6F63616C20746F6B656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 PUSH1 0x4B DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1750 DUP3 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1774 DUP2 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1784 DUP2 PUSH2 0xF3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x179F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x17AC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x177B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP4 DUP6 PUSH2 0x17B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x17EC DUP4 DUP6 DUP5 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x17F5 DUP4 PUSH2 0x1176 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1815 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1822 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x177B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1835 DUP2 DUP5 DUP7 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206E667420726563697069656E742063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206265206164647265737328302900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189C PUSH1 0x30 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18CB DUP2 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A2072656D6F746520746F6B656E2063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652061646472657373283029000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192E PUSH1 0x31 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1939 DUP3 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x195D DUP2 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1979 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A205769746864726177616C206973206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206265696E6720696E69746961746564206279204E4654206F776E65720000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x3E DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A0A DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A2072656D6F746520746F6B656E20646F65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206D6174636820676976656E2076616C7565000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6D PUSH1 0x37 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A78 DUP3 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A9C DUP2 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1AB8 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1AC5 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1AD2 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1ADF PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1AEC PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x177B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 DUP5 DUP7 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B23 DUP3 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x1B2D DUP2 DUP6 PUSH2 0x17B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B3D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1B46 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0xF72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1291 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B87 DUP2 DUP6 PUSH2 0x1B18 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BD8 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1C0A JUMPI PUSH2 0x1C09 PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5A DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CAF DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBA DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1CCD JUMPI PUSH2 0x1CCC PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE3 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEE DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CFE JUMPI PUSH2 0x1CFD PUSH2 0x1C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D14 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1F DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D54 JUMPI PUSH2 0x1D53 PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC3 DUP2 PUSH2 0x1D8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x29 0xD7 DELEGATECALL CREATE 0xE4 ADDMOD PC LT MOD PUSH24 0xD65830D978CADA21E0FC3F93C554597CF084C9481064736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"1120:4263:1:-:0;;;1383:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1452:1;1455;1458;1482:10;1494:12;2745:1:9;2723:24;;:10;:24;;;2715:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2838:1;2814:26;;:12;:26;;;2806:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2936:10;2903:44;;;;;;;;;;2972:12;2957:27;;;;;;;;;;2651:340;;842:6:11;826:22;;;;;;874:6;858:22;;;;;;906:6;890:22;;;;;;726:193;;;1383:131:1;;1120:4263;;88:117:21;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:231::-;1673:34;1669:1;1661:6;1657:14;1650:58;1742:14;1737:2;1729:6;1725:15;1718:39;1533:231;:::o;1770:366::-;1912:3;1933:67;1997:2;1992:3;1933:67;:::i;:::-;1926:74;;2009:93;2098:3;2009:93;:::i;:::-;2127:2;2122:3;2118:12;2111:19;;1770:366;;;:::o;2142:419::-;2308:4;2346:2;2335:9;2331:18;2323:26;;2395:9;2389:4;2385:20;2381:1;2370:9;2366:17;2359:47;2423:131;2549:4;2423:131;:::i;:::-;2415:139;;2142:419;;;:::o;2567:234::-;2707:34;2703:1;2695:6;2691:14;2684:58;2776:17;2771:2;2763:6;2759:15;2752:42;2567:234;:::o;2807:366::-;2949:3;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3046:93;3135:3;3046:93;:::i;:::-;3164:2;3159:3;3155:12;3148:19;;2807:366;;;:::o;3179:419::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3432:9;3426:4;3422:20;3418:1;3407:9;3403:17;3396:47;3460:131;3586:4;3460:131;:::i;:::-;3452:139;;3179:419;;;:::o;1120:4263:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MESSENGER_2055":{"entryPoint":1765,"id":2055,"parameterSlots":0,"returnSlots":0},"@OTHER_BRIDGE_2058":{"entryPoint":1729,"id":2058,"parameterSlots":0,"returnSlots":0},"@_initiateBridgeERC721_400":{"entryPoint":2012,"id":400,"parameterSlots":8,"returnSlots":0},"@_supportsERC165Interface_3662":{"entryPoint":3605,"id":3662,"parameterSlots":2,"returnSlots":1},"@bridgeERC721To_2248":{"entryPoint":1801,"id":2248,"parameterSlots":7,"returnSlots":0},"@bridgeERC721_2210":{"entryPoint":375,"id":2210,"parameterSlots":6,"returnSlots":0},"@finalizeBridgeERC721_303":{"entryPoint":675,"id":303,"parameterSlots":7,"returnSlots":0},"@isContract_2966":{"entryPoint":1977,"id":2966,"parameterSlots":1,"returnSlots":1},"@messenger_2164":{"entryPoint":472,"id":2164,"parameterSlots":0,"returnSlots":1},"@otherBridge_2173":{"entryPoint":1937,"id":2173,"parameterSlots":0,"returnSlots":1},"@supportsERC165_3499":{"entryPoint":3528,"id":3499,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3519":{"entryPoint":3491,"id":3519,"parameterSlots":2,"returnSlots":1},"@toString_3331":{"entryPoint":3139,"id":3331,"parameterSlots":1,"returnSlots":1},"@version_2406":{"entryPoint":512,"id":2406,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3879,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":4029,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":3933,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":3993,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5344,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":4578,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr":{"entryPoint":4795,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr":{"entryPoint":4115,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4753,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":7610,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6099,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6936,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack":{"entryPoint":4349,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad_to_t_string_memory_ptr_fromStack":{"entryPoint":5760,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9_to_t_string_memory_ptr_fromStack":{"entryPoint":6752,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack":{"entryPoint":5049,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f_to_t_string_memory_ptr_fromStack":{"entryPoint":6606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5217,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911_to_t_string_memory_ptr_fromStack":{"entryPoint":5614,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd_to_t_string_memory_ptr_fromStack":{"entryPoint":5944,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack":{"entryPoint":6287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9_to_t_string_memory_ptr_fromStack":{"entryPoint":6433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack":{"entryPoint":5468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6011,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":6993,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5252,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6819,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed":{"entryPoint":7008,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":6026,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6144,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":7625,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed":{"entryPoint":4364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5795,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5649,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5979,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6322,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6468,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5503,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6500,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6925,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4391,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":6067,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4402,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5116,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7433,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7236,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7332,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3838,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7566,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3806,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3900,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":3954,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address":{"entryPoint":4331,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":4313,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":4279,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6084,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4419,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":4269,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7117,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":7384,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7070,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7189,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7519,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7285,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":4019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4014,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4024,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3801,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3796,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4470,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad":{"entryPoint":5681,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9":{"entryPoint":6673,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581":{"entryPoint":4970,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f":{"entryPoint":6527,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf":{"entryPoint":5176,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911":{"entryPoint":5535,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd":{"entryPoint":5827,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186":{"entryPoint":6208,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9":{"entryPoint":6354,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d":{"entryPoint":5389,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3856,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3910,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":3970,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:27326:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"748:87:21","statements":[{"nodeType":"YulAssignment","src":"758:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:21"},"nodeType":"YulFunctionCall","src":"767:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:21"},"nodeType":"YulFunctionCall","src":"796:33:21"},"nodeType":"YulExpressionStatement","src":"796:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:21","type":""}],"src":"696:139:21"},{"body":{"nodeType":"YulBlock","src":"886:32:21","statements":[{"nodeType":"YulAssignment","src":"896:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:21","type":""}],"src":"841:77:21"},{"body":{"nodeType":"YulBlock","src":"967:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:21"},"nodeType":"YulFunctionCall","src":"1026:12:21"},"nodeType":"YulExpressionStatement","src":"1026:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:21"},"nodeType":"YulFunctionCall","src":"997:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:21"},"nodeType":"YulFunctionCall","src":"987:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:21"},"nodeType":"YulFunctionCall","src":"980:43:21"},"nodeType":"YulIf","src":"977:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:21","type":""}],"src":"924:122:21"},{"body":{"nodeType":"YulBlock","src":"1104:87:21","statements":[{"nodeType":"YulAssignment","src":"1114:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:21"},"nodeType":"YulFunctionCall","src":"1123:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:21"},"nodeType":"YulFunctionCall","src":"1152:33:21"},"nodeType":"YulExpressionStatement","src":"1152:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:21","type":""}],"src":"1052:139:21"},{"body":{"nodeType":"YulBlock","src":"1241:49:21","statements":[{"nodeType":"YulAssignment","src":"1251:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1266:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1273:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1262:3:21"},"nodeType":"YulFunctionCall","src":"1262:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1251:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1223:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1233:7:21","type":""}],"src":"1197:93:21"},{"body":{"nodeType":"YulBlock","src":"1338:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"1394:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1403:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1406:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1396:6:21"},"nodeType":"YulFunctionCall","src":"1396:12:21"},"nodeType":"YulExpressionStatement","src":"1396:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1361:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1385:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1368:16:21"},"nodeType":"YulFunctionCall","src":"1368:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1358:2:21"},"nodeType":"YulFunctionCall","src":"1358:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1351:6:21"},"nodeType":"YulFunctionCall","src":"1351:42:21"},"nodeType":"YulIf","src":"1348:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1331:5:21","type":""}],"src":"1296:120:21"},{"body":{"nodeType":"YulBlock","src":"1473:86:21","statements":[{"nodeType":"YulAssignment","src":"1483:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1505:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1492:12:21"},"nodeType":"YulFunctionCall","src":"1492:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1483:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1521:25:21"},"nodeType":"YulFunctionCall","src":"1521:32:21"},"nodeType":"YulExpressionStatement","src":"1521:32:21"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1451:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1459:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1467:5:21","type":""}],"src":"1422:137:21"},{"body":{"nodeType":"YulBlock","src":"1654:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1671:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1674:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1664:6:21"},"nodeType":"YulFunctionCall","src":"1664:12:21"},"nodeType":"YulExpressionStatement","src":"1664:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1565:117:21"},{"body":{"nodeType":"YulBlock","src":"1777:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1797:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1787:6:21"},"nodeType":"YulFunctionCall","src":"1787:12:21"},"nodeType":"YulExpressionStatement","src":"1787:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1688:117:21"},{"body":{"nodeType":"YulBlock","src":"1900:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1917:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1920:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1910:6:21"},"nodeType":"YulFunctionCall","src":"1910:12:21"},"nodeType":"YulExpressionStatement","src":"1910:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1811:117:21"},{"body":{"nodeType":"YulBlock","src":"2021:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"2070:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2072:77:21"},"nodeType":"YulFunctionCall","src":"2072:79:21"},"nodeType":"YulExpressionStatement","src":"2072:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2057:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2045:3:21"},"nodeType":"YulFunctionCall","src":"2045:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2064:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2041:3:21"},"nodeType":"YulFunctionCall","src":"2041:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2034:6:21"},"nodeType":"YulFunctionCall","src":"2034:35:21"},"nodeType":"YulIf","src":"2031:122:21"},{"nodeType":"YulAssignment","src":"2162:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2185:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2172:12:21"},"nodeType":"YulFunctionCall","src":"2172:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2162:6:21"}]},{"body":{"nodeType":"YulBlock","src":"2235:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2237:77:21"},"nodeType":"YulFunctionCall","src":"2237:79:21"},"nodeType":"YulExpressionStatement","src":"2237:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2207:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2215:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2204:2:21"},"nodeType":"YulFunctionCall","src":"2204:30:21"},"nodeType":"YulIf","src":"2201:117:21"},{"nodeType":"YulAssignment","src":"2327:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2343:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2351:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2339:3:21"},"nodeType":"YulFunctionCall","src":"2339:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2327:8:21"}]},{"body":{"nodeType":"YulBlock","src":"2410:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2412:77:21"},"nodeType":"YulFunctionCall","src":"2412:79:21"},"nodeType":"YulExpressionStatement","src":"2412:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2375:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2389:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2397:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2385:3:21"},"nodeType":"YulFunctionCall","src":"2385:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2371:3:21"},"nodeType":"YulFunctionCall","src":"2371:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"2405:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2368:2:21"},"nodeType":"YulFunctionCall","src":"2368:41:21"},"nodeType":"YulIf","src":"2365:128:21"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1988:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1996:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2004:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2014:6:21","type":""}],"src":"1947:552:21"},{"body":{"nodeType":"YulBlock","src":"2657:955:21","statements":[{"body":{"nodeType":"YulBlock","src":"2704:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2706:77:21"},"nodeType":"YulFunctionCall","src":"2706:79:21"},"nodeType":"YulExpressionStatement","src":"2706:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2678:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2674:3:21"},"nodeType":"YulFunctionCall","src":"2674:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2699:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2670:3:21"},"nodeType":"YulFunctionCall","src":"2670:33:21"},"nodeType":"YulIf","src":"2667:120:21"},{"nodeType":"YulBlock","src":"2797:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2812:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2826:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2816:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2841:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2887:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:21"},"nodeType":"YulFunctionCall","src":"2872:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2896:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2851:20:21"},"nodeType":"YulFunctionCall","src":"2851:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2841:6:21"}]}]},{"nodeType":"YulBlock","src":"2924:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2939:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2953:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2943:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2969:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3015:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:21"},"nodeType":"YulFunctionCall","src":"3000:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3024:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2979:20:21"},"nodeType":"YulFunctionCall","src":"2979:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2969:6:21"}]}]},{"nodeType":"YulBlock","src":"3052:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3067:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3081:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3071:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3097:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3132:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3143:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3128:3:21"},"nodeType":"YulFunctionCall","src":"3128:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3152:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3107:20:21"},"nodeType":"YulFunctionCall","src":"3107:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3097:6:21"}]}]},{"nodeType":"YulBlock","src":"3180:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3195:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3209:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3199:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3225:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3259:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3270:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3255:3:21"},"nodeType":"YulFunctionCall","src":"3255:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3279:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3235:19:21"},"nodeType":"YulFunctionCall","src":"3235:52:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3225:6:21"}]}]},{"nodeType":"YulBlock","src":"3307:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3322:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3353:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3364:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3349:3:21"},"nodeType":"YulFunctionCall","src":"3349:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3336:12:21"},"nodeType":"YulFunctionCall","src":"3336:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3326:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3416:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3418:77:21"},"nodeType":"YulFunctionCall","src":"3418:79:21"},"nodeType":"YulExpressionStatement","src":"3418:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3388:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3396:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3385:2:21"},"nodeType":"YulFunctionCall","src":"3385:30:21"},"nodeType":"YulIf","src":"3382:117:21"},{"nodeType":"YulAssignment","src":"3513:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3567:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3578:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:21"},"nodeType":"YulFunctionCall","src":"3563:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3587:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3531:31:21"},"nodeType":"YulFunctionCall","src":"3531:64:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3513:6:21"},{"name":"value5","nodeType":"YulIdentifier","src":"3521:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2587:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2598:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2610:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2618:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2626:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2634:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2642:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2650:6:21","type":""}],"src":"2505:1107:21"},{"body":{"nodeType":"YulBlock","src":"3650:28:21","statements":[{"nodeType":"YulAssignment","src":"3660:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3667:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3660:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3636:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3646:3:21","type":""}],"src":"3618:60:21"},{"body":{"nodeType":"YulBlock","src":"3744:82:21","statements":[{"nodeType":"YulAssignment","src":"3754:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3812:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3794:17:21"},"nodeType":"YulFunctionCall","src":"3794:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3785:8:21"},"nodeType":"YulFunctionCall","src":"3785:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3767:17:21"},"nodeType":"YulFunctionCall","src":"3767:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3754:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3734:9:21","type":""}],"src":"3684:142:21"},{"body":{"nodeType":"YulBlock","src":"3892:66:21","statements":[{"nodeType":"YulAssignment","src":"3902:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3946:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3915:30:21"},"nodeType":"YulFunctionCall","src":"3915:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3902:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3872:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3882:9:21","type":""}],"src":"3832:126:21"},{"body":{"nodeType":"YulBlock","src":"4053:66:21","statements":[{"nodeType":"YulAssignment","src":"4063:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4107:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4076:30:21"},"nodeType":"YulFunctionCall","src":"4076:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4063:9:21"}]}]},"name":"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4033:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4043:9:21","type":""}],"src":"3964:155:21"},{"body":{"nodeType":"YulBlock","src":"4219:95:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4236:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4301:5:21"}],"functionName":{"name":"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address","nodeType":"YulIdentifier","src":"4241:59:21"},"nodeType":"YulFunctionCall","src":"4241:66:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4229:6:21"},"nodeType":"YulFunctionCall","src":"4229:79:21"},"nodeType":"YulExpressionStatement","src":"4229:79:21"}]},"name":"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4207:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4214:3:21","type":""}],"src":"4125:189:21"},{"body":{"nodeType":"YulBlock","src":"4447:153:21","statements":[{"nodeType":"YulAssignment","src":"4457:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4480:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:21"},"nodeType":"YulFunctionCall","src":"4465:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4457:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4566:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4579:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4575:3:21"},"nodeType":"YulFunctionCall","src":"4575:17:21"}],"functionName":{"name":"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4493:72:21"},"nodeType":"YulFunctionCall","src":"4493:100:21"},"nodeType":"YulExpressionStatement","src":"4493:100:21"}]},"name":"abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4419:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4431:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4442:4:21","type":""}],"src":"4320:280:21"},{"body":{"nodeType":"YulBlock","src":"4665:40:21","statements":[{"nodeType":"YulAssignment","src":"4676:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4692:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4686:5:21"},"nodeType":"YulFunctionCall","src":"4686:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4676:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4648:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4658:6:21","type":""}],"src":"4606:99:21"},{"body":{"nodeType":"YulBlock","src":"4807:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4824:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"4829:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4817:6:21"},"nodeType":"YulFunctionCall","src":"4817:19:21"},"nodeType":"YulExpressionStatement","src":"4817:19:21"},{"nodeType":"YulAssignment","src":"4845:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4864:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4869:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4860:3:21"},"nodeType":"YulFunctionCall","src":"4860:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4845:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4779:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"4784:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4795:11:21","type":""}],"src":"4711:169:21"},{"body":{"nodeType":"YulBlock","src":"4935:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4945:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4954:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4949:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5014:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5039:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5044:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:21"},"nodeType":"YulFunctionCall","src":"5035:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5058:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5063:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5054:3:21"},"nodeType":"YulFunctionCall","src":"5054:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5048:5:21"},"nodeType":"YulFunctionCall","src":"5048:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5028:6:21"},"nodeType":"YulFunctionCall","src":"5028:39:21"},"nodeType":"YulExpressionStatement","src":"5028:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4975:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"4978:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4972:2:21"},"nodeType":"YulFunctionCall","src":"4972:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4986:19:21","statements":[{"nodeType":"YulAssignment","src":"4988:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4997:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5000:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4993:3:21"},"nodeType":"YulFunctionCall","src":"4993:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4988:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4968:3:21","statements":[]},"src":"4964:113:21"},{"body":{"nodeType":"YulBlock","src":"5111:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5161:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5166:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:21"},"nodeType":"YulFunctionCall","src":"5157:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"5175:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5150:6:21"},"nodeType":"YulFunctionCall","src":"5150:27:21"},"nodeType":"YulExpressionStatement","src":"5150:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5092:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"5095:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5089:2:21"},"nodeType":"YulFunctionCall","src":"5089:13:21"},"nodeType":"YulIf","src":"5086:101:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4917:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4922:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"4927:6:21","type":""}],"src":"4886:307:21"},{"body":{"nodeType":"YulBlock","src":"5247:54:21","statements":[{"nodeType":"YulAssignment","src":"5257:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5275:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5282:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5271:3:21"},"nodeType":"YulFunctionCall","src":"5271:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5291:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5287:3:21"},"nodeType":"YulFunctionCall","src":"5287:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5267:3:21"},"nodeType":"YulFunctionCall","src":"5267:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5257:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5230:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5240:6:21","type":""}],"src":"5199:102:21"},{"body":{"nodeType":"YulBlock","src":"5399:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5409:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5456:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5423:32:21"},"nodeType":"YulFunctionCall","src":"5423:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5413:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5471:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5537:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5542:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5478:58:21"},"nodeType":"YulFunctionCall","src":"5478:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5471:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5584:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5591:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5580:3:21"},"nodeType":"YulFunctionCall","src":"5580:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5598:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5603:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5558:21:21"},"nodeType":"YulFunctionCall","src":"5558:52:21"},"nodeType":"YulExpressionStatement","src":"5558:52:21"},{"nodeType":"YulAssignment","src":"5619:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5630:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5657:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5635:21:21"},"nodeType":"YulFunctionCall","src":"5635:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5626:3:21"},"nodeType":"YulFunctionCall","src":"5626:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5619:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5380:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5387:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5395:3:21","type":""}],"src":"5307:364:21"},{"body":{"nodeType":"YulBlock","src":"5795:195:21","statements":[{"nodeType":"YulAssignment","src":"5805:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5817:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5828:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:21"},"nodeType":"YulFunctionCall","src":"5813:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5805:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5852:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5848:3:21"},"nodeType":"YulFunctionCall","src":"5848:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5871:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5877:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5867:3:21"},"nodeType":"YulFunctionCall","src":"5867:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5841:6:21"},"nodeType":"YulFunctionCall","src":"5841:47:21"},"nodeType":"YulExpressionStatement","src":"5841:47:21"},{"nodeType":"YulAssignment","src":"5897:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5969:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"5978:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5905:63:21"},"nodeType":"YulFunctionCall","src":"5905:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5897:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5767:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5779:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5790:4:21","type":""}],"src":"5677:313:21"},{"body":{"nodeType":"YulBlock","src":"6166:1085:21","statements":[{"body":{"nodeType":"YulBlock","src":"6213:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6215:77:21"},"nodeType":"YulFunctionCall","src":"6215:79:21"},"nodeType":"YulExpressionStatement","src":"6215:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6187:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6183:3:21"},"nodeType":"YulFunctionCall","src":"6183:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6208:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6179:3:21"},"nodeType":"YulFunctionCall","src":"6179:33:21"},"nodeType":"YulIf","src":"6176:120:21"},{"nodeType":"YulBlock","src":"6306:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6321:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6335:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6325:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6350:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6385:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6396:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6381:3:21"},"nodeType":"YulFunctionCall","src":"6381:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6405:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6360:20:21"},"nodeType":"YulFunctionCall","src":"6360:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6350:6:21"}]}]},{"nodeType":"YulBlock","src":"6433:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6448:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6462:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6452:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6478:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6513:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6524:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6509:3:21"},"nodeType":"YulFunctionCall","src":"6509:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6533:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6488:20:21"},"nodeType":"YulFunctionCall","src":"6488:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6478:6:21"}]}]},{"nodeType":"YulBlock","src":"6561:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6576:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6590:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6580:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6606:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6641:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6652:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6637:3:21"},"nodeType":"YulFunctionCall","src":"6637:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6661:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6616:20:21"},"nodeType":"YulFunctionCall","src":"6616:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6606:6:21"}]}]},{"nodeType":"YulBlock","src":"6689:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6704:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6718:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6708:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6734:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6769:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6780:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6765:3:21"},"nodeType":"YulFunctionCall","src":"6765:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6789:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6744:20:21"},"nodeType":"YulFunctionCall","src":"6744:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6734:6:21"}]}]},{"nodeType":"YulBlock","src":"6817:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6832:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6846:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6836:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6863:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6898:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6909:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6894:3:21"},"nodeType":"YulFunctionCall","src":"6894:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6918:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6873:20:21"},"nodeType":"YulFunctionCall","src":"6873:53:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6863:6:21"}]}]},{"nodeType":"YulBlock","src":"6946:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6961:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7003:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:21"},"nodeType":"YulFunctionCall","src":"6988:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6975:12:21"},"nodeType":"YulFunctionCall","src":"6975:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6965:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"7055:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7057:77:21"},"nodeType":"YulFunctionCall","src":"7057:79:21"},"nodeType":"YulExpressionStatement","src":"7057:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7027:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"7035:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7024:2:21"},"nodeType":"YulFunctionCall","src":"7024:30:21"},"nodeType":"YulIf","src":"7021:117:21"},{"nodeType":"YulAssignment","src":"7152:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7206:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7217:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7202:3:21"},"nodeType":"YulFunctionCall","src":"7202:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7226:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"7170:31:21"},"nodeType":"YulFunctionCall","src":"7170:64:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7152:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"7160:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6088:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6099:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6111:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6119:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6127:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6135:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6143:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6151:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6159:6:21","type":""}],"src":"5996:1255:21"},{"body":{"nodeType":"YulBlock","src":"7322:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7339:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7362:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7344:17:21"},"nodeType":"YulFunctionCall","src":"7344:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7332:6:21"},"nodeType":"YulFunctionCall","src":"7332:37:21"},"nodeType":"YulExpressionStatement","src":"7332:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7310:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7317:3:21","type":""}],"src":"7257:118:21"},{"body":{"nodeType":"YulBlock","src":"7479:124:21","statements":[{"nodeType":"YulAssignment","src":"7489:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7501:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7512:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7497:3:21"},"nodeType":"YulFunctionCall","src":"7497:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7489:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7569:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7582:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7593:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7578:3:21"},"nodeType":"YulFunctionCall","src":"7578:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7525:43:21"},"nodeType":"YulFunctionCall","src":"7525:71:21"},"nodeType":"YulExpressionStatement","src":"7525:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7451:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7463:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7474:4:21","type":""}],"src":"7381:222:21"},{"body":{"nodeType":"YulBlock","src":"7778:1084:21","statements":[{"body":{"nodeType":"YulBlock","src":"7825:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7827:77:21"},"nodeType":"YulFunctionCall","src":"7827:79:21"},"nodeType":"YulExpressionStatement","src":"7827:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7799:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7808:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7795:3:21"},"nodeType":"YulFunctionCall","src":"7795:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7820:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7791:3:21"},"nodeType":"YulFunctionCall","src":"7791:33:21"},"nodeType":"YulIf","src":"7788:120:21"},{"nodeType":"YulBlock","src":"7918:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7933:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7947:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7937:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7962:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7997:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8008:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7993:3:21"},"nodeType":"YulFunctionCall","src":"7993:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8017:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7972:20:21"},"nodeType":"YulFunctionCall","src":"7972:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7962:6:21"}]}]},{"nodeType":"YulBlock","src":"8045:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8060:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8074:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8064:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8090:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8125:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8136:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8121:3:21"},"nodeType":"YulFunctionCall","src":"8121:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8145:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8100:20:21"},"nodeType":"YulFunctionCall","src":"8100:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8090:6:21"}]}]},{"nodeType":"YulBlock","src":"8173:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8188:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8202:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8192:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8218:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8253:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8264:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8249:3:21"},"nodeType":"YulFunctionCall","src":"8249:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8273:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8228:20:21"},"nodeType":"YulFunctionCall","src":"8228:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8218:6:21"}]}]},{"nodeType":"YulBlock","src":"8301:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8316:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8330:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8320:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8346:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8381:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8392:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8377:3:21"},"nodeType":"YulFunctionCall","src":"8377:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8401:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8356:20:21"},"nodeType":"YulFunctionCall","src":"8356:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"8346:6:21"}]}]},{"nodeType":"YulBlock","src":"8429:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8444:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8458:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8448:6:21","type":""}]},{"nodeType":"YulAssignment","src":"8475:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8509:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8520:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8505:3:21"},"nodeType":"YulFunctionCall","src":"8505:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8529:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"8485:19:21"},"nodeType":"YulFunctionCall","src":"8485:52:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8475:6:21"}]}]},{"nodeType":"YulBlock","src":"8557:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8572:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8603:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8614:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8599:3:21"},"nodeType":"YulFunctionCall","src":"8599:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8586:12:21"},"nodeType":"YulFunctionCall","src":"8586:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8576:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8666:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8668:77:21"},"nodeType":"YulFunctionCall","src":"8668:79:21"},"nodeType":"YulExpressionStatement","src":"8668:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8638:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8646:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8635:2:21"},"nodeType":"YulFunctionCall","src":"8635:30:21"},"nodeType":"YulIf","src":"8632:117:21"},{"nodeType":"YulAssignment","src":"8763:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8828:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:21"},"nodeType":"YulFunctionCall","src":"8813:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8837:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"8781:31:21"},"nodeType":"YulFunctionCall","src":"8781:64:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8763:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"8771:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7700:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7711:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7723:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7731:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7739:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7747:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7755:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7763:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7771:6:21","type":""}],"src":"7609:1253:21"},{"body":{"nodeType":"YulBlock","src":"8974:126:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8996:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9004:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8992:3:21"},"nodeType":"YulFunctionCall","src":"8992:14:21"},{"hexValue":"4552433732314272696467653a206163636f756e74206973206e6f7420657874","kind":"string","nodeType":"YulLiteral","src":"9008:34:21","type":"","value":"ERC721Bridge: account is not ext"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8985:6:21"},"nodeType":"YulFunctionCall","src":"8985:58:21"},"nodeType":"YulExpressionStatement","src":"8985:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9064:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9072:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9060:3:21"},"nodeType":"YulFunctionCall","src":"9060:15:21"},{"hexValue":"65726e616c6c79206f776e6564","kind":"string","nodeType":"YulLiteral","src":"9077:15:21","type":"","value":"ernally owned"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9053:6:21"},"nodeType":"YulFunctionCall","src":"9053:40:21"},"nodeType":"YulExpressionStatement","src":"9053:40:21"}]},"name":"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8966:6:21","type":""}],"src":"8868:232:21"},{"body":{"nodeType":"YulBlock","src":"9252:220:21","statements":[{"nodeType":"YulAssignment","src":"9262:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9328:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9333:2:21","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9269:58:21"},"nodeType":"YulFunctionCall","src":"9269:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9262:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9434:3:21"}],"functionName":{"name":"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","nodeType":"YulIdentifier","src":"9345:88:21"},"nodeType":"YulFunctionCall","src":"9345:93:21"},"nodeType":"YulExpressionStatement","src":"9345:93:21"},{"nodeType":"YulAssignment","src":"9447:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9458:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9463:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9454:3:21"},"nodeType":"YulFunctionCall","src":"9454:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9447:3:21"}]}]},"name":"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9240:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9248:3:21","type":""}],"src":"9106:366:21"},{"body":{"nodeType":"YulBlock","src":"9649:248:21","statements":[{"nodeType":"YulAssignment","src":"9659:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9671:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9682:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9667:3:21"},"nodeType":"YulFunctionCall","src":"9667:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9659:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9706:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9717:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9702:3:21"},"nodeType":"YulFunctionCall","src":"9702:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9725:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"9731:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9721:3:21"},"nodeType":"YulFunctionCall","src":"9721:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9695:6:21"},"nodeType":"YulFunctionCall","src":"9695:47:21"},"nodeType":"YulExpressionStatement","src":"9695:47:21"},{"nodeType":"YulAssignment","src":"9751:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9885:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9759:124:21"},"nodeType":"YulFunctionCall","src":"9759:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9751:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9629:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9644:4:21","type":""}],"src":"9478:419:21"},{"body":{"nodeType":"YulBlock","src":"10017:34:21","statements":[{"nodeType":"YulAssignment","src":"10027:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"10042:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10027:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9989:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"9994:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10005:11:21","type":""}],"src":"9903:148:21"},{"body":{"nodeType":"YulBlock","src":"10167:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"10177:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10224:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10191:32:21"},"nodeType":"YulFunctionCall","src":"10191:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10181:6:21","type":""}]},{"nodeType":"YulAssignment","src":"10239:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10323:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10328:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10246:76:21"},"nodeType":"YulFunctionCall","src":"10246:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10239:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10370:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"10377:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10366:3:21"},"nodeType":"YulFunctionCall","src":"10366:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"10384:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10389:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"10344:21:21"},"nodeType":"YulFunctionCall","src":"10344:52:21"},"nodeType":"YulExpressionStatement","src":"10344:52:21"},{"nodeType":"YulAssignment","src":"10405:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10416:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"10421:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10412:3:21"},"nodeType":"YulFunctionCall","src":"10412:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10405:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10148:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10155:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10163:3:21","type":""}],"src":"10057:377:21"},{"body":{"nodeType":"YulBlock","src":"10546:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10568:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10576:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10564:3:21"},"nodeType":"YulFunctionCall","src":"10564:14:21"},{"hexValue":"2e","kind":"string","nodeType":"YulLiteral","src":"10580:3:21","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10557:6:21"},"nodeType":"YulFunctionCall","src":"10557:27:21"},"nodeType":"YulExpressionStatement","src":"10557:27:21"}]},"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10538:6:21","type":""}],"src":"10440:151:21"},{"body":{"nodeType":"YulBlock","src":"10761:236:21","statements":[{"nodeType":"YulAssignment","src":"10771:91:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10855:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10860:1:21","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"10778:76:21"},"nodeType":"YulFunctionCall","src":"10778:84:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10771:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10960:3:21"}],"functionName":{"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulIdentifier","src":"10871:88:21"},"nodeType":"YulFunctionCall","src":"10871:93:21"},"nodeType":"YulExpressionStatement","src":"10871:93:21"},{"nodeType":"YulAssignment","src":"10973:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10984:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10989:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10980:3:21"},"nodeType":"YulFunctionCall","src":"10980:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10973:3:21"}]}]},"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10749:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10757:3:21","type":""}],"src":"10597:400:21"},{"body":{"nodeType":"YulBlock","src":"11437:693:21","statements":[{"nodeType":"YulAssignment","src":"11448:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11537:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11546:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11455:81:21"},"nodeType":"YulFunctionCall","src":"11455:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11448:3:21"}]},{"nodeType":"YulAssignment","src":"11560:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11711:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11567:142:21"},"nodeType":"YulFunctionCall","src":"11567:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11560:3:21"}]},{"nodeType":"YulAssignment","src":"11725:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11814:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11823:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11732:81:21"},"nodeType":"YulFunctionCall","src":"11732:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11725:3:21"}]},{"nodeType":"YulAssignment","src":"11837:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11988:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11844:142:21"},"nodeType":"YulFunctionCall","src":"11844:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11837:3:21"}]},{"nodeType":"YulAssignment","src":"12002:102:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12091:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"12100:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12009:81:21"},"nodeType":"YulFunctionCall","src":"12009:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12002:3:21"}]},{"nodeType":"YulAssignment","src":"12114:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"12121:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12114:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11400:3:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11406:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11414:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11422:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11433:3:21","type":""}],"src":"11003:1127:21"},{"body":{"nodeType":"YulBlock","src":"12199:80:21","statements":[{"nodeType":"YulAssignment","src":"12209:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12224:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12218:5:21"},"nodeType":"YulFunctionCall","src":"12218:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12209:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12267:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"12240:26:21"},"nodeType":"YulFunctionCall","src":"12240:33:21"},"nodeType":"YulExpressionStatement","src":"12240:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12177:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"12185:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"12193:5:21","type":""}],"src":"12136:143:21"},{"body":{"nodeType":"YulBlock","src":"12362:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"12408:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12410:77:21"},"nodeType":"YulFunctionCall","src":"12410:79:21"},"nodeType":"YulExpressionStatement","src":"12410:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12383:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"12392:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12379:3:21"},"nodeType":"YulFunctionCall","src":"12379:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"12404:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12375:3:21"},"nodeType":"YulFunctionCall","src":"12375:32:21"},"nodeType":"YulIf","src":"12372:119:21"},{"nodeType":"YulBlock","src":"12501:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"12516:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"12530:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12520:6:21","type":""}]},{"nodeType":"YulAssignment","src":"12545:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12591:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"12602:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12587:3:21"},"nodeType":"YulFunctionCall","src":"12587:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12611:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"12555:31:21"},"nodeType":"YulFunctionCall","src":"12555:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12545:6:21"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12332:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12343:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12355:6:21","type":""}],"src":"12285:351:21"},{"body":{"nodeType":"YulBlock","src":"12748:144:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12770:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12778:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12766:3:21"},"nodeType":"YulFunctionCall","src":"12766:14:21"},{"hexValue":"4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c7920","kind":"string","nodeType":"YulLiteral","src":"12782:34:21","type":"","value":"ERC721Bridge: function can only "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12759:6:21"},"nodeType":"YulFunctionCall","src":"12759:58:21"},"nodeType":"YulExpressionStatement","src":"12759:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12838:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"12846:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12834:3:21"},"nodeType":"YulFunctionCall","src":"12834:15:21"},{"hexValue":"62652063616c6c65642066726f6d20746865206f7468657220627269646765","kind":"string","nodeType":"YulLiteral","src":"12851:33:21","type":"","value":"be called from the other bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12827:6:21"},"nodeType":"YulFunctionCall","src":"12827:58:21"},"nodeType":"YulExpressionStatement","src":"12827:58:21"}]},"name":"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12740:6:21","type":""}],"src":"12642:250:21"},{"body":{"nodeType":"YulBlock","src":"13044:220:21","statements":[{"nodeType":"YulAssignment","src":"13054:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13120:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13125:2:21","type":"","value":"63"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13061:58:21"},"nodeType":"YulFunctionCall","src":"13061:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13054:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13226:3:21"}],"functionName":{"name":"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","nodeType":"YulIdentifier","src":"13137:88:21"},"nodeType":"YulFunctionCall","src":"13137:93:21"},"nodeType":"YulExpressionStatement","src":"13137:93:21"},{"nodeType":"YulAssignment","src":"13239:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13250:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"13255:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13246:3:21"},"nodeType":"YulFunctionCall","src":"13246:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13239:3:21"}]}]},"name":"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13032:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13040:3:21","type":""}],"src":"12898:366:21"},{"body":{"nodeType":"YulBlock","src":"13441:248:21","statements":[{"nodeType":"YulAssignment","src":"13451:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13463:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13474:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13459:3:21"},"nodeType":"YulFunctionCall","src":"13459:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13451:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13498:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"13509:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13494:3:21"},"nodeType":"YulFunctionCall","src":"13494:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13517:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13523:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13513:3:21"},"nodeType":"YulFunctionCall","src":"13513:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13487:6:21"},"nodeType":"YulFunctionCall","src":"13487:47:21"},"nodeType":"YulExpressionStatement","src":"13487:47:21"},{"nodeType":"YulAssignment","src":"13543:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13677:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13551:124:21"},"nodeType":"YulFunctionCall","src":"13551:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13543:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13421:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13436:4:21","type":""}],"src":"13270:419:21"},{"body":{"nodeType":"YulBlock","src":"13801:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13823:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13831:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13819:3:21"},"nodeType":"YulFunctionCall","src":"13819:14:21"},{"hexValue":"4c324552433732314272696467653a206c6f63616c20746f6b656e2063616e6e","kind":"string","nodeType":"YulLiteral","src":"13835:34:21","type":"","value":"L2ERC721Bridge: local token cann"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13812:6:21"},"nodeType":"YulFunctionCall","src":"13812:58:21"},"nodeType":"YulExpressionStatement","src":"13812:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13891:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13899:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13887:3:21"},"nodeType":"YulFunctionCall","src":"13887:15:21"},{"hexValue":"6f742062652073656c66","kind":"string","nodeType":"YulLiteral","src":"13904:12:21","type":"","value":"ot be self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13880:6:21"},"nodeType":"YulFunctionCall","src":"13880:37:21"},"nodeType":"YulExpressionStatement","src":"13880:37:21"}]},"name":"store_literal_in_memory_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13793:6:21","type":""}],"src":"13695:229:21"},{"body":{"nodeType":"YulBlock","src":"14076:220:21","statements":[{"nodeType":"YulAssignment","src":"14086:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14152:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14157:2:21","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14093:58:21"},"nodeType":"YulFunctionCall","src":"14093:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14086:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14258:3:21"}],"functionName":{"name":"store_literal_in_memory_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911","nodeType":"YulIdentifier","src":"14169:88:21"},"nodeType":"YulFunctionCall","src":"14169:93:21"},"nodeType":"YulExpressionStatement","src":"14169:93:21"},{"nodeType":"YulAssignment","src":"14271:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14282:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14287:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14278:3:21"},"nodeType":"YulFunctionCall","src":"14278:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14271:3:21"}]}]},"name":"abi_encode_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14064:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14072:3:21","type":""}],"src":"13930:366:21"},{"body":{"nodeType":"YulBlock","src":"14473:248:21","statements":[{"nodeType":"YulAssignment","src":"14483:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14495:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14506:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:21"},"nodeType":"YulFunctionCall","src":"14491:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14483:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14530:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14541:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14526:3:21"},"nodeType":"YulFunctionCall","src":"14526:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14549:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14555:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14545:3:21"},"nodeType":"YulFunctionCall","src":"14545:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14519:6:21"},"nodeType":"YulFunctionCall","src":"14519:47:21"},"nodeType":"YulExpressionStatement","src":"14519:47:21"},{"nodeType":"YulAssignment","src":"14575:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14709:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14583:124:21"},"nodeType":"YulFunctionCall","src":"14583:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14575:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14453:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14468:4:21","type":""}],"src":"14302:419:21"},{"body":{"nodeType":"YulBlock","src":"14833:135:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14855:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14863:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14851:3:21"},"nodeType":"YulFunctionCall","src":"14851:14:21"},{"hexValue":"4c324552433732314272696467653a206c6f63616c20746f6b656e20696e7465","kind":"string","nodeType":"YulLiteral","src":"14867:34:21","type":"","value":"L2ERC721Bridge: local token inte"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14844:6:21"},"nodeType":"YulFunctionCall","src":"14844:58:21"},"nodeType":"YulExpressionStatement","src":"14844:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14923:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14931:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14919:3:21"},"nodeType":"YulFunctionCall","src":"14919:15:21"},{"hexValue":"7266616365206973206e6f7420636f6d706c69616e74","kind":"string","nodeType":"YulLiteral","src":"14936:24:21","type":"","value":"rface is not compliant"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14912:6:21"},"nodeType":"YulFunctionCall","src":"14912:49:21"},"nodeType":"YulExpressionStatement","src":"14912:49:21"}]},"name":"store_literal_in_memory_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14825:6:21","type":""}],"src":"14727:241:21"},{"body":{"nodeType":"YulBlock","src":"15120:220:21","statements":[{"nodeType":"YulAssignment","src":"15130:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15196:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15201:2:21","type":"","value":"54"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15137:58:21"},"nodeType":"YulFunctionCall","src":"15137:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15130:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15302:3:21"}],"functionName":{"name":"store_literal_in_memory_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad","nodeType":"YulIdentifier","src":"15213:88:21"},"nodeType":"YulFunctionCall","src":"15213:93:21"},"nodeType":"YulExpressionStatement","src":"15213:93:21"},{"nodeType":"YulAssignment","src":"15315:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15326:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15331:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15322:3:21"},"nodeType":"YulFunctionCall","src":"15322:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15315:3:21"}]}]},"name":"abi_encode_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15108:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15116:3:21","type":""}],"src":"14974:366:21"},{"body":{"nodeType":"YulBlock","src":"15517:248:21","statements":[{"nodeType":"YulAssignment","src":"15527:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15539:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15550:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15535:3:21"},"nodeType":"YulFunctionCall","src":"15535:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15527:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15574:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15585:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15570:3:21"},"nodeType":"YulFunctionCall","src":"15570:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15593:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15599:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15589:3:21"},"nodeType":"YulFunctionCall","src":"15589:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15563:6:21"},"nodeType":"YulFunctionCall","src":"15563:47:21"},"nodeType":"YulExpressionStatement","src":"15563:47:21"},{"nodeType":"YulAssignment","src":"15619:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15753:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15627:124:21"},"nodeType":"YulFunctionCall","src":"15627:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15619:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15497:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15512:4:21","type":""}],"src":"15346:419:21"},{"body":{"nodeType":"YulBlock","src":"15877:193:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15899:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15907:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15895:3:21"},"nodeType":"YulFunctionCall","src":"15895:14:21"},{"hexValue":"4c324552433732314272696467653a2077726f6e672072656d6f746520746f6b","kind":"string","nodeType":"YulLiteral","src":"15911:34:21","type":"","value":"L2ERC721Bridge: wrong remote tok"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15888:6:21"},"nodeType":"YulFunctionCall","src":"15888:58:21"},"nodeType":"YulExpressionStatement","src":"15888:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15967:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15975:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15963:3:21"},"nodeType":"YulFunctionCall","src":"15963:15:21"},{"hexValue":"656e20666f72204f7074696d69736d204d696e7461626c652045524337323120","kind":"string","nodeType":"YulLiteral","src":"15980:34:21","type":"","value":"en for Optimism Mintable ERC721 "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15956:6:21"},"nodeType":"YulFunctionCall","src":"15956:59:21"},"nodeType":"YulExpressionStatement","src":"15956:59:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16036:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"16044:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16032:3:21"},"nodeType":"YulFunctionCall","src":"16032:15:21"},{"hexValue":"6c6f63616c20746f6b656e","kind":"string","nodeType":"YulLiteral","src":"16049:13:21","type":"","value":"local token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16025:6:21"},"nodeType":"YulFunctionCall","src":"16025:38:21"},"nodeType":"YulExpressionStatement","src":"16025:38:21"}]},"name":"store_literal_in_memory_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15869:6:21","type":""}],"src":"15771:299:21"},{"body":{"nodeType":"YulBlock","src":"16222:220:21","statements":[{"nodeType":"YulAssignment","src":"16232:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16298:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16303:2:21","type":"","value":"75"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16239:58:21"},"nodeType":"YulFunctionCall","src":"16239:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16232:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16404:3:21"}],"functionName":{"name":"store_literal_in_memory_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd","nodeType":"YulIdentifier","src":"16315:88:21"},"nodeType":"YulFunctionCall","src":"16315:93:21"},"nodeType":"YulExpressionStatement","src":"16315:93:21"},{"nodeType":"YulAssignment","src":"16417:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16428:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16433:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16424:3:21"},"nodeType":"YulFunctionCall","src":"16424:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16417:3:21"}]}]},"name":"abi_encode_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16210:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16218:3:21","type":""}],"src":"16076:366:21"},{"body":{"nodeType":"YulBlock","src":"16619:248:21","statements":[{"nodeType":"YulAssignment","src":"16629:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16641:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16652:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16637:3:21"},"nodeType":"YulFunctionCall","src":"16637:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16629:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16676:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16687:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:21"},"nodeType":"YulFunctionCall","src":"16672:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16695:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16701:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16691:3:21"},"nodeType":"YulFunctionCall","src":"16691:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16665:6:21"},"nodeType":"YulFunctionCall","src":"16665:47:21"},"nodeType":"YulExpressionStatement","src":"16665:47:21"},{"nodeType":"YulAssignment","src":"16721:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16855:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16729:124:21"},"nodeType":"YulFunctionCall","src":"16729:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16721:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16599:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16614:4:21","type":""}],"src":"16448:419:21"},{"body":{"nodeType":"YulBlock","src":"16938:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16955:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16978:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16960:17:21"},"nodeType":"YulFunctionCall","src":"16960:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16948:6:21"},"nodeType":"YulFunctionCall","src":"16948:37:21"},"nodeType":"YulExpressionStatement","src":"16948:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16926:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16933:3:21","type":""}],"src":"16873:118:21"},{"body":{"nodeType":"YulBlock","src":"17123:206:21","statements":[{"nodeType":"YulAssignment","src":"17133:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17145:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17156:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17141:3:21"},"nodeType":"YulFunctionCall","src":"17141:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17133:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17213:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17226:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17237:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17222:3:21"},"nodeType":"YulFunctionCall","src":"17222:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17169:43:21"},"nodeType":"YulFunctionCall","src":"17169:71:21"},"nodeType":"YulExpressionStatement","src":"17169:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17294:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17307:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17318:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17303:3:21"},"nodeType":"YulFunctionCall","src":"17303:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17250:43:21"},"nodeType":"YulFunctionCall","src":"17250:72:21"},"nodeType":"YulExpressionStatement","src":"17250:72:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17087:9:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17099:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17107:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17118:4:21","type":""}],"src":"16997:332:21"},{"body":{"nodeType":"YulBlock","src":"17430:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17447:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17452:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17440:6:21"},"nodeType":"YulFunctionCall","src":"17440:19:21"},"nodeType":"YulExpressionStatement","src":"17440:19:21"},{"nodeType":"YulAssignment","src":"17468:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17487:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17492:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17483:3:21"},"nodeType":"YulFunctionCall","src":"17483:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17468:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17402:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17407:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17418:11:21","type":""}],"src":"17335:168:21"},{"body":{"nodeType":"YulBlock","src":"17560:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17583:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"17588:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17593:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17570:12:21"},"nodeType":"YulFunctionCall","src":"17570:30:21"},"nodeType":"YulExpressionStatement","src":"17570:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17641:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17646:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17637:3:21"},"nodeType":"YulFunctionCall","src":"17637:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"17655:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17630:6:21"},"nodeType":"YulFunctionCall","src":"17630:27:21"},"nodeType":"YulExpressionStatement","src":"17630:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17542:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17547:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17552:6:21","type":""}],"src":"17509:154:21"},{"body":{"nodeType":"YulBlock","src":"17791:201:21","statements":[{"nodeType":"YulAssignment","src":"17801:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17866:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17871:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17808:57:21"},"nodeType":"YulFunctionCall","src":"17808:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17801:3:21"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17912:5:21"},{"name":"pos","nodeType":"YulIdentifier","src":"17919:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17924:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"17888:23:21"},"nodeType":"YulFunctionCall","src":"17888:43:21"},"nodeType":"YulExpressionStatement","src":"17888:43:21"},{"nodeType":"YulAssignment","src":"17940:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17951:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17978:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17956:21:21"},"nodeType":"YulFunctionCall","src":"17956:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17947:3:21"},"nodeType":"YulFunctionCall","src":"17947:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17940:3:21"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17764:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17771:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17779:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17787:3:21","type":""}],"src":"17691:301:21"},{"body":{"nodeType":"YulBlock","src":"18180:367:21","statements":[{"nodeType":"YulAssignment","src":"18190:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18202:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18213:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18198:3:21"},"nodeType":"YulFunctionCall","src":"18198:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18190:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18270:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18283:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18294:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18279:3:21"},"nodeType":"YulFunctionCall","src":"18279:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18226:43:21"},"nodeType":"YulFunctionCall","src":"18226:71:21"},"nodeType":"YulExpressionStatement","src":"18226:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18351:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18375:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18360:3:21"},"nodeType":"YulFunctionCall","src":"18360:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18307:43:21"},"nodeType":"YulFunctionCall","src":"18307:72:21"},"nodeType":"YulExpressionStatement","src":"18307:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18400:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18411:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18396:3:21"},"nodeType":"YulFunctionCall","src":"18396:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18420:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18426:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18416:3:21"},"nodeType":"YulFunctionCall","src":"18416:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18389:6:21"},"nodeType":"YulFunctionCall","src":"18389:48:21"},"nodeType":"YulExpressionStatement","src":"18389:48:21"},{"nodeType":"YulAssignment","src":"18446:94:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18518:6:21"},{"name":"value3","nodeType":"YulIdentifier","src":"18526:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"18535:4:21"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18454:63:21"},"nodeType":"YulFunctionCall","src":"18454:86:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18446:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18128:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18140:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18148:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18156:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18164:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18175:4:21","type":""}],"src":"17998:549:21"},{"body":{"nodeType":"YulBlock","src":"18659:129:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18681:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18689:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18677:3:21"},"nodeType":"YulFunctionCall","src":"18677:14:21"},{"hexValue":"4552433732314272696467653a206e667420726563697069656e742063616e6e","kind":"string","nodeType":"YulLiteral","src":"18693:34:21","type":"","value":"ERC721Bridge: nft recipient cann"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18670:6:21"},"nodeType":"YulFunctionCall","src":"18670:58:21"},"nodeType":"YulExpressionStatement","src":"18670:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18749:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18757:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18745:3:21"},"nodeType":"YulFunctionCall","src":"18745:15:21"},{"hexValue":"6f742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"18762:18:21","type":"","value":"ot be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18738:6:21"},"nodeType":"YulFunctionCall","src":"18738:43:21"},"nodeType":"YulExpressionStatement","src":"18738:43:21"}]},"name":"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18651:6:21","type":""}],"src":"18553:235:21"},{"body":{"nodeType":"YulBlock","src":"18940:220:21","statements":[{"nodeType":"YulAssignment","src":"18950:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19016:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19021:2:21","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18957:58:21"},"nodeType":"YulFunctionCall","src":"18957:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18950:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19122:3:21"}],"functionName":{"name":"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","nodeType":"YulIdentifier","src":"19033:88:21"},"nodeType":"YulFunctionCall","src":"19033:93:21"},"nodeType":"YulExpressionStatement","src":"19033:93:21"},{"nodeType":"YulAssignment","src":"19135:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19146:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19151:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19142:3:21"},"nodeType":"YulFunctionCall","src":"19142:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19135:3:21"}]}]},"name":"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18928:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18936:3:21","type":""}],"src":"18794:366:21"},{"body":{"nodeType":"YulBlock","src":"19337:248:21","statements":[{"nodeType":"YulAssignment","src":"19347:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19359:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19370:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19355:3:21"},"nodeType":"YulFunctionCall","src":"19355:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19347:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19394:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19405:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19390:3:21"},"nodeType":"YulFunctionCall","src":"19390:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19413:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19419:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19409:3:21"},"nodeType":"YulFunctionCall","src":"19409:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19383:6:21"},"nodeType":"YulFunctionCall","src":"19383:47:21"},"nodeType":"YulExpressionStatement","src":"19383:47:21"},{"nodeType":"YulAssignment","src":"19439:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19573:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19447:124:21"},"nodeType":"YulFunctionCall","src":"19447:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19439:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19317:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19332:4:21","type":""}],"src":"19166:419:21"},{"body":{"nodeType":"YulBlock","src":"19697:130:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19719:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19727:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19715:3:21"},"nodeType":"YulFunctionCall","src":"19715:14:21"},{"hexValue":"4c324552433732314272696467653a2072656d6f746520746f6b656e2063616e","kind":"string","nodeType":"YulLiteral","src":"19731:34:21","type":"","value":"L2ERC721Bridge: remote token can"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19708:6:21"},"nodeType":"YulFunctionCall","src":"19708:58:21"},"nodeType":"YulExpressionStatement","src":"19708:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19787:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19795:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19783:3:21"},"nodeType":"YulFunctionCall","src":"19783:15:21"},{"hexValue":"6e6f742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"19800:19:21","type":"","value":"not be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19776:6:21"},"nodeType":"YulFunctionCall","src":"19776:44:21"},"nodeType":"YulExpressionStatement","src":"19776:44:21"}]},"name":"store_literal_in_memory_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19689:6:21","type":""}],"src":"19591:236:21"},{"body":{"nodeType":"YulBlock","src":"19979:220:21","statements":[{"nodeType":"YulAssignment","src":"19989:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20055:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20060:2:21","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19996:58:21"},"nodeType":"YulFunctionCall","src":"19996:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19989:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20161:3:21"}],"functionName":{"name":"store_literal_in_memory_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9","nodeType":"YulIdentifier","src":"20072:88:21"},"nodeType":"YulFunctionCall","src":"20072:93:21"},"nodeType":"YulExpressionStatement","src":"20072:93:21"},{"nodeType":"YulAssignment","src":"20174:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20185:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20190:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20181:3:21"},"nodeType":"YulFunctionCall","src":"20181:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20174:3:21"}]}]},"name":"abi_encode_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19967:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19975:3:21","type":""}],"src":"19833:366:21"},{"body":{"nodeType":"YulBlock","src":"20376:248:21","statements":[{"nodeType":"YulAssignment","src":"20386:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20398:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20409:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20394:3:21"},"nodeType":"YulFunctionCall","src":"20394:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20386:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20433:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20444:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20429:3:21"},"nodeType":"YulFunctionCall","src":"20429:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20452:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20458:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20448:3:21"},"nodeType":"YulFunctionCall","src":"20448:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20422:6:21"},"nodeType":"YulFunctionCall","src":"20422:47:21"},"nodeType":"YulExpressionStatement","src":"20422:47:21"},{"nodeType":"YulAssignment","src":"20478:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20612:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20486:124:21"},"nodeType":"YulFunctionCall","src":"20486:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20478:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20356:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20371:4:21","type":""}],"src":"20205:419:21"},{"body":{"nodeType":"YulBlock","src":"20728:124:21","statements":[{"nodeType":"YulAssignment","src":"20738:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20750:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20761:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20746:3:21"},"nodeType":"YulFunctionCall","src":"20746:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20738:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20818:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20831:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20842:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20827:3:21"},"nodeType":"YulFunctionCall","src":"20827:17:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20774:43:21"},"nodeType":"YulFunctionCall","src":"20774:71:21"},"nodeType":"YulExpressionStatement","src":"20774:71:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20700:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20712:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20723:4:21","type":""}],"src":"20630:222:21"},{"body":{"nodeType":"YulBlock","src":"20964:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20986:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"20994:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20982:3:21"},"nodeType":"YulFunctionCall","src":"20982:14:21"},{"hexValue":"4c324552433732314272696467653a205769746864726177616c206973206e6f","kind":"string","nodeType":"YulLiteral","src":"20998:34:21","type":"","value":"L2ERC721Bridge: Withdrawal is no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20975:6:21"},"nodeType":"YulFunctionCall","src":"20975:58:21"},"nodeType":"YulExpressionStatement","src":"20975:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21054:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"21062:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21050:3:21"},"nodeType":"YulFunctionCall","src":"21050:15:21"},{"hexValue":"74206265696e6720696e69746961746564206279204e4654206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21067:32:21","type":"","value":"t being initiated by NFT owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21043:6:21"},"nodeType":"YulFunctionCall","src":"21043:57:21"},"nodeType":"YulExpressionStatement","src":"21043:57:21"}]},"name":"store_literal_in_memory_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20956:6:21","type":""}],"src":"20858:249:21"},{"body":{"nodeType":"YulBlock","src":"21259:220:21","statements":[{"nodeType":"YulAssignment","src":"21269:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21335:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21340:2:21","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21276:58:21"},"nodeType":"YulFunctionCall","src":"21276:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21269:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21441:3:21"}],"functionName":{"name":"store_literal_in_memory_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f","nodeType":"YulIdentifier","src":"21352:88:21"},"nodeType":"YulFunctionCall","src":"21352:93:21"},"nodeType":"YulExpressionStatement","src":"21352:93:21"},{"nodeType":"YulAssignment","src":"21454:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21465:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"21470:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21461:3:21"},"nodeType":"YulFunctionCall","src":"21461:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21454:3:21"}]}]},"name":"abi_encode_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21247:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21255:3:21","type":""}],"src":"21113:366:21"},{"body":{"nodeType":"YulBlock","src":"21656:248:21","statements":[{"nodeType":"YulAssignment","src":"21666:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21678:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21689:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21674:3:21"},"nodeType":"YulFunctionCall","src":"21674:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21666:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21713:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21724:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21709:3:21"},"nodeType":"YulFunctionCall","src":"21709:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21732:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21738:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21728:3:21"},"nodeType":"YulFunctionCall","src":"21728:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21702:6:21"},"nodeType":"YulFunctionCall","src":"21702:47:21"},"nodeType":"YulExpressionStatement","src":"21702:47:21"},{"nodeType":"YulAssignment","src":"21758:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21892:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21766:124:21"},"nodeType":"YulFunctionCall","src":"21766:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21758:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21636:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21651:4:21","type":""}],"src":"21485:419:21"},{"body":{"nodeType":"YulBlock","src":"22016:136:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22038:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22046:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22034:3:21"},"nodeType":"YulFunctionCall","src":"22034:14:21"},{"hexValue":"4c324552433732314272696467653a2072656d6f746520746f6b656e20646f65","kind":"string","nodeType":"YulLiteral","src":"22050:34:21","type":"","value":"L2ERC721Bridge: remote token doe"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22027:6:21"},"nodeType":"YulFunctionCall","src":"22027:58:21"},"nodeType":"YulExpressionStatement","src":"22027:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22106:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"22114:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22102:3:21"},"nodeType":"YulFunctionCall","src":"22102:15:21"},{"hexValue":"73206e6f74206d6174636820676976656e2076616c7565","kind":"string","nodeType":"YulLiteral","src":"22119:25:21","type":"","value":"s not match given value"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22095:6:21"},"nodeType":"YulFunctionCall","src":"22095:50:21"},"nodeType":"YulExpressionStatement","src":"22095:50:21"}]},"name":"store_literal_in_memory_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22008:6:21","type":""}],"src":"21910:242:21"},{"body":{"nodeType":"YulBlock","src":"22304:220:21","statements":[{"nodeType":"YulAssignment","src":"22314:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22380:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22385:2:21","type":"","value":"55"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22321:58:21"},"nodeType":"YulFunctionCall","src":"22321:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22314:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22486:3:21"}],"functionName":{"name":"store_literal_in_memory_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9","nodeType":"YulIdentifier","src":"22397:88:21"},"nodeType":"YulFunctionCall","src":"22397:93:21"},"nodeType":"YulExpressionStatement","src":"22397:93:21"},{"nodeType":"YulAssignment","src":"22499:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22510:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"22515:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22506:3:21"},"nodeType":"YulFunctionCall","src":"22506:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22499:3:21"}]}]},"name":"abi_encode_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22292:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22300:3:21","type":""}],"src":"22158:366:21"},{"body":{"nodeType":"YulBlock","src":"22701:248:21","statements":[{"nodeType":"YulAssignment","src":"22711:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22723:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22734:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22719:3:21"},"nodeType":"YulFunctionCall","src":"22719:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22711:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22758:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22769:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22754:3:21"},"nodeType":"YulFunctionCall","src":"22754:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22777:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22783:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22773:3:21"},"nodeType":"YulFunctionCall","src":"22773:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22747:6:21"},"nodeType":"YulFunctionCall","src":"22747:47:21"},"nodeType":"YulExpressionStatement","src":"22747:47:21"},{"nodeType":"YulAssignment","src":"22803:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22937:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22811:124:21"},"nodeType":"YulFunctionCall","src":"22811:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22803:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22681:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22696:4:21","type":""}],"src":"22530:419:21"},{"body":{"nodeType":"YulBlock","src":"23221:616:21","statements":[{"nodeType":"YulAssignment","src":"23231:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23243:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23254:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23239:3:21"},"nodeType":"YulFunctionCall","src":"23239:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23231:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23312:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23325:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23336:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23321:3:21"},"nodeType":"YulFunctionCall","src":"23321:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23268:43:21"},"nodeType":"YulFunctionCall","src":"23268:71:21"},"nodeType":"YulExpressionStatement","src":"23268:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23393:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23406:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23417:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23402:3:21"},"nodeType":"YulFunctionCall","src":"23402:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23349:43:21"},"nodeType":"YulFunctionCall","src":"23349:72:21"},"nodeType":"YulExpressionStatement","src":"23349:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23475:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23488:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23499:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23484:3:21"},"nodeType":"YulFunctionCall","src":"23484:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23431:43:21"},"nodeType":"YulFunctionCall","src":"23431:72:21"},"nodeType":"YulExpressionStatement","src":"23431:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23557:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23570:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23581:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23566:3:21"},"nodeType":"YulFunctionCall","src":"23566:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23513:43:21"},"nodeType":"YulFunctionCall","src":"23513:72:21"},"nodeType":"YulExpressionStatement","src":"23513:72:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23639:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23652:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23663:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23648:3:21"},"nodeType":"YulFunctionCall","src":"23648:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23595:43:21"},"nodeType":"YulFunctionCall","src":"23595:73:21"},"nodeType":"YulExpressionStatement","src":"23595:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23689:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"23700:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23685:3:21"},"nodeType":"YulFunctionCall","src":"23685:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23710:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"23716:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23706:3:21"},"nodeType":"YulFunctionCall","src":"23706:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23678:6:21"},"nodeType":"YulFunctionCall","src":"23678:49:21"},"nodeType":"YulExpressionStatement","src":"23678:49:21"},{"nodeType":"YulAssignment","src":"23736:94:21","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23808:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"23816:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"23825:4:21"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23744:63:21"},"nodeType":"YulFunctionCall","src":"23744:86:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23736:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23145:9:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23157:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23165:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23173:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23181:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23189:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23197:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23205:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23216:4:21","type":""}],"src":"22955:882:21"},{"body":{"nodeType":"YulBlock","src":"23901:40:21","statements":[{"nodeType":"YulAssignment","src":"23912:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23928:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23922:5:21"},"nodeType":"YulFunctionCall","src":"23922:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23912:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23884:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23894:6:21","type":""}],"src":"23843:98:21"},{"body":{"nodeType":"YulBlock","src":"24037:270:21","statements":[{"nodeType":"YulVariableDeclaration","src":"24047:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24093:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"24061:31:21"},"nodeType":"YulFunctionCall","src":"24061:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24051:6:21","type":""}]},{"nodeType":"YulAssignment","src":"24108:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24173:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"24178:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24115:57:21"},"nodeType":"YulFunctionCall","src":"24115:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24108:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24220:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"24227:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24216:3:21"},"nodeType":"YulFunctionCall","src":"24216:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"24234:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"24239:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"24194:21:21"},"nodeType":"YulFunctionCall","src":"24194:52:21"},"nodeType":"YulExpressionStatement","src":"24194:52:21"},{"nodeType":"YulAssignment","src":"24255:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24266:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24293:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"24271:21:21"},"nodeType":"YulFunctionCall","src":"24271:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24262:3:21"},"nodeType":"YulFunctionCall","src":"24262:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24255:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24018:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24025:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24033:3:21","type":""}],"src":"23947:360:21"},{"body":{"nodeType":"YulBlock","src":"24376:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24393:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24415:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"24398:16:21"},"nodeType":"YulFunctionCall","src":"24398:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24386:6:21"},"nodeType":"YulFunctionCall","src":"24386:36:21"},"nodeType":"YulExpressionStatement","src":"24386:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24364:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24371:3:21","type":""}],"src":"24313:115:21"},{"body":{"nodeType":"YulBlock","src":"24604:355:21","statements":[{"nodeType":"YulAssignment","src":"24614:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24626:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24637:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24622:3:21"},"nodeType":"YulFunctionCall","src":"24622:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24614:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24694:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24707:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24718:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24703:3:21"},"nodeType":"YulFunctionCall","src":"24703:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24650:43:21"},"nodeType":"YulFunctionCall","src":"24650:71:21"},"nodeType":"YulExpressionStatement","src":"24650:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24742:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24753:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24738:3:21"},"nodeType":"YulFunctionCall","src":"24738:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24762:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"24768:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24758:3:21"},"nodeType":"YulFunctionCall","src":"24758:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24731:6:21"},"nodeType":"YulFunctionCall","src":"24731:48:21"},"nodeType":"YulExpressionStatement","src":"24731:48:21"},{"nodeType":"YulAssignment","src":"24788:84:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24858:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"24867:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24796:61:21"},"nodeType":"YulFunctionCall","src":"24796:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24788:4:21"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24924:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24937:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"24948:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24933:3:21"},"nodeType":"YulFunctionCall","src":"24933:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24882:41:21"},"nodeType":"YulFunctionCall","src":"24882:70:21"},"nodeType":"YulExpressionStatement","src":"24882:70:21"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24560:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24572:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24580:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24588:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24599:4:21","type":""}],"src":"24434:525:21"},{"body":{"nodeType":"YulBlock","src":"24993:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25010:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25013:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25003:6:21"},"nodeType":"YulFunctionCall","src":"25003:88:21"},"nodeType":"YulExpressionStatement","src":"25003:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25107:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25110:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25100:6:21"},"nodeType":"YulFunctionCall","src":"25100:15:21"},"nodeType":"YulExpressionStatement","src":"25100:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25131:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25134:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25124:6:21"},"nodeType":"YulFunctionCall","src":"25124:15:21"},"nodeType":"YulExpressionStatement","src":"25124:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"24965:180:21"},{"body":{"nodeType":"YulBlock","src":"25194:190:21","statements":[{"nodeType":"YulAssignment","src":"25204:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25231:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25213:17:21"},"nodeType":"YulFunctionCall","src":"25213:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25204:5:21"}]},{"body":{"nodeType":"YulBlock","src":"25327:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25329:16:21"},"nodeType":"YulFunctionCall","src":"25329:18:21"},"nodeType":"YulExpressionStatement","src":"25329:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25252:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"25259:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25249:2:21"},"nodeType":"YulFunctionCall","src":"25249:77:21"},"nodeType":"YulIf","src":"25246:103:21"},{"nodeType":"YulAssignment","src":"25358:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25369:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"25376:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25365:3:21"},"nodeType":"YulFunctionCall","src":"25365:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25358:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25180:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25190:3:21","type":""}],"src":"25151:233:21"},{"body":{"nodeType":"YulBlock","src":"25418:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25435:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25438:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25428:6:21"},"nodeType":"YulFunctionCall","src":"25428:88:21"},"nodeType":"YulExpressionStatement","src":"25428:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25532:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25535:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25525:6:21"},"nodeType":"YulFunctionCall","src":"25525:15:21"},"nodeType":"YulExpressionStatement","src":"25525:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25556:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25559:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25549:6:21"},"nodeType":"YulFunctionCall","src":"25549:15:21"},"nodeType":"YulExpressionStatement","src":"25549:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"25390:180:21"},{"body":{"nodeType":"YulBlock","src":"25618:143:21","statements":[{"nodeType":"YulAssignment","src":"25628:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25651:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25633:17:21"},"nodeType":"YulFunctionCall","src":"25633:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25628:1:21"}]},{"nodeType":"YulAssignment","src":"25662:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25685:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25667:17:21"},"nodeType":"YulFunctionCall","src":"25667:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25662:1:21"}]},{"body":{"nodeType":"YulBlock","src":"25709:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"25711:16:21"},"nodeType":"YulFunctionCall","src":"25711:18:21"},"nodeType":"YulExpressionStatement","src":"25711:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25706:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25699:6:21"},"nodeType":"YulFunctionCall","src":"25699:9:21"},"nodeType":"YulIf","src":"25696:35:21"},{"nodeType":"YulAssignment","src":"25741:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25750:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"25753:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25746:3:21"},"nodeType":"YulFunctionCall","src":"25746:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"25741:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25607:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"25610:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"25616:1:21","type":""}],"src":"25576:185:21"},{"body":{"nodeType":"YulBlock","src":"25795:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25812:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25815:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25805:6:21"},"nodeType":"YulFunctionCall","src":"25805:88:21"},"nodeType":"YulExpressionStatement","src":"25805:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25909:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25912:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25902:6:21"},"nodeType":"YulFunctionCall","src":"25902:15:21"},"nodeType":"YulExpressionStatement","src":"25902:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25933:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25936:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25926:6:21"},"nodeType":"YulFunctionCall","src":"25926:15:21"},"nodeType":"YulExpressionStatement","src":"25926:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"25767:180:21"},{"body":{"nodeType":"YulBlock","src":"25998:146:21","statements":[{"nodeType":"YulAssignment","src":"26008:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26031:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26013:17:21"},"nodeType":"YulFunctionCall","src":"26013:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26008:1:21"}]},{"nodeType":"YulAssignment","src":"26042:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26065:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26047:17:21"},"nodeType":"YulFunctionCall","src":"26047:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26042:1:21"}]},{"body":{"nodeType":"YulBlock","src":"26089:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26091:16:21"},"nodeType":"YulFunctionCall","src":"26091:18:21"},"nodeType":"YulExpressionStatement","src":"26091:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26083:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"26086:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26080:2:21"},"nodeType":"YulFunctionCall","src":"26080:8:21"},"nodeType":"YulIf","src":"26077:34:21"},{"nodeType":"YulAssignment","src":"26121:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26133:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"26136:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26129:3:21"},"nodeType":"YulFunctionCall","src":"26129:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"26121:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25984:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"25987:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25993:4:21","type":""}],"src":"25953:191:21"},{"body":{"nodeType":"YulBlock","src":"26184:142:21","statements":[{"nodeType":"YulAssignment","src":"26194:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26217:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26199:17:21"},"nodeType":"YulFunctionCall","src":"26199:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26194:1:21"}]},{"nodeType":"YulAssignment","src":"26228:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26251:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26233:17:21"},"nodeType":"YulFunctionCall","src":"26233:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26228:1:21"}]},{"body":{"nodeType":"YulBlock","src":"26275:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"26277:16:21"},"nodeType":"YulFunctionCall","src":"26277:18:21"},"nodeType":"YulExpressionStatement","src":"26277:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26272:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26265:6:21"},"nodeType":"YulFunctionCall","src":"26265:9:21"},"nodeType":"YulIf","src":"26262:35:21"},{"nodeType":"YulAssignment","src":"26306:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26315:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"26318:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"26311:3:21"},"nodeType":"YulFunctionCall","src":"26311:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"26306:1:21"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26173:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"26176:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"26182:1:21","type":""}],"src":"26150:176:21"},{"body":{"nodeType":"YulBlock","src":"26376:261:21","statements":[{"nodeType":"YulAssignment","src":"26386:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26409:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26391:17:21"},"nodeType":"YulFunctionCall","src":"26391:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26386:1:21"}]},{"nodeType":"YulAssignment","src":"26420:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26443:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26425:17:21"},"nodeType":"YulFunctionCall","src":"26425:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26420:1:21"}]},{"body":{"nodeType":"YulBlock","src":"26583:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26585:16:21"},"nodeType":"YulFunctionCall","src":"26585:18:21"},"nodeType":"YulExpressionStatement","src":"26585:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26504:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26511:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"26579:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26507:3:21"},"nodeType":"YulFunctionCall","src":"26507:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26501:2:21"},"nodeType":"YulFunctionCall","src":"26501:81:21"},"nodeType":"YulIf","src":"26498:107:21"},{"nodeType":"YulAssignment","src":"26615:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26626:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"26629:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26622:3:21"},"nodeType":"YulFunctionCall","src":"26622:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26615:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26363:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"26366:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26372:3:21","type":""}],"src":"26332:305:21"},{"body":{"nodeType":"YulBlock","src":"26671:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26688:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26691:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26681:6:21"},"nodeType":"YulFunctionCall","src":"26681:88:21"},"nodeType":"YulExpressionStatement","src":"26681:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26785:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26788:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26778:6:21"},"nodeType":"YulFunctionCall","src":"26778:15:21"},"nodeType":"YulExpressionStatement","src":"26778:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26809:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26812:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26802:6:21"},"nodeType":"YulFunctionCall","src":"26802:15:21"},"nodeType":"YulExpressionStatement","src":"26802:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"26643:180:21"},{"body":{"nodeType":"YulBlock","src":"26873:105:21","statements":[{"nodeType":"YulAssignment","src":"26883:89:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26898:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"26905:66:21","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26894:3:21"},"nodeType":"YulFunctionCall","src":"26894:78:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"26883:7:21"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26855:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"26865:7:21","type":""}],"src":"26829:149:21"},{"body":{"nodeType":"YulBlock","src":"27047:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27064:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27086:5:21"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"27069:16:21"},"nodeType":"YulFunctionCall","src":"27069:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27057:6:21"},"nodeType":"YulFunctionCall","src":"27057:36:21"},"nodeType":"YulExpressionStatement","src":"27057:36:21"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27035:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27042:3:21","type":""}],"src":"26984:115:21"},{"body":{"nodeType":"YulBlock","src":"27201:122:21","statements":[{"nodeType":"YulAssignment","src":"27211:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27223:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27234:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27219:3:21"},"nodeType":"YulFunctionCall","src":"27219:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27211:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27289:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27302:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"27313:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27298:3:21"},"nodeType":"YulFunctionCall","src":"27298:17:21"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nodeType":"YulIdentifier","src":"27247:41:21"},"nodeType":"YulFunctionCall","src":"27247:69:21"},"nodeType":"YulExpressionStatement","src":"27247:69:21"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27173:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27185:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27196:4:21","type":""}],"src":"27105:218:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CrossDomainMessenger_$2044_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CrossDomainMessenger_$2044_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: account is not ext\")\n\n        mstore(add(memPtr, 32), \"ernally owned\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: function can only \")\n\n        mstore(add(memPtr, 32), \"be called from the other bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 63)\n        store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911(memPtr) {\n\n        mstore(add(memPtr, 0), \"L2ERC721Bridge: local token cann\")\n\n        mstore(add(memPtr, 32), \"ot be self\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e18be074e522c384c2b459d3f552ca9fb14628371ea9e81c37dfc2875bec911_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"L2ERC721Bridge: local token inte\")\n\n        mstore(add(memPtr, 32), \"rface is not compliant\")\n\n    }\n\n    function abi_encode_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07efea2f6062b2acb6eac32db41367de7f7d64803f2496130d2183dc5a0651ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd(memPtr) {\n\n        mstore(add(memPtr, 0), \"L2ERC721Bridge: wrong remote tok\")\n\n        mstore(add(memPtr, 32), \"en for Optimism Mintable ERC721 \")\n\n        mstore(add(memPtr, 64), \"local token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 75)\n        store_literal_in_memory_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a297b13cacd808a47e4a8cb030741295c70e2e66399d9c0dd47e18d6f766c6dd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: nft recipient cann\")\n\n        mstore(add(memPtr, 32), \"ot be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9(memPtr) {\n\n        mstore(add(memPtr, 0), \"L2ERC721Bridge: remote token can\")\n\n        mstore(add(memPtr, 32), \"not be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dda13b674104cff93529fc9113589ef9eda6a9e3d2414ccc2ce12f79952de0f9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"L2ERC721Bridge: Withdrawal is no\")\n\n        mstore(add(memPtr, 32), \"t being initiated by NFT owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ee75d9b9b0c7320a30e3101dd31a8695dfeba929ef037ce562e2025d1f1db7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9(memPtr) {\n\n        mstore(add(memPtr, 0), \"L2ERC721Bridge: remote token doe\")\n\n        mstore(add(memPtr, 32), \"s not match given value\")\n\n    }\n\n    function abi_encode_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a41ad0de9429285711503556faaaf7a96337a91d3717dc15ffb9a52d12e98d9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value5, value6,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2055":[{"length":32,"start":476},{"length":32,"start":677},{"length":32,"start":818},{"length":32,"start":1767},{"length":32,"start":2824}],"2058":[{"length":32,"start":763},{"length":32,"start":1731},{"length":32,"start":1941},{"length":32,"start":2884}],"2349":[{"length":32,"start":519}],"2352":[{"length":32,"start":560}],"2355":[{"length":32,"start":601}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80637f46ddb21161005b5780637f46ddb214610101578063927ede2d1461011f578063aa5574521461013d578063c89701a21461015957610088565b80633687011a1461008d5780633cb747bf146100a957806354fd4d50146100c7578063761f4493146100e5575b600080fd5b6100a760048036038101906100a29190611013565b610177565b005b6100b16101d8565b6040516100be919061110c565b60405180910390f35b6100cf610200565b6040516100dc91906111c0565b60405180910390f35b6100ff60048036038101906100fa91906111e2565b6102a3565b005b6101096106c1565b60405161011691906112a0565b60405180910390f35b6101276106e5565b604051610134919061110c565b60405180910390f35b610157600480360381019061015291906112bb565b610709565b005b610161610791565b60405161016e91906112a0565b60405180910390f35b610180336107b9565b156101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b7906113dc565b60405180910390fd5b6101d086863333888888886107dc565b505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b606061022b7f0000000000000000000000000000000000000000000000000000000000000000610c43565b6102547f0000000000000000000000000000000000000000000000000000000000000000610c43565b61027d7f0000000000000000000000000000000000000000000000000000000000000000610c43565b60405160200161028f93929190611484565b604051602081830303815290604052905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156103d757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa15801561039b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bf91906114e0565b73ffffffffffffffffffffffffffffffffffffffff16145b610416576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040d9061157f565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b90611611565b60405180910390fd5b6104ae877f74259ebf00000000000000000000000000000000000000000000000000000000610da3565b6104ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e4906116a3565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff1663d6c0b2c46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c91906114e0565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c09061175b565b60405180910390fd5b8673ffffffffffffffffffffffffffffffffffffffff1663a144819485856040518363ffffffff1660e01b815260040161060492919061178a565b600060405180830381600087803b15801561061e57600080fd5b505af1158015610632573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f1f39bf6707b5d608453e0ae4c067b562bcc4c85c0f562ef5d2c774d2e7f131ac878787876040516106b09493929190611800565b60405180910390a450505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076f906118b2565b60405180910390fd5b61078887873388888888886107dc565b50505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff160361084b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084290611944565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016108849190611964565b602060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c591906114e0565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610932576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610929906119f1565b60405180910390fd5b60008873ffffffffffffffffffffffffffffffffffffffff1663d6c0b2c46040518163ffffffff1660e01b8152600401602060405180830381865afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a391906114e0565b90508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a90611a83565b60405180910390fd5b8873ffffffffffffffffffffffffffffffffffffffff16639dc29fac88876040518363ffffffff1660e01b8152600401610a4e92919061178a565b600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b50505050600063761f449360e01b828b8a8a8a8989604051602401610aa79796959493929190611aa3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633dbb202b7f000000000000000000000000000000000000000000000000000000000000000083886040518463ffffffff1660e01b8152600401610b8393929190611b60565b600060405180830381600087803b158015610b9d57600080fd5b505af1158015610bb1573d6000803e3d6000fd5b505050508773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167fb7460e2a880f256ebef3406116ff3eee0cee51ebccdc2a40698f87ebb2e9c1a58a8a8989604051610c2f9493929190611800565b60405180910390a450505050505050505050565b606060008203610c8a576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d9e565b600082905060005b60008214610cbc578080610ca590611bcd565b915050600a82610cb59190611c44565b9150610c92565b60008167ffffffffffffffff811115610cd857610cd7611c75565b5b6040519080825280601f01601f191660200182016040528015610d0a5781602001600182028036833780820191505090505b5090505b60008514610d9757600182610d239190611ca4565b9150600a85610d329190611cd8565b6030610d3e9190611d09565b60f81b818381518110610d5457610d53611d5f565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610d909190611c44565b9450610d0e565b8093505050505b919050565b6000610dae83610dc8565b8015610dc05750610dbf8383610e15565b5b905092915050565b6000610df4827f01ffc9a700000000000000000000000000000000000000000000000000000000610e15565b8015610e0e5750610e0c8263ffffffff60e01b610e15565b155b9050919050565b6000806301ffc9a760e01b83604051602401610e319190611dc9565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015610ebc575060208210155b8015610ec85750600081115b94505050505092915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f0982610ede565b9050919050565b610f1981610efe565b8114610f2457600080fd5b50565b600081359050610f3681610f10565b92915050565b6000819050919050565b610f4f81610f3c565b8114610f5a57600080fd5b50565b600081359050610f6c81610f46565b92915050565b600063ffffffff82169050919050565b610f8b81610f72565b8114610f9657600080fd5b50565b600081359050610fa881610f82565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610fd357610fd2610fae565b5b8235905067ffffffffffffffff811115610ff057610fef610fb3565b5b60208301915083600182028301111561100c5761100b610fb8565b5b9250929050565b60008060008060008060a087890312156110305761102f610ed4565b5b600061103e89828a01610f27565b965050602061104f89828a01610f27565b955050604061106089828a01610f5d565b945050606061107189828a01610f99565b935050608087013567ffffffffffffffff81111561109257611091610ed9565b5b61109e89828a01610fbd565b92509250509295509295509295565b6000819050919050565b60006110d26110cd6110c884610ede565b6110ad565b610ede565b9050919050565b60006110e4826110b7565b9050919050565b60006110f6826110d9565b9050919050565b611106816110eb565b82525050565b600060208201905061112160008301846110fd565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611161578082015181840152602081019050611146565b83811115611170576000848401525b50505050565b6000601f19601f8301169050919050565b600061119282611127565b61119c8185611132565b93506111ac818560208601611143565b6111b581611176565b840191505092915050565b600060208201905081810360008301526111da8184611187565b905092915050565b600080600080600080600060c0888a03121561120157611200610ed4565b5b600061120f8a828b01610f27565b97505060206112208a828b01610f27565b96505060406112318a828b01610f27565b95505060606112428a828b01610f27565b94505060806112538a828b01610f5d565b93505060a088013567ffffffffffffffff81111561127457611273610ed9565b5b6112808a828b01610fbd565b925092505092959891949750929550565b61129a81610efe565b82525050565b60006020820190506112b56000830184611291565b92915050565b600080600080600080600060c0888a0312156112da576112d9610ed4565b5b60006112e88a828b01610f27565b97505060206112f98a828b01610f27565b965050604061130a8a828b01610f27565b955050606061131b8a828b01610f5d565b945050608061132c8a828b01610f99565b93505060a088013567ffffffffffffffff81111561134d5761134c610ed9565b5b6113598a828b01610fbd565b925092505092959891949750929550565b7f4552433732314272696467653a206163636f756e74206973206e6f742065787460008201527f65726e616c6c79206f776e656400000000000000000000000000000000000000602082015250565b60006113c6602d83611132565b91506113d18261136a565b604082019050919050565b600060208201905081810360008301526113f5816113b9565b9050919050565b600081905092915050565b600061141282611127565b61141c81856113fc565b935061142c818560208601611143565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b600061146e6001836113fc565b915061147982611438565b600182019050919050565b60006114908286611407565b915061149b82611461565b91506114a78285611407565b91506114b282611461565b91506114be8284611407565b9150819050949350505050565b6000815190506114da81610f10565b92915050565b6000602082840312156114f6576114f5610ed4565b5b6000611504848285016114cb565b91505092915050565b7f4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792060008201527f62652063616c6c65642066726f6d20746865206f746865722062726964676500602082015250565b6000611569603f83611132565b91506115748261150d565b604082019050919050565b600060208201905081810360008301526115988161155c565b9050919050565b7f4c324552433732314272696467653a206c6f63616c20746f6b656e2063616e6e60008201527f6f742062652073656c6600000000000000000000000000000000000000000000602082015250565b60006115fb602a83611132565b91506116068261159f565b604082019050919050565b6000602082019050818103600083015261162a816115ee565b9050919050565b7f4c324552433732314272696467653a206c6f63616c20746f6b656e20696e746560008201527f7266616365206973206e6f7420636f6d706c69616e7400000000000000000000602082015250565b600061168d603683611132565b915061169882611631565b604082019050919050565b600060208201905081810360008301526116bc81611680565b9050919050565b7f4c324552433732314272696467653a2077726f6e672072656d6f746520746f6b60008201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433732312060208201527f6c6f63616c20746f6b656e000000000000000000000000000000000000000000604082015250565b6000611745604b83611132565b9150611750826116c3565b606082019050919050565b6000602082019050818103600083015261177481611738565b9050919050565b61178481610f3c565b82525050565b600060408201905061179f6000830185611291565b6117ac602083018461177b565b9392505050565b600082825260208201905092915050565b82818337600083830152505050565b60006117df83856117b3565b93506117ec8385846117c4565b6117f583611176565b840190509392505050565b60006060820190506118156000830187611291565b611822602083018661177b565b81810360408301526118358184866117d3565b905095945050505050565b7f4552433732314272696467653a206e667420726563697069656e742063616e6e60008201527f6f74206265206164647265737328302900000000000000000000000000000000602082015250565b600061189c603083611132565b91506118a782611840565b604082019050919050565b600060208201905081810360008301526118cb8161188f565b9050919050565b7f4c324552433732314272696467653a2072656d6f746520746f6b656e2063616e60008201527f6e6f742062652061646472657373283029000000000000000000000000000000602082015250565b600061192e603183611132565b9150611939826118d2565b604082019050919050565b6000602082019050818103600083015261195d81611921565b9050919050565b6000602082019050611979600083018461177b565b92915050565b7f4c324552433732314272696467653a205769746864726177616c206973206e6f60008201527f74206265696e6720696e69746961746564206279204e4654206f776e65720000602082015250565b60006119db603e83611132565b91506119e68261197f565b604082019050919050565b60006020820190508181036000830152611a0a816119ce565b9050919050565b7f4c324552433732314272696467653a2072656d6f746520746f6b656e20646f6560008201527f73206e6f74206d6174636820676976656e2076616c7565000000000000000000602082015250565b6000611a6d603783611132565b9150611a7882611a11565b604082019050919050565b60006020820190508181036000830152611a9c81611a60565b9050919050565b600060c082019050611ab8600083018a611291565b611ac56020830189611291565b611ad26040830188611291565b611adf6060830187611291565b611aec608083018661177b565b81810360a0830152611aff8184866117d3565b905098975050505050505050565b600081519050919050565b6000611b2382611b0d565b611b2d81856117b3565b9350611b3d818560208601611143565b611b4681611176565b840191505092915050565b611b5a81610f72565b82525050565b6000606082019050611b756000830186611291565b8181036020830152611b878185611b18565b9050611b966040830184611b51565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bd882610f3c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c0a57611c09611b9e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611c4f82610f3c565b9150611c5a83610f3c565b925082611c6a57611c69611c15565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000611caf82610f3c565b9150611cba83610f3c565b925082821015611ccd57611ccc611b9e565b5b828203905092915050565b6000611ce382610f3c565b9150611cee83610f3c565b925082611cfe57611cfd611c15565b5b828206905092915050565b6000611d1482610f3c565b9150611d1f83610f3c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611d5457611d53611b9e565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611dc381611d8e565b82525050565b6000602082019050611dde6000830184611dba565b9291505056fea2646970667358221220c729d7f4f0e40858100677d65830d978cada21e0fc3f93c554597cf084c9481064736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F46DDB2 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x7F46DDB2 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x927EDE2D EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xAA557452 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xC89701A2 EQ PUSH2 0x159 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x3687011A EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x761F4493 EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x1013 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCF PUSH2 0x200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x11E2 JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x109 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 CALLER PUSH2 0x7B9 JUMP JUMPDEST ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7 SWAP1 PUSH2 0x13DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1D0 DUP7 DUP7 CALLER CALLER DUP9 DUP9 DUP9 DUP9 PUSH2 0x7DC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22B PUSH32 0x0 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x254 PUSH32 0x0 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x27D PUSH32 0x0 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x28F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3D7 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x416 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40D SWAP1 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x1611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4AE DUP8 PUSH32 0x74259EBF00000000000000000000000000000000000000000000000000000000 PUSH2 0xDA3 JUMP JUMPDEST PUSH2 0x4ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E4 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD6C0B2C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x604 SWAP3 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F39BF6707B5D608453E0AE4C067B562BCC4C85C0F562EF5D2C774D2E7F131AC DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x6B0 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76F SWAP1 PUSH2 0x18B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x788 DUP8 DUP8 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x7DC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x842 SWAP1 PUSH2 0x1944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x884 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C5 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP1 PUSH2 0x19F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD6C0B2C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x97F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA13 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0A SWAP1 PUSH2 0x1A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9DC29FAC DUP9 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4E SWAP3 SWAP2 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH4 0x761F4493 PUSH1 0xE0 SHL DUP3 DUP12 DUP11 DUP11 DUP11 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xAA7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH32 0x0 DUP4 DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB83 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7460E2A880F256EBEF3406116FF3EEE0CEE51EBCCDC2A40698F87EBB2E9C1A5 DUP11 DUP11 DUP10 DUP10 PUSH1 0x40 MLOAD PUSH2 0xC2F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1800 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD9E JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xCBC JUMPI DUP1 DUP1 PUSH2 0xCA5 SWAP1 PUSH2 0x1BCD JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0xC92 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH2 0xCD7 PUSH2 0x1C75 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD0A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD97 JUMPI PUSH1 0x1 DUP3 PUSH2 0xD23 SWAP2 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xD3E SWAP2 SWAP1 PUSH2 0x1D09 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD54 JUMPI PUSH2 0xD53 PUSH2 0x1D5F JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xD90 SWAP2 SWAP1 PUSH2 0x1C44 JUMP JUMPDEST SWAP5 POP PUSH2 0xD0E JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAE DUP4 PUSH2 0xDC8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDC0 JUMPI POP PUSH2 0xDBF DUP4 DUP4 PUSH2 0xE15 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF4 DUP3 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH2 0xE15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE0E JUMPI POP PUSH2 0xE0C DUP3 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL PUSH2 0xE15 JUMP JUMPDEST ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE31 SWAP2 SWAP1 PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 PUSH1 0x0 DUP6 MLOAD PUSH1 0x20 DUP8 ADD DUP11 PUSH2 0x7530 STATICCALL SWAP3 POP RETURNDATASIZE SWAP2 POP PUSH1 0x0 MLOAD SWAP1 POP DUP3 DUP1 ISZERO PUSH2 0xEBC JUMPI POP PUSH1 0x20 DUP3 LT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xEC8 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF09 DUP3 PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0xEFE JUMP JUMPDEST DUP2 EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF36 DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4F DUP2 PUSH2 0xF3C JUMP JUMPDEST DUP2 EQ PUSH2 0xF5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF6C DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8B DUP2 PUSH2 0xF72 JUMP JUMPDEST DUP2 EQ PUSH2 0xF96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA8 DUP2 PUSH2 0xF82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xFD3 JUMPI PUSH2 0xFD2 PUSH2 0xFAE JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x100C JUMPI PUSH2 0x100B PUSH2 0xFB8 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1030 JUMPI PUSH2 0x102F PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x103E DUP10 DUP3 DUP11 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x104F DUP10 DUP3 DUP11 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x1060 DUP10 DUP3 DUP11 ADD PUSH2 0xF5D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x1071 DUP10 DUP3 DUP11 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST PUSH2 0x109E DUP10 DUP3 DUP11 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D2 PUSH2 0x10CD PUSH2 0x10C8 DUP5 PUSH2 0xEDE JUMP JUMPDEST PUSH2 0x10AD JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E4 DUP3 PUSH2 0x10B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F6 DUP3 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1106 DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1121 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10FD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1161 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1146 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1192 DUP3 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x119C DUP2 DUP6 PUSH2 0x1132 JUMP JUMPDEST SWAP4 POP PUSH2 0x11AC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x11B5 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11DA DUP2 DUP5 PUSH2 0x1187 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1201 JUMPI PUSH2 0x1200 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x120F DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1220 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1231 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1242 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1253 DUP11 DUP3 DUP12 ADD PUSH2 0xF5D JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1274 JUMPI PUSH2 0x1273 PUSH2 0xED9 JUMP JUMPDEST JUMPDEST PUSH2 0x1280 DUP11 DUP3 DUP12 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x129A DUP2 PUSH2 0xEFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x12DA JUMPI PUSH2 0x12D9 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12E8 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x12F9 DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x130A DUP11 DUP3 DUP12 ADD PUSH2 0xF27 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x131B DUP11 DUP3 DUP12 ADD PUSH2 0xF5D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x132C DUP11 DUP3 DUP12 ADD PUSH2 0xF99 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x134D JUMPI PUSH2 0x134C PUSH2 0xED9 JUMP JUMPDEST JUMPDEST PUSH2 0x1359 DUP11 DUP3 DUP12 ADD PUSH2 0xFBD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206163636F756E74206973206E6F7420657874 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726E616C6C79206F776E656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C6 PUSH1 0x2D DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D1 DUP3 PUSH2 0x136A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13F5 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1412 DUP3 PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x141C DUP2 DUP6 PUSH2 0x13FC JUMP JUMPDEST SWAP4 POP PUSH2 0x142C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1143 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x146E PUSH1 0x1 DUP4 PUSH2 0x13FC JUMP JUMPDEST SWAP2 POP PUSH2 0x1479 DUP3 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1490 DUP3 DUP7 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP PUSH2 0x149B DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP PUSH2 0x14A7 DUP3 DUP6 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B2 DUP3 PUSH2 0x1461 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BE DUP3 DUP5 PUSH2 0x1407 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14DA DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14F6 JUMPI PUSH2 0x14F5 PUSH2 0xED4 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1504 DUP5 DUP3 DUP6 ADD PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A2066756E6374696F6E2063616E206F6E6C7920 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62652063616C6C65642066726F6D20746865206F746865722062726964676500 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1569 PUSH1 0x3F DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1574 DUP3 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1598 DUP2 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A206C6F63616C20746F6B656E2063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F742062652073656C6600000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FB PUSH1 0x2A DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1606 DUP3 PUSH2 0x159F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x162A DUP2 PUSH2 0x15EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A206C6F63616C20746F6B656E20696E7465 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7266616365206973206E6F7420636F6D706C69616E7400000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168D PUSH1 0x36 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1698 DUP3 PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16BC DUP2 PUSH2 0x1680 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A2077726F6E672072656D6F746520746F6B PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E20666F72204F7074696D69736D204D696E7461626C652045524337323120 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C6F63616C20746F6B656E000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1745 PUSH1 0x4B DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1750 DUP3 PUSH2 0x16C3 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1774 DUP2 PUSH2 0x1738 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1784 DUP2 PUSH2 0xF3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x179F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x17AC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x177B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DF DUP4 DUP6 PUSH2 0x17B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x17EC DUP4 DUP6 DUP5 PUSH2 0x17C4 JUMP JUMPDEST PUSH2 0x17F5 DUP4 PUSH2 0x1176 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1815 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1822 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x177B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1835 DUP2 DUP5 DUP7 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206E667420726563697069656E742063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206265206164647265737328302900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x189C PUSH1 0x30 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x18A7 DUP3 PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18CB DUP2 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A2072656D6F746520746F6B656E2063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652061646472657373283029000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x192E PUSH1 0x31 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1939 DUP3 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x195D DUP2 PUSH2 0x1921 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1979 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x177B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A205769746864726177616C206973206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206265696E6720696E69746961746564206279204E4654206F776E65720000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DB PUSH1 0x3E DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E6 DUP3 PUSH2 0x197F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A0A DUP2 PUSH2 0x19CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C324552433732314272696467653A2072656D6F746520746F6B656E20646F65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x73206E6F74206D6174636820676976656E2076616C7565000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6D PUSH1 0x37 DUP4 PUSH2 0x1132 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A78 DUP3 PUSH2 0x1A11 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A9C DUP2 PUSH2 0x1A60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1AB8 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1AC5 PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1AD2 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1ADF PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x1AEC PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x177B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1AFF DUP2 DUP5 DUP7 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B23 DUP3 PUSH2 0x1B0D JUMP JUMPDEST PUSH2 0x1B2D DUP2 DUP6 PUSH2 0x17B3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B3D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1B46 DUP2 PUSH2 0x1176 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B5A DUP2 PUSH2 0xF72 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B75 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1291 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1B87 DUP2 DUP6 PUSH2 0x1B18 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B96 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B51 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BD8 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1C0A JUMPI PUSH2 0x1C09 PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C5A DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1C6A JUMPI PUSH2 0x1C69 PUSH2 0x1C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CAF DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBA DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1CCD JUMPI PUSH2 0x1CCC PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE3 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEE DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CFE JUMPI PUSH2 0x1CFD PUSH2 0x1C15 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D14 DUP3 PUSH2 0xF3C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D1F DUP4 PUSH2 0xF3C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1D54 JUMPI PUSH2 0x1D53 PUSH2 0x1B9E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC3 DUP2 PUSH2 0x1D8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x29 0xD7 DELEGATECALL CREATE 0xE4 ADDMOD PC LT MOD PUSH24 0xD65830D978CADA21E0FC3F93C554597CF084C9481064736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"1120:4263:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4874:1053:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3145:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:372:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2294:1255:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;534:37:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7161:510;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3409:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4874:1053;5627:30;5646:10;5627:18;:30::i;:::-;5626:31;5618:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;5718:202;5753:11;5778:12;5804:10;5828;5852:8;5874:12;5900:10;;5718:21;:202::i;:::-;4874:1053;;;;;;:::o;3145:99::-;3189:20;3228:9;3221:16;;3145:99;:::o;1057:372:11:-;1097:13;1203:31;1220:13;1203:16;:31::i;:::-;1281;1298:13;1281:16;:31::i;:::-;1359;1376:13;1359:16;:31::i;:::-;1165:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1122:300;;1057:372;:::o;2294:1255:1:-;2302:9:9;2280:32;;:10;:32;;;:84;;;;;2352:12;2316:48;;:9;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;2280:84;2259:194;;;;;;;;;;;;:::i;:::-;;;;;;;;;2560:4:1::1;2537:28;;:11;:28;;::::0;2529:83:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2762:87;2794:11;2807:41;2762:31;:87::i;:::-;2741:188;;;;;;;;;;;;:::i;:::-;;;;;;;;;3001:11;2977:48;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2961:66;;:12;:66;;;2940:188;;;;;;;;;;;;:::i;:::-;;;;;;;;;3353:11;3329:45;;;3375:3;3380:8;3329:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3509:5;3460:82;;3495:12;3460:82;;3482:11;3460:82;;;3516:3;3521:8;3531:10;;3460:82;;;;;;;;;:::i;:::-;;;;;;;;2294:1255:::0;;;;;;;:::o;534:37:9:-;;;:::o;405:47::-;;;:::o;7161:510::-;7403:1;7388:17;;:3;:17;;;7380:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;7469:195;7504:11;7529:12;7555:10;7579:3;7596:8;7618:12;7644:10;;7469:21;:195::i;:::-;7161:510;;;;;;;:::o;3409:91::-;3455:7;3481:12;3474:19;;3409:91;:::o;1175:320:16:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;3603:1778:1:-;3893:1;3869:26;;:12;:26;;;3861:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4087:11;4063:44;;;4108:8;4063:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4054:63;;:5;:63;;;4033:172;;;;;;;;;;;;:::i;:::-;;;;;;;;;4356:19;4402:11;4378:48;;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4356:72;;4474:12;4459:27;;:11;:27;;;4438:129;;;;;;;;;;;;:::i;:::-;;;;;;;;;4771:11;4747:41;;;4789:5;4796:8;4747:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4816:20;4875:44;;;4933:11;4958;4983:5;5002:3;5019:8;5041:10;;4839:222;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4816:245;;5164:9;:21;;;5186:12;5200:7;5209:12;5164:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5341:5;5293:81;;5328:11;5293:81;;5315:11;5293:81;;;5348:3;5353:8;5363:10;;5293:81;;;;;;;;;:::i;:::-;;;;;;;;3851:1530;;3603:1778;;;;;;;;:::o;392:703:17:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;1333:274:18:-;1420:4;1527:23;1542:7;1527:14;:23::i;:::-;:73;;;;;1554:46;1579:7;1588:11;1554:24;:46::i;:::-;1527:73;1520:80;;1333:274;;;;:::o;704:411::-;768:4;975:60;1000:7;1009:25;975:24;:60::i;:::-;:133;;;;;1052:56;1077:7;599:10;1086:21;;1052:24;:56::i;:::-;1051:57;975:133;956:152;;704:411;;;:::o;4223:638::-;4316:4;4356:26;4408:34;;;4444:11;4385:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4356:100;;4498:12;4520:18;4548:19;4692:4;4686;4670:13;4664:20;4657:4;4642:13;4638:24;4629:7;4622:5;4611:86;4600:97;;4724:16;4710:30;;4774:4;4768:11;4753:26;;4806:7;:29;;;;;4831:4;4817:10;:18;;4806:29;:48;;;;;4853:1;4839:11;:15;4806:48;4799:55;;;;;;4223:638;;;;:::o;88:117:21:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:93::-;1233:7;1273:10;1266:5;1262:22;1251:33;;1197:93;;;:::o;1296:120::-;1368:23;1385:5;1368:23;:::i;:::-;1361:5;1358:34;1348:62;;1406:1;1403;1396:12;1348:62;1296:120;:::o;1422:137::-;1467:5;1505:6;1492:20;1483:29;;1521:32;1547:5;1521:32;:::i;:::-;1422:137;;;;:::o;1565:117::-;1674:1;1671;1664:12;1688:117;1797:1;1794;1787:12;1811:117;1920:1;1917;1910:12;1947:552;2004:8;2014:6;2064:3;2057:4;2049:6;2045:17;2041:27;2031:122;;2072:79;;:::i;:::-;2031:122;2185:6;2172:20;2162:30;;2215:18;2207:6;2204:30;2201:117;;;2237:79;;:::i;:::-;2201:117;2351:4;2343:6;2339:17;2327:29;;2405:3;2397:4;2389:6;2385:17;2375:8;2371:32;2368:41;2365:128;;;2412:79;;:::i;:::-;2365:128;1947:552;;;;;:::o;2505:1107::-;2610:6;2618;2626;2634;2642;2650;2699:3;2687:9;2678:7;2674:23;2670:33;2667:120;;;2706:79;;:::i;:::-;2667:120;2826:1;2851:53;2896:7;2887:6;2876:9;2872:22;2851:53;:::i;:::-;2841:63;;2797:117;2953:2;2979:53;3024:7;3015:6;3004:9;3000:22;2979:53;:::i;:::-;2969:63;;2924:118;3081:2;3107:53;3152:7;3143:6;3132:9;3128:22;3107:53;:::i;:::-;3097:63;;3052:118;3209:2;3235:52;3279:7;3270:6;3259:9;3255:22;3235:52;:::i;:::-;3225:62;;3180:117;3364:3;3353:9;3349:19;3336:33;3396:18;3388:6;3385:30;3382:117;;;3418:79;;:::i;:::-;3382:117;3531:64;3587:7;3578:6;3567:9;3563:22;3531:64;:::i;:::-;3513:82;;;;3307:298;2505:1107;;;;;;;;:::o;3618:60::-;3646:3;3667:5;3660:12;;3618:60;;;:::o;3684:142::-;3734:9;3767:53;3785:34;3794:24;3812:5;3794:24;:::i;:::-;3785:34;:::i;:::-;3767:53;:::i;:::-;3754:66;;3684:142;;;:::o;3832:126::-;3882:9;3915:37;3946:5;3915:37;:::i;:::-;3902:50;;3832:126;;;:::o;3964:155::-;4043:9;4076:37;4107:5;4076:37;:::i;:::-;4063:50;;3964:155;;;:::o;4125:189::-;4241:66;4301:5;4241:66;:::i;:::-;4236:3;4229:79;4125:189;;:::o;4320:280::-;4442:4;4480:2;4469:9;4465:18;4457:26;;4493:100;4590:1;4579:9;4575:17;4566:6;4493:100;:::i;:::-;4320:280;;;;:::o;4606:99::-;4658:6;4692:5;4686:12;4676:22;;4606:99;;;:::o;4711:169::-;4795:11;4829:6;4824:3;4817:19;4869:4;4864:3;4860:14;4845:29;;4711:169;;;;:::o;4886:307::-;4954:1;4964:113;4978:6;4975:1;4972:13;4964:113;;;5063:1;5058:3;5054:11;5048:18;5044:1;5039:3;5035:11;5028:39;5000:2;4997:1;4993:10;4988:15;;4964:113;;;5095:6;5092:1;5089:13;5086:101;;;5175:1;5166:6;5161:3;5157:16;5150:27;5086:101;4935:258;4886:307;;;:::o;5199:102::-;5240:6;5291:2;5287:7;5282:2;5275:5;5271:14;5267:28;5257:38;;5199:102;;;:::o;5307:364::-;5395:3;5423:39;5456:5;5423:39;:::i;:::-;5478:71;5542:6;5537:3;5478:71;:::i;:::-;5471:78;;5558:52;5603:6;5598:3;5591:4;5584:5;5580:16;5558:52;:::i;:::-;5635:29;5657:6;5635:29;:::i;:::-;5630:3;5626:39;5619:46;;5399:272;5307:364;;;;:::o;5677:313::-;5790:4;5828:2;5817:9;5813:18;5805:26;;5877:9;5871:4;5867:20;5863:1;5852:9;5848:17;5841:47;5905:78;5978:4;5969:6;5905:78;:::i;:::-;5897:86;;5677:313;;;;:::o;5996:1255::-;6111:6;6119;6127;6135;6143;6151;6159;6208:3;6196:9;6187:7;6183:23;6179:33;6176:120;;;6215:79;;:::i;:::-;6176:120;6335:1;6360:53;6405:7;6396:6;6385:9;6381:22;6360:53;:::i;:::-;6350:63;;6306:117;6462:2;6488:53;6533:7;6524:6;6513:9;6509:22;6488:53;:::i;:::-;6478:63;;6433:118;6590:2;6616:53;6661:7;6652:6;6641:9;6637:22;6616:53;:::i;:::-;6606:63;;6561:118;6718:2;6744:53;6789:7;6780:6;6769:9;6765:22;6744:53;:::i;:::-;6734:63;;6689:118;6846:3;6873:53;6918:7;6909:6;6898:9;6894:22;6873:53;:::i;:::-;6863:63;;6817:119;7003:3;6992:9;6988:19;6975:33;7035:18;7027:6;7024:30;7021:117;;;7057:79;;:::i;:::-;7021:117;7170:64;7226:7;7217:6;7206:9;7202:22;7170:64;:::i;:::-;7152:82;;;;6946:298;5996:1255;;;;;;;;;;:::o;7257:118::-;7344:24;7362:5;7344:24;:::i;:::-;7339:3;7332:37;7257:118;;:::o;7381:222::-;7474:4;7512:2;7501:9;7497:18;7489:26;;7525:71;7593:1;7582:9;7578:17;7569:6;7525:71;:::i;:::-;7381:222;;;;:::o;7609:1253::-;7723:6;7731;7739;7747;7755;7763;7771;7820:3;7808:9;7799:7;7795:23;7791:33;7788:120;;;7827:79;;:::i;:::-;7788:120;7947:1;7972:53;8017:7;8008:6;7997:9;7993:22;7972:53;:::i;:::-;7962:63;;7918:117;8074:2;8100:53;8145:7;8136:6;8125:9;8121:22;8100:53;:::i;:::-;8090:63;;8045:118;8202:2;8228:53;8273:7;8264:6;8253:9;8249:22;8228:53;:::i;:::-;8218:63;;8173:118;8330:2;8356:53;8401:7;8392:6;8381:9;8377:22;8356:53;:::i;:::-;8346:63;;8301:118;8458:3;8485:52;8529:7;8520:6;8509:9;8505:22;8485:52;:::i;:::-;8475:62;;8429:118;8614:3;8603:9;8599:19;8586:33;8646:18;8638:6;8635:30;8632:117;;;8668:79;;:::i;:::-;8632:117;8781:64;8837:7;8828:6;8817:9;8813:22;8781:64;:::i;:::-;8763:82;;;;8557:298;7609:1253;;;;;;;;;;:::o;8868:232::-;9008:34;9004:1;8996:6;8992:14;8985:58;9077:15;9072:2;9064:6;9060:15;9053:40;8868:232;:::o;9106:366::-;9248:3;9269:67;9333:2;9328:3;9269:67;:::i;:::-;9262:74;;9345:93;9434:3;9345:93;:::i;:::-;9463:2;9458:3;9454:12;9447:19;;9106:366;;;:::o;9478:419::-;9644:4;9682:2;9671:9;9667:18;9659:26;;9731:9;9725:4;9721:20;9717:1;9706:9;9702:17;9695:47;9759:131;9885:4;9759:131;:::i;:::-;9751:139;;9478:419;;;:::o;9903:148::-;10005:11;10042:3;10027:18;;9903:148;;;;:::o;10057:377::-;10163:3;10191:39;10224:5;10191:39;:::i;:::-;10246:89;10328:6;10323:3;10246:89;:::i;:::-;10239:96;;10344:52;10389:6;10384:3;10377:4;10370:5;10366:16;10344:52;:::i;:::-;10421:6;10416:3;10412:16;10405:23;;10167:267;10057:377;;;;:::o;10440:151::-;10580:3;10576:1;10568:6;10564:14;10557:27;10440:151;:::o;10597:400::-;10757:3;10778:84;10860:1;10855:3;10778:84;:::i;:::-;10771:91;;10871:93;10960:3;10871:93;:::i;:::-;10989:1;10984:3;10980:11;10973:18;;10597:400;;;:::o;11003:1127::-;11433:3;11455:95;11546:3;11537:6;11455:95;:::i;:::-;11448:102;;11567:148;11711:3;11567:148;:::i;:::-;11560:155;;11732:95;11823:3;11814:6;11732:95;:::i;:::-;11725:102;;11844:148;11988:3;11844:148;:::i;:::-;11837:155;;12009:95;12100:3;12091:6;12009:95;:::i;:::-;12002:102;;12121:3;12114:10;;11003:1127;;;;;;:::o;12136:143::-;12193:5;12224:6;12218:13;12209:22;;12240:33;12267:5;12240:33;:::i;:::-;12136:143;;;;:::o;12285:351::-;12355:6;12404:2;12392:9;12383:7;12379:23;12375:32;12372:119;;;12410:79;;:::i;:::-;12372:119;12530:1;12555:64;12611:7;12602:6;12591:9;12587:22;12555:64;:::i;:::-;12545:74;;12501:128;12285:351;;;;:::o;12642:250::-;12782:34;12778:1;12770:6;12766:14;12759:58;12851:33;12846:2;12838:6;12834:15;12827:58;12642:250;:::o;12898:366::-;13040:3;13061:67;13125:2;13120:3;13061:67;:::i;:::-;13054:74;;13137:93;13226:3;13137:93;:::i;:::-;13255:2;13250:3;13246:12;13239:19;;12898:366;;;:::o;13270:419::-;13436:4;13474:2;13463:9;13459:18;13451:26;;13523:9;13517:4;13513:20;13509:1;13498:9;13494:17;13487:47;13551:131;13677:4;13551:131;:::i;:::-;13543:139;;13270:419;;;:::o;13695:229::-;13835:34;13831:1;13823:6;13819:14;13812:58;13904:12;13899:2;13891:6;13887:15;13880:37;13695:229;:::o;13930:366::-;14072:3;14093:67;14157:2;14152:3;14093:67;:::i;:::-;14086:74;;14169:93;14258:3;14169:93;:::i;:::-;14287:2;14282:3;14278:12;14271:19;;13930:366;;;:::o;14302:419::-;14468:4;14506:2;14495:9;14491:18;14483:26;;14555:9;14549:4;14545:20;14541:1;14530:9;14526:17;14519:47;14583:131;14709:4;14583:131;:::i;:::-;14575:139;;14302:419;;;:::o;14727:241::-;14867:34;14863:1;14855:6;14851:14;14844:58;14936:24;14931:2;14923:6;14919:15;14912:49;14727:241;:::o;14974:366::-;15116:3;15137:67;15201:2;15196:3;15137:67;:::i;:::-;15130:74;;15213:93;15302:3;15213:93;:::i;:::-;15331:2;15326:3;15322:12;15315:19;;14974:366;;;:::o;15346:419::-;15512:4;15550:2;15539:9;15535:18;15527:26;;15599:9;15593:4;15589:20;15585:1;15574:9;15570:17;15563:47;15627:131;15753:4;15627:131;:::i;:::-;15619:139;;15346:419;;;:::o;15771:299::-;15911:34;15907:1;15899:6;15895:14;15888:58;15980:34;15975:2;15967:6;15963:15;15956:59;16049:13;16044:2;16036:6;16032:15;16025:38;15771:299;:::o;16076:366::-;16218:3;16239:67;16303:2;16298:3;16239:67;:::i;:::-;16232:74;;16315:93;16404:3;16315:93;:::i;:::-;16433:2;16428:3;16424:12;16417:19;;16076:366;;;:::o;16448:419::-;16614:4;16652:2;16641:9;16637:18;16629:26;;16701:9;16695:4;16691:20;16687:1;16676:9;16672:17;16665:47;16729:131;16855:4;16729:131;:::i;:::-;16721:139;;16448:419;;;:::o;16873:118::-;16960:24;16978:5;16960:24;:::i;:::-;16955:3;16948:37;16873:118;;:::o;16997:332::-;17118:4;17156:2;17145:9;17141:18;17133:26;;17169:71;17237:1;17226:9;17222:17;17213:6;17169:71;:::i;:::-;17250:72;17318:2;17307:9;17303:18;17294:6;17250:72;:::i;:::-;16997:332;;;;;:::o;17335:168::-;17418:11;17452:6;17447:3;17440:19;17492:4;17487:3;17483:14;17468:29;;17335:168;;;;:::o;17509:154::-;17593:6;17588:3;17583;17570:30;17655:1;17646:6;17641:3;17637:16;17630:27;17509:154;;;:::o;17691:301::-;17787:3;17808:70;17871:6;17866:3;17808:70;:::i;:::-;17801:77;;17888:43;17924:6;17919:3;17912:5;17888:43;:::i;:::-;17956:29;17978:6;17956:29;:::i;:::-;17951:3;17947:39;17940:46;;17691:301;;;;;:::o;17998:549::-;18175:4;18213:2;18202:9;18198:18;18190:26;;18226:71;18294:1;18283:9;18279:17;18270:6;18226:71;:::i;:::-;18307:72;18375:2;18364:9;18360:18;18351:6;18307:72;:::i;:::-;18426:9;18420:4;18416:20;18411:2;18400:9;18396:18;18389:48;18454:86;18535:4;18526:6;18518;18454:86;:::i;:::-;18446:94;;17998:549;;;;;;;:::o;18553:235::-;18693:34;18689:1;18681:6;18677:14;18670:58;18762:18;18757:2;18749:6;18745:15;18738:43;18553:235;:::o;18794:366::-;18936:3;18957:67;19021:2;19016:3;18957:67;:::i;:::-;18950:74;;19033:93;19122:3;19033:93;:::i;:::-;19151:2;19146:3;19142:12;19135:19;;18794:366;;;:::o;19166:419::-;19332:4;19370:2;19359:9;19355:18;19347:26;;19419:9;19413:4;19409:20;19405:1;19394:9;19390:17;19383:47;19447:131;19573:4;19447:131;:::i;:::-;19439:139;;19166:419;;;:::o;19591:236::-;19731:34;19727:1;19719:6;19715:14;19708:58;19800:19;19795:2;19787:6;19783:15;19776:44;19591:236;:::o;19833:366::-;19975:3;19996:67;20060:2;20055:3;19996:67;:::i;:::-;19989:74;;20072:93;20161:3;20072:93;:::i;:::-;20190:2;20185:3;20181:12;20174:19;;19833:366;;;:::o;20205:419::-;20371:4;20409:2;20398:9;20394:18;20386:26;;20458:9;20452:4;20448:20;20444:1;20433:9;20429:17;20422:47;20486:131;20612:4;20486:131;:::i;:::-;20478:139;;20205:419;;;:::o;20630:222::-;20723:4;20761:2;20750:9;20746:18;20738:26;;20774:71;20842:1;20831:9;20827:17;20818:6;20774:71;:::i;:::-;20630:222;;;;:::o;20858:249::-;20998:34;20994:1;20986:6;20982:14;20975:58;21067:32;21062:2;21054:6;21050:15;21043:57;20858:249;:::o;21113:366::-;21255:3;21276:67;21340:2;21335:3;21276:67;:::i;:::-;21269:74;;21352:93;21441:3;21352:93;:::i;:::-;21470:2;21465:3;21461:12;21454:19;;21113:366;;;:::o;21485:419::-;21651:4;21689:2;21678:9;21674:18;21666:26;;21738:9;21732:4;21728:20;21724:1;21713:9;21709:17;21702:47;21766:131;21892:4;21766:131;:::i;:::-;21758:139;;21485:419;;;:::o;21910:242::-;22050:34;22046:1;22038:6;22034:14;22027:58;22119:25;22114:2;22106:6;22102:15;22095:50;21910:242;:::o;22158:366::-;22300:3;22321:67;22385:2;22380:3;22321:67;:::i;:::-;22314:74;;22397:93;22486:3;22397:93;:::i;:::-;22515:2;22510:3;22506:12;22499:19;;22158:366;;;:::o;22530:419::-;22696:4;22734:2;22723:9;22719:18;22711:26;;22783:9;22777:4;22773:20;22769:1;22758:9;22754:17;22747:47;22811:131;22937:4;22811:131;:::i;:::-;22803:139;;22530:419;;;:::o;22955:882::-;23216:4;23254:3;23243:9;23239:19;23231:27;;23268:71;23336:1;23325:9;23321:17;23312:6;23268:71;:::i;:::-;23349:72;23417:2;23406:9;23402:18;23393:6;23349:72;:::i;:::-;23431;23499:2;23488:9;23484:18;23475:6;23431:72;:::i;:::-;23513;23581:2;23570:9;23566:18;23557:6;23513:72;:::i;:::-;23595:73;23663:3;23652:9;23648:19;23639:6;23595:73;:::i;:::-;23716:9;23710:4;23706:20;23700:3;23689:9;23685:19;23678:49;23744:86;23825:4;23816:6;23808;23744:86;:::i;:::-;23736:94;;22955:882;;;;;;;;;;:::o;23843:98::-;23894:6;23928:5;23922:12;23912:22;;23843:98;;;:::o;23947:360::-;24033:3;24061:38;24093:5;24061:38;:::i;:::-;24115:70;24178:6;24173:3;24115:70;:::i;:::-;24108:77;;24194:52;24239:6;24234:3;24227:4;24220:5;24216:16;24194:52;:::i;:::-;24271:29;24293:6;24271:29;:::i;:::-;24266:3;24262:39;24255:46;;24037:270;23947:360;;;;:::o;24313:115::-;24398:23;24415:5;24398:23;:::i;:::-;24393:3;24386:36;24313:115;;:::o;24434:525::-;24599:4;24637:2;24626:9;24622:18;24614:26;;24650:71;24718:1;24707:9;24703:17;24694:6;24650:71;:::i;:::-;24768:9;24762:4;24758:20;24753:2;24742:9;24738:18;24731:48;24796:76;24867:4;24858:6;24796:76;:::i;:::-;24788:84;;24882:70;24948:2;24937:9;24933:18;24924:6;24882:70;:::i;:::-;24434:525;;;;;;:::o;24965:180::-;25013:77;25010:1;25003:88;25110:4;25107:1;25100:15;25134:4;25131:1;25124:15;25151:233;25190:3;25213:24;25231:5;25213:24;:::i;:::-;25204:33;;25259:66;25252:5;25249:77;25246:103;;25329:18;;:::i;:::-;25246:103;25376:1;25369:5;25365:13;25358:20;;25151:233;;;:::o;25390:180::-;25438:77;25435:1;25428:88;25535:4;25532:1;25525:15;25559:4;25556:1;25549:15;25576:185;25616:1;25633:20;25651:1;25633:20;:::i;:::-;25628:25;;25667:20;25685:1;25667:20;:::i;:::-;25662:25;;25706:1;25696:35;;25711:18;;:::i;:::-;25696:35;25753:1;25750;25746:9;25741:14;;25576:185;;;;:::o;25767:180::-;25815:77;25812:1;25805:88;25912:4;25909:1;25902:15;25936:4;25933:1;25926:15;25953:191;25993:4;26013:20;26031:1;26013:20;:::i;:::-;26008:25;;26047:20;26065:1;26047:20;:::i;:::-;26042:25;;26086:1;26083;26080:8;26077:34;;;26091:18;;:::i;:::-;26077:34;26136:1;26133;26129:9;26121:17;;25953:191;;;;:::o;26150:176::-;26182:1;26199:20;26217:1;26199:20;:::i;:::-;26194:25;;26233:20;26251:1;26233:20;:::i;:::-;26228:25;;26272:1;26262:35;;26277:18;;:::i;:::-;26262:35;26318:1;26315;26311:9;26306:14;;26150:176;;;;:::o;26332:305::-;26372:3;26391:20;26409:1;26391:20;:::i;:::-;26386:25;;26425:20;26443:1;26425:20;:::i;:::-;26420:25;;26579:1;26511:66;26507:74;26504:1;26501:81;26498:107;;;26585:18;;:::i;:::-;26498:107;26629:1;26626;26622:9;26615:16;;26332:305;;;;:::o;26643:180::-;26691:77;26688:1;26681:88;26788:4;26785:1;26778:15;26812:4;26809:1;26802:15;26829:149;26865:7;26905:66;26898:5;26894:78;26883:89;;26829:149;;;:::o;26984:115::-;27069:23;27086:5;27069:23;:::i;:::-;27064:3;27057:36;26984:115;;:::o;27105:218::-;27196:4;27234:2;27223:9;27219:18;27211:26;;27247:69;27313:1;27302:9;27298:17;27289:6;27247:69;:::i;:::-;27105:218;;;;:::o"},"methodIdentifiers":{"MESSENGER()":"927ede2d","OTHER_BRIDGE()":"7f46ddb2","bridgeERC721(address,address,uint256,uint32,bytes)":"3687011a","bridgeERC721To(address,address,address,uint256,uint32,bytes)":"aa557452","finalizeBridgeERC721(address,address,address,address,uint256,bytes)":"761f4493","messenger()":"3cb747bf","otherBridge()":"c89701a2","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_otherBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_to\":\"Address to receive the token on the other domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"constructor\":{\"custom:semver\":\"1.0.0\",\"params\":{\"_messenger\":\"Address of the CrossDomainMessenger on this network.\",\"_otherBridge\":\"Address of the ERC721 bridge on the other network.\"}},\"finalizeBridgeERC721(address,address,address,address,uint256,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to L1. Data supplied here will not be used to                     execute any code on L1 and is only emitted as extra data for the                     convenience of off-chain tooling.\",\"_from\":\"Address that triggered the bridge on the other domain.\",\"_localToken\":\"Address of the ERC721 token on this domain.\",\"_remoteToken\":\"Address of the ERC721 token on the other domain.\",\"_to\":\"Address to receive the token on this domain.\",\"_tokenId\":\"ID of the token being deposited.\"}},\"messenger()\":{\"custom:legacy\":\"@notice Legacy getter for messenger contract.\",\"returns\":{\"_0\":\"Messenger contract on this domain.\"}},\"otherBridge()\":{\"custom:legacy\":\"@notice Legacy getter for other bridge address.\",\"returns\":{\"_0\":\"Address of the bridge on the other network.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"L2ERC721Bridge\",\"version\":1},\"userdoc\":{\"events\":{\"ERC721BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge from the other network is finalized.\"},\"ERC721BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge to the other network is initiated.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Address of the bridge on the other network.\"},\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to the caller's account on the other chain. Note that         this function can only be called by EOAs. Smart contract wallets should use the         `bridgeERC721To` function after ensuring that the recipient address on the remote         chain exists. Also note that the current owner of the token on this chain must         approve this contract to operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to some recipient's account on the other chain. Note         that the current owner of the token on this chain must approve this contract to         operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"finalizeBridgeERC721(address,address,address,address,uint256,bytes)\":{\"notice\":\"Completes an ERC721 bridge from the other domain and sends the ERC721 token to the         recipient on this domain.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The L2 ERC721 bridge is a contract which works together with the L1 ERC721 bridge to         make it possible to transfer ERC721 tokens from Ethereum to Optimism. This contract         acts as a minter for new tokens when it hears about deposits into the L1 ERC721 bridge.         This contract also acts as a burner for tokens being withdrawn.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge ONLY supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol\":\"L2ERC721Bridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol\":{\"keccak256\":\"0xf66d53c1bc80c9a204ce8752f26a6fdaa247f6fd80438020b889e0f1c8079b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab9be6161db4e3e0e598cdaf5e8f9143b4f4bfdbc65e335c5d948b00dc4a1cb\",\"dweb:/ipfs/QmaaLcDguxg1XyCNmbtKMkuTi4ngK8qCUFb1NkurJZGAhZ\"]},\"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol\":{\"keccak256\":\"0xc29eaa8bbc402ff540059207a2133bb020b26ee57e36c801fa06aff245ef30cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://589c633276ad0b7bb0f31331718bcc5f48d54cf1ae28ab0f73484013be0273c7\",\"dweb:/ipfs/QmQbiwCuLQoFW7R4GKxtU3V6C1d42YzsHCQQSDobnwUvtu\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol\":{\"keccak256\":\"0xb47389fbec63e85b2d04fce538fe1b8e048278d631729458b70e32a31971c092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7133f38e3d8d1911738057b1d4523989abd7cd029797b1d3b59cda29d42e9704\",\"dweb:/ipfs/QmUN31CLssESHrBwWA3WYP5L2xESo9Q4aq2Exua1e8UtUW\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol\":{\"keccak256\":\"0xf1a3dd4452df8882a65a31c5e2e8de7872b08cf078be7a5a7da51e6f75c53ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09a2560cae35ca4789fe1ff5edb2bae9fa7dcda115a55f7ccdcc974a2e37526\",\"dweb:/ipfs/QmPQeTvrJ4SJpng5VGZNMf1u85NWxrdus4gGn8xYkHddKM\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol":{"Constants":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dde512852e72d42ece05ca11afee197a4c6866dca94940f54bdbb6c1984206ba64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xE5 SLT DUP6 0x2E PUSH19 0xD42ECE05CA11AFEE197A4C6866DCA94940F54B 0xDB 0xB6 0xC1 SWAP9 TIMESTAMP MOD 0xBA PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"336:1009:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dde512852e72d42ece05ca11afee197a4c6866dca94940f54bdbb6c1984206ba64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xE5 SLT DUP6 0x2E PUSH19 0xD42ECE05CA11AFEE197A4C6866DCA94940F54B 0xDB 0xB6 0xC1 SWAP9 TIMESTAMP MOD 0xBA PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"336:1009:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Constants\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Constants is a library for storing constants. Simple! Don't put everything in here, just         the stuff used in multiple contracts. Constants that only apply to a single contract         should be defined in that contract instead.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol":{"Encoding":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220097b2c5a4bf4e44d9c1557b6437ab4b5d02703bd4a25a624db8d21f99010a9c264736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH28 0x2C5A4BF4E44D9C1557B6437AB4B5D02703BD4A25A624DB8D21F99010 0xA9 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"287:5428:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220097b2c5a4bf4e44d9c1557b6437ab4b5d02703bd4a25a624db8d21f99010a9c264736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH28 0x2C5A4BF4E44D9C1557B6437AB4B5D02703BD4A25A624DB8D21F99010 0xA9 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"287:5428:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Encoding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Encoding handles Optimism's various different encoding schemes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":\"Encoding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol":{"Hashing":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256044c88a8eecc7f4e4127ae491263cdd3265d9d07e8b6526928c48fc3aa4de64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH1 0x44 0xC8 DUP11 DUP15 0xEC 0xC7 DELEGATECALL 0xE4 SLT PUSH27 0xE491263CDD3265D9D07E8B6526928C48FC3AA4DE64736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"237:5551:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256044c88a8eecc7f4e4127ae491263cdd3265d9d07e8b6526928c48fc3aa4de64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH1 0x44 0xC8 DUP11 DUP15 0xEC 0xC7 DELEGATECALL 0xE4 SLT PUSH27 0xE491263CDD3265D9D07E8B6526928C48FC3AA4DE64736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"237:5551:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Hashing\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Hashing handles Optimism's various different hashing schemes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":\"Hashing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol":{"SafeCall":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707bbf7b36383202b5a717ef6c52dcfa43c5440c068e6dc230b17053c1a13e5164736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7BBF7B36383202B5A717EF6C52DCFA43C5 DIFFICULTY 0xC MOD DUP15 PUSH14 0xC230B17053C1A13E5164736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ","sourceMap":"124:4224:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707bbf7b36383202b5a717ef6c52dcfa43c5440c068e6dc230b17053c1a13e5164736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7BBF7B36383202B5A717EF6C52DCFA43C5 DIFFICULTY 0xC MOD DUP15 PUSH14 0xC230B17053C1A13E5164736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ","sourceMap":"124:4224:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeCall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Perform low level safe calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":\"SafeCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol":{"Types":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6af61edb4f2e8fd2e34c2ae7e30c98ddc793f76fddaba34a425c3bf888d863064736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xAF PUSH2 0xEDB4 CALLCODE 0xE8 REVERT 0x2E CALLVALUE 0xC2 0xAE PUSH31 0x30C98DDC793F76FDDABA34A425C3BF888D863064736F6C634300080F003300 ","sourceMap":"161:3166:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6af61edb4f2e8fd2e34c2ae7e30c98ddc793f76fddaba34a425c3bf888d863064736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xAF PUSH2 0xEDB4 CALLCODE 0xE8 REVERT 0x2E CALLVALUE 0xC2 0xAE PUSH31 0x30C98DDC793F76FDDABA34A425C3BF888D863064736F6C634300080F003300 ","sourceMap":"161:3166:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Types\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains various types used throughout the Optimism contract system.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":\"Types\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol":{"RLPWriter":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037e43e7ec4b082747d49b9f4dbaa2492875bad98d0a1b3c9b52ec7735dd70fcb64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xE4 RETURNDATACOPY PUSH31 0xC4B082747D49B9F4DBAA2492875BAD98D0A1B3C9B52EC7735DD70FCB64736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"388:5748:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037e43e7ec4b082747d49b9f4dbaa2492875bad98d0a1b3c9b52ec7735dd70fcb64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xE4 RETURNDATACOPY PUSH31 0xC4B082747D49B9F4DBAA2492875BAD98D0A1B3C9B52EC7735DD70FCB64736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"388:5748:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"RLPWriter is a library for encoding Solidity types to RLP bytes. Adapted from Bakaoh's         RLPEncode library (https://github.com/bakaoh/solidity-rlp-encode) with minor         modifications to improve legibility.\",\"custom:attribution\":\"https://github.com/bakaoh/solidity-rlp-encode\",\"kind\":\"dev\",\"methods\":{},\"title\":\"RLPWriter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":\"RLPWriter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol":{"CrossDomainMessenger":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"FailedRelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"RelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"messageNonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasLimit","type":"uint256"}],"name":"SentMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"SentMessageExtension1","type":"event"},{"inputs":[],"name":"MESSAGE_VERSION","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_CALLDATA_OVERHEAD","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_CONSTANT_OVERHEAD","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OTHER_MESSENGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"}],"name":"baseGas","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"failedMessages","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"messageNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_minGasLimit","type":"uint256"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"relayMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"successfulMessages","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xDomainMessageSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"MESSAGE_VERSION()":"3f827a5a","MIN_GAS_CALLDATA_OVERHEAD()":"028f85f7","MIN_GAS_CONSTANT_OVERHEAD()":"7dea7cc3","MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()":"0c568498","MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()":"2828d7e8","OTHER_MESSENGER()":"9fce812c","baseGas(bytes,uint32)":"b28ade25","failedMessages(bytes32)":"a4e7f8bd","messageNonce()":"ecc70428","relayMessage(uint256,address,address,uint256,uint256,bytes)":"d764ad0b","sendMessage(address,bytes,uint32)":"3dbb202b","successfulMessages(bytes32)":"b1b1b209","xDomainMessageSender()":"6e296e45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SentMessageExtension1\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSAGE_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CALLDATA_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CONSTANT_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_MESSENGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"baseGas\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"relayMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"successfulMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:upgradeable\":\"@title CrossDomainMessenger\",\"events\":{\"FailedRelayedMessage(bytes32)\":{\"params\":{\"msgHash\":\"Hash of the message that failed to be relayed.\"}},\"RelayedMessage(bytes32)\":{\"params\":{\"msgHash\":\"Hash of the message that was relayed.\"}},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"Minimum gas limit that the message can be executed with.\",\"message\":\"Message to trigger the recipient address with.\",\"messageNonce\":\"Unique nonce attached to the message.\",\"sender\":\"Address of the sender of the message.\",\"target\":\"Address of the recipient of the message.\"}},\"SentMessageExtension1(address,uint256)\":{\"params\":{\"sender\":\"Address of the sender of the message.\",\"value\":\"ETH value sent along with the message to the recipient.\"}}},\"kind\":\"dev\",\"methods\":{\"baseGas(bytes,uint32)\":{\"params\":{\"_message\":\"Message to compute the amount of required gas for.\",\"_minGasLimit\":\"Minimum desired gas limit when message goes to target.\"},\"returns\":{\"_0\":\"Amount of gas required to guarantee message receipt.\"}},\"constructor\":{\"params\":{\"_otherMessenger\":\"Address of the messenger on the paired chain.\"}},\"messageNonce()\":{\"returns\":{\"_0\":\"Nonce of the next message to be sent, with added message version.\"}},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"params\":{\"_message\":\"Message to send to the target.\",\"_minGasLimit\":\"Minimum amount of gas that the message can be executed with.\",\"_nonce\":\"Nonce of the message being relayed.\",\"_sender\":\"Address of the user who sent the message.\",\"_target\":\"Address that the message is targeted at.\",\"_value\":\"ETH value to send with the message.\"}},\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_message\":\"Message to trigger the target address with.\",\"_minGasLimit\":\"Minimum gas limit that the message can be executed with.\",\"_target\":\"Target contract or wallet address.\"}},\"xDomainMessageSender()\":{\"returns\":{\"_0\":\"Address of the sender of the currently executing message on the other chain.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"FailedRelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message fails to be relayed on this chain.\"},\"RelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message is successfully relayed on this chain.\"},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"notice\":\"Emitted whenever a message is sent to the other chain.\"},\"SentMessageExtension1(address,uint256)\":{\"notice\":\"Additional event data to emit, required as of Bedrock. Cannot be merged with the         SentMessage event without breaking the ABI of this contract, this is good enough.\"}},\"kind\":\"user\",\"methods\":{\"MESSAGE_VERSION()\":{\"notice\":\"Current message version identifier.\"},\"MIN_GAS_CALLDATA_OVERHEAD()\":{\"notice\":\"Extra gas added to base gas for each byte of calldata in a message.\"},\"MIN_GAS_CONSTANT_OVERHEAD()\":{\"notice\":\"Constant overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()\":{\"notice\":\"Denominator for dynamic overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()\":{\"notice\":\"Numerator for dynamic overhead added to the base gas for a message.\"},\"OTHER_MESSENGER()\":{\"notice\":\"Address of the paired CrossDomainMessenger contract on the other chain.\"},\"baseGas(bytes,uint32)\":{\"notice\":\"Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely.\"},\"failedMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt.\"},\"messageNonce()\":{\"notice\":\"Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures.\"},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed.\"},\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function).\"},\"successfulMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again.\"},\"xDomainMessageSender()\":{\"notice\":\"Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it.\"}},\"notice\":\"CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2         cross-chain messenger contracts. It's designed to be a universal interface that only         needs to be extended slightly to provide low-level message passing functionality on each         chain it's deployed on. Currently only designed for message passing between two paired         chains and does not support one-to-many interactions.         Any changes to this contract MUST result in a semver bump for contracts that inherit it.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":\"CrossDomainMessenger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"},"CrossDomainMessengerLegacySpacer0":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200e66ef21952453c2343f4fc85cb9630f7729bc8d0a72f955fa983ce207642e7564736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH7 0xEF21952453C234 EXTCODEHASH 0x4F 0xC8 0x5C 0xB9 PUSH4 0xF7729BC DUP14 EXP PUSH19 0xF955FA983CE207642E7564736F6C634300080F STOP CALLER ","sourceMap":"673:210:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212200e66ef21952453c2343f4fc85cb9630f7729bc8d0a72f955fa983ce207642e7564736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH7 0xEF21952453C234 EXTCODEHASH 0x4F 0xC8 0x5C 0xB9 PUSH4 0xF7729BC DUP14 EXP PUSH19 0xF955FA983CE207642E7564736F6C634300080F STOP CALLER ","sourceMap":"673:210:8:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:legacy\":\"@title CrossDomainMessengerLegacySpacer0\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"spacer_0_0_20\":{\"custom:legacy\":\"@custom:spacer libAddressManager\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract only exists to add a spacer to the CrossDomainMessenger where the         libAddressManager variable used to exist. Must be the first contract in the inheritance         tree of the CrossDomainMessenger.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":\"CrossDomainMessengerLegacySpacer0\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"},"CrossDomainMessengerLegacySpacer1":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122036735d61f2d3d1d36531ec7434c2ed1ae33690e0281b3169df3301c2ad635a4964736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH20 0x5D61F2D3D1D36531EC7434C2ED1AE33690E0281B BALANCE PUSH10 0xDF3301C2AD635A496473 PUSH16 0x6C634300080F00330000000000000000 ","sourceMap":"1210:1900:8:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122036735d61f2d3d1d36531ec7434c2ed1ae33690e0281b3169df3301c2ad635a4964736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH20 0x5D61F2D3D1D36531EC7434C2ED1AE33690E0281B BALANCE PUSH10 0xDF3301C2AD635A496473 PUSH16 0x6C634300080F00330000000000000000 ","sourceMap":"1210:1900:8:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:legacy\":\"@title CrossDomainMessengerLegacySpacer1\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap_reentrancy_guard\":{\"custom:spacer\":\"ReentrancyGuardUpgradeable\"},\"spacer_101_0_1\":{\"custom:legacy\":\"@custom:spacer _paused\"},\"spacer_102_0_1568\":{\"custom:legacy\":\"@custom:spacer __gap\"},\"spacer_151_0_32\":{\"custom:legacy\":\"@custom:spacer ReentrancyGuardUpgradeable's `_status` field.\"},\"spacer_1_0_1600\":{\"custom:legacy\":\"@custom:spacer __gap\"},\"spacer_201_0_32\":{\"custom:legacy\":\"@custom:spacer blockedMessages\"},\"spacer_202_0_32\":{\"custom:legacy\":\"@custom:spacer relayedMessages\"},\"spacer_51_0_20\":{\"custom:legacy\":\"@custom:spacer _owner\"},\"spacer_52_0_1568\":{\"custom:legacy\":\"@custom:spacer __gap\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract only exists to add a spacer to the CrossDomainMessenger where the         PausableUpgradable and OwnableUpgradeable variables used to exist. Must be         the third contract in the inheritance tree of the CrossDomainMessenger.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":\"CrossDomainMessengerLegacySpacer1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol":{"ERC721Bridge":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeInitiated","type":"event"},{"inputs":[],"name":"MESSENGER","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OTHER_BRIDGE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721To","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"messenger","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"otherBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"MESSENGER()":"927ede2d","OTHER_BRIDGE()":"7f46ddb2","bridgeERC721(address,address,uint256,uint32,bytes)":"3687011a","bridgeERC721To(address,address,address,uint256,uint32,bytes)":"aa557452","messenger()":"3cb747bf","otherBridge()":"c89701a2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC721BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"params\":{\"extraData\":\"Extra data for use on the client-side.\",\"from\":\"Address that initiated bridging action.\",\"localToken\":\"Address of the token on this domain.\",\"remoteToken\":\"Address of the token on the remote domain.\",\"to\":\"Address to receive the token.\",\"tokenId\":\"ID of the specific token deposited.\"}},\"ERC721BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"params\":{\"extraData\":\"Extra data for use on the client-side.\",\"from\":\"Address that initiated bridging action.\",\"localToken\":\"Address of the token on this domain.\",\"remoteToken\":\"Address of the token on the remote domain.\",\"to\":\"Address to receive the token.\",\"tokenId\":\"ID of the specific token deposited.\"}}},\"kind\":\"dev\",\"methods\":{\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_to\":\"Address to receive the token on the other domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"constructor\":{\"params\":{\"_messenger\":\"Address of the CrossDomainMessenger on this network.\",\"_otherBridge\":\"Address of the ERC721 bridge on the other network.\"}},\"messenger()\":{\"custom:legacy\":\"@notice Legacy getter for messenger contract.\",\"returns\":{\"_0\":\"Messenger contract on this domain.\"}},\"otherBridge()\":{\"custom:legacy\":\"@notice Legacy getter for other bridge address.\",\"returns\":{\"_0\":\"Address of the bridge on the other network.\"}}},\"title\":\"ERC721Bridge\",\"version\":1},\"userdoc\":{\"events\":{\"ERC721BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge from the other network is finalized.\"},\"ERC721BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge to the other network is initiated.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Address of the bridge on the other network.\"},\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to the caller's account on the other chain. Note that         this function can only be called by EOAs. Smart contract wallets should use the         `bridgeERC721To` function after ensuring that the recipient address on the remote         chain exists. Also note that the current owner of the token on this chain must         approve this contract to operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to some recipient's account on the other chain. Note         that the current owner of the token on this chain must approve this contract to         operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"}},\"notice\":\"ERC721Bridge is a base contract for the L1 and L2 ERC721 bridges.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol\":\"ERC721Bridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol\":{\"keccak256\":\"0xb47389fbec63e85b2d04fce538fe1b8e048278d631729458b70e32a31971c092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7133f38e3d8d1911738057b1d4523989abd7cd029797b1d3b59cda29d42e9704\",\"dweb:/ipfs/QmUN31CLssESHrBwWA3WYP5L2xESo9Q4aq2Exua1e8UtUW\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol":{"IOptimismMintableERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"BRIDGE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REMOTE_CHAIN_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REMOTE_TOKEN","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"remoteChainId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"remoteToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"safeMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"BRIDGE()":"ee9a31a2","REMOTE_CHAIN_ID()":"7d1d0c5b","REMOTE_TOKEN()":"033964be","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","bridge()":"e78cea92","burn(address,uint256)":"9dc29fac","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","remoteChainId()":"e9518196","remoteToken()":"d6c0b2c4","safeMint(address,uint256)":"a1448194","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BRIDGE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOTE_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REMOTE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteChainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Burn(address,uint256)\":{\"params\":{\"account\":\"Address of the account the token was burned from.\",\"tokenId\":\"Token ID of the burned token.\"}},\"Mint(address,uint256)\":{\"params\":{\"account\":\"Address of the account the token was minted to.\",\"tokenId\":\"Token ID of the minted token.\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(address,uint256)\":{\"params\":{\"_from\":\"Address of the user to burn the token from.\",\"_tokenId\":\"Token ID to burn.\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeMint(address,uint256)\":{\"params\":{\"_to\":\"Address of the user to mint the token for.\",\"_tokenId\":\"Token ID to mint.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"IOptimismMintableERC721\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,uint256)\":{\"notice\":\"Emitted when a token is burned.\"},\"Mint(address,uint256)\":{\"notice\":\"Emitted when a token is minted.\"}},\"kind\":\"user\",\"methods\":{\"BRIDGE()\":{\"notice\":\"Address of the ERC721 bridge on this network.\"},\"REMOTE_CHAIN_ID()\":{\"notice\":\"Chain ID of the chain where the remote token is deployed.\"},\"REMOTE_TOKEN()\":{\"notice\":\"Address of the token on the remote domain.\"},\"bridge()\":{\"notice\":\"Address of the ERC721 bridge on this network.\"},\"burn(address,uint256)\":{\"notice\":\"Burns a token ID from a user.\"},\"remoteChainId()\":{\"notice\":\"Chain ID of the chain where the remote token is deployed.\"},\"remoteToken()\":{\"notice\":\"Address of the token on the remote domain.\"},\"safeMint(address,uint256)\":{\"notice\":\"Mints some token ID for a user, checking first that contract recipients         are aware of the ERC721 protocol to prevent tokens from being forever locked.\"}},\"notice\":\"Interface for contracts that are compatible with the OptimismMintableERC721 standard.         Tokens that follow this standard can be easily transferred across the ERC721 bridge.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol\":\"IOptimismMintableERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol\":{\"keccak256\":\"0xf1a3dd4452df8882a65a31c5e2e8de7872b08cf078be7a5a7da51e6f75c53ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09a2560cae35ca4789fe1ff5edb2bae9fa7dcda115a55f7ccdcc974a2e37526\",\"dweb:/ipfs/QmPQeTvrJ4SJpng5VGZNMf1u85NWxrdus4gGn8xYkHddKM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol":{"Semver":{"abi":[{"inputs":[{"internalType":"uint256","name":"_major","type":"uint256"},{"internalType":"uint256","name":"_minor","type":"uint256"},{"internalType":"uint256","name":"_patch","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2378":{"entryPoint":null,"id":2378,"parameterSlots":3,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":120,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory":{"entryPoint":141,"id":null,"parameterSlots":2,"returnSlots":3},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":87,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":82,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":97,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1360:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:32:21","statements":[{"nodeType":"YulAssignment","src":"389:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:77:21"},{"body":{"nodeType":"YulBlock","src":"460:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:21"},"nodeType":"YulFunctionCall","src":"519:12:21"},"nodeType":"YulExpressionStatement","src":"519:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:21"},"nodeType":"YulFunctionCall","src":"490:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:21"},"nodeType":"YulFunctionCall","src":"480:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:21"},"nodeType":"YulFunctionCall","src":"473:43:21"},"nodeType":"YulIf","src":"470:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:21","type":""}],"src":"417:122:21"},{"body":{"nodeType":"YulBlock","src":"608:80:21","statements":[{"nodeType":"YulAssignment","src":"618:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:21"},"nodeType":"YulFunctionCall","src":"627:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:21"},"nodeType":"YulFunctionCall","src":"649:33:21"},"nodeType":"YulExpressionStatement","src":"649:33:21"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:21","type":""}],"src":"545:143:21"},{"body":{"nodeType":"YulBlock","src":"805:552:21","statements":[{"body":{"nodeType":"YulBlock","src":"851:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"853:77:21"},"nodeType":"YulFunctionCall","src":"853:79:21"},"nodeType":"YulExpressionStatement","src":"853:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"826:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"835:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"822:3:21"},"nodeType":"YulFunctionCall","src":"822:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"847:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"818:3:21"},"nodeType":"YulFunctionCall","src":"818:32:21"},"nodeType":"YulIf","src":"815:119:21"},{"nodeType":"YulBlock","src":"944:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"959:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"973:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"963:6:21","type":""}]},{"nodeType":"YulAssignment","src":"988:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1034:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1045:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1030:3:21"},"nodeType":"YulFunctionCall","src":"1030:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1054:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"998:31:21"},"nodeType":"YulFunctionCall","src":"998:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"988:6:21"}]}]},{"nodeType":"YulBlock","src":"1082:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1097:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1111:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1101:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1127:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1173:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1184:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1169:3:21"},"nodeType":"YulFunctionCall","src":"1169:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1193:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1137:31:21"},"nodeType":"YulFunctionCall","src":"1137:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1127:6:21"}]}]},{"nodeType":"YulBlock","src":"1221:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1236:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1250:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1240:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1266:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1312:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1323:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1308:3:21"},"nodeType":"YulFunctionCall","src":"1308:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1332:7:21"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"1276:31:21"},"nodeType":"YulFunctionCall","src":"1276:64:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1266:6:21"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"759:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"770:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"782:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"790:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"798:6:21","type":""}],"src":"694:663:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e060405234801561001057600080fd5b506040516107173803806107178339818101604052810190610032919061008d565b82608081815250508160a081815250508060c081815250505050506100e0565b600080fd5b6000819050919050565b61006a81610057565b811461007557600080fd5b50565b60008151905061008781610061565b92915050565b6000806000606084860312156100a6576100a5610052565b5b60006100b486828701610078565b93505060206100c586828701610078565b92505060406100d686828701610078565b9150509250925092565b60805160a05160c05161060b61010c600039600060a701526000607e015260006055015261060b6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806354fd4d5014610030575b600080fd5b61003861004e565b60405161004591906102ea565b60405180910390f35b60606100797f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100a27f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100cb7f00000000000000000000000000000000000000000000000000000000000000006100f1565b6040516020016100dd93929190610394565b604051602081830303815290604052905090565b606060008203610138576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061024c565b600082905060005b6000821461016a57808061015390610414565b915050600a82610163919061048b565b9150610140565b60008167ffffffffffffffff811115610186576101856104bc565b5b6040519080825280601f01601f1916602001820160405280156101b85781602001600182028036833780820191505090505b5090505b60008514610245576001826101d191906104eb565b9150600a856101e0919061051f565b60306101ec9190610550565b60f81b818381518110610202576102016105a6565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561023e919061048b565b94506101bc565b8093505050505b919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561028b578082015181840152602081019050610270565b8381111561029a576000848401525b50505050565b6000601f19601f8301169050919050565b60006102bc82610251565b6102c6818561025c565b93506102d681856020860161026d565b6102df816102a0565b840191505092915050565b6000602082019050818103600083015261030481846102b1565b905092915050565b600081905092915050565b600061032282610251565b61032c818561030c565b935061033c81856020860161026d565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b600061037e60018361030c565b915061038982610348565b600182019050919050565b60006103a08286610317565b91506103ab82610371565b91506103b78285610317565b91506103c282610371565b91506103ce8284610317565b9150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061041f8261040a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610451576104506103db565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006104968261040a565b91506104a18361040a565b9250826104b1576104b061045c565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006104f68261040a565b91506105018361040a565b925082821015610514576105136103db565b5b828203905092915050565b600061052a8261040a565b91506105358361040a565b9250826105455761054461045c565b5b828206905092915050565b600061055b8261040a565b91506105668361040a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561059b5761059a6103db565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220b745075c68fb902e003c6004538c670260db44283632279196add123e68869fb64736f6c634300080f0033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x717 CODESIZE SUB DUP1 PUSH2 0x717 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x8D JUMP JUMPDEST DUP3 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP POP POP POP PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6A DUP2 PUSH2 0x57 JUMP JUMPDEST DUP2 EQ PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87 DUP2 PUSH2 0x61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA6 JUMPI PUSH2 0xA5 PUSH2 0x52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB4 DUP7 DUP3 DUP8 ADD PUSH2 0x78 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC5 DUP7 DUP3 DUP8 ADD PUSH2 0x78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD6 DUP7 DUP3 DUP8 ADD PUSH2 0x78 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x60B PUSH2 0x10C PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH1 0xA7 ADD MSTORE PUSH1 0x0 PUSH1 0x7E ADD MSTORE PUSH1 0x0 PUSH1 0x55 ADD MSTORE PUSH2 0x60B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x79 PUSH32 0x0 PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xA2 PUSH32 0x0 PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xCB PUSH32 0x0 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x16A JUMPI DUP1 DUP1 PUSH2 0x153 SWAP1 PUSH2 0x414 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP2 POP PUSH2 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186 JUMPI PUSH2 0x185 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x245 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x550 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x202 JUMPI PUSH2 0x201 PUSH2 0x5A6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP5 POP PUSH2 0x1BC JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x270 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP3 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x2C6 DUP2 DUP6 PUSH2 0x25C JUMP JUMPDEST SWAP4 POP PUSH2 0x2D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2DF DUP2 PUSH2 0x2A0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x304 DUP2 DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322 DUP3 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x32C DUP2 DUP6 PUSH2 0x30C JUMP JUMPDEST SWAP4 POP PUSH2 0x33C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E PUSH1 0x1 DUP4 PUSH2 0x30C JUMP JUMPDEST SWAP2 POP PUSH2 0x389 DUP3 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0 DUP3 DUP7 PUSH2 0x317 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB DUP3 PUSH2 0x371 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B7 DUP3 DUP6 PUSH2 0x317 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C2 DUP3 PUSH2 0x371 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE DUP3 DUP5 PUSH2 0x317 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x451 JUMPI PUSH2 0x450 PUSH2 0x3DB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x496 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x4A1 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B1 JUMPI PUSH2 0x4B0 PUSH2 0x45C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x501 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x3DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x535 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x545 JUMPI PUSH2 0x544 PUSH2 0x45C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x566 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x3DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 GASLIMIT SMOD 0x5C PUSH9 0xFB902E003C6004538C PUSH8 0x260DB4428363227 SWAP2 SWAP7 0xAD 0xD1 0x23 0xE6 DUP9 PUSH10 0xFB64736F6C634300080F STOP CALLER ","sourceMap":"223:1208:11:-:0;;;726:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;842:6;826:22;;;;;;874:6;858:22;;;;;;906:6;890:22;;;;;;726:193;;;223:1208;;88:117:21;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:663::-;782:6;790;798;847:2;835:9;826:7;822:23;818:32;815:119;;;853:79;;:::i;:::-;815:119;973:1;998:64;1054:7;1045:6;1034:9;1030:22;998:64;:::i;:::-;988:74;;944:128;1111:2;1137:64;1193:7;1184:6;1173:9;1169:22;1137:64;:::i;:::-;1127:74;;1082:129;1250:2;1276:64;1332:7;1323:6;1312:9;1308:22;1276:64;:::i;:::-;1266:74;;1221:129;694:663;;;;;:::o;223:1208:11:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@toString_3331":{"entryPoint":241,"id":3331,"parameterSlots":1,"returnSlots":1},"@version_2406":{"entryPoint":78,"id":2406,"parameterSlots":0,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":689,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":881,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":916,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":746,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":593,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":604,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":780,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1360,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":1163,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":1259,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1034,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":621,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":1044,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":1311,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":987,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":1116,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":1446,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1212,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5574:21","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:21","statements":[{"nodeType":"YulAssignment","src":"77:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:21"},"nodeType":"YulFunctionCall","src":"87:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:21","type":""}],"src":"7:99:21"},{"body":{"nodeType":"YulBlock","src":"208:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:21"},"nodeType":"YulFunctionCall","src":"218:19:21"},"nodeType":"YulExpressionStatement","src":"218:19:21"},{"nodeType":"YulAssignment","src":"246:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:21"},"nodeType":"YulFunctionCall","src":"261:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:21","type":""}],"src":"112:169:21"},{"body":{"nodeType":"YulBlock","src":"336:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:21"},"nodeType":"YulFunctionCall","src":"436:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:21"},"nodeType":"YulFunctionCall","src":"455:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:21"},"nodeType":"YulFunctionCall","src":"449:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:21"},"nodeType":"YulFunctionCall","src":"429:39:21"},"nodeType":"YulExpressionStatement","src":"429:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:21"},"nodeType":"YulFunctionCall","src":"373:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:21","statements":[{"nodeType":"YulAssignment","src":"389:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:21"},"nodeType":"YulFunctionCall","src":"394:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:21","statements":[]},"src":"365:113:21"},{"body":{"nodeType":"YulBlock","src":"512:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:21"},"nodeType":"YulFunctionCall","src":"558:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:21"},"nodeType":"YulFunctionCall","src":"551:27:21"},"nodeType":"YulExpressionStatement","src":"551:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:21"},"nodeType":"YulFunctionCall","src":"490:13:21"},"nodeType":"YulIf","src":"487:101:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:21","type":""}],"src":"287:307:21"},{"body":{"nodeType":"YulBlock","src":"648:54:21","statements":[{"nodeType":"YulAssignment","src":"658:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:21"},"nodeType":"YulFunctionCall","src":"672:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:21"},"nodeType":"YulFunctionCall","src":"688:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:21"},"nodeType":"YulFunctionCall","src":"668:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:21","type":""}],"src":"600:102:21"},{"body":{"nodeType":"YulBlock","src":"800:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:21"},"nodeType":"YulFunctionCall","src":"824:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:21","type":""}]},{"nodeType":"YulAssignment","src":"872:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:21"},"nodeType":"YulFunctionCall","src":"879:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:21"},"nodeType":"YulFunctionCall","src":"981:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:21"},"nodeType":"YulFunctionCall","src":"959:52:21"},"nodeType":"YulExpressionStatement","src":"959:52:21"},{"nodeType":"YulAssignment","src":"1020:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:21"},"nodeType":"YulFunctionCall","src":"1036:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:21"},"nodeType":"YulFunctionCall","src":"1027:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:21","type":""}],"src":"708:364:21"},{"body":{"nodeType":"YulBlock","src":"1196:195:21","statements":[{"nodeType":"YulAssignment","src":"1206:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:21"},"nodeType":"YulFunctionCall","src":"1214:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:21"},"nodeType":"YulFunctionCall","src":"1249:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:21"},"nodeType":"YulFunctionCall","src":"1268:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:21"},"nodeType":"YulFunctionCall","src":"1242:47:21"},"nodeType":"YulExpressionStatement","src":"1242:47:21"},{"nodeType":"YulAssignment","src":"1298:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:21"},"nodeType":"YulFunctionCall","src":"1306:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:21","type":""}],"src":"1078:313:21"},{"body":{"nodeType":"YulBlock","src":"1511:34:21","statements":[{"nodeType":"YulAssignment","src":"1521:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"1536:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1521:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1483:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1488:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1499:11:21","type":""}],"src":"1397:148:21"},{"body":{"nodeType":"YulBlock","src":"1661:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1671:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1718:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1685:32:21"},"nodeType":"YulFunctionCall","src":"1685:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1675:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1733:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1817:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1822:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"1740:76:21"},"nodeType":"YulFunctionCall","src":"1740:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1733:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1864:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1871:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1860:3:21"},"nodeType":"YulFunctionCall","src":"1860:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"1878:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1883:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1838:21:21"},"nodeType":"YulFunctionCall","src":"1838:52:21"},"nodeType":"YulExpressionStatement","src":"1838:52:21"},{"nodeType":"YulAssignment","src":"1899:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1910:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1915:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:21"},"nodeType":"YulFunctionCall","src":"1906:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1899:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1642:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1649:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1657:3:21","type":""}],"src":"1551:377:21"},{"body":{"nodeType":"YulBlock","src":"2040:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2062:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2058:3:21"},"nodeType":"YulFunctionCall","src":"2058:14:21"},{"hexValue":"2e","kind":"string","nodeType":"YulLiteral","src":"2074:3:21","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:21"},"nodeType":"YulFunctionCall","src":"2051:27:21"},"nodeType":"YulExpressionStatement","src":"2051:27:21"}]},"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2032:6:21","type":""}],"src":"1934:151:21"},{"body":{"nodeType":"YulBlock","src":"2255:236:21","statements":[{"nodeType":"YulAssignment","src":"2265:91:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2349:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2354:1:21","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"2272:76:21"},"nodeType":"YulFunctionCall","src":"2272:84:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2265:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2454:3:21"}],"functionName":{"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulIdentifier","src":"2365:88:21"},"nodeType":"YulFunctionCall","src":"2365:93:21"},"nodeType":"YulExpressionStatement","src":"2365:93:21"},{"nodeType":"YulAssignment","src":"2467:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2478:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2483:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2474:3:21"},"nodeType":"YulFunctionCall","src":"2474:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2467:3:21"}]}]},"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2243:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2251:3:21","type":""}],"src":"2091:400:21"},{"body":{"nodeType":"YulBlock","src":"2931:693:21","statements":[{"nodeType":"YulAssignment","src":"2942:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3031:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3040:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"2949:81:21"},"nodeType":"YulFunctionCall","src":"2949:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2942:3:21"}]},{"nodeType":"YulAssignment","src":"3054:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3205:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3061:142:21"},"nodeType":"YulFunctionCall","src":"3061:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3054:3:21"}]},{"nodeType":"YulAssignment","src":"3219:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3308:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3317:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3226:81:21"},"nodeType":"YulFunctionCall","src":"3226:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3219:3:21"}]},{"nodeType":"YulAssignment","src":"3331:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3482:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3338:142:21"},"nodeType":"YulFunctionCall","src":"3338:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3331:3:21"}]},{"nodeType":"YulAssignment","src":"3496:102:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3585:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"3594:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"3503:81:21"},"nodeType":"YulFunctionCall","src":"3503:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3496:3:21"}]},{"nodeType":"YulAssignment","src":"3608:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"3615:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3608:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2894:3:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2900:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2908:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2916:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2927:3:21","type":""}],"src":"2497:1127:21"},{"body":{"nodeType":"YulBlock","src":"3658:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3675:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3678:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3668:6:21"},"nodeType":"YulFunctionCall","src":"3668:88:21"},"nodeType":"YulExpressionStatement","src":"3668:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3772:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3775:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3765:6:21"},"nodeType":"YulFunctionCall","src":"3765:15:21"},"nodeType":"YulExpressionStatement","src":"3765:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3796:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3799:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3789:6:21"},"nodeType":"YulFunctionCall","src":"3789:15:21"},"nodeType":"YulExpressionStatement","src":"3789:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3630:180:21"},{"body":{"nodeType":"YulBlock","src":"3861:32:21","statements":[{"nodeType":"YulAssignment","src":"3871:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3882:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3871:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3843:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3853:7:21","type":""}],"src":"3816:77:21"},{"body":{"nodeType":"YulBlock","src":"3942:190:21","statements":[{"nodeType":"YulAssignment","src":"3952:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3979:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3961:17:21"},"nodeType":"YulFunctionCall","src":"3961:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3952:5:21"}]},{"body":{"nodeType":"YulBlock","src":"4075:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4077:16:21"},"nodeType":"YulFunctionCall","src":"4077:18:21"},"nodeType":"YulExpressionStatement","src":"4077:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4000:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4007:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3997:2:21"},"nodeType":"YulFunctionCall","src":"3997:77:21"},"nodeType":"YulIf","src":"3994:103:21"},{"nodeType":"YulAssignment","src":"4106:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4117:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4124:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4113:3:21"},"nodeType":"YulFunctionCall","src":"4113:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4106:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3928:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3938:3:21","type":""}],"src":"3899:233:21"},{"body":{"nodeType":"YulBlock","src":"4166:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4183:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4186:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4176:6:21"},"nodeType":"YulFunctionCall","src":"4176:88:21"},"nodeType":"YulExpressionStatement","src":"4176:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4280:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4283:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4273:6:21"},"nodeType":"YulFunctionCall","src":"4273:15:21"},"nodeType":"YulExpressionStatement","src":"4273:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4304:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4307:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4297:6:21"},"nodeType":"YulFunctionCall","src":"4297:15:21"},"nodeType":"YulExpressionStatement","src":"4297:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"4138:180:21"},{"body":{"nodeType":"YulBlock","src":"4366:143:21","statements":[{"nodeType":"YulAssignment","src":"4376:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4399:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4381:17:21"},"nodeType":"YulFunctionCall","src":"4381:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4376:1:21"}]},{"nodeType":"YulAssignment","src":"4410:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4433:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4415:17:21"},"nodeType":"YulFunctionCall","src":"4415:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4410:1:21"}]},{"body":{"nodeType":"YulBlock","src":"4457:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"4459:16:21"},"nodeType":"YulFunctionCall","src":"4459:18:21"},"nodeType":"YulExpressionStatement","src":"4459:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4454:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4447:6:21"},"nodeType":"YulFunctionCall","src":"4447:9:21"},"nodeType":"YulIf","src":"4444:35:21"},{"nodeType":"YulAssignment","src":"4489:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4498:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"4501:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4494:3:21"},"nodeType":"YulFunctionCall","src":"4494:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4489:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4355:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"4358:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4364:1:21","type":""}],"src":"4324:185:21"},{"body":{"nodeType":"YulBlock","src":"4543:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4560:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4563:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4553:6:21"},"nodeType":"YulFunctionCall","src":"4553:88:21"},"nodeType":"YulExpressionStatement","src":"4553:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4657:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4660:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4650:6:21"},"nodeType":"YulFunctionCall","src":"4650:15:21"},"nodeType":"YulExpressionStatement","src":"4650:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4681:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4684:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4674:6:21"},"nodeType":"YulFunctionCall","src":"4674:15:21"},"nodeType":"YulExpressionStatement","src":"4674:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4515:180:21"},{"body":{"nodeType":"YulBlock","src":"4746:146:21","statements":[{"nodeType":"YulAssignment","src":"4756:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4779:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4761:17:21"},"nodeType":"YulFunctionCall","src":"4761:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4756:1:21"}]},{"nodeType":"YulAssignment","src":"4790:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4813:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4795:17:21"},"nodeType":"YulFunctionCall","src":"4795:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4790:1:21"}]},{"body":{"nodeType":"YulBlock","src":"4837:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4839:16:21"},"nodeType":"YulFunctionCall","src":"4839:18:21"},"nodeType":"YulExpressionStatement","src":"4839:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4831:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"4834:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4828:2:21"},"nodeType":"YulFunctionCall","src":"4828:8:21"},"nodeType":"YulIf","src":"4825:34:21"},{"nodeType":"YulAssignment","src":"4869:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4881:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"4884:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4877:3:21"},"nodeType":"YulFunctionCall","src":"4877:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4869:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4732:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"4735:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4741:4:21","type":""}],"src":"4701:191:21"},{"body":{"nodeType":"YulBlock","src":"4932:142:21","statements":[{"nodeType":"YulAssignment","src":"4942:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4965:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4947:17:21"},"nodeType":"YulFunctionCall","src":"4947:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"4942:1:21"}]},{"nodeType":"YulAssignment","src":"4976:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4999:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4981:17:21"},"nodeType":"YulFunctionCall","src":"4981:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"4976:1:21"}]},{"body":{"nodeType":"YulBlock","src":"5023:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"5025:16:21"},"nodeType":"YulFunctionCall","src":"5025:18:21"},"nodeType":"YulExpressionStatement","src":"5025:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5020:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5013:6:21"},"nodeType":"YulFunctionCall","src":"5013:9:21"},"nodeType":"YulIf","src":"5010:35:21"},{"nodeType":"YulAssignment","src":"5054:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5063:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"5066:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"5059:3:21"},"nodeType":"YulFunctionCall","src":"5059:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5054:1:21"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4921:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"4924:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"4930:1:21","type":""}],"src":"4898:176:21"},{"body":{"nodeType":"YulBlock","src":"5124:261:21","statements":[{"nodeType":"YulAssignment","src":"5134:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5157:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5139:17:21"},"nodeType":"YulFunctionCall","src":"5139:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5134:1:21"}]},{"nodeType":"YulAssignment","src":"5168:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5191:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5173:17:21"},"nodeType":"YulFunctionCall","src":"5173:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5168:1:21"}]},{"body":{"nodeType":"YulBlock","src":"5331:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"5333:16:21"},"nodeType":"YulFunctionCall","src":"5333:18:21"},"nodeType":"YulExpressionStatement","src":"5333:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5252:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5259:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"5327:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5255:3:21"},"nodeType":"YulFunctionCall","src":"5255:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5249:2:21"},"nodeType":"YulFunctionCall","src":"5249:81:21"},"nodeType":"YulIf","src":"5246:107:21"},{"nodeType":"YulAssignment","src":"5363:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5374:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"5377:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5370:3:21"},"nodeType":"YulFunctionCall","src":"5370:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"5363:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5111:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"5114:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5120:3:21","type":""}],"src":"5080:305:21"},{"body":{"nodeType":"YulBlock","src":"5419:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5436:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5439:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5429:6:21"},"nodeType":"YulFunctionCall","src":"5429:88:21"},"nodeType":"YulExpressionStatement","src":"5429:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5533:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5536:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5526:6:21"},"nodeType":"YulFunctionCall","src":"5526:15:21"},"nodeType":"YulExpressionStatement","src":"5526:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5557:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5560:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5550:6:21"},"nodeType":"YulFunctionCall","src":"5550:15:21"},"nodeType":"YulExpressionStatement","src":"5550:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"5391:180:21"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2349":[{"length":32,"start":85}],"2352":[{"length":32,"start":126}],"2355":[{"length":32,"start":167}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c806354fd4d5014610030575b600080fd5b61003861004e565b60405161004591906102ea565b60405180910390f35b60606100797f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100a27f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100cb7f00000000000000000000000000000000000000000000000000000000000000006100f1565b6040516020016100dd93929190610394565b604051602081830303815290604052905090565b606060008203610138576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061024c565b600082905060005b6000821461016a57808061015390610414565b915050600a82610163919061048b565b9150610140565b60008167ffffffffffffffff811115610186576101856104bc565b5b6040519080825280601f01601f1916602001820160405280156101b85781602001600182028036833780820191505090505b5090505b60008514610245576001826101d191906104eb565b9150600a856101e0919061051f565b60306101ec9190610550565b60f81b818381518110610202576102016105a6565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561023e919061048b565b94506101bc565b8093505050505b919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561028b578082015181840152602081019050610270565b8381111561029a576000848401525b50505050565b6000601f19601f8301169050919050565b60006102bc82610251565b6102c6818561025c565b93506102d681856020860161026d565b6102df816102a0565b840191505092915050565b6000602082019050818103600083015261030481846102b1565b905092915050565b600081905092915050565b600061032282610251565b61032c818561030c565b935061033c81856020860161026d565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b600061037e60018361030c565b915061038982610348565b600182019050919050565b60006103a08286610317565b91506103ab82610371565b91506103b78285610317565b91506103c282610371565b91506103ce8284610317565b9150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061041f8261040a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610451576104506103db565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006104968261040a565b91506104a18361040a565b9250826104b1576104b061045c565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006104f68261040a565b91506105018361040a565b925082821015610514576105136103db565b5b828203905092915050565b600061052a8261040a565b91506105358361040a565b9250826105455761054461045c565b5b828206905092915050565b600061055b8261040a565b91506105668361040a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561059b5761059a6103db565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220b745075c68fb902e003c6004538c670260db44283632279196add123e68869fb64736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x2EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x79 PUSH32 0x0 PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xA2 PUSH32 0x0 PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xCB PUSH32 0x0 PUSH2 0xF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xDD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x24C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x16A JUMPI DUP1 DUP1 PUSH2 0x153 SWAP1 PUSH2 0x414 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP2 POP PUSH2 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x186 JUMPI PUSH2 0x185 PUSH2 0x4BC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x245 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x4EB JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x51F JUMP JUMPDEST PUSH1 0x30 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x550 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x202 JUMPI PUSH2 0x201 PUSH2 0x5A6 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x48B JUMP JUMPDEST SWAP5 POP PUSH2 0x1BC JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x270 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP3 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x2C6 DUP2 DUP6 PUSH2 0x25C JUMP JUMPDEST SWAP4 POP PUSH2 0x2D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26D JUMP JUMPDEST PUSH2 0x2DF DUP2 PUSH2 0x2A0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x304 DUP2 DUP5 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322 DUP3 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x32C DUP2 DUP6 PUSH2 0x30C JUMP JUMPDEST SWAP4 POP PUSH2 0x33C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37E PUSH1 0x1 DUP4 PUSH2 0x30C JUMP JUMPDEST SWAP2 POP PUSH2 0x389 DUP3 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0 DUP3 DUP7 PUSH2 0x317 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AB DUP3 PUSH2 0x371 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B7 DUP3 DUP6 PUSH2 0x317 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C2 DUP3 PUSH2 0x371 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE DUP3 DUP5 PUSH2 0x317 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41F DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x451 JUMPI PUSH2 0x450 PUSH2 0x3DB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x496 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x4A1 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4B1 JUMPI PUSH2 0x4B0 PUSH2 0x45C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4F6 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x501 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x3DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52A DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x535 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x545 JUMPI PUSH2 0x544 PUSH2 0x45C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55B DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP2 POP PUSH2 0x566 DUP4 PUSH2 0x40A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x3DB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 GASLIMIT SMOD 0x5C PUSH9 0xFB902E003C6004538C PUSH8 0x260DB4428363227 SWAP2 SWAP7 0xAD 0xD1 0x23 0xE6 DUP9 PUSH10 0xFB64736F6C634300080F STOP CALLER ","sourceMap":"223:1208:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:372;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1097:13;1203:31;1220:13;1203:16;:31::i;:::-;1281;1298:13;1281:16;:31::i;:::-;1359;1376:13;1359:16;:31::i;:::-;1165:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1122:300;;1057:372;:::o;392:703:17:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;7:99:21:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1397:148::-;1499:11;1536:3;1521:18;;1397:148;;;;:::o;1551:377::-;1657:3;1685:39;1718:5;1685:39;:::i;:::-;1740:89;1822:6;1817:3;1740:89;:::i;:::-;1733:96;;1838:52;1883:6;1878:3;1871:4;1864:5;1860:16;1838:52;:::i;:::-;1915:6;1910:3;1906:16;1899:23;;1661:267;1551:377;;;;:::o;1934:151::-;2074:3;2070:1;2062:6;2058:14;2051:27;1934:151;:::o;2091:400::-;2251:3;2272:84;2354:1;2349:3;2272:84;:::i;:::-;2265:91;;2365:93;2454:3;2365:93;:::i;:::-;2483:1;2478:3;2474:11;2467:18;;2091:400;;;:::o;2497:1127::-;2927:3;2949:95;3040:3;3031:6;2949:95;:::i;:::-;2942:102;;3061:148;3205:3;3061:148;:::i;:::-;3054:155;;3226:95;3317:3;3308:6;3226:95;:::i;:::-;3219:102;;3338:148;3482:3;3338:148;:::i;:::-;3331:155;;3503:95;3594:3;3585:6;3503:95;:::i;:::-;3496:102;;3615:3;3608:10;;2497:1127;;;;;;:::o;3630:180::-;3678:77;3675:1;3668:88;3775:4;3772:1;3765:15;3799:4;3796:1;3789:15;3816:77;3853:7;3882:5;3871:16;;3816:77;;;:::o;3899:233::-;3938:3;3961:24;3979:5;3961:24;:::i;:::-;3952:33;;4007:66;4000:5;3997:77;3994:103;;4077:18;;:::i;:::-;3994:103;4124:1;4117:5;4113:13;4106:20;;3899:233;;;:::o;4138:180::-;4186:77;4183:1;4176:88;4283:4;4280:1;4273:15;4307:4;4304:1;4297:15;4324:185;4364:1;4381:20;4399:1;4381:20;:::i;:::-;4376:25;;4415:20;4433:1;4415:20;:::i;:::-;4410:25;;4454:1;4444:35;;4459:18;;:::i;:::-;4444:35;4501:1;4498;4494:9;4489:14;;4324:185;;;;:::o;4515:180::-;4563:77;4560:1;4553:88;4660:4;4657:1;4650:15;4684:4;4681:1;4674:15;4701:191;4741:4;4761:20;4779:1;4761:20;:::i;:::-;4756:25;;4795:20;4813:1;4795:20;:::i;:::-;4790:25;;4834:1;4831;4828:8;4825:34;;;4839:18;;:::i;:::-;4825:34;4884:1;4881;4877:9;4869:17;;4701:191;;;;:::o;4898:176::-;4930:1;4947:20;4965:1;4947:20;:::i;:::-;4942:25;;4981:20;4999:1;4981:20;:::i;:::-;4976:25;;5020:1;5010:35;;5025:18;;:::i;:::-;5010:35;5066:1;5063;5059:9;5054:14;;4898:176;;;;:::o;5080:305::-;5120:3;5139:20;5157:1;5139:20;:::i;:::-;5134:25;;5173:20;5191:1;5173:20;:::i;:::-;5168:25;;5327:1;5259:66;5255:74;5252:1;5249:81;5246:107;;;5333:18;;:::i;:::-;5246:107;5377:1;5374;5370:9;5363:16;;5080:305;;;;:::o;5391:180::-;5439:77;5436:1;5429:88;5536:4;5533:1;5526:15;5560:4;5557:1;5550:15"},"methodIdentifiers":{"version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_major\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_patch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_major\":\"Version number (major).\",\"_minor\":\"Version number (minor).\",\"_patch\":\"Version number (patch).\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"Semver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"Semver is a simple contract for managing contract versions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol\":\"Semver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f27157671d3c5868c24716171f9097885f02c47048143a1215c481954d38a6b164736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH18 0x57671D3C5868C24716171F9097885F02C470 BASEFEE EQ GASPRICE SLT ISZERO 0xC4 DUP2 SWAP6 0x4D CODESIZE 0xA6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:7172:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f27157671d3c5868c24716171f9097885f02c47048143a1215c481954d38a6b164736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH18 0x57671D3C5868C24716171F9097885F02C470 BASEFEE EQ GASPRICE SLT ISZERO 0xC4 DUP2 SWAP6 0x4D CODESIZE 0xA6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:7172:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae2860b47c37e5452016af6f72ec0eff3f9dfb4257255eae17b353895b8723b64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE2 DUP7 SIGNEXTEND SELFBALANCE 0xC3 PUSH31 0x5452016AF6F72EC0EFF3F9DFB4257255EAE17B353895B8723B64736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:8111:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae2860b47c37e5452016af6f72ec0eff3f9dfb4257255eae17b353895b8723b64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE2 DUP7 SIGNEXTEND SELFBALANCE 0xC3 PUSH31 0x5452016AF6F72EC0EFF3F9DFB4257255EAE17B353895B8723B64736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:8111:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077e53422a0b84445681ce5732e7ef9111cb0238861571a66153ebaed309f348e64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xE53422A0B84445681CE5732E7EF9111CB0238861571A6615 RETURNDATACOPY 0xBA 0xED ADDRESS SWAP16 CALLVALUE DUP15 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"161:2235:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122077e53422a0b84445681ce5732e7ef9111cb0238861571a66153ebaed309f348e64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xE53422A0B84445681CE5732E7EF9111CB0238861571A6615 RETURNDATACOPY 0xBA 0xED ADDRESS SWAP16 CALLVALUE DUP15 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"161:2235:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol":{"ERC165Checker":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220527a51566674b258f0b3e5f3670a1442911058d5030062ec7444c24cc864c00b64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH27 0x51566674B258F0B3E5F3670A1442911058D5030062EC7444C24CC8 PUSH5 0xC00B64736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"449:4414:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220527a51566674b258f0b3e5f3670a1442911058d5030062ec7444c24cc864c00b64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE PUSH27 0x51566674B258F0B3E5F3670A1442911058D5030062EC7444C24CC8 PUSH5 0xC00B64736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"449:4414:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"contracts/L1Bridge.sol":{"L1Bridge":{"abi":[{"inputs":[{"internalType":"address","name":"_messenger","type":"address"},{"internalType":"address","name":"_otherBridge","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeFinalized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"localToken","type":"address"},{"indexed":true,"internalType":"address","name":"remoteToken","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"extraData","type":"bytes"}],"name":"ERC721BridgeInitiated","type":"event"},{"inputs":[],"name":"MESSENGER","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OTHER_BRIDGE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"bridgeERC721To","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"deposits","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_localToken","type":"address"},{"internalType":"address","name":"_remoteToken","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"finalizeBridgeERC721","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"messenger","outputs":[{"internalType":"contract CrossDomainMessenger","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"otherBridge","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2154":{"entryPoint":null,"id":2154,"parameterSlots":2,"returnSlots":0},"@_2378":{"entryPoint":null,"id":2378,"parameterSlots":3,"returnSlots":0},"@_3694":{"entryPoint":null,"id":3694,"parameterSlots":2,"returnSlots":0},"@_41":{"entryPoint":null,"id":41,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":543,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack":{"entryPoint":862,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack":{"entryPoint":710,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":901,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":749,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":614,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":474,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":442,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":437,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e":{"entryPoint":783,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f":{"entryPoint":631,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":494,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3601:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"759:80:21","statements":[{"nodeType":"YulAssignment","src":"769:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:21"},"nodeType":"YulFunctionCall","src":"778:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:21"},"nodeType":"YulFunctionCall","src":"800:33:21"},"nodeType":"YulExpressionStatement","src":"800:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:21","type":""}],"src":"696:143:21"},{"body":{"nodeType":"YulBlock","src":"939:413:21","statements":[{"body":{"nodeType":"YulBlock","src":"985:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"987:77:21"},"nodeType":"YulFunctionCall","src":"987:79:21"},"nodeType":"YulExpressionStatement","src":"987:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"960:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"969:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"956:3:21"},"nodeType":"YulFunctionCall","src":"956:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"981:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"952:3:21"},"nodeType":"YulFunctionCall","src":"952:32:21"},"nodeType":"YulIf","src":"949:119:21"},{"nodeType":"YulBlock","src":"1078:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1093:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1107:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1097:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1122:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1168:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1179:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1164:3:21"},"nodeType":"YulFunctionCall","src":"1164:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1188:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1132:31:21"},"nodeType":"YulFunctionCall","src":"1132:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1122:6:21"}]}]},{"nodeType":"YulBlock","src":"1216:129:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1231:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"1245:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1235:6:21","type":""}]},{"nodeType":"YulAssignment","src":"1261:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1307:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"1318:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1303:3:21"},"nodeType":"YulFunctionCall","src":"1303:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1327:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1271:31:21"},"nodeType":"YulFunctionCall","src":"1271:64:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1261:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"901:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"912:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"924:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"932:6:21","type":""}],"src":"845:507:21"},{"body":{"nodeType":"YulBlock","src":"1454:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1471:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"1476:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1464:6:21"},"nodeType":"YulFunctionCall","src":"1464:19:21"},"nodeType":"YulExpressionStatement","src":"1464:19:21"},{"nodeType":"YulAssignment","src":"1492:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1511:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1516:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1507:3:21"},"nodeType":"YulFunctionCall","src":"1507:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1492:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1426:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"1431:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1442:11:21","type":""}],"src":"1358:169:21"},{"body":{"nodeType":"YulBlock","src":"1639:125:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1661:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1669:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1657:3:21"},"nodeType":"YulFunctionCall","src":"1657:14:21"},{"hexValue":"4552433732314272696467653a206d657373656e6765722063616e6e6f742062","kind":"string","nodeType":"YulLiteral","src":"1673:34:21","type":"","value":"ERC721Bridge: messenger cannot b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1650:6:21"},"nodeType":"YulFunctionCall","src":"1650:58:21"},"nodeType":"YulExpressionStatement","src":"1650:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1729:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1725:3:21"},"nodeType":"YulFunctionCall","src":"1725:15:21"},{"hexValue":"652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"1742:14:21","type":"","value":"e address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1718:6:21"},"nodeType":"YulFunctionCall","src":"1718:39:21"},"nodeType":"YulExpressionStatement","src":"1718:39:21"}]},"name":"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1631:6:21","type":""}],"src":"1533:231:21"},{"body":{"nodeType":"YulBlock","src":"1916:220:21","statements":[{"nodeType":"YulAssignment","src":"1926:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1992:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"1997:2:21","type":"","value":"44"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1933:58:21"},"nodeType":"YulFunctionCall","src":"1933:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1926:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2098:3:21"}],"functionName":{"name":"store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f","nodeType":"YulIdentifier","src":"2009:88:21"},"nodeType":"YulFunctionCall","src":"2009:93:21"},"nodeType":"YulExpressionStatement","src":"2009:93:21"},{"nodeType":"YulAssignment","src":"2111:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2122:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"2127:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2118:3:21"},"nodeType":"YulFunctionCall","src":"2118:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2111:3:21"}]}]},"name":"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1904:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1912:3:21","type":""}],"src":"1770:366:21"},{"body":{"nodeType":"YulBlock","src":"2313:248:21","statements":[{"nodeType":"YulAssignment","src":"2323:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2335:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2346:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2331:3:21"},"nodeType":"YulFunctionCall","src":"2331:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2323:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2381:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:21"},"nodeType":"YulFunctionCall","src":"2366:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2389:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2395:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2385:3:21"},"nodeType":"YulFunctionCall","src":"2385:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2359:6:21"},"nodeType":"YulFunctionCall","src":"2359:47:21"},"nodeType":"YulExpressionStatement","src":"2359:47:21"},{"nodeType":"YulAssignment","src":"2415:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2549:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2423:124:21"},"nodeType":"YulFunctionCall","src":"2423:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2415:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2293:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2308:4:21","type":""}],"src":"2142:419:21"},{"body":{"nodeType":"YulBlock","src":"2673:128:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2695:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2703:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2691:3:21"},"nodeType":"YulFunctionCall","src":"2691:14:21"},{"hexValue":"4552433732314272696467653a206f74686572206272696467652063616e6e6f","kind":"string","nodeType":"YulLiteral","src":"2707:34:21","type":"","value":"ERC721Bridge: other bridge canno"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2684:6:21"},"nodeType":"YulFunctionCall","src":"2684:58:21"},"nodeType":"YulExpressionStatement","src":"2684:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2763:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2771:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2759:3:21"},"nodeType":"YulFunctionCall","src":"2759:15:21"},{"hexValue":"742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"2776:17:21","type":"","value":"t be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2752:6:21"},"nodeType":"YulFunctionCall","src":"2752:42:21"},"nodeType":"YulExpressionStatement","src":"2752:42:21"}]},"name":"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2665:6:21","type":""}],"src":"2567:234:21"},{"body":{"nodeType":"YulBlock","src":"2953:220:21","statements":[{"nodeType":"YulAssignment","src":"2963:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3029:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3034:2:21","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2970:58:21"},"nodeType":"YulFunctionCall","src":"2970:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2963:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3135:3:21"}],"functionName":{"name":"store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e","nodeType":"YulIdentifier","src":"3046:88:21"},"nodeType":"YulFunctionCall","src":"3046:93:21"},"nodeType":"YulExpressionStatement","src":"3046:93:21"},{"nodeType":"YulAssignment","src":"3148:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3159:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"3164:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3155:3:21"},"nodeType":"YulFunctionCall","src":"3155:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3148:3:21"}]}]},"name":"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2941:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2949:3:21","type":""}],"src":"2807:366:21"},{"body":{"nodeType":"YulBlock","src":"3350:248:21","statements":[{"nodeType":"YulAssignment","src":"3360:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3372:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3383:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3368:3:21"},"nodeType":"YulFunctionCall","src":"3368:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3360:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3407:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3418:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3403:3:21"},"nodeType":"YulFunctionCall","src":"3403:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3426:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"3432:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3422:3:21"},"nodeType":"YulFunctionCall","src":"3422:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3396:6:21"},"nodeType":"YulFunctionCall","src":"3396:47:21"},"nodeType":"YulExpressionStatement","src":"3396:47:21"},{"nodeType":"YulAssignment","src":"3452:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3586:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3460:124:21"},"nodeType":"YulFunctionCall","src":"3460:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3452:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3330:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3345:4:21","type":""}],"src":"3179:419:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: messenger cannot b\")\n\n        mstore(add(memPtr, 32), \"e address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e7c234b856a75575863eaff669fafdd331f96577aa40791aa59e32ccd0fb457f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: other bridge canno\")\n\n        mstore(add(memPtr, 32), \"t be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5826fffdaec9dfdd9e67c4c70c97071f365e0d04a709e4a396fd90ca362d477e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101206040523480156200001257600080fd5b5060405162001eea38038062001eea83398181016040528101906200003891906200021f565b818160018060008484600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000b3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000aa90620002ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000125576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200011c9062000385565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050508260c081815250508160e0818152505080610100818152505050505050505050620003a7565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001e782620001ba565b9050919050565b620001f981620001da565b81146200020557600080fd5b50565b6000815190506200021981620001ee565b92915050565b60008060408385031215620002395762000238620001b5565b5b6000620002498582860162000208565b92505060206200025c8582860162000208565b9150509250929050565b600082825260208201905092915050565b7f4552433732314272696467653a206d657373656e6765722063616e6e6f74206260008201527f6520616464726573732830290000000000000000000000000000000000000000602082015250565b6000620002d5602c8362000266565b9150620002e28262000277565b604082019050919050565b600060208201905081810360008301526200030881620002c6565b9050919050565b7f4552433732314272696467653a206f74686572206272696467652063616e6e6f60008201527f7420626520616464726573732830290000000000000000000000000000000000602082015250565b60006200036d602f8362000266565b91506200037a826200030f565b604082019050919050565b60006020820190508181036000830152620003a0816200035e565b9050919050565b60805160a05160c05160e05161010051611acd6200041d60003960006102940152600061026b015260006102420152600081816103720152818161077e015281816108500152610adf0152600081816102170152818161031c015281816103a9015281816107a20152610aa30152611acd6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063761f449311610066578063761f4493146101205780637f46ddb21461013c578063927ede2d1461015a578063aa55745214610178578063c89701a21461019457610093565b80633687011a146100985780633cb747bf146100b457806354fd4d50146100d25780635d93a3fc146100f0575b600080fd5b6100b260048036038101906100ad9190610e7c565b6101b2565b005b6100bc610213565b6040516100c99190610f75565b60405180910390f35b6100da61023b565b6040516100e79190611029565b60405180910390f35b61010a6004803603810190610105919061104b565b6102de565b60405161011791906110b9565b60405180910390f35b61013a600480360381019061013591906110d4565b61031a565b005b61014461077c565b6040516101519190611192565b60405180910390f35b6101626107a0565b60405161016f9190610f75565b60405180910390f35b610192600480360381019061018d91906111ad565b6107c4565b005b61019c61084c565b6040516101a99190611192565b60405180910390f35b6101bb33610874565b156101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906112ce565b60405180910390fd5b61020b8686333388888888610897565b505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60606102667f0000000000000000000000000000000000000000000000000000000000000000610bdd565b61028f7f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6102b87f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6040516020016102ca93929190611376565b604051602081830303815290604052905090565b6031602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561044e57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906113d2565b73ffffffffffffffffffffffffffffffffffffffff16145b61048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490611471565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290611503565b60405180910390fd5b60011515603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff161515146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390611595565b60405180910390fd5b6000603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055508673ffffffffffffffffffffffffffffffffffffffff166342842e0e3086866040518463ffffffff1660e01b81526004016106bf939291906115c4565b600060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f1f39bf6707b5d608453e0ae4c067b562bcc4c85c0f562ef5d2c774d2e7f131ac8787878760405161076b9493929190611648565b60405180910390a450505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a906116fa565b60405180910390fd5b6108438787338888888888610897565b50505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9061178c565b60405180910390fd5b600063761f449360e01b888a898989888860405160240161092d97969594939291906117ac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001603160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508873ffffffffffffffffffffffffffffffffffffffff166323b872dd8830886040518463ffffffff1660e01b8152600401610a6f939291906115c4565b600060405180830381600087803b158015610a8957600080fd5b505af1158015610a9d573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633dbb202b7f000000000000000000000000000000000000000000000000000000000000000083876040518463ffffffff1660e01b8152600401610b1e93929190611869565b600060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fb7460e2a880f256ebef3406116ff3eee0cee51ebccdc2a40698f87ebb2e9c1a589898888604051610bca9493929190611648565b60405180910390a4505050505050505050565b606060008203610c24576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d38565b600082905060005b60008214610c56578080610c3f906118d6565b915050600a82610c4f919061194d565b9150610c2c565b60008167ffffffffffffffff811115610c7257610c7161197e565b5b6040519080825280601f01601f191660200182016040528015610ca45781602001600182028036833780820191505090505b5090505b60008514610d3157600182610cbd91906119ad565b9150600a85610ccc91906119e1565b6030610cd89190611a12565b60f81b818381518110610cee57610ced611a68565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610d2a919061194d565b9450610ca8565b8093505050505b919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7282610d47565b9050919050565b610d8281610d67565b8114610d8d57600080fd5b50565b600081359050610d9f81610d79565b92915050565b6000819050919050565b610db881610da5565b8114610dc357600080fd5b50565b600081359050610dd581610daf565b92915050565b600063ffffffff82169050919050565b610df481610ddb565b8114610dff57600080fd5b50565b600081359050610e1181610deb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e3c57610e3b610e17565b5b8235905067ffffffffffffffff811115610e5957610e58610e1c565b5b602083019150836001820283011115610e7557610e74610e21565b5b9250929050565b60008060008060008060a08789031215610e9957610e98610d3d565b5b6000610ea789828a01610d90565b9650506020610eb889828a01610d90565b9550506040610ec989828a01610dc6565b9450506060610eda89828a01610e02565b935050608087013567ffffffffffffffff811115610efb57610efa610d42565b5b610f0789828a01610e26565b92509250509295509295509295565b6000819050919050565b6000610f3b610f36610f3184610d47565b610f16565b610d47565b9050919050565b6000610f4d82610f20565b9050919050565b6000610f5f82610f42565b9050919050565b610f6f81610f54565b82525050565b6000602082019050610f8a6000830184610f66565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fca578082015181840152602081019050610faf565b83811115610fd9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ffb82610f90565b6110058185610f9b565b9350611015818560208601610fac565b61101e81610fdf565b840191505092915050565b600060208201905081810360008301526110438184610ff0565b905092915050565b60008060006060848603121561106457611063610d3d565b5b600061107286828701610d90565b935050602061108386828701610d90565b925050604061109486828701610dc6565b9150509250925092565b60008115159050919050565b6110b38161109e565b82525050565b60006020820190506110ce60008301846110aa565b92915050565b600080600080600080600060c0888a0312156110f3576110f2610d3d565b5b60006111018a828b01610d90565b97505060206111128a828b01610d90565b96505060406111238a828b01610d90565b95505060606111348a828b01610d90565b94505060806111458a828b01610dc6565b93505060a088013567ffffffffffffffff81111561116657611165610d42565b5b6111728a828b01610e26565b925092505092959891949750929550565b61118c81610d67565b82525050565b60006020820190506111a76000830184611183565b92915050565b600080600080600080600060c0888a0312156111cc576111cb610d3d565b5b60006111da8a828b01610d90565b97505060206111eb8a828b01610d90565b96505060406111fc8a828b01610d90565b955050606061120d8a828b01610dc6565b945050608061121e8a828b01610e02565b93505060a088013567ffffffffffffffff81111561123f5761123e610d42565b5b61124b8a828b01610e26565b925092505092959891949750929550565b7f4552433732314272696467653a206163636f756e74206973206e6f742065787460008201527f65726e616c6c79206f776e656400000000000000000000000000000000000000602082015250565b60006112b8602d83610f9b565b91506112c38261125c565b604082019050919050565b600060208201905081810360008301526112e7816112ab565b9050919050565b600081905092915050565b600061130482610f90565b61130e81856112ee565b935061131e818560208601610fac565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b60006113606001836112ee565b915061136b8261132a565b600182019050919050565b600061138282866112f9565b915061138d82611353565b915061139982856112f9565b91506113a482611353565b91506113b082846112f9565b9150819050949350505050565b6000815190506113cc81610d79565b92915050565b6000602082840312156113e8576113e7610d3d565b5b60006113f6848285016113bd565b91505092915050565b7f4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792060008201527f62652063616c6c65642066726f6d20746865206f746865722062726964676500602082015250565b600061145b603f83610f9b565b9150611466826113ff565b604082019050919050565b6000602082019050818103600083015261148a8161144e565b9050919050565b7f4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e60008201527f6f742062652073656c6600000000000000000000000000000000000000000000602082015250565b60006114ed602a83610f9b565b91506114f882611491565b604082019050919050565b6000602082019050818103600083015261151c816114e0565b9050919050565b7f4c314552433732314272696467653a20546f6b656e204944206973206e6f742060008201527f657363726f77656420696e20746865204c312042726964676500000000000000602082015250565b600061157f603983610f9b565b915061158a82611523565b604082019050919050565b600060208201905081810360008301526115ae81611572565b9050919050565b6115be81610da5565b82525050565b60006060820190506115d96000830186611183565b6115e66020830185611183565b6115f360408301846115b5565b949350505050565b600082825260208201905092915050565b82818337600083830152505050565b600061162783856115fb565b935061163483858461160c565b61163d83610fdf565b840190509392505050565b600060608201905061165d6000830187611183565b61166a60208301866115b5565b818103604083015261167d81848661161b565b905095945050505050565b7f4552433732314272696467653a206e667420726563697069656e742063616e6e60008201527f6f74206265206164647265737328302900000000000000000000000000000000602082015250565b60006116e4603083610f9b565b91506116ef82611688565b604082019050919050565b60006020820190508181036000830152611713816116d7565b9050919050565b7f4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e60008201527f6e6f742062652061646472657373283029000000000000000000000000000000602082015250565b6000611776603183610f9b565b91506117818261171a565b604082019050919050565b600060208201905081810360008301526117a581611769565b9050919050565b600060c0820190506117c1600083018a611183565b6117ce6020830189611183565b6117db6040830188611183565b6117e86060830187611183565b6117f560808301866115b5565b81810360a083015261180881848661161b565b905098975050505050505050565b600081519050919050565b600061182c82611816565b61183681856115fb565b9350611846818560208601610fac565b61184f81610fdf565b840191505092915050565b61186381610ddb565b82525050565b600060608201905061187e6000830186611183565b81810360208301526118908185611821565b905061189f604083018461185a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118e182610da5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611913576119126118a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195882610da5565b915061196383610da5565b9250826119735761197261191e565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006119b882610da5565b91506119c383610da5565b9250828210156119d6576119d56118a7565b5b828203905092915050565b60006119ec82610da5565b91506119f783610da5565b925082611a0757611a0661191e565b5b828206905092915050565b6000611a1d82610da5565b9150611a2883610da5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5d57611a5c6118a7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212201e91fe15eadb6e28b6222585479d9a960bf8cbd5f36fbe082ceee88257cdacd764736f6c634300080f0033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EEA CODESIZE SUB DUP1 PUSH3 0x1EEA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x21F JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xAA SWAP1 PUSH3 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x125 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x11C SWAP1 PUSH3 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP DUP3 PUSH1 0xC0 DUP2 DUP2 MSTORE POP POP DUP2 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP POP PUSH3 0x3A7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1E7 DUP3 PUSH3 0x1BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F9 DUP2 PUSH3 0x1DA JUMP JUMPDEST DUP2 EQ PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x219 DUP2 PUSH3 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x239 JUMPI PUSH3 0x238 PUSH3 0x1B5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x249 DUP6 DUP3 DUP7 ADD PUSH3 0x208 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x25C DUP6 DUP3 DUP7 ADD PUSH3 0x208 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206D657373656E6765722063616E6E6F742062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6520616464726573732830290000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D5 PUSH1 0x2C DUP4 PUSH3 0x266 JUMP JUMPDEST SWAP2 POP PUSH3 0x2E2 DUP3 PUSH3 0x277 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x308 DUP2 PUSH3 0x2C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206F74686572206272696467652063616E6E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7420626520616464726573732830290000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x36D PUSH1 0x2F DUP4 PUSH3 0x266 JUMP JUMPDEST SWAP2 POP PUSH3 0x37A DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x3A0 DUP2 PUSH3 0x35E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x1ACD PUSH3 0x41D PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x294 ADD MSTORE PUSH1 0x0 PUSH2 0x26B ADD MSTORE PUSH1 0x0 PUSH2 0x242 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x372 ADD MSTORE DUP2 DUP2 PUSH2 0x77E ADD MSTORE DUP2 DUP2 PUSH2 0x850 ADD MSTORE PUSH2 0xADF ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x217 ADD MSTORE DUP2 DUP2 PUSH2 0x31C ADD MSTORE DUP2 DUP2 PUSH2 0x3A9 ADD MSTORE DUP2 DUP2 PUSH2 0x7A2 ADD MSTORE PUSH2 0xAA3 ADD MSTORE PUSH2 0x1ACD PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761F4493 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x761F4493 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x7F46DDB2 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x927EDE2D EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xAA557452 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC89701A2 EQ PUSH2 0x194 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x3687011A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5D93A3FC EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB CALLER PUSH2 0x874 JUMP JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20B DUP7 DUP7 CALLER CALLER DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x266 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x28F PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x31 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x44E JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x484 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F39BF6707B5D608453E0AE4C067B562BCC4C85C0F562EF5D2C774D2E7F131AC DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x843 DUP8 DUP8 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x761F4493 PUSH1 0xE0 SHL DUP9 DUP11 DUP10 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x92D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x31 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP9 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH32 0x0 DUP4 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7460E2A880F256EBEF3406116FF3EEE0CEE51EBCCDC2A40698F87EBB2E9C1A5 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xBCA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xC56 JUMPI DUP1 DUP1 PUSH2 0xC3F SWAP1 PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x197E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD31 JUMPI PUSH1 0x1 DUP3 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x19AD JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xCCC SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0x1A68 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP5 POP PUSH2 0xCA8 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9F DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD5 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP2 EQ PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE11 DUP2 PUSH2 0xDEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0xE17 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0xE1C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE75 JUMPI PUSH2 0xE74 PUSH2 0xE21 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP10 DUP3 DUP11 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xEDA DUP10 DUP3 DUP11 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0xF07 DUP10 DUP3 DUP11 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3B PUSH2 0xF36 PUSH2 0xF31 DUP5 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4D DUP3 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xF54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFAF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x1005 DUP2 DUP6 PUSH2 0xF9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1015 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1064 JUMPI PUSH2 0x1063 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1072 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1083 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1094 DUP7 DUP3 DUP8 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0x109E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1101 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1112 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1123 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1134 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1145 DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x1172 DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x118C DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1183 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11DA DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x11EB DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x11FC DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x120D DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x121E DUP11 DUP3 DUP12 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x124B DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206163636F756E74206973206E6F7420657874 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726E616C6C79206F776E656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B8 PUSH1 0x2D DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x12C3 DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E7 DUP2 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x130E DUP2 DUP6 PUSH2 0x12EE JUMP JUMPDEST SWAP4 POP PUSH2 0x131E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH1 0x1 DUP4 PUSH2 0x12EE JUMP JUMPDEST SWAP2 POP PUSH2 0x136B DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 DUP3 DUP7 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1399 DUP3 DUP6 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A4 DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x13B0 DUP3 DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CC DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E7 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F6 DUP5 DUP3 DUP6 ADD PUSH2 0x13BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A2066756E6374696F6E2063616E206F6E6C7920 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62652063616C6C65642066726F6D20746865206F746865722062726964676500 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B PUSH1 0x3F DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1466 DUP3 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148A DUP2 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A206C6F63616C20746F6B656E2063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F742062652073656C6600000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14ED PUSH1 0x2A DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x14F8 DUP3 PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151C DUP2 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A20546F6B656E204944206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657363726F77656420696E20746865204C312042726964676500000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157F PUSH1 0x39 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x158A DUP3 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AE DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 DUP4 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1634 DUP4 DUP6 DUP5 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x163D DUP4 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x165D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x166A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x167D DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206E667420726563697069656E742063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206265206164647265737328302900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E4 PUSH1 0x30 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1713 DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A2072656D6F746520746F6B656E2063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652061646472657373283029000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1776 PUSH1 0x31 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1781 DUP3 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A5 DUP2 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1808 DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x187E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1890 DUP2 DUP6 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP PUSH2 0x189F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1963 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1973 JUMPI PUSH2 0x1972 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19B8 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x19D6 JUMPI PUSH2 0x19D5 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A07 JUMPI PUSH2 0x1A06 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A5D JUMPI PUSH2 0x1A5C PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP2 INVALID ISZERO 0xEA 0xDB PUSH15 0x28B6222585479D9A960BF8CBD5F36F 0xBE ADDMOD 0x2C 0xEE 0xE8 DUP3 JUMPI 0xCD 0xAC 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"156:362:20:-:0;;;407:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;484:10;496:12;1185:1:0;1188;1191;1215:10;1227:12;2745:1:9;2723:24;;:10;:24;;;2715:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2838:1;2814:26;;:12;:26;;;2806:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2936:10;2903:44;;;;;;;;;;2972:12;2957:27;;;;;;;;;;2651:340;;842:6:11;826:22;;;;;;874:6;858:22;;;;;;906:6;890:22;;;;;;726:193;;;1116:131:0;;407:109:20;;156:362;;88:117:21;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:231::-;1673:34;1669:1;1661:6;1657:14;1650:58;1742:14;1737:2;1729:6;1725:15;1718:39;1533:231;:::o;1770:366::-;1912:3;1933:67;1997:2;1992:3;1933:67;:::i;:::-;1926:74;;2009:93;2098:3;2009:93;:::i;:::-;2127:2;2122:3;2118:12;2111:19;;1770:366;;;:::o;2142:419::-;2308:4;2346:2;2335:9;2331:18;2323:26;;2395:9;2389:4;2385:20;2381:1;2370:9;2366:17;2359:47;2423:131;2549:4;2423:131;:::i;:::-;2415:139;;2142:419;;;:::o;2567:234::-;2707:34;2703:1;2695:6;2691:14;2684:58;2776:17;2771:2;2763:6;2759:15;2752:42;2567:234;:::o;2807:366::-;2949:3;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3046:93;3135:3;3046:93;:::i;:::-;3164:2;3159:3;3155:12;3148:19;;2807:366;;;:::o;3179:419::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3432:9;3426:4;3422:20;3418:1;3407:9;3403:17;3396:47;3460:131;3586:4;3460:131;:::i;:::-;3452:139;;3179:419;;;:::o;156:362:20:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MESSENGER_2055":{"entryPoint":1952,"id":2055,"parameterSlots":0,"returnSlots":0},"@OTHER_BRIDGE_2058":{"entryPoint":1916,"id":2058,"parameterSlots":0,"returnSlots":0},"@_initiateBridgeERC721_198":{"entryPoint":2199,"id":198,"parameterSlots":8,"returnSlots":0},"@bridgeERC721To_2248":{"entryPoint":1988,"id":2248,"parameterSlots":7,"returnSlots":0},"@bridgeERC721_2210":{"entryPoint":434,"id":2210,"parameterSlots":6,"returnSlots":0},"@deposits_23":{"entryPoint":734,"id":23,"parameterSlots":0,"returnSlots":0},"@finalizeBridgeERC721_114":{"entryPoint":794,"id":114,"parameterSlots":7,"returnSlots":0},"@isContract_2966":{"entryPoint":2164,"id":2966,"parameterSlots":1,"returnSlots":1},"@messenger_2164":{"entryPoint":531,"id":2164,"parameterSlots":0,"returnSlots":1},"@otherBridge_2173":{"entryPoint":2124,"id":2173,"parameterSlots":0,"returnSlots":1},"@toString_3331":{"entryPoint":3037,"id":3331,"parameterSlots":1,"returnSlots":1},"@version_2406":{"entryPoint":571,"id":2406,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":3472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3622,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":3526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":3586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":4308,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr":{"entryPoint":4525,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4171,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr":{"entryPoint":3708,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4483,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4266,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5659,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":6177,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack":{"entryPoint":3942,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4857,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack":{"entryPoint":5993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack":{"entryPoint":5344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack":{"entryPoint":4779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack":{"entryPoint":5490,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack":{"entryPoint":5847,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack":{"entryPoint":5198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5557,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":6234,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4982,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6060,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":5572,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed":{"entryPoint":6249,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5704,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4281,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed":{"entryPoint":3957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4814,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5882,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5233,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":6166,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3984,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5627,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3995,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":4846,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6674,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6477,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6573,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3431,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4254,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3399,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":3547,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address":{"entryPoint":3924,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3906,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3872,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":5644,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":4012,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":3862,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":6358,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":6625,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6311,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6430,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6760,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6526,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3612,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3607,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3617,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3394,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3389,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4063,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1":{"entryPoint":5914,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832":{"entryPoint":5265,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581":{"entryPoint":4700,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf":{"entryPoint":4906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af":{"entryPoint":5411,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186":{"entryPoint":5768,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d":{"entryPoint":5119,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3449,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3503,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":3563,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24564:21","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:21","statements":[{"nodeType":"YulAssignment","src":"57:19:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:21"},"nodeType":"YulFunctionCall","src":"67:9:21"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:21"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:21","type":""}],"src":"7:75:21"},{"body":{"nodeType":"YulBlock","src":"177:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:21"},"nodeType":"YulFunctionCall","src":"187:12:21"},"nodeType":"YulExpressionStatement","src":"187:12:21"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:21"},{"body":{"nodeType":"YulBlock","src":"300:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:21"},"nodeType":"YulFunctionCall","src":"310:12:21"},"nodeType":"YulExpressionStatement","src":"310:12:21"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:21"},{"body":{"nodeType":"YulBlock","src":"379:81:21","statements":[{"nodeType":"YulAssignment","src":"389:65:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:21"},"nodeType":"YulFunctionCall","src":"400:54:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:21"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:21","type":""}],"src":"334:126:21"},{"body":{"nodeType":"YulBlock","src":"511:51:21","statements":[{"nodeType":"YulAssignment","src":"521:35:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:21"},"nodeType":"YulFunctionCall","src":"532:24:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:21"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:21","type":""}],"src":"466:96:21"},{"body":{"nodeType":"YulBlock","src":"611:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:21"},"nodeType":"YulFunctionCall","src":"670:12:21"},"nodeType":"YulExpressionStatement","src":"670:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:21"},"nodeType":"YulFunctionCall","src":"641:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:21"},"nodeType":"YulFunctionCall","src":"631:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:21"},"nodeType":"YulFunctionCall","src":"624:43:21"},"nodeType":"YulIf","src":"621:63:21"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:21","type":""}],"src":"568:122:21"},{"body":{"nodeType":"YulBlock","src":"748:87:21","statements":[{"nodeType":"YulAssignment","src":"758:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:21"},"nodeType":"YulFunctionCall","src":"767:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:21"},"nodeType":"YulFunctionCall","src":"796:33:21"},"nodeType":"YulExpressionStatement","src":"796:33:21"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:21","type":""}],"src":"696:139:21"},{"body":{"nodeType":"YulBlock","src":"886:32:21","statements":[{"nodeType":"YulAssignment","src":"896:16:21","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:21"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:21","type":""}],"src":"841:77:21"},{"body":{"nodeType":"YulBlock","src":"967:79:21","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:21"},"nodeType":"YulFunctionCall","src":"1026:12:21"},"nodeType":"YulExpressionStatement","src":"1026:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:21"},"nodeType":"YulFunctionCall","src":"997:24:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:21"},"nodeType":"YulFunctionCall","src":"987:35:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:21"},"nodeType":"YulFunctionCall","src":"980:43:21"},"nodeType":"YulIf","src":"977:63:21"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:21","type":""}],"src":"924:122:21"},{"body":{"nodeType":"YulBlock","src":"1104:87:21","statements":[{"nodeType":"YulAssignment","src":"1114:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:21"},"nodeType":"YulFunctionCall","src":"1123:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:21"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:21"},"nodeType":"YulFunctionCall","src":"1152:33:21"},"nodeType":"YulExpressionStatement","src":"1152:33:21"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:21","type":""}],"src":"1052:139:21"},{"body":{"nodeType":"YulBlock","src":"1241:49:21","statements":[{"nodeType":"YulAssignment","src":"1251:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1266:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1273:10:21","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1262:3:21"},"nodeType":"YulFunctionCall","src":"1262:22:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1251:7:21"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1223:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1233:7:21","type":""}],"src":"1197:93:21"},{"body":{"nodeType":"YulBlock","src":"1338:78:21","statements":[{"body":{"nodeType":"YulBlock","src":"1394:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1403:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1406:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1396:6:21"},"nodeType":"YulFunctionCall","src":"1396:12:21"},"nodeType":"YulExpressionStatement","src":"1396:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1361:5:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1385:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1368:16:21"},"nodeType":"YulFunctionCall","src":"1368:23:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1358:2:21"},"nodeType":"YulFunctionCall","src":"1358:34:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1351:6:21"},"nodeType":"YulFunctionCall","src":"1351:42:21"},"nodeType":"YulIf","src":"1348:62:21"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1331:5:21","type":""}],"src":"1296:120:21"},{"body":{"nodeType":"YulBlock","src":"1473:86:21","statements":[{"nodeType":"YulAssignment","src":"1483:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1505:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1492:12:21"},"nodeType":"YulFunctionCall","src":"1492:20:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1483:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1547:5:21"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1521:25:21"},"nodeType":"YulFunctionCall","src":"1521:32:21"},"nodeType":"YulExpressionStatement","src":"1521:32:21"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1451:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1459:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1467:5:21","type":""}],"src":"1422:137:21"},{"body":{"nodeType":"YulBlock","src":"1654:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1671:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1674:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1664:6:21"},"nodeType":"YulFunctionCall","src":"1664:12:21"},"nodeType":"YulExpressionStatement","src":"1664:12:21"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1565:117:21"},{"body":{"nodeType":"YulBlock","src":"1777:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1794:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1797:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1787:6:21"},"nodeType":"YulFunctionCall","src":"1787:12:21"},"nodeType":"YulExpressionStatement","src":"1787:12:21"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1688:117:21"},{"body":{"nodeType":"YulBlock","src":"1900:28:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1917:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1920:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1910:6:21"},"nodeType":"YulFunctionCall","src":"1910:12:21"},"nodeType":"YulExpressionStatement","src":"1910:12:21"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1811:117:21"},{"body":{"nodeType":"YulBlock","src":"2021:478:21","statements":[{"body":{"nodeType":"YulBlock","src":"2070:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2072:77:21"},"nodeType":"YulFunctionCall","src":"2072:79:21"},"nodeType":"YulExpressionStatement","src":"2072:79:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2049:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2057:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2045:3:21"},"nodeType":"YulFunctionCall","src":"2045:17:21"},{"name":"end","nodeType":"YulIdentifier","src":"2064:3:21"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2041:3:21"},"nodeType":"YulFunctionCall","src":"2041:27:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2034:6:21"},"nodeType":"YulFunctionCall","src":"2034:35:21"},"nodeType":"YulIf","src":"2031:122:21"},{"nodeType":"YulAssignment","src":"2162:30:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2185:6:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2172:12:21"},"nodeType":"YulFunctionCall","src":"2172:20:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2162:6:21"}]},{"body":{"nodeType":"YulBlock","src":"2235:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"2237:77:21"},"nodeType":"YulFunctionCall","src":"2237:79:21"},"nodeType":"YulExpressionStatement","src":"2237:79:21"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2207:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2215:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2204:2:21"},"nodeType":"YulFunctionCall","src":"2204:30:21"},"nodeType":"YulIf","src":"2201:117:21"},{"nodeType":"YulAssignment","src":"2327:29:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2343:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2351:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2339:3:21"},"nodeType":"YulFunctionCall","src":"2339:17:21"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2327:8:21"}]},{"body":{"nodeType":"YulBlock","src":"2410:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2412:77:21"},"nodeType":"YulFunctionCall","src":"2412:79:21"},"nodeType":"YulExpressionStatement","src":"2412:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2375:8:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2389:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"2397:4:21","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2385:3:21"},"nodeType":"YulFunctionCall","src":"2385:17:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2371:3:21"},"nodeType":"YulFunctionCall","src":"2371:32:21"},{"name":"end","nodeType":"YulIdentifier","src":"2405:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2368:2:21"},"nodeType":"YulFunctionCall","src":"2368:41:21"},"nodeType":"YulIf","src":"2365:128:21"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1988:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"1996:3:21","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2004:8:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"2014:6:21","type":""}],"src":"1947:552:21"},{"body":{"nodeType":"YulBlock","src":"2657:955:21","statements":[{"body":{"nodeType":"YulBlock","src":"2704:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2706:77:21"},"nodeType":"YulFunctionCall","src":"2706:79:21"},"nodeType":"YulExpressionStatement","src":"2706:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2678:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"2687:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2674:3:21"},"nodeType":"YulFunctionCall","src":"2674:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"2699:3:21","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2670:3:21"},"nodeType":"YulFunctionCall","src":"2670:33:21"},"nodeType":"YulIf","src":"2667:120:21"},{"nodeType":"YulBlock","src":"2797:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2812:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2826:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2816:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2841:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2876:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"2887:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2872:3:21"},"nodeType":"YulFunctionCall","src":"2872:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2896:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2851:20:21"},"nodeType":"YulFunctionCall","src":"2851:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2841:6:21"}]}]},{"nodeType":"YulBlock","src":"2924:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"2939:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2953:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2943:6:21","type":""}]},{"nodeType":"YulAssignment","src":"2969:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3004:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3015:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:21"},"nodeType":"YulFunctionCall","src":"3000:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3024:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2979:20:21"},"nodeType":"YulFunctionCall","src":"2979:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2969:6:21"}]}]},{"nodeType":"YulBlock","src":"3052:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3067:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3081:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3071:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3097:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3132:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3143:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3128:3:21"},"nodeType":"YulFunctionCall","src":"3128:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3152:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3107:20:21"},"nodeType":"YulFunctionCall","src":"3107:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3097:6:21"}]}]},{"nodeType":"YulBlock","src":"3180:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3195:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"3209:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3199:6:21","type":""}]},{"nodeType":"YulAssignment","src":"3225:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3259:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3270:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3255:3:21"},"nodeType":"YulFunctionCall","src":"3255:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3279:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3235:19:21"},"nodeType":"YulFunctionCall","src":"3235:52:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3225:6:21"}]}]},{"nodeType":"YulBlock","src":"3307:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3322:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3353:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3364:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3349:3:21"},"nodeType":"YulFunctionCall","src":"3349:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3336:12:21"},"nodeType":"YulFunctionCall","src":"3336:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3326:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3416:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3418:77:21"},"nodeType":"YulFunctionCall","src":"3418:79:21"},"nodeType":"YulExpressionStatement","src":"3418:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3388:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3396:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3385:2:21"},"nodeType":"YulFunctionCall","src":"3385:30:21"},"nodeType":"YulIf","src":"3382:117:21"},{"nodeType":"YulAssignment","src":"3513:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3567:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"3578:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:21"},"nodeType":"YulFunctionCall","src":"3563:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3587:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3531:31:21"},"nodeType":"YulFunctionCall","src":"3531:64:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3513:6:21"},{"name":"value5","nodeType":"YulIdentifier","src":"3521:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2587:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2598:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2610:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2618:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2626:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2634:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2642:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2650:6:21","type":""}],"src":"2505:1107:21"},{"body":{"nodeType":"YulBlock","src":"3650:28:21","statements":[{"nodeType":"YulAssignment","src":"3660:12:21","value":{"name":"value","nodeType":"YulIdentifier","src":"3667:5:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3660:3:21"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3636:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3646:3:21","type":""}],"src":"3618:60:21"},{"body":{"nodeType":"YulBlock","src":"3744:82:21","statements":[{"nodeType":"YulAssignment","src":"3754:66:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3812:5:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3794:17:21"},"nodeType":"YulFunctionCall","src":"3794:24:21"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3785:8:21"},"nodeType":"YulFunctionCall","src":"3785:34:21"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3767:17:21"},"nodeType":"YulFunctionCall","src":"3767:53:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3754:9:21"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3734:9:21","type":""}],"src":"3684:142:21"},{"body":{"nodeType":"YulBlock","src":"3892:66:21","statements":[{"nodeType":"YulAssignment","src":"3902:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3946:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3915:30:21"},"nodeType":"YulFunctionCall","src":"3915:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3902:9:21"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3872:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3882:9:21","type":""}],"src":"3832:126:21"},{"body":{"nodeType":"YulBlock","src":"4053:66:21","statements":[{"nodeType":"YulAssignment","src":"4063:50:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4107:5:21"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"4076:30:21"},"nodeType":"YulFunctionCall","src":"4076:37:21"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"4063:9:21"}]}]},"name":"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4033:5:21","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"4043:9:21","type":""}],"src":"3964:155:21"},{"body":{"nodeType":"YulBlock","src":"4219:95:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4236:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4301:5:21"}],"functionName":{"name":"convert_t_contract$_CrossDomainMessenger_$2044_to_t_address","nodeType":"YulIdentifier","src":"4241:59:21"},"nodeType":"YulFunctionCall","src":"4241:66:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4229:6:21"},"nodeType":"YulFunctionCall","src":"4229:79:21"},"nodeType":"YulExpressionStatement","src":"4229:79:21"}]},"name":"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4207:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4214:3:21","type":""}],"src":"4125:189:21"},{"body":{"nodeType":"YulBlock","src":"4447:153:21","statements":[{"nodeType":"YulAssignment","src":"4457:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4469:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4480:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4465:3:21"},"nodeType":"YulFunctionCall","src":"4465:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4457:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4566:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4579:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4590:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4575:3:21"},"nodeType":"YulFunctionCall","src":"4575:17:21"}],"functionName":{"name":"abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4493:72:21"},"nodeType":"YulFunctionCall","src":"4493:100:21"},"nodeType":"YulExpressionStatement","src":"4493:100:21"}]},"name":"abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4419:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4431:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4442:4:21","type":""}],"src":"4320:280:21"},{"body":{"nodeType":"YulBlock","src":"4665:40:21","statements":[{"nodeType":"YulAssignment","src":"4676:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4692:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4686:5:21"},"nodeType":"YulFunctionCall","src":"4686:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4676:6:21"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4648:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4658:6:21","type":""}],"src":"4606:99:21"},{"body":{"nodeType":"YulBlock","src":"4807:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4824:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"4829:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4817:6:21"},"nodeType":"YulFunctionCall","src":"4817:19:21"},"nodeType":"YulExpressionStatement","src":"4817:19:21"},{"nodeType":"YulAssignment","src":"4845:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4864:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"4869:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4860:3:21"},"nodeType":"YulFunctionCall","src":"4860:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4845:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4779:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"4784:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4795:11:21","type":""}],"src":"4711:169:21"},{"body":{"nodeType":"YulBlock","src":"4935:258:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4945:10:21","value":{"kind":"number","nodeType":"YulLiteral","src":"4954:1:21","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4949:1:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"5014:63:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5039:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5044:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:21"},"nodeType":"YulFunctionCall","src":"5035:11:21"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5058:3:21"},{"name":"i","nodeType":"YulIdentifier","src":"5063:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5054:3:21"},"nodeType":"YulFunctionCall","src":"5054:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5048:5:21"},"nodeType":"YulFunctionCall","src":"5048:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5028:6:21"},"nodeType":"YulFunctionCall","src":"5028:39:21"},"nodeType":"YulExpressionStatement","src":"5028:39:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4975:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"4978:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4972:2:21"},"nodeType":"YulFunctionCall","src":"4972:13:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4986:19:21","statements":[{"nodeType":"YulAssignment","src":"4988:15:21","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4997:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5000:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4993:3:21"},"nodeType":"YulFunctionCall","src":"4993:10:21"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4988:1:21"}]}]},"pre":{"nodeType":"YulBlock","src":"4968:3:21","statements":[]},"src":"4964:113:21"},{"body":{"nodeType":"YulBlock","src":"5111:76:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5161:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5166:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5157:3:21"},"nodeType":"YulFunctionCall","src":"5157:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"5175:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5150:6:21"},"nodeType":"YulFunctionCall","src":"5150:27:21"},"nodeType":"YulExpressionStatement","src":"5150:27:21"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5092:1:21"},{"name":"length","nodeType":"YulIdentifier","src":"5095:6:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5089:2:21"},"nodeType":"YulFunctionCall","src":"5089:13:21"},"nodeType":"YulIf","src":"5086:101:21"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4917:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4922:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"4927:6:21","type":""}],"src":"4886:307:21"},{"body":{"nodeType":"YulBlock","src":"5247:54:21","statements":[{"nodeType":"YulAssignment","src":"5257:38:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5275:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5282:2:21","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5271:3:21"},"nodeType":"YulFunctionCall","src":"5271:14:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5291:2:21","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5287:3:21"},"nodeType":"YulFunctionCall","src":"5287:7:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5267:3:21"},"nodeType":"YulFunctionCall","src":"5267:28:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5257:6:21"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5230:5:21","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5240:6:21","type":""}],"src":"5199:102:21"},{"body":{"nodeType":"YulBlock","src":"5399:272:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5409:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5456:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5423:32:21"},"nodeType":"YulFunctionCall","src":"5423:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5413:6:21","type":""}]},{"nodeType":"YulAssignment","src":"5471:78:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5537:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5542:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5478:58:21"},"nodeType":"YulFunctionCall","src":"5478:71:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5471:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5584:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"5591:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5580:3:21"},"nodeType":"YulFunctionCall","src":"5580:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"5598:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"5603:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"5558:21:21"},"nodeType":"YulFunctionCall","src":"5558:52:21"},"nodeType":"YulExpressionStatement","src":"5558:52:21"},{"nodeType":"YulAssignment","src":"5619:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5630:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5657:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5635:21:21"},"nodeType":"YulFunctionCall","src":"5635:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5626:3:21"},"nodeType":"YulFunctionCall","src":"5626:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5619:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5380:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5387:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5395:3:21","type":""}],"src":"5307:364:21"},{"body":{"nodeType":"YulBlock","src":"5795:195:21","statements":[{"nodeType":"YulAssignment","src":"5805:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5817:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5828:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5813:3:21"},"nodeType":"YulFunctionCall","src":"5813:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5805:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5852:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"5863:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5848:3:21"},"nodeType":"YulFunctionCall","src":"5848:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5871:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"5877:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5867:3:21"},"nodeType":"YulFunctionCall","src":"5867:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5841:6:21"},"nodeType":"YulFunctionCall","src":"5841:47:21"},"nodeType":"YulExpressionStatement","src":"5841:47:21"},{"nodeType":"YulAssignment","src":"5897:86:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5969:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"5978:4:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5905:63:21"},"nodeType":"YulFunctionCall","src":"5905:78:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5897:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5767:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5779:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5790:4:21","type":""}],"src":"5677:313:21"},{"body":{"nodeType":"YulBlock","src":"6096:519:21","statements":[{"body":{"nodeType":"YulBlock","src":"6142:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6144:77:21"},"nodeType":"YulFunctionCall","src":"6144:79:21"},"nodeType":"YulExpressionStatement","src":"6144:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6117:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"6126:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6113:3:21"},"nodeType":"YulFunctionCall","src":"6113:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"6138:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6109:3:21"},"nodeType":"YulFunctionCall","src":"6109:32:21"},"nodeType":"YulIf","src":"6106:119:21"},{"nodeType":"YulBlock","src":"6235:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6250:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6264:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6254:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6279:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6314:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6325:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:21"},"nodeType":"YulFunctionCall","src":"6310:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6334:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6289:20:21"},"nodeType":"YulFunctionCall","src":"6289:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6279:6:21"}]}]},{"nodeType":"YulBlock","src":"6362:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6377:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6391:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6381:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6407:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6442:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6438:3:21"},"nodeType":"YulFunctionCall","src":"6438:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6462:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6417:20:21"},"nodeType":"YulFunctionCall","src":"6417:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6407:6:21"}]}]},{"nodeType":"YulBlock","src":"6490:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"6505:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"6519:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6509:6:21","type":""}]},{"nodeType":"YulAssignment","src":"6535:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6570:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"6581:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6566:3:21"},"nodeType":"YulFunctionCall","src":"6566:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6590:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6545:20:21"},"nodeType":"YulFunctionCall","src":"6545:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6535:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6050:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6061:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6073:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6081:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6089:6:21","type":""}],"src":"5996:619:21"},{"body":{"nodeType":"YulBlock","src":"6663:48:21","statements":[{"nodeType":"YulAssignment","src":"6673:32:21","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6698:5:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6691:6:21"},"nodeType":"YulFunctionCall","src":"6691:13:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6684:6:21"},"nodeType":"YulFunctionCall","src":"6684:21:21"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6673:7:21"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6645:5:21","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6655:7:21","type":""}],"src":"6621:90:21"},{"body":{"nodeType":"YulBlock","src":"6776:50:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6793:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6813:5:21"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6798:14:21"},"nodeType":"YulFunctionCall","src":"6798:21:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6786:6:21"},"nodeType":"YulFunctionCall","src":"6786:34:21"},"nodeType":"YulExpressionStatement","src":"6786:34:21"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6764:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6771:3:21","type":""}],"src":"6717:109:21"},{"body":{"nodeType":"YulBlock","src":"6924:118:21","statements":[{"nodeType":"YulAssignment","src":"6934:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"6957:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:21"},"nodeType":"YulFunctionCall","src":"6942:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6934:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7008:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7021:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"7032:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7017:3:21"},"nodeType":"YulFunctionCall","src":"7017:17:21"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"6970:37:21"},"nodeType":"YulFunctionCall","src":"6970:65:21"},"nodeType":"YulExpressionStatement","src":"6970:65:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6896:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6908:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6919:4:21","type":""}],"src":"6832:210:21"},{"body":{"nodeType":"YulBlock","src":"7218:1085:21","statements":[{"body":{"nodeType":"YulBlock","src":"7265:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7267:77:21"},"nodeType":"YulFunctionCall","src":"7267:79:21"},"nodeType":"YulExpressionStatement","src":"7267:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7239:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"7248:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7235:3:21"},"nodeType":"YulFunctionCall","src":"7235:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"7260:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7231:3:21"},"nodeType":"YulFunctionCall","src":"7231:33:21"},"nodeType":"YulIf","src":"7228:120:21"},{"nodeType":"YulBlock","src":"7358:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7373:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7387:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7377:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7402:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7437:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7448:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7433:3:21"},"nodeType":"YulFunctionCall","src":"7433:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7457:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7412:20:21"},"nodeType":"YulFunctionCall","src":"7412:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7402:6:21"}]}]},{"nodeType":"YulBlock","src":"7485:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7500:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7514:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7504:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7530:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7565:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7576:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7561:3:21"},"nodeType":"YulFunctionCall","src":"7561:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7585:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7540:20:21"},"nodeType":"YulFunctionCall","src":"7540:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7530:6:21"}]}]},{"nodeType":"YulBlock","src":"7613:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7628:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7642:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7632:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7658:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7693:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7704:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7689:3:21"},"nodeType":"YulFunctionCall","src":"7689:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7713:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7668:20:21"},"nodeType":"YulFunctionCall","src":"7668:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7658:6:21"}]}]},{"nodeType":"YulBlock","src":"7741:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7756:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7770:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7760:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7786:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7821:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7832:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7817:3:21"},"nodeType":"YulFunctionCall","src":"7817:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7841:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7796:20:21"},"nodeType":"YulFunctionCall","src":"7796:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7786:6:21"}]}]},{"nodeType":"YulBlock","src":"7869:119:21","statements":[{"nodeType":"YulVariableDeclaration","src":"7884:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"7898:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7888:6:21","type":""}]},{"nodeType":"YulAssignment","src":"7915:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7950:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"7961:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7946:3:21"},"nodeType":"YulFunctionCall","src":"7946:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7970:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7925:20:21"},"nodeType":"YulFunctionCall","src":"7925:53:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7915:6:21"}]}]},{"nodeType":"YulBlock","src":"7998:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8013:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8044:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8055:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8040:3:21"},"nodeType":"YulFunctionCall","src":"8040:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8027:12:21"},"nodeType":"YulFunctionCall","src":"8027:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8017:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"8107:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8109:77:21"},"nodeType":"YulFunctionCall","src":"8109:79:21"},"nodeType":"YulExpressionStatement","src":"8109:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8079:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"8087:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8076:2:21"},"nodeType":"YulFunctionCall","src":"8076:30:21"},"nodeType":"YulIf","src":"8073:117:21"},{"nodeType":"YulAssignment","src":"8204:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8258:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"8269:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8254:3:21"},"nodeType":"YulFunctionCall","src":"8254:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8278:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"8222:31:21"},"nodeType":"YulFunctionCall","src":"8222:64:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8204:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"8212:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7140:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7151:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7163:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7171:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7179:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7187:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7195:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7203:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7211:6:21","type":""}],"src":"7048:1255:21"},{"body":{"nodeType":"YulBlock","src":"8374:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8391:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8414:5:21"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8396:17:21"},"nodeType":"YulFunctionCall","src":"8396:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8384:6:21"},"nodeType":"YulFunctionCall","src":"8384:37:21"},"nodeType":"YulExpressionStatement","src":"8384:37:21"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8362:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8369:3:21","type":""}],"src":"8309:118:21"},{"body":{"nodeType":"YulBlock","src":"8531:124:21","statements":[{"nodeType":"YulAssignment","src":"8541:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8553:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8564:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8549:3:21"},"nodeType":"YulFunctionCall","src":"8549:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8541:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8621:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8634:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"8645:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8630:3:21"},"nodeType":"YulFunctionCall","src":"8630:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8577:43:21"},"nodeType":"YulFunctionCall","src":"8577:71:21"},"nodeType":"YulExpressionStatement","src":"8577:71:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8503:9:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8515:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8526:4:21","type":""}],"src":"8433:222:21"},{"body":{"nodeType":"YulBlock","src":"8830:1084:21","statements":[{"body":{"nodeType":"YulBlock","src":"8877:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8879:77:21"},"nodeType":"YulFunctionCall","src":"8879:79:21"},"nodeType":"YulExpressionStatement","src":"8879:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8851:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"8860:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8847:3:21"},"nodeType":"YulFunctionCall","src":"8847:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"8872:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8843:3:21"},"nodeType":"YulFunctionCall","src":"8843:33:21"},"nodeType":"YulIf","src":"8840:120:21"},{"nodeType":"YulBlock","src":"8970:117:21","statements":[{"nodeType":"YulVariableDeclaration","src":"8985:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"8999:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8989:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9014:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9049:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9060:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9045:3:21"},"nodeType":"YulFunctionCall","src":"9045:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9069:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9024:20:21"},"nodeType":"YulFunctionCall","src":"9024:53:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9014:6:21"}]}]},{"nodeType":"YulBlock","src":"9097:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9112:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9126:2:21","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9116:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9142:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9177:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9188:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9173:3:21"},"nodeType":"YulFunctionCall","src":"9173:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9197:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9152:20:21"},"nodeType":"YulFunctionCall","src":"9152:53:21"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9142:6:21"}]}]},{"nodeType":"YulBlock","src":"9225:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9240:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9254:2:21","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9244:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9270:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9305:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9316:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:21"},"nodeType":"YulFunctionCall","src":"9301:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9325:7:21"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9280:20:21"},"nodeType":"YulFunctionCall","src":"9280:53:21"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9270:6:21"}]}]},{"nodeType":"YulBlock","src":"9353:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9368:16:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9382:2:21","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9372:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9398:63:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9433:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9444:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9429:3:21"},"nodeType":"YulFunctionCall","src":"9429:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9453:7:21"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9408:20:21"},"nodeType":"YulFunctionCall","src":"9408:53:21"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9398:6:21"}]}]},{"nodeType":"YulBlock","src":"9481:118:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9496:17:21","value":{"kind":"number","nodeType":"YulLiteral","src":"9510:3:21","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9500:6:21","type":""}]},{"nodeType":"YulAssignment","src":"9527:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9561:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9572:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9557:3:21"},"nodeType":"YulFunctionCall","src":"9557:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9581:7:21"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"9537:19:21"},"nodeType":"YulFunctionCall","src":"9537:52:21"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"9527:6:21"}]}]},{"nodeType":"YulBlock","src":"9609:298:21","statements":[{"nodeType":"YulVariableDeclaration","src":"9624:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9655:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"9666:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9651:3:21"},"nodeType":"YulFunctionCall","src":"9651:19:21"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9638:12:21"},"nodeType":"YulFunctionCall","src":"9638:33:21"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9628:6:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"9718:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9720:77:21"},"nodeType":"YulFunctionCall","src":"9720:79:21"},"nodeType":"YulExpressionStatement","src":"9720:79:21"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9690:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"9698:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9687:2:21"},"nodeType":"YulFunctionCall","src":"9687:30:21"},"nodeType":"YulIf","src":"9684:117:21"},{"nodeType":"YulAssignment","src":"9815:82:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"9880:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:21"},"nodeType":"YulFunctionCall","src":"9865:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9889:7:21"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"9833:31:21"},"nodeType":"YulFunctionCall","src":"9833:64:21"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"9815:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"9823:6:21"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8752:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8763:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8775:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8783:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8791:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8799:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"8807:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"8815:6:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"8823:6:21","type":""}],"src":"8661:1253:21"},{"body":{"nodeType":"YulBlock","src":"10026:126:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10048:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10056:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10044:3:21"},"nodeType":"YulFunctionCall","src":"10044:14:21"},{"hexValue":"4552433732314272696467653a206163636f756e74206973206e6f7420657874","kind":"string","nodeType":"YulLiteral","src":"10060:34:21","type":"","value":"ERC721Bridge: account is not ext"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10037:6:21"},"nodeType":"YulFunctionCall","src":"10037:58:21"},"nodeType":"YulExpressionStatement","src":"10037:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10116:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"10124:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10112:3:21"},"nodeType":"YulFunctionCall","src":"10112:15:21"},{"hexValue":"65726e616c6c79206f776e6564","kind":"string","nodeType":"YulLiteral","src":"10129:15:21","type":"","value":"ernally owned"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10105:6:21"},"nodeType":"YulFunctionCall","src":"10105:40:21"},"nodeType":"YulExpressionStatement","src":"10105:40:21"}]},"name":"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10018:6:21","type":""}],"src":"9920:232:21"},{"body":{"nodeType":"YulBlock","src":"10304:220:21","statements":[{"nodeType":"YulAssignment","src":"10314:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10380:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10385:2:21","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10321:58:21"},"nodeType":"YulFunctionCall","src":"10321:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10314:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10486:3:21"}],"functionName":{"name":"store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581","nodeType":"YulIdentifier","src":"10397:88:21"},"nodeType":"YulFunctionCall","src":"10397:93:21"},"nodeType":"YulExpressionStatement","src":"10397:93:21"},{"nodeType":"YulAssignment","src":"10499:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10510:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"10515:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:21"},"nodeType":"YulFunctionCall","src":"10506:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10499:3:21"}]}]},"name":"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10292:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10300:3:21","type":""}],"src":"10158:366:21"},{"body":{"nodeType":"YulBlock","src":"10701:248:21","statements":[{"nodeType":"YulAssignment","src":"10711:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10723:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10734:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10719:3:21"},"nodeType":"YulFunctionCall","src":"10719:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10711:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10758:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"10769:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10754:3:21"},"nodeType":"YulFunctionCall","src":"10754:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10777:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"10783:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10773:3:21"},"nodeType":"YulFunctionCall","src":"10773:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10747:6:21"},"nodeType":"YulFunctionCall","src":"10747:47:21"},"nodeType":"YulExpressionStatement","src":"10747:47:21"},{"nodeType":"YulAssignment","src":"10803:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10937:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10811:124:21"},"nodeType":"YulFunctionCall","src":"10811:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10803:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10681:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10696:4:21","type":""}],"src":"10530:419:21"},{"body":{"nodeType":"YulBlock","src":"11069:34:21","statements":[{"nodeType":"YulAssignment","src":"11079:18:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"11094:3:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11079:11:21"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11041:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"11046:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11057:11:21","type":""}],"src":"10955:148:21"},{"body":{"nodeType":"YulBlock","src":"11219:267:21","statements":[{"nodeType":"YulVariableDeclaration","src":"11229:53:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11276:5:21"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11243:32:21"},"nodeType":"YulFunctionCall","src":"11243:39:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11233:6:21","type":""}]},{"nodeType":"YulAssignment","src":"11291:96:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11375:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11380:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11298:76:21"},"nodeType":"YulFunctionCall","src":"11298:89:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11291:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11422:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"11429:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11418:3:21"},"nodeType":"YulFunctionCall","src":"11418:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"11436:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11441:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11396:21:21"},"nodeType":"YulFunctionCall","src":"11396:52:21"},"nodeType":"YulExpressionStatement","src":"11396:52:21"},{"nodeType":"YulAssignment","src":"11457:23:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11468:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"11473:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11464:3:21"},"nodeType":"YulFunctionCall","src":"11464:16:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11457:3:21"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11200:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11207:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11215:3:21","type":""}],"src":"11109:377:21"},{"body":{"nodeType":"YulBlock","src":"11598:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11620:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"11628:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11616:3:21"},"nodeType":"YulFunctionCall","src":"11616:14:21"},{"hexValue":"2e","kind":"string","nodeType":"YulLiteral","src":"11632:3:21","type":"","value":"."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11609:6:21"},"nodeType":"YulFunctionCall","src":"11609:27:21"},"nodeType":"YulExpressionStatement","src":"11609:27:21"}]},"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11590:6:21","type":""}],"src":"11492:151:21"},{"body":{"nodeType":"YulBlock","src":"11813:236:21","statements":[{"nodeType":"YulAssignment","src":"11823:91:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11907:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"11912:1:21","type":"","value":"1"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"11830:76:21"},"nodeType":"YulFunctionCall","src":"11830:84:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11823:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12012:3:21"}],"functionName":{"name":"store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","nodeType":"YulIdentifier","src":"11923:88:21"},"nodeType":"YulFunctionCall","src":"11923:93:21"},"nodeType":"YulExpressionStatement","src":"11923:93:21"},{"nodeType":"YulAssignment","src":"12025:18:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12036:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"12041:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12032:3:21"},"nodeType":"YulFunctionCall","src":"12032:11:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12025:3:21"}]}]},"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11801:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11809:3:21","type":""}],"src":"11649:400:21"},{"body":{"nodeType":"YulBlock","src":"12489:693:21","statements":[{"nodeType":"YulAssignment","src":"12500:102:21","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12589:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"12598:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12507:81:21"},"nodeType":"YulFunctionCall","src":"12507:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12500:3:21"}]},{"nodeType":"YulAssignment","src":"12612:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12763:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12619:142:21"},"nodeType":"YulFunctionCall","src":"12619:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12612:3:21"}]},{"nodeType":"YulAssignment","src":"12777:102:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12866:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"12875:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12784:81:21"},"nodeType":"YulFunctionCall","src":"12784:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12777:3:21"}]},{"nodeType":"YulAssignment","src":"12889:155:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13040:3:21"}],"functionName":{"name":"abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"12896:142:21"},"nodeType":"YulFunctionCall","src":"12896:148:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12889:3:21"}]},{"nodeType":"YulAssignment","src":"13054:102:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13143:6:21"},{"name":"pos","nodeType":"YulIdentifier","src":"13152:3:21"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13061:81:21"},"nodeType":"YulFunctionCall","src":"13061:95:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13054:3:21"}]},{"nodeType":"YulAssignment","src":"13166:10:21","value":{"name":"pos","nodeType":"YulIdentifier","src":"13173:3:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13166:3:21"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12452:3:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12458:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12466:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12474:6:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12485:3:21","type":""}],"src":"12055:1127:21"},{"body":{"nodeType":"YulBlock","src":"13251:80:21","statements":[{"nodeType":"YulAssignment","src":"13261:22:21","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13276:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13270:5:21"},"nodeType":"YulFunctionCall","src":"13270:13:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13261:5:21"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13319:5:21"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"13292:26:21"},"nodeType":"YulFunctionCall","src":"13292:33:21"},"nodeType":"YulExpressionStatement","src":"13292:33:21"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13229:6:21","type":""},{"name":"end","nodeType":"YulTypedName","src":"13237:3:21","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13245:5:21","type":""}],"src":"13188:143:21"},{"body":{"nodeType":"YulBlock","src":"13414:274:21","statements":[{"body":{"nodeType":"YulBlock","src":"13460:83:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13462:77:21"},"nodeType":"YulFunctionCall","src":"13462:79:21"},"nodeType":"YulExpressionStatement","src":"13462:79:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13435:7:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"13444:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13431:3:21"},"nodeType":"YulFunctionCall","src":"13431:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"13456:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13427:3:21"},"nodeType":"YulFunctionCall","src":"13427:32:21"},"nodeType":"YulIf","src":"13424:119:21"},{"nodeType":"YulBlock","src":"13553:128:21","statements":[{"nodeType":"YulVariableDeclaration","src":"13568:15:21","value":{"kind":"number","nodeType":"YulLiteral","src":"13582:1:21","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13572:6:21","type":""}]},{"nodeType":"YulAssignment","src":"13597:74:21","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13643:9:21"},{"name":"offset","nodeType":"YulIdentifier","src":"13654:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13639:3:21"},"nodeType":"YulFunctionCall","src":"13639:22:21"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13663:7:21"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"13607:31:21"},"nodeType":"YulFunctionCall","src":"13607:64:21"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13597:6:21"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13384:9:21","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13395:7:21","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13407:6:21","type":""}],"src":"13337:351:21"},{"body":{"nodeType":"YulBlock","src":"13800:144:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13822:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13830:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13818:3:21"},"nodeType":"YulFunctionCall","src":"13818:14:21"},{"hexValue":"4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c7920","kind":"string","nodeType":"YulLiteral","src":"13834:34:21","type":"","value":"ERC721Bridge: function can only "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13811:6:21"},"nodeType":"YulFunctionCall","src":"13811:58:21"},"nodeType":"YulExpressionStatement","src":"13811:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13890:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"13898:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13886:3:21"},"nodeType":"YulFunctionCall","src":"13886:15:21"},{"hexValue":"62652063616c6c65642066726f6d20746865206f7468657220627269646765","kind":"string","nodeType":"YulLiteral","src":"13903:33:21","type":"","value":"be called from the other bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13879:6:21"},"nodeType":"YulFunctionCall","src":"13879:58:21"},"nodeType":"YulExpressionStatement","src":"13879:58:21"}]},"name":"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13792:6:21","type":""}],"src":"13694:250:21"},{"body":{"nodeType":"YulBlock","src":"14096:220:21","statements":[{"nodeType":"YulAssignment","src":"14106:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14172:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14177:2:21","type":"","value":"63"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14113:58:21"},"nodeType":"YulFunctionCall","src":"14113:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14106:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14278:3:21"}],"functionName":{"name":"store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d","nodeType":"YulIdentifier","src":"14189:88:21"},"nodeType":"YulFunctionCall","src":"14189:93:21"},"nodeType":"YulExpressionStatement","src":"14189:93:21"},{"nodeType":"YulAssignment","src":"14291:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14302:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"14307:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14298:3:21"},"nodeType":"YulFunctionCall","src":"14298:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14291:3:21"}]}]},"name":"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14084:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14092:3:21","type":""}],"src":"13950:366:21"},{"body":{"nodeType":"YulBlock","src":"14493:248:21","statements":[{"nodeType":"YulAssignment","src":"14503:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14515:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14526:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14511:3:21"},"nodeType":"YulFunctionCall","src":"14511:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14503:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14550:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"14561:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14546:3:21"},"nodeType":"YulFunctionCall","src":"14546:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14569:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"14575:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14565:3:21"},"nodeType":"YulFunctionCall","src":"14565:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14539:6:21"},"nodeType":"YulFunctionCall","src":"14539:47:21"},"nodeType":"YulExpressionStatement","src":"14539:47:21"},{"nodeType":"YulAssignment","src":"14595:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14729:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14603:124:21"},"nodeType":"YulFunctionCall","src":"14603:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14595:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14473:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14488:4:21","type":""}],"src":"14322:419:21"},{"body":{"nodeType":"YulBlock","src":"14853:123:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14875:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14883:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14871:3:21"},"nodeType":"YulFunctionCall","src":"14871:14:21"},{"hexValue":"4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e","kind":"string","nodeType":"YulLiteral","src":"14887:34:21","type":"","value":"L1ERC721Bridge: local token cann"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14864:6:21"},"nodeType":"YulFunctionCall","src":"14864:58:21"},"nodeType":"YulExpressionStatement","src":"14864:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14943:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"14951:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14939:3:21"},"nodeType":"YulFunctionCall","src":"14939:15:21"},{"hexValue":"6f742062652073656c66","kind":"string","nodeType":"YulLiteral","src":"14956:12:21","type":"","value":"ot be self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14932:6:21"},"nodeType":"YulFunctionCall","src":"14932:37:21"},"nodeType":"YulExpressionStatement","src":"14932:37:21"}]},"name":"store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14845:6:21","type":""}],"src":"14747:229:21"},{"body":{"nodeType":"YulBlock","src":"15128:220:21","statements":[{"nodeType":"YulAssignment","src":"15138:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15204:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15209:2:21","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15145:58:21"},"nodeType":"YulFunctionCall","src":"15145:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15138:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15310:3:21"}],"functionName":{"name":"store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832","nodeType":"YulIdentifier","src":"15221:88:21"},"nodeType":"YulFunctionCall","src":"15221:93:21"},"nodeType":"YulExpressionStatement","src":"15221:93:21"},{"nodeType":"YulAssignment","src":"15323:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15334:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"15339:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15330:3:21"},"nodeType":"YulFunctionCall","src":"15330:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15323:3:21"}]}]},"name":"abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15116:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15124:3:21","type":""}],"src":"14982:366:21"},{"body":{"nodeType":"YulBlock","src":"15525:248:21","statements":[{"nodeType":"YulAssignment","src":"15535:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15547:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15558:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15543:3:21"},"nodeType":"YulFunctionCall","src":"15543:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15535:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15582:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"15593:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15578:3:21"},"nodeType":"YulFunctionCall","src":"15578:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15601:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"15607:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15597:3:21"},"nodeType":"YulFunctionCall","src":"15597:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15571:6:21"},"nodeType":"YulFunctionCall","src":"15571:47:21"},"nodeType":"YulExpressionStatement","src":"15571:47:21"},{"nodeType":"YulAssignment","src":"15627:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15761:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15635:124:21"},"nodeType":"YulFunctionCall","src":"15635:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15627:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15505:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15520:4:21","type":""}],"src":"15354:419:21"},{"body":{"nodeType":"YulBlock","src":"15885:138:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15907:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15915:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15903:3:21"},"nodeType":"YulFunctionCall","src":"15903:14:21"},{"hexValue":"4c314552433732314272696467653a20546f6b656e204944206973206e6f7420","kind":"string","nodeType":"YulLiteral","src":"15919:34:21","type":"","value":"L1ERC721Bridge: Token ID is not "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15896:6:21"},"nodeType":"YulFunctionCall","src":"15896:58:21"},"nodeType":"YulExpressionStatement","src":"15896:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15975:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"15983:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15971:3:21"},"nodeType":"YulFunctionCall","src":"15971:15:21"},{"hexValue":"657363726f77656420696e20746865204c3120427269646765","kind":"string","nodeType":"YulLiteral","src":"15988:27:21","type":"","value":"escrowed in the L1 Bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15964:6:21"},"nodeType":"YulFunctionCall","src":"15964:52:21"},"nodeType":"YulExpressionStatement","src":"15964:52:21"}]},"name":"store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15877:6:21","type":""}],"src":"15779:244:21"},{"body":{"nodeType":"YulBlock","src":"16175:220:21","statements":[{"nodeType":"YulAssignment","src":"16185:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16251:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16256:2:21","type":"","value":"57"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16192:58:21"},"nodeType":"YulFunctionCall","src":"16192:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16185:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16357:3:21"}],"functionName":{"name":"store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af","nodeType":"YulIdentifier","src":"16268:88:21"},"nodeType":"YulFunctionCall","src":"16268:93:21"},"nodeType":"YulExpressionStatement","src":"16268:93:21"},{"nodeType":"YulAssignment","src":"16370:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16381:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"16386:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16377:3:21"},"nodeType":"YulFunctionCall","src":"16377:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16370:3:21"}]}]},"name":"abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16163:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16171:3:21","type":""}],"src":"16029:366:21"},{"body":{"nodeType":"YulBlock","src":"16572:248:21","statements":[{"nodeType":"YulAssignment","src":"16582:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16594:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16605:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16590:3:21"},"nodeType":"YulFunctionCall","src":"16590:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16582:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16629:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"16640:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16625:3:21"},"nodeType":"YulFunctionCall","src":"16625:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16648:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"16654:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16644:3:21"},"nodeType":"YulFunctionCall","src":"16644:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16618:6:21"},"nodeType":"YulFunctionCall","src":"16618:47:21"},"nodeType":"YulExpressionStatement","src":"16618:47:21"},{"nodeType":"YulAssignment","src":"16674:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16808:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16682:124:21"},"nodeType":"YulFunctionCall","src":"16682:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16674:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16552:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16567:4:21","type":""}],"src":"16401:419:21"},{"body":{"nodeType":"YulBlock","src":"16891:53:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16908:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16931:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16913:17:21"},"nodeType":"YulFunctionCall","src":"16913:24:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16901:6:21"},"nodeType":"YulFunctionCall","src":"16901:37:21"},"nodeType":"YulExpressionStatement","src":"16901:37:21"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16879:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16886:3:21","type":""}],"src":"16826:118:21"},{"body":{"nodeType":"YulBlock","src":"17104:288:21","statements":[{"nodeType":"YulAssignment","src":"17114:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17126:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17137:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17122:3:21"},"nodeType":"YulFunctionCall","src":"17122:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17114:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17194:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17207:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17218:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17203:3:21"},"nodeType":"YulFunctionCall","src":"17203:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17150:43:21"},"nodeType":"YulFunctionCall","src":"17150:71:21"},"nodeType":"YulExpressionStatement","src":"17150:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17275:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17288:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17299:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17284:3:21"},"nodeType":"YulFunctionCall","src":"17284:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"17231:43:21"},"nodeType":"YulFunctionCall","src":"17231:72:21"},"nodeType":"YulExpressionStatement","src":"17231:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17357:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17370:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"17381:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17366:3:21"},"nodeType":"YulFunctionCall","src":"17366:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17313:43:21"},"nodeType":"YulFunctionCall","src":"17313:72:21"},"nodeType":"YulExpressionStatement","src":"17313:72:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17060:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17072:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17080:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17088:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17099:4:21","type":""}],"src":"16950:442:21"},{"body":{"nodeType":"YulBlock","src":"17493:73:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17510:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17515:6:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17503:6:21"},"nodeType":"YulFunctionCall","src":"17503:19:21"},"nodeType":"YulExpressionStatement","src":"17503:19:21"},{"nodeType":"YulAssignment","src":"17531:29:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17550:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"17555:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17546:3:21"},"nodeType":"YulFunctionCall","src":"17546:14:21"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17531:11:21"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17465:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17470:6:21","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17481:11:21","type":""}],"src":"17398:168:21"},{"body":{"nodeType":"YulBlock","src":"17623:103:21","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17646:3:21"},{"name":"src","nodeType":"YulIdentifier","src":"17651:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17656:6:21"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17633:12:21"},"nodeType":"YulFunctionCall","src":"17633:30:21"},"nodeType":"YulExpressionStatement","src":"17633:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17704:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17709:6:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17700:3:21"},"nodeType":"YulFunctionCall","src":"17700:16:21"},{"kind":"number","nodeType":"YulLiteral","src":"17718:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17693:6:21"},"nodeType":"YulFunctionCall","src":"17693:27:21"},"nodeType":"YulExpressionStatement","src":"17693:27:21"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17605:3:21","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17610:3:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17615:6:21","type":""}],"src":"17572:154:21"},{"body":{"nodeType":"YulBlock","src":"17854:201:21","statements":[{"nodeType":"YulAssignment","src":"17864:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17929:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17934:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17871:57:21"},"nodeType":"YulFunctionCall","src":"17871:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17864:3:21"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"17975:5:21"},{"name":"pos","nodeType":"YulIdentifier","src":"17982:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"17987:6:21"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"17951:23:21"},"nodeType":"YulFunctionCall","src":"17951:43:21"},"nodeType":"YulExpressionStatement","src":"17951:43:21"},{"nodeType":"YulAssignment","src":"18003:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18014:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18041:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18019:21:21"},"nodeType":"YulFunctionCall","src":"18019:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18010:3:21"},"nodeType":"YulFunctionCall","src":"18010:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18003:3:21"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"17827:5:21","type":""},{"name":"length","nodeType":"YulTypedName","src":"17834:6:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17842:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17850:3:21","type":""}],"src":"17754:301:21"},{"body":{"nodeType":"YulBlock","src":"18243:367:21","statements":[{"nodeType":"YulAssignment","src":"18253:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18265:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18276:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18261:3:21"},"nodeType":"YulFunctionCall","src":"18261:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18253:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18333:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18346:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18357:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18342:3:21"},"nodeType":"YulFunctionCall","src":"18342:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18289:43:21"},"nodeType":"YulFunctionCall","src":"18289:71:21"},"nodeType":"YulExpressionStatement","src":"18289:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18414:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18438:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18423:3:21"},"nodeType":"YulFunctionCall","src":"18423:18:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18370:43:21"},"nodeType":"YulFunctionCall","src":"18370:72:21"},"nodeType":"YulExpressionStatement","src":"18370:72:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18463:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"18474:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18459:3:21"},"nodeType":"YulFunctionCall","src":"18459:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18483:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"18489:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18479:3:21"},"nodeType":"YulFunctionCall","src":"18479:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18452:6:21"},"nodeType":"YulFunctionCall","src":"18452:48:21"},"nodeType":"YulExpressionStatement","src":"18452:48:21"},{"nodeType":"YulAssignment","src":"18509:94:21","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18581:6:21"},{"name":"value3","nodeType":"YulIdentifier","src":"18589:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"18598:4:21"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18517:63:21"},"nodeType":"YulFunctionCall","src":"18517:86:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18509:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18191:9:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"18203:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18211:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18219:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18227:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18238:4:21","type":""}],"src":"18061:549:21"},{"body":{"nodeType":"YulBlock","src":"18722:129:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18744:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18752:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18740:3:21"},"nodeType":"YulFunctionCall","src":"18740:14:21"},{"hexValue":"4552433732314272696467653a206e667420726563697069656e742063616e6e","kind":"string","nodeType":"YulLiteral","src":"18756:34:21","type":"","value":"ERC721Bridge: nft recipient cann"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18733:6:21"},"nodeType":"YulFunctionCall","src":"18733:58:21"},"nodeType":"YulExpressionStatement","src":"18733:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18812:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"18820:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18808:3:21"},"nodeType":"YulFunctionCall","src":"18808:15:21"},{"hexValue":"6f742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"18825:18:21","type":"","value":"ot be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18801:6:21"},"nodeType":"YulFunctionCall","src":"18801:43:21"},"nodeType":"YulExpressionStatement","src":"18801:43:21"}]},"name":"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18714:6:21","type":""}],"src":"18616:235:21"},{"body":{"nodeType":"YulBlock","src":"19003:220:21","statements":[{"nodeType":"YulAssignment","src":"19013:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19079:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19084:2:21","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19020:58:21"},"nodeType":"YulFunctionCall","src":"19020:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19013:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19185:3:21"}],"functionName":{"name":"store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186","nodeType":"YulIdentifier","src":"19096:88:21"},"nodeType":"YulFunctionCall","src":"19096:93:21"},"nodeType":"YulExpressionStatement","src":"19096:93:21"},{"nodeType":"YulAssignment","src":"19198:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19209:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"19214:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19205:3:21"},"nodeType":"YulFunctionCall","src":"19205:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19198:3:21"}]}]},"name":"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18991:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18999:3:21","type":""}],"src":"18857:366:21"},{"body":{"nodeType":"YulBlock","src":"19400:248:21","statements":[{"nodeType":"YulAssignment","src":"19410:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19422:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19433:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19418:3:21"},"nodeType":"YulFunctionCall","src":"19418:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19410:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19457:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"19468:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19453:3:21"},"nodeType":"YulFunctionCall","src":"19453:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19476:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"19482:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19472:3:21"},"nodeType":"YulFunctionCall","src":"19472:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19446:6:21"},"nodeType":"YulFunctionCall","src":"19446:47:21"},"nodeType":"YulExpressionStatement","src":"19446:47:21"},{"nodeType":"YulAssignment","src":"19502:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19636:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19510:124:21"},"nodeType":"YulFunctionCall","src":"19510:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19502:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19380:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19395:4:21","type":""}],"src":"19229:419:21"},{"body":{"nodeType":"YulBlock","src":"19760:130:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19782:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19790:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19778:3:21"},"nodeType":"YulFunctionCall","src":"19778:14:21"},{"hexValue":"4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e","kind":"string","nodeType":"YulLiteral","src":"19794:34:21","type":"","value":"L1ERC721Bridge: remote token can"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19771:6:21"},"nodeType":"YulFunctionCall","src":"19771:58:21"},"nodeType":"YulExpressionStatement","src":"19771:58:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19850:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19858:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19846:3:21"},"nodeType":"YulFunctionCall","src":"19846:15:21"},{"hexValue":"6e6f742062652061646472657373283029","kind":"string","nodeType":"YulLiteral","src":"19863:19:21","type":"","value":"not be address(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19839:6:21"},"nodeType":"YulFunctionCall","src":"19839:44:21"},"nodeType":"YulExpressionStatement","src":"19839:44:21"}]},"name":"store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19752:6:21","type":""}],"src":"19654:236:21"},{"body":{"nodeType":"YulBlock","src":"20042:220:21","statements":[{"nodeType":"YulAssignment","src":"20052:74:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20118:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20123:2:21","type":"","value":"49"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20059:58:21"},"nodeType":"YulFunctionCall","src":"20059:67:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20052:3:21"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20224:3:21"}],"functionName":{"name":"store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1","nodeType":"YulIdentifier","src":"20135:88:21"},"nodeType":"YulFunctionCall","src":"20135:93:21"},"nodeType":"YulExpressionStatement","src":"20135:93:21"},{"nodeType":"YulAssignment","src":"20237:19:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20248:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"20253:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20244:3:21"},"nodeType":"YulFunctionCall","src":"20244:12:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20237:3:21"}]}]},"name":"abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20030:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20038:3:21","type":""}],"src":"19896:366:21"},{"body":{"nodeType":"YulBlock","src":"20439:248:21","statements":[{"nodeType":"YulAssignment","src":"20449:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20461:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20472:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20457:3:21"},"nodeType":"YulFunctionCall","src":"20457:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20449:4:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20496:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20507:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20492:3:21"},"nodeType":"YulFunctionCall","src":"20492:17:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20515:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"20521:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20511:3:21"},"nodeType":"YulFunctionCall","src":"20511:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20485:6:21"},"nodeType":"YulFunctionCall","src":"20485:47:21"},"nodeType":"YulExpressionStatement","src":"20485:47:21"},{"nodeType":"YulAssignment","src":"20541:139:21","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20675:4:21"}],"functionName":{"name":"abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20549:124:21"},"nodeType":"YulFunctionCall","src":"20549:131:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20541:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20419:9:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20434:4:21","type":""}],"src":"20268:419:21"},{"body":{"nodeType":"YulBlock","src":"20959:616:21","statements":[{"nodeType":"YulAssignment","src":"20969:27:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20981:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"20992:3:21","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20977:3:21"},"nodeType":"YulFunctionCall","src":"20977:19:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20969:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21050:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21063:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21074:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21059:3:21"},"nodeType":"YulFunctionCall","src":"21059:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21006:43:21"},"nodeType":"YulFunctionCall","src":"21006:71:21"},"nodeType":"YulExpressionStatement","src":"21006:71:21"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21131:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21144:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21155:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21140:3:21"},"nodeType":"YulFunctionCall","src":"21140:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21087:43:21"},"nodeType":"YulFunctionCall","src":"21087:72:21"},"nodeType":"YulExpressionStatement","src":"21087:72:21"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21213:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21226:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21237:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21222:3:21"},"nodeType":"YulFunctionCall","src":"21222:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21169:43:21"},"nodeType":"YulFunctionCall","src":"21169:72:21"},"nodeType":"YulExpressionStatement","src":"21169:72:21"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21295:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21308:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21319:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21304:3:21"},"nodeType":"YulFunctionCall","src":"21304:18:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21251:43:21"},"nodeType":"YulFunctionCall","src":"21251:72:21"},"nodeType":"YulExpressionStatement","src":"21251:72:21"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21377:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21390:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21401:3:21","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21386:3:21"},"nodeType":"YulFunctionCall","src":"21386:19:21"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21333:43:21"},"nodeType":"YulFunctionCall","src":"21333:73:21"},"nodeType":"YulExpressionStatement","src":"21333:73:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21427:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"21438:3:21","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21423:3:21"},"nodeType":"YulFunctionCall","src":"21423:19:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21448:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"21454:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21444:3:21"},"nodeType":"YulFunctionCall","src":"21444:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21416:6:21"},"nodeType":"YulFunctionCall","src":"21416:49:21"},"nodeType":"YulExpressionStatement","src":"21416:49:21"},{"nodeType":"YulAssignment","src":"21474:94:21","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"21546:6:21"},{"name":"value6","nodeType":"YulIdentifier","src":"21554:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"21563:4:21"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21482:63:21"},"nodeType":"YulFunctionCall","src":"21482:86:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21474:4:21"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20883:9:21","type":""},{"name":"value6","nodeType":"YulTypedName","src":"20895:6:21","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20903:6:21","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20911:6:21","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20919:6:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20927:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20935:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20943:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20954:4:21","type":""}],"src":"20693:882:21"},{"body":{"nodeType":"YulBlock","src":"21639:40:21","statements":[{"nodeType":"YulAssignment","src":"21650:22:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21666:5:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21660:5:21"},"nodeType":"YulFunctionCall","src":"21660:12:21"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21650:6:21"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21622:5:21","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21632:6:21","type":""}],"src":"21581:98:21"},{"body":{"nodeType":"YulBlock","src":"21775:270:21","statements":[{"nodeType":"YulVariableDeclaration","src":"21785:52:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21831:5:21"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21799:31:21"},"nodeType":"YulFunctionCall","src":"21799:38:21"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21789:6:21","type":""}]},{"nodeType":"YulAssignment","src":"21846:77:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21911:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"21916:6:21"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21853:57:21"},"nodeType":"YulFunctionCall","src":"21853:70:21"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21846:3:21"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21958:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"21965:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21954:3:21"},"nodeType":"YulFunctionCall","src":"21954:16:21"},{"name":"pos","nodeType":"YulIdentifier","src":"21972:3:21"},{"name":"length","nodeType":"YulIdentifier","src":"21977:6:21"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21932:21:21"},"nodeType":"YulFunctionCall","src":"21932:52:21"},"nodeType":"YulExpressionStatement","src":"21932:52:21"},{"nodeType":"YulAssignment","src":"21993:46:21","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22004:3:21"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22031:6:21"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22009:21:21"},"nodeType":"YulFunctionCall","src":"22009:29:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22000:3:21"},"nodeType":"YulFunctionCall","src":"22000:39:21"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21993:3:21"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21756:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21763:3:21","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21771:3:21","type":""}],"src":"21685:360:21"},{"body":{"nodeType":"YulBlock","src":"22114:52:21","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22131:3:21"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22153:5:21"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"22136:16:21"},"nodeType":"YulFunctionCall","src":"22136:23:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22124:6:21"},"nodeType":"YulFunctionCall","src":"22124:36:21"},"nodeType":"YulExpressionStatement","src":"22124:36:21"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22102:5:21","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22109:3:21","type":""}],"src":"22051:115:21"},{"body":{"nodeType":"YulBlock","src":"22342:355:21","statements":[{"nodeType":"YulAssignment","src":"22352:26:21","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22364:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22375:2:21","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22360:3:21"},"nodeType":"YulFunctionCall","src":"22360:18:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22352:4:21"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22432:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22445:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22456:1:21","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22441:3:21"},"nodeType":"YulFunctionCall","src":"22441:17:21"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22388:43:21"},"nodeType":"YulFunctionCall","src":"22388:71:21"},"nodeType":"YulExpressionStatement","src":"22388:71:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22480:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22491:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22476:3:21"},"nodeType":"YulFunctionCall","src":"22476:18:21"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22500:4:21"},{"name":"headStart","nodeType":"YulIdentifier","src":"22506:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22496:3:21"},"nodeType":"YulFunctionCall","src":"22496:20:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22469:6:21"},"nodeType":"YulFunctionCall","src":"22469:48:21"},"nodeType":"YulExpressionStatement","src":"22469:48:21"},{"nodeType":"YulAssignment","src":"22526:84:21","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22596:6:21"},{"name":"tail","nodeType":"YulIdentifier","src":"22605:4:21"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22534:61:21"},"nodeType":"YulFunctionCall","src":"22534:76:21"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22526:4:21"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22662:6:21"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22675:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"22686:2:21","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22671:3:21"},"nodeType":"YulFunctionCall","src":"22671:18:21"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"22620:41:21"},"nodeType":"YulFunctionCall","src":"22620:70:21"},"nodeType":"YulExpressionStatement","src":"22620:70:21"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22298:9:21","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22310:6:21","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22318:6:21","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22326:6:21","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22337:4:21","type":""}],"src":"22172:525:21"},{"body":{"nodeType":"YulBlock","src":"22731:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22748:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22751:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22741:6:21"},"nodeType":"YulFunctionCall","src":"22741:88:21"},"nodeType":"YulExpressionStatement","src":"22741:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22845:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22848:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22838:6:21"},"nodeType":"YulFunctionCall","src":"22838:15:21"},"nodeType":"YulExpressionStatement","src":"22838:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22869:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22872:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22862:6:21"},"nodeType":"YulFunctionCall","src":"22862:15:21"},"nodeType":"YulExpressionStatement","src":"22862:15:21"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22703:180:21"},{"body":{"nodeType":"YulBlock","src":"22932:190:21","statements":[{"nodeType":"YulAssignment","src":"22942:33:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22969:5:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22951:17:21"},"nodeType":"YulFunctionCall","src":"22951:24:21"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22942:5:21"}]},{"body":{"nodeType":"YulBlock","src":"23065:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23067:16:21"},"nodeType":"YulFunctionCall","src":"23067:18:21"},"nodeType":"YulExpressionStatement","src":"23067:18:21"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22990:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"22997:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"22987:2:21"},"nodeType":"YulFunctionCall","src":"22987:77:21"},"nodeType":"YulIf","src":"22984:103:21"},{"nodeType":"YulAssignment","src":"23096:20:21","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23107:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"23114:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23103:3:21"},"nodeType":"YulFunctionCall","src":"23103:13:21"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23096:3:21"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22918:5:21","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"22928:3:21","type":""}],"src":"22889:233:21"},{"body":{"nodeType":"YulBlock","src":"23156:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23173:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23176:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23166:6:21"},"nodeType":"YulFunctionCall","src":"23166:88:21"},"nodeType":"YulExpressionStatement","src":"23166:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23270:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23273:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23263:6:21"},"nodeType":"YulFunctionCall","src":"23263:15:21"},"nodeType":"YulExpressionStatement","src":"23263:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23294:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23297:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23287:6:21"},"nodeType":"YulFunctionCall","src":"23287:15:21"},"nodeType":"YulExpressionStatement","src":"23287:15:21"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"23128:180:21"},{"body":{"nodeType":"YulBlock","src":"23356:143:21","statements":[{"nodeType":"YulAssignment","src":"23366:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23389:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23371:17:21"},"nodeType":"YulFunctionCall","src":"23371:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23366:1:21"}]},{"nodeType":"YulAssignment","src":"23400:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23423:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23405:17:21"},"nodeType":"YulFunctionCall","src":"23405:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23400:1:21"}]},{"body":{"nodeType":"YulBlock","src":"23447:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"23449:16:21"},"nodeType":"YulFunctionCall","src":"23449:18:21"},"nodeType":"YulExpressionStatement","src":"23449:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23444:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"23437:6:21"},"nodeType":"YulFunctionCall","src":"23437:9:21"},"nodeType":"YulIf","src":"23434:35:21"},{"nodeType":"YulAssignment","src":"23479:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23488:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23491:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"23484:3:21"},"nodeType":"YulFunctionCall","src":"23484:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"23479:1:21"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23345:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23348:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"23354:1:21","type":""}],"src":"23314:185:21"},{"body":{"nodeType":"YulBlock","src":"23533:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23550:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23553:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23543:6:21"},"nodeType":"YulFunctionCall","src":"23543:88:21"},"nodeType":"YulExpressionStatement","src":"23543:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23647:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23650:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23640:6:21"},"nodeType":"YulFunctionCall","src":"23640:15:21"},"nodeType":"YulExpressionStatement","src":"23640:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23671:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23674:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23664:6:21"},"nodeType":"YulFunctionCall","src":"23664:15:21"},"nodeType":"YulExpressionStatement","src":"23664:15:21"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"23505:180:21"},{"body":{"nodeType":"YulBlock","src":"23736:146:21","statements":[{"nodeType":"YulAssignment","src":"23746:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23769:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23751:17:21"},"nodeType":"YulFunctionCall","src":"23751:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23746:1:21"}]},{"nodeType":"YulAssignment","src":"23780:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23803:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23785:17:21"},"nodeType":"YulFunctionCall","src":"23785:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23780:1:21"}]},{"body":{"nodeType":"YulBlock","src":"23827:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23829:16:21"},"nodeType":"YulFunctionCall","src":"23829:18:21"},"nodeType":"YulExpressionStatement","src":"23829:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23821:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23824:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23818:2:21"},"nodeType":"YulFunctionCall","src":"23818:8:21"},"nodeType":"YulIf","src":"23815:34:21"},{"nodeType":"YulAssignment","src":"23859:17:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23871:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"23874:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23867:3:21"},"nodeType":"YulFunctionCall","src":"23867:9:21"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23859:4:21"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23722:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23725:1:21","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23731:4:21","type":""}],"src":"23691:191:21"},{"body":{"nodeType":"YulBlock","src":"23922:142:21","statements":[{"nodeType":"YulAssignment","src":"23932:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23955:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23937:17:21"},"nodeType":"YulFunctionCall","src":"23937:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23932:1:21"}]},{"nodeType":"YulAssignment","src":"23966:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23989:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23971:17:21"},"nodeType":"YulFunctionCall","src":"23971:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23966:1:21"}]},{"body":{"nodeType":"YulBlock","src":"24013:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"24015:16:21"},"nodeType":"YulFunctionCall","src":"24015:18:21"},"nodeType":"YulExpressionStatement","src":"24015:18:21"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24010:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24003:6:21"},"nodeType":"YulFunctionCall","src":"24003:9:21"},"nodeType":"YulIf","src":"24000:35:21"},{"nodeType":"YulAssignment","src":"24044:14:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24053:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"24056:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"24049:3:21"},"nodeType":"YulFunctionCall","src":"24049:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"24044:1:21"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23911:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"23914:1:21","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"23920:1:21","type":""}],"src":"23888:176:21"},{"body":{"nodeType":"YulBlock","src":"24114:261:21","statements":[{"nodeType":"YulAssignment","src":"24124:25:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24147:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24129:17:21"},"nodeType":"YulFunctionCall","src":"24129:20:21"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24124:1:21"}]},{"nodeType":"YulAssignment","src":"24158:25:21","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24181:1:21"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24163:17:21"},"nodeType":"YulFunctionCall","src":"24163:20:21"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24158:1:21"}]},{"body":{"nodeType":"YulBlock","src":"24321:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24323:16:21"},"nodeType":"YulFunctionCall","src":"24323:18:21"},"nodeType":"YulExpressionStatement","src":"24323:18:21"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24242:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24249:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"24317:1:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24245:3:21"},"nodeType":"YulFunctionCall","src":"24245:74:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24239:2:21"},"nodeType":"YulFunctionCall","src":"24239:81:21"},"nodeType":"YulIf","src":"24236:107:21"},{"nodeType":"YulAssignment","src":"24353:16:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24364:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"24367:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24360:3:21"},"nodeType":"YulFunctionCall","src":"24360:9:21"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"24353:3:21"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24101:1:21","type":""},{"name":"y","nodeType":"YulTypedName","src":"24104:1:21","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24110:3:21","type":""}],"src":"24070:305:21"},{"body":{"nodeType":"YulBlock","src":"24409:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24426:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24429:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24419:6:21"},"nodeType":"YulFunctionCall","src":"24419:88:21"},"nodeType":"YulExpressionStatement","src":"24419:88:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24523:1:21","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24526:4:21","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24516:6:21"},"nodeType":"YulFunctionCall","src":"24516:15:21"},"nodeType":"YulExpressionStatement","src":"24516:15:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24547:1:21","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24550:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24540:6:21"},"nodeType":"YulFunctionCall","src":"24540:15:21"},"nodeType":"YulExpressionStatement","src":"24540:15:21"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"24381:180:21"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_CrossDomainMessenger_$2044_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_CrossDomainMessenger_$2044_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_CrossDomainMessenger_$2044__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_CrossDomainMessenger_$2044_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: account is not ext\")\n\n        mstore(add(memPtr, 32), \"ernally owned\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d3a923eccbf32b3d18d8c9f139f87d6a5238b7a7cbbb6d2cd771b61dd955581_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(memPtr) {\n\n        mstore(add(memPtr, 0), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 1)\n        store_literal_in_memory_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf(pos)\n        end := add(pos, 1)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: function can only \")\n\n        mstore(add(memPtr, 32), \"be called from the other bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 63)\n        store_literal_in_memory_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_df0f13ad04af6d094476535da5a5542b50d43fd989789d5fec09eaccb215a46d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832(memPtr) {\n\n        mstore(add(memPtr, 0), \"L1ERC721Bridge: local token cann\")\n\n        mstore(add(memPtr, 32), \"ot be self\")\n\n    }\n\n    function abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_218d51cceb2e9e86022eea81b17e23e1e964bba3aa5268e422fe8d05e54eb832_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af(memPtr) {\n\n        mstore(add(memPtr, 0), \"L1ERC721Bridge: Token ID is not \")\n\n        mstore(add(memPtr, 32), \"escrowed in the L1 Bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 57)\n        store_literal_in_memory_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bee7d98e66133cf40de344b202cc1df78b20213eed80aaf4210604281fdaa6af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Bridge: nft recipient cann\")\n\n        mstore(add(memPtr, 32), \"ot be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8e162591879310887e00ebb8c0dcee8006715baeadceb4b6960b476abc5a186_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1(memPtr) {\n\n        mstore(add(memPtr, 0), \"L1ERC721Bridge: remote token can\")\n\n        mstore(add(memPtr, 32), \"not be address(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_14e51418e54e820a40fc2643b1167465f7abe28f86e3d4e777c562f03e420dd1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value5, value6,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n}\n","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2055":[{"length":32,"start":535},{"length":32,"start":796},{"length":32,"start":937},{"length":32,"start":1954},{"length":32,"start":2723}],"2058":[{"length":32,"start":882},{"length":32,"start":1918},{"length":32,"start":2128},{"length":32,"start":2783}],"2349":[{"length":32,"start":578}],"2352":[{"length":32,"start":619}],"2355":[{"length":32,"start":660}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c8063761f449311610066578063761f4493146101205780637f46ddb21461013c578063927ede2d1461015a578063aa55745214610178578063c89701a21461019457610093565b80633687011a146100985780633cb747bf146100b457806354fd4d50146100d25780635d93a3fc146100f0575b600080fd5b6100b260048036038101906100ad9190610e7c565b6101b2565b005b6100bc610213565b6040516100c99190610f75565b60405180910390f35b6100da61023b565b6040516100e79190611029565b60405180910390f35b61010a6004803603810190610105919061104b565b6102de565b60405161011791906110b9565b60405180910390f35b61013a600480360381019061013591906110d4565b61031a565b005b61014461077c565b6040516101519190611192565b60405180910390f35b6101626107a0565b60405161016f9190610f75565b60405180910390f35b610192600480360381019061018d91906111ad565b6107c4565b005b61019c61084c565b6040516101a99190611192565b60405180910390f35b6101bb33610874565b156101fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f2906112ce565b60405180910390fd5b61020b8686333388888888610897565b505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60606102667f0000000000000000000000000000000000000000000000000000000000000000610bdd565b61028f7f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6102b87f0000000000000000000000000000000000000000000000000000000000000000610bdd565b6040516020016102ca93929190611376565b604051602081830303815290604052905090565b6031602052826000526040600020602052816000526040600020602052806000526040600020600092509250509054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561044e57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906113d2565b73ffffffffffffffffffffffffffffffffffffffff16145b61048d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048490611471565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16036104fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f290611503565b60405180910390fd5b60011515603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060009054906101000a900460ff161515146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390611595565b60405180910390fd5b6000603160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060006101000a81548160ff0219169083151502179055508673ffffffffffffffffffffffffffffffffffffffff166342842e0e3086866040518463ffffffff1660e01b81526004016106bf939291906115c4565b600060405180830381600087803b1580156106d957600080fd5b505af11580156106ed573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f1f39bf6707b5d608453e0ae4c067b562bcc4c85c0f562ef5d2c774d2e7f131ac8787878760405161076b9493929190611648565b60405180910390a450505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082a906116fa565b60405180910390fd5b6108438787338888888888610897565b50505050505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd9061178c565b60405180910390fd5b600063761f449360e01b888a898989888860405160240161092d97969594939291906117ac565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506001603160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600087815260200190815260200160002060006101000a81548160ff0219169083151502179055508873ffffffffffffffffffffffffffffffffffffffff166323b872dd8830886040518463ffffffff1660e01b8152600401610a6f939291906115c4565b600060405180830381600087803b158015610a8957600080fd5b505af1158015610a9d573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633dbb202b7f000000000000000000000000000000000000000000000000000000000000000083876040518463ffffffff1660e01b8152600401610b1e93929190611869565b600060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b505050508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fb7460e2a880f256ebef3406116ff3eee0cee51ebccdc2a40698f87ebb2e9c1a589898888604051610bca9493929190611648565b60405180910390a4505050505050505050565b606060008203610c24576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050610d38565b600082905060005b60008214610c56578080610c3f906118d6565b915050600a82610c4f919061194d565b9150610c2c565b60008167ffffffffffffffff811115610c7257610c7161197e565b5b6040519080825280601f01601f191660200182016040528015610ca45781602001600182028036833780820191505090505b5090505b60008514610d3157600182610cbd91906119ad565b9150600a85610ccc91906119e1565b6030610cd89190611a12565b60f81b818381518110610cee57610ced611a68565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85610d2a919061194d565b9450610ca8565b8093505050505b919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d7282610d47565b9050919050565b610d8281610d67565b8114610d8d57600080fd5b50565b600081359050610d9f81610d79565b92915050565b6000819050919050565b610db881610da5565b8114610dc357600080fd5b50565b600081359050610dd581610daf565b92915050565b600063ffffffff82169050919050565b610df481610ddb565b8114610dff57600080fd5b50565b600081359050610e1181610deb565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610e3c57610e3b610e17565b5b8235905067ffffffffffffffff811115610e5957610e58610e1c565b5b602083019150836001820283011115610e7557610e74610e21565b5b9250929050565b60008060008060008060a08789031215610e9957610e98610d3d565b5b6000610ea789828a01610d90565b9650506020610eb889828a01610d90565b9550506040610ec989828a01610dc6565b9450506060610eda89828a01610e02565b935050608087013567ffffffffffffffff811115610efb57610efa610d42565b5b610f0789828a01610e26565b92509250509295509295509295565b6000819050919050565b6000610f3b610f36610f3184610d47565b610f16565b610d47565b9050919050565b6000610f4d82610f20565b9050919050565b6000610f5f82610f42565b9050919050565b610f6f81610f54565b82525050565b6000602082019050610f8a6000830184610f66565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fca578082015181840152602081019050610faf565b83811115610fd9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ffb82610f90565b6110058185610f9b565b9350611015818560208601610fac565b61101e81610fdf565b840191505092915050565b600060208201905081810360008301526110438184610ff0565b905092915050565b60008060006060848603121561106457611063610d3d565b5b600061107286828701610d90565b935050602061108386828701610d90565b925050604061109486828701610dc6565b9150509250925092565b60008115159050919050565b6110b38161109e565b82525050565b60006020820190506110ce60008301846110aa565b92915050565b600080600080600080600060c0888a0312156110f3576110f2610d3d565b5b60006111018a828b01610d90565b97505060206111128a828b01610d90565b96505060406111238a828b01610d90565b95505060606111348a828b01610d90565b94505060806111458a828b01610dc6565b93505060a088013567ffffffffffffffff81111561116657611165610d42565b5b6111728a828b01610e26565b925092505092959891949750929550565b61118c81610d67565b82525050565b60006020820190506111a76000830184611183565b92915050565b600080600080600080600060c0888a0312156111cc576111cb610d3d565b5b60006111da8a828b01610d90565b97505060206111eb8a828b01610d90565b96505060406111fc8a828b01610d90565b955050606061120d8a828b01610dc6565b945050608061121e8a828b01610e02565b93505060a088013567ffffffffffffffff81111561123f5761123e610d42565b5b61124b8a828b01610e26565b925092505092959891949750929550565b7f4552433732314272696467653a206163636f756e74206973206e6f742065787460008201527f65726e616c6c79206f776e656400000000000000000000000000000000000000602082015250565b60006112b8602d83610f9b565b91506112c38261125c565b604082019050919050565b600060208201905081810360008301526112e7816112ab565b9050919050565b600081905092915050565b600061130482610f90565b61130e81856112ee565b935061131e818560208601610fac565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b60006113606001836112ee565b915061136b8261132a565b600182019050919050565b600061138282866112f9565b915061138d82611353565b915061139982856112f9565b91506113a482611353565b91506113b082846112f9565b9150819050949350505050565b6000815190506113cc81610d79565b92915050565b6000602082840312156113e8576113e7610d3d565b5b60006113f6848285016113bd565b91505092915050565b7f4552433732314272696467653a2066756e6374696f6e2063616e206f6e6c792060008201527f62652063616c6c65642066726f6d20746865206f746865722062726964676500602082015250565b600061145b603f83610f9b565b9150611466826113ff565b604082019050919050565b6000602082019050818103600083015261148a8161144e565b9050919050565b7f4c314552433732314272696467653a206c6f63616c20746f6b656e2063616e6e60008201527f6f742062652073656c6600000000000000000000000000000000000000000000602082015250565b60006114ed602a83610f9b565b91506114f882611491565b604082019050919050565b6000602082019050818103600083015261151c816114e0565b9050919050565b7f4c314552433732314272696467653a20546f6b656e204944206973206e6f742060008201527f657363726f77656420696e20746865204c312042726964676500000000000000602082015250565b600061157f603983610f9b565b915061158a82611523565b604082019050919050565b600060208201905081810360008301526115ae81611572565b9050919050565b6115be81610da5565b82525050565b60006060820190506115d96000830186611183565b6115e66020830185611183565b6115f360408301846115b5565b949350505050565b600082825260208201905092915050565b82818337600083830152505050565b600061162783856115fb565b935061163483858461160c565b61163d83610fdf565b840190509392505050565b600060608201905061165d6000830187611183565b61166a60208301866115b5565b818103604083015261167d81848661161b565b905095945050505050565b7f4552433732314272696467653a206e667420726563697069656e742063616e6e60008201527f6f74206265206164647265737328302900000000000000000000000000000000602082015250565b60006116e4603083610f9b565b91506116ef82611688565b604082019050919050565b60006020820190508181036000830152611713816116d7565b9050919050565b7f4c314552433732314272696467653a2072656d6f746520746f6b656e2063616e60008201527f6e6f742062652061646472657373283029000000000000000000000000000000602082015250565b6000611776603183610f9b565b91506117818261171a565b604082019050919050565b600060208201905081810360008301526117a581611769565b9050919050565b600060c0820190506117c1600083018a611183565b6117ce6020830189611183565b6117db6040830188611183565b6117e86060830187611183565b6117f560808301866115b5565b81810360a083015261180881848661161b565b905098975050505050505050565b600081519050919050565b600061182c82611816565b61183681856115fb565b9350611846818560208601610fac565b61184f81610fdf565b840191505092915050565b61186381610ddb565b82525050565b600060608201905061187e6000830186611183565b81810360208301526118908185611821565b905061189f604083018461185a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118e182610da5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611913576119126118a7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061195882610da5565b915061196383610da5565b9250826119735761197261191e565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006119b882610da5565b91506119c383610da5565b9250828210156119d6576119d56118a7565b5b828203905092915050565b60006119ec82610da5565b91506119f783610da5565b925082611a0757611a0661191e565b5b828206905092915050565b6000611a1d82610da5565b9150611a2883610da5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a5d57611a5c6118a7565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212201e91fe15eadb6e28b6222585479d9a960bf8cbd5f36fbe082ceee88257cdacd764736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x761F4493 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x761F4493 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x7F46DDB2 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x927EDE2D EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xAA557452 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xC89701A2 EQ PUSH2 0x194 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x3687011A EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x3CB747BF EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0x5D93A3FC EQ PUSH2 0xF0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xE7C JUMP JUMPDEST PUSH2 0x1B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBC PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDA PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x105 SWAP2 SWAP1 PUSH2 0x104B JUMP JUMPDEST PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x10B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x144 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH2 0x7C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19C PUSH2 0x84C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB CALLER PUSH2 0x874 JUMP JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20B DUP7 DUP7 CALLER CALLER DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x266 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x28F PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 PUSH2 0xBDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2CA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x31 PUSH1 0x20 MSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP3 POP SWAP3 POP POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x44E JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x412 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x48D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x484 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F2 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x5DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D3 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x31 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6BF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1F39BF6707B5D608453E0AE4C067B562BCC4C85C0F562EF5D2C774D2E7F131AC DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x76B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82A SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x843 DUP8 DUP8 CALLER DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x897 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x178C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x761F4493 PUSH1 0xE0 SHL DUP9 DUP11 DUP10 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x92D SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0x31 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP9 ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH32 0x0 DUP4 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB1E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB7460E2A880F256EBEF3406116FF3EEE0CEE51EBCCDC2A40698F87EBB2E9C1A5 DUP10 DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xBCA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1648 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0xC56 JUMPI DUP1 DUP1 PUSH2 0xC3F SWAP1 PUSH2 0x18D6 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0xC4F SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP2 POP PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC72 JUMPI PUSH2 0xC71 PUSH2 0x197E JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xCA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0xD31 JUMPI PUSH1 0x1 DUP3 PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0x19AD JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0xCCC SWAP2 SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x30 PUSH2 0xCD8 SWAP2 SWAP1 PUSH2 0x1A12 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCEE JUMPI PUSH2 0xCED PUSH2 0x1A68 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0xD2A SWAP2 SWAP1 PUSH2 0x194D JUMP JUMPDEST SWAP5 POP PUSH2 0xCA8 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD72 DUP3 PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD82 DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP2 EQ PUSH2 0xD8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9F DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB8 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD5 DUP2 PUSH2 0xDAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF4 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP2 EQ PUSH2 0xDFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE11 DUP2 PUSH2 0xDEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE3C JUMPI PUSH2 0xE3B PUSH2 0xE17 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE59 JUMPI PUSH2 0xE58 PUSH2 0xE1C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xE75 JUMPI PUSH2 0xE74 PUSH2 0xE21 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE98 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEA7 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0xEB8 DUP10 DUP3 DUP11 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0xEC9 DUP10 DUP3 DUP11 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0xEDA DUP10 DUP3 DUP11 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEFB JUMPI PUSH2 0xEFA PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0xF07 DUP10 DUP3 DUP11 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3B PUSH2 0xF36 PUSH2 0xF31 DUP5 PUSH2 0xD47 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH2 0xD47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4D DUP3 PUSH2 0xF20 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5F DUP3 PUSH2 0xF42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6F DUP2 PUSH2 0xF54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFCA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFAF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xFD9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFB DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x1005 DUP2 DUP6 PUSH2 0xF9B JUMP JUMPDEST SWAP4 POP PUSH2 0x1015 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x101E DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1043 DUP2 DUP5 PUSH2 0xFF0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1064 JUMPI PUSH2 0x1063 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1072 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1083 DUP7 DUP3 DUP8 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1094 DUP7 DUP3 DUP8 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0x109E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1101 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1112 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1123 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1134 DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1145 DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1166 JUMPI PUSH2 0x1165 PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x1172 DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x118C DUP2 PUSH2 0xD67 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1183 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x11CC JUMPI PUSH2 0x11CB PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11DA DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x11EB DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x11FC DUP11 DUP3 DUP12 ADD PUSH2 0xD90 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x120D DUP11 DUP3 DUP12 ADD PUSH2 0xDC6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x121E DUP11 DUP3 DUP12 ADD PUSH2 0xE02 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x123F JUMPI PUSH2 0x123E PUSH2 0xD42 JUMP JUMPDEST JUMPDEST PUSH2 0x124B DUP11 DUP3 DUP12 ADD PUSH2 0xE26 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206163636F756E74206973206E6F7420657874 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x65726E616C6C79206F776E656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B8 PUSH1 0x2D DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x12C3 DUP3 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E7 DUP2 PUSH2 0x12AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1304 DUP3 PUSH2 0xF90 JUMP JUMPDEST PUSH2 0x130E DUP2 DUP6 PUSH2 0x12EE JUMP JUMPDEST SWAP4 POP PUSH2 0x131E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1360 PUSH1 0x1 DUP4 PUSH2 0x12EE JUMP JUMPDEST SWAP2 POP PUSH2 0x136B DUP3 PUSH2 0x132A JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 DUP3 DUP7 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x1399 DUP3 DUP6 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A4 DUP3 PUSH2 0x1353 JUMP JUMPDEST SWAP2 POP PUSH2 0x13B0 DUP3 DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13CC DUP2 PUSH2 0xD79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E8 JUMPI PUSH2 0x13E7 PUSH2 0xD3D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F6 DUP5 DUP3 DUP6 ADD PUSH2 0x13BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A2066756E6374696F6E2063616E206F6E6C7920 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x62652063616C6C65642066726F6D20746865206F746865722062726964676500 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x145B PUSH1 0x3F DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1466 DUP3 PUSH2 0x13FF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148A DUP2 PUSH2 0x144E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A206C6F63616C20746F6B656E2063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F742062652073656C6600000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14ED PUSH1 0x2A DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x14F8 DUP3 PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151C DUP2 PUSH2 0x14E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A20546F6B656E204944206973206E6F7420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657363726F77656420696E20746865204C312042726964676500000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157F PUSH1 0x39 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x158A DUP3 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15AE DUP2 PUSH2 0x1572 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15BE DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15E6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x15F3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 DUP4 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1634 DUP4 DUP6 DUP5 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x163D DUP4 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x165D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x166A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x167D DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732314272696467653A206E667420726563697069656E742063616E6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206265206164647265737328302900000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E4 PUSH1 0x30 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x16EF DUP3 PUSH2 0x1688 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1713 DUP2 PUSH2 0x16D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C314552433732314272696467653A2072656D6F746520746F6B656E2063616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F742062652061646472657373283029000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1776 PUSH1 0x31 DUP4 PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP PUSH2 0x1781 DUP3 PUSH2 0x171A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A5 DUP2 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x17C1 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17CE PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17DB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17E8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x17F5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x15B5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1808 DUP2 DUP5 DUP7 PUSH2 0x161B JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP3 PUSH2 0x1816 JUMP JUMPDEST PUSH2 0x1836 DUP2 DUP6 PUSH2 0x15FB JUMP JUMPDEST SWAP4 POP PUSH2 0x1846 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFAC JUMP JUMPDEST PUSH2 0x184F DUP2 PUSH2 0xFDF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1863 DUP2 PUSH2 0xDDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x187E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1183 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1890 DUP2 DUP6 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP PUSH2 0x189F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x185A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18E1 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1913 JUMPI PUSH2 0x1912 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1958 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1963 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1973 JUMPI PUSH2 0x1972 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19B8 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19C3 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x19D6 JUMPI PUSH2 0x19D5 PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EC DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F7 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A07 JUMPI PUSH2 0x1A06 PUSH2 0x191E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A1D DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1A5D JUMPI PUSH2 0x1A5C PUSH2 0x18A7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E SWAP2 INVALID ISZERO 0xEA 0xDB PUSH15 0x28B6222585479D9A960BF8CBD5F36F 0xBE ADDMOD 0x2C 0xEE 0xE8 DUP3 JUMPI 0xCD 0xAC 0xD7 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"156:362:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4874:1053:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3145:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1057:372:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:80:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:1102;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;534:37:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;405:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7161:510;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3409:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4874:1053;5627:30;5646:10;5627:18;:30::i;:::-;5626:31;5618:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;5718:202;5753:11;5778:12;5804:10;5828;5852:8;5874:12;5900:10;;5718:21;:202::i;:::-;4874:1053;;;;;;:::o;3145:99::-;3189:20;3228:9;3221:16;;3145:99;:::o;1057:372:11:-;1097:13;1203:31;1220:13;1203:16;:31::i;:::-;1281;1298:13;1281:16;:31::i;:::-;1359;1376:13;1359:16;:31::i;:::-;1165:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1122:300;;1057:372;:::o;820:80:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2027:1102::-;2302:9:9;2280:32;;:10;:32;;;:84;;;;;2352:12;2316:48;;:9;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;2280:84;2259:194;;;;;;;;;;;;:::i;:::-;;;;;;;;;2293:4:0::1;2270:28;;:11;:28;;::::0;2262:83:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2518:4;2469:53;;:8;:21;2478:11;2469:21;;;;;;;;;;;;;;;:35;2491:12;2469:35;;;;;;;;;;;;;;;:45;2505:8;2469:45;;;;;;;;;;;;;;;;;;;;;:53;;;2448:157;;;;;;;;;;;;:::i;:::-;;;;;;;;;2775:5;2727:8;:21;2736:11;2727:21;;;;;;;;;;;;;;;:35;2749:12;2727:35;;;;;;;;;;;;;;;:45;2763:8;2727:45;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2910:11;2902:37;;;2948:4;2955:3;2960:8;2902:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3089:5;3040:82;;3075:12;3040:82;;3062:11;3040:82;;;3096:3;3101:8;3111:10;;3040:82;;;;;;;;;:::i;:::-;;;;;;;;2027:1102:::0;;;;;;;:::o;534:37:9:-;;;:::o;405:47::-;;;:::o;7161:510::-;7403:1;7388:17;;:3;:17;;;7380:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;7469:195;7504:11;7529:12;7555:10;7579:3;7596:8;7618:12;7644:10;;7469:21;:195::i;:::-;7161:510;;;;;;;:::o;3409:91::-;3455:7;3481:12;3474:19;;3409:91;:::o;1175:320:16:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;3183:1060:0:-;3473:1;3449:26;;:12;:26;;;3441:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3619:20;3678:44;;;3736:12;3762:11;3787:5;3806:3;3823:8;3845:10;;3642:223;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3619:246;;3958:4;3910:8;:21;3919:11;3910:21;;;;;;;;;;;;;;;:35;3932:12;3910:35;;;;;;;;;;;;;;;:45;3946:8;3910:45;;;;;;;;;;;;:52;;;;;;;;;;;;;;;;;;3980:11;3972:33;;;4006:5;4021:4;4028:8;3972:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4081:9;:21;;;4103:12;4117:7;4126:12;4081:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:5;4154:82;;4189:12;4154:82;;4176:11;4154:82;;;4210:3;4215:8;4225:10;;4154:82;;;;;;;;;:::i;:::-;;;;;;;;3431:812;3183:1060;;;;;;;;:::o;392:703:17:-;448:13;674:1;665:5;:10;661:51;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;88:117:21:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:93::-;1233:7;1273:10;1266:5;1262:22;1251:33;;1197:93;;;:::o;1296:120::-;1368:23;1385:5;1368:23;:::i;:::-;1361:5;1358:34;1348:62;;1406:1;1403;1396:12;1348:62;1296:120;:::o;1422:137::-;1467:5;1505:6;1492:20;1483:29;;1521:32;1547:5;1521:32;:::i;:::-;1422:137;;;;:::o;1565:117::-;1674:1;1671;1664:12;1688:117;1797:1;1794;1787:12;1811:117;1920:1;1917;1910:12;1947:552;2004:8;2014:6;2064:3;2057:4;2049:6;2045:17;2041:27;2031:122;;2072:79;;:::i;:::-;2031:122;2185:6;2172:20;2162:30;;2215:18;2207:6;2204:30;2201:117;;;2237:79;;:::i;:::-;2201:117;2351:4;2343:6;2339:17;2327:29;;2405:3;2397:4;2389:6;2385:17;2375:8;2371:32;2368:41;2365:128;;;2412:79;;:::i;:::-;2365:128;1947:552;;;;;:::o;2505:1107::-;2610:6;2618;2626;2634;2642;2650;2699:3;2687:9;2678:7;2674:23;2670:33;2667:120;;;2706:79;;:::i;:::-;2667:120;2826:1;2851:53;2896:7;2887:6;2876:9;2872:22;2851:53;:::i;:::-;2841:63;;2797:117;2953:2;2979:53;3024:7;3015:6;3004:9;3000:22;2979:53;:::i;:::-;2969:63;;2924:118;3081:2;3107:53;3152:7;3143:6;3132:9;3128:22;3107:53;:::i;:::-;3097:63;;3052:118;3209:2;3235:52;3279:7;3270:6;3259:9;3255:22;3235:52;:::i;:::-;3225:62;;3180:117;3364:3;3353:9;3349:19;3336:33;3396:18;3388:6;3385:30;3382:117;;;3418:79;;:::i;:::-;3382:117;3531:64;3587:7;3578:6;3567:9;3563:22;3531:64;:::i;:::-;3513:82;;;;3307:298;2505:1107;;;;;;;;:::o;3618:60::-;3646:3;3667:5;3660:12;;3618:60;;;:::o;3684:142::-;3734:9;3767:53;3785:34;3794:24;3812:5;3794:24;:::i;:::-;3785:34;:::i;:::-;3767:53;:::i;:::-;3754:66;;3684:142;;;:::o;3832:126::-;3882:9;3915:37;3946:5;3915:37;:::i;:::-;3902:50;;3832:126;;;:::o;3964:155::-;4043:9;4076:37;4107:5;4076:37;:::i;:::-;4063:50;;3964:155;;;:::o;4125:189::-;4241:66;4301:5;4241:66;:::i;:::-;4236:3;4229:79;4125:189;;:::o;4320:280::-;4442:4;4480:2;4469:9;4465:18;4457:26;;4493:100;4590:1;4579:9;4575:17;4566:6;4493:100;:::i;:::-;4320:280;;;;:::o;4606:99::-;4658:6;4692:5;4686:12;4676:22;;4606:99;;;:::o;4711:169::-;4795:11;4829:6;4824:3;4817:19;4869:4;4864:3;4860:14;4845:29;;4711:169;;;;:::o;4886:307::-;4954:1;4964:113;4978:6;4975:1;4972:13;4964:113;;;5063:1;5058:3;5054:11;5048:18;5044:1;5039:3;5035:11;5028:39;5000:2;4997:1;4993:10;4988:15;;4964:113;;;5095:6;5092:1;5089:13;5086:101;;;5175:1;5166:6;5161:3;5157:16;5150:27;5086:101;4935:258;4886:307;;;:::o;5199:102::-;5240:6;5291:2;5287:7;5282:2;5275:5;5271:14;5267:28;5257:38;;5199:102;;;:::o;5307:364::-;5395:3;5423:39;5456:5;5423:39;:::i;:::-;5478:71;5542:6;5537:3;5478:71;:::i;:::-;5471:78;;5558:52;5603:6;5598:3;5591:4;5584:5;5580:16;5558:52;:::i;:::-;5635:29;5657:6;5635:29;:::i;:::-;5630:3;5626:39;5619:46;;5399:272;5307:364;;;;:::o;5677:313::-;5790:4;5828:2;5817:9;5813:18;5805:26;;5877:9;5871:4;5867:20;5863:1;5852:9;5848:17;5841:47;5905:78;5978:4;5969:6;5905:78;:::i;:::-;5897:86;;5677:313;;;;:::o;5996:619::-;6073:6;6081;6089;6138:2;6126:9;6117:7;6113:23;6109:32;6106:119;;;6144:79;;:::i;:::-;6106:119;6264:1;6289:53;6334:7;6325:6;6314:9;6310:22;6289:53;:::i;:::-;6279:63;;6235:117;6391:2;6417:53;6462:7;6453:6;6442:9;6438:22;6417:53;:::i;:::-;6407:63;;6362:118;6519:2;6545:53;6590:7;6581:6;6570:9;6566:22;6545:53;:::i;:::-;6535:63;;6490:118;5996:619;;;;;:::o;6621:90::-;6655:7;6698:5;6691:13;6684:21;6673:32;;6621:90;;;:::o;6717:109::-;6798:21;6813:5;6798:21;:::i;:::-;6793:3;6786:34;6717:109;;:::o;6832:210::-;6919:4;6957:2;6946:9;6942:18;6934:26;;6970:65;7032:1;7021:9;7017:17;7008:6;6970:65;:::i;:::-;6832:210;;;;:::o;7048:1255::-;7163:6;7171;7179;7187;7195;7203;7211;7260:3;7248:9;7239:7;7235:23;7231:33;7228:120;;;7267:79;;:::i;:::-;7228:120;7387:1;7412:53;7457:7;7448:6;7437:9;7433:22;7412:53;:::i;:::-;7402:63;;7358:117;7514:2;7540:53;7585:7;7576:6;7565:9;7561:22;7540:53;:::i;:::-;7530:63;;7485:118;7642:2;7668:53;7713:7;7704:6;7693:9;7689:22;7668:53;:::i;:::-;7658:63;;7613:118;7770:2;7796:53;7841:7;7832:6;7821:9;7817:22;7796:53;:::i;:::-;7786:63;;7741:118;7898:3;7925:53;7970:7;7961:6;7950:9;7946:22;7925:53;:::i;:::-;7915:63;;7869:119;8055:3;8044:9;8040:19;8027:33;8087:18;8079:6;8076:30;8073:117;;;8109:79;;:::i;:::-;8073:117;8222:64;8278:7;8269:6;8258:9;8254:22;8222:64;:::i;:::-;8204:82;;;;7998:298;7048:1255;;;;;;;;;;:::o;8309:118::-;8396:24;8414:5;8396:24;:::i;:::-;8391:3;8384:37;8309:118;;:::o;8433:222::-;8526:4;8564:2;8553:9;8549:18;8541:26;;8577:71;8645:1;8634:9;8630:17;8621:6;8577:71;:::i;:::-;8433:222;;;;:::o;8661:1253::-;8775:6;8783;8791;8799;8807;8815;8823;8872:3;8860:9;8851:7;8847:23;8843:33;8840:120;;;8879:79;;:::i;:::-;8840:120;8999:1;9024:53;9069:7;9060:6;9049:9;9045:22;9024:53;:::i;:::-;9014:63;;8970:117;9126:2;9152:53;9197:7;9188:6;9177:9;9173:22;9152:53;:::i;:::-;9142:63;;9097:118;9254:2;9280:53;9325:7;9316:6;9305:9;9301:22;9280:53;:::i;:::-;9270:63;;9225:118;9382:2;9408:53;9453:7;9444:6;9433:9;9429:22;9408:53;:::i;:::-;9398:63;;9353:118;9510:3;9537:52;9581:7;9572:6;9561:9;9557:22;9537:52;:::i;:::-;9527:62;;9481:118;9666:3;9655:9;9651:19;9638:33;9698:18;9690:6;9687:30;9684:117;;;9720:79;;:::i;:::-;9684:117;9833:64;9889:7;9880:6;9869:9;9865:22;9833:64;:::i;:::-;9815:82;;;;9609:298;8661:1253;;;;;;;;;;:::o;9920:232::-;10060:34;10056:1;10048:6;10044:14;10037:58;10129:15;10124:2;10116:6;10112:15;10105:40;9920:232;:::o;10158:366::-;10300:3;10321:67;10385:2;10380:3;10321:67;:::i;:::-;10314:74;;10397:93;10486:3;10397:93;:::i;:::-;10515:2;10510:3;10506:12;10499:19;;10158:366;;;:::o;10530:419::-;10696:4;10734:2;10723:9;10719:18;10711:26;;10783:9;10777:4;10773:20;10769:1;10758:9;10754:17;10747:47;10811:131;10937:4;10811:131;:::i;:::-;10803:139;;10530:419;;;:::o;10955:148::-;11057:11;11094:3;11079:18;;10955:148;;;;:::o;11109:377::-;11215:3;11243:39;11276:5;11243:39;:::i;:::-;11298:89;11380:6;11375:3;11298:89;:::i;:::-;11291:96;;11396:52;11441:6;11436:3;11429:4;11422:5;11418:16;11396:52;:::i;:::-;11473:6;11468:3;11464:16;11457:23;;11219:267;11109:377;;;;:::o;11492:151::-;11632:3;11628:1;11620:6;11616:14;11609:27;11492:151;:::o;11649:400::-;11809:3;11830:84;11912:1;11907:3;11830:84;:::i;:::-;11823:91;;11923:93;12012:3;11923:93;:::i;:::-;12041:1;12036:3;12032:11;12025:18;;11649:400;;;:::o;12055:1127::-;12485:3;12507:95;12598:3;12589:6;12507:95;:::i;:::-;12500:102;;12619:148;12763:3;12619:148;:::i;:::-;12612:155;;12784:95;12875:3;12866:6;12784:95;:::i;:::-;12777:102;;12896:148;13040:3;12896:148;:::i;:::-;12889:155;;13061:95;13152:3;13143:6;13061:95;:::i;:::-;13054:102;;13173:3;13166:10;;12055:1127;;;;;;:::o;13188:143::-;13245:5;13276:6;13270:13;13261:22;;13292:33;13319:5;13292:33;:::i;:::-;13188:143;;;;:::o;13337:351::-;13407:6;13456:2;13444:9;13435:7;13431:23;13427:32;13424:119;;;13462:79;;:::i;:::-;13424:119;13582:1;13607:64;13663:7;13654:6;13643:9;13639:22;13607:64;:::i;:::-;13597:74;;13553:128;13337:351;;;;:::o;13694:250::-;13834:34;13830:1;13822:6;13818:14;13811:58;13903:33;13898:2;13890:6;13886:15;13879:58;13694:250;:::o;13950:366::-;14092:3;14113:67;14177:2;14172:3;14113:67;:::i;:::-;14106:74;;14189:93;14278:3;14189:93;:::i;:::-;14307:2;14302:3;14298:12;14291:19;;13950:366;;;:::o;14322:419::-;14488:4;14526:2;14515:9;14511:18;14503:26;;14575:9;14569:4;14565:20;14561:1;14550:9;14546:17;14539:47;14603:131;14729:4;14603:131;:::i;:::-;14595:139;;14322:419;;;:::o;14747:229::-;14887:34;14883:1;14875:6;14871:14;14864:58;14956:12;14951:2;14943:6;14939:15;14932:37;14747:229;:::o;14982:366::-;15124:3;15145:67;15209:2;15204:3;15145:67;:::i;:::-;15138:74;;15221:93;15310:3;15221:93;:::i;:::-;15339:2;15334:3;15330:12;15323:19;;14982:366;;;:::o;15354:419::-;15520:4;15558:2;15547:9;15543:18;15535:26;;15607:9;15601:4;15597:20;15593:1;15582:9;15578:17;15571:47;15635:131;15761:4;15635:131;:::i;:::-;15627:139;;15354:419;;;:::o;15779:244::-;15919:34;15915:1;15907:6;15903:14;15896:58;15988:27;15983:2;15975:6;15971:15;15964:52;15779:244;:::o;16029:366::-;16171:3;16192:67;16256:2;16251:3;16192:67;:::i;:::-;16185:74;;16268:93;16357:3;16268:93;:::i;:::-;16386:2;16381:3;16377:12;16370:19;;16029:366;;;:::o;16401:419::-;16567:4;16605:2;16594:9;16590:18;16582:26;;16654:9;16648:4;16644:20;16640:1;16629:9;16625:17;16618:47;16682:131;16808:4;16682:131;:::i;:::-;16674:139;;16401:419;;;:::o;16826:118::-;16913:24;16931:5;16913:24;:::i;:::-;16908:3;16901:37;16826:118;;:::o;16950:442::-;17099:4;17137:2;17126:9;17122:18;17114:26;;17150:71;17218:1;17207:9;17203:17;17194:6;17150:71;:::i;:::-;17231:72;17299:2;17288:9;17284:18;17275:6;17231:72;:::i;:::-;17313;17381:2;17370:9;17366:18;17357:6;17313:72;:::i;:::-;16950:442;;;;;;:::o;17398:168::-;17481:11;17515:6;17510:3;17503:19;17555:4;17550:3;17546:14;17531:29;;17398:168;;;;:::o;17572:154::-;17656:6;17651:3;17646;17633:30;17718:1;17709:6;17704:3;17700:16;17693:27;17572:154;;;:::o;17754:301::-;17850:3;17871:70;17934:6;17929:3;17871:70;:::i;:::-;17864:77;;17951:43;17987:6;17982:3;17975:5;17951:43;:::i;:::-;18019:29;18041:6;18019:29;:::i;:::-;18014:3;18010:39;18003:46;;17754:301;;;;;:::o;18061:549::-;18238:4;18276:2;18265:9;18261:18;18253:26;;18289:71;18357:1;18346:9;18342:17;18333:6;18289:71;:::i;:::-;18370:72;18438:2;18427:9;18423:18;18414:6;18370:72;:::i;:::-;18489:9;18483:4;18479:20;18474:2;18463:9;18459:18;18452:48;18517:86;18598:4;18589:6;18581;18517:86;:::i;:::-;18509:94;;18061:549;;;;;;;:::o;18616:235::-;18756:34;18752:1;18744:6;18740:14;18733:58;18825:18;18820:2;18812:6;18808:15;18801:43;18616:235;:::o;18857:366::-;18999:3;19020:67;19084:2;19079:3;19020:67;:::i;:::-;19013:74;;19096:93;19185:3;19096:93;:::i;:::-;19214:2;19209:3;19205:12;19198:19;;18857:366;;;:::o;19229:419::-;19395:4;19433:2;19422:9;19418:18;19410:26;;19482:9;19476:4;19472:20;19468:1;19457:9;19453:17;19446:47;19510:131;19636:4;19510:131;:::i;:::-;19502:139;;19229:419;;;:::o;19654:236::-;19794:34;19790:1;19782:6;19778:14;19771:58;19863:19;19858:2;19850:6;19846:15;19839:44;19654:236;:::o;19896:366::-;20038:3;20059:67;20123:2;20118:3;20059:67;:::i;:::-;20052:74;;20135:93;20224:3;20135:93;:::i;:::-;20253:2;20248:3;20244:12;20237:19;;19896:366;;;:::o;20268:419::-;20434:4;20472:2;20461:9;20457:18;20449:26;;20521:9;20515:4;20511:20;20507:1;20496:9;20492:17;20485:47;20549:131;20675:4;20549:131;:::i;:::-;20541:139;;20268:419;;;:::o;20693:882::-;20954:4;20992:3;20981:9;20977:19;20969:27;;21006:71;21074:1;21063:9;21059:17;21050:6;21006:71;:::i;:::-;21087:72;21155:2;21144:9;21140:18;21131:6;21087:72;:::i;:::-;21169;21237:2;21226:9;21222:18;21213:6;21169:72;:::i;:::-;21251;21319:2;21308:9;21304:18;21295:6;21251:72;:::i;:::-;21333:73;21401:3;21390:9;21386:19;21377:6;21333:73;:::i;:::-;21454:9;21448:4;21444:20;21438:3;21427:9;21423:19;21416:49;21482:86;21563:4;21554:6;21546;21482:86;:::i;:::-;21474:94;;20693:882;;;;;;;;;;:::o;21581:98::-;21632:6;21666:5;21660:12;21650:22;;21581:98;;;:::o;21685:360::-;21771:3;21799:38;21831:5;21799:38;:::i;:::-;21853:70;21916:6;21911:3;21853:70;:::i;:::-;21846:77;;21932:52;21977:6;21972:3;21965:4;21958:5;21954:16;21932:52;:::i;:::-;22009:29;22031:6;22009:29;:::i;:::-;22004:3;22000:39;21993:46;;21775:270;21685:360;;;;:::o;22051:115::-;22136:23;22153:5;22136:23;:::i;:::-;22131:3;22124:36;22051:115;;:::o;22172:525::-;22337:4;22375:2;22364:9;22360:18;22352:26;;22388:71;22456:1;22445:9;22441:17;22432:6;22388:71;:::i;:::-;22506:9;22500:4;22496:20;22491:2;22480:9;22476:18;22469:48;22534:76;22605:4;22596:6;22534:76;:::i;:::-;22526:84;;22620:70;22686:2;22675:9;22671:18;22662:6;22620:70;:::i;:::-;22172:525;;;;;;:::o;22703:180::-;22751:77;22748:1;22741:88;22848:4;22845:1;22838:15;22872:4;22869:1;22862:15;22889:233;22928:3;22951:24;22969:5;22951:24;:::i;:::-;22942:33;;22997:66;22990:5;22987:77;22984:103;;23067:18;;:::i;:::-;22984:103;23114:1;23107:5;23103:13;23096:20;;22889:233;;;:::o;23128:180::-;23176:77;23173:1;23166:88;23273:4;23270:1;23263:15;23297:4;23294:1;23287:15;23314:185;23354:1;23371:20;23389:1;23371:20;:::i;:::-;23366:25;;23405:20;23423:1;23405:20;:::i;:::-;23400:25;;23444:1;23434:35;;23449:18;;:::i;:::-;23434:35;23491:1;23488;23484:9;23479:14;;23314:185;;;;:::o;23505:180::-;23553:77;23550:1;23543:88;23650:4;23647:1;23640:15;23674:4;23671:1;23664:15;23691:191;23731:4;23751:20;23769:1;23751:20;:::i;:::-;23746:25;;23785:20;23803:1;23785:20;:::i;:::-;23780:25;;23824:1;23821;23818:8;23815:34;;;23829:18;;:::i;:::-;23815:34;23874:1;23871;23867:9;23859:17;;23691:191;;;;:::o;23888:176::-;23920:1;23937:20;23955:1;23937:20;:::i;:::-;23932:25;;23971:20;23989:1;23971:20;:::i;:::-;23966:25;;24010:1;24000:35;;24015:18;;:::i;:::-;24000:35;24056:1;24053;24049:9;24044:14;;23888:176;;;;:::o;24070:305::-;24110:3;24129:20;24147:1;24129:20;:::i;:::-;24124:25;;24163:20;24181:1;24163:20;:::i;:::-;24158:25;;24317:1;24249:66;24245:74;24242:1;24239:81;24236:107;;;24323:18;;:::i;:::-;24236:107;24367:1;24364;24360:9;24353:16;;24070:305;;;;:::o;24381:180::-;24429:77;24426:1;24419:88;24526:4;24523:1;24516:15;24550:4;24547:1;24540:15"},"methodIdentifiers":{"MESSENGER()":"927ede2d","OTHER_BRIDGE()":"7f46ddb2","bridgeERC721(address,address,uint256,uint32,bytes)":"3687011a","bridgeERC721To(address,address,address,uint256,uint32,bytes)":"aa557452","deposits(address,address,uint256)":"5d93a3fc","finalizeBridgeERC721(address,address,address,address,uint256,bytes)":"761f4493","messenger()":"3cb747bf","otherBridge()":"c89701a2","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_otherBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC721BridgeInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC721To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to the other chain. Data supplied here will not                     be used to execute any code on the other chain and is only emitted as                     extra data for the convenience of off-chain tooling.\",\"_localToken\":\"Address of the ERC721 on this domain.\",\"_minGasLimit\":\"Minimum gas limit for the bridge message on the other domain.\",\"_remoteToken\":\"Address of the ERC721 on the remote domain.\",\"_to\":\"Address to receive the token on the other domain.\",\"_tokenId\":\"Token ID to bridge.\"}},\"constructor\":{\"custom:semver\":\"1.0.0\",\"params\":{\"_messenger\":\"Address of the CrossDomainMessenger on this network.\",\"_otherBridge\":\"Address of the ERC721 bridge on the other network.\"}},\"finalizeBridgeERC721(address,address,address,address,uint256,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to L2. Data supplied here will not be used to                     execute any code on L2 and is only emitted as extra data for the                     convenience of off-chain tooling.\",\"_from\":\"Address that triggered the bridge on the other domain.\",\"_localToken\":\"Address of the ERC721 token on this domain.\",\"_remoteToken\":\"Address of the ERC721 token on the other domain.\",\"_to\":\"Address to receive the token on this domain.\",\"_tokenId\":\"ID of the token being deposited.\"}},\"messenger()\":{\"custom:legacy\":\"@notice Legacy getter for messenger contract.\",\"returns\":{\"_0\":\"Messenger contract on this domain.\"}},\"otherBridge()\":{\"custom:legacy\":\"@notice Legacy getter for other bridge address.\",\"returns\":{\"_0\":\"Address of the bridge on the other network.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ERC721BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge from the other network is finalized.\"},\"ERC721BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC721 bridge to the other network is initiated.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Address of the bridge on the other network.\"},\"bridgeERC721(address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to the caller's account on the other chain. Note that         this function can only be called by EOAs. Smart contract wallets should use the         `bridgeERC721To` function after ensuring that the recipient address on the remote         chain exists. Also note that the current owner of the token on this chain must         approve this contract to operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"bridgeERC721To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a bridge of an NFT to some recipient's account on the other chain. Note         that the current owner of the token on this chain must approve this contract to         operate the NFT before it can be bridged.         **WARNING**: Do not bridge an ERC721 that was originally deployed on Optimism. This         bridge only supports ERC721s originally deployed on Ethereum. Users will need to         wait for the one-week challenge period to elapse before their Optimism-native NFT         can be refunded on L2.\"},\"deposits(address,address,uint256)\":{\"notice\":\"Mapping of L1 token to L2 token to ID to boolean, indicating if the given L1 token         by ID was deposited for a given L2 token.\"},\"finalizeBridgeERC721(address,address,address,address,uint256,bytes)\":{\"notice\":\"Completes an ERC721 bridge from the other domain and sends the ERC721 token to the         recipient on this domain.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L1Bridge.sol\":\"L1Bridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/L1/L1ERC721Bridge.sol\":{\"keccak256\":\"0xf66d53c1bc80c9a204ce8752f26a6fdaa247f6fd80438020b889e0f1c8079b75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab9be6161db4e3e0e598cdaf5e8f9143b4f4bfdbc65e335c5d948b00dc4a1cb\",\"dweb:/ipfs/QmaaLcDguxg1XyCNmbtKMkuTi4ngK8qCUFb1NkurJZGAhZ\"]},\"@eth-optimism/contracts-bedrock/contracts/L2/L2ERC721Bridge.sol\":{\"keccak256\":\"0xc29eaa8bbc402ff540059207a2133bb020b26ee57e36c801fa06aff245ef30cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://589c633276ad0b7bb0f31331718bcc5f48d54cf1ae28ab0f73484013be0273c7\",\"dweb:/ipfs/QmQbiwCuLQoFW7R4GKxtU3V6C1d42YzsHCQQSDobnwUvtu\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/ERC721Bridge.sol\":{\"keccak256\":\"0xb47389fbec63e85b2d04fce538fe1b8e048278d631729458b70e32a31971c092\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7133f38e3d8d1911738057b1d4523989abd7cd029797b1d3b59cda29d42e9704\",\"dweb:/ipfs/QmUN31CLssESHrBwWA3WYP5L2xESo9Q4aq2Exua1e8UtUW\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/IOptimismMintableERC721.sol\":{\"keccak256\":\"0xf1a3dd4452df8882a65a31c5e2e8de7872b08cf078be7a5a7da51e6f75c53ad3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b09a2560cae35ca4789fe1ff5edb2bae9fa7dcda115a55f7ccdcc974a2e37526\",\"dweb:/ipfs/QmPQeTvrJ4SJpng5VGZNMf1u85NWxrdus4gGn8xYkHddKM\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/L1Bridge.sol\":{\"keccak256\":\"0x93e462f2a4d556c37c5ceefa169dcecbdd74df9588e86233ca38b409c97fc14a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0460dee956ab0ff7d8649090cc8b9038a99337de98d118dcdf86f7cb09fb42f\",\"dweb:/ipfs/QmZrbz93ZQ2jHnQucuBmtDK5MhuuHhBNK2HgceXoQouMSk\"]}},\"version\":1}"}}}}}