{"id":"a0e1e8edf1e374d04c4dfcce99d20d52","_format":"hh-sol-build-info-1","solcVersion":"0.8.15","solcLongVersion":"0.8.15+commit.e14f2714","input":{"language":"Solidity","sources":{"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title Constants\n * @notice Constants is a library for storing constants. Simple! Don't put everything in here, just\n *         the stuff used in multiple contracts. Constants that only apply to a single contract\n *         should be defined in that contract instead.\n */\nlibrary Constants {\n    /**\n     * @notice Special address to be used as the tx origin for gas estimation calls in the\n     *         OptimismPortal and CrossDomainMessenger calls. You only need to use this address if\n     *         the minimum gas limit specified by the user is not actually enough to execute the\n     *         given message and you're attempting to estimate the actual necessary gas limit. We\n     *         use address(1) because it's the ecrecover precompile and therefore guaranteed to\n     *         never have any code on any EVM chain.\n     */\n    address internal constant ESTIMATION_ADDRESS = address(1);\n\n    /**\n     * @notice Value used for the L2 sender storage slot in both the OptimismPortal and the\n     *         CrossDomainMessenger contracts before an actual sender is set. This value is\n     *         non-zero to reduce the gas cost of message passing transactions.\n     */\n    address internal constant DEFAULT_L2_SENDER = 0x000000000000000000000000000000000000dEaD;\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { Types } from \"./Types.sol\";\nimport { Hashing } from \"./Hashing.sol\";\nimport { RLPWriter } from \"./rlp/RLPWriter.sol\";\n\n/**\n * @title Encoding\n * @notice Encoding handles Optimism's various different encoding schemes.\n */\nlibrary Encoding {\n    /**\n     * @notice RLP encodes the L2 transaction that would be generated when a given deposit is sent\n     *         to the L2 system. Useful for searching for a deposit in the L2 system. The\n     *         transaction is prefixed with 0x7e to identify its EIP-2718 type.\n     *\n     * @param _tx User deposit transaction to encode.\n     *\n     * @return RLP encoded L2 deposit transaction.\n     */\n    function encodeDepositTransaction(Types.UserDepositTransaction memory _tx)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        bytes32 source = Hashing.hashDepositSource(_tx.l1BlockHash, _tx.logIndex);\n        bytes[] memory raw = new bytes[](8);\n        raw[0] = RLPWriter.writeBytes(abi.encodePacked(source));\n        raw[1] = RLPWriter.writeAddress(_tx.from);\n        raw[2] = _tx.isCreation ? RLPWriter.writeBytes(\"\") : RLPWriter.writeAddress(_tx.to);\n        raw[3] = RLPWriter.writeUint(_tx.mint);\n        raw[4] = RLPWriter.writeUint(_tx.value);\n        raw[5] = RLPWriter.writeUint(uint256(_tx.gasLimit));\n        raw[6] = RLPWriter.writeBool(false);\n        raw[7] = RLPWriter.writeBytes(_tx.data);\n        return abi.encodePacked(uint8(0x7e), RLPWriter.writeList(raw));\n    }\n\n    /**\n     * @notice Encodes the cross domain message based on the version that is encoded into the\n     *         message nonce.\n     *\n     * @param _nonce    Message nonce with version encoded into the first two bytes.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Encoded cross domain message.\n     */\n    function encodeCrossDomainMessage(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes memory) {\n        (, uint16 version) = decodeVersionedNonce(_nonce);\n        if (version == 0) {\n            return encodeCrossDomainMessageV0(_target, _sender, _data, _nonce);\n        } else if (version == 1) {\n            return encodeCrossDomainMessageV1(_nonce, _sender, _target, _value, _gasLimit, _data);\n        } else {\n            revert(\"Encoding: unknown cross domain message version\");\n        }\n    }\n\n    /**\n     * @notice Encodes a cross domain message based on the V0 (legacy) encoding.\n     *\n     * @param _target Address of the target of the message.\n     * @param _sender Address of the sender of the message.\n     * @param _data   Data to send with the message.\n     * @param _nonce  Message nonce.\n     *\n     * @return Encoded cross domain message.\n     */\n    function encodeCrossDomainMessageV0(\n        address _target,\n        address _sender,\n        bytes memory _data,\n        uint256 _nonce\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSignature(\n                \"relayMessage(address,address,bytes,uint256)\",\n                _target,\n                _sender,\n                _data,\n                _nonce\n            );\n    }\n\n    /**\n     * @notice Encodes a cross domain message based on the V1 (current) encoding.\n     *\n     * @param _nonce    Message nonce.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Encoded cross domain message.\n     */\n    function encodeCrossDomainMessageV1(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes memory) {\n        return\n            abi.encodeWithSignature(\n                \"relayMessage(uint256,address,address,uint256,uint256,bytes)\",\n                _nonce,\n                _sender,\n                _target,\n                _value,\n                _gasLimit,\n                _data\n            );\n    }\n\n    /**\n     * @notice Adds a version number into the first two bytes of a message nonce.\n     *\n     * @param _nonce   Message nonce to encode into.\n     * @param _version Version number to encode into the message nonce.\n     *\n     * @return Message nonce with version encoded into the first two bytes.\n     */\n    function encodeVersionedNonce(uint240 _nonce, uint16 _version) internal pure returns (uint256) {\n        uint256 nonce;\n        assembly {\n            nonce := or(shl(240, _version), _nonce)\n        }\n        return nonce;\n    }\n\n    /**\n     * @notice Pulls the version out of a version-encoded nonce.\n     *\n     * @param _nonce Message nonce with version encoded into the first two bytes.\n     *\n     * @return Nonce without encoded version.\n     * @return Version of the message.\n     */\n    function decodeVersionedNonce(uint256 _nonce) internal pure returns (uint240, uint16) {\n        uint240 nonce;\n        uint16 version;\n        assembly {\n            nonce := and(_nonce, 0x0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n            version := shr(240, _nonce)\n        }\n        return (nonce, version);\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { Types } from \"./Types.sol\";\nimport { Encoding } from \"./Encoding.sol\";\n\n/**\n * @title Hashing\n * @notice Hashing handles Optimism's various different hashing schemes.\n */\nlibrary Hashing {\n    /**\n     * @notice Computes the hash of the RLP encoded L2 transaction that would be generated when a\n     *         given deposit is sent to the L2 system. Useful for searching for a deposit in the L2\n     *         system.\n     *\n     * @param _tx User deposit transaction to hash.\n     *\n     * @return Hash of the RLP encoded L2 deposit transaction.\n     */\n    function hashDepositTransaction(Types.UserDepositTransaction memory _tx)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return keccak256(Encoding.encodeDepositTransaction(_tx));\n    }\n\n    /**\n     * @notice Computes the deposit transaction's \"source hash\", a value that guarantees the hash\n     *         of the L2 transaction that corresponds to a deposit is unique and is\n     *         deterministically generated from L1 transaction data.\n     *\n     * @param _l1BlockHash Hash of the L1 block where the deposit was included.\n     * @param _logIndex    The index of the log that created the deposit transaction.\n     *\n     * @return Hash of the deposit transaction's \"source hash\".\n     */\n    function hashDepositSource(bytes32 _l1BlockHash, uint256 _logIndex)\n        internal\n        pure\n        returns (bytes32)\n    {\n        bytes32 depositId = keccak256(abi.encode(_l1BlockHash, _logIndex));\n        return keccak256(abi.encode(bytes32(0), depositId));\n    }\n\n    /**\n     * @notice Hashes the cross domain message based on the version that is encoded into the\n     *         message nonce.\n     *\n     * @param _nonce    Message nonce with version encoded into the first two bytes.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Hashed cross domain message.\n     */\n    function hashCrossDomainMessage(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes32) {\n        (, uint16 version) = Encoding.decodeVersionedNonce(_nonce);\n        if (version == 0) {\n            return hashCrossDomainMessageV0(_target, _sender, _data, _nonce);\n        } else if (version == 1) {\n            return hashCrossDomainMessageV1(_nonce, _sender, _target, _value, _gasLimit, _data);\n        } else {\n            revert(\"Hashing: unknown cross domain message version\");\n        }\n    }\n\n    /**\n     * @notice Hashes a cross domain message based on the V0 (legacy) encoding.\n     *\n     * @param _target Address of the target of the message.\n     * @param _sender Address of the sender of the message.\n     * @param _data   Data to send with the message.\n     * @param _nonce  Message nonce.\n     *\n     * @return Hashed cross domain message.\n     */\n    function hashCrossDomainMessageV0(\n        address _target,\n        address _sender,\n        bytes memory _data,\n        uint256 _nonce\n    ) internal pure returns (bytes32) {\n        return keccak256(Encoding.encodeCrossDomainMessageV0(_target, _sender, _data, _nonce));\n    }\n\n    /**\n     * @notice Hashes a cross domain message based on the V1 (current) encoding.\n     *\n     * @param _nonce    Message nonce.\n     * @param _sender   Address of the sender of the message.\n     * @param _target   Address of the target of the message.\n     * @param _value    ETH value to send to the target.\n     * @param _gasLimit Gas limit to use for the message.\n     * @param _data     Data to send with the message.\n     *\n     * @return Hashed cross domain message.\n     */\n    function hashCrossDomainMessageV1(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _gasLimit,\n        bytes memory _data\n    ) internal pure returns (bytes32) {\n        return\n            keccak256(\n                Encoding.encodeCrossDomainMessageV1(\n                    _nonce,\n                    _sender,\n                    _target,\n                    _value,\n                    _gasLimit,\n                    _data\n                )\n            );\n    }\n\n    /**\n     * @notice Derives the withdrawal hash according to the encoding in the L2 Withdrawer contract\n     *\n     * @param _tx Withdrawal transaction to hash.\n     *\n     * @return Hashed withdrawal transaction.\n     */\n    function hashWithdrawal(Types.WithdrawalTransaction memory _tx)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(_tx.nonce, _tx.sender, _tx.target, _tx.value, _tx.gasLimit, _tx.data)\n            );\n    }\n\n    /**\n     * @notice Hashes the various elements of an output root proof into an output root hash which\n     *         can be used to check if the proof is valid.\n     *\n     * @param _outputRootProof Output root proof which should hash to an output root.\n     *\n     * @return Hashed output root proof.\n     */\n    function hashOutputRootProof(Types.OutputRootProof memory _outputRootProof)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(\n                    _outputRootProof.version,\n                    _outputRootProof.stateRoot,\n                    _outputRootProof.messagePasserStorageRoot,\n                    _outputRootProof.latestBlockhash\n                )\n            );\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @custom:attribution https://github.com/bakaoh/solidity-rlp-encode\n * @title RLPWriter\n * @author RLPWriter is a library for encoding Solidity types to RLP bytes. Adapted from Bakaoh's\n *         RLPEncode library (https://github.com/bakaoh/solidity-rlp-encode) with minor\n *         modifications to improve legibility.\n */\nlibrary RLPWriter {\n    /**\n     * @notice RLP encodes a byte string.\n     *\n     * @param _in The byte string to encode.\n     *\n     * @return The RLP encoded string in bytes.\n     */\n    function writeBytes(bytes memory _in) internal pure returns (bytes memory) {\n        bytes memory encoded;\n\n        if (_in.length == 1 && uint8(_in[0]) < 128) {\n            encoded = _in;\n        } else {\n            encoded = abi.encodePacked(_writeLength(_in.length, 128), _in);\n        }\n\n        return encoded;\n    }\n\n    /**\n     * @notice RLP encodes a list of RLP encoded byte byte strings.\n     *\n     * @param _in The list of RLP encoded byte strings.\n     *\n     * @return The RLP encoded list of items in bytes.\n     */\n    function writeList(bytes[] memory _in) internal pure returns (bytes memory) {\n        bytes memory list = _flatten(_in);\n        return abi.encodePacked(_writeLength(list.length, 192), list);\n    }\n\n    /**\n     * @notice RLP encodes a string.\n     *\n     * @param _in The string to encode.\n     *\n     * @return The RLP encoded string in bytes.\n     */\n    function writeString(string memory _in) internal pure returns (bytes memory) {\n        return writeBytes(bytes(_in));\n    }\n\n    /**\n     * @notice RLP encodes an address.\n     *\n     * @param _in The address to encode.\n     *\n     * @return The RLP encoded address in bytes.\n     */\n    function writeAddress(address _in) internal pure returns (bytes memory) {\n        return writeBytes(abi.encodePacked(_in));\n    }\n\n    /**\n     * @notice RLP encodes a uint.\n     *\n     * @param _in The uint256 to encode.\n     *\n     * @return The RLP encoded uint256 in bytes.\n     */\n    function writeUint(uint256 _in) internal pure returns (bytes memory) {\n        return writeBytes(_toBinary(_in));\n    }\n\n    /**\n     * @notice RLP encodes a bool.\n     *\n     * @param _in The bool to encode.\n     *\n     * @return The RLP encoded bool in bytes.\n     */\n    function writeBool(bool _in) internal pure returns (bytes memory) {\n        bytes memory encoded = new bytes(1);\n        encoded[0] = (_in ? bytes1(0x01) : bytes1(0x80));\n        return encoded;\n    }\n\n    /**\n     * @notice Encode the first byte and then the `len` in binary form if `length` is more than 55.\n     *\n     * @param _len    The length of the string or the payload.\n     * @param _offset 128 if item is string, 192 if item is list.\n     *\n     * @return RLP encoded bytes.\n     */\n    function _writeLength(uint256 _len, uint256 _offset) private pure returns (bytes memory) {\n        bytes memory encoded;\n\n        if (_len < 56) {\n            encoded = new bytes(1);\n            encoded[0] = bytes1(uint8(_len) + uint8(_offset));\n        } else {\n            uint256 lenLen;\n            uint256 i = 1;\n            while (_len / i != 0) {\n                lenLen++;\n                i *= 256;\n            }\n\n            encoded = new bytes(lenLen + 1);\n            encoded[0] = bytes1(uint8(lenLen) + uint8(_offset) + 55);\n            for (i = 1; i <= lenLen; i++) {\n                encoded[i] = bytes1(uint8((_len / (256**(lenLen - i))) % 256));\n            }\n        }\n\n        return encoded;\n    }\n\n    /**\n     * @notice Encode integer in big endian binary form with no leading zeroes.\n     *\n     * @param _x The integer to encode.\n     *\n     * @return RLP encoded bytes.\n     */\n    function _toBinary(uint256 _x) private pure returns (bytes memory) {\n        bytes memory b = abi.encodePacked(_x);\n\n        uint256 i = 0;\n        for (; i < 32; i++) {\n            if (b[i] != 0) {\n                break;\n            }\n        }\n\n        bytes memory res = new bytes(32 - i);\n        for (uint256 j = 0; j < res.length; j++) {\n            res[j] = b[i++];\n        }\n\n        return res;\n    }\n\n    /**\n     * @custom:attribution https://github.com/Arachnid/solidity-stringutils\n     * @notice Copies a piece of memory to another location.\n     *\n     * @param _dest Destination location.\n     * @param _src  Source location.\n     * @param _len  Length of memory to copy.\n     */\n    function _memcpy(\n        uint256 _dest,\n        uint256 _src,\n        uint256 _len\n    ) private pure {\n        uint256 dest = _dest;\n        uint256 src = _src;\n        uint256 len = _len;\n\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        uint256 mask;\n        unchecked {\n            mask = 256**(32 - len) - 1;\n        }\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n    }\n\n    /**\n     * @custom:attribution https://github.com/sammayo/solidity-rlp-encoder\n     * @notice Flattens a list of byte strings into one byte string.\n     *\n     * @param _list List of byte strings to flatten.\n     *\n     * @return The flattened byte string.\n     */\n    function _flatten(bytes[] memory _list) private pure returns (bytes memory) {\n        if (_list.length == 0) {\n            return new bytes(0);\n        }\n\n        uint256 len;\n        uint256 i = 0;\n        for (; i < _list.length; i++) {\n            len += _list[i].length;\n        }\n\n        bytes memory flattened = new bytes(len);\n        uint256 flattenedPtr;\n        assembly {\n            flattenedPtr := add(flattened, 0x20)\n        }\n\n        for (i = 0; i < _list.length; i++) {\n            bytes memory item = _list[i];\n\n            uint256 listPtr;\n            assembly {\n                listPtr := add(item, 0x20)\n            }\n\n            _memcpy(flattenedPtr, listPtr, item.length);\n            flattenedPtr += _list[i].length;\n        }\n\n        return flattened;\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\n/**\n * @title SafeCall\n * @notice Perform low level safe calls\n */\nlibrary SafeCall {\n    /**\n     * @notice Perform a low level call without copying any returndata\n     *\n     * @param _target   Address to call\n     * @param _gas      Amount of gas to pass to the call\n     * @param _value    Amount of value to pass to the call\n     * @param _calldata Calldata to pass to the call\n     */\n    function call(\n        address _target,\n        uint256 _gas,\n        uint256 _value,\n        bytes memory _calldata\n    ) internal returns (bool) {\n        bool _success;\n        assembly {\n            _success := call(\n                _gas, // gas\n                _target, // recipient\n                _value, // ether value\n                add(_calldata, 32), // inloc\n                mload(_calldata), // inlen\n                0, // outloc\n                0 // outlen\n            )\n        }\n        return _success;\n    }\n\n    /**\n     * @notice Perform a low level call without copying any returndata. This function\n     *         will revert if the call cannot be performed with the specified minimum\n     *         gas.\n     *\n     * @param _target   Address to call\n     * @param _minGas   The minimum amount of gas that may be passed to the call\n     * @param _value    Amount of value to pass to the call\n     * @param _calldata Calldata to pass to the call\n     */\n    function callWithMinGas(\n        address _target,\n        uint256 _minGas,\n        uint256 _value,\n        bytes memory _calldata\n    ) internal returns (bool) {\n        bool _success;\n        assembly {\n            // Assertion: gasleft() >= ((_minGas + 200) * 64) / 63\n            //\n            // Because EIP-150 ensures that, a maximum of 63/64ths of the remaining gas in the call\n            // frame may be passed to a subcontext, we need to ensure that the gas will not be\n            // truncated to hold this function's invariant: \"If a call is performed by\n            // `callWithMinGas`, it must receive at least the specified minimum gas limit.\" In\n            // addition, exactly 51 gas is consumed between the below `GAS` opcode and the `CALL`\n            // opcode, so it is factored in with some extra room for error.\n            if lt(gas(), div(mul(64, add(_minGas, 200)), 63)) {\n                // Store the \"Error(string)\" selector in scratch space.\n                mstore(0, 0x08c379a0)\n                // Store the pointer to the string length in scratch space.\n                mstore(32, 32)\n                // Store the string.\n                //\n                // SAFETY:\n                // - We pad the beginning of the string with two zero bytes as well as the\n                // length (24) to ensure that we override the free memory pointer at offset\n                // 0x40. This is necessary because the free memory pointer is likely to\n                // be greater than 1 byte when this function is called, but it is incredibly\n                // unlikely that it will be greater than 3 bytes. As for the data within\n                // 0x60, it is ensured that it is 0 due to 0x60 being the zero offset.\n                // - It's fine to clobber the free memory pointer, we're reverting.\n                mstore(88, 0x0000185361666543616c6c3a204e6f7420656e6f75676820676173)\n\n                // Revert with 'Error(\"SafeCall: Not enough gas\")'\n                revert(28, 100)\n            }\n\n            // The call will be supplied at least (((_minGas + 200) * 64) / 63) - 49 gas due to the\n            // above assertion. This ensures that, in all circumstances, the call will\n            // receive at least the minimum amount of gas specified.\n            // We can prove this property by solving the inequalities:\n            // ((((_minGas + 200) * 64) / 63) - 49) >= _minGas\n            // ((((_minGas + 200) * 64) / 63) - 51) * (63 / 64) >= _minGas\n            // Both inequalities hold true for all possible values of `_minGas`.\n            _success := call(\n                gas(), // gas\n                _target, // recipient\n                _value, // ether value\n                add(_calldata, 32), // inloc\n                mload(_calldata), // inlen\n                0x00, // outloc\n                0x00 // outlen\n            )\n        }\n        return _success;\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title Types\n * @notice Contains various types used throughout the Optimism contract system.\n */\nlibrary Types {\n    /**\n     * @notice OutputProposal represents a commitment to the L2 state. The timestamp is the L1\n     *         timestamp that the output root is posted. This timestamp is used to verify that the\n     *         finalization period has passed since the output root was submitted.\n     *\n     * @custom:field outputRoot    Hash of the L2 output.\n     * @custom:field timestamp     Timestamp of the L1 block that the output root was submitted in.\n     * @custom:field l2BlockNumber L2 block number that the output corresponds to.\n     */\n    struct OutputProposal {\n        bytes32 outputRoot;\n        uint128 timestamp;\n        uint128 l2BlockNumber;\n    }\n\n    /**\n     * @notice Struct representing the elements that are hashed together to generate an output root\n     *         which itself represents a snapshot of the L2 state.\n     *\n     * @custom:field version                  Version of the output root.\n     * @custom:field stateRoot                Root of the state trie at the block of this output.\n     * @custom:field messagePasserStorageRoot Root of the message passer storage trie.\n     * @custom:field latestBlockhash          Hash of the block this output was generated from.\n     */\n    struct OutputRootProof {\n        bytes32 version;\n        bytes32 stateRoot;\n        bytes32 messagePasserStorageRoot;\n        bytes32 latestBlockhash;\n    }\n\n    /**\n     * @notice Struct representing a deposit transaction (L1 => L2 transaction) created by an end\n     *         user (as opposed to a system deposit transaction generated by the system).\n     *\n     * @custom:field from        Address of the sender of the transaction.\n     * @custom:field to          Address of the recipient of the transaction.\n     * @custom:field isCreation  True if the transaction is a contract creation.\n     * @custom:field value       Value to send to the recipient.\n     * @custom:field mint        Amount of ETH to mint.\n     * @custom:field gasLimit    Gas limit of the transaction.\n     * @custom:field data        Data of the transaction.\n     * @custom:field l1BlockHash Hash of the block the transaction was submitted in.\n     * @custom:field logIndex    Index of the log in the block the transaction was submitted in.\n     */\n    struct UserDepositTransaction {\n        address from;\n        address to;\n        bool isCreation;\n        uint256 value;\n        uint256 mint;\n        uint64 gasLimit;\n        bytes data;\n        bytes32 l1BlockHash;\n        uint256 logIndex;\n    }\n\n    /**\n     * @notice Struct representing a withdrawal transaction.\n     *\n     * @custom:field nonce    Nonce of the withdrawal transaction\n     * @custom:field sender   Address of the sender of the transaction.\n     * @custom:field target   Address of the recipient of the transaction.\n     * @custom:field value    Value to send to the recipient.\n     * @custom:field gasLimit Gas limit of the transaction.\n     * @custom:field data     Data of the transaction.\n     */\n    struct WithdrawalTransaction {\n        uint256 nonce;\n        address sender;\n        address target;\n        uint256 value;\n        uint256 gasLimit;\n        bytes data;\n    }\n}\n"},"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { Initializable } from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport { SafeCall } from \"../libraries/SafeCall.sol\";\nimport { Hashing } from \"../libraries/Hashing.sol\";\nimport { Encoding } from \"../libraries/Encoding.sol\";\nimport { Constants } from \"../libraries/Constants.sol\";\n\n/**\n * @custom:legacy\n * @title CrossDomainMessengerLegacySpacer0\n * @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n *         libAddressManager variable used to exist. Must be the first contract in the inheritance\n *         tree of the CrossDomainMessenger.\n */\ncontract CrossDomainMessengerLegacySpacer0 {\n    /**\n     * @custom:legacy\n     * @custom:spacer libAddressManager\n     * @notice Spacer for backwards compatibility.\n     */\n    address private spacer_0_0_20;\n}\n\n/**\n * @custom:legacy\n * @title CrossDomainMessengerLegacySpacer1\n * @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n *         PausableUpgradable and OwnableUpgradeable variables used to exist. Must be\n *         the third contract in the inheritance tree of the CrossDomainMessenger.\n */\ncontract CrossDomainMessengerLegacySpacer1 {\n    /**\n     * @custom:legacy\n     * @custom:spacer __gap\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         ContextUpgradable via OwnableUpgradeable.\n     *\n     */\n    uint256[50] private spacer_1_0_1600;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer _owner\n     * @notice Spacer for backwards compatibility.\n     *         Come from OpenZeppelin OwnableUpgradeable.\n     */\n    address private spacer_51_0_20;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer __gap\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         ContextUpgradable via PausableUpgradable.\n     */\n    uint256[49] private spacer_52_0_1568;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer _paused\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         PausableUpgradable.\n     */\n    bool private spacer_101_0_1;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer __gap\n     * @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n     *         PausableUpgradable.\n     */\n    uint256[49] private spacer_102_0_1568;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer ReentrancyGuardUpgradeable's `_status` field.\n     * @notice Spacer for backwards compatibility\n     */\n    uint256 private spacer_151_0_32;\n\n    /**\n     * @custom:spacer ReentrancyGuardUpgradeable\n     * @notice Spacer for backwards compatibility\n     */\n    uint256[49] private __gap_reentrancy_guard;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer blockedMessages\n     * @notice Spacer for backwards compatibility.\n     */\n    mapping(bytes32 => bool) private spacer_201_0_32;\n\n    /**\n     * @custom:legacy\n     * @custom:spacer relayedMessages\n     * @notice Spacer for backwards compatibility.\n     */\n    mapping(bytes32 => bool) private spacer_202_0_32;\n}\n\n/**\n * @custom:upgradeable\n * @title CrossDomainMessenger\n * @notice CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2\n *         cross-chain messenger contracts. It's designed to be a universal interface that only\n *         needs to be extended slightly to provide low-level message passing functionality on each\n *         chain it's deployed on. Currently only designed for message passing between two paired\n *         chains and does not support one-to-many interactions.\n *\n *         Any changes to this contract MUST result in a semver bump for contracts that inherit it.\n */\nabstract contract CrossDomainMessenger is\n    CrossDomainMessengerLegacySpacer0,\n    Initializable,\n    CrossDomainMessengerLegacySpacer1\n{\n    /**\n     * @notice Current message version identifier.\n     */\n    uint16 public constant MESSAGE_VERSION = 1;\n\n    /**\n     * @notice Constant overhead added to the base gas for a message.\n     */\n    uint64 public constant MIN_GAS_CONSTANT_OVERHEAD = 200_000;\n\n    /**\n     * @notice Numerator for dynamic overhead added to the base gas for a message.\n     */\n    uint64 public constant MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR = 1016;\n\n    /**\n     * @notice Denominator for dynamic overhead added to the base gas for a message.\n     */\n    uint64 public constant MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR = 1000;\n\n    /**\n     * @notice Extra gas added to base gas for each byte of calldata in a message.\n     */\n    uint64 public constant MIN_GAS_CALLDATA_OVERHEAD = 16;\n\n    /**\n     * @notice Address of the paired CrossDomainMessenger contract on the other chain.\n     */\n    address public immutable OTHER_MESSENGER;\n\n    /**\n     * @notice Mapping of message hashes to boolean receipt values. Note that a message will only\n     *         be present in this mapping if it has successfully been relayed on this chain, and\n     *         can therefore not be relayed again.\n     */\n    mapping(bytes32 => bool) public successfulMessages;\n\n    /**\n     * @notice Address of the sender of the currently executing message on the other chain. If the\n     *         value of this variable is the default value (0x00000000...dead) then no message is\n     *         currently being executed. Use the xDomainMessageSender getter which will throw an\n     *         error if this is the case.\n     */\n    address internal xDomainMsgSender;\n\n    /**\n     * @notice Nonce for the next message to be sent, without the message version applied. Use the\n     *         messageNonce getter which will insert the message version into the nonce to give you\n     *         the actual nonce to be used for the message.\n     */\n    uint240 internal msgNonce;\n\n    /**\n     * @notice Mapping of message hashes to a boolean if and only if the message has failed to be\n     *         executed at least once. A message will not be present in this mapping if it\n     *         successfully executed on the first attempt.\n     */\n    mapping(bytes32 => bool) public failedMessages;\n\n    /**\n     * @notice A mapping of hashes to reentrancy locks.\n     */\n    mapping(bytes32 => bool) internal reentrancyLocks;\n\n    /**\n     * @notice Reserve extra slots in the storage layout for future upgrades.\n     *         A gap size of 41 was chosen here, so that the first slot used in a child contract\n     *         would be a multiple of 50.\n     */\n    uint256[41] private __gap;\n\n    /**\n     * @notice Emitted whenever a message is sent to the other chain.\n     *\n     * @param target       Address of the recipient of the message.\n     * @param sender       Address of the sender of the message.\n     * @param message      Message to trigger the recipient address with.\n     * @param messageNonce Unique nonce attached to the message.\n     * @param gasLimit     Minimum gas limit that the message can be executed with.\n     */\n    event SentMessage(\n        address indexed target,\n        address sender,\n        bytes message,\n        uint256 messageNonce,\n        uint256 gasLimit\n    );\n\n    /**\n     * @notice Additional event data to emit, required as of Bedrock. Cannot be merged with the\n     *         SentMessage event without breaking the ABI of this contract, this is good enough.\n     *\n     * @param sender Address of the sender of the message.\n     * @param value  ETH value sent along with the message to the recipient.\n     */\n    event SentMessageExtension1(address indexed sender, uint256 value);\n\n    /**\n     * @notice Emitted whenever a message is successfully relayed on this chain.\n     *\n     * @param msgHash Hash of the message that was relayed.\n     */\n    event RelayedMessage(bytes32 indexed msgHash);\n\n    /**\n     * @notice Emitted whenever a message fails to be relayed on this chain.\n     *\n     * @param msgHash Hash of the message that failed to be relayed.\n     */\n    event FailedRelayedMessage(bytes32 indexed msgHash);\n\n    /**\n     * @param _otherMessenger Address of the messenger on the paired chain.\n     */\n    constructor(address _otherMessenger) {\n        OTHER_MESSENGER = _otherMessenger;\n    }\n\n    /**\n     * @notice Sends a message to some target address on the other chain. Note that if the call\n     *         always reverts, then the message will be unrelayable, and any ETH sent will be\n     *         permanently locked. The same will occur if the target on the other chain is\n     *         considered unsafe (see the _isUnsafeTarget() function).\n     *\n     * @param _target      Target contract or wallet address.\n     * @param _message     Message to trigger the target address with.\n     * @param _minGasLimit Minimum gas limit that the message can be executed with.\n     */\n    function sendMessage(\n        address _target,\n        bytes calldata _message,\n        uint32 _minGasLimit\n    ) external payable {\n        // Triggers a message to the other messenger. Note that the amount of gas provided to the\n        // message is the amount of gas requested by the user PLUS the base gas value. We want to\n        // guarantee the property that the call to the target contract will always have at least\n        // the minimum gas limit specified by the user.\n        _sendMessage(\n            OTHER_MESSENGER,\n            baseGas(_message, _minGasLimit),\n            msg.value,\n            abi.encodeWithSelector(\n                this.relayMessage.selector,\n                messageNonce(),\n                msg.sender,\n                _target,\n                msg.value,\n                _minGasLimit,\n                _message\n            )\n        );\n\n        emit SentMessage(_target, msg.sender, _message, messageNonce(), _minGasLimit);\n        emit SentMessageExtension1(msg.sender, msg.value);\n\n        unchecked {\n            ++msgNonce;\n        }\n    }\n\n    /**\n     * @notice Relays a message that was sent by the other CrossDomainMessenger contract. Can only\n     *         be executed via cross-chain call from the other messenger OR if the message was\n     *         already received once and is currently being replayed.\n     *\n     * @param _nonce       Nonce of the message being relayed.\n     * @param _sender      Address of the user who sent the message.\n     * @param _target      Address that the message is targeted at.\n     * @param _value       ETH value to send with the message.\n     * @param _minGasLimit Minimum amount of gas that the message can be executed with.\n     * @param _message     Message to send to the target.\n     */\n    function relayMessage(\n        uint256 _nonce,\n        address _sender,\n        address _target,\n        uint256 _value,\n        uint256 _minGasLimit,\n        bytes calldata _message\n    ) external payable {\n        (, uint16 version) = Encoding.decodeVersionedNonce(_nonce);\n        require(\n            version < 2,\n            \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\"\n        );\n\n        // If the message is version 0, then it's a migrated legacy withdrawal. We therefore need\n        // to check that the legacy version of the message has not already been relayed.\n        if (version == 0) {\n            bytes32 oldHash = Hashing.hashCrossDomainMessageV0(_target, _sender, _message, _nonce);\n            require(\n                successfulMessages[oldHash] == false,\n                \"CrossDomainMessenger: legacy withdrawal already relayed\"\n            );\n        }\n\n        // We use the v1 message hash as the unique identifier for the message because it commits\n        // to the value and minimum gas limit of the message.\n        bytes32 versionedHash = Hashing.hashCrossDomainMessageV1(\n            _nonce,\n            _sender,\n            _target,\n            _value,\n            _minGasLimit,\n            _message\n        );\n\n        // Check if the reentrancy lock for the `versionedHash` is already set.\n        if (reentrancyLocks[versionedHash]) {\n            revert(\"ReentrancyGuard: reentrant call\");\n        }\n        // Trigger the reentrancy lock for `versionedHash`\n        reentrancyLocks[versionedHash] = true;\n\n        if (_isOtherMessenger()) {\n            // These properties should always hold when the message is first submitted (as\n            // opposed to being replayed).\n            assert(msg.value == _value);\n            assert(!failedMessages[versionedHash]);\n        } else {\n            require(\n                msg.value == 0,\n                \"CrossDomainMessenger: value must be zero unless message is from a system address\"\n            );\n\n            require(\n                failedMessages[versionedHash],\n                \"CrossDomainMessenger: message cannot be replayed\"\n            );\n        }\n\n        require(\n            _isUnsafeTarget(_target) == false,\n            \"CrossDomainMessenger: cannot send message to blocked system address\"\n        );\n\n        require(\n            successfulMessages[versionedHash] == false,\n            \"CrossDomainMessenger: message has already been relayed\"\n        );\n\n        xDomainMsgSender = _sender;\n        bool success = SafeCall.callWithMinGas(_target, _minGasLimit, _value, _message);\n        xDomainMsgSender = Constants.DEFAULT_L2_SENDER;\n\n        if (success) {\n            successfulMessages[versionedHash] = true;\n            emit RelayedMessage(versionedHash);\n        } else {\n            failedMessages[versionedHash] = true;\n            emit FailedRelayedMessage(versionedHash);\n\n            // Revert in this case if the transaction was triggered by the estimation address. This\n            // should only be possible during gas estimation or we have bigger problems. Reverting\n            // here will make the behavior of gas estimation change such that the gas limit\n            // computed will be the amount required to relay the message, even if that amount is\n            // greater than the minimum gas limit specified by the user.\n            if (tx.origin == Constants.ESTIMATION_ADDRESS) {\n                revert(\"CrossDomainMessenger: failed to relay message\");\n            }\n        }\n\n        // Clear the reentrancy lock for `versionedHash`\n        reentrancyLocks[versionedHash] = false;\n    }\n\n    /**\n     * @notice Retrieves the address of the contract or wallet that initiated the currently\n     *         executing message on the other chain. Will throw an error if there is no message\n     *         currently being executed. Allows the recipient of a call to see who triggered it.\n     *\n     * @return Address of the sender of the currently executing message on the other chain.\n     */\n    function xDomainMessageSender() external view returns (address) {\n        require(\n            xDomainMsgSender != Constants.DEFAULT_L2_SENDER,\n            \"CrossDomainMessenger: xDomainMessageSender is not set\"\n        );\n\n        return xDomainMsgSender;\n    }\n\n    /**\n     * @notice Retrieves the next message nonce. Message version will be added to the upper two\n     *         bytes of the message nonce. Message version allows us to treat messages as having\n     *         different structures.\n     *\n     * @return Nonce of the next message to be sent, with added message version.\n     */\n    function messageNonce() public view returns (uint256) {\n        return Encoding.encodeVersionedNonce(msgNonce, MESSAGE_VERSION);\n    }\n\n    /**\n     * @notice Computes the amount of gas required to guarantee that a given message will be\n     *         received on the other chain without running out of gas. Guaranteeing that a message\n     *         will not run out of gas is important because this ensures that a message can always\n     *         be replayed on the other chain if it fails to execute completely.\n     *\n     * @param _message     Message to compute the amount of required gas for.\n     * @param _minGasLimit Minimum desired gas limit when message goes to target.\n     *\n     * @return Amount of gas required to guarantee message receipt.\n     */\n    function baseGas(bytes calldata _message, uint32 _minGasLimit) public pure returns (uint64) {\n        // We peform the following math on uint64s to avoid overflow errors. Multiplying the\n        // by MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR would otherwise limit the _minGasLimit to\n        // type(uint32).max / MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR ~= 4.2m.\n        return\n            // Dynamic overhead\n            ((uint64(_minGasLimit) * MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR) /\n                MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR) +\n            // Calldata overhead\n            (uint64(_message.length) * MIN_GAS_CALLDATA_OVERHEAD) +\n            // Constant overhead\n            MIN_GAS_CONSTANT_OVERHEAD;\n    }\n\n    /**\n     * @notice Intializer.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __CrossDomainMessenger_init() internal onlyInitializing {\n        xDomainMsgSender = Constants.DEFAULT_L2_SENDER;\n    }\n\n    /**\n     * @notice Sends a low-level message to the other messenger. Needs to be implemented by child\n     *         contracts because the logic for this depends on the network where the messenger is\n     *         being deployed.\n     *\n     * @param _to       Recipient of the message on the other chain.\n     * @param _gasLimit Minimum gas limit the message can be executed with.\n     * @param _value    Amount of ETH to send with the message.\n     * @param _data     Message data.\n     */\n    function _sendMessage(\n        address _to,\n        uint64 _gasLimit,\n        uint256 _value,\n        bytes memory _data\n    ) internal virtual;\n\n    /**\n     * @notice Checks whether the message is coming from the other messenger. Implemented by child\n     *         contracts because the logic for this depends on the network where the messenger is\n     *         being deployed.\n     *\n     * @return Whether the message is coming from the other messenger.\n     */\n    function _isOtherMessenger() internal view virtual returns (bool);\n\n    /**\n     * @notice Checks whether a given call target is a system address that could cause the\n     *         messenger to peform an unsafe action. This is NOT a mechanism for blocking user\n     *         addresses. This is ONLY used to prevent the execution of messages to specific\n     *         system addresses that could cause security issues, e.g., having the\n     *         CrossDomainMessenger send messages to itself.\n     *\n     * @param _target Address of the contract to check.\n     *\n     * @return Whether or not the address is an unsafe system address.\n     */\n    function _isUnsafeTarget(address _target) internal view virtual returns (bool);\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"contracts/MinimalMessenger.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.15;\n\nimport { CrossDomainMessenger } from \"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\";\n\ncontract MinimalMessenger is CrossDomainMessenger {\n    constructor()\n        CrossDomainMessenger(address(0))\n    {}\n\n    function _sendMessage(\n        address,\n        uint64,\n        uint256,\n        bytes memory\n    ) internal override {}\n\n    /**\n     * @inheritdoc CrossDomainMessenger\n     */\n    function _isOtherMessenger() internal pure override returns (bool) {\n        return true;\n    }\n\n    /**\n     * @inheritdoc CrossDomainMessenger\n     */\n    function _isUnsafeTarget(address) internal pure override returns (bool) {\n        return false;\n    }\n\n    function setXDomainMessageSender(address _newXDomainMessageSender) external {\n        xDomainMsgSender = _newXDomainMessageSender;\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol","exportedSymbols":{"Constants":[14]},"id":15,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"Constants","contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:278:0","text":" @title Constants\n @notice Constants is a library for storing constants. Simple! Don't put everything in here, just\n         the stuff used in multiple contracts. Constants that only apply to a single contract\n         should be defined in that contract instead."},"fullyImplemented":true,"id":14,"linearizedBaseContracts":[14],"name":"Constants","nameLocation":"344:9:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"360:545:0","text":" @notice Special address to be used as the tx origin for gas estimation calls in the\n         OptimismPortal and CrossDomainMessenger calls. You only need to use this address if\n         the minimum gas limit specified by the user is not actually enough to execute the\n         given message and you're attempting to estimate the actual necessary gas limit. We\n         use address(1) because it's the ecrecover precompile and therefore guaranteed to\n         never have any code on any EVM chain."},"id":9,"mutability":"constant","name":"ESTIMATION_ADDRESS","nameLocation":"936:18:0","nodeType":"VariableDeclaration","scope":14,"src":"910:57:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"31","id":7,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"965:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":6,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"957:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"957:7:0","typeDescriptions":{}}},"id":8,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"957:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":true,"documentation":{"id":10,"nodeType":"StructuredDocumentation","src":"974:275:0","text":" @notice Value used for the L2 sender storage slot in both the OptimismPortal and the\n         CrossDomainMessenger contracts before an actual sender is set. This value is\n         non-zero to reduce the gas cost of message passing transactions."},"id":13,"mutability":"constant","name":"DEFAULT_L2_SENDER","nameLocation":"1280:17:0","nodeType":"VariableDeclaration","scope":14,"src":"1254:88:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11,"name":"address","nodeType":"ElementaryTypeName","src":"1254:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303064456144","id":12,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1300:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000dEaD"},"visibility":"internal"}],"scope":15,"src":"336:1009:0","usedErrors":[]}],"src":"32:1314:0"},"id":0},"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol","exportedSymbols":{"Encoding":[307],"Hashing":[529],"RLPWriter":[1134],"Types":[627]},"id":308,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":16,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol","file":"./Types.sol","id":18,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":308,"sourceUnit":628,"src":"57:36:1","symbolAliases":[{"foreign":{"id":17,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"66:5:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol","file":"./Hashing.sol","id":20,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":308,"sourceUnit":530,"src":"94:40:1","symbolAliases":[{"foreign":{"id":19,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"103:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol","file":"./rlp/RLPWriter.sol","id":22,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":308,"sourceUnit":1135,"src":"135:48:1","symbolAliases":[{"foreign":{"id":21,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"144:9:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Encoding","contractDependencies":[],"contractKind":"library","documentation":{"id":23,"nodeType":"StructuredDocumentation","src":"185:101:1","text":" @title Encoding\n @notice Encoding handles Optimism's various different encoding schemes."},"fullyImplemented":true,"id":307,"linearizedBaseContracts":[307],"name":"Encoding","nameLocation":"295:8:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":156,"nodeType":"Block","src":"854:668:1","statements":[{"assignments":[33],"declarations":[{"constant":false,"id":33,"mutability":"mutable","name":"source","nameLocation":"872:6:1","nodeType":"VariableDeclaration","scope":156,"src":"864:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"864:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":41,"initialValue":{"arguments":[{"expression":{"id":36,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"907:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":37,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"l1BlockHash","nodeType":"MemberAccess","referencedDeclaration":610,"src":"907:15:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":38,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"924:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":39,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"logIndex","nodeType":"MemberAccess","referencedDeclaration":612,"src":"924:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":34,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"881:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashing_$529_$","typeString":"type(library Hashing)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"hashDepositSource","nodeType":"MemberAccess","referencedDeclaration":363,"src":"881:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"864:73:1"},{"assignments":[46],"declarations":[{"constant":false,"id":46,"mutability":"mutable","name":"raw","nameLocation":"962:3:1","nodeType":"VariableDeclaration","scope":156,"src":"947:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":44,"name":"bytes","nodeType":"ElementaryTypeName","src":"947:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":45,"nodeType":"ArrayTypeName","src":"947:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"id":52,"initialValue":{"arguments":[{"hexValue":"38","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"980:1:1","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"id":49,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"968:11:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory[] memory)"},"typeName":{"baseType":{"id":47,"name":"bytes","nodeType":"ElementaryTypeName","src":"972:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":48,"nodeType":"ArrayTypeName","src":"972:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"968:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"947:35:1"},{"expression":{"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":53,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"992:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":55,"indexExpression":{"hexValue":"30","id":54,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"992:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":60,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1039:6:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":58,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1022:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":59,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1022:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":61,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1022:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":56,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1001:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":676,"src":"1001:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"992:55:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":64,"nodeType":"ExpressionStatement","src":"992:55:1"},{"expression":{"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":65,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1057:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":67,"indexExpression":{"hexValue":"31","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1061:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1057:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":70,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1089:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":71,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"from","nodeType":"MemberAccess","referencedDeclaration":596,"src":"1089:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":68,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1066:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeAddress","nodeType":"MemberAccess","referencedDeclaration":734,"src":"1066:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1066:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1057:41:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":74,"nodeType":"ExpressionStatement","src":"1057:41:1"},{"expression":{"id":90,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":75,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1108:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":77,"indexExpression":{"hexValue":"32","id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1112:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1108:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"expression":{"id":78,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1117:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":79,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isCreation","nodeType":"MemberAccess","referencedDeclaration":600,"src":"1117:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"expression":{"id":86,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1184:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":87,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"to","nodeType":"MemberAccess","referencedDeclaration":598,"src":"1184:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":84,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1161:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeAddress","nodeType":"MemberAccess","referencedDeclaration":734,"src":"1161:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes_memory_ptr_$","typeString":"function (address) pure returns (bytes memory)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1161:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1117:74:1","trueExpression":{"arguments":[{"hexValue":"","id":82,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1155:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":80,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1134:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":81,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":676,"src":"1134:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":83,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1134:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1108:83:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":91,"nodeType":"ExpressionStatement","src":"1108:83:1"},{"expression":{"id":100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":92,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1201:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":94,"indexExpression":{"hexValue":"33","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1205:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1201:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":97,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1230:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":98,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":604,"src":"1230:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":95,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1210:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeUint","nodeType":"MemberAccess","referencedDeclaration":749,"src":"1210:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1210:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1201:38:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":101,"nodeType":"ExpressionStatement","src":"1201:38:1"},{"expression":{"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":102,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1249:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":104,"indexExpression":{"hexValue":"34","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1253:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1249:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":107,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1278:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":108,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":602,"src":"1278:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":105,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1258:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeUint","nodeType":"MemberAccess","referencedDeclaration":749,"src":"1258:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1258:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1249:39:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":111,"nodeType":"ExpressionStatement","src":"1249:39:1"},{"expression":{"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":112,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1298:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":114,"indexExpression":{"hexValue":"35","id":113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1302:1:1","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1298:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":119,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1335:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":120,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gasLimit","nodeType":"MemberAccess","referencedDeclaration":606,"src":"1335:12:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1327:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1327:7:1","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1327:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":115,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1307:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeUint","nodeType":"MemberAccess","referencedDeclaration":749,"src":"1307:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1307:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1298:51:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":124,"nodeType":"ExpressionStatement","src":"1298:51:1"},{"expression":{"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":125,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1359:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":127,"indexExpression":{"hexValue":"36","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1363:1:1","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1359:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"66616c7365","id":130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1388:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":128,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1368:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBool","nodeType":"MemberAccess","referencedDeclaration":783,"src":"1368:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool) pure returns (bytes memory)"}},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1368:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1359:35:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":133,"nodeType":"ExpressionStatement","src":"1359:35:1"},{"expression":{"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":134,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1404:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":136,"indexExpression":{"hexValue":"37","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1408:1:1","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1404:6:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":139,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1434:3:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}},"id":140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":608,"src":"1434:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":137,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1413:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":676,"src":"1413:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1413:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1404:39:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":143,"nodeType":"ExpressionStatement","src":"1404:39:1"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30783765","id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1483:4:1","typeDescriptions":{"typeIdentifier":"t_rational_126_by_1","typeString":"int_const 126"},"value":"0x7e"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_126_by_1","typeString":"int_const 126"}],"id":147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1477:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":146,"name":"uint8","nodeType":"ElementaryTypeName","src":"1477:5:1","typeDescriptions":{}}},"id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1477:11:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":152,"name":"raw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1510:3:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"expression":{"id":150,"name":"RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"1490:9:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPWriter_$1134_$","typeString":"type(library RLPWriter)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"writeList","nodeType":"MemberAccess","referencedDeclaration":702,"src":"1490:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory[] memory) pure returns (bytes memory)"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1490:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":144,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1460:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1460:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1460:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":31,"id":155,"nodeType":"Return","src":"1453:62:1"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"310:399:1","text":" @notice RLP encodes the L2 transaction that would be generated when a given deposit is sent\n         to the L2 system. Useful for searching for a deposit in the L2 system. The\n         transaction is prefixed with 0x7e to identify its EIP-2718 type.\n @param _tx User deposit transaction to encode.\n @return RLP encoded L2 deposit transaction."},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"encodeDepositTransaction","nameLocation":"723:24:1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"_tx","nameLocation":"784:3:1","nodeType":"VariableDeclaration","scope":157,"src":"748:39:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction"},"typeName":{"id":26,"nodeType":"UserDefinedTypeName","pathNode":{"id":25,"name":"Types.UserDepositTransaction","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"748:28:1"},"referencedDeclaration":613,"src":"748:28:1","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_storage_ptr","typeString":"struct Types.UserDepositTransaction"}},"visibility":"internal"}],"src":"747:41:1"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"836:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":29,"name":"bytes","nodeType":"ElementaryTypeName","src":"836:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"835:14:1"},"scope":307,"src":"714:808:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":212,"nodeType":"Block","src":"2336:405:1","statements":[{"assignments":[null,176],"declarations":[null,{"constant":false,"id":176,"mutability":"mutable","name":"version","nameLocation":"2356:7:1","nodeType":"VariableDeclaration","scope":212,"src":"2349:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":175,"name":"uint16","nodeType":"ElementaryTypeName","src":"2349:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":180,"initialValue":{"arguments":[{"id":178,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2388:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":177,"name":"decodeVersionedNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2367:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$","typeString":"function (uint256) pure returns (uint240,uint16)"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2367:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"2346:49:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":181,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2409:7:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2420:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2409:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":192,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"2524:7:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2535:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2524:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":209,"nodeType":"Block","src":"2654:81:1","statements":[{"expression":{"arguments":[{"hexValue":"456e636f64696e673a20756e6b6e6f776e2063726f737320646f6d61696e206d6573736167652076657273696f6e","id":206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2675:48:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_20f286d8aba599c42275a01116f2950ae5fc870430b0c87c9769ad93ff637977","typeString":"literal_string \"Encoding: unknown cross domain message version\""},"value":"Encoding: unknown cross domain message version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_20f286d8aba599c42275a01116f2950ae5fc870430b0c87c9769ad93ff637977","typeString":"literal_string \"Encoding: unknown cross domain message version\""}],"id":205,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2668:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2668:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":208,"nodeType":"ExpressionStatement","src":"2668:56:1"}]},"id":210,"nodeType":"IfStatement","src":"2520:215:1","trueBody":{"id":204,"nodeType":"Block","src":"2538:110:1","statements":[{"expression":{"arguments":[{"id":196,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2586:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":197,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2594:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":198,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2603:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":199,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"2612:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":200,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"2620:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":201,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2631:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":195,"name":"encodeCrossDomainMessageV1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"2559:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes memory)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2559:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":174,"id":203,"nodeType":"Return","src":"2552:85:1"}]}},"id":211,"nodeType":"IfStatement","src":"2405:330:1","trueBody":{"id":191,"nodeType":"Block","src":"2423:91:1","statements":[{"expression":{"arguments":[{"id":185,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2471:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":186,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2480:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":187,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"2489:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":188,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"2496:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":184,"name":"encodeCrossDomainMessageV0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"2444:26:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes memory)"}},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2444:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":174,"id":190,"nodeType":"Return","src":"2437:66:1"}]}}]},"documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"1528:573:1","text":" @notice Encodes the cross domain message based on the version that is encoded into the\n         message nonce.\n @param _nonce    Message nonce with version encoded into the first two bytes.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Encoded cross domain message."},"id":213,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCrossDomainMessage","nameLocation":"2115:24:1","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"mutability":"mutable","name":"_nonce","nameLocation":"2157:6:1","nodeType":"VariableDeclaration","scope":213,"src":"2149:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":162,"mutability":"mutable","name":"_sender","nameLocation":"2181:7:1","nodeType":"VariableDeclaration","scope":213,"src":"2173:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2173:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"_target","nameLocation":"2206:7:1","nodeType":"VariableDeclaration","scope":213,"src":"2198:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"2198:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"_value","nameLocation":"2231:6:1","nodeType":"VariableDeclaration","scope":213,"src":"2223:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":168,"mutability":"mutable","name":"_gasLimit","nameLocation":"2255:9:1","nodeType":"VariableDeclaration","scope":213,"src":"2247:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":167,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"_data","nameLocation":"2287:5:1","nodeType":"VariableDeclaration","scope":213,"src":"2274:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":169,"name":"bytes","nodeType":"ElementaryTypeName","src":"2274:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2139:159:1"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":213,"src":"2322:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":172,"name":"bytes","nodeType":"ElementaryTypeName","src":"2322:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2321:14:1"},"scope":307,"src":"2106:635:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":236,"nodeType":"Block","src":"3294:233:1","statements":[{"expression":{"arguments":[{"hexValue":"72656c61794d65737361676528616464726573732c616464726573732c62797465732c75696e7432353629","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3364:45:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},"value":"relayMessage(address,address,bytes,uint256)"},{"id":230,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"3427:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":231,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"3452:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":232,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"3477:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":233,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"3500:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":227,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3323:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"3323:23:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3323:197:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":226,"id":235,"nodeType":"Return","src":"3304:216:1"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"2747:361:1","text":" @notice Encodes a cross domain message based on the V0 (legacy) encoding.\n @param _target Address of the target of the message.\n @param _sender Address of the sender of the message.\n @param _data   Data to send with the message.\n @param _nonce  Message nonce.\n @return Encoded cross domain message."},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCrossDomainMessageV0","nameLocation":"3122:26:1","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"_target","nameLocation":"3166:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3158:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"3158:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"_sender","nameLocation":"3191:7:1","nodeType":"VariableDeclaration","scope":237,"src":"3183:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"3183:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"_data","nameLocation":"3221:5:1","nodeType":"VariableDeclaration","scope":237,"src":"3208:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":219,"name":"bytes","nodeType":"ElementaryTypeName","src":"3208:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"_nonce","nameLocation":"3244:6:1","nodeType":"VariableDeclaration","scope":237,"src":"3236:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3148:108:1"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"3280:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":224,"name":"bytes","nodeType":"ElementaryTypeName","src":"3280:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3279:14:1"},"scope":307,"src":"3113:414:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":266,"nodeType":"Block","src":"4255:300:1","statements":[{"expression":{"arguments":[{"hexValue":"72656c61794d6573736167652875696e743235362c616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4325:61:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d764ad0b7956c786c5024ab8148ae1a792e852ed69ab7c0944c91237fa2f44c0","typeString":"literal_string \"relayMessage(uint256,address,address,uint256,uint256,bytes)\""},"value":"relayMessage(uint256,address,address,uint256,uint256,bytes)"},{"id":258,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4404:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":259,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4428:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":260,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"4453:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":261,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"4478:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":262,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4502:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":263,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"4529:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d764ad0b7956c786c5024ab8148ae1a792e852ed69ab7c0944c91237fa2f44c0","typeString":"literal_string \"relayMessage(uint256,address,address,uint256,uint256,bytes)\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":255,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4284:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"4284:23:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4284:264:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":254,"id":265,"nodeType":"Return","src":"4265:283:1"}]},"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"3533:485:1","text":" @notice Encodes a cross domain message based on the V1 (current) encoding.\n @param _nonce    Message nonce.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Encoded cross domain message."},"id":267,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCrossDomainMessageV1","nameLocation":"4032:26:1","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"_nonce","nameLocation":"4076:6:1","nodeType":"VariableDeclaration","scope":267,"src":"4068:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"4068:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"_sender","nameLocation":"4100:7:1","nodeType":"VariableDeclaration","scope":267,"src":"4092:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"4092:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":244,"mutability":"mutable","name":"_target","nameLocation":"4125:7:1","nodeType":"VariableDeclaration","scope":267,"src":"4117:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"4117:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"_value","nameLocation":"4150:6:1","nodeType":"VariableDeclaration","scope":267,"src":"4142:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"4142:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"_gasLimit","nameLocation":"4174:9:1","nodeType":"VariableDeclaration","scope":267,"src":"4166:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"4166:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"_data","nameLocation":"4206:5:1","nodeType":"VariableDeclaration","scope":267,"src":"4193:18:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":249,"name":"bytes","nodeType":"ElementaryTypeName","src":"4193:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4058:159:1"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":267,"src":"4241:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":252,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:1"},"scope":307,"src":"4023:532:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"4969:133:1","statements":[{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"nonce","nameLocation":"4987:5:1","nodeType":"VariableDeclaration","scope":283,"src":"4979:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"4979:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":279,"nodeType":"VariableDeclarationStatement","src":"4979:13:1"},{"AST":{"nodeType":"YulBlock","src":"5011:63:1","statements":[{"nodeType":"YulAssignment","src":"5025:39:1","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5041:3:1","type":"","value":"240"},{"name":"_version","nodeType":"YulIdentifier","src":"5046:8:1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5037:3:1"},"nodeType":"YulFunctionCall","src":"5037:18:1"},{"name":"_nonce","nodeType":"YulIdentifier","src":"5057:6:1"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5034:2:1"},"nodeType":"YulFunctionCall","src":"5034:30:1"},"variableNames":[{"name":"nonce","nodeType":"YulIdentifier","src":"5025:5:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":270,"isOffset":false,"isSlot":false,"src":"5057:6:1","valueSize":1},{"declaration":272,"isOffset":false,"isSlot":false,"src":"5046:8:1","valueSize":1},{"declaration":278,"isOffset":false,"isSlot":false,"src":"5025:5:1","valueSize":1}],"id":280,"nodeType":"InlineAssembly","src":"5002:72:1"},{"expression":{"id":281,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"5090:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":276,"id":282,"nodeType":"Return","src":"5083:12:1"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"4561:308:1","text":" @notice Adds a version number into the first two bytes of a message nonce.\n @param _nonce   Message nonce to encode into.\n @param _version Version number to encode into the message nonce.\n @return Message nonce with version encoded into the first two bytes."},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"encodeVersionedNonce","nameLocation":"4883:20:1","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"_nonce","nameLocation":"4912:6:1","nodeType":"VariableDeclaration","scope":284,"src":"4904:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":269,"name":"uint240","nodeType":"ElementaryTypeName","src":"4904:7:1","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"_version","nameLocation":"4927:8:1","nodeType":"VariableDeclaration","scope":284,"src":"4920:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":271,"name":"uint16","nodeType":"ElementaryTypeName","src":"4920:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4903:33:1"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"4960:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"4960:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4959:9:1"},"scope":307,"src":"4874:228:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":305,"nodeType":"Block","src":"5456:257:1","statements":[{"assignments":[295],"declarations":[{"constant":false,"id":295,"mutability":"mutable","name":"nonce","nameLocation":"5474:5:1","nodeType":"VariableDeclaration","scope":305,"src":"5466:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":294,"name":"uint240","nodeType":"ElementaryTypeName","src":"5466:7:1","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"id":296,"nodeType":"VariableDeclarationStatement","src":"5466:13:1"},{"assignments":[298],"declarations":[{"constant":false,"id":298,"mutability":"mutable","name":"version","nameLocation":"5496:7:1","nodeType":"VariableDeclaration","scope":305,"src":"5489:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":297,"name":"uint16","nodeType":"ElementaryTypeName","src":"5489:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":299,"nodeType":"VariableDeclarationStatement","src":"5489:14:1"},{"AST":{"nodeType":"YulBlock","src":"5522:152:1","statements":[{"nodeType":"YulAssignment","src":"5536:88:1","value":{"arguments":[{"name":"_nonce","nodeType":"YulIdentifier","src":"5549:6:1"},{"kind":"number","nodeType":"YulLiteral","src":"5557:66:1","type":"","value":"0x0000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5545:3:1"},"nodeType":"YulFunctionCall","src":"5545:79:1"},"variableNames":[{"name":"nonce","nodeType":"YulIdentifier","src":"5536:5:1"}]},{"nodeType":"YulAssignment","src":"5637:27:1","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5652:3:1","type":"","value":"240"},{"name":"_nonce","nodeType":"YulIdentifier","src":"5657:6:1"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5648:3:1"},"nodeType":"YulFunctionCall","src":"5648:16:1"},"variableNames":[{"name":"version","nodeType":"YulIdentifier","src":"5637:7:1"}]}]},"evmVersion":"london","externalReferences":[{"declaration":287,"isOffset":false,"isSlot":false,"src":"5549:6:1","valueSize":1},{"declaration":287,"isOffset":false,"isSlot":false,"src":"5657:6:1","valueSize":1},{"declaration":295,"isOffset":false,"isSlot":false,"src":"5536:5:1","valueSize":1},{"declaration":298,"isOffset":false,"isSlot":false,"src":"5637:7:1","valueSize":1}],"id":300,"nodeType":"InlineAssembly","src":"5513:161:1"},{"expression":{"components":[{"id":301,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5691:5:1","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},{"id":302,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"5698:7:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":303,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5690:16:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"functionReturnParameters":293,"id":304,"nodeType":"Return","src":"5683:23:1"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"5108:257:1","text":" @notice Pulls the version out of a version-encoded nonce.\n @param _nonce Message nonce with version encoded into the first two bytes.\n @return Nonce without encoded version.\n @return Version of the message."},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"decodeVersionedNonce","nameLocation":"5379:20:1","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":287,"mutability":"mutable","name":"_nonce","nameLocation":"5408:6:1","nodeType":"VariableDeclaration","scope":306,"src":"5400:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5400:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5399:16:1"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"5439:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":289,"name":"uint240","nodeType":"ElementaryTypeName","src":"5439:7:1","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"5448:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":291,"name":"uint16","nodeType":"ElementaryTypeName","src":"5448:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5438:17:1"},"scope":307,"src":"5370:343:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":308,"src":"287:5428:1","usedErrors":[]}],"src":"32:5684:1"},"id":1},"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol","exportedSymbols":{"Encoding":[307],"Hashing":[529],"Types":[627]},"id":530,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":309,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol","file":"./Types.sol","id":311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":530,"sourceUnit":628,"src":"57:36:2","symbolAliases":[{"foreign":{"id":310,"name":"Types","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"66:5:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol","file":"./Encoding.sol","id":313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":530,"sourceUnit":308,"src":"94:42:2","symbolAliases":[{"foreign":{"id":312,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"103:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Hashing","contractDependencies":[],"contractKind":"library","documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"138:98:2","text":" @title Hashing\n @notice Hashing handles Optimism's various different hashing schemes."},"fullyImplemented":true,"id":529,"linearizedBaseContracts":[529],"name":"Hashing","nameLocation":"245:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":330,"nodeType":"Block","src":"758:73:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":326,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"819:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction memory"}],"expression":{"id":324,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"785:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$307_$","typeString":"type(library Encoding)"}},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeDepositTransaction","nodeType":"MemberAccess","referencedDeclaration":157,"src":"785:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_UserDepositTransaction_$613_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Types.UserDepositTransaction memory) pure returns (bytes memory)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"785:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":323,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"775:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"775:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":322,"id":329,"nodeType":"Return","src":"768:56:2"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"259:361:2","text":" @notice Computes the hash of the RLP encoded L2 transaction that would be generated when a\n         given deposit is sent to the L2 system. Useful for searching for a deposit in the L2\n         system.\n @param _tx User deposit transaction to hash.\n @return Hash of the RLP encoded L2 deposit transaction."},"id":331,"implemented":true,"kind":"function","modifiers":[],"name":"hashDepositTransaction","nameLocation":"634:22:2","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"_tx","nameLocation":"693:3:2","nodeType":"VariableDeclaration","scope":331,"src":"657:39:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_memory_ptr","typeString":"struct Types.UserDepositTransaction"},"typeName":{"id":317,"nodeType":"UserDefinedTypeName","pathNode":{"id":316,"name":"Types.UserDepositTransaction","nodeType":"IdentifierPath","referencedDeclaration":613,"src":"657:28:2"},"referencedDeclaration":613,"src":"657:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserDepositTransaction_$613_storage_ptr","typeString":"struct Types.UserDepositTransaction"}},"visibility":"internal"}],"src":"656:41:2"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":331,"src":"745:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"745:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"744:9:2"},"scope":529,"src":"625:206:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":362,"nodeType":"Block","src":"1476:144:2","statements":[{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"depositId","nameLocation":"1494:9:2","nodeType":"VariableDeclaration","scope":362,"src":"1486:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1486:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":350,"initialValue":{"arguments":[{"arguments":[{"id":346,"name":"_l1BlockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"1527:12:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":347,"name":"_logIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"1541:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":344,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1516:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1516:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1516:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":343,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1506:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1506:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1486:66:2"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1598:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1590:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1590:7:2","typeDescriptions":{}}},"id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1590:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":358,"name":"depositId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1602:9:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":352,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1579:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1579:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1579:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":351,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1569:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1569:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":340,"id":361,"nodeType":"Return","src":"1562:51:2"}]},"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"837:506:2","text":" @notice Computes the deposit transaction's \"source hash\", a value that guarantees the hash\n         of the L2 transaction that corresponds to a deposit is unique and is\n         deterministically generated from L1 transaction data.\n @param _l1BlockHash Hash of the L1 block where the deposit was included.\n @param _logIndex    The index of the log that created the deposit transaction.\n @return Hash of the deposit transaction's \"source hash\"."},"id":363,"implemented":true,"kind":"function","modifiers":[],"name":"hashDepositSource","nameLocation":"1357:17:2","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"_l1BlockHash","nameLocation":"1383:12:2","nodeType":"VariableDeclaration","scope":363,"src":"1375:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1375:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"_logIndex","nameLocation":"1405:9:2","nodeType":"VariableDeclaration","scope":363,"src":"1397:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1374:41:2"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1463:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1463:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1462:9:2"},"scope":529,"src":"1348:272:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"2425:409:2","statements":[{"assignments":[null,382],"declarations":[null,{"constant":false,"id":382,"mutability":"mutable","name":"version","nameLocation":"2445:7:2","nodeType":"VariableDeclaration","scope":419,"src":"2438:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":381,"name":"uint16","nodeType":"ElementaryTypeName","src":"2438:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":387,"initialValue":{"arguments":[{"id":385,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"2486:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":383,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"2456:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$307_$","typeString":"type(library Encoding)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeVersionedNonce","nodeType":"MemberAccess","referencedDeclaration":306,"src":"2456:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$","typeString":"function (uint256) pure returns (uint240,uint16)"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2456:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"2435:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":388,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2507:7:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2518:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2507:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":399,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"2620:7:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2631:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2620:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":416,"nodeType":"Block","src":"2748:80:2","statements":[{"expression":{"arguments":[{"hexValue":"48617368696e673a20756e6b6e6f776e2063726f737320646f6d61696e206d6573736167652076657273696f6e","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:47:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_384bb798b2228f81413367d26d76c93c293c9719e4003e054257d609e7be0f72","typeString":"literal_string \"Hashing: unknown cross domain message version\""},"value":"Hashing: unknown cross domain message version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_384bb798b2228f81413367d26d76c93c293c9719e4003e054257d609e7be0f72","typeString":"literal_string \"Hashing: unknown cross domain message version\""}],"id":412,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2762:6:2","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2762:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":415,"nodeType":"ExpressionStatement","src":"2762:55:2"}]},"id":417,"nodeType":"IfStatement","src":"2616:212:2","trueBody":{"id":411,"nodeType":"Block","src":"2634:108:2","statements":[{"expression":{"arguments":[{"id":403,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"2680:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":404,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"2688:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":405,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"2697:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":406,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2706:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":407,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"2714:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":408,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2725:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":402,"name":"hashCrossDomainMessageV1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2655:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes32)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2655:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":380,"id":410,"nodeType":"Return","src":"2648:83:2"}]}},"id":418,"nodeType":"IfStatement","src":"2503:325:2","trueBody":{"id":398,"nodeType":"Block","src":"2521:89:2","statements":[{"expression":{"arguments":[{"id":392,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"2567:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":393,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"2576:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":394,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2585:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":395,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"2592:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":391,"name":"hashCrossDomainMessageV0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2542:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes32)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2542:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":380,"id":397,"nodeType":"Return","src":"2535:64:2"}]}}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1626:571:2","text":" @notice Hashes the cross domain message based on the version that is encoded into the\n         message nonce.\n @param _nonce    Message nonce with version encoded into the first two bytes.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Hashed cross domain message."},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"hashCrossDomainMessage","nameLocation":"2211:22:2","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"_nonce","nameLocation":"2251:6:2","nodeType":"VariableDeclaration","scope":420,"src":"2243:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":365,"name":"uint256","nodeType":"ElementaryTypeName","src":"2243:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"_sender","nameLocation":"2275:7:2","nodeType":"VariableDeclaration","scope":420,"src":"2267:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2267:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"_target","nameLocation":"2300:7:2","nodeType":"VariableDeclaration","scope":420,"src":"2292:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"2292:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"_value","nameLocation":"2325:6:2","nodeType":"VariableDeclaration","scope":420,"src":"2317:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2317:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":374,"mutability":"mutable","name":"_gasLimit","nameLocation":"2349:9:2","nodeType":"VariableDeclaration","scope":420,"src":"2341:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2341:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"_data","nameLocation":"2381:5:2","nodeType":"VariableDeclaration","scope":420,"src":"2368:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":375,"name":"bytes","nodeType":"ElementaryTypeName","src":"2368:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2233:159:2"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"2416:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2416:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2415:9:2"},"scope":529,"src":"2202:632:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"3378:103:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":437,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"3441:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":438,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3450:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":439,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"3459:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":440,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"3466:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":435,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3405:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$307_$","typeString":"type(library Encoding)"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeCrossDomainMessageV0","nodeType":"MemberAccess","referencedDeclaration":237,"src":"3405:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes memory)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3405:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":434,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3395:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3395:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":433,"id":443,"nodeType":"Return","src":"3388:86:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"2840:359:2","text":" @notice Hashes a cross domain message based on the V0 (legacy) encoding.\n @param _target Address of the target of the message.\n @param _sender Address of the sender of the message.\n @param _data   Data to send with the message.\n @param _nonce  Message nonce.\n @return Hashed cross domain message."},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"hashCrossDomainMessageV0","nameLocation":"3213:24:2","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"_target","nameLocation":"3255:7:2","nodeType":"VariableDeclaration","scope":445,"src":"3247:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"3247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"_sender","nameLocation":"3280:7:2","nodeType":"VariableDeclaration","scope":445,"src":"3272:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"3272:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"_data","nameLocation":"3310:5:2","nodeType":"VariableDeclaration","scope":445,"src":"3297:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":426,"name":"bytes","nodeType":"ElementaryTypeName","src":"3297:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"_nonce","nameLocation":"3333:6:2","nodeType":"VariableDeclaration","scope":445,"src":"3325:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"3325:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3237:108:2"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"3369:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3369:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3368:9:2"},"scope":529,"src":"3204:277:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":475,"nodeType":"Block","src":"4200:302:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":466,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"4313:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":467,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"4341:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"4370:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"4399:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":470,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"4427:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":471,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"4458:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":464,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"4256:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$307_$","typeString":"type(library Encoding)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeCrossDomainMessageV1","nodeType":"MemberAccess","referencedDeclaration":267,"src":"4256:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes memory)"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4256:225:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":463,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4229:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4229:266:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":462,"id":474,"nodeType":"Return","src":"4210:285:2"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"3487:483:2","text":" @notice Hashes a cross domain message based on the V1 (current) encoding.\n @param _nonce    Message nonce.\n @param _sender   Address of the sender of the message.\n @param _target   Address of the target of the message.\n @param _value    ETH value to send to the target.\n @param _gasLimit Gas limit to use for the message.\n @param _data     Data to send with the message.\n @return Hashed cross domain message."},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"hashCrossDomainMessageV1","nameLocation":"3984:24:2","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"_nonce","nameLocation":"4026:6:2","nodeType":"VariableDeclaration","scope":476,"src":"4018:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4018:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"_sender","nameLocation":"4050:7:2","nodeType":"VariableDeclaration","scope":476,"src":"4042:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":449,"name":"address","nodeType":"ElementaryTypeName","src":"4042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"_target","nameLocation":"4075:7:2","nodeType":"VariableDeclaration","scope":476,"src":"4067:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"4067:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"_value","nameLocation":"4100:6:2","nodeType":"VariableDeclaration","scope":476,"src":"4092:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"4092:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"_gasLimit","nameLocation":"4124:9:2","nodeType":"VariableDeclaration","scope":476,"src":"4116:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"_data","nameLocation":"4156:5:2","nodeType":"VariableDeclaration","scope":476,"src":"4143:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":457,"name":"bytes","nodeType":"ElementaryTypeName","src":"4143:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4008:159:2"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"4191:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4191:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4190:9:2"},"scope":529,"src":"3975:527:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":503,"nodeType":"Block","src":"4857:157:2","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":488,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4924:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":615,"src":"4924:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":490,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4935:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":617,"src":"4935:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":492,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4947:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":493,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"target","nodeType":"MemberAccess","referencedDeclaration":619,"src":"4947:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":494,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4959:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":495,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":621,"src":"4959:9:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":496,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4970:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"gasLimit","nodeType":"MemberAccess","referencedDeclaration":623,"src":"4970:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":498,"name":"_tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"4984:3:2","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_memory_ptr","typeString":"struct Types.WithdrawalTransaction memory"}},"id":499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","referencedDeclaration":625,"src":"4984:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":486,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4913:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"4913:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4913:80:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":485,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4886:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4886:121:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":484,"id":502,"nodeType":"Return","src":"4867:140:2"}]},"documentation":{"id":477,"nodeType":"StructuredDocumentation","src":"4508:220:2","text":" @notice Derives the withdrawal hash according to the encoding in the L2 Withdrawer contract\n @param _tx Withdrawal transaction to hash.\n @return Hashed withdrawal transaction."},"id":504,"implemented":true,"kind":"function","modifiers":[],"name":"hashWithdrawal","nameLocation":"4742:14:2","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"_tx","nameLocation":"4792:3:2","nodeType":"VariableDeclaration","scope":504,"src":"4757:38:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_memory_ptr","typeString":"struct Types.WithdrawalTransaction"},"typeName":{"id":479,"nodeType":"UserDefinedTypeName","pathNode":{"id":478,"name":"Types.WithdrawalTransaction","nodeType":"IdentifierPath","referencedDeclaration":626,"src":"4757:27:2"},"referencedDeclaration":626,"src":"4757:27:2","typeDescriptions":{"typeIdentifier":"t_struct$_WithdrawalTransaction_$626_storage_ptr","typeString":"struct Types.WithdrawalTransaction"}},"visibility":"internal"}],"src":"4756:40:2"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":504,"src":"4844:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4844:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4843:9:2"},"scope":529,"src":"4733:281:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":527,"nodeType":"Block","src":"5470:316:2","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":516,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5558:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$594_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"version","nodeType":"MemberAccess","referencedDeclaration":587,"src":"5558:24:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":518,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5604:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$594_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":589,"src":"5604:26:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":520,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5652:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$594_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":521,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"messagePasserStorageRoot","nodeType":"MemberAccess","referencedDeclaration":591,"src":"5652:41:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":522,"name":"_outputRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"5715:16:2","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$594_memory_ptr","typeString":"struct Types.OutputRootProof memory"}},"id":523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"latestBlockhash","nodeType":"MemberAccess","referencedDeclaration":593,"src":"5715:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":514,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5526:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5526:10:2","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5526:239:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":513,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5499:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5499:280:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":512,"id":526,"nodeType":"Return","src":"5480:299:2"}]},"documentation":{"id":505,"nodeType":"StructuredDocumentation","src":"5020:309:2","text":" @notice Hashes the various elements of an output root proof into an output root hash which\n         can be used to check if the proof is valid.\n @param _outputRootProof Output root proof which should hash to an output root.\n @return Hashed output root proof."},"id":528,"implemented":true,"kind":"function","modifiers":[],"name":"hashOutputRootProof","nameLocation":"5343:19:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"_outputRootProof","nameLocation":"5392:16:2","nodeType":"VariableDeclaration","scope":528,"src":"5363:45:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$594_memory_ptr","typeString":"struct Types.OutputRootProof"},"typeName":{"id":507,"nodeType":"UserDefinedTypeName","pathNode":{"id":506,"name":"Types.OutputRootProof","nodeType":"IdentifierPath","referencedDeclaration":594,"src":"5363:21:2"},"referencedDeclaration":594,"src":"5363:21:2","typeDescriptions":{"typeIdentifier":"t_struct$_OutputRootProof_$594_storage_ptr","typeString":"struct Types.OutputRootProof"}},"visibility":"internal"}],"src":"5362:47:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":528,"src":"5457:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5457:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5456:9:2"},"scope":529,"src":"5334:452:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":530,"src":"237:5551:2","usedErrors":[]}],"src":"32:5757:2"},"id":2},"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol","exportedSymbols":{"SafeCall":[575]},"id":576,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":531,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCall","contractDependencies":[],"contractKind":"library","documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"57:66:3","text":" @title SafeCall\n @notice Perform low level safe calls"},"fullyImplemented":true,"id":575,"linearizedBaseContracts":[575],"name":"SafeCall","nameLocation":"132:8:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":552,"nodeType":"Block","src":"599:379:3","statements":[{"assignments":[547],"declarations":[{"constant":false,"id":547,"mutability":"mutable","name":"_success","nameLocation":"614:8:3","nodeType":"VariableDeclaration","scope":552,"src":"609:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":546,"name":"bool","nodeType":"ElementaryTypeName","src":"609:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":548,"nodeType":"VariableDeclarationStatement","src":"609:13:3"},{"AST":{"nodeType":"YulBlock","src":"641:306:3","statements":[{"nodeType":"YulAssignment","src":"655:282:3","value":{"arguments":[{"name":"_gas","nodeType":"YulIdentifier","src":"689:4:3"},{"name":"_target","nodeType":"YulIdentifier","src":"718:7:3"},{"name":"_value","nodeType":"YulIdentifier","src":"756:6:3"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"799:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"810:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:3"},"nodeType":"YulFunctionCall","src":"795:18:3"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"846:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"840:5:3"},"nodeType":"YulFunctionCall","src":"840:16:3"},{"kind":"number","nodeType":"YulLiteral","src":"883:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"912:1:3","type":"","value":"0"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"667:4:3"},"nodeType":"YulFunctionCall","src":"667:270:3"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"655:8:3"}]}]},"evmVersion":"london","externalReferences":[{"declaration":541,"isOffset":false,"isSlot":false,"src":"799:9:3","valueSize":1},{"declaration":541,"isOffset":false,"isSlot":false,"src":"846:9:3","valueSize":1},{"declaration":537,"isOffset":false,"isSlot":false,"src":"689:4:3","valueSize":1},{"declaration":547,"isOffset":false,"isSlot":false,"src":"655:8:3","valueSize":1},{"declaration":535,"isOffset":false,"isSlot":false,"src":"718:7:3","valueSize":1},{"declaration":539,"isOffset":false,"isSlot":false,"src":"756:6:3","valueSize":1}],"id":549,"nodeType":"InlineAssembly","src":"632:315:3"},{"expression":{"id":550,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"963:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":545,"id":551,"nodeType":"Return","src":"956:15:3"}]},"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"147:300:3","text":" @notice Perform a low level call without copying any returndata\n @param _target   Address to call\n @param _gas      Amount of gas to pass to the call\n @param _value    Amount of value to pass to the call\n @param _calldata Calldata to pass to the call"},"id":553,"implemented":true,"kind":"function","modifiers":[],"name":"call","nameLocation":"461:4:3","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"_target","nameLocation":"483:7:3","nodeType":"VariableDeclaration","scope":553,"src":"475:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":537,"mutability":"mutable","name":"_gas","nameLocation":"508:4:3","nodeType":"VariableDeclaration","scope":553,"src":"500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"_value","nameLocation":"530:6:3","nodeType":"VariableDeclaration","scope":553,"src":"522:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"522:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"_calldata","nameLocation":"559:9:3","nodeType":"VariableDeclaration","scope":553,"src":"546:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":540,"name":"bytes","nodeType":"ElementaryTypeName","src":"546:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"465:109:3"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":553,"src":"593:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":543,"name":"bool","nodeType":"ElementaryTypeName","src":"593:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"592:6:3"},"scope":575,"src":"452:526:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"1593:2753:3","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"_success","nameLocation":"1608:8:3","nodeType":"VariableDeclaration","scope":573,"src":"1603:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":567,"name":"bool","nodeType":"ElementaryTypeName","src":"1603:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":569,"nodeType":"VariableDeclarationStatement","src":"1603:13:3"},{"AST":{"nodeType":"YulBlock","src":"1635:2680:3","statements":[{"body":{"nodeType":"YulBlock","src":"2332:1124:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2429:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2432:10:3","type":"","value":"0x08c379a0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2422:6:3"},"nodeType":"YulFunctionCall","src":"2422:21:3"},"nodeType":"YulExpressionStatement","src":"2422:21:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2543:2:3","type":"","value":"32"},{"kind":"number","nodeType":"YulLiteral","src":"2547:2:3","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2536:6:3"},"nodeType":"YulFunctionCall","src":"2536:14:3"},"nodeType":"YulExpressionStatement","src":"2536:14:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3281:2:3","type":"","value":"88"},{"kind":"number","nodeType":"YulLiteral","src":"3285:56:3","type":"","value":"0x0000185361666543616c6c3a204e6f7420656e6f75676820676173"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3274:6:3"},"nodeType":"YulFunctionCall","src":"3274:68:3"},"nodeType":"YulExpressionStatement","src":"3274:68:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3434:2:3","type":"","value":"28"},{"kind":"number","nodeType":"YulLiteral","src":"3438:3:3","type":"","value":"100"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3427:6:3"},"nodeType":"YulFunctionCall","src":"3427:15:3"},"nodeType":"YulExpressionStatement","src":"3427:15:3"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"2288:3:3"},"nodeType":"YulFunctionCall","src":"2288:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2303:2:3","type":"","value":"64"},{"arguments":[{"name":"_minGas","nodeType":"YulIdentifier","src":"2311:7:3"},{"kind":"number","nodeType":"YulLiteral","src":"2320:3:3","type":"","value":"200"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2307:3:3"},"nodeType":"YulFunctionCall","src":"2307:17:3"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2299:3:3"},"nodeType":"YulFunctionCall","src":"2299:26:3"},{"kind":"number","nodeType":"YulLiteral","src":"2327:2:3","type":"","value":"63"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2295:3:3"},"nodeType":"YulFunctionCall","src":"2295:35:3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2285:2:3"},"nodeType":"YulFunctionCall","src":"2285:46:3"},"nodeType":"YulIf","src":"2282:1174:3"},{"nodeType":"YulAssignment","src":"4016:289:3","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"4050:3:3"},"nodeType":"YulFunctionCall","src":"4050:5:3"},{"name":"_target","nodeType":"YulIdentifier","src":"4080:7:3"},{"name":"_value","nodeType":"YulIdentifier","src":"4118:6:3"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4161:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"4172:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4157:3:3"},"nodeType":"YulFunctionCall","src":"4157:18:3"},{"arguments":[{"name":"_calldata","nodeType":"YulIdentifier","src":"4208:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4202:5:3"},"nodeType":"YulFunctionCall","src":"4202:16:3"},{"kind":"number","nodeType":"YulLiteral","src":"4245:4:3","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4277:4:3","type":"","value":"0x00"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"4028:4:3"},"nodeType":"YulFunctionCall","src":"4028:277:3"},"variableNames":[{"name":"_success","nodeType":"YulIdentifier","src":"4016:8:3"}]}]},"evmVersion":"london","externalReferences":[{"declaration":562,"isOffset":false,"isSlot":false,"src":"4161:9:3","valueSize":1},{"declaration":562,"isOffset":false,"isSlot":false,"src":"4208:9:3","valueSize":1},{"declaration":558,"isOffset":false,"isSlot":false,"src":"2311:7:3","valueSize":1},{"declaration":568,"isOffset":false,"isSlot":false,"src":"4016:8:3","valueSize":1},{"declaration":556,"isOffset":false,"isSlot":false,"src":"4080:7:3","valueSize":1},{"declaration":560,"isOffset":false,"isSlot":false,"src":"4118:6:3","valueSize":1}],"id":570,"nodeType":"InlineAssembly","src":"1626:2689:3"},{"expression":{"id":571,"name":"_success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4331:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":566,"id":572,"nodeType":"Return","src":"4324:15:3"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"984:444:3","text":" @notice Perform a low level call without copying any returndata. This function\n         will revert if the call cannot be performed with the specified minimum\n         gas.\n @param _target   Address to call\n @param _minGas   The minimum amount of gas that may be passed to the call\n @param _value    Amount of value to pass to the call\n @param _calldata Calldata to pass to the call"},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"callWithMinGas","nameLocation":"1442:14:3","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":556,"mutability":"mutable","name":"_target","nameLocation":"1474:7:3","nodeType":"VariableDeclaration","scope":574,"src":"1466:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":558,"mutability":"mutable","name":"_minGas","nameLocation":"1499:7:3","nodeType":"VariableDeclaration","scope":574,"src":"1491:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"_value","nameLocation":"1524:6:3","nodeType":"VariableDeclaration","scope":574,"src":"1516:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1516:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"_calldata","nameLocation":"1553:9:3","nodeType":"VariableDeclaration","scope":574,"src":"1540:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":561,"name":"bytes","nodeType":"ElementaryTypeName","src":"1540:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1456:112:3"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"1587:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":564,"name":"bool","nodeType":"ElementaryTypeName","src":"1587:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1586:6:3"},"scope":575,"src":"1433:2913:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":576,"src":"124:4224:3","usedErrors":[]}],"src":"32:4317:3"},"id":3},"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol","exportedSymbols":{"Types":[627]},"id":628,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":577,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Types","contractDependencies":[],"contractKind":"library","documentation":{"id":578,"nodeType":"StructuredDocumentation","src":"57:103:4","text":" @title Types\n @notice Contains various types used throughout the Optimism contract system."},"fullyImplemented":true,"id":627,"linearizedBaseContracts":[627],"name":"Types","nameLocation":"169:5:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Types.OutputProposal","id":585,"members":[{"constant":false,"id":580,"mutability":"mutable","name":"outputRoot","nameLocation":"762:10:4","nodeType":"VariableDeclaration","scope":585,"src":"754:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"754:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":582,"mutability":"mutable","name":"timestamp","nameLocation":"790:9:4","nodeType":"VariableDeclaration","scope":585,"src":"782:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":581,"name":"uint128","nodeType":"ElementaryTypeName","src":"782:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":584,"mutability":"mutable","name":"l2BlockNumber","nameLocation":"817:13:4","nodeType":"VariableDeclaration","scope":585,"src":"809:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":583,"name":"uint128","nodeType":"ElementaryTypeName","src":"809:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"OutputProposal","nameLocation":"729:14:4","nodeType":"StructDefinition","scope":627,"src":"722:115:4","visibility":"public"},{"canonicalName":"Types.OutputRootProof","id":594,"members":[{"constant":false,"id":587,"mutability":"mutable","name":"version","nameLocation":"1429:7:4","nodeType":"VariableDeclaration","scope":594,"src":"1421:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1421:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"stateRoot","nameLocation":"1454:9:4","nodeType":"VariableDeclaration","scope":594,"src":"1446:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1446:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"messagePasserStorageRoot","nameLocation":"1481:24:4","nodeType":"VariableDeclaration","scope":594,"src":"1473:32:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1473:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"latestBlockhash","nameLocation":"1523:15:4","nodeType":"VariableDeclaration","scope":594,"src":"1515:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":592,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1515:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"OutputRootProof","nameLocation":"1395:15:4","nodeType":"StructDefinition","scope":627,"src":"1388:157:4","visibility":"public"},{"canonicalName":"Types.UserDepositTransaction","id":613,"members":[{"constant":false,"id":596,"mutability":"mutable","name":"from","nameLocation":"2468:4:4","nodeType":"VariableDeclaration","scope":613,"src":"2460:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"2460:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":598,"mutability":"mutable","name":"to","nameLocation":"2490:2:4","nodeType":"VariableDeclaration","scope":613,"src":"2482:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"2482:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":600,"mutability":"mutable","name":"isCreation","nameLocation":"2507:10:4","nodeType":"VariableDeclaration","scope":613,"src":"2502:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":599,"name":"bool","nodeType":"ElementaryTypeName","src":"2502:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"value","nameLocation":"2535:5:4","nodeType":"VariableDeclaration","scope":613,"src":"2527:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":601,"name":"uint256","nodeType":"ElementaryTypeName","src":"2527:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"mint","nameLocation":"2558:4:4","nodeType":"VariableDeclaration","scope":613,"src":"2550:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"gasLimit","nameLocation":"2579:8:4","nodeType":"VariableDeclaration","scope":613,"src":"2572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":605,"name":"uint64","nodeType":"ElementaryTypeName","src":"2572:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"data","nameLocation":"2603:4:4","nodeType":"VariableDeclaration","scope":613,"src":"2597:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":607,"name":"bytes","nodeType":"ElementaryTypeName","src":"2597:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"l1BlockHash","nameLocation":"2625:11:4","nodeType":"VariableDeclaration","scope":613,"src":"2617:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2617:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"logIndex","nameLocation":"2654:8:4","nodeType":"VariableDeclaration","scope":613,"src":"2646:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserDepositTransaction","nameLocation":"2427:22:4","nodeType":"StructDefinition","scope":627,"src":"2420:249:4","visibility":"public"},{"canonicalName":"Types.WithdrawalTransaction","id":626,"members":[{"constant":false,"id":615,"mutability":"mutable","name":"nonce","nameLocation":"3196:5:4","nodeType":"VariableDeclaration","scope":626,"src":"3188:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"3188:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"sender","nameLocation":"3219:6:4","nodeType":"VariableDeclaration","scope":626,"src":"3211:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":619,"mutability":"mutable","name":"target","nameLocation":"3243:6:4","nodeType":"VariableDeclaration","scope":626,"src":"3235:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"3235:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"value","nameLocation":"3267:5:4","nodeType":"VariableDeclaration","scope":626,"src":"3259:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"3259:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"gasLimit","nameLocation":"3290:8:4","nodeType":"VariableDeclaration","scope":626,"src":"3282:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"3282:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":625,"mutability":"mutable","name":"data","nameLocation":"3314:4:4","nodeType":"VariableDeclaration","scope":626,"src":"3308:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":624,"name":"bytes","nodeType":"ElementaryTypeName","src":"3308:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"WithdrawalTransaction","nameLocation":"3156:21:4","nodeType":"StructDefinition","scope":627,"src":"3149:176:4","visibility":"public"}],"scope":628,"src":"161:3166:4","usedErrors":[]}],"src":"32:3296:4"},"id":4},"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol","exportedSymbols":{"RLPWriter":[1134]},"id":1135,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":629,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"RLPWriter","contractDependencies":[],"contractKind":"library","documentation":{"id":630,"nodeType":"StructuredDocumentation","src":"57:330:5","text":" @custom:attribution https://github.com/bakaoh/solidity-rlp-encode\n @title RLPWriter\n @author RLPWriter is a library for encoding Solidity types to RLP bytes. Adapted from Bakaoh's\n         RLPEncode library (https://github.com/bakaoh/solidity-rlp-encode) with minor\n         modifications to improve legibility."},"fullyImplemented":true,"id":1134,"linearizedBaseContracts":[1134],"name":"RLPWriter","nameLocation":"396:9:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":675,"nodeType":"Block","src":"652:247:5","statements":[{"assignments":[639],"declarations":[{"constant":false,"id":639,"mutability":"mutable","name":"encoded","nameLocation":"675:7:5","nodeType":"VariableDeclaration","scope":675,"src":"662:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":638,"name":"bytes","nodeType":"ElementaryTypeName","src":"662:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":640,"nodeType":"VariableDeclarationStatement","src":"662:20:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":641,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"697:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"697:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"697:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":647,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"722:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":649,"indexExpression":{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"722:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"716:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":645,"name":"uint8","nodeType":"ElementaryTypeName","src":"716:5:5","typeDescriptions":{}}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"716:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313238","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"732:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"716:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"697:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":671,"nodeType":"Block","src":"781:87:5","statements":[{"expression":{"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":659,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"795:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":663,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"835:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"835:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313238","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"847:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":662,"name":"_writeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"822:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (bytes memory)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"822:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":667,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"853:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":660,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"805:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"805:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"805:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"795:62:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":670,"nodeType":"ExpressionStatement","src":"795:62:5"}]},"id":672,"nodeType":"IfStatement","src":"693:175:5","trueBody":{"id":658,"nodeType":"Block","src":"737:38:5","statements":[{"expression":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":654,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"751:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":655,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"761:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"751:13:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":657,"nodeType":"ExpressionStatement","src":"751:13:5"}]}},{"expression":{"id":673,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"885:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":637,"id":674,"nodeType":"Return","src":"878:14:5"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"412:160:5","text":" @notice RLP encodes a byte string.\n @param _in The byte string to encode.\n @return The RLP encoded string in bytes."},"id":676,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes","nameLocation":"586:10:5","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"_in","nameLocation":"610:3:5","nodeType":"VariableDeclaration","scope":676,"src":"597:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":632,"name":"bytes","nodeType":"ElementaryTypeName","src":"597:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"596:18:5"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"638:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":635,"name":"bytes","nodeType":"ElementaryTypeName","src":"638:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"637:14:5"},"scope":1134,"src":"577:322:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"1190:121:5","statements":[{"assignments":[686],"declarations":[{"constant":false,"id":686,"mutability":"mutable","name":"list","nameLocation":"1213:4:5","nodeType":"VariableDeclaration","scope":701,"src":"1200:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":685,"name":"bytes","nodeType":"ElementaryTypeName","src":"1200:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":690,"initialValue":{"arguments":[{"id":688,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"1229:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":687,"name":"_flatten","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"1220:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory[] memory) pure returns (bytes memory)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1220:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1200:33:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":694,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1280:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1280:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313932","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1293:3:5","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}],"id":693,"name":"_writeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1267:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (bytes memory)"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1267:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":698,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"1299:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":691,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1250:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1250:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1250:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":684,"id":700,"nodeType":"Return","src":"1243:61:5"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"905:204:5","text":" @notice RLP encodes a list of RLP encoded byte byte strings.\n @param _in The list of RLP encoded byte strings.\n @return The RLP encoded list of items in bytes."},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"writeList","nameLocation":"1123:9:5","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"_in","nameLocation":"1148:3:5","nodeType":"VariableDeclaration","scope":702,"src":"1133:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":678,"name":"bytes","nodeType":"ElementaryTypeName","src":"1133:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":679,"nodeType":"ArrayTypeName","src":"1133:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"1132:20:5"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":702,"src":"1176:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":682,"name":"bytes","nodeType":"ElementaryTypeName","src":"1176:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1175:14:5"},"scope":1134,"src":"1114:197:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":717,"nodeType":"Block","src":"1549:46:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":713,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"1583:3:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1577:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":711,"name":"bytes","nodeType":"ElementaryTypeName","src":"1577:5:5","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1577:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":710,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"1566:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1566:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":709,"id":716,"nodeType":"Return","src":"1559:29:5"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"1317:150:5","text":" @notice RLP encodes a string.\n @param _in The string to encode.\n @return The RLP encoded string in bytes."},"id":718,"implemented":true,"kind":"function","modifiers":[],"name":"writeString","nameLocation":"1481:11:5","nodeType":"FunctionDefinition","parameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"_in","nameLocation":"1507:3:5","nodeType":"VariableDeclaration","scope":718,"src":"1493:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":704,"name":"string","nodeType":"ElementaryTypeName","src":"1493:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1492:19:5"},"returnParameters":{"id":709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":718,"src":"1535:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":707,"name":"bytes","nodeType":"ElementaryTypeName","src":"1535:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1534:14:5"},"scope":1134,"src":"1472:123:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":733,"nodeType":"Block","src":"1832:57:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":729,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"1877:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":727,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1860:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1860:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1860:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":726,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"1849:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1849:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":725,"id":732,"nodeType":"Return","src":"1842:40:5"}]},"documentation":{"id":719,"nodeType":"StructuredDocumentation","src":"1601:154:5","text":" @notice RLP encodes an address.\n @param _in The address to encode.\n @return The RLP encoded address in bytes."},"id":734,"implemented":true,"kind":"function","modifiers":[],"name":"writeAddress","nameLocation":"1769:12:5","nodeType":"FunctionDefinition","parameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"_in","nameLocation":"1790:3:5","nodeType":"VariableDeclaration","scope":734,"src":"1782:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"1782:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1781:13:5"},"returnParameters":{"id":725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":734,"src":"1818:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":723,"name":"bytes","nodeType":"ElementaryTypeName","src":"1818:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1817:14:5"},"scope":1134,"src":"1760:129:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":748,"nodeType":"Block","src":"2119:50:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":744,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"2157:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":743,"name":"_toBinary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"2147:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2147:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":742,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"2136:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2136:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":741,"id":747,"nodeType":"Return","src":"2129:33:5"}]},"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"1895:150:5","text":" @notice RLP encodes a uint.\n @param _in The uint256 to encode.\n @return The RLP encoded uint256 in bytes."},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"writeUint","nameLocation":"2059:9:5","nodeType":"FunctionDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"_in","nameLocation":"2077:3:5","nodeType":"VariableDeclaration","scope":749,"src":"2069:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2069:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2068:13:5"},"returnParameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"2105:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":739,"name":"bytes","nodeType":"ElementaryTypeName","src":"2105:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2104:14:5"},"scope":1134,"src":"2050:119:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":782,"nodeType":"Block","src":"2390:134:5","statements":[{"assignments":[758],"declarations":[{"constant":false,"id":758,"mutability":"mutable","name":"encoded","nameLocation":"2413:7:5","nodeType":"VariableDeclaration","scope":782,"src":"2400:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":757,"name":"bytes","nodeType":"ElementaryTypeName","src":"2400:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":763,"initialValue":{"arguments":[{"hexValue":"31","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2433:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2423:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":759,"name":"bytes","nodeType":"ElementaryTypeName","src":"2427:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2423:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2400:35:5"},{"expression":{"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":764,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2445:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":766,"indexExpression":{"hexValue":"30","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2453:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2445:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"condition":{"id":767,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"2459:3:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30783830","id":774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2487:4:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2480:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":772,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2480:6:5","typeDescriptions":{}}},"id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2459:33:5","trueExpression":{"arguments":[{"hexValue":"30783031","id":770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2465:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":768,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2465:6:5","typeDescriptions":{}}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2465:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2458:35:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2445:48:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":779,"nodeType":"ExpressionStatement","src":"2445:48:5"},{"expression":{"id":780,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"2510:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":756,"id":781,"nodeType":"Return","src":"2503:14:5"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"2175:144:5","text":" @notice RLP encodes a bool.\n @param _in The bool to encode.\n @return The RLP encoded bool in bytes."},"id":783,"implemented":true,"kind":"function","modifiers":[],"name":"writeBool","nameLocation":"2333:9:5","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"_in","nameLocation":"2348:3:5","nodeType":"VariableDeclaration","scope":783,"src":"2343:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":751,"name":"bool","nodeType":"ElementaryTypeName","src":"2343:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2342:10:5"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"2376:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":754,"name":"bytes","nodeType":"ElementaryTypeName","src":"2376:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2375:14:5"},"scope":1134,"src":"2324:200:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":912,"nodeType":"Block","src":"2912:625:5","statements":[{"assignments":[794],"declarations":[{"constant":false,"id":794,"mutability":"mutable","name":"encoded","nameLocation":"2935:7:5","nodeType":"VariableDeclaration","scope":912,"src":"2922:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"2922:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":795,"nodeType":"VariableDeclarationStatement","src":"2922:20:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"2957:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3536","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2964:2:5","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},"src":"2957:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":908,"nodeType":"Block","src":"3084:422:5","statements":[{"assignments":[825],"declarations":[{"constant":false,"id":825,"mutability":"mutable","name":"lenLen","nameLocation":"3106:6:5","nodeType":"VariableDeclaration","scope":908,"src":"3098:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"3098:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":826,"nodeType":"VariableDeclarationStatement","src":"3098:14:5"},{"assignments":[828],"declarations":[{"constant":false,"id":828,"mutability":"mutable","name":"i","nameLocation":"3134:1:5","nodeType":"VariableDeclaration","scope":908,"src":"3126:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"3126:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":830,"initialValue":{"hexValue":"31","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3138:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"3126:13:5"},{"body":{"id":843,"nodeType":"Block","src":"3175:67:5","statements":[{"expression":{"id":837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3193:8:5","subExpression":{"id":836,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3193:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":838,"nodeType":"ExpressionStatement","src":"3193:8:5"},{"expression":{"id":841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":839,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3219:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"323536","id":840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3224:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3219:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":842,"nodeType":"ExpressionStatement","src":"3219:8:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":831,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3160:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":832,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3167:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3160:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3172:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3160:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":844,"nodeType":"WhileStatement","src":"3153:89:5"},{"expression":{"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":845,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3256:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3276:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3285:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3276:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3266:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":846,"name":"bytes","nodeType":"ElementaryTypeName","src":"3270:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3266:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3256:31:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":853,"nodeType":"ExpressionStatement","src":"3256:31:5"},{"expression":{"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":854,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3301:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":856,"indexExpression":{"hexValue":"30","id":855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3309:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3301:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":861,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3327:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3321:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":859,"name":"uint8","nodeType":"ElementaryTypeName","src":"3321:5:5","typeDescriptions":{}}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3321:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":865,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"3343:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3337:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":863,"name":"uint8","nodeType":"ElementaryTypeName","src":"3337:5:5","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3337:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3321:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3535","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3354:2:5","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"3321:35:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3314:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":857,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3314:6:5","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3314:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3301:56:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":872,"nodeType":"ExpressionStatement","src":"3301:56:5"},{"body":{"id":906,"nodeType":"Block","src":"3401:95:5","statements":[{"expression":{"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":883,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3419:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":885,"indexExpression":{"id":884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3427:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3419:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":890,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3446:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3454:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":892,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3460:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":893,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3469:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3460:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3459:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3454:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3453:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3446:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":899,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3445:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3476:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3445:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3439:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":888,"name":"uint8","nodeType":"ElementaryTypeName","src":"3439:5:5","typeDescriptions":{}}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3439:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3432:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":886,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3432:6:5","typeDescriptions":{}}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3432:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3419:62:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":905,"nodeType":"ExpressionStatement","src":"3419:62:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":877,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3383:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":878,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"3388:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3383:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":907,"initializationExpression":{"expression":{"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":873,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3376:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3380:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3376:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":876,"nodeType":"ExpressionStatement","src":"3376:5:5"},"loopExpression":{"expression":{"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3396:3:5","subExpression":{"id":880,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"3396:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":882,"nodeType":"ExpressionStatement","src":"3396:3:5"},"nodeType":"ForStatement","src":"3371:125:5"}]},"id":909,"nodeType":"IfStatement","src":"2953:553:5","trueBody":{"id":823,"nodeType":"Block","src":"2968:110:5","statements":[{"expression":{"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":799,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"2982:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3002:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2992:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":800,"name":"bytes","nodeType":"ElementaryTypeName","src":"2996:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2992:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2982:22:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":805,"nodeType":"ExpressionStatement","src":"2982:22:5"},{"expression":{"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":806,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3018:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":808,"indexExpression":{"hexValue":"30","id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3026:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3018:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":813,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"3044:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3038:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":811,"name":"uint8","nodeType":"ElementaryTypeName","src":"3038:5:5","typeDescriptions":{}}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3038:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":817,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"3058:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3052:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":815,"name":"uint8","nodeType":"ElementaryTypeName","src":"3052:5:5","typeDescriptions":{}}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3052:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3038:28:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3031:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":809,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3031:6:5","typeDescriptions":{}}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3031:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3018:49:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":822,"nodeType":"ExpressionStatement","src":"3018:49:5"}]}},{"expression":{"id":910,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3523:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":792,"id":911,"nodeType":"Return","src":"3516:14:5"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"2530:288:5","text":" @notice Encode the first byte and then the `len` in binary form if `length` is more than 55.\n @param _len    The length of the string or the payload.\n @param _offset 128 if item is string, 192 if item is list.\n @return RLP encoded bytes."},"id":913,"implemented":true,"kind":"function","modifiers":[],"name":"_writeLength","nameLocation":"2832:12:5","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"_len","nameLocation":"2853:4:5","nodeType":"VariableDeclaration","scope":913,"src":"2845:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"2845:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"_offset","nameLocation":"2867:7:5","nodeType":"VariableDeclaration","scope":913,"src":"2859:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"2859:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2844:31:5"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":913,"src":"2898:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":790,"name":"bytes","nodeType":"ElementaryTypeName","src":"2898:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2897:14:5"},"scope":1134,"src":"2823:714:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":981,"nodeType":"Block","src":"3794:342:5","statements":[{"assignments":[922],"declarations":[{"constant":false,"id":922,"mutability":"mutable","name":"b","nameLocation":"3817:1:5","nodeType":"VariableDeclaration","scope":981,"src":"3804:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"3804:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":927,"initialValue":{"arguments":[{"id":925,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3838:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":923,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3821:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3821:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3821:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3804:37:5"},{"assignments":[929],"declarations":[{"constant":false,"id":929,"mutability":"mutable","name":"i","nameLocation":"3860:1:5","nodeType":"VariableDeclaration","scope":981,"src":"3852:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":931,"initialValue":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3864:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3852:13:5"},{"body":{"id":946,"nodeType":"Block","src":"3895:77:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":938,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3913:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":940,"indexExpression":{"id":939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"3915:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3913:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3913:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"IfStatement","src":"3909:53:5","trueBody":{"id":944,"nodeType":"Block","src":"3924:38:5","statements":[{"id":943,"nodeType":"Break","src":"3942:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"3882:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3886:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3882:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":947,"loopExpression":{"expression":{"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3890:3:5","subExpression":{"id":935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"3890:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":937,"nodeType":"ExpressionStatement","src":"3890:3:5"},"nodeType":"ForStatement","src":"3875:97:5"},{"assignments":[949],"declarations":[{"constant":false,"id":949,"mutability":"mutable","name":"res","nameLocation":"3995:3:5","nodeType":"VariableDeclaration","scope":981,"src":"3982:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":948,"name":"bytes","nodeType":"ElementaryTypeName","src":"3982:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":956,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4011:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"4016:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4011:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4001:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":950,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4001:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3982:36:5"},{"body":{"id":977,"nodeType":"Block","src":"4069:40:5","statements":[{"expression":{"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":968,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4083:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":970,"indexExpression":{"id":969,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4087:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4083:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":971,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"4092:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":974,"indexExpression":{"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4094:3:5","subExpression":{"id":972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":929,"src":"4094:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4092:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4083:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":976,"nodeType":"ExpressionStatement","src":"4083:15:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4048:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":962,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4052:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4052:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4048:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"initializationExpression":{"assignments":[958],"declarations":[{"constant":false,"id":958,"mutability":"mutable","name":"j","nameLocation":"4041:1:5","nodeType":"VariableDeclaration","scope":978,"src":"4033:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4033:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":960,"initialValue":{"hexValue":"30","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4045:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4033:13:5"},"loopExpression":{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4064:3:5","subExpression":{"id":965,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":958,"src":"4064:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"nodeType":"ExpressionStatement","src":"4064:3:5"},"nodeType":"ForStatement","src":"4028:81:5"},{"expression":{"id":979,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4126:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":920,"id":980,"nodeType":"Return","src":"4119:10:5"}]},"documentation":{"id":914,"nodeType":"StructuredDocumentation","src":"3543:179:5","text":" @notice Encode integer in big endian binary form with no leading zeroes.\n @param _x The integer to encode.\n @return RLP encoded bytes."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_toBinary","nameLocation":"3736:9:5","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":916,"mutability":"mutable","name":"_x","nameLocation":"3754:2:5","nodeType":"VariableDeclaration","scope":982,"src":"3746:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":915,"name":"uint256","nodeType":"ElementaryTypeName","src":"3746:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3745:12:5"},"returnParameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":982,"src":"3780:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":918,"name":"bytes","nodeType":"ElementaryTypeName","src":"3780:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3779:14:5"},"scope":1134,"src":"3727:409:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1038,"nodeType":"Block","src":"4530:543:5","statements":[{"assignments":[993],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"dest","nameLocation":"4548:4:5","nodeType":"VariableDeclaration","scope":1038,"src":"4540:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"4540:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":995,"initialValue":{"id":994,"name":"_dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4555:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4540:20:5"},{"assignments":[997],"declarations":[{"constant":false,"id":997,"mutability":"mutable","name":"src","nameLocation":"4578:3:5","nodeType":"VariableDeclaration","scope":1038,"src":"4570:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"4570:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":999,"initialValue":{"id":998,"name":"_src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"4584:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4570:18:5"},{"assignments":[1001],"declarations":[{"constant":false,"id":1001,"mutability":"mutable","name":"len","nameLocation":"4606:3:5","nodeType":"VariableDeclaration","scope":1038,"src":"4598:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"4598:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1003,"initialValue":{"id":1002,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"4612:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4598:18:5"},{"body":{"id":1020,"nodeType":"Block","src":"4656:136:5","statements":[{"AST":{"nodeType":"YulBlock","src":"4679:56:5","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4704:4:5"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4716:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4710:5:5"},"nodeType":"YulFunctionCall","src":"4710:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4697:6:5"},"nodeType":"YulFunctionCall","src":"4697:24:5"},"nodeType":"YulExpressionStatement","src":"4697:24:5"}]},"evmVersion":"london","externalReferences":[{"declaration":993,"isOffset":false,"isSlot":false,"src":"4704:4:5","valueSize":1},{"declaration":997,"isOffset":false,"isSlot":false,"src":"4716:3:5","valueSize":1}],"id":1011,"nodeType":"InlineAssembly","src":"4670:65:5"},{"expression":{"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1012,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4748:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4756:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4748:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1015,"nodeType":"ExpressionStatement","src":"4748:10:5"},{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1016,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":997,"src":"4772:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4779:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4772:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ExpressionStatement","src":"4772:9:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4634:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4641:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4634:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1021,"loopExpression":{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1007,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4645:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4652:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4645:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"4645:9:5"},"nodeType":"ForStatement","src":"4627:165:5"},{"assignments":[1023],"declarations":[{"constant":false,"id":1023,"mutability":"mutable","name":"mask","nameLocation":"4810:4:5","nodeType":"VariableDeclaration","scope":1038,"src":"4802:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1024,"nodeType":"VariableDeclarationStatement","src":"4802:12:5"},{"id":1036,"nodeType":"UncheckedBlock","src":"4824:61:5","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1025,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"4848:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4855:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4861:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1028,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"4866:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4861:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4860:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4855:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4855:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4848:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"4848:26:5"}]},{"AST":{"nodeType":"YulBlock","src":"4903:164:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4917:41:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4942:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4936:5:5"},"nodeType":"YulFunctionCall","src":"4936:10:5"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4952:4:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4948:3:5"},"nodeType":"YulFunctionCall","src":"4948:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4932:3:5"},"nodeType":"YulFunctionCall","src":"4932:26:5"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"4921:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4971:38:5","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4997:4:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4991:5:5"},"nodeType":"YulFunctionCall","src":"4991:11:5"},{"name":"mask","nodeType":"YulIdentifier","src":"5004:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4987:3:5"},"nodeType":"YulFunctionCall","src":"4987:22:5"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"4975:8:5","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"5029:4:5"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"5038:8:5"},{"name":"srcpart","nodeType":"YulIdentifier","src":"5048:7:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5035:2:5"},"nodeType":"YulFunctionCall","src":"5035:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5022:6:5"},"nodeType":"YulFunctionCall","src":"5022:35:5"},"nodeType":"YulExpressionStatement","src":"5022:35:5"}]},"evmVersion":"london","externalReferences":[{"declaration":993,"isOffset":false,"isSlot":false,"src":"4997:4:5","valueSize":1},{"declaration":993,"isOffset":false,"isSlot":false,"src":"5029:4:5","valueSize":1},{"declaration":1023,"isOffset":false,"isSlot":false,"src":"4952:4:5","valueSize":1},{"declaration":1023,"isOffset":false,"isSlot":false,"src":"5004:4:5","valueSize":1},{"declaration":997,"isOffset":false,"isSlot":false,"src":"4942:3:5","valueSize":1}],"id":1037,"nodeType":"InlineAssembly","src":"4894:173:5"}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"4142:280:5","text":" @custom:attribution https://github.com/Arachnid/solidity-stringutils\n @notice Copies a piece of memory to another location.\n @param _dest Destination location.\n @param _src  Source location.\n @param _len  Length of memory to copy."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"_memcpy","nameLocation":"4436:7:5","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"_dest","nameLocation":"4461:5:5","nodeType":"VariableDeclaration","scope":1039,"src":"4453:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"_src","nameLocation":"4484:4:5","nodeType":"VariableDeclaration","scope":1039,"src":"4476:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"4476:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"_len","nameLocation":"4506:4:5","nodeType":"VariableDeclaration","scope":1039,"src":"4498:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"4498:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4443:73:5"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"4530:0:5"},"scope":1134,"src":"4427:646:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1132,"nodeType":"Block","src":"5424:710:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1048,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"5438:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5438:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5454:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5438:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"5434:67:5","trueBody":{"id":1057,"nodeType":"Block","src":"5457:44:5","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5488:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5478:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1052,"name":"bytes","nodeType":"ElementaryTypeName","src":"5482:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5478:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1047,"id":1056,"nodeType":"Return","src":"5471:19:5"}]}},{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"len","nameLocation":"5519:3:5","nodeType":"VariableDeclaration","scope":1132,"src":"5511:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"5511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1061,"nodeType":"VariableDeclarationStatement","src":"5511:11:5"},{"assignments":[1063],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"i","nameLocation":"5540:1:5","nodeType":"VariableDeclaration","scope":1132,"src":"5532:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"5532:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1065,"initialValue":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5532:13:5"},{"body":{"id":1080,"nodeType":"Block","src":"5585:47:5","statements":[{"expression":{"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1073,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"5599:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1074,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"5606:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1076,"indexExpression":{"id":1075,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5612:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5606:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5606:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5599:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1079,"nodeType":"ExpressionStatement","src":"5599:22:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5562:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1067,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"5566:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5566:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5562:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1081,"loopExpression":{"expression":{"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5580:3:5","subExpression":{"id":1070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5580:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1072,"nodeType":"ExpressionStatement","src":"5580:3:5"},"nodeType":"ForStatement","src":"5555:77:5"},{"assignments":[1083],"declarations":[{"constant":false,"id":1083,"mutability":"mutable","name":"flattened","nameLocation":"5655:9:5","nodeType":"VariableDeclaration","scope":1132,"src":"5642:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1082,"name":"bytes","nodeType":"ElementaryTypeName","src":"5642:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1088,"initialValue":{"arguments":[{"id":1086,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"5677:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5667:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1084,"name":"bytes","nodeType":"ElementaryTypeName","src":"5671:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5667:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5642:39:5"},{"assignments":[1090],"declarations":[{"constant":false,"id":1090,"mutability":"mutable","name":"flattenedPtr","nameLocation":"5699:12:5","nodeType":"VariableDeclaration","scope":1132,"src":"5691:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"5691:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1091,"nodeType":"VariableDeclarationStatement","src":"5691:20:5"},{"AST":{"nodeType":"YulBlock","src":"5730:60:5","statements":[{"nodeType":"YulAssignment","src":"5744:36:5","value":{"arguments":[{"name":"flattened","nodeType":"YulIdentifier","src":"5764:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5775:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:5"},"nodeType":"YulFunctionCall","src":"5760:20:5"},"variableNames":[{"name":"flattenedPtr","nodeType":"YulIdentifier","src":"5744:12:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1083,"isOffset":false,"isSlot":false,"src":"5764:9:5","valueSize":1},{"declaration":1090,"isOffset":false,"isSlot":false,"src":"5744:12:5","valueSize":1}],"id":1092,"nodeType":"InlineAssembly","src":"5721:69:5"},{"body":{"id":1128,"nodeType":"Block","src":"5835:266:5","statements":[{"assignments":[1105],"declarations":[{"constant":false,"id":1105,"mutability":"mutable","name":"item","nameLocation":"5862:4:5","nodeType":"VariableDeclaration","scope":1128,"src":"5849:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1104,"name":"bytes","nodeType":"ElementaryTypeName","src":"5849:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1109,"initialValue":{"baseExpression":{"id":1106,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"5869:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1108,"indexExpression":{"id":1107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5875:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5869:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5849:28:5"},{"assignments":[1111],"declarations":[{"constant":false,"id":1111,"mutability":"mutable","name":"listPtr","nameLocation":"5900:7:5","nodeType":"VariableDeclaration","scope":1128,"src":"5892:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1110,"name":"uint256","nodeType":"ElementaryTypeName","src":"5892:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1112,"nodeType":"VariableDeclarationStatement","src":"5892:15:5"},{"AST":{"nodeType":"YulBlock","src":"5930:58:5","statements":[{"nodeType":"YulAssignment","src":"5948:26:5","value":{"arguments":[{"name":"item","nodeType":"YulIdentifier","src":"5963:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"5969:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5959:3:5"},"nodeType":"YulFunctionCall","src":"5959:15:5"},"variableNames":[{"name":"listPtr","nodeType":"YulIdentifier","src":"5948:7:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1105,"isOffset":false,"isSlot":false,"src":"5963:4:5","valueSize":1},{"declaration":1111,"isOffset":false,"isSlot":false,"src":"5948:7:5","valueSize":1}],"id":1113,"nodeType":"InlineAssembly","src":"5921:67:5"},{"expression":{"arguments":[{"id":1115,"name":"flattenedPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6010:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1116,"name":"listPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"6024:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1117,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"6033:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6033:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1114,"name":"_memcpy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"6002:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6002:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1120,"nodeType":"ExpressionStatement","src":"6002:43:5"},{"expression":{"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1121,"name":"flattenedPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"6059:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1122,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"6075:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1124,"indexExpression":{"id":1123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"6081:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6075:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6075:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6059:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1127,"nodeType":"ExpressionStatement","src":"6059:31:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5812:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1098,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"5816:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"5816:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1129,"initializationExpression":{"expression":{"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1093,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5805:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5809:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5805:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1096,"nodeType":"ExpressionStatement","src":"5805:5:5"},"loopExpression":{"expression":{"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5830:3:5","subExpression":{"id":1101,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5830:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ExpressionStatement","src":"5830:3:5"},"nodeType":"ForStatement","src":"5800:301:5"},{"expression":{"id":1130,"name":"flattened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"6118:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1047,"id":1131,"nodeType":"Return","src":"6111:16:5"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"5079:264:5","text":" @custom:attribution https://github.com/sammayo/solidity-rlp-encoder\n @notice Flattens a list of byte strings into one byte string.\n @param _list List of byte strings to flatten.\n @return The flattened byte string."},"id":1133,"implemented":true,"kind":"function","modifiers":[],"name":"_flatten","nameLocation":"5357:8:5","nodeType":"FunctionDefinition","parameters":{"id":1044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1043,"mutability":"mutable","name":"_list","nameLocation":"5381:5:5","nodeType":"VariableDeclaration","scope":1133,"src":"5366:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"5366:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1042,"nodeType":"ArrayTypeName","src":"5366:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5365:22:5"},"returnParameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"5410:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1045,"name":"bytes","nodeType":"ElementaryTypeName","src":"5410:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5409:14:5"},"scope":1134,"src":"5348:786:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1135,"src":"388:5748:5","usedErrors":[]}],"src":"32:6105:5"},"id":5},"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol":{"ast":{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol","exportedSymbols":{"Constants":[14],"CrossDomainMessenger":[1642],"CrossDomainMessengerLegacySpacer0":[1151],"CrossDomainMessengerLegacySpacer1":[1192],"Encoding":[307],"Hashing":[529],"Initializable":[1793],"SafeCall":[575]},"id":1643,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1136,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":1138,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1643,"sourceUnit":1794,"src":"57:98:6","symbolAliases":[{"foreign":{"id":1137,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"66:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol","file":"../libraries/SafeCall.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1643,"sourceUnit":576,"src":"156:53:6","symbolAliases":[{"foreign":{"id":1139,"name":"SafeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"165:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol","file":"../libraries/Hashing.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1643,"sourceUnit":530,"src":"210:51:6","symbolAliases":[{"foreign":{"id":1141,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"219:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol","file":"../libraries/Encoding.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1643,"sourceUnit":308,"src":"262:53:6","symbolAliases":[{"foreign":{"id":1143,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"271:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol","file":"../libraries/Constants.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1643,"sourceUnit":15,"src":"316:55:6","symbolAliases":[{"foreign":{"id":1145,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"325:9:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CrossDomainMessengerLegacySpacer0","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"373:299:6","text":" @custom:legacy\n @title CrossDomainMessengerLegacySpacer0\n @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n         libAddressManager variable used to exist. Must be the first contract in the inheritance\n         tree of the CrossDomainMessenger."},"fullyImplemented":true,"id":1151,"linearizedBaseContracts":[1151],"name":"CrossDomainMessengerLegacySpacer0","nameLocation":"682:33:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1148,"nodeType":"StructuredDocumentation","src":"722:124:6","text":" @custom:legacy\n @custom:spacer libAddressManager\n @notice Spacer for backwards compatibility."},"id":1150,"mutability":"mutable","name":"spacer_0_0_20","nameLocation":"867:13:6","nodeType":"VariableDeclaration","scope":1151,"src":"851:29:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"}],"scope":1643,"src":"673:210:6","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"CrossDomainMessengerLegacySpacer1","contractDependencies":[],"contractKind":"contract","documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"885:324:6","text":" @custom:legacy\n @title CrossDomainMessengerLegacySpacer1\n @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n         PausableUpgradable and OwnableUpgradeable variables used to exist. Must be\n         the third contract in the inheritance tree of the CrossDomainMessenger."},"fullyImplemented":true,"id":1192,"linearizedBaseContracts":[1192],"name":"CrossDomainMessengerLegacySpacer1","nameLocation":"1219:33:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"1259:200:6","text":" @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         ContextUpgradable via OwnableUpgradeable."},"id":1157,"mutability":"mutable","name":"spacer_1_0_1600","nameLocation":"1484:15:6","nodeType":"VariableDeclaration","scope":1192,"src":"1464:35:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage","typeString":"uint256[50]"},"typeName":{"baseType":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1156,"length":{"hexValue":"3530","id":1155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1472:2:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"ArrayTypeName","src":"1464:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$50_storage_ptr","typeString":"uint256[50]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"1506:171:6","text":" @custom:legacy\n @custom:spacer _owner\n @notice Spacer for backwards compatibility.\n         Come from OpenZeppelin OwnableUpgradeable."},"id":1160,"mutability":"mutable","name":"spacer_51_0_20","nameLocation":"1698:14:6","nodeType":"VariableDeclaration","scope":1192,"src":"1682:30:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"1682:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"1719:193:6","text":" @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         ContextUpgradable via PausableUpgradable."},"id":1165,"mutability":"mutable","name":"spacer_52_0_1568","nameLocation":"1937:16:6","nodeType":"VariableDeclaration","scope":1192,"src":"1917:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1917:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1164,"length":{"hexValue":"3439","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1925:2:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"1917:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"1960:173:6","text":" @custom:legacy\n @custom:spacer _paused\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         PausableUpgradable."},"id":1168,"mutability":"mutable","name":"spacer_101_0_1","nameLocation":"2151:14:6","nodeType":"VariableDeclaration","scope":1192,"src":"2138:27:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1167,"name":"bool","nodeType":"ElementaryTypeName","src":"2138:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"2172:171:6","text":" @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         PausableUpgradable."},"id":1173,"mutability":"mutable","name":"spacer_102_0_1568","nameLocation":"2368:17:6","nodeType":"VariableDeclaration","scope":1192,"src":"2348:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2348:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"length":{"hexValue":"3439","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2356:2:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2348:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"2392:151:6","text":" @custom:legacy\n @custom:spacer ReentrancyGuardUpgradeable's `_status` field.\n @notice Spacer for backwards compatibility"},"id":1176,"mutability":"mutable","name":"spacer_151_0_32","nameLocation":"2564:15:6","nodeType":"VariableDeclaration","scope":1192,"src":"2548:31:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"2548:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"documentation":{"id":1177,"nodeType":"StructuredDocumentation","src":"2586:110:6","text":" @custom:spacer ReentrancyGuardUpgradeable\n @notice Spacer for backwards compatibility"},"id":1181,"mutability":"mutable","name":"__gap_reentrancy_guard","nameLocation":"2721:22:6","nodeType":"VariableDeclaration","scope":1192,"src":"2701:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1180,"length":{"hexValue":"3439","id":1179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2709:2:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2701:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"},{"constant":false,"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"2750:122:6","text":" @custom:legacy\n @custom:spacer blockedMessages\n @notice Spacer for backwards compatibility."},"id":1186,"mutability":"mutable","name":"spacer_201_0_32","nameLocation":"2910:15:6","nodeType":"VariableDeclaration","scope":1192,"src":"2877:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1185,"keyType":{"id":1183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2885:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2877:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1184,"name":"bool","nodeType":"ElementaryTypeName","src":"2896:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"documentation":{"id":1187,"nodeType":"StructuredDocumentation","src":"2932:122:6","text":" @custom:legacy\n @custom:spacer relayedMessages\n @notice Spacer for backwards compatibility."},"id":1191,"mutability":"mutable","name":"spacer_202_0_32","nameLocation":"3092:15:6","nodeType":"VariableDeclaration","scope":1192,"src":"3059:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1190,"keyType":{"id":1188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3067:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"3059:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1189,"name":"bool","nodeType":"ElementaryTypeName","src":"3078:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"}],"scope":1643,"src":"1210:1900:6","usedErrors":[]},{"abstract":true,"baseContracts":[{"baseName":{"id":1194,"name":"CrossDomainMessengerLegacySpacer0","nodeType":"IdentifierPath","referencedDeclaration":1151,"src":"3780:33:6"},"id":1195,"nodeType":"InheritanceSpecifier","src":"3780:33:6"},{"baseName":{"id":1196,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1793,"src":"3819:13:6"},"id":1197,"nodeType":"InheritanceSpecifier","src":"3819:13:6"},{"baseName":{"id":1198,"name":"CrossDomainMessengerLegacySpacer1","nodeType":"IdentifierPath","referencedDeclaration":1192,"src":"3838:33:6"},"id":1199,"nodeType":"InheritanceSpecifier","src":"3838:33:6"}],"canonicalName":"CrossDomainMessenger","contractDependencies":[],"contractKind":"contract","documentation":{"id":1193,"nodeType":"StructuredDocumentation","src":"3112:621:6","text":" @custom:upgradeable\n @title CrossDomainMessenger\n @notice CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2\n         cross-chain messenger contracts. It's designed to be a universal interface that only\n         needs to be extended slightly to provide low-level message passing functionality on each\n         chain it's deployed on. Currently only designed for message passing between two paired\n         chains and does not support one-to-many interactions.\n         Any changes to this contract MUST result in a semver bump for contracts that inherit it."},"fullyImplemented":false,"id":1642,"linearizedBaseContracts":[1642,1192,1793,1151],"name":"CrossDomainMessenger","nameLocation":"3752:20:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1200,"nodeType":"StructuredDocumentation","src":"3878:62:6","text":" @notice Current message version identifier."},"functionSelector":"3f827a5a","id":1203,"mutability":"constant","name":"MESSAGE_VERSION","nameLocation":"3968:15:6","nodeType":"VariableDeclaration","scope":1642,"src":"3945:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1201,"name":"uint16","nodeType":"ElementaryTypeName","src":"3945:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3986:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"documentation":{"id":1204,"nodeType":"StructuredDocumentation","src":"3994:81:6","text":" @notice Constant overhead added to the base gas for a message."},"functionSelector":"7dea7cc3","id":1207,"mutability":"constant","name":"MIN_GAS_CONSTANT_OVERHEAD","nameLocation":"4103:25:6","nodeType":"VariableDeclaration","scope":1642,"src":"4080:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1205,"name":"uint64","nodeType":"ElementaryTypeName","src":"4080:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3230305f303030","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:7:6","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200_000"},"visibility":"public"},{"constant":true,"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"4145:94:6","text":" @notice Numerator for dynamic overhead added to the base gas for a message."},"functionSelector":"2828d7e8","id":1211,"mutability":"constant","name":"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR","nameLocation":"4267:34:6","nodeType":"VariableDeclaration","scope":1642,"src":"4244:64:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1209,"name":"uint64","nodeType":"ElementaryTypeName","src":"4244:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31303136","id":1210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4304:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1016_by_1","typeString":"int_const 1016"},"value":"1016"},"visibility":"public"},{"constant":true,"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"4315:96:6","text":" @notice Denominator for dynamic overhead added to the base gas for a message."},"functionSelector":"0c568498","id":1215,"mutability":"constant","name":"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR","nameLocation":"4439:36:6","nodeType":"VariableDeclaration","scope":1642,"src":"4416:66:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1213,"name":"uint64","nodeType":"ElementaryTypeName","src":"4416:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"31303030","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4478:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"public"},{"constant":true,"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"4489:94:6","text":" @notice Extra gas added to base gas for each byte of calldata in a message."},"functionSelector":"028f85f7","id":1219,"mutability":"constant","name":"MIN_GAS_CALLDATA_OVERHEAD","nameLocation":"4611:25:6","nodeType":"VariableDeclaration","scope":1642,"src":"4588:53:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1217,"name":"uint64","nodeType":"ElementaryTypeName","src":"4588:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"value":{"hexValue":"3136","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4639:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"public"},{"constant":false,"documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"4648:98:6","text":" @notice Address of the paired CrossDomainMessenger contract on the other chain."},"functionSelector":"9fce812c","id":1222,"mutability":"immutable","name":"OTHER_MESSENGER","nameLocation":"4776:15:6","nodeType":"VariableDeclaration","scope":1642,"src":"4751:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1221,"name":"address","nodeType":"ElementaryTypeName","src":"4751:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"4798:257:6","text":" @notice Mapping of message hashes to boolean receipt values. Note that a message will only\n         be present in this mapping if it has successfully been relayed on this chain, and\n         can therefore not be relayed again."},"functionSelector":"b1b1b209","id":1227,"mutability":"mutable","name":"successfulMessages","nameLocation":"5092:18:6","nodeType":"VariableDeclaration","scope":1642,"src":"5060:50:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1226,"keyType":{"id":1224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5068:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"5060:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1225,"name":"bool","nodeType":"ElementaryTypeName","src":"5079:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"5117:347:6","text":" @notice Address of the sender of the currently executing message on the other chain. If the\n         value of this variable is the default value (0x00000000...dead) then no message is\n         currently being executed. Use the xDomainMessageSender getter which will throw an\n         error if this is the case."},"id":1230,"mutability":"mutable","name":"xDomainMsgSender","nameLocation":"5486:16:6","nodeType":"VariableDeclaration","scope":1642,"src":"5469:33:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1229,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"5509:270:6","text":" @notice Nonce for the next message to be sent, without the message version applied. Use the\n         messageNonce getter which will insert the message version into the nonce to give you\n         the actual nonce to be used for the message."},"id":1233,"mutability":"mutable","name":"msgNonce","nameLocation":"5801:8:6","nodeType":"VariableDeclaration","scope":1642,"src":"5784:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":1232,"name":"uint240","nodeType":"ElementaryTypeName","src":"5784:7:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"},{"constant":false,"documentation":{"id":1234,"nodeType":"StructuredDocumentation","src":"5816:259:6","text":" @notice Mapping of message hashes to a boolean if and only if the message has failed to be\n         executed at least once. A message will not be present in this mapping if it\n         successfully executed on the first attempt."},"functionSelector":"a4e7f8bd","id":1238,"mutability":"mutable","name":"failedMessages","nameLocation":"6112:14:6","nodeType":"VariableDeclaration","scope":1642,"src":"6080:46:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1237,"keyType":{"id":1235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6088:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"6080:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1236,"name":"bool","nodeType":"ElementaryTypeName","src":"6099:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"6133:67:6","text":" @notice A mapping of hashes to reentrancy locks."},"id":1243,"mutability":"mutable","name":"reentrancyLocks","nameLocation":"6239:15:6","nodeType":"VariableDeclaration","scope":1642,"src":"6205:49:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":1242,"keyType":{"id":1240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"6205:24:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":1241,"name":"bool","nodeType":"ElementaryTypeName","src":"6224:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"6261:228:6","text":" @notice Reserve extra slots in the storage layout for future upgrades.\n         A gap size of 41 was chosen here, so that the first slot used in a child contract\n         would be a multiple of 50."},"id":1248,"mutability":"mutable","name":"__gap","nameLocation":"6514:5:6","nodeType":"VariableDeclaration","scope":1642,"src":"6494:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$41_storage","typeString":"uint256[41]"},"typeName":{"baseType":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1247,"length":{"hexValue":"3431","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6502:2:6","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"ArrayTypeName","src":"6494:11:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$41_storage_ptr","typeString":"uint256[41]"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"6526:444:6","text":" @notice Emitted whenever a message is sent to the other chain.\n @param target       Address of the recipient of the message.\n @param sender       Address of the sender of the message.\n @param message      Message to trigger the recipient address with.\n @param messageNonce Unique nonce attached to the message.\n @param gasLimit     Minimum gas limit that the message can be executed with."},"eventSelector":"cb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a","id":1261,"name":"SentMessage","nameLocation":"6981:11:6","nodeType":"EventDefinition","parameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"7018:6:6","nodeType":"VariableDeclaration","scope":1261,"src":"7002:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"7002:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"7042:6:6","nodeType":"VariableDeclaration","scope":1261,"src":"7034:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"7034:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"7064:7:6","nodeType":"VariableDeclaration","scope":1261,"src":"7058:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1254,"name":"bytes","nodeType":"ElementaryTypeName","src":"7058:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1257,"indexed":false,"mutability":"mutable","name":"messageNonce","nameLocation":"7089:12:6","nodeType":"VariableDeclaration","scope":1261,"src":"7081:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"7081:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1259,"indexed":false,"mutability":"mutable","name":"gasLimit","nameLocation":"7119:8:6","nodeType":"VariableDeclaration","scope":1261,"src":"7111:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"7111:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6992:141:6"},"src":"6975:159:6"},{"anonymous":false,"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"7140:347:6","text":" @notice Additional event data to emit, required as of Bedrock. Cannot be merged with the\n         SentMessage event without breaking the ABI of this contract, this is good enough.\n @param sender Address of the sender of the message.\n @param value  ETH value sent along with the message to the recipient."},"eventSelector":"8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d546","id":1268,"name":"SentMessageExtension1","nameLocation":"7498:21:6","nodeType":"EventDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"7536:6:6","nodeType":"VariableDeclaration","scope":1268,"src":"7520:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"7520:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"7552:5:6","nodeType":"VariableDeclaration","scope":1268,"src":"7544:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7519:39:6"},"src":"7492:67:6"},{"anonymous":false,"documentation":{"id":1269,"nodeType":"StructuredDocumentation","src":"7565:159:6","text":" @notice Emitted whenever a message is successfully relayed on this chain.\n @param msgHash Hash of the message that was relayed."},"eventSelector":"4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c","id":1273,"name":"RelayedMessage","nameLocation":"7735:14:6","nodeType":"EventDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"7766:7:6","nodeType":"VariableDeclaration","scope":1273,"src":"7750:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7750:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7749:25:6"},"src":"7729:46:6"},{"anonymous":false,"documentation":{"id":1274,"nodeType":"StructuredDocumentation","src":"7781:164:6","text":" @notice Emitted whenever a message fails to be relayed on this chain.\n @param msgHash Hash of the message that failed to be relayed."},"eventSelector":"99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f","id":1278,"name":"FailedRelayedMessage","nameLocation":"7956:20:6","nodeType":"EventDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"indexed":true,"mutability":"mutable","name":"msgHash","nameLocation":"7993:7:6","nodeType":"VariableDeclaration","scope":1278,"src":"7977:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7977:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7976:25:6"},"src":"7950:52:6"},{"body":{"id":1288,"nodeType":"Block","src":"8137:50:6","statements":[{"expression":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1284,"name":"OTHER_MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"8147:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1285,"name":"_otherMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"8165:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8147:33:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1287,"nodeType":"ExpressionStatement","src":"8147:33:6"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"8008:87:6","text":" @param _otherMessenger Address of the messenger on the paired chain."},"id":1289,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"_otherMessenger","nameLocation":"8120:15:6","nodeType":"VariableDeclaration","scope":1289,"src":"8112:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"8112:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8111:25:6"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"8137:0:6"},"scope":1642,"src":"8100:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1345,"nodeType":"Block","src":"8916:949:6","statements":[{"expression":{"arguments":[{"id":1300,"name":"OTHER_MESSENGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1222,"src":"9301:15:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1302,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9338:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1303,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"9348:12:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1301,"name":"baseGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"9330:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint32_$returns$_t_uint64_$","typeString":"function (bytes calldata,uint32) pure returns (uint64)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9330:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":1305,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9375:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"9375:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"expression":{"expression":{"id":1309,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9438:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_CrossDomainMessenger_$1642","typeString":"contract CrossDomainMessenger"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"relayMessage","nodeType":"MemberAccess","referencedDeclaration":1540,"src":"9438:17:6","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) payable external"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"9438:26:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1312,"name":"messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9482:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9482:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1314,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9514:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9514:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"9542:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1317,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9567:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"9567:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1319,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"9594:12:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":1320,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9624:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1307,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9398:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"9398:22:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9398:248:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1299,"name":"_sendMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"9275:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint64_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint64,uint256,bytes memory)"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9275:381:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1323,"nodeType":"ExpressionStatement","src":"9275:381:6"},{"eventCall":{"arguments":[{"id":1325,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"9684:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1326,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9693:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9693:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9705:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1329,"name":"messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"9715:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9715:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1331,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"9731:12:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1324,"name":"SentMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"9672:11:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,bytes memory,uint256,uint256)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9672:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1333,"nodeType":"EmitStatement","src":"9667:77:6"},{"eventCall":{"arguments":[{"expression":{"id":1335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9781:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9781:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1337,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9793:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"9793:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1334,"name":"SentMessageExtension1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"9759:21:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9759:44:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1340,"nodeType":"EmitStatement","src":"9754:49:6"},{"id":1344,"nodeType":"UncheckedBlock","src":"9814:45:6","statements":[{"expression":{"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9838:10:6","subExpression":{"id":1341,"name":"msgNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"9840:8:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"id":1343,"nodeType":"ExpressionStatement","src":"9838:10:6"}]}]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"8193:587:6","text":" @notice Sends a message to some target address on the other chain. Note that if the call\n         always reverts, then the message will be unrelayable, and any ETH sent will be\n         permanently locked. The same will occur if the target on the other chain is\n         considered unsafe (see the _isUnsafeTarget() function).\n @param _target      Target contract or wallet address.\n @param _message     Message to trigger the target address with.\n @param _minGasLimit Minimum gas limit that the message can be executed with."},"functionSelector":"3dbb202b","id":1346,"implemented":true,"kind":"function","modifiers":[],"name":"sendMessage","nameLocation":"8794:11:6","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"_target","nameLocation":"8823:7:6","nodeType":"VariableDeclaration","scope":1346,"src":"8815:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"8815:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"_message","nameLocation":"8855:8:6","nodeType":"VariableDeclaration","scope":1346,"src":"8840:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1293,"name":"bytes","nodeType":"ElementaryTypeName","src":"8840:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"_minGasLimit","nameLocation":"8880:12:6","nodeType":"VariableDeclaration","scope":1346,"src":"8873:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1295,"name":"uint32","nodeType":"ElementaryTypeName","src":"8873:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8805:93:6"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"8916:0:6"},"scope":1642,"src":"8785:1080:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1539,"nodeType":"Block","src":"10773:3450:6","statements":[{"assignments":[null,1363],"declarations":[null,{"constant":false,"id":1363,"mutability":"mutable","name":"version","nameLocation":"10793:7:6","nodeType":"VariableDeclaration","scope":1539,"src":"10786:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1362,"name":"uint16","nodeType":"ElementaryTypeName","src":"10786:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":1368,"initialValue":{"arguments":[{"id":1366,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"10834:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1364,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"10804:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$307_$","typeString":"type(library Encoding)"}},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decodeVersionedNonce","nodeType":"MemberAccess","referencedDeclaration":306,"src":"10804:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$","typeString":"function (uint256) pure returns (uint240,uint16)"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10804:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint240_$_t_uint16_$","typeString":"tuple(uint240,uint16)"}},"nodeType":"VariableDeclarationStatement","src":"10783:58:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"10872:7:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10882:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10872:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206f6e6c792076657273696f6e2030206f722031206d657373616765732061726520737570706f7274656420617420746869732074696d65","id":1373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10897:79:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032","typeString":"literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""},"value":"CrossDomainMessenger: only version 0 or 1 messages are supported at this time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032","typeString":"literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""}],"id":1369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10851:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10851:135:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1375,"nodeType":"ExpressionStatement","src":"10851:135:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1376,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"11188:7:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11199:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11188:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1399,"nodeType":"IfStatement","src":"11184:293:6","trueBody":{"id":1398,"nodeType":"Block","src":"11202:275:6","statements":[{"assignments":[1380],"declarations":[{"constant":false,"id":1380,"mutability":"mutable","name":"oldHash","nameLocation":"11224:7:6","nodeType":"VariableDeclaration","scope":1398,"src":"11216:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11216:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1388,"initialValue":{"arguments":[{"id":1383,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11267:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1384,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"11276:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1385,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"11285:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1386,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"11295:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1381,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"11234:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashing_$529_$","typeString":"type(library Hashing)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"hashCrossDomainMessageV0","nodeType":"MemberAccess","referencedDeclaration":445,"src":"11234:32:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes32)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11234:68:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11216:86:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1390,"name":"successfulMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"11341:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1392,"indexExpression":{"id":1391,"name":"oldHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"11360:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11341:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11372:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11341:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206c6567616379207769746864726177616c20616c72656164792072656c61796564","id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11395:57:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1","typeString":"literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""},"value":"CrossDomainMessenger: legacy withdrawal already relayed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1","typeString":"literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""}],"id":1389,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11316:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11316:150:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1397,"nodeType":"ExpressionStatement","src":"11316:150:6"}]}},{"assignments":[1401],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"versionedHash","nameLocation":"11655:13:6","nodeType":"VariableDeclaration","scope":1539,"src":"11647:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1400,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11647:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1411,"initialValue":{"arguments":[{"id":1404,"name":"_nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"11717:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1405,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"11737:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1406,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"11758:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1407,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"11779:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1408,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"11799:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1409,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"11825:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1402,"name":"Hashing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"11671:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Hashing_$529_$","typeString":"type(library Hashing)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"hashCrossDomainMessageV1","nodeType":"MemberAccess","referencedDeclaration":476,"src":"11671:32:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes32)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11671:172:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"11647:196:6"},{"condition":{"baseExpression":{"id":1412,"name":"reentrancyLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"11938:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1414,"indexExpression":{"id":1413,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"11954:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11938:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"11934:102:6","trueBody":{"id":1419,"nodeType":"Block","src":"11970:66:6","statements":[{"expression":{"arguments":[{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11991:33:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1415,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11984:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11984:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"ExpressionStatement","src":"11984:41:6"}]}},{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1421,"name":"reentrancyLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"12104:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1423,"indexExpression":{"id":1422,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12120:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12104:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12137:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12104:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1426,"nodeType":"ExpressionStatement","src":"12104:37:6"},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1427,"name":"_isOtherMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"12156:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12156:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1459,"nodeType":"Block","src":"12421:329:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1445,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12460:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"12460:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12460:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d757374206265207a65726f20756e6c657373206d6573736167652069732066726f6d20612073797374656d2061646472657373","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12492:82:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5","typeString":"literal_string \"CrossDomainMessenger: value must be zero unless message is from a system address\""},"value":"CrossDomainMessenger: value must be zero unless message is from a system address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5","typeString":"literal_string \"CrossDomainMessenger: value must be zero unless message is from a system address\""}],"id":1444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12435:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12435:153:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"12435:153:6"},{"expression":{"arguments":[{"baseExpression":{"id":1453,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"12628:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1455,"indexExpression":{"id":1454,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12643:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12628:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206d6573736167652063616e6e6f74206265207265706c61796564","id":1456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12675:50:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d","typeString":"literal_string \"CrossDomainMessenger: message cannot be replayed\""},"value":"CrossDomainMessenger: message cannot be replayed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d","typeString":"literal_string \"CrossDomainMessenger: message cannot be replayed\""}],"id":1452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12603:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12603:136:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1458,"nodeType":"ExpressionStatement","src":"12603:136:6"}]},"id":1460,"nodeType":"IfStatement","src":"12152:598:6","trueBody":{"id":1443,"nodeType":"Block","src":"12177:238:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1430,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12332:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"12332:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1432,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"12345:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12332:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1429,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"12325:6:6","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12325:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1435,"nodeType":"ExpressionStatement","src":"12325:27:6"},{"expression":{"arguments":[{"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12373:30:6","subExpression":{"baseExpression":{"id":1437,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"12374:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1439,"indexExpression":{"id":1438,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12389:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12374:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1436,"name":"assert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-3,"src":"12366:6:6","typeDescriptions":{"typeIdentifier":"t_function_assert_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12366:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"ExpressionStatement","src":"12366:38:6"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1463,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"12797:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1462,"name":"_isUnsafeTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"12781:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12781:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":1465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12809:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12781:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e64206d65737361676520746f20626c6f636b65642073797374656d2061646472657373","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12828:69:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5","typeString":"literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""},"value":"CrossDomainMessenger: cannot send message to blocked system address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5","typeString":"literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""}],"id":1461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12760:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12760:147:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"ExpressionStatement","src":"12760:147:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1471,"name":"successfulMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"12939:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1473,"indexExpression":{"id":1472,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"12958:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12939:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"66616c7365","id":1474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12976:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"12939:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206d6573736167652068617320616c7265616479206265656e2072656c61796564","id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12995:56:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150","typeString":"literal_string \"CrossDomainMessenger: message has already been relayed\""},"value":"CrossDomainMessenger: message has already been relayed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150","typeString":"literal_string \"CrossDomainMessenger: message has already been relayed\""}],"id":1470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12918:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12918:143:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"ExpressionStatement","src":"12918:143:6"},{"expression":{"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1479,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"13072:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1480,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"13091:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13072:26:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1482,"nodeType":"ExpressionStatement","src":"13072:26:6"},{"assignments":[1484],"declarations":[{"constant":false,"id":1484,"mutability":"mutable","name":"success","nameLocation":"13113:7:6","nodeType":"VariableDeclaration","scope":1539,"src":"13108:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1483,"name":"bool","nodeType":"ElementaryTypeName","src":"13108:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1492,"initialValue":{"arguments":[{"id":1487,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1353,"src":"13147:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1488,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"13156:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1489,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"13170:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1490,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"13178:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1485,"name":"SafeCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"13123:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCall_$575_$","typeString":"type(library SafeCall)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"callWithMinGas","nodeType":"MemberAccess","referencedDeclaration":574,"src":"13123:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,uint256,bytes memory) returns (bool)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13123:64:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13108:79:6"},{"expression":{"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1493,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"13197:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1494,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"13216:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$14_$","typeString":"type(library Constants)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DEFAULT_L2_SENDER","nodeType":"MemberAccess","referencedDeclaration":13,"src":"13216:27:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13197:46:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1497,"nodeType":"ExpressionStatement","src":"13197:46:6"},{"condition":{"id":1498,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1484,"src":"13258:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1531,"nodeType":"Block","src":"13386:725:6","statements":[{"expression":{"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1510,"name":"failedMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"13400:14:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1512,"indexExpression":{"id":1511,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"13415:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13400:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13432:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13400:36:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1515,"nodeType":"ExpressionStatement","src":"13400:36:6"},{"eventCall":{"arguments":[{"id":1517,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"13476:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1516,"name":"FailedRelayedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"13455:20:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13455:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1519,"nodeType":"EmitStatement","src":"13450:40:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1520,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"13970:2:6","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"origin","nodeType":"MemberAccess","src":"13970:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1522,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"13983:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$14_$","typeString":"type(library Constants)"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ESTIMATION_ADDRESS","nodeType":"MemberAccess","referencedDeclaration":9,"src":"13983:28:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13970:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1530,"nodeType":"IfStatement","src":"13966:135:6","trueBody":{"id":1529,"nodeType":"Block","src":"14013:88:6","statements":[{"expression":{"arguments":[{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2072656c6179206d657373616765","id":1526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14038:47:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288","typeString":"literal_string \"CrossDomainMessenger: failed to relay message\""},"value":"CrossDomainMessenger: failed to relay message"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288","typeString":"literal_string \"CrossDomainMessenger: failed to relay message\""}],"id":1525,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14031:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14031:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"ExpressionStatement","src":"14031:55:6"}]}}]},"id":1532,"nodeType":"IfStatement","src":"13254:857:6","trueBody":{"id":1509,"nodeType":"Block","src":"13267:113:6","statements":[{"expression":{"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1499,"name":"successfulMessages","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"13281:18:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1501,"indexExpression":{"id":1500,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"13300:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13281:33:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13317:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13281:40:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1504,"nodeType":"ExpressionStatement","src":"13281:40:6"},{"eventCall":{"arguments":[{"id":1506,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"13355:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1505,"name":"RelayedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"13340:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13340:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1508,"nodeType":"EmitStatement","src":"13335:34:6"}]}},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1533,"name":"reentrancyLocks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"14178:15:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":1535,"indexExpression":{"id":1534,"name":"versionedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"14194:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14178:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14211:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14178:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1538,"nodeType":"ExpressionStatement","src":"14178:38:6"}]},"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"9871:691:6","text":" @notice Relays a message that was sent by the other CrossDomainMessenger contract. Can only\n         be executed via cross-chain call from the other messenger OR if the message was\n         already received once and is currently being replayed.\n @param _nonce       Nonce of the message being relayed.\n @param _sender      Address of the user who sent the message.\n @param _target      Address that the message is targeted at.\n @param _value       ETH value to send with the message.\n @param _minGasLimit Minimum amount of gas that the message can be executed with.\n @param _message     Message to send to the target."},"functionSelector":"d764ad0b","id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"relayMessage","nameLocation":"10576:12:6","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"_nonce","nameLocation":"10606:6:6","nodeType":"VariableDeclaration","scope":1540,"src":"10598:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"10598:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"_sender","nameLocation":"10630:7:6","nodeType":"VariableDeclaration","scope":1540,"src":"10622:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1350,"name":"address","nodeType":"ElementaryTypeName","src":"10622:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1353,"mutability":"mutable","name":"_target","nameLocation":"10655:7:6","nodeType":"VariableDeclaration","scope":1540,"src":"10647:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"10647:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"_value","nameLocation":"10680:6:6","nodeType":"VariableDeclaration","scope":1540,"src":"10672:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"10672:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"_minGasLimit","nameLocation":"10704:12:6","nodeType":"VariableDeclaration","scope":1540,"src":"10696:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"10696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"_message","nameLocation":"10741:8:6","nodeType":"VariableDeclaration","scope":1540,"src":"10726:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1358,"name":"bytes","nodeType":"ElementaryTypeName","src":"10726:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10588:167:6"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[],"src":"10773:0:6"},"scope":1642,"src":"10567:3656:6","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1556,"nodeType":"Block","src":"14693:198:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1547,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14724:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1548,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"14744:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$14_$","typeString":"type(library Constants)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DEFAULT_L2_SENDER","nodeType":"MemberAccess","referencedDeclaration":13,"src":"14744:27:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14724:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d65737361676553656e646572206973206e6f7420736574","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14785:55:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398","typeString":"literal_string \"CrossDomainMessenger: xDomainMessageSender is not set\""},"value":"CrossDomainMessenger: xDomainMessageSender is not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398","typeString":"literal_string \"CrossDomainMessenger: xDomainMessageSender is not set\""}],"id":1546,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14703:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14703:147:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"ExpressionStatement","src":"14703:147:6"},{"expression":{"id":1554,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"14868:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1545,"id":1555,"nodeType":"Return","src":"14861:23:6"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"14229:395:6","text":" @notice Retrieves the address of the contract or wallet that initiated the currently\n         executing message on the other chain. Will throw an error if there is no message\n         currently being executed. Allows the recipient of a call to see who triggered it.\n @return Address of the sender of the currently executing message on the other chain."},"functionSelector":"6e296e45","id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"xDomainMessageSender","nameLocation":"14638:20:6","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"14658:2:6"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"14684:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"14684:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14683:9:6"},"scope":1642,"src":"14629:262:6","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1569,"nodeType":"Block","src":"15285:80:6","statements":[{"expression":{"arguments":[{"id":1565,"name":"msgNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"15332:8:6","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},{"id":1566,"name":"MESSAGE_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"15342:15:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint240","typeString":"uint240"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"expression":{"id":1563,"name":"Encoding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"15302:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Encoding_$307_$","typeString":"type(library Encoding)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encodeVersionedNonce","nodeType":"MemberAccess","referencedDeclaration":284,"src":"15302:29:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint240_$_t_uint16_$returns$_t_uint256_$","typeString":"function (uint240,uint16) pure returns (uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15302:56:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1562,"id":1568,"nodeType":"Return","src":"15295:63:6"}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"14897:329:6","text":" @notice Retrieves the next message nonce. Message version will be added to the upper two\n         bytes of the message nonce. Message version allows us to treat messages as having\n         different structures.\n @return Nonce of the next message to be sent, with added message version."},"functionSelector":"ecc70428","id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"messageNonce","nameLocation":"15240:12:6","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"15252:2:6"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1570,"src":"15276:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"15276:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:9:6"},"scope":1642,"src":"15231:134:6","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1602,"nodeType":"Block","src":"16093:616:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1582,"name":"_minGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"16421:12:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":1581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16414:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1580,"name":"uint64","nodeType":"ElementaryTypeName","src":"16414:6:6","typeDescriptions":{}}},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16414:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1584,"name":"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"16437:34:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16414:57:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1586,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16413:59:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1587,"name":"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"16491:36:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16413:114:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16412:116:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1592,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"16584:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"16584:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16577:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1590,"name":"uint64","nodeType":"ElementaryTypeName","src":"16577:6:6","typeDescriptions":{}}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16577:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1595,"name":"MIN_GAS_CALLDATA_OVERHEAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"16603:25:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16577:51:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":1597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16576:53:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16412:217:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1599,"name":"MIN_GAS_CONSTANT_OVERHEAD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"16677:25:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16412:290:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":1579,"id":1601,"nodeType":"Return","src":"16361:341:6"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"15371:625:6","text":" @notice Computes the amount of gas required to guarantee that a given message will be\n         received on the other chain without running out of gas. Guaranteeing that a message\n         will not run out of gas is important because this ensures that a message can always\n         be replayed on the other chain if it fails to execute completely.\n @param _message     Message to compute the amount of required gas for.\n @param _minGasLimit Minimum desired gas limit when message goes to target.\n @return Amount of gas required to guarantee message receipt."},"functionSelector":"b28ade25","id":1603,"implemented":true,"kind":"function","modifiers":[],"name":"baseGas","nameLocation":"16010:7:6","nodeType":"FunctionDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"_message","nameLocation":"16033:8:6","nodeType":"VariableDeclaration","scope":1603,"src":"16018:23:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1572,"name":"bytes","nodeType":"ElementaryTypeName","src":"16018:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"_minGasLimit","nameLocation":"16050:12:6","nodeType":"VariableDeclaration","scope":1603,"src":"16043:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1574,"name":"uint32","nodeType":"ElementaryTypeName","src":"16043:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"16017:46:6"},"returnParameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1603,"src":"16085:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1577,"name":"uint64","nodeType":"ElementaryTypeName","src":"16085:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"16084:8:6"},"scope":1642,"src":"16001:708:6","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1614,"nodeType":"Block","src":"16876:63:6","statements":[{"expression":{"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1609,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"16886:16:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1610,"name":"Constants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"16905:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Constants_$14_$","typeString":"type(library Constants)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DEFAULT_L2_SENDER","nodeType":"MemberAccess","referencedDeclaration":13,"src":"16905:27:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16886:46:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1613,"nodeType":"ExpressionStatement","src":"16886:46:6"}]},"documentation":{"id":1604,"nodeType":"StructuredDocumentation","src":"16715:38:6","text":" @notice Intializer."},"id":1615,"implemented":true,"kind":"function","modifiers":[{"id":1607,"kind":"modifierInvocation","modifierName":{"id":1606,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":1756,"src":"16859:16:6"},"nodeType":"ModifierInvocation","src":"16859:16:6"}],"name":"__CrossDomainMessenger_init","nameLocation":"16820:27:6","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[],"src":"16847:2:6"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"16876:0:6"},"scope":1642,"src":"16811:128:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"16945:492:6","text":" @notice Sends a low-level message to the other messenger. Needs to be implemented by child\n         contracts because the logic for this depends on the network where the messenger is\n         being deployed.\n @param _to       Recipient of the message on the other chain.\n @param _gasLimit Minimum gas limit the message can be executed with.\n @param _value    Amount of ETH to send with the message.\n @param _data     Message data."},"id":1627,"implemented":false,"kind":"function","modifiers":[],"name":"_sendMessage","nameLocation":"17451:12:6","nodeType":"FunctionDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1618,"mutability":"mutable","name":"_to","nameLocation":"17481:3:6","nodeType":"VariableDeclaration","scope":1627,"src":"17473:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1617,"name":"address","nodeType":"ElementaryTypeName","src":"17473:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1620,"mutability":"mutable","name":"_gasLimit","nameLocation":"17501:9:6","nodeType":"VariableDeclaration","scope":1627,"src":"17494:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1619,"name":"uint64","nodeType":"ElementaryTypeName","src":"17494:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1622,"mutability":"mutable","name":"_value","nameLocation":"17528:6:6","nodeType":"VariableDeclaration","scope":1627,"src":"17520:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"17520:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"_data","nameLocation":"17557:5:6","nodeType":"VariableDeclaration","scope":1627,"src":"17544:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1623,"name":"bytes","nodeType":"ElementaryTypeName","src":"17544:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17463:105:6"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[],"src":"17585:0:6"},"scope":1642,"src":"17442:144:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"17592:317:6","text":" @notice Checks whether the message is coming from the other messenger. Implemented by child\n         contracts because the logic for this depends on the network where the messenger is\n         being deployed.\n @return Whether the message is coming from the other messenger."},"id":1633,"implemented":false,"kind":"function","modifiers":[],"name":"_isOtherMessenger","nameLocation":"17923:17:6","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[],"src":"17940:2:6"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1633,"src":"17974:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1630,"name":"bool","nodeType":"ElementaryTypeName","src":"17974:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17973:6:6"},"scope":1642,"src":"17914:66:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"17986:575:6","text":" @notice Checks whether a given call target is a system address that could cause the\n         messenger to peform an unsafe action. This is NOT a mechanism for blocking user\n         addresses. This is ONLY used to prevent the execution of messages to specific\n         system addresses that could cause security issues, e.g., having the\n         CrossDomainMessenger send messages to itself.\n @param _target Address of the contract to check.\n @return Whether or not the address is an unsafe system address."},"id":1641,"implemented":false,"kind":"function","modifiers":[],"name":"_isUnsafeTarget","nameLocation":"18575:15:6","nodeType":"FunctionDefinition","parameters":{"id":1637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1636,"mutability":"mutable","name":"_target","nameLocation":"18599:7:6","nodeType":"VariableDeclaration","scope":1641,"src":"18591:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1635,"name":"address","nodeType":"ElementaryTypeName","src":"18591:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18590:17:6"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1641,"src":"18639:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1638,"name":"bool","nodeType":"ElementaryTypeName","src":"18639:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18638:6:6"},"scope":1642,"src":"18566:79:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1643,"src":"3734:14913:6","usedErrors":[]}],"src":"32:18616:6"},"id":6},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"AddressUpgradeable":[2036],"Initializable":[1793]},"id":1794,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1644,"literals":["solidity","^","0.8",".2"],"nodeType":"PragmaDirective","src":"113:23:7"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","file":"../../utils/AddressUpgradeable.sol","id":1645,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1794,"sourceUnit":2037,"src":"138:44:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"184:2198:7","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":1793,"linearizedBaseContracts":[1793],"name":"Initializable","nameLocation":"2401:13:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1647,"nodeType":"StructuredDocumentation","src":"2421:109:7","text":" @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"},"id":1649,"mutability":"mutable","name":"_initialized","nameLocation":"2549:12:7","nodeType":"VariableDeclaration","scope":1793,"src":"2535:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1648,"name":"uint8","nodeType":"ElementaryTypeName","src":"2535:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"2568:91:7","text":" @dev Indicates that the contract is in the process of being initialized."},"id":1652,"mutability":"mutable","name":"_initializing","nameLocation":"2677:13:7","nodeType":"VariableDeclaration","scope":1793,"src":"2664:26:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1651,"name":"bool","nodeType":"ElementaryTypeName","src":"2664:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1653,"nodeType":"StructuredDocumentation","src":"2697:90:7","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498","id":1657,"name":"Initialized","nameLocation":"2798:11:7","nodeType":"EventDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1655,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"2816:7:7","nodeType":"VariableDeclaration","scope":1657,"src":"2810:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1654,"name":"uint8","nodeType":"ElementaryTypeName","src":"2810:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2809:15:7"},"src":"2792:33:7"},{"body":{"id":1712,"nodeType":"Block","src":"3101:483:7","statements":[{"assignments":[1661],"declarations":[{"constant":false,"id":1661,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"3116:14:7","nodeType":"VariableDeclaration","scope":1712,"src":"3111:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1660,"name":"bool","nodeType":"ElementaryTypeName","src":"3111:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1664,"initialValue":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3133:14:7","subExpression":{"id":1662,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3134:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3111:36:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3179:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3197:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3197:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3179:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3178:36:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3219:45:7","subExpression":{"arguments":[{"arguments":[{"id":1676,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3258:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1793","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1793","typeString":"contract Initializable"}],"id":1675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3250:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"3250:7:7","typeDescriptions":{}}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3250:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1672,"name":"AddressUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"3220:18:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AddressUpgradeable_$2036_$","typeString":"type(library AddressUpgradeable)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1811,"src":"3220:29:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1680,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3268:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3284:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3268:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3218:68:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3178:108:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3300:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1665,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3157:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3157:201:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"ExpressionStatement","src":"3157:201:7"},{"expression":{"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1689,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"3368:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3383:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3368:16:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1692,"nodeType":"ExpressionStatement","src":"3368:16:7"},{"condition":{"id":1693,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3398:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1699,"nodeType":"IfStatement","src":"3394:65:7","trueBody":{"id":1698,"nodeType":"Block","src":"3414:45:7","statements":[{"expression":{"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1694,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3428:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3444:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3428:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1697,"nodeType":"ExpressionStatement","src":"3428:20:7"}]}},{"id":1700,"nodeType":"PlaceholderStatement","src":"3468:1:7"},{"condition":{"id":1701,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"3483:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1711,"nodeType":"IfStatement","src":"3479:99:7","trueBody":{"id":1710,"nodeType":"Block","src":"3499:79:7","statements":[{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1702,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"3513:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3529:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3513:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1705,"nodeType":"ExpressionStatement","src":"3513:21:7"},{"eventCall":{"arguments":[{"hexValue":"31","id":1707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3565:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1706,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"3553:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3553:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"EmitStatement","src":"3548:19:7"}]}}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"2831:242:7","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."},"id":1713,"name":"initializer","nameLocation":"3087:11:7","nodeType":"ModifierDefinition","parameters":{"id":1659,"nodeType":"ParameterList","parameters":[],"src":"3098:2:7"},"src":"3078:506:7","virtual":false,"visibility":"internal"},{"body":{"id":1745,"nodeType":"Block","src":"4399:255:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4417:14:7","subExpression":{"id":1719,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"4418:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"4435:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1722,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4450:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4435:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4417:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4459:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1718,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4409:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4409:99:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1727,"nodeType":"ExpressionStatement","src":"4409:99:7"},{"expression":{"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1728,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"4518:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1729,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4533:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4518:22:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1731,"nodeType":"ExpressionStatement","src":"4518:22:7"},{"expression":{"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1732,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"4550:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4566:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4550:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1735,"nodeType":"ExpressionStatement","src":"4550:20:7"},{"id":1736,"nodeType":"PlaceholderStatement","src":"4580:1:7"},{"expression":{"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1737,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"4591:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4607:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4591:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1740,"nodeType":"ExpressionStatement","src":"4591:21:7"},{"eventCall":{"arguments":[{"id":1742,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"4639:7:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1741,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"4627:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4627:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1744,"nodeType":"EmitStatement","src":"4622:25:7"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"3590:766:7","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."},"id":1746,"name":"reinitializer","nameLocation":"4370:13:7","nodeType":"ModifierDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"version","nameLocation":"4390:7:7","nodeType":"VariableDeclaration","scope":1746,"src":"4384:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1715,"name":"uint8","nodeType":"ElementaryTypeName","src":"4384:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4383:15:7"},"src":"4361:293:7","virtual":false,"visibility":"internal"},{"body":{"id":1755,"nodeType":"Block","src":"4892:97:7","statements":[{"expression":{"arguments":[{"id":1750,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"4910:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4925:45:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1749,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4902:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4902:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"ExpressionStatement","src":"4902:69:7"},{"id":1754,"nodeType":"PlaceholderStatement","src":"4981:1:7"}]},"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"4660:199:7","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":1756,"name":"onlyInitializing","nameLocation":"4873:16:7","nodeType":"ModifierDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[],"src":"4889:2:7"},"src":"4864:125:7","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"5437:230:7","statements":[{"expression":{"arguments":[{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:14:7","subExpression":{"id":1761,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"5456:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5471:41:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""},"value":"Initializable: contract is initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a","typeString":"literal_string \"Initializable: contract is initializing\""}],"id":1760,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5447:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5447:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1765,"nodeType":"ExpressionStatement","src":"5447:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1766,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5527:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5547:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1768,"name":"uint8","nodeType":"ElementaryTypeName","src":"5547:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5542:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5542:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5542:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5527:30:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1790,"nodeType":"IfStatement","src":"5523:138:7","trueBody":{"id":1789,"nodeType":"Block","src":"5559:102:7","statements":[{"expression":{"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1773,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"5573:12:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":1776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5593:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1775,"name":"uint8","nodeType":"ElementaryTypeName","src":"5593:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5588:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5588:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5588:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5573:30:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1780,"nodeType":"ExpressionStatement","src":"5573:30:7"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":1784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5639:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1783,"name":"uint8","nodeType":"ElementaryTypeName","src":"5639:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1782,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5634:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5634:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5634:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1781,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5622:11:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint8_$returns$__$","typeString":"function (uint8)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5622:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"EmitStatement","src":"5617:33:7"}]}}]},"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"4995:388:7","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"5397:20:7","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[],"src":"5417:2:7"},"returnParameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"5437:0:7"},"scope":1793,"src":"5388:279:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1794,"src":"2383:3286:7","usedErrors":[]}],"src":"113:5557:7"},"id":7},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol","exportedSymbols":{"AddressUpgradeable":[2036]},"id":2037,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1795,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"AddressUpgradeable","contractDependencies":[],"contractKind":"library","documentation":{"id":1796,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2036,"linearizedBaseContracts":[2036],"name":"AddressUpgradeable","nameLocation":"202:18:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1810,"nodeType":"Block","src":"1252:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1804,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"1476:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1476:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1476:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1498:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1803,"id":1809,"nodeType":"Return","src":"1469:30:8"}]},"documentation":{"id":1797,"nodeType":"StructuredDocumentation","src":"227:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1811,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1195:10:8","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"account","nameLocation":"1214:7:8","nodeType":"VariableDeclaration","scope":1811,"src":"1206:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1798,"name":"address","nodeType":"ElementaryTypeName","src":"1206:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1205:17:8"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1811,"src":"1246:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1801,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1245:6:8"},"scope":2036,"src":"1186:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1844,"nodeType":"Block","src":"2494:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1822,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2520:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2036","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2036","typeString":"library AddressUpgradeable"}],"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2512:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"2512:7:8","typeDescriptions":{}}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2512:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2512:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1825,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2537:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2512:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2545:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1819,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2504:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"ExpressionStatement","src":"2504:73:8"},{"assignments":[1831,null],"declarations":[{"constant":false,"id":1831,"mutability":"mutable","name":"success","nameLocation":"2594:7:8","nodeType":"VariableDeclaration","scope":1844,"src":"2589:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1830,"name":"bool","nodeType":"ElementaryTypeName","src":"2589:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1838,"initialValue":{"arguments":[{"hexValue":"","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2637:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1832,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"2607:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2607:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1834,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"2629:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2607:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2588:52:8"},{"expression":{"arguments":[{"id":1840,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"2658:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2667:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2650:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2650:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1843,"nodeType":"ExpressionStatement","src":"2650:78:8"}]},"documentation":{"id":1812,"nodeType":"StructuredDocumentation","src":"1512:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1845,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2432:9:8","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1814,"mutability":"mutable","name":"recipient","nameLocation":"2458:9:8","nodeType":"VariableDeclaration","scope":1845,"src":"2442:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1813,"name":"address","nodeType":"ElementaryTypeName","src":"2442:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"amount","nameLocation":"2477:6:8","nodeType":"VariableDeclaration","scope":1845,"src":"2469:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2469:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2441:43:8"},"returnParameters":{"id":1818,"nodeType":"ParameterList","parameters":[],"src":"2494:0:8"},"scope":2036,"src":"2423:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1861,"nodeType":"Block","src":"3566:84:8","statements":[{"expression":{"arguments":[{"id":1856,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"3596:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"3604:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3610:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1855,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1862,1882],"referencedDeclaration":1882,"src":"3583:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3583:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1854,"id":1860,"nodeType":"Return","src":"3576:67:8"}]},"documentation":{"id":1846,"nodeType":"StructuredDocumentation","src":"2741:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1862,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3486:12:8","nodeType":"FunctionDefinition","parameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"target","nameLocation":"3507:6:8","nodeType":"VariableDeclaration","scope":1862,"src":"3499:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1847,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"data","nameLocation":"3528:4:8","nodeType":"VariableDeclaration","scope":1862,"src":"3515:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1849,"name":"bytes","nodeType":"ElementaryTypeName","src":"3515:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3498:35:8"},"returnParameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1862,"src":"3552:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1852,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3551:14:8"},"scope":2036,"src":"3477:173:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1881,"nodeType":"Block","src":"4019:76:8","statements":[{"expression":{"arguments":[{"id":1875,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4058:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1876,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"4066:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4072:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1878,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4075:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1874,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1902,1952],"referencedDeclaration":1952,"src":"4036:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4036:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1873,"id":1880,"nodeType":"Return","src":"4029:59:8"}]},"documentation":{"id":1863,"nodeType":"StructuredDocumentation","src":"3656:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1882,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3881:12:8","nodeType":"FunctionDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"target","nameLocation":"3911:6:8","nodeType":"VariableDeclaration","scope":1882,"src":"3903:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1864,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1867,"mutability":"mutable","name":"data","nameLocation":"3940:4:8","nodeType":"VariableDeclaration","scope":1882,"src":"3927:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1866,"name":"bytes","nodeType":"ElementaryTypeName","src":"3927:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1869,"mutability":"mutable","name":"errorMessage","nameLocation":"3968:12:8","nodeType":"VariableDeclaration","scope":1882,"src":"3954:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1868,"name":"string","nodeType":"ElementaryTypeName","src":"3954:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3893:93:8"},"returnParameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1882,"src":"4005:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1871,"name":"bytes","nodeType":"ElementaryTypeName","src":"4005:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4004:14:8"},"scope":2036,"src":"3872:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"4600:111:8","statements":[{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"4639:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"4647:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"4653:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4660:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1894,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1902,1952],"referencedDeclaration":1952,"src":"4617:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4617:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1893,"id":1900,"nodeType":"Return","src":"4610:94:8"}]},"documentation":{"id":1883,"nodeType":"StructuredDocumentation","src":"4101:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4466:21:8","nodeType":"FunctionDefinition","parameters":{"id":1890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1885,"mutability":"mutable","name":"target","nameLocation":"4505:6:8","nodeType":"VariableDeclaration","scope":1902,"src":"4497:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"4497:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1887,"mutability":"mutable","name":"data","nameLocation":"4534:4:8","nodeType":"VariableDeclaration","scope":1902,"src":"4521:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1886,"name":"bytes","nodeType":"ElementaryTypeName","src":"4521:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1889,"mutability":"mutable","name":"value","nameLocation":"4556:5:8","nodeType":"VariableDeclaration","scope":1902,"src":"4548:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1888,"name":"uint256","nodeType":"ElementaryTypeName","src":"4548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4487:80:8"},"returnParameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1902,"src":"4586:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1891,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4585:14:8"},"scope":2036,"src":"4457:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1951,"nodeType":"Block","src":"5138:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1919,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5164:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_AddressUpgradeable_$2036","typeString":"library AddressUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AddressUpgradeable_$2036","typeString":"library AddressUpgradeable"}],"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5156:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"5156:7:8","typeDescriptions":{}}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5156:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5156:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"5181:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5156:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5188:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5148:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1926,"nodeType":"ExpressionStatement","src":"5148:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1929,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"5258:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1928,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"5247:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5247:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5267:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1927,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5239:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"ExpressionStatement","src":"5239:60:8"},{"assignments":[1935,1937],"declarations":[{"constant":false,"id":1935,"mutability":"mutable","name":"success","nameLocation":"5316:7:8","nodeType":"VariableDeclaration","scope":1951,"src":"5311:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1934,"name":"bool","nodeType":"ElementaryTypeName","src":"5311:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1937,"mutability":"mutable","name":"returndata","nameLocation":"5338:10:8","nodeType":"VariableDeclaration","scope":1951,"src":"5325:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"5325:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1944,"initialValue":{"arguments":[{"id":1942,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1907,"src":"5378:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1938,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1905,"src":"5352:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5352:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"5371:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5352:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5352:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5310:73:8"},{"expression":{"arguments":[{"id":1946,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"5417:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1947,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"5426:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1948,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1911,"src":"5438:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1945,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"5400:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5400:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1915,"id":1950,"nodeType":"Return","src":"5393:58:8"}]},"documentation":{"id":1903,"nodeType":"StructuredDocumentation","src":"4717:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1952,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4968:21:8","nodeType":"FunctionDefinition","parameters":{"id":1912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"target","nameLocation":"5007:6:8","nodeType":"VariableDeclaration","scope":1952,"src":"4999:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1904,"name":"address","nodeType":"ElementaryTypeName","src":"4999:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1907,"mutability":"mutable","name":"data","nameLocation":"5036:4:8","nodeType":"VariableDeclaration","scope":1952,"src":"5023:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1906,"name":"bytes","nodeType":"ElementaryTypeName","src":"5023:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1909,"mutability":"mutable","name":"value","nameLocation":"5058:5:8","nodeType":"VariableDeclaration","scope":1952,"src":"5050:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1908,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1911,"mutability":"mutable","name":"errorMessage","nameLocation":"5087:12:8","nodeType":"VariableDeclaration","scope":1952,"src":"5073:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1910,"name":"string","nodeType":"ElementaryTypeName","src":"5073:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4989:116:8"},"returnParameters":{"id":1915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1952,"src":"5124:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"5124:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5123:14:8"},"scope":2036,"src":"4959:499:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1968,"nodeType":"Block","src":"5735:97:8","statements":[{"expression":{"arguments":[{"id":1963,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"5771:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1964,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1957,"src":"5779:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5785:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1962,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1969,2004],"referencedDeclaration":2004,"src":"5752:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5752:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1961,"id":1967,"nodeType":"Return","src":"5745:80:8"}]},"documentation":{"id":1953,"nodeType":"StructuredDocumentation","src":"5464:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5644:18:8","nodeType":"FunctionDefinition","parameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"target","nameLocation":"5671:6:8","nodeType":"VariableDeclaration","scope":1969,"src":"5663:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1954,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1957,"mutability":"mutable","name":"data","nameLocation":"5692:4:8","nodeType":"VariableDeclaration","scope":1969,"src":"5679:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1956,"name":"bytes","nodeType":"ElementaryTypeName","src":"5679:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5662:35:8"},"returnParameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"5721:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1959,"name":"bytes","nodeType":"ElementaryTypeName","src":"5721:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5720:14:8"},"scope":2036,"src":"5635:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"6174:228:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1983,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"6203:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1982,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"6192:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6192:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6212:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6184:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1987,"nodeType":"ExpressionStatement","src":"6184:67:8"},{"assignments":[1989,1991],"declarations":[{"constant":false,"id":1989,"mutability":"mutable","name":"success","nameLocation":"6268:7:8","nodeType":"VariableDeclaration","scope":2003,"src":"6263:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1988,"name":"bool","nodeType":"ElementaryTypeName","src":"6263:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1991,"mutability":"mutable","name":"returndata","nameLocation":"6290:10:8","nodeType":"VariableDeclaration","scope":2003,"src":"6277:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1990,"name":"bytes","nodeType":"ElementaryTypeName","src":"6277:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1996,"initialValue":{"arguments":[{"id":1994,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"6322:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1992,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"6304:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6304:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6304:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6262:65:8"},{"expression":{"arguments":[{"id":1998,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1989,"src":"6361:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1999,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"6370:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2000,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"6382:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1997,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"6344:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6344:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1980,"id":2002,"nodeType":"Return","src":"6337:58:8"}]},"documentation":{"id":1970,"nodeType":"StructuredDocumentation","src":"5838:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6025:18:8","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"target","nameLocation":"6061:6:8","nodeType":"VariableDeclaration","scope":2004,"src":"6053:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"6053:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"data","nameLocation":"6090:4:8","nodeType":"VariableDeclaration","scope":2004,"src":"6077:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1973,"name":"bytes","nodeType":"ElementaryTypeName","src":"6077:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"errorMessage","nameLocation":"6118:12:8","nodeType":"VariableDeclaration","scope":2004,"src":"6104:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1975,"name":"string","nodeType":"ElementaryTypeName","src":"6104:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6043:93:8"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"6160:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1978,"name":"bytes","nodeType":"ElementaryTypeName","src":"6160:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6159:14:8"},"scope":2036,"src":"6016:386:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2034,"nodeType":"Block","src":"6782:582:8","statements":[{"condition":{"id":2016,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"6796:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2032,"nodeType":"Block","src":"6853:505:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2020,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6937:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"6937:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6957:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6937:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2030,"nodeType":"Block","src":"7295:53:8","statements":[{"expression":{"arguments":[{"id":2027,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2011,"src":"7320:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2026,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7313:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7313:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"7313:20:8"}]},"id":2031,"nodeType":"IfStatement","src":"6933:415:8","trueBody":{"id":2025,"nodeType":"Block","src":"6960:329:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7130:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7152:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7181:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7175:5:8"},"nodeType":"YulFunctionCall","src":"7175:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7156:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7224:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7228:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7220:3:8"},"nodeType":"YulFunctionCall","src":"7220:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7241:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7213:6:8"},"nodeType":"YulFunctionCall","src":"7213:44:8"},"nodeType":"YulExpressionStatement","src":"7213:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2009,"isOffset":false,"isSlot":false,"src":"7181:10:8","valueSize":1},{"declaration":2009,"isOffset":false,"isSlot":false,"src":"7228:10:8","valueSize":1}],"id":2024,"nodeType":"InlineAssembly","src":"7121:154:8"}]}}]},"id":2033,"nodeType":"IfStatement","src":"6792:566:8","trueBody":{"id":2019,"nodeType":"Block","src":"6805:42:8","statements":[{"expression":{"id":2017,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2009,"src":"6826:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"6819:17:8"}]}}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"6408:209:8","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2035,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"6631:16:8","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"success","nameLocation":"6662:7:8","nodeType":"VariableDeclaration","scope":2035,"src":"6657:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2006,"name":"bool","nodeType":"ElementaryTypeName","src":"6657:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2009,"mutability":"mutable","name":"returndata","nameLocation":"6692:10:8","nodeType":"VariableDeclaration","scope":2035,"src":"6679:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2008,"name":"bytes","nodeType":"ElementaryTypeName","src":"6679:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"errorMessage","nameLocation":"6726:12:8","nodeType":"VariableDeclaration","scope":2035,"src":"6712:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2010,"name":"string","nodeType":"ElementaryTypeName","src":"6712:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6647:97:8"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2035,"src":"6768:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2013,"name":"bytes","nodeType":"ElementaryTypeName","src":"6768:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6767:14:8"},"scope":2036,"src":"6622:742:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2037,"src":"194:7172:8","usedErrors":[]}],"src":"101:7266:8"},"id":8},"contracts/MinimalMessenger.sol":{"ast":{"absolutePath":"contracts/MinimalMessenger.sol","exportedSymbols":{"CrossDomainMessenger":[1642],"MinimalMessenger":[2098]},"id":2099,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2038,"literals":["solidity","0.8",".15"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol","file":"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol","id":2040,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2099,"sourceUnit":1643,"src":"57:116:9","symbolAliases":[{"foreign":{"id":2039,"name":"CrossDomainMessenger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"66:20:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2041,"name":"CrossDomainMessenger","nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"204:20:9"},"id":2042,"nodeType":"InheritanceSpecifier","src":"204:20:9"}],"canonicalName":"MinimalMessenger","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2098,"linearizedBaseContracts":[2098,1642,1192,1793,1151],"name":"MinimalMessenger","nameLocation":"184:16:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2051,"nodeType":"Block","src":"290:2:9","statements":[]},"id":2052,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"arguments":[{"hexValue":"30","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"282:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"274:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:9","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"274:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2049,"kind":"baseConstructorSpecifier","modifierName":{"id":2044,"name":"CrossDomainMessenger","nodeType":"IdentifierPath","referencedDeclaration":1642,"src":"253:20:9"},"nodeType":"ModifierInvocation","src":"253:32:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[],"src":"242:2:9"},"returnParameters":{"id":2050,"nodeType":"ParameterList","parameters":[],"src":"290:0:9"},"scope":2098,"src":"231:61:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1627],"body":{"id":2064,"nodeType":"Block","src":"416:2:9","statements":[]},"id":2065,"implemented":true,"kind":"function","modifiers":[],"name":"_sendMessage","nameLocation":"307:12:9","nodeType":"FunctionDefinition","overrides":{"id":2062,"nodeType":"OverrideSpecifier","overrides":[],"src":"407:8:9"},"parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"329:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"329:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"346:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2055,"name":"uint64","nodeType":"ElementaryTypeName","src":"346:6:9","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"362:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"362:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2065,"src":"379:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2059,"name":"bytes","nodeType":"ElementaryTypeName","src":"379:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"319:78:9"},"returnParameters":{"id":2063,"nodeType":"ParameterList","parameters":[],"src":"416:0:9"},"scope":2098,"src":"298:120:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1633],"body":{"id":2074,"nodeType":"Block","src":"547:28:9","statements":[{"expression":{"hexValue":"74727565","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"564:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2071,"id":2073,"nodeType":"Return","src":"557:11:9"}]},"documentation":{"id":2066,"nodeType":"StructuredDocumentation","src":"424:51:9","text":" @inheritdoc CrossDomainMessenger"},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"_isOtherMessenger","nameLocation":"489:17:9","nodeType":"FunctionDefinition","overrides":{"id":2068,"nodeType":"OverrideSpecifier","overrides":[],"src":"523:8:9"},"parameters":{"id":2067,"nodeType":"ParameterList","parameters":[],"src":"506:2:9"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"541:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2069,"name":"bool","nodeType":"ElementaryTypeName","src":"541:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"540:6:9"},"scope":2098,"src":"480:95:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1641],"body":{"id":2086,"nodeType":"Block","src":"709:29:9","statements":[{"expression":{"hexValue":"66616c7365","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"726:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2083,"id":2085,"nodeType":"Return","src":"719:12:9"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"581:51:9","text":" @inheritdoc CrossDomainMessenger"},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_isUnsafeTarget","nameLocation":"646:15:9","nodeType":"FunctionDefinition","overrides":{"id":2080,"nodeType":"OverrideSpecifier","overrides":[],"src":"685:8:9"},"parameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"662:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"662:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"661:9:9"},"returnParameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2082,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"703:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2081,"name":"bool","nodeType":"ElementaryTypeName","src":"703:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"702:6:9"},"scope":2098,"src":"637:101:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2096,"nodeType":"Block","src":"820:60:9","statements":[{"expression":{"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2092,"name":"xDomainMsgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"830:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2093,"name":"_newXDomainMessageSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"849:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"830:43:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2095,"nodeType":"ExpressionStatement","src":"830:43:9"}]},"functionSelector":"bf24eb63","id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"setXDomainMessageSender","nameLocation":"753:23:9","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"_newXDomainMessageSender","nameLocation":"785:24:9","nodeType":"VariableDeclaration","scope":2097,"src":"777:32:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:34:9"},"returnParameters":{"id":2091,"nodeType":"ParameterList","parameters":[],"src":"820:0:9"},"scope":2098,"src":"744:136:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2099,"src":"175:707:9","usedErrors":[]}],"src":"32:850:9"},"id":9}},"contracts":{"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol":{"Constants":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dde512852e72d42ece05ca11afee197a4c6866dca94940f54bdbb6c1984206ba64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xE5 SLT DUP6 0x2E PUSH19 0xD42ECE05CA11AFEE197A4C6866DCA94940F54B 0xDB 0xB6 0xC1 SWAP9 TIMESTAMP MOD 0xBA PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"336:1009:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dde512852e72d42ece05ca11afee197a4c6866dca94940f54bdbb6c1984206ba64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD 0xE5 SLT DUP6 0x2E PUSH19 0xD42ECE05CA11AFEE197A4C6866DCA94940F54B 0xDB 0xB6 0xC1 SWAP9 TIMESTAMP MOD 0xBA PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"336:1009:0:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Constants\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Constants is a library for storing constants. Simple! Don't put everything in here, just         the stuff used in multiple contracts. Constants that only apply to a single contract         should be defined in that contract instead.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":\"Constants\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol":{"Encoding":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220097b2c5a4bf4e44d9c1557b6437ab4b5d02703bd4a25a624db8d21f99010a9c264736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH28 0x2C5A4BF4E44D9C1557B6437AB4B5D02703BD4A25A624DB8D21F99010 0xA9 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"287:5428:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220097b2c5a4bf4e44d9c1557b6437ab4b5d02703bd4a25a624db8d21f99010a9c264736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD PUSH28 0x2C5A4BF4E44D9C1557B6437AB4B5D02703BD4A25A624DB8D21F99010 0xA9 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"287:5428:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Encoding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Encoding handles Optimism's various different encoding schemes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":\"Encoding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol":{"Hashing":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256044c88a8eecc7f4e4127ae491263cdd3265d9d07e8b6526928c48fc3aa4de64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH1 0x44 0xC8 DUP11 DUP15 0xEC 0xC7 DELEGATECALL 0xE4 SLT PUSH27 0xE491263CDD3265D9D07E8B6526928C48FC3AA4DE64736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"237:5551:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220256044c88a8eecc7f4e4127ae491263cdd3265d9d07e8b6526928c48fc3aa4de64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH1 0x44 0xC8 DUP11 DUP15 0xEC 0xC7 DELEGATECALL 0xE4 SLT PUSH27 0xE491263CDD3265D9D07E8B6526928C48FC3AA4DE64736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"237:5551:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Hashing\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Hashing handles Optimism's various different hashing schemes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":\"Hashing\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol":{"SafeCall":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707bbf7b36383202b5a717ef6c52dcfa43c5440c068e6dc230b17053c1a13e5164736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7BBF7B36383202B5A717EF6C52DCFA43C5 DIFFICULTY 0xC MOD DUP15 PUSH14 0xC230B17053C1A13E5164736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ","sourceMap":"124:4224:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220707bbf7b36383202b5a717ef6c52dcfa43c5440c068e6dc230b17053c1a13e5164736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x7BBF7B36383202B5A717EF6C52DCFA43C5 DIFFICULTY 0xC MOD DUP15 PUSH14 0xC230B17053C1A13E5164736F6C63 NUMBER STOP ADDMOD 0xF STOP CALLER ","sourceMap":"124:4224:3:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeCall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Perform low level safe calls\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":\"SafeCall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol":{"Types":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6af61edb4f2e8fd2e34c2ae7e30c98ddc793f76fddaba34a425c3bf888d863064736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xAF PUSH2 0xEDB4 CALLCODE 0xE8 REVERT 0x2E CALLVALUE 0xC2 0xAE PUSH31 0x30C98DDC793F76FDDABA34A425C3BF888D863064736F6C634300080F003300 ","sourceMap":"161:3166:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e6af61edb4f2e8fd2e34c2ae7e30c98ddc793f76fddaba34a425c3bf888d863064736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0xAF PUSH2 0xEDB4 CALLCODE 0xE8 REVERT 0x2E CALLVALUE 0xC2 0xAE PUSH31 0x30C98DDC793F76FDDABA34A425C3BF888D863064736F6C634300080F003300 ","sourceMap":"161:3166:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Types\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains various types used throughout the Optimism contract system.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":\"Types\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol":{"RLPWriter":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037e43e7ec4b082747d49b9f4dbaa2492875bad98d0a1b3c9b52ec7735dd70fcb64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xE4 RETURNDATACOPY PUSH31 0xC4B082747D49B9F4DBAA2492875BAD98D0A1B3C9B52EC7735DD70FCB64736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"388:5748:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037e43e7ec4b082747d49b9f4dbaa2492875bad98d0a1b3c9b52ec7735dd70fcb64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY 0xE4 RETURNDATACOPY PUSH31 0xC4B082747D49B9F4DBAA2492875BAD98D0A1B3C9B52EC7735DD70FCB64736F PUSH13 0x634300080F0033000000000000 ","sourceMap":"388:5748:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"RLPWriter is a library for encoding Solidity types to RLP bytes. Adapted from Bakaoh's         RLPEncode library (https://github.com/bakaoh/solidity-rlp-encode) with minor         modifications to improve legibility.\",\"custom:attribution\":\"https://github.com/bakaoh/solidity-rlp-encode\",\"kind\":\"dev\",\"methods\":{},\"title\":\"RLPWriter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":\"RLPWriter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]}},\"version\":1}"}},"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol":{"CrossDomainMessenger":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"FailedRelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"RelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"messageNonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasLimit","type":"uint256"}],"name":"SentMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"SentMessageExtension1","type":"event"},{"inputs":[],"name":"MESSAGE_VERSION","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_CALLDATA_OVERHEAD","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_CONSTANT_OVERHEAD","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OTHER_MESSENGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"}],"name":"baseGas","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"failedMessages","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"messageNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_minGasLimit","type":"uint256"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"relayMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"successfulMessages","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xDomainMessageSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"MESSAGE_VERSION()":"3f827a5a","MIN_GAS_CALLDATA_OVERHEAD()":"028f85f7","MIN_GAS_CONSTANT_OVERHEAD()":"7dea7cc3","MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()":"0c568498","MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()":"2828d7e8","OTHER_MESSENGER()":"9fce812c","baseGas(bytes,uint32)":"b28ade25","failedMessages(bytes32)":"a4e7f8bd","messageNonce()":"ecc70428","relayMessage(uint256,address,address,uint256,uint256,bytes)":"d764ad0b","sendMessage(address,bytes,uint32)":"3dbb202b","successfulMessages(bytes32)":"b1b1b209","xDomainMessageSender()":"6e296e45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SentMessageExtension1\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSAGE_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CALLDATA_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CONSTANT_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_MESSENGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"baseGas\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"relayMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"successfulMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:upgradeable\":\"@title CrossDomainMessenger\",\"events\":{\"FailedRelayedMessage(bytes32)\":{\"params\":{\"msgHash\":\"Hash of the message that failed to be relayed.\"}},\"RelayedMessage(bytes32)\":{\"params\":{\"msgHash\":\"Hash of the message that was relayed.\"}},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"Minimum gas limit that the message can be executed with.\",\"message\":\"Message to trigger the recipient address with.\",\"messageNonce\":\"Unique nonce attached to the message.\",\"sender\":\"Address of the sender of the message.\",\"target\":\"Address of the recipient of the message.\"}},\"SentMessageExtension1(address,uint256)\":{\"params\":{\"sender\":\"Address of the sender of the message.\",\"value\":\"ETH value sent along with the message to the recipient.\"}}},\"kind\":\"dev\",\"methods\":{\"baseGas(bytes,uint32)\":{\"params\":{\"_message\":\"Message to compute the amount of required gas for.\",\"_minGasLimit\":\"Minimum desired gas limit when message goes to target.\"},\"returns\":{\"_0\":\"Amount of gas required to guarantee message receipt.\"}},\"constructor\":{\"params\":{\"_otherMessenger\":\"Address of the messenger on the paired chain.\"}},\"messageNonce()\":{\"returns\":{\"_0\":\"Nonce of the next message to be sent, with added message version.\"}},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"params\":{\"_message\":\"Message to send to the target.\",\"_minGasLimit\":\"Minimum amount of gas that the message can be executed with.\",\"_nonce\":\"Nonce of the message being relayed.\",\"_sender\":\"Address of the user who sent the message.\",\"_target\":\"Address that the message is targeted at.\",\"_value\":\"ETH value to send with the message.\"}},\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_message\":\"Message to trigger the target address with.\",\"_minGasLimit\":\"Minimum gas limit that the message can be executed with.\",\"_target\":\"Target contract or wallet address.\"}},\"xDomainMessageSender()\":{\"returns\":{\"_0\":\"Address of the sender of the currently executing message on the other chain.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"FailedRelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message fails to be relayed on this chain.\"},\"RelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message is successfully relayed on this chain.\"},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"notice\":\"Emitted whenever a message is sent to the other chain.\"},\"SentMessageExtension1(address,uint256)\":{\"notice\":\"Additional event data to emit, required as of Bedrock. Cannot be merged with the         SentMessage event without breaking the ABI of this contract, this is good enough.\"}},\"kind\":\"user\",\"methods\":{\"MESSAGE_VERSION()\":{\"notice\":\"Current message version identifier.\"},\"MIN_GAS_CALLDATA_OVERHEAD()\":{\"notice\":\"Extra gas added to base gas for each byte of calldata in a message.\"},\"MIN_GAS_CONSTANT_OVERHEAD()\":{\"notice\":\"Constant overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()\":{\"notice\":\"Denominator for dynamic overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()\":{\"notice\":\"Numerator for dynamic overhead added to the base gas for a message.\"},\"OTHER_MESSENGER()\":{\"notice\":\"Address of the paired CrossDomainMessenger contract on the other chain.\"},\"baseGas(bytes,uint32)\":{\"notice\":\"Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely.\"},\"failedMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt.\"},\"messageNonce()\":{\"notice\":\"Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures.\"},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed.\"},\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function).\"},\"successfulMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again.\"},\"xDomainMessageSender()\":{\"notice\":\"Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it.\"}},\"notice\":\"CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2         cross-chain messenger contracts. It's designed to be a universal interface that only         needs to be extended slightly to provide low-level message passing functionality on each         chain it's deployed on. Currently only designed for message passing between two paired         chains and does not support one-to-many interactions.         Any changes to this contract MUST result in a semver bump for contracts that inherit it.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":\"CrossDomainMessenger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"},"CrossDomainMessengerLegacySpacer0":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200e66ef21952453c2343f4fc85cb9630f7729bc8d0a72f955fa983ce207642e7564736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH7 0xEF21952453C234 EXTCODEHASH 0x4F 0xC8 0x5C 0xB9 PUSH4 0xF7729BC DUP14 EXP PUSH19 0xF955FA983CE207642E7564736F6C634300080F STOP CALLER ","sourceMap":"673:210:6:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea26469706673582212200e66ef21952453c2343f4fc85cb9630f7729bc8d0a72f955fa983ce207642e7564736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE PUSH7 0xEF21952453C234 EXTCODEHASH 0x4F 0xC8 0x5C 0xB9 PUSH4 0xF7729BC DUP14 EXP PUSH19 0xF955FA983CE207642E7564736F6C634300080F STOP CALLER ","sourceMap":"673:210:6:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:legacy\":\"@title CrossDomainMessengerLegacySpacer0\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"spacer_0_0_20\":{\"custom:legacy\":\"@custom:spacer libAddressManager\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract only exists to add a spacer to the CrossDomainMessenger where the         libAddressManager variable used to exist. Must be the first contract in the inheritance         tree of the CrossDomainMessenger.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":\"CrossDomainMessengerLegacySpacer0\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"},"CrossDomainMessengerLegacySpacer1":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122036735d61f2d3d1d36531ec7434c2ed1ae33690e0281b3169df3301c2ad635a4964736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH20 0x5D61F2D3D1D36531EC7434C2ED1AE33690E0281B BALANCE PUSH10 0xDF3301C2AD635A496473 PUSH16 0x6C634300080F00330000000000000000 ","sourceMap":"1210:1900:6:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122036735d61f2d3d1d36531ec7434c2ed1ae33690e0281b3169df3301c2ad635a4964736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH20 0x5D61F2D3D1D36531EC7434C2ED1AE33690E0281B BALANCE PUSH10 0xDF3301C2AD635A496473 PUSH16 0x6C634300080F00330000000000000000 ","sourceMap":"1210:1900:6:-:0;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:legacy\":\"@title CrossDomainMessengerLegacySpacer1\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap_reentrancy_guard\":{\"custom:spacer\":\"ReentrancyGuardUpgradeable\"},\"spacer_101_0_1\":{\"custom:legacy\":\"@custom:spacer _paused\"},\"spacer_102_0_1568\":{\"custom:legacy\":\"@custom:spacer __gap\"},\"spacer_151_0_32\":{\"custom:legacy\":\"@custom:spacer ReentrancyGuardUpgradeable's `_status` field.\"},\"spacer_1_0_1600\":{\"custom:legacy\":\"@custom:spacer __gap\"},\"spacer_201_0_32\":{\"custom:legacy\":\"@custom:spacer blockedMessages\"},\"spacer_202_0_32\":{\"custom:legacy\":\"@custom:spacer relayedMessages\"},\"spacer_51_0_20\":{\"custom:legacy\":\"@custom:spacer _owner\"},\"spacer_52_0_1568\":{\"custom:legacy\":\"@custom:spacer __gap\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contract only exists to add a spacer to the CrossDomainMessenger where the         PausableUpgradable and OwnableUpgradeable variables used to exist. Must be         the third contract in the inheritance tree of the CrossDomainMessenger.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":\"CrossDomainMessengerLegacySpacer1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"AddressUpgradeable":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f27157671d3c5868c24716171f9097885f02c47048143a1215c481954d38a6b164736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH18 0x57671D3C5868C24716171F9097885F02C470 BASEFEE EQ GASPRICE SLT ISZERO 0xC4 DUP2 SWAP6 0x4D CODESIZE 0xA6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:7172:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f27157671d3c5868c24716171f9097885f02c47048143a1215c481954d38a6b164736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE PUSH18 0x57671D3C5868C24716171F9097885F02C470 BASEFEE EQ GASPRICE SLT ISZERO 0xC4 DUP2 SWAP6 0x4D CODESIZE 0xA6 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"194:7172:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}"}},"contracts/MinimalMessenger.sol":{"MinimalMessenger":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"FailedRelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"name":"RelayedMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bytes","name":"message","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"messageNonce","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"gasLimit","type":"uint256"}],"name":"SentMessage","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"SentMessageExtension1","type":"event"},{"inputs":[],"name":"MESSAGE_VERSION","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_CALLDATA_OVERHEAD","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_CONSTANT_OVERHEAD","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OTHER_MESSENGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"}],"name":"baseGas","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"failedMessages","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"messageNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_nonce","type":"uint256"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_target","type":"address"},{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint256","name":"_minGasLimit","type":"uint256"},{"internalType":"bytes","name":"_message","type":"bytes"}],"name":"relayMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_minGasLimit","type":"uint32"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_newXDomainMessageSender","type":"address"}],"name":"setXDomainMessageSender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"successfulMessages","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"xDomainMessageSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1289":{"entryPoint":null,"id":1289,"parameterSlots":1,"returnSlots":0},"@_2052":{"entryPoint":null,"id":2052,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60a060405234801561001057600080fd5b5060008073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050608051611d5e61006a6000396000818161036801526106200152611d5e6000f3fe6080604052600436106100dd5760003560e01c80639fce812c1161007f578063b28ade2511610059578063b28ade25146102a5578063bf24eb63146102e2578063d764ad0b1461030b578063ecc7042814610327576100dd565b80639fce812c14610200578063a4e7f8bd1461022b578063b1b1b20914610268576100dd565b80633dbb202b116100bb5780633dbb202b146101635780633f827a5a1461017f5780636e296e45146101aa5780637dea7cc3146101d5576100dd565b8063028f85f7146100e25780630c5684981461010d5780632828d7e814610138575b600080fd5b3480156100ee57600080fd5b506100f7610352565b6040516101049190610fb1565b60405180910390f35b34801561011957600080fd5b50610122610357565b60405161012f9190610fb1565b60405180910390f35b34801561014457600080fd5b5061014d61035d565b60405161015a9190610fb1565b60405180910390f35b61017d600480360381019061017891906110d5565b610363565b005b34801561018b57600080fd5b50610194610556565b6040516101a19190611166565b60405180910390f35b3480156101b657600080fd5b506101bf61055b565b6040516101cc9190611190565b60405180910390f35b3480156101e157600080fd5b506101ea610617565b6040516101f79190610fb1565b60405180910390f35b34801561020c57600080fd5b5061021561061e565b6040516102229190611190565b60405180910390f35b34801561023757600080fd5b50610252600480360381019061024d91906111e1565b610642565b60405161025f9190611229565b60405180910390f35b34801561027457600080fd5b5061028f600480360381019061028a91906111e1565b610662565b60405161029c9190611229565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c79190611244565b610682565b6040516102d99190610fb1565b60405180910390f35b3480156102ee57600080fd5b50610309600480360381019061030491906112a4565b6106d6565b005b61032560048036038101906103209190611307565b61071a565b005b34801561033357600080fd5b5061033c610d03565b60405161034991906113c5565b60405180910390f35b601081565b6103e881565b6103f881565b6104217f0000000000000000000000000000000000000000000000000000000000000000610392858585610682565b3463d764ad0b60e01b6103a3610d03565b338a34898c8c6040516024016103bf979695949392919061144d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d41565b8373ffffffffffffffffffffffffffffffffffffffff167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a338585610464610d03565b866040516104769594939291906114f2565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d546346040516104c491906113c5565b60405180910390a260cd600081819054906101000a90047dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660010191906101000a8154817dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600181565b600061dead73ffffffffffffffffffffffffffffffffffffffff1660cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e6906115c3565b60405180910390fd5b60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b62030d4081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60ce6020528060005260406000206000915054906101000a900460ff1681565b60cb6020528060005260406000206000915054906101000a900460ff1681565b600062030d406010858590506106989190611612565b6103e86103f88563ffffffff166106af9190611612565b6106b99190611683565b6106c391906116b4565b6106cd91906116b4565b90509392505050565b8060cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061072588610d47565b91505060028161ffff161061076f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107669061178a565b60405180910390fd5b60008161ffff16036108385760006107cd878986868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508c610d83565b90506000151560cb600083815260200190815260200160002060009054906101000a900460ff16151514610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d9061181c565b60405180910390fd5b505b600061088c898989898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610da2565b905060cf600082815260200190815260200160002060009054906101000a900460ff16156108ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e690611888565b60405180910390fd5b600160cf600083815260200190815260200160002060006101000a81548160ff021916908315150217905550610923610dc5565b1561096c57853414610938576109376118a8565b5b60ce600082815260200190815260200160002060009054906101000a900460ff1615610967576109666118a8565b5b610a10565b600034146109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a69061196f565b60405180910390fd5b60ce600082815260200190815260200160002060009054906101000a900460ff16610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0690611a01565b60405180910390fd5b5b60001515610a1d88610dce565b151514610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5690611ab9565b60405180910390fd5b6000151560cb600083815260200190815260200160002060009054906101000a900460ff16151514610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90611b4b565b60405180910390fd5b8760cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000610b5988878988888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dd5565b905061dead60cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610c0257600160cb600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c60405160405180910390a2610ccb565b600160ce600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f60405160405180910390a2600173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1603610cca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc190611bdd565b60405180910390fd5b5b600060cf600084815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050505050565b6000610d3c60cd60009054906101000a90047dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001610e33565b905090565b50505050565b6000806000807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851691508460f01c90508181935093505050915091565b6000610d9185858585610e48565b805190602001209050949350505050565b6000610db2878787878787610ee8565b8051906020012090509695505050505050565b60006001905090565b6000919050565b600080603f60c88601604002045a1015610e18576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080845160208601878a5af1905080915050949350505050565b600080838360f01b1790508091505092915050565b606084848484604051602401610e619493929190611c74565b6040516020818303038152906040527fcbd4ece9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050949350505050565b6060868686868686604051602401610f0596959493929190611cc0565b6040516020818303038152906040527fd764ad0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509695505050505050565b600067ffffffffffffffff82169050919050565b610fab81610f8e565b82525050565b6000602082019050610fc66000830184610fa2565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100182610fd6565b9050919050565b61101181610ff6565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261105957611058611034565b5b8235905067ffffffffffffffff81111561107657611075611039565b5b6020830191508360018202830111156110925761109161103e565b5b9250929050565b600063ffffffff82169050919050565b6110b281611099565b81146110bd57600080fd5b50565b6000813590506110cf816110a9565b92915050565b600080600080606085870312156110ef576110ee610fcc565b5b60006110fd8782880161101f565b945050602085013567ffffffffffffffff81111561111e5761111d610fd1565b5b61112a87828801611043565b9350935050604061113d878288016110c0565b91505092959194509250565b600061ffff82169050919050565b61116081611149565b82525050565b600060208201905061117b6000830184611157565b92915050565b61118a81610ff6565b82525050565b60006020820190506111a56000830184611181565b92915050565b6000819050919050565b6111be816111ab565b81146111c957600080fd5b50565b6000813590506111db816111b5565b92915050565b6000602082840312156111f7576111f6610fcc565b5b6000611205848285016111cc565b91505092915050565b60008115159050919050565b6112238161120e565b82525050565b600060208201905061123e600083018461121a565b92915050565b60008060006040848603121561125d5761125c610fcc565b5b600084013567ffffffffffffffff81111561127b5761127a610fd1565b5b61128786828701611043565b9350935050602061129a868287016110c0565b9150509250925092565b6000602082840312156112ba576112b9610fcc565b5b60006112c88482850161101f565b91505092915050565b6000819050919050565b6112e4816112d1565b81146112ef57600080fd5b50565b600081359050611301816112db565b92915050565b600080600080600080600060c0888a03121561132657611325610fcc565b5b60006113348a828b016112f2565b97505060206113458a828b0161101f565b96505060406113568a828b0161101f565b95505060606113678a828b016112f2565b94505060806113788a828b016112f2565b93505060a088013567ffffffffffffffff81111561139957611398610fd1565b5b6113a58a828b01611043565b925092505092959891949750929550565b6113bf816112d1565b82525050565b60006020820190506113da60008301846113b6565b92915050565b6113e981611099565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061142c83856113ef565b9350611439838584611400565b6114428361140f565b840190509392505050565b600060c082019050611462600083018a6113b6565b61146f6020830189611181565b61147c6040830188611181565b61148960608301876113b6565b61149660808301866113e0565b81810360a08301526114a9818486611420565b905098975050505050505050565b6000819050919050565b60006114dc6114d76114d284611099565b6114b7565b6112d1565b9050919050565b6114ec816114c1565b82525050565b60006080820190506115076000830188611181565b818103602083015261151a818688611420565b905061152960408301856113b6565b61153660608301846114e3565b9695505050505050565b600082825260208201905092915050565b7f43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d657360008201527f7361676553656e646572206973206e6f74207365740000000000000000000000602082015250565b60006115ad603583611540565b91506115b882611551565b604082019050919050565b600060208201905081810360008301526115dc816115a0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061161d82610f8e565b915061162883610f8e565b92508167ffffffffffffffff0483118215151615611649576116486115e3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061168e82610f8e565b915061169983610f8e565b9250826116a9576116a8611654565b5b828204905092915050565b60006116bf82610f8e565b91506116ca83610f8e565b92508267ffffffffffffffff038211156116e7576116e66115e3565b5b828201905092915050565b7f43726f7373446f6d61696e4d657373656e6765723a206f6e6c7920766572736960008201527f6f6e2030206f722031206d657373616765732061726520737570706f7274656460208201527f20617420746869732074696d6500000000000000000000000000000000000000604082015250565b6000611774604d83611540565b915061177f826116f2565b606082019050919050565b600060208201905081810360008301526117a381611767565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206c65676163792077697460008201527f6864726177616c20616c72656164792072656c61796564000000000000000000602082015250565b6000611806603783611540565b9150611811826117aa565b604082019050919050565b60006020820190508181036000830152611835816117f9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611872601f83611540565b915061187d8261183c565b602082019050919050565b600060208201905081810360008301526118a181611865565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d75737460008201527f206265207a65726f20756e6c657373206d6573736167652069732066726f6d2060208201527f612073797374656d206164647265737300000000000000000000000000000000604082015250565b6000611959605083611540565b9150611964826118d7565b606082019050919050565b600060208201905081810360008301526119888161194c565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520636160008201527f6e6e6f74206265207265706c6179656400000000000000000000000000000000602082015250565b60006119eb603083611540565b91506119f68261198f565b604082019050919050565b60006020820190508181036000830152611a1a816119de565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e60008201527f64206d65737361676520746f20626c6f636b65642073797374656d206164647260208201527f6573730000000000000000000000000000000000000000000000000000000000604082015250565b6000611aa3604383611540565b9150611aae82611a21565b606082019050919050565b60006020820190508181036000830152611ad281611a96565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520686160008201527f7320616c7265616479206265656e2072656c6179656400000000000000000000602082015250565b6000611b35603683611540565b9150611b4082611ad9565b604082019050919050565b60006020820190508181036000830152611b6481611b28565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2060008201527f72656c6179206d65737361676500000000000000000000000000000000000000602082015250565b6000611bc7602d83611540565b9150611bd282611b6b565b604082019050919050565b60006020820190508181036000830152611bf681611bba565b9050919050565b600081519050919050565b60005b83811015611c26578082015181840152602081019050611c0b565b83811115611c35576000848401525b50505050565b6000611c4682611bfd565b611c5081856113ef565b9350611c60818560208601611c08565b611c698161140f565b840191505092915050565b6000608082019050611c896000830187611181565b611c966020830186611181565b8181036040830152611ca88185611c3b565b9050611cb760608301846113b6565b95945050505050565b600060c082019050611cd560008301896113b6565b611ce26020830188611181565b611cef6040830187611181565b611cfc60608301866113b6565b611d0960808301856113b6565b81810360a0830152611d1b8184611c3b565b905097965050505050505056fea2646970667358221220675eba3cfe0f74f80927bdd9608dae14ce04fccf212428d4f134dc3ca4612c3464736f6c634300080f0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH1 0x80 MLOAD PUSH2 0x1D5E PUSH2 0x6A PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x368 ADD MSTORE PUSH2 0x620 ADD MSTORE PUSH2 0x1D5E PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FCE812C GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xB28ADE25 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB28ADE25 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xBF24EB63 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xD764AD0B EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xECC70428 EQ PUSH2 0x327 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x9FCE812C EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xA4E7F8BD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB1B1B209 EQ PUSH2 0x268 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x3DBB202B GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x3DBB202B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x3F827A5A EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6E296E45 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x7DEA7CC3 EQ PUSH2 0x1D5 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x28F85F7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xC568498 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x2828D7E8 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x3F8 DUP2 JUMP JUMPDEST PUSH2 0x421 PUSH32 0x0 PUSH2 0x392 DUP6 DUP6 DUP6 PUSH2 0x682 JUMP JUMPDEST CALLVALUE PUSH4 0xD764AD0B PUSH1 0xE0 SHL PUSH2 0x3A3 PUSH2 0xD03 JUMP JUMPDEST CALLER DUP11 CALLVALUE DUP10 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3BF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD41 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCB0F7FFD78F9AEE47A248FAE8DB181DB6EEE833039123E026DCBFF529522E52A CALLER DUP6 DUP6 PUSH2 0x464 PUSH2 0xD03 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD PUSH2 0x476 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EBB2EC2465BDB2A06A66FC37A0963AF8A2A6A1479D81D56FDB8CBB98096D546 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xCD PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x30D40 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xCE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30D40 PUSH1 0x10 DUP6 DUP6 SWAP1 POP PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3F8 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x725 DUP9 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x2 DUP2 PUSH2 0xFFFF AND LT PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x766 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x0 PUSH2 0x7CD DUP8 DUP10 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP13 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0xCB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP PUSH1 0xCF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xCF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x923 PUSH2 0xDC5 JUMP JUMPDEST ISZERO PUSH2 0x96C JUMPI DUP6 CALLVALUE EQ PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0x18A8 JUMP JUMPDEST JUMPDEST PUSH1 0xCE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x18A8 JUMP JUMPDEST JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP1 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0xA1D DUP9 PUSH2 0xDCE JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xCB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xB59 DUP9 DUP8 DUP10 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEAD PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC02 JUMPI PUSH1 0x1 PUSH1 0xCB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x4641DF4A962071E12719D8C8C8E5AC7FC4D97B927346A3D7A335B1F7517E133C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x99D0E048484BAA1B1540B1367CB128ACD7AB2946D1ED91EC10E3C85E4BF51B8F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3C PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 POP DUP5 PUSH1 0xF0 SHR SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE48 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB2 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEE8 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3F PUSH1 0xC8 DUP7 ADD PUSH1 0x40 MUL DIV GAS LT ISZERO PUSH2 0xE18 JUMPI PUSH4 0x8C379A0 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH25 0x185361666543616C6C3A204E6F7420656E6F75676820676173 PUSH1 0x58 MSTORE PUSH1 0x64 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP11 GAS CALL SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0xF0 SHL OR SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE61 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCBD4ECE900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF05 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xD764AD0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFAB DUP2 PUSH2 0xF8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP3 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x101C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102E DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1059 JUMPI PUSH2 0x1058 PUSH2 0x1034 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1075 PUSH2 0x1039 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0x103E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B2 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CF DUP2 PUSH2 0x10A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EE PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FD DUP8 DUP3 DUP9 ADD PUSH2 0x101F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111E JUMPI PUSH2 0x111D PUSH2 0xFD1 JUMP JUMPDEST JUMPDEST PUSH2 0x112A DUP8 DUP3 DUP9 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x113D DUP8 DUP3 DUP9 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1160 DUP2 PUSH2 0x1149 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1157 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x118A DUP2 PUSH2 0xFF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BE DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP2 EQ PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DB DUP2 PUSH2 0x11B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F6 PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1205 DUP5 DUP3 DUP6 ADD PUSH2 0x11CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1223 DUP2 PUSH2 0x120E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH2 0x125C PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127A PUSH2 0xFD1 JUMP JUMPDEST JUMPDEST PUSH2 0x1287 DUP7 DUP3 DUP8 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x129A DUP7 DUP3 DUP8 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BA JUMPI PUSH2 0x12B9 PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C8 DUP5 DUP3 DUP6 ADD PUSH2 0x101F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E4 DUP2 PUSH2 0x12D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1301 DUP2 PUSH2 0x12DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1325 PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1334 DUP11 DUP3 DUP12 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1345 DUP11 DUP3 DUP12 ADD PUSH2 0x101F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1356 DUP11 DUP3 DUP12 ADD PUSH2 0x101F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1367 DUP11 DUP3 DUP12 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1378 DUP11 DUP3 DUP12 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1398 PUSH2 0xFD1 JUMP JUMPDEST JUMPDEST PUSH2 0x13A5 DUP11 DUP3 DUP12 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x12D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142C DUP4 DUP6 PUSH2 0x13EF JUMP JUMPDEST SWAP4 POP PUSH2 0x1439 DUP4 DUP6 DUP5 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1442 DUP4 PUSH2 0x140F JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1462 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x146F PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x147C PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1489 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1496 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x13E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x14A9 DUP2 DUP5 DUP7 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DC PUSH2 0x14D7 PUSH2 0x14D2 DUP5 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x14C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1507 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1181 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x151A DUP2 DUP7 DUP9 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP PUSH2 0x1529 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1536 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14E3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A2078446F6D61696E4D6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7361676553656E646572206973206E6F74207365740000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD PUSH1 0x35 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B8 DUP3 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DC DUP2 PUSH2 0x15A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x161D DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1628 DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1699 DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x1654 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206F6E6C79207665727369 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E2030206F722031206D657373616765732061726520737570706F72746564 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x20617420746869732074696D6500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1774 PUSH1 0x4D DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x177F DUP3 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A3 DUP2 PUSH2 0x1767 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206C656761637920776974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6864726177616C20616C72656164792072656C61796564000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 PUSH1 0x37 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1811 DUP3 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1835 DUP2 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 PUSH1 0x1F DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x187D DUP3 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A2076616C7565206D757374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206265207A65726F20756E6C657373206D6573736167652069732066726F6D20 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x612073797374656D206164647265737300000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1959 PUSH1 0x50 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 DUP3 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1988 DUP2 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206D657373616765206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6E6F74206265207265706C6179656400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EB PUSH1 0x30 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F6 DUP3 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A1A DUP2 PUSH2 0x19DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A2063616E6E6F742073656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64206D65737361676520746F20626C6F636B65642073797374656D2061646472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA3 PUSH1 0x43 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAE DUP3 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD2 DUP2 PUSH2 0x1A96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206D657373616765206861 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320616C7265616479206265656E2072656C6179656400000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B35 PUSH1 0x36 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B40 DUP3 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B64 DUP2 PUSH2 0x1B28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206661696C656420746F20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72656C6179206D65737361676500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 PUSH1 0x2D DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD2 DUP3 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C26 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C0B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C35 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C46 DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1C50 DUP2 DUP6 PUSH2 0x13EF JUMP JUMPDEST SWAP4 POP PUSH2 0x1C60 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C08 JUMP JUMPDEST PUSH2 0x1C69 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C89 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1C96 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1181 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CA8 DUP2 DUP6 PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP PUSH2 0x1CB7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1CD5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1CE2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1CEF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1CFC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1D09 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x13B6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1D1B DUP2 DUP5 PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x5EBA3CFE0F74F809 0x27 0xBD 0xD9 PUSH1 0x8D 0xAE EQ 0xCE DIV 0xFC 0xCF 0x21 0x24 0x28 0xD4 CALL CALLVALUE 0xDC EXTCODECOPY LOG4 PUSH2 0x2C34 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"175:707:9:-:0;;;231:61;;;;;;;;;;282:1;8165:15:6;8147:33;;;;;;;;;;8100:87;175:707:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MESSAGE_VERSION_1203":{"entryPoint":1366,"id":1203,"parameterSlots":0,"returnSlots":0},"@MIN_GAS_CALLDATA_OVERHEAD_1219":{"entryPoint":850,"id":1219,"parameterSlots":0,"returnSlots":0},"@MIN_GAS_CONSTANT_OVERHEAD_1207":{"entryPoint":1559,"id":1207,"parameterSlots":0,"returnSlots":0},"@MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR_1215":{"entryPoint":855,"id":1215,"parameterSlots":0,"returnSlots":0},"@MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR_1211":{"entryPoint":861,"id":1211,"parameterSlots":0,"returnSlots":0},"@OTHER_MESSENGER_1222":{"entryPoint":1566,"id":1222,"parameterSlots":0,"returnSlots":0},"@_isOtherMessenger_2075":{"entryPoint":3525,"id":2075,"parameterSlots":0,"returnSlots":1},"@_isUnsafeTarget_2087":{"entryPoint":3534,"id":2087,"parameterSlots":1,"returnSlots":1},"@_sendMessage_2065":{"entryPoint":3393,"id":2065,"parameterSlots":4,"returnSlots":0},"@baseGas_1603":{"entryPoint":1666,"id":1603,"parameterSlots":3,"returnSlots":1},"@callWithMinGas_574":{"entryPoint":3541,"id":574,"parameterSlots":4,"returnSlots":1},"@decodeVersionedNonce_306":{"entryPoint":3399,"id":306,"parameterSlots":1,"returnSlots":2},"@encodeCrossDomainMessageV0_237":{"entryPoint":3656,"id":237,"parameterSlots":4,"returnSlots":1},"@encodeCrossDomainMessageV1_267":{"entryPoint":3816,"id":267,"parameterSlots":6,"returnSlots":1},"@encodeVersionedNonce_284":{"entryPoint":3635,"id":284,"parameterSlots":2,"returnSlots":1},"@failedMessages_1238":{"entryPoint":1602,"id":1238,"parameterSlots":0,"returnSlots":0},"@hashCrossDomainMessageV0_445":{"entryPoint":3459,"id":445,"parameterSlots":4,"returnSlots":1},"@hashCrossDomainMessageV1_476":{"entryPoint":3490,"id":476,"parameterSlots":6,"returnSlots":1},"@messageNonce_1570":{"entryPoint":3331,"id":1570,"parameterSlots":0,"returnSlots":1},"@relayMessage_1540":{"entryPoint":1818,"id":1540,"parameterSlots":7,"returnSlots":0},"@sendMessage_1346":{"entryPoint":867,"id":1346,"parameterSlots":4,"returnSlots":0},"@setXDomainMessageSender_2097":{"entryPoint":1750,"id":2097,"parameterSlots":1,"returnSlots":0},"@successfulMessages_1227":{"entryPoint":1634,"id":1227,"parameterSlots":0,"returnSlots":0},"@xDomainMessageSender_1557":{"entryPoint":1371,"id":1557,"parameterSlots":0,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4127,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":4556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":4163,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":4850,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":4288,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4772,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_bytes_calldata_ptrt_uint32":{"entryPoint":4309,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_bytes32":{"entryPoint":4577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptrt_uint32":{"entryPoint":4676,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr":{"entryPoint":4871,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4481,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4634,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5152,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":7227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032_to_t_string_memory_ptr_fromStack":{"entryPoint":5991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1_to_t_string_memory_ptr_fromStack":{"entryPoint":6137,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398_to_t_string_memory_ptr_fromStack":{"entryPoint":5536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5_to_t_string_memory_ptr_fromStack":{"entryPoint":6806,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5_to_t_string_memory_ptr_fromStack":{"entryPoint":6476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150_to_t_string_memory_ptr_fromStack":{"entryPoint":6952,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d_to_t_string_memory_ptr_fromStack":{"entryPoint":6622,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288_to_t_string_memory_ptr_fromStack":{"entryPoint":7098,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":6245,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":4439,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5046,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint256_fromStack":{"entryPoint":5347,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":5088,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":4002,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4496,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":7284,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_calldata_ptr_t_uint256_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":5362,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6026,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6172,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6511,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6987,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6657,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7133,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6280,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":4454,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5061,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7360,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint32_t_bytes_calldata_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5197,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":4017,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":7165,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5103,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5440,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":5812,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint64":{"entryPoint":5763,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint64":{"entryPoint":5650,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4086,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4622,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4523,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4425,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":4054,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4817,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4249,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":3982,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint32_to_t_uint256":{"entryPoint":5313,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":5120,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7176,"id":null,"parameterSlots":3,"returnSlots":0},"identity":{"entryPoint":5303,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x01":{"entryPoint":6312,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x11":{"entryPoint":5603,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5716,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":4153,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":4148,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":4158,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4049,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4044,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5135,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032":{"entryPoint":5874,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1":{"entryPoint":6058,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398":{"entryPoint":5457,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5":{"entryPoint":6689,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5":{"entryPoint":6359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150":{"entryPoint":6873,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d":{"entryPoint":6543,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288":{"entryPoint":7019,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":6204,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":4104,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":4533,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4827,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":4265,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24371:10","statements":[{"body":{"nodeType":"YulBlock","src":"51:57:10","statements":[{"nodeType":"YulAssignment","src":"61:41:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"83:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:10"},"nodeType":"YulFunctionCall","src":"72:30:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:10"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:10","type":""}],"src":"7:101:10"},{"body":{"nodeType":"YulBlock","src":"177:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"194:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"216:5:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"199:16:10"},"nodeType":"YulFunctionCall","src":"199:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"187:6:10"},"nodeType":"YulFunctionCall","src":"187:36:10"},"nodeType":"YulExpressionStatement","src":"187:36:10"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"165:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"172:3:10","type":""}],"src":"114:115:10"},{"body":{"nodeType":"YulBlock","src":"331:122:10","statements":[{"nodeType":"YulAssignment","src":"341:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"353:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"364:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"349:3:10"},"nodeType":"YulFunctionCall","src":"349:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"341:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"419:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"428:3:10"},"nodeType":"YulFunctionCall","src":"428:17:10"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"377:41:10"},"nodeType":"YulFunctionCall","src":"377:69:10"},"nodeType":"YulExpressionStatement","src":"377:69:10"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"303:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"315:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"326:4:10","type":""}],"src":"235:218:10"},{"body":{"nodeType":"YulBlock","src":"499:35:10","statements":[{"nodeType":"YulAssignment","src":"509:19:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"525:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"519:5:10"},"nodeType":"YulFunctionCall","src":"519:9:10"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"509:6:10"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"492:6:10","type":""}],"src":"459:75:10"},{"body":{"nodeType":"YulBlock","src":"629:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"646:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"649:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"639:6:10"},"nodeType":"YulFunctionCall","src":"639:12:10"},"nodeType":"YulExpressionStatement","src":"639:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"540:117:10"},{"body":{"nodeType":"YulBlock","src":"752:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"769:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"772:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"762:6:10"},"nodeType":"YulFunctionCall","src":"762:12:10"},"nodeType":"YulExpressionStatement","src":"762:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"663:117:10"},{"body":{"nodeType":"YulBlock","src":"831:81:10","statements":[{"nodeType":"YulAssignment","src":"841:65:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"856:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"863:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"852:3:10"},"nodeType":"YulFunctionCall","src":"852:54:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"841:7:10"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"813:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"823:7:10","type":""}],"src":"786:126:10"},{"body":{"nodeType":"YulBlock","src":"963:51:10","statements":[{"nodeType":"YulAssignment","src":"973:35:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1002:5:10"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"984:17:10"},"nodeType":"YulFunctionCall","src":"984:24:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"973:7:10"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"945:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"955:7:10","type":""}],"src":"918:96:10"},{"body":{"nodeType":"YulBlock","src":"1063:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"1120:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1129:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1132:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1122:6:10"},"nodeType":"YulFunctionCall","src":"1122:12:10"},"nodeType":"YulExpressionStatement","src":"1122:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1086:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1111:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1093:17:10"},"nodeType":"YulFunctionCall","src":"1093:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1083:2:10"},"nodeType":"YulFunctionCall","src":"1083:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1076:6:10"},"nodeType":"YulFunctionCall","src":"1076:43:10"},"nodeType":"YulIf","src":"1073:63:10"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1056:5:10","type":""}],"src":"1020:122:10"},{"body":{"nodeType":"YulBlock","src":"1200:87:10","statements":[{"nodeType":"YulAssignment","src":"1210:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1232:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1219:12:10"},"nodeType":"YulFunctionCall","src":"1219:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1210:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1275:5:10"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1248:26:10"},"nodeType":"YulFunctionCall","src":"1248:33:10"},"nodeType":"YulExpressionStatement","src":"1248:33:10"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1178:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1186:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1194:5:10","type":""}],"src":"1148:139:10"},{"body":{"nodeType":"YulBlock","src":"1382:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1399:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1402:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1392:6:10"},"nodeType":"YulFunctionCall","src":"1392:12:10"},"nodeType":"YulExpressionStatement","src":"1392:12:10"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1293:117:10"},{"body":{"nodeType":"YulBlock","src":"1505:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1525:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1515:6:10"},"nodeType":"YulFunctionCall","src":"1515:12:10"},"nodeType":"YulExpressionStatement","src":"1515:12:10"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"1416:117:10"},{"body":{"nodeType":"YulBlock","src":"1628:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1648:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1638:6:10"},"nodeType":"YulFunctionCall","src":"1638:12:10"},"nodeType":"YulExpressionStatement","src":"1638:12:10"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"1539:117:10"},{"body":{"nodeType":"YulBlock","src":"1749:478:10","statements":[{"body":{"nodeType":"YulBlock","src":"1798:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"1800:77:10"},"nodeType":"YulFunctionCall","src":"1800:79:10"},"nodeType":"YulExpressionStatement","src":"1800:79:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1777:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1785:4:10","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1773:3:10"},"nodeType":"YulFunctionCall","src":"1773:17:10"},{"name":"end","nodeType":"YulIdentifier","src":"1792:3:10"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1769:3:10"},"nodeType":"YulFunctionCall","src":"1769:27:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1762:6:10"},"nodeType":"YulFunctionCall","src":"1762:35:10"},"nodeType":"YulIf","src":"1759:122:10"},{"nodeType":"YulAssignment","src":"1890:30:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1913:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1900:12:10"},"nodeType":"YulFunctionCall","src":"1900:20:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1890:6:10"}]},{"body":{"nodeType":"YulBlock","src":"1963:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"1965:77:10"},"nodeType":"YulFunctionCall","src":"1965:79:10"},"nodeType":"YulExpressionStatement","src":"1965:79:10"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1935:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"1943:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1932:2:10"},"nodeType":"YulFunctionCall","src":"1932:30:10"},"nodeType":"YulIf","src":"1929:117:10"},{"nodeType":"YulAssignment","src":"2055:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2071:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2079:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:10"},"nodeType":"YulFunctionCall","src":"2067:17:10"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2055:8:10"}]},{"body":{"nodeType":"YulBlock","src":"2138:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"2140:77:10"},"nodeType":"YulFunctionCall","src":"2140:79:10"},"nodeType":"YulExpressionStatement","src":"2140:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2103:8:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2117:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"2125:4:10","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2113:3:10"},"nodeType":"YulFunctionCall","src":"2113:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2099:3:10"},"nodeType":"YulFunctionCall","src":"2099:32:10"},{"name":"end","nodeType":"YulIdentifier","src":"2133:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2096:2:10"},"nodeType":"YulFunctionCall","src":"2096:41:10"},"nodeType":"YulIf","src":"2093:128:10"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1716:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"1724:3:10","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1732:8:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"1742:6:10","type":""}],"src":"1675:552:10"},{"body":{"nodeType":"YulBlock","src":"2277:49:10","statements":[{"nodeType":"YulAssignment","src":"2287:33:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2302:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"2309:10:10","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2298:3:10"},"nodeType":"YulFunctionCall","src":"2298:22:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2287:7:10"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2259:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2269:7:10","type":""}],"src":"2233:93:10"},{"body":{"nodeType":"YulBlock","src":"2374:78:10","statements":[{"body":{"nodeType":"YulBlock","src":"2430:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2439:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2442:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2432:6:10"},"nodeType":"YulFunctionCall","src":"2432:12:10"},"nodeType":"YulExpressionStatement","src":"2432:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2397:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2421:5:10"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"2404:16:10"},"nodeType":"YulFunctionCall","src":"2404:23:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2394:2:10"},"nodeType":"YulFunctionCall","src":"2394:34:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2387:6:10"},"nodeType":"YulFunctionCall","src":"2387:42:10"},"nodeType":"YulIf","src":"2384:62:10"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2367:5:10","type":""}],"src":"2332:120:10"},{"body":{"nodeType":"YulBlock","src":"2509:86:10","statements":[{"nodeType":"YulAssignment","src":"2519:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2541:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2528:12:10"},"nodeType":"YulFunctionCall","src":"2528:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2519:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2583:5:10"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"2557:25:10"},"nodeType":"YulFunctionCall","src":"2557:32:10"},"nodeType":"YulExpressionStatement","src":"2557:32:10"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2487:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"2495:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2503:5:10","type":""}],"src":"2458:137:10"},{"body":{"nodeType":"YulBlock","src":"2719:697:10","statements":[{"body":{"nodeType":"YulBlock","src":"2765:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2767:77:10"},"nodeType":"YulFunctionCall","src":"2767:79:10"},"nodeType":"YulExpressionStatement","src":"2767:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2740:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"2749:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2736:3:10"},"nodeType":"YulFunctionCall","src":"2736:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"2761:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2732:3:10"},"nodeType":"YulFunctionCall","src":"2732:32:10"},"nodeType":"YulIf","src":"2729:119:10"},{"nodeType":"YulBlock","src":"2858:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2873:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"2887:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2877:6:10","type":""}]},{"nodeType":"YulAssignment","src":"2902:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2937:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"2948:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2933:3:10"},"nodeType":"YulFunctionCall","src":"2933:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2957:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2912:20:10"},"nodeType":"YulFunctionCall","src":"2912:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2902:6:10"}]}]},{"nodeType":"YulBlock","src":"2985:297:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3000:46:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3031:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3042:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3027:3:10"},"nodeType":"YulFunctionCall","src":"3027:18:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3014:12:10"},"nodeType":"YulFunctionCall","src":"3014:32:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3004:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3095:77:10"},"nodeType":"YulFunctionCall","src":"3095:79:10"},"nodeType":"YulExpressionStatement","src":"3095:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3065:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3073:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3062:2:10"},"nodeType":"YulFunctionCall","src":"3062:30:10"},"nodeType":"YulIf","src":"3059:117:10"},{"nodeType":"YulAssignment","src":"3190:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3244:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3255:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3240:3:10"},"nodeType":"YulFunctionCall","src":"3240:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3264:7:10"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"3208:31:10"},"nodeType":"YulFunctionCall","src":"3208:64:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3190:6:10"},{"name":"value2","nodeType":"YulIdentifier","src":"3198:6:10"}]}]},{"nodeType":"YulBlock","src":"3292:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"3307:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"3321:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3311:6:10","type":""}]},{"nodeType":"YulAssignment","src":"3337:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3371:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"3382:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3367:3:10"},"nodeType":"YulFunctionCall","src":"3367:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3391:7:10"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"3347:19:10"},"nodeType":"YulFunctionCall","src":"3347:52:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3337:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_bytes_calldata_ptrt_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2665:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2676:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2688:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2696:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2704:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2712:6:10","type":""}],"src":"2601:815:10"},{"body":{"nodeType":"YulBlock","src":"3466:45:10","statements":[{"nodeType":"YulAssignment","src":"3476:29:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3491:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"3498:6:10","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3487:3:10"},"nodeType":"YulFunctionCall","src":"3487:18:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3476:7:10"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3448:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3458:7:10","type":""}],"src":"3422:89:10"},{"body":{"nodeType":"YulBlock","src":"3580:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3597:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3619:5:10"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"3602:16:10"},"nodeType":"YulFunctionCall","src":"3602:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3590:6:10"},"nodeType":"YulFunctionCall","src":"3590:36:10"},"nodeType":"YulExpressionStatement","src":"3590:36:10"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3568:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3575:3:10","type":""}],"src":"3517:115:10"},{"body":{"nodeType":"YulBlock","src":"3734:122:10","statements":[{"nodeType":"YulAssignment","src":"3744:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3756:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3767:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3752:3:10"},"nodeType":"YulFunctionCall","src":"3752:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3744:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3822:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3835:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3846:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3831:3:10"},"nodeType":"YulFunctionCall","src":"3831:17:10"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"3780:41:10"},"nodeType":"YulFunctionCall","src":"3780:69:10"},"nodeType":"YulExpressionStatement","src":"3780:69:10"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3706:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3718:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3729:4:10","type":""}],"src":"3638:218:10"},{"body":{"nodeType":"YulBlock","src":"3927:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3944:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3967:5:10"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3949:17:10"},"nodeType":"YulFunctionCall","src":"3949:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3937:6:10"},"nodeType":"YulFunctionCall","src":"3937:37:10"},"nodeType":"YulExpressionStatement","src":"3937:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3915:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3922:3:10","type":""}],"src":"3862:118:10"},{"body":{"nodeType":"YulBlock","src":"4084:124:10","statements":[{"nodeType":"YulAssignment","src":"4094:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4106:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4117:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4102:3:10"},"nodeType":"YulFunctionCall","src":"4102:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4094:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4174:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4187:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4198:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4183:3:10"},"nodeType":"YulFunctionCall","src":"4183:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4130:43:10"},"nodeType":"YulFunctionCall","src":"4130:71:10"},"nodeType":"YulExpressionStatement","src":"4130:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4056:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4068:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4079:4:10","type":""}],"src":"3986:222:10"},{"body":{"nodeType":"YulBlock","src":"4259:32:10","statements":[{"nodeType":"YulAssignment","src":"4269:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"4280:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4269:7:10"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4241:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4251:7:10","type":""}],"src":"4214:77:10"},{"body":{"nodeType":"YulBlock","src":"4340:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"4397:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4406:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4409:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4399:6:10"},"nodeType":"YulFunctionCall","src":"4399:12:10"},"nodeType":"YulExpressionStatement","src":"4399:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4363:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4388:5:10"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4370:17:10"},"nodeType":"YulFunctionCall","src":"4370:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4360:2:10"},"nodeType":"YulFunctionCall","src":"4360:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4353:6:10"},"nodeType":"YulFunctionCall","src":"4353:43:10"},"nodeType":"YulIf","src":"4350:63:10"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4333:5:10","type":""}],"src":"4297:122:10"},{"body":{"nodeType":"YulBlock","src":"4477:87:10","statements":[{"nodeType":"YulAssignment","src":"4487:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4509:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4496:12:10"},"nodeType":"YulFunctionCall","src":"4496:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4487:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4552:5:10"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"4525:26:10"},"nodeType":"YulFunctionCall","src":"4525:33:10"},"nodeType":"YulExpressionStatement","src":"4525:33:10"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4455:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"4463:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4471:5:10","type":""}],"src":"4425:139:10"},{"body":{"nodeType":"YulBlock","src":"4636:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"4682:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4684:77:10"},"nodeType":"YulFunctionCall","src":"4684:79:10"},"nodeType":"YulExpressionStatement","src":"4684:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4657:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4666:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4653:3:10"},"nodeType":"YulFunctionCall","src":"4653:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4678:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4649:3:10"},"nodeType":"YulFunctionCall","src":"4649:32:10"},"nodeType":"YulIf","src":"4646:119:10"},{"nodeType":"YulBlock","src":"4775:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"4790:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"4804:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4794:6:10","type":""}]},{"nodeType":"YulAssignment","src":"4819:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4854:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"4865:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4850:3:10"},"nodeType":"YulFunctionCall","src":"4850:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4874:7:10"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"4829:20:10"},"nodeType":"YulFunctionCall","src":"4829:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4819:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4606:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4617:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4629:6:10","type":""}],"src":"4570:329:10"},{"body":{"nodeType":"YulBlock","src":"4947:48:10","statements":[{"nodeType":"YulAssignment","src":"4957:32:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4982:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4975:6:10"},"nodeType":"YulFunctionCall","src":"4975:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4968:6:10"},"nodeType":"YulFunctionCall","src":"4968:21:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4957:7:10"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4929:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4939:7:10","type":""}],"src":"4905:90:10"},{"body":{"nodeType":"YulBlock","src":"5060:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5077:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5097:5:10"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"5082:14:10"},"nodeType":"YulFunctionCall","src":"5082:21:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5070:6:10"},"nodeType":"YulFunctionCall","src":"5070:34:10"},"nodeType":"YulExpressionStatement","src":"5070:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5048:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5055:3:10","type":""}],"src":"5001:109:10"},{"body":{"nodeType":"YulBlock","src":"5208:118:10","statements":[{"nodeType":"YulAssignment","src":"5218:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5230:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5241:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5226:3:10"},"nodeType":"YulFunctionCall","src":"5226:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5218:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5292:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5305:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5316:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5301:3:10"},"nodeType":"YulFunctionCall","src":"5301:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5254:37:10"},"nodeType":"YulFunctionCall","src":"5254:65:10"},"nodeType":"YulExpressionStatement","src":"5254:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5180:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5192:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5203:4:10","type":""}],"src":"5116:210:10"},{"body":{"nodeType":"YulBlock","src":"5433:569:10","statements":[{"body":{"nodeType":"YulBlock","src":"5479:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5481:77:10"},"nodeType":"YulFunctionCall","src":"5481:79:10"},"nodeType":"YulExpressionStatement","src":"5481:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5454:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"5463:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5450:3:10"},"nodeType":"YulFunctionCall","src":"5450:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"5475:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5446:3:10"},"nodeType":"YulFunctionCall","src":"5446:32:10"},"nodeType":"YulIf","src":"5443:119:10"},{"nodeType":"YulBlock","src":"5572:296:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5587:45:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5618:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5629:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5614:3:10"},"nodeType":"YulFunctionCall","src":"5614:17:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5601:12:10"},"nodeType":"YulFunctionCall","src":"5601:31:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5591:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"5679:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5681:77:10"},"nodeType":"YulFunctionCall","src":"5681:79:10"},"nodeType":"YulExpressionStatement","src":"5681:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5651:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"5659:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5648:2:10"},"nodeType":"YulFunctionCall","src":"5648:30:10"},"nodeType":"YulIf","src":"5645:117:10"},{"nodeType":"YulAssignment","src":"5776:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5830:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5841:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5826:3:10"},"nodeType":"YulFunctionCall","src":"5826:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5850:7:10"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"5794:31:10"},"nodeType":"YulFunctionCall","src":"5794:64:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5776:6:10"},{"name":"value1","nodeType":"YulIdentifier","src":"5784:6:10"}]}]},{"nodeType":"YulBlock","src":"5878:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"5893:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"5907:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5897:6:10","type":""}]},{"nodeType":"YulAssignment","src":"5923:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5957:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"5968:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5953:3:10"},"nodeType":"YulFunctionCall","src":"5953:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5977:7:10"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"5933:19:10"},"nodeType":"YulFunctionCall","src":"5933:52:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5923:6:10"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptrt_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5387:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5398:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5410:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5418:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5426:6:10","type":""}],"src":"5332:670:10"},{"body":{"nodeType":"YulBlock","src":"6074:263:10","statements":[{"body":{"nodeType":"YulBlock","src":"6120:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6122:77:10"},"nodeType":"YulFunctionCall","src":"6122:79:10"},"nodeType":"YulExpressionStatement","src":"6122:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6095:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6104:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6091:3:10"},"nodeType":"YulFunctionCall","src":"6091:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6116:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6087:3:10"},"nodeType":"YulFunctionCall","src":"6087:32:10"},"nodeType":"YulIf","src":"6084:119:10"},{"nodeType":"YulBlock","src":"6213:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"6228:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"6242:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6232:6:10","type":""}]},{"nodeType":"YulAssignment","src":"6257:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6292:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"6303:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6288:3:10"},"nodeType":"YulFunctionCall","src":"6288:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6312:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6267:20:10"},"nodeType":"YulFunctionCall","src":"6267:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6257:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6055:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6067:6:10","type":""}],"src":"6008:329:10"},{"body":{"nodeType":"YulBlock","src":"6388:32:10","statements":[{"nodeType":"YulAssignment","src":"6398:16:10","value":{"name":"value","nodeType":"YulIdentifier","src":"6409:5:10"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6398:7:10"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6370:5:10","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6380:7:10","type":""}],"src":"6343:77:10"},{"body":{"nodeType":"YulBlock","src":"6469:79:10","statements":[{"body":{"nodeType":"YulBlock","src":"6526:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6535:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6538:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6528:6:10"},"nodeType":"YulFunctionCall","src":"6528:12:10"},"nodeType":"YulExpressionStatement","src":"6528:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6492:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6517:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6499:17:10"},"nodeType":"YulFunctionCall","src":"6499:24:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6489:2:10"},"nodeType":"YulFunctionCall","src":"6489:35:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6482:6:10"},"nodeType":"YulFunctionCall","src":"6482:43:10"},"nodeType":"YulIf","src":"6479:63:10"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6462:5:10","type":""}],"src":"6426:122:10"},{"body":{"nodeType":"YulBlock","src":"6606:87:10","statements":[{"nodeType":"YulAssignment","src":"6616:29:10","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6638:6:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6625:12:10"},"nodeType":"YulFunctionCall","src":"6625:20:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6616:5:10"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6681:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6654:26:10"},"nodeType":"YulFunctionCall","src":"6654:33:10"},"nodeType":"YulExpressionStatement","src":"6654:33:10"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6584:6:10","type":""},{"name":"end","nodeType":"YulTypedName","src":"6592:3:10","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6600:5:10","type":""}],"src":"6554:139:10"},{"body":{"nodeType":"YulBlock","src":"6869:1085:10","statements":[{"body":{"nodeType":"YulBlock","src":"6916:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6918:77:10"},"nodeType":"YulFunctionCall","src":"6918:79:10"},"nodeType":"YulExpressionStatement","src":"6918:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6890:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"6899:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6886:3:10"},"nodeType":"YulFunctionCall","src":"6886:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"6911:3:10","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6882:3:10"},"nodeType":"YulFunctionCall","src":"6882:33:10"},"nodeType":"YulIf","src":"6879:120:10"},{"nodeType":"YulBlock","src":"7009:117:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7024:15:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7038:1:10","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7028:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7053:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7088:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7099:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7084:3:10"},"nodeType":"YulFunctionCall","src":"7084:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7108:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7063:20:10"},"nodeType":"YulFunctionCall","src":"7063:53:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7053:6:10"}]}]},{"nodeType":"YulBlock","src":"7136:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7151:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7165:2:10","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7155:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7181:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7216:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7227:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7212:3:10"},"nodeType":"YulFunctionCall","src":"7212:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7236:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7191:20:10"},"nodeType":"YulFunctionCall","src":"7191:53:10"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7181:6:10"}]}]},{"nodeType":"YulBlock","src":"7264:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7293:2:10","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7283:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7309:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7344:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7355:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7340:3:10"},"nodeType":"YulFunctionCall","src":"7340:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7364:7:10"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7319:20:10"},"nodeType":"YulFunctionCall","src":"7319:53:10"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7309:6:10"}]}]},{"nodeType":"YulBlock","src":"7392:118:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7407:16:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7421:2:10","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7411:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7437:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7472:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7483:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7468:3:10"},"nodeType":"YulFunctionCall","src":"7468:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7492:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7447:20:10"},"nodeType":"YulFunctionCall","src":"7447:53:10"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7437:6:10"}]}]},{"nodeType":"YulBlock","src":"7520:119:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7535:17:10","value":{"kind":"number","nodeType":"YulLiteral","src":"7549:3:10","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7539:6:10","type":""}]},{"nodeType":"YulAssignment","src":"7566:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7601:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7612:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7597:3:10"},"nodeType":"YulFunctionCall","src":"7597:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7621:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7576:20:10"},"nodeType":"YulFunctionCall","src":"7576:53:10"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7566:6:10"}]}]},{"nodeType":"YulBlock","src":"7649:298:10","statements":[{"nodeType":"YulVariableDeclaration","src":"7664:47:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7695:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7706:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7691:3:10"},"nodeType":"YulFunctionCall","src":"7691:19:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7678:12:10"},"nodeType":"YulFunctionCall","src":"7678:33:10"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7668:6:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"7758:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7760:77:10"},"nodeType":"YulFunctionCall","src":"7760:79:10"},"nodeType":"YulExpressionStatement","src":"7760:79:10"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7730:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"7738:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7727:2:10"},"nodeType":"YulFunctionCall","src":"7727:30:10"},"nodeType":"YulIf","src":"7724:117:10"},{"nodeType":"YulAssignment","src":"7855:82:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7909:9:10"},{"name":"offset","nodeType":"YulIdentifier","src":"7920:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7905:3:10"},"nodeType":"YulFunctionCall","src":"7905:22:10"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7929:7:10"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"7873:31:10"},"nodeType":"YulFunctionCall","src":"7873:64:10"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7855:6:10"},{"name":"value6","nodeType":"YulIdentifier","src":"7863:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6791:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6802:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6814:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6822:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6830:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6838:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6846:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6854:6:10","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6862:6:10","type":""}],"src":"6699:1255:10"},{"body":{"nodeType":"YulBlock","src":"8025:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8042:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8065:5:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8047:17:10"},"nodeType":"YulFunctionCall","src":"8047:24:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8035:6:10"},"nodeType":"YulFunctionCall","src":"8035:37:10"},"nodeType":"YulExpressionStatement","src":"8035:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8013:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8020:3:10","type":""}],"src":"7960:118:10"},{"body":{"nodeType":"YulBlock","src":"8182:124:10","statements":[{"nodeType":"YulAssignment","src":"8192:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8204:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8215:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8200:3:10"},"nodeType":"YulFunctionCall","src":"8200:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8192:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8272:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8285:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8296:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8281:3:10"},"nodeType":"YulFunctionCall","src":"8281:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"8228:43:10"},"nodeType":"YulFunctionCall","src":"8228:71:10"},"nodeType":"YulExpressionStatement","src":"8228:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8154:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8166:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8177:4:10","type":""}],"src":"8084:222:10"},{"body":{"nodeType":"YulBlock","src":"8375:52:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8392:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8414:5:10"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"8397:16:10"},"nodeType":"YulFunctionCall","src":"8397:23:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8385:6:10"},"nodeType":"YulFunctionCall","src":"8385:36:10"},"nodeType":"YulExpressionStatement","src":"8385:36:10"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8363:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8370:3:10","type":""}],"src":"8312:115:10"},{"body":{"nodeType":"YulBlock","src":"8528:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8545:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8550:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8538:6:10"},"nodeType":"YulFunctionCall","src":"8538:19:10"},"nodeType":"YulExpressionStatement","src":"8538:19:10"},{"nodeType":"YulAssignment","src":"8566:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8585:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"8590:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8581:3:10"},"nodeType":"YulFunctionCall","src":"8581:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8566:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8500:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"8505:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8516:11:10","type":""}],"src":"8433:168:10"},{"body":{"nodeType":"YulBlock","src":"8658:103:10","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8681:3:10"},{"name":"src","nodeType":"YulIdentifier","src":"8686:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8691:6:10"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8668:12:10"},"nodeType":"YulFunctionCall","src":"8668:30:10"},"nodeType":"YulExpressionStatement","src":"8668:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8739:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8744:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8735:3:10"},"nodeType":"YulFunctionCall","src":"8735:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"8753:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8728:6:10"},"nodeType":"YulFunctionCall","src":"8728:27:10"},"nodeType":"YulExpressionStatement","src":"8728:27:10"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8640:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8645:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"8650:6:10","type":""}],"src":"8607:154:10"},{"body":{"nodeType":"YulBlock","src":"8815:54:10","statements":[{"nodeType":"YulAssignment","src":"8825:38:10","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8843:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"8850:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8839:3:10"},"nodeType":"YulFunctionCall","src":"8839:14:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8859:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8855:3:10"},"nodeType":"YulFunctionCall","src":"8855:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8835:3:10"},"nodeType":"YulFunctionCall","src":"8835:28:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8825:6:10"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8798:5:10","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8808:6:10","type":""}],"src":"8767:102:10"},{"body":{"nodeType":"YulBlock","src":"8997:201:10","statements":[{"nodeType":"YulAssignment","src":"9007:77:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9072:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"9077:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9014:57:10"},"nodeType":"YulFunctionCall","src":"9014:70:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9007:3:10"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"9118:5:10"},{"name":"pos","nodeType":"YulIdentifier","src":"9125:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"9130:6:10"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"9094:23:10"},"nodeType":"YulFunctionCall","src":"9094:43:10"},"nodeType":"YulExpressionStatement","src":"9094:43:10"},{"nodeType":"YulAssignment","src":"9146:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9157:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9184:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9162:21:10"},"nodeType":"YulFunctionCall","src":"9162:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9153:3:10"},"nodeType":"YulFunctionCall","src":"9153:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9146:3:10"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"8970:5:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"8977:6:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8985:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8993:3:10","type":""}],"src":"8897:301:10"},{"body":{"nodeType":"YulBlock","src":"9468:614:10","statements":[{"nodeType":"YulAssignment","src":"9478:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9490:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9501:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9486:3:10"},"nodeType":"YulFunctionCall","src":"9486:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9478:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9559:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9572:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9583:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9568:3:10"},"nodeType":"YulFunctionCall","src":"9568:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9515:43:10"},"nodeType":"YulFunctionCall","src":"9515:71:10"},"nodeType":"YulExpressionStatement","src":"9515:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"9640:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9653:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9664:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9649:3:10"},"nodeType":"YulFunctionCall","src":"9649:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9596:43:10"},"nodeType":"YulFunctionCall","src":"9596:72:10"},"nodeType":"YulExpressionStatement","src":"9596:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"9722:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9735:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9746:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9731:3:10"},"nodeType":"YulFunctionCall","src":"9731:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9678:43:10"},"nodeType":"YulFunctionCall","src":"9678:72:10"},"nodeType":"YulExpressionStatement","src":"9678:72:10"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"9804:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9817:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9828:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9813:3:10"},"nodeType":"YulFunctionCall","src":"9813:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9760:43:10"},"nodeType":"YulFunctionCall","src":"9760:72:10"},"nodeType":"YulExpressionStatement","src":"9760:72:10"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"9884:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9897:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9908:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9893:3:10"},"nodeType":"YulFunctionCall","src":"9893:19:10"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"9842:41:10"},"nodeType":"YulFunctionCall","src":"9842:71:10"},"nodeType":"YulExpressionStatement","src":"9842:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9934:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9945:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9930:3:10"},"nodeType":"YulFunctionCall","src":"9930:19:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9955:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"9961:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9951:3:10"},"nodeType":"YulFunctionCall","src":"9951:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9923:6:10"},"nodeType":"YulFunctionCall","src":"9923:49:10"},"nodeType":"YulExpressionStatement","src":"9923:49:10"},{"nodeType":"YulAssignment","src":"9981:94:10","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"10053:6:10"},{"name":"value6","nodeType":"YulIdentifier","src":"10061:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"10070:4:10"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9989:63:10"},"nodeType":"YulFunctionCall","src":"9989:86:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9981:4:10"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint32_t_bytes_calldata_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9392:9:10","type":""},{"name":"value6","nodeType":"YulTypedName","src":"9404:6:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"9412:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9420:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9428:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9436:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9444:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9452:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9463:4:10","type":""}],"src":"9204:878:10"},{"body":{"nodeType":"YulBlock","src":"10120:28:10","statements":[{"nodeType":"YulAssignment","src":"10130:12:10","value":{"name":"value","nodeType":"YulIdentifier","src":"10137:5:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"10130:3:10"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10106:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"10116:3:10","type":""}],"src":"10088:60:10"},{"body":{"nodeType":"YulBlock","src":"10213:81:10","statements":[{"nodeType":"YulAssignment","src":"10223:65:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10280:5:10"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"10263:16:10"},"nodeType":"YulFunctionCall","src":"10263:23:10"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"10254:8:10"},"nodeType":"YulFunctionCall","src":"10254:33:10"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10236:17:10"},"nodeType":"YulFunctionCall","src":"10236:52:10"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"10223:9:10"}]}]},"name":"convert_t_uint32_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10193:5:10","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"10203:9:10","type":""}],"src":"10154:140:10"},{"body":{"nodeType":"YulBlock","src":"10364:65:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10381:3:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10416:5:10"}],"functionName":{"name":"convert_t_uint32_to_t_uint256","nodeType":"YulIdentifier","src":"10386:29:10"},"nodeType":"YulFunctionCall","src":"10386:36:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10374:6:10"},"nodeType":"YulFunctionCall","src":"10374:49:10"},"nodeType":"YulExpressionStatement","src":"10374:49:10"}]},"name":"abi_encode_t_uint32_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10352:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10359:3:10","type":""}],"src":"10300:129:10"},{"body":{"nodeType":"YulBlock","src":"10644:449:10","statements":[{"nodeType":"YulAssignment","src":"10654:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10666:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10677:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10662:3:10"},"nodeType":"YulFunctionCall","src":"10662:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10654:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10735:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10748:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10759:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10744:3:10"},"nodeType":"YulFunctionCall","src":"10744:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10691:43:10"},"nodeType":"YulFunctionCall","src":"10691:71:10"},"nodeType":"YulExpressionStatement","src":"10691:71:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10783:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"10794:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10779:3:10"},"nodeType":"YulFunctionCall","src":"10779:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10803:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"10809:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10799:3:10"},"nodeType":"YulFunctionCall","src":"10799:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10772:6:10"},"nodeType":"YulFunctionCall","src":"10772:48:10"},"nodeType":"YulExpressionStatement","src":"10772:48:10"},{"nodeType":"YulAssignment","src":"10829:94:10","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10901:6:10"},{"name":"value2","nodeType":"YulIdentifier","src":"10909:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"10918:4:10"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10837:63:10"},"nodeType":"YulFunctionCall","src":"10837:86:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10829:4:10"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"10977:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10990:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11001:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10986:3:10"},"nodeType":"YulFunctionCall","src":"10986:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10933:43:10"},"nodeType":"YulFunctionCall","src":"10933:72:10"},"nodeType":"YulExpressionStatement","src":"10933:72:10"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11058:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11071:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"11082:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11067:3:10"},"nodeType":"YulFunctionCall","src":"11067:18:10"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11015:42:10"},"nodeType":"YulFunctionCall","src":"11015:71:10"},"nodeType":"YulExpressionStatement","src":"11015:71:10"}]},"name":"abi_encode_tuple_t_address_t_bytes_calldata_ptr_t_uint256_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10584:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10596:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10604:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10612:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10620:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10628:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10639:4:10","type":""}],"src":"10435:658:10"},{"body":{"nodeType":"YulBlock","src":"11195:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11212:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"11217:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11205:6:10"},"nodeType":"YulFunctionCall","src":"11205:19:10"},"nodeType":"YulExpressionStatement","src":"11205:19:10"},{"nodeType":"YulAssignment","src":"11233:29:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11252:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"11257:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11248:3:10"},"nodeType":"YulFunctionCall","src":"11248:14:10"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11233:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11167:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"11172:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11183:11:10","type":""}],"src":"11099:169:10"},{"body":{"nodeType":"YulBlock","src":"11380:134:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11402:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"11410:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11398:3:10"},"nodeType":"YulFunctionCall","src":"11398:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d6573","kind":"string","nodeType":"YulLiteral","src":"11414:34:10","type":"","value":"CrossDomainMessenger: xDomainMes"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11391:6:10"},"nodeType":"YulFunctionCall","src":"11391:58:10"},"nodeType":"YulExpressionStatement","src":"11391:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11470:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"11478:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11466:3:10"},"nodeType":"YulFunctionCall","src":"11466:15:10"},{"hexValue":"7361676553656e646572206973206e6f7420736574","kind":"string","nodeType":"YulLiteral","src":"11483:23:10","type":"","value":"sageSender is not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11459:6:10"},"nodeType":"YulFunctionCall","src":"11459:48:10"},"nodeType":"YulExpressionStatement","src":"11459:48:10"}]},"name":"store_literal_in_memory_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11372:6:10","type":""}],"src":"11274:240:10"},{"body":{"nodeType":"YulBlock","src":"11666:220:10","statements":[{"nodeType":"YulAssignment","src":"11676:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11742:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"11747:2:10","type":"","value":"53"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11683:58:10"},"nodeType":"YulFunctionCall","src":"11683:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11676:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11848:3:10"}],"functionName":{"name":"store_literal_in_memory_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398","nodeType":"YulIdentifier","src":"11759:88:10"},"nodeType":"YulFunctionCall","src":"11759:93:10"},"nodeType":"YulExpressionStatement","src":"11759:93:10"},{"nodeType":"YulAssignment","src":"11861:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11872:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"11877:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11868:3:10"},"nodeType":"YulFunctionCall","src":"11868:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11861:3:10"}]}]},"name":"abi_encode_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11654:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11662:3:10","type":""}],"src":"11520:366:10"},{"body":{"nodeType":"YulBlock","src":"12063:248:10","statements":[{"nodeType":"YulAssignment","src":"12073:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12085:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12096:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12081:3:10"},"nodeType":"YulFunctionCall","src":"12081:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12073:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12120:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"12131:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12116:3:10"},"nodeType":"YulFunctionCall","src":"12116:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12139:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"12145:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12135:3:10"},"nodeType":"YulFunctionCall","src":"12135:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12109:6:10"},"nodeType":"YulFunctionCall","src":"12109:47:10"},"nodeType":"YulExpressionStatement","src":"12109:47:10"},{"nodeType":"YulAssignment","src":"12165:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12299:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12173:124:10"},"nodeType":"YulFunctionCall","src":"12173:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12165:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12043:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12058:4:10","type":""}],"src":"11892:419:10"},{"body":{"nodeType":"YulBlock","src":"12345:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12362:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12365:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12355:6:10"},"nodeType":"YulFunctionCall","src":"12355:88:10"},"nodeType":"YulExpressionStatement","src":"12355:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12459:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12462:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12452:6:10"},"nodeType":"YulFunctionCall","src":"12452:15:10"},"nodeType":"YulExpressionStatement","src":"12452:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12483:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12486:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12476:6:10"},"nodeType":"YulFunctionCall","src":"12476:15:10"},"nodeType":"YulExpressionStatement","src":"12476:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"12317:180:10"},{"body":{"nodeType":"YulBlock","src":"12550:250:10","statements":[{"nodeType":"YulAssignment","src":"12560:24:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12582:1:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"12565:16:10"},"nodeType":"YulFunctionCall","src":"12565:19:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12560:1:10"}]},{"nodeType":"YulAssignment","src":"12593:24:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12615:1:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"12598:16:10"},"nodeType":"YulFunctionCall","src":"12598:19:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12593:1:10"}]},{"body":{"nodeType":"YulBlock","src":"12742:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12744:16:10"},"nodeType":"YulFunctionCall","src":"12744:18:10"},"nodeType":"YulExpressionStatement","src":"12744:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12702:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12695:6:10"},"nodeType":"YulFunctionCall","src":"12695:9:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12688:6:10"},"nodeType":"YulFunctionCall","src":"12688:17:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12710:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12717:18:10","type":"","value":"0xffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"12737:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"12713:3:10"},"nodeType":"YulFunctionCall","src":"12713:26:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12707:2:10"},"nodeType":"YulFunctionCall","src":"12707:33:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12684:3:10"},"nodeType":"YulFunctionCall","src":"12684:57:10"},"nodeType":"YulIf","src":"12681:83:10"},{"nodeType":"YulAssignment","src":"12774:20:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12789:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"12792:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12785:3:10"},"nodeType":"YulFunctionCall","src":"12785:9:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"12774:7:10"}]}]},"name":"checked_mul_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12533:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"12536:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"12542:7:10","type":""}],"src":"12503:297:10"},{"body":{"nodeType":"YulBlock","src":"12834:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12851:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12854:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12844:6:10"},"nodeType":"YulFunctionCall","src":"12844:88:10"},"nodeType":"YulExpressionStatement","src":"12844:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12948:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12951:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12941:6:10"},"nodeType":"YulFunctionCall","src":"12941:15:10"},"nodeType":"YulExpressionStatement","src":"12941:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12972:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12975:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12965:6:10"},"nodeType":"YulFunctionCall","src":"12965:15:10"},"nodeType":"YulExpressionStatement","src":"12965:15:10"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"12806:180:10"},{"body":{"nodeType":"YulBlock","src":"13033:141:10","statements":[{"nodeType":"YulAssignment","src":"13043:24:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13065:1:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13048:16:10"},"nodeType":"YulFunctionCall","src":"13048:19:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13043:1:10"}]},{"nodeType":"YulAssignment","src":"13076:24:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13098:1:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13081:16:10"},"nodeType":"YulFunctionCall","src":"13081:19:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13076:1:10"}]},{"body":{"nodeType":"YulBlock","src":"13122:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"13124:16:10"},"nodeType":"YulFunctionCall","src":"13124:18:10"},"nodeType":"YulExpressionStatement","src":"13124:18:10"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13119:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13112:6:10"},"nodeType":"YulFunctionCall","src":"13112:9:10"},"nodeType":"YulIf","src":"13109:35:10"},{"nodeType":"YulAssignment","src":"13154:14:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13163:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"13166:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13159:3:10"},"nodeType":"YulFunctionCall","src":"13159:9:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"13154:1:10"}]}]},"name":"checked_div_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13022:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"13025:1:10","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"13031:1:10","type":""}],"src":"12992:182:10"},{"body":{"nodeType":"YulBlock","src":"13223:211:10","statements":[{"nodeType":"YulAssignment","src":"13233:24:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13255:1:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13238:16:10"},"nodeType":"YulFunctionCall","src":"13238:19:10"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"13233:1:10"}]},{"nodeType":"YulAssignment","src":"13266:24:10","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"13288:1:10"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13271:16:10"},"nodeType":"YulFunctionCall","src":"13271:19:10"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"13266:1:10"}]},{"body":{"nodeType":"YulBlock","src":"13380:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"13382:16:10"},"nodeType":"YulFunctionCall","src":"13382:18:10"},"nodeType":"YulExpressionStatement","src":"13382:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13349:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13356:18:10","type":"","value":"0xffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"13376:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13352:3:10"},"nodeType":"YulFunctionCall","src":"13352:26:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13346:2:10"},"nodeType":"YulFunctionCall","src":"13346:33:10"},"nodeType":"YulIf","src":"13343:59:10"},{"nodeType":"YulAssignment","src":"13412:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13423:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"13426:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13419:3:10"},"nodeType":"YulFunctionCall","src":"13419:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"13412:3:10"}]}]},"name":"checked_add_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"13210:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"13213:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"13219:3:10","type":""}],"src":"13180:254:10"},{"body":{"nodeType":"YulBlock","src":"13546:195:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13568:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13576:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13564:3:10"},"nodeType":"YulFunctionCall","src":"13564:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206f6e6c79207665727369","kind":"string","nodeType":"YulLiteral","src":"13580:34:10","type":"","value":"CrossDomainMessenger: only versi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13557:6:10"},"nodeType":"YulFunctionCall","src":"13557:58:10"},"nodeType":"YulExpressionStatement","src":"13557:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13636:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13644:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13632:3:10"},"nodeType":"YulFunctionCall","src":"13632:15:10"},{"hexValue":"6f6e2030206f722031206d657373616765732061726520737570706f72746564","kind":"string","nodeType":"YulLiteral","src":"13649:34:10","type":"","value":"on 0 or 1 messages are supported"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13625:6:10"},"nodeType":"YulFunctionCall","src":"13625:59:10"},"nodeType":"YulExpressionStatement","src":"13625:59:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13705:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"13713:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13701:3:10"},"nodeType":"YulFunctionCall","src":"13701:15:10"},{"hexValue":"20617420746869732074696d65","kind":"string","nodeType":"YulLiteral","src":"13718:15:10","type":"","value":" at this time"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13694:6:10"},"nodeType":"YulFunctionCall","src":"13694:40:10"},"nodeType":"YulExpressionStatement","src":"13694:40:10"}]},"name":"store_literal_in_memory_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13538:6:10","type":""}],"src":"13440:301:10"},{"body":{"nodeType":"YulBlock","src":"13893:220:10","statements":[{"nodeType":"YulAssignment","src":"13903:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13969:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"13974:2:10","type":"","value":"77"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13910:58:10"},"nodeType":"YulFunctionCall","src":"13910:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13903:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14075:3:10"}],"functionName":{"name":"store_literal_in_memory_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032","nodeType":"YulIdentifier","src":"13986:88:10"},"nodeType":"YulFunctionCall","src":"13986:93:10"},"nodeType":"YulExpressionStatement","src":"13986:93:10"},{"nodeType":"YulAssignment","src":"14088:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14099:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"14104:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14095:3:10"},"nodeType":"YulFunctionCall","src":"14095:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14088:3:10"}]}]},"name":"abi_encode_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13881:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13889:3:10","type":""}],"src":"13747:366:10"},{"body":{"nodeType":"YulBlock","src":"14290:248:10","statements":[{"nodeType":"YulAssignment","src":"14300:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14312:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14323:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14308:3:10"},"nodeType":"YulFunctionCall","src":"14308:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14300:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14347:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"14358:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14343:3:10"},"nodeType":"YulFunctionCall","src":"14343:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14366:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"14372:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14362:3:10"},"nodeType":"YulFunctionCall","src":"14362:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14336:6:10"},"nodeType":"YulFunctionCall","src":"14336:47:10"},"nodeType":"YulExpressionStatement","src":"14336:47:10"},{"nodeType":"YulAssignment","src":"14392:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14526:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14400:124:10"},"nodeType":"YulFunctionCall","src":"14400:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14392:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14270:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14285:4:10","type":""}],"src":"14119:419:10"},{"body":{"nodeType":"YulBlock","src":"14650:136:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14672:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"14680:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14668:3:10"},"nodeType":"YulFunctionCall","src":"14668:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206c656761637920776974","kind":"string","nodeType":"YulLiteral","src":"14684:34:10","type":"","value":"CrossDomainMessenger: legacy wit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14661:6:10"},"nodeType":"YulFunctionCall","src":"14661:58:10"},"nodeType":"YulExpressionStatement","src":"14661:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14740:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"14748:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14736:3:10"},"nodeType":"YulFunctionCall","src":"14736:15:10"},{"hexValue":"6864726177616c20616c72656164792072656c61796564","kind":"string","nodeType":"YulLiteral","src":"14753:25:10","type":"","value":"hdrawal already relayed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14729:6:10"},"nodeType":"YulFunctionCall","src":"14729:50:10"},"nodeType":"YulExpressionStatement","src":"14729:50:10"}]},"name":"store_literal_in_memory_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14642:6:10","type":""}],"src":"14544:242:10"},{"body":{"nodeType":"YulBlock","src":"14938:220:10","statements":[{"nodeType":"YulAssignment","src":"14948:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15014:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15019:2:10","type":"","value":"55"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14955:58:10"},"nodeType":"YulFunctionCall","src":"14955:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14948:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15120:3:10"}],"functionName":{"name":"store_literal_in_memory_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1","nodeType":"YulIdentifier","src":"15031:88:10"},"nodeType":"YulFunctionCall","src":"15031:93:10"},"nodeType":"YulExpressionStatement","src":"15031:93:10"},{"nodeType":"YulAssignment","src":"15133:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15144:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"15149:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15140:3:10"},"nodeType":"YulFunctionCall","src":"15140:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15133:3:10"}]}]},"name":"abi_encode_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14926:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14934:3:10","type":""}],"src":"14792:366:10"},{"body":{"nodeType":"YulBlock","src":"15335:248:10","statements":[{"nodeType":"YulAssignment","src":"15345:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15357:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15368:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15353:3:10"},"nodeType":"YulFunctionCall","src":"15353:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15345:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15392:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"15403:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15388:3:10"},"nodeType":"YulFunctionCall","src":"15388:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15411:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"15417:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15407:3:10"},"nodeType":"YulFunctionCall","src":"15407:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15381:6:10"},"nodeType":"YulFunctionCall","src":"15381:47:10"},"nodeType":"YulExpressionStatement","src":"15381:47:10"},{"nodeType":"YulAssignment","src":"15437:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15571:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15445:124:10"},"nodeType":"YulFunctionCall","src":"15445:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15437:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15315:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15330:4:10","type":""}],"src":"15164:419:10"},{"body":{"nodeType":"YulBlock","src":"15695:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15717:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"15725:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15713:3:10"},"nodeType":"YulFunctionCall","src":"15713:14:10"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"15729:33:10","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15706:6:10"},"nodeType":"YulFunctionCall","src":"15706:57:10"},"nodeType":"YulExpressionStatement","src":"15706:57:10"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15687:6:10","type":""}],"src":"15589:181:10"},{"body":{"nodeType":"YulBlock","src":"15922:220:10","statements":[{"nodeType":"YulAssignment","src":"15932:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15998:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16003:2:10","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15939:58:10"},"nodeType":"YulFunctionCall","src":"15939:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15932:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16104:3:10"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"16015:88:10"},"nodeType":"YulFunctionCall","src":"16015:93:10"},"nodeType":"YulExpressionStatement","src":"16015:93:10"},{"nodeType":"YulAssignment","src":"16117:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16128:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"16133:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16124:3:10"},"nodeType":"YulFunctionCall","src":"16124:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16117:3:10"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15910:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15918:3:10","type":""}],"src":"15776:366:10"},{"body":{"nodeType":"YulBlock","src":"16319:248:10","statements":[{"nodeType":"YulAssignment","src":"16329:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16341:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16352:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16337:3:10"},"nodeType":"YulFunctionCall","src":"16337:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16329:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16376:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"16387:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16372:3:10"},"nodeType":"YulFunctionCall","src":"16372:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16395:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"16401:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16391:3:10"},"nodeType":"YulFunctionCall","src":"16391:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16365:6:10"},"nodeType":"YulFunctionCall","src":"16365:47:10"},"nodeType":"YulExpressionStatement","src":"16365:47:10"},{"nodeType":"YulAssignment","src":"16421:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16555:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16429:124:10"},"nodeType":"YulFunctionCall","src":"16429:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16421:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16299:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16314:4:10","type":""}],"src":"16148:419:10"},{"body":{"nodeType":"YulBlock","src":"16601:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16618:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16621:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16611:6:10"},"nodeType":"YulFunctionCall","src":"16611:88:10"},"nodeType":"YulExpressionStatement","src":"16611:88:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16715:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16718:4:10","type":"","value":"0x01"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16708:6:10"},"nodeType":"YulFunctionCall","src":"16708:15:10"},"nodeType":"YulExpressionStatement","src":"16708:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16739:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16742:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16732:6:10"},"nodeType":"YulFunctionCall","src":"16732:15:10"},"nodeType":"YulExpressionStatement","src":"16732:15:10"}]},"name":"panic_error_0x01","nodeType":"YulFunctionDefinition","src":"16573:180:10"},{"body":{"nodeType":"YulBlock","src":"16865:198:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16887:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16895:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16883:3:10"},"nodeType":"YulFunctionCall","src":"16883:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d757374","kind":"string","nodeType":"YulLiteral","src":"16899:34:10","type":"","value":"CrossDomainMessenger: value must"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16876:6:10"},"nodeType":"YulFunctionCall","src":"16876:58:10"},"nodeType":"YulExpressionStatement","src":"16876:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16955:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"16963:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16951:3:10"},"nodeType":"YulFunctionCall","src":"16951:15:10"},{"hexValue":"206265207a65726f20756e6c657373206d6573736167652069732066726f6d20","kind":"string","nodeType":"YulLiteral","src":"16968:34:10","type":"","value":" be zero unless message is from "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16944:6:10"},"nodeType":"YulFunctionCall","src":"16944:59:10"},"nodeType":"YulExpressionStatement","src":"16944:59:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17024:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"17032:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17020:3:10"},"nodeType":"YulFunctionCall","src":"17020:15:10"},{"hexValue":"612073797374656d2061646472657373","kind":"string","nodeType":"YulLiteral","src":"17037:18:10","type":"","value":"a system address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17013:6:10"},"nodeType":"YulFunctionCall","src":"17013:43:10"},"nodeType":"YulExpressionStatement","src":"17013:43:10"}]},"name":"store_literal_in_memory_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16857:6:10","type":""}],"src":"16759:304:10"},{"body":{"nodeType":"YulBlock","src":"17215:220:10","statements":[{"nodeType":"YulAssignment","src":"17225:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17291:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17296:2:10","type":"","value":"80"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17232:58:10"},"nodeType":"YulFunctionCall","src":"17232:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17225:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17397:3:10"}],"functionName":{"name":"store_literal_in_memory_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5","nodeType":"YulIdentifier","src":"17308:88:10"},"nodeType":"YulFunctionCall","src":"17308:93:10"},"nodeType":"YulExpressionStatement","src":"17308:93:10"},{"nodeType":"YulAssignment","src":"17410:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17421:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"17426:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17417:3:10"},"nodeType":"YulFunctionCall","src":"17417:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17410:3:10"}]}]},"name":"abi_encode_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17203:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17211:3:10","type":""}],"src":"17069:366:10"},{"body":{"nodeType":"YulBlock","src":"17612:248:10","statements":[{"nodeType":"YulAssignment","src":"17622:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17634:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17645:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17630:3:10"},"nodeType":"YulFunctionCall","src":"17630:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17622:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17669:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"17680:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17665:3:10"},"nodeType":"YulFunctionCall","src":"17665:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17688:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"17694:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17684:3:10"},"nodeType":"YulFunctionCall","src":"17684:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17658:6:10"},"nodeType":"YulFunctionCall","src":"17658:47:10"},"nodeType":"YulExpressionStatement","src":"17658:47:10"},{"nodeType":"YulAssignment","src":"17714:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17848:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17722:124:10"},"nodeType":"YulFunctionCall","src":"17722:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17714:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17592:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17607:4:10","type":""}],"src":"17441:419:10"},{"body":{"nodeType":"YulBlock","src":"17972:129:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17994:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"18002:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17990:3:10"},"nodeType":"YulFunctionCall","src":"17990:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206d657373616765206361","kind":"string","nodeType":"YulLiteral","src":"18006:34:10","type":"","value":"CrossDomainMessenger: message ca"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17983:6:10"},"nodeType":"YulFunctionCall","src":"17983:58:10"},"nodeType":"YulExpressionStatement","src":"17983:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18062:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"18070:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18058:3:10"},"nodeType":"YulFunctionCall","src":"18058:15:10"},{"hexValue":"6e6e6f74206265207265706c61796564","kind":"string","nodeType":"YulLiteral","src":"18075:18:10","type":"","value":"nnot be replayed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18051:6:10"},"nodeType":"YulFunctionCall","src":"18051:43:10"},"nodeType":"YulExpressionStatement","src":"18051:43:10"}]},"name":"store_literal_in_memory_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17964:6:10","type":""}],"src":"17866:235:10"},{"body":{"nodeType":"YulBlock","src":"18253:220:10","statements":[{"nodeType":"YulAssignment","src":"18263:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18329:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18334:2:10","type":"","value":"48"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18270:58:10"},"nodeType":"YulFunctionCall","src":"18270:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18263:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18435:3:10"}],"functionName":{"name":"store_literal_in_memory_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d","nodeType":"YulIdentifier","src":"18346:88:10"},"nodeType":"YulFunctionCall","src":"18346:93:10"},"nodeType":"YulExpressionStatement","src":"18346:93:10"},{"nodeType":"YulAssignment","src":"18448:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18459:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18464:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18455:3:10"},"nodeType":"YulFunctionCall","src":"18455:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18448:3:10"}]}]},"name":"abi_encode_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18241:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18249:3:10","type":""}],"src":"18107:366:10"},{"body":{"nodeType":"YulBlock","src":"18650:248:10","statements":[{"nodeType":"YulAssignment","src":"18660:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18672:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18683:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18668:3:10"},"nodeType":"YulFunctionCall","src":"18668:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18660:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18707:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"18718:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18703:3:10"},"nodeType":"YulFunctionCall","src":"18703:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18726:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"18732:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18722:3:10"},"nodeType":"YulFunctionCall","src":"18722:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18696:6:10"},"nodeType":"YulFunctionCall","src":"18696:47:10"},"nodeType":"YulExpressionStatement","src":"18696:47:10"},{"nodeType":"YulAssignment","src":"18752:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18886:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18760:124:10"},"nodeType":"YulFunctionCall","src":"18760:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18752:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18630:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18645:4:10","type":""}],"src":"18479:419:10"},{"body":{"nodeType":"YulBlock","src":"19010:185:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19032:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19040:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19028:3:10"},"nodeType":"YulFunctionCall","src":"19028:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e","kind":"string","nodeType":"YulLiteral","src":"19044:34:10","type":"","value":"CrossDomainMessenger: cannot sen"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19021:6:10"},"nodeType":"YulFunctionCall","src":"19021:58:10"},"nodeType":"YulExpressionStatement","src":"19021:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19100:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19108:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19096:3:10"},"nodeType":"YulFunctionCall","src":"19096:15:10"},{"hexValue":"64206d65737361676520746f20626c6f636b65642073797374656d2061646472","kind":"string","nodeType":"YulLiteral","src":"19113:34:10","type":"","value":"d message to blocked system addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19089:6:10"},"nodeType":"YulFunctionCall","src":"19089:59:10"},"nodeType":"YulExpressionStatement","src":"19089:59:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19169:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19177:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19165:3:10"},"nodeType":"YulFunctionCall","src":"19165:15:10"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"19182:5:10","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19158:6:10"},"nodeType":"YulFunctionCall","src":"19158:30:10"},"nodeType":"YulExpressionStatement","src":"19158:30:10"}]},"name":"store_literal_in_memory_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19002:6:10","type":""}],"src":"18904:291:10"},{"body":{"nodeType":"YulBlock","src":"19347:220:10","statements":[{"nodeType":"YulAssignment","src":"19357:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19423:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19428:2:10","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19364:58:10"},"nodeType":"YulFunctionCall","src":"19364:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19357:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19529:3:10"}],"functionName":{"name":"store_literal_in_memory_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5","nodeType":"YulIdentifier","src":"19440:88:10"},"nodeType":"YulFunctionCall","src":"19440:93:10"},"nodeType":"YulExpressionStatement","src":"19440:93:10"},{"nodeType":"YulAssignment","src":"19542:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19553:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"19558:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19549:3:10"},"nodeType":"YulFunctionCall","src":"19549:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19542:3:10"}]}]},"name":"abi_encode_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19335:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19343:3:10","type":""}],"src":"19201:366:10"},{"body":{"nodeType":"YulBlock","src":"19744:248:10","statements":[{"nodeType":"YulAssignment","src":"19754:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19766:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"19777:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19762:3:10"},"nodeType":"YulFunctionCall","src":"19762:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19754:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19801:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"19812:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19797:3:10"},"nodeType":"YulFunctionCall","src":"19797:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19820:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"19826:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19816:3:10"},"nodeType":"YulFunctionCall","src":"19816:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19790:6:10"},"nodeType":"YulFunctionCall","src":"19790:47:10"},"nodeType":"YulExpressionStatement","src":"19790:47:10"},{"nodeType":"YulAssignment","src":"19846:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19980:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19854:124:10"},"nodeType":"YulFunctionCall","src":"19854:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19846:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19724:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19739:4:10","type":""}],"src":"19573:419:10"},{"body":{"nodeType":"YulBlock","src":"20104:135:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20126:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"20134:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20122:3:10"},"nodeType":"YulFunctionCall","src":"20122:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206d657373616765206861","kind":"string","nodeType":"YulLiteral","src":"20138:34:10","type":"","value":"CrossDomainMessenger: message ha"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20115:6:10"},"nodeType":"YulFunctionCall","src":"20115:58:10"},"nodeType":"YulExpressionStatement","src":"20115:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20194:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"20202:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20190:3:10"},"nodeType":"YulFunctionCall","src":"20190:15:10"},{"hexValue":"7320616c7265616479206265656e2072656c61796564","kind":"string","nodeType":"YulLiteral","src":"20207:24:10","type":"","value":"s already been relayed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20183:6:10"},"nodeType":"YulFunctionCall","src":"20183:49:10"},"nodeType":"YulExpressionStatement","src":"20183:49:10"}]},"name":"store_literal_in_memory_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20096:6:10","type":""}],"src":"19998:241:10"},{"body":{"nodeType":"YulBlock","src":"20391:220:10","statements":[{"nodeType":"YulAssignment","src":"20401:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20467:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20472:2:10","type":"","value":"54"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20408:58:10"},"nodeType":"YulFunctionCall","src":"20408:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20401:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20573:3:10"}],"functionName":{"name":"store_literal_in_memory_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150","nodeType":"YulIdentifier","src":"20484:88:10"},"nodeType":"YulFunctionCall","src":"20484:93:10"},"nodeType":"YulExpressionStatement","src":"20484:93:10"},{"nodeType":"YulAssignment","src":"20586:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20597:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"20602:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20593:3:10"},"nodeType":"YulFunctionCall","src":"20593:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20586:3:10"}]}]},"name":"abi_encode_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20379:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20387:3:10","type":""}],"src":"20245:366:10"},{"body":{"nodeType":"YulBlock","src":"20788:248:10","statements":[{"nodeType":"YulAssignment","src":"20798:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20810:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20821:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20806:3:10"},"nodeType":"YulFunctionCall","src":"20806:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20798:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20845:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"20856:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20841:3:10"},"nodeType":"YulFunctionCall","src":"20841:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20864:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"20870:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20860:3:10"},"nodeType":"YulFunctionCall","src":"20860:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20834:6:10"},"nodeType":"YulFunctionCall","src":"20834:47:10"},"nodeType":"YulExpressionStatement","src":"20834:47:10"},{"nodeType":"YulAssignment","src":"20890:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21024:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20898:124:10"},"nodeType":"YulFunctionCall","src":"20898:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20890:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20768:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20783:4:10","type":""}],"src":"20617:419:10"},{"body":{"nodeType":"YulBlock","src":"21148:126:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21170:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"21178:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21166:3:10"},"nodeType":"YulFunctionCall","src":"21166:14:10"},{"hexValue":"43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f20","kind":"string","nodeType":"YulLiteral","src":"21182:34:10","type":"","value":"CrossDomainMessenger: failed to "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21159:6:10"},"nodeType":"YulFunctionCall","src":"21159:58:10"},"nodeType":"YulExpressionStatement","src":"21159:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21238:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"21246:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21234:3:10"},"nodeType":"YulFunctionCall","src":"21234:15:10"},{"hexValue":"72656c6179206d657373616765","kind":"string","nodeType":"YulLiteral","src":"21251:15:10","type":"","value":"relay message"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21227:6:10"},"nodeType":"YulFunctionCall","src":"21227:40:10"},"nodeType":"YulExpressionStatement","src":"21227:40:10"}]},"name":"store_literal_in_memory_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21140:6:10","type":""}],"src":"21042:232:10"},{"body":{"nodeType":"YulBlock","src":"21426:220:10","statements":[{"nodeType":"YulAssignment","src":"21436:74:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21502:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"21507:2:10","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21443:58:10"},"nodeType":"YulFunctionCall","src":"21443:67:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21436:3:10"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21608:3:10"}],"functionName":{"name":"store_literal_in_memory_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288","nodeType":"YulIdentifier","src":"21519:88:10"},"nodeType":"YulFunctionCall","src":"21519:93:10"},"nodeType":"YulExpressionStatement","src":"21519:93:10"},{"nodeType":"YulAssignment","src":"21621:19:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21632:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"21637:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21628:3:10"},"nodeType":"YulFunctionCall","src":"21628:12:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21621:3:10"}]}]},"name":"abi_encode_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21414:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21422:3:10","type":""}],"src":"21280:366:10"},{"body":{"nodeType":"YulBlock","src":"21823:248:10","statements":[{"nodeType":"YulAssignment","src":"21833:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21845:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21856:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21841:3:10"},"nodeType":"YulFunctionCall","src":"21841:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21833:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21880:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"21891:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21876:3:10"},"nodeType":"YulFunctionCall","src":"21876:17:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21899:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"21905:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21895:3:10"},"nodeType":"YulFunctionCall","src":"21895:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21869:6:10"},"nodeType":"YulFunctionCall","src":"21869:47:10"},"nodeType":"YulExpressionStatement","src":"21869:47:10"},{"nodeType":"YulAssignment","src":"21925:139:10","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22059:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21933:124:10"},"nodeType":"YulFunctionCall","src":"21933:131:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21925:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21803:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21818:4:10","type":""}],"src":"21652:419:10"},{"body":{"nodeType":"YulBlock","src":"22135:40:10","statements":[{"nodeType":"YulAssignment","src":"22146:22:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22162:5:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22156:5:10"},"nodeType":"YulFunctionCall","src":"22156:12:10"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22146:6:10"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22118:5:10","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22128:6:10","type":""}],"src":"22077:98:10"},{"body":{"nodeType":"YulBlock","src":"22230:258:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22240:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"22249:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22244:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"22309:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22334:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"22339:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22330:3:10"},"nodeType":"YulFunctionCall","src":"22330:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22353:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"22358:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22349:3:10"},"nodeType":"YulFunctionCall","src":"22349:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22343:5:10"},"nodeType":"YulFunctionCall","src":"22343:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22323:6:10"},"nodeType":"YulFunctionCall","src":"22323:39:10"},"nodeType":"YulExpressionStatement","src":"22323:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22270:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"22273:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22267:2:10"},"nodeType":"YulFunctionCall","src":"22267:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22281:19:10","statements":[{"nodeType":"YulAssignment","src":"22283:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22292:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"22295:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22288:3:10"},"nodeType":"YulFunctionCall","src":"22288:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22283:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"22263:3:10","statements":[]},"src":"22259:113:10"},{"body":{"nodeType":"YulBlock","src":"22406:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"22456:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"22461:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22452:3:10"},"nodeType":"YulFunctionCall","src":"22452:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"22470:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22445:6:10"},"nodeType":"YulFunctionCall","src":"22445:27:10"},"nodeType":"YulExpressionStatement","src":"22445:27:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22387:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"22390:6:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22384:2:10"},"nodeType":"YulFunctionCall","src":"22384:13:10"},"nodeType":"YulIf","src":"22381:101:10"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"22212:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"22217:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"22222:6:10","type":""}],"src":"22181:307:10"},{"body":{"nodeType":"YulBlock","src":"22584:270:10","statements":[{"nodeType":"YulVariableDeclaration","src":"22594:52:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22640:5:10"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22608:31:10"},"nodeType":"YulFunctionCall","src":"22608:38:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22598:6:10","type":""}]},{"nodeType":"YulAssignment","src":"22655:77:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22720:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"22725:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22662:57:10"},"nodeType":"YulFunctionCall","src":"22662:70:10"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22655:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22767:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"22774:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22763:3:10"},"nodeType":"YulFunctionCall","src":"22763:16:10"},{"name":"pos","nodeType":"YulIdentifier","src":"22781:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"22786:6:10"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"22741:21:10"},"nodeType":"YulFunctionCall","src":"22741:52:10"},"nodeType":"YulExpressionStatement","src":"22741:52:10"},{"nodeType":"YulAssignment","src":"22802:46:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22813:3:10"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22840:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"22818:21:10"},"nodeType":"YulFunctionCall","src":"22818:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22809:3:10"},"nodeType":"YulFunctionCall","src":"22809:39:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22802:3:10"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22565:5:10","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22572:3:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22580:3:10","type":""}],"src":"22494:360:10"},{"body":{"nodeType":"YulBlock","src":"23060:440:10","statements":[{"nodeType":"YulAssignment","src":"23070:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23082:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23093:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23078:3:10"},"nodeType":"YulFunctionCall","src":"23078:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23070:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23151:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23164:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23175:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23160:3:10"},"nodeType":"YulFunctionCall","src":"23160:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23107:43:10"},"nodeType":"YulFunctionCall","src":"23107:71:10"},"nodeType":"YulExpressionStatement","src":"23107:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23232:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23245:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23256:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23241:3:10"},"nodeType":"YulFunctionCall","src":"23241:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23188:43:10"},"nodeType":"YulFunctionCall","src":"23188:72:10"},"nodeType":"YulExpressionStatement","src":"23188:72:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23281:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23292:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23277:3:10"},"nodeType":"YulFunctionCall","src":"23277:18:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23301:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"23307:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23297:3:10"},"nodeType":"YulFunctionCall","src":"23297:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23270:6:10"},"nodeType":"YulFunctionCall","src":"23270:48:10"},"nodeType":"YulExpressionStatement","src":"23270:48:10"},{"nodeType":"YulAssignment","src":"23327:84:10","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23397:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"23406:4:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23335:61:10"},"nodeType":"YulFunctionCall","src":"23335:76:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23327:4:10"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23465:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23478:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23489:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23474:3:10"},"nodeType":"YulFunctionCall","src":"23474:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23421:43:10"},"nodeType":"YulFunctionCall","src":"23421:72:10"},"nodeType":"YulExpressionStatement","src":"23421:72:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23008:9:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23020:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23028:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23036:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23044:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23055:4:10","type":""}],"src":"22860:640:10"},{"body":{"nodeType":"YulBlock","src":"23762:606:10","statements":[{"nodeType":"YulAssignment","src":"23772:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23784:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23795:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23780:3:10"},"nodeType":"YulFunctionCall","src":"23780:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23772:4:10"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23853:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23866:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23877:1:10","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23862:3:10"},"nodeType":"YulFunctionCall","src":"23862:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23809:43:10"},"nodeType":"YulFunctionCall","src":"23809:71:10"},"nodeType":"YulExpressionStatement","src":"23809:71:10"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23934:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23947:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"23958:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23943:3:10"},"nodeType":"YulFunctionCall","src":"23943:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23890:43:10"},"nodeType":"YulFunctionCall","src":"23890:72:10"},"nodeType":"YulExpressionStatement","src":"23890:72:10"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24016:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24029:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24040:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24025:3:10"},"nodeType":"YulFunctionCall","src":"24025:18:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23972:43:10"},"nodeType":"YulFunctionCall","src":"23972:72:10"},"nodeType":"YulExpressionStatement","src":"23972:72:10"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24098:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24111:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24122:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24107:3:10"},"nodeType":"YulFunctionCall","src":"24107:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24054:43:10"},"nodeType":"YulFunctionCall","src":"24054:72:10"},"nodeType":"YulExpressionStatement","src":"24054:72:10"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"24180:6:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24193:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24204:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24189:3:10"},"nodeType":"YulFunctionCall","src":"24189:19:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24136:43:10"},"nodeType":"YulFunctionCall","src":"24136:73:10"},"nodeType":"YulExpressionStatement","src":"24136:73:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24230:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"24241:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24226:3:10"},"nodeType":"YulFunctionCall","src":"24226:19:10"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24251:4:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"24257:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24247:3:10"},"nodeType":"YulFunctionCall","src":"24247:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24219:6:10"},"nodeType":"YulFunctionCall","src":"24219:49:10"},"nodeType":"YulExpressionStatement","src":"24219:49:10"},{"nodeType":"YulAssignment","src":"24277:84:10","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"24347:6:10"},{"name":"tail","nodeType":"YulIdentifier","src":"24356:4:10"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24285:61:10"},"nodeType":"YulFunctionCall","src":"24285:76:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24277:4:10"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23694:9:10","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23706:6:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23714:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23722:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23730:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23738:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23746:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23757:4:10","type":""}],"src":"23506:862:10"}]},"contents":"{\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptrt_uint32(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptrt_uint32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value2 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint32_t_bytes_calldata_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint32_t_bytes_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value5, value6,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint32_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint32(value)))\n    }\n\n    function abi_encode_t_uint32_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint32_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_calldata_ptr_t_uint256_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value1, value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint256_fromStack(value4,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: xDomainMes\")\n\n        mstore(add(memPtr, 32), \"sageSender is not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint64(x, y) -> product {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint64(x, y) -> r {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: only versi\")\n\n        mstore(add(memPtr, 32), \"on 0 or 1 messages are supported\")\n\n        mstore(add(memPtr, 64), \" at this time\")\n\n    }\n\n    function abi_encode_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 77)\n        store_literal_in_memory_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: legacy wit\")\n\n        mstore(add(memPtr, 32), \"hdrawal already relayed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 55)\n        store_literal_in_memory_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x01() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: value must\")\n\n        mstore(add(memPtr, 32), \" be zero unless message is from \")\n\n        mstore(add(memPtr, 64), \"a system address\")\n\n    }\n\n    function abi_encode_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 80)\n        store_literal_in_memory_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: message ca\")\n\n        mstore(add(memPtr, 32), \"nnot be replayed\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: cannot sen\")\n\n        mstore(add(memPtr, 32), \"d message to blocked system addr\")\n\n        mstore(add(memPtr, 64), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 67)\n        store_literal_in_memory_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: message ha\")\n\n        mstore(add(memPtr, 32), \"s already been relayed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288(memPtr) {\n\n        mstore(add(memPtr, 0), \"CrossDomainMessenger: failed to \")\n\n        mstore(add(memPtr, 32), \"relay message\")\n\n    }\n\n    function abi_encode_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value5,  tail)\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1222":[{"length":32,"start":872},{"length":32,"start":1568}]},"linkReferences":{},"object":"6080604052600436106100dd5760003560e01c80639fce812c1161007f578063b28ade2511610059578063b28ade25146102a5578063bf24eb63146102e2578063d764ad0b1461030b578063ecc7042814610327576100dd565b80639fce812c14610200578063a4e7f8bd1461022b578063b1b1b20914610268576100dd565b80633dbb202b116100bb5780633dbb202b146101635780633f827a5a1461017f5780636e296e45146101aa5780637dea7cc3146101d5576100dd565b8063028f85f7146100e25780630c5684981461010d5780632828d7e814610138575b600080fd5b3480156100ee57600080fd5b506100f7610352565b6040516101049190610fb1565b60405180910390f35b34801561011957600080fd5b50610122610357565b60405161012f9190610fb1565b60405180910390f35b34801561014457600080fd5b5061014d61035d565b60405161015a9190610fb1565b60405180910390f35b61017d600480360381019061017891906110d5565b610363565b005b34801561018b57600080fd5b50610194610556565b6040516101a19190611166565b60405180910390f35b3480156101b657600080fd5b506101bf61055b565b6040516101cc9190611190565b60405180910390f35b3480156101e157600080fd5b506101ea610617565b6040516101f79190610fb1565b60405180910390f35b34801561020c57600080fd5b5061021561061e565b6040516102229190611190565b60405180910390f35b34801561023757600080fd5b50610252600480360381019061024d91906111e1565b610642565b60405161025f9190611229565b60405180910390f35b34801561027457600080fd5b5061028f600480360381019061028a91906111e1565b610662565b60405161029c9190611229565b60405180910390f35b3480156102b157600080fd5b506102cc60048036038101906102c79190611244565b610682565b6040516102d99190610fb1565b60405180910390f35b3480156102ee57600080fd5b50610309600480360381019061030491906112a4565b6106d6565b005b61032560048036038101906103209190611307565b61071a565b005b34801561033357600080fd5b5061033c610d03565b60405161034991906113c5565b60405180910390f35b601081565b6103e881565b6103f881565b6104217f0000000000000000000000000000000000000000000000000000000000000000610392858585610682565b3463d764ad0b60e01b6103a3610d03565b338a34898c8c6040516024016103bf979695949392919061144d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d41565b8373ffffffffffffffffffffffffffffffffffffffff167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a338585610464610d03565b866040516104769594939291906114f2565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d546346040516104c491906113c5565b60405180910390a260cd600081819054906101000a90047dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1660010191906101000a8154817dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600181565b600061dead73ffffffffffffffffffffffffffffffffffffffff1660cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036105ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e6906115c3565b60405180910390fd5b60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b62030d4081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60ce6020528060005260406000206000915054906101000a900460ff1681565b60cb6020528060005260406000206000915054906101000a900460ff1681565b600062030d406010858590506106989190611612565b6103e86103f88563ffffffff166106af9190611612565b6106b99190611683565b6106c391906116b4565b6106cd91906116b4565b90509392505050565b8060cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061072588610d47565b91505060028161ffff161061076f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107669061178a565b60405180910390fd5b60008161ffff16036108385760006107cd878986868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508c610d83565b90506000151560cb600083815260200190815260200160002060009054906101000a900460ff16151514610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d9061181c565b60405180910390fd5b505b600061088c898989898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610da2565b905060cf600082815260200190815260200160002060009054906101000a900460ff16156108ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e690611888565b60405180910390fd5b600160cf600083815260200190815260200160002060006101000a81548160ff021916908315150217905550610923610dc5565b1561096c57853414610938576109376118a8565b5b60ce600082815260200190815260200160002060009054906101000a900460ff1615610967576109666118a8565b5b610a10565b600034146109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a69061196f565b60405180910390fd5b60ce600082815260200190815260200160002060009054906101000a900460ff16610a0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0690611a01565b60405180910390fd5b5b60001515610a1d88610dce565b151514610a5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5690611ab9565b60405180910390fd5b6000151560cb600083815260200190815260200160002060009054906101000a900460ff16151514610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90611b4b565b60405180910390fd5b8760cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000610b5988878988888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dd5565b905061dead60cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508015610c0257600160cb600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c60405160405180910390a2610ccb565b600160ce600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f60405160405180910390a2600173ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1603610cca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc190611bdd565b60405180910390fd5b5b600060cf600084815260200190815260200160002060006101000a81548160ff02191690831515021790555050505050505050505050565b6000610d3c60cd60009054906101000a90047dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001610e33565b905090565b50505050565b6000806000807dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851691508460f01c90508181935093505050915091565b6000610d9185858585610e48565b805190602001209050949350505050565b6000610db2878787878787610ee8565b8051906020012090509695505050505050565b60006001905090565b6000919050565b600080603f60c88601604002045a1015610e18576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080845160208601878a5af1905080915050949350505050565b600080838360f01b1790508091505092915050565b606084848484604051602401610e619493929190611c74565b6040516020818303038152906040527fcbd4ece9000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050949350505050565b6060868686868686604051602401610f0596959493929190611cc0565b6040516020818303038152906040527fd764ad0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090509695505050505050565b600067ffffffffffffffff82169050919050565b610fab81610f8e565b82525050565b6000602082019050610fc66000830184610fa2565b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061100182610fd6565b9050919050565b61101181610ff6565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261105957611058611034565b5b8235905067ffffffffffffffff81111561107657611075611039565b5b6020830191508360018202830111156110925761109161103e565b5b9250929050565b600063ffffffff82169050919050565b6110b281611099565b81146110bd57600080fd5b50565b6000813590506110cf816110a9565b92915050565b600080600080606085870312156110ef576110ee610fcc565b5b60006110fd8782880161101f565b945050602085013567ffffffffffffffff81111561111e5761111d610fd1565b5b61112a87828801611043565b9350935050604061113d878288016110c0565b91505092959194509250565b600061ffff82169050919050565b61116081611149565b82525050565b600060208201905061117b6000830184611157565b92915050565b61118a81610ff6565b82525050565b60006020820190506111a56000830184611181565b92915050565b6000819050919050565b6111be816111ab565b81146111c957600080fd5b50565b6000813590506111db816111b5565b92915050565b6000602082840312156111f7576111f6610fcc565b5b6000611205848285016111cc565b91505092915050565b60008115159050919050565b6112238161120e565b82525050565b600060208201905061123e600083018461121a565b92915050565b60008060006040848603121561125d5761125c610fcc565b5b600084013567ffffffffffffffff81111561127b5761127a610fd1565b5b61128786828701611043565b9350935050602061129a868287016110c0565b9150509250925092565b6000602082840312156112ba576112b9610fcc565b5b60006112c88482850161101f565b91505092915050565b6000819050919050565b6112e4816112d1565b81146112ef57600080fd5b50565b600081359050611301816112db565b92915050565b600080600080600080600060c0888a03121561132657611325610fcc565b5b60006113348a828b016112f2565b97505060206113458a828b0161101f565b96505060406113568a828b0161101f565b95505060606113678a828b016112f2565b94505060806113788a828b016112f2565b93505060a088013567ffffffffffffffff81111561139957611398610fd1565b5b6113a58a828b01611043565b925092505092959891949750929550565b6113bf816112d1565b82525050565b60006020820190506113da60008301846113b6565b92915050565b6113e981611099565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061142c83856113ef565b9350611439838584611400565b6114428361140f565b840190509392505050565b600060c082019050611462600083018a6113b6565b61146f6020830189611181565b61147c6040830188611181565b61148960608301876113b6565b61149660808301866113e0565b81810360a08301526114a9818486611420565b905098975050505050505050565b6000819050919050565b60006114dc6114d76114d284611099565b6114b7565b6112d1565b9050919050565b6114ec816114c1565b82525050565b60006080820190506115076000830188611181565b818103602083015261151a818688611420565b905061152960408301856113b6565b61153660608301846114e3565b9695505050505050565b600082825260208201905092915050565b7f43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d657360008201527f7361676553656e646572206973206e6f74207365740000000000000000000000602082015250565b60006115ad603583611540565b91506115b882611551565b604082019050919050565b600060208201905081810360008301526115dc816115a0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061161d82610f8e565b915061162883610f8e565b92508167ffffffffffffffff0483118215151615611649576116486115e3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061168e82610f8e565b915061169983610f8e565b9250826116a9576116a8611654565b5b828204905092915050565b60006116bf82610f8e565b91506116ca83610f8e565b92508267ffffffffffffffff038211156116e7576116e66115e3565b5b828201905092915050565b7f43726f7373446f6d61696e4d657373656e6765723a206f6e6c7920766572736960008201527f6f6e2030206f722031206d657373616765732061726520737570706f7274656460208201527f20617420746869732074696d6500000000000000000000000000000000000000604082015250565b6000611774604d83611540565b915061177f826116f2565b606082019050919050565b600060208201905081810360008301526117a381611767565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206c65676163792077697460008201527f6864726177616c20616c72656164792072656c61796564000000000000000000602082015250565b6000611806603783611540565b9150611811826117aa565b604082019050919050565b60006020820190508181036000830152611835816117f9565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611872601f83611540565b915061187d8261183c565b602082019050919050565b600060208201905081810360008301526118a181611865565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b7f43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d75737460008201527f206265207a65726f20756e6c657373206d6573736167652069732066726f6d2060208201527f612073797374656d206164647265737300000000000000000000000000000000604082015250565b6000611959605083611540565b9150611964826118d7565b606082019050919050565b600060208201905081810360008301526119888161194c565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520636160008201527f6e6e6f74206265207265706c6179656400000000000000000000000000000000602082015250565b60006119eb603083611540565b91506119f68261198f565b604082019050919050565b60006020820190508181036000830152611a1a816119de565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e60008201527f64206d65737361676520746f20626c6f636b65642073797374656d206164647260208201527f6573730000000000000000000000000000000000000000000000000000000000604082015250565b6000611aa3604383611540565b9150611aae82611a21565b606082019050919050565b60006020820190508181036000830152611ad281611a96565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520686160008201527f7320616c7265616479206265656e2072656c6179656400000000000000000000602082015250565b6000611b35603683611540565b9150611b4082611ad9565b604082019050919050565b60006020820190508181036000830152611b6481611b28565b9050919050565b7f43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2060008201527f72656c6179206d65737361676500000000000000000000000000000000000000602082015250565b6000611bc7602d83611540565b9150611bd282611b6b565b604082019050919050565b60006020820190508181036000830152611bf681611bba565b9050919050565b600081519050919050565b60005b83811015611c26578082015181840152602081019050611c0b565b83811115611c35576000848401525b50505050565b6000611c4682611bfd565b611c5081856113ef565b9350611c60818560208601611c08565b611c698161140f565b840191505092915050565b6000608082019050611c896000830187611181565b611c966020830186611181565b8181036040830152611ca88185611c3b565b9050611cb760608301846113b6565b95945050505050565b600060c082019050611cd560008301896113b6565b611ce26020830188611181565b611cef6040830187611181565b611cfc60608301866113b6565b611d0960808301856113b6565b81810360a0830152611d1b8184611c3b565b905097965050505050505056fea2646970667358221220675eba3cfe0f74f80927bdd9608dae14ce04fccf212428d4f134dc3ca4612c3464736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9FCE812C GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xB28ADE25 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB28ADE25 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xBF24EB63 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xD764AD0B EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xECC70428 EQ PUSH2 0x327 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x9FCE812C EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xA4E7F8BD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB1B1B209 EQ PUSH2 0x268 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x3DBB202B GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x3DBB202B EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x3F827A5A EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6E296E45 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x7DEA7CC3 EQ PUSH2 0x1D5 JUMPI PUSH2 0xDD JUMP JUMPDEST DUP1 PUSH4 0x28F85F7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xC568498 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x2828D7E8 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF7 PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x122 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH2 0x556 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP2 SWAP1 PUSH2 0x1166 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x55B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x1229 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1244 JUMP JUMPDEST PUSH2 0x682 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x309 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x6D6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33C PUSH2 0xD03 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x10 DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x3F8 DUP2 JUMP JUMPDEST PUSH2 0x421 PUSH32 0x0 PUSH2 0x392 DUP6 DUP6 DUP6 PUSH2 0x682 JUMP JUMPDEST CALLVALUE PUSH4 0xD764AD0B PUSH1 0xE0 SHL PUSH2 0x3A3 PUSH2 0xD03 JUMP JUMPDEST CALLER DUP11 CALLVALUE DUP10 DUP13 DUP13 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x3BF SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD41 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCB0F7FFD78F9AEE47A248FAE8DB181DB6EEE833039123E026DCBFF529522E52A CALLER DUP6 DUP6 PUSH2 0x464 PUSH2 0xD03 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD PUSH2 0x476 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8EBB2EC2465BDB2A06A66FC37A0963AF8A2A6A1479D81D56FDB8CBB98096D546 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xCD PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 ADD SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E6 SWAP1 PUSH2 0x15C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x30D40 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0xCE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30D40 PUSH1 0x10 DUP6 DUP6 SWAP1 POP PUSH2 0x698 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x3F8 DUP6 PUSH4 0xFFFFFFFF AND PUSH2 0x6AF SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x1683 JUMP JUMPDEST PUSH2 0x6C3 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x6CD SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x725 DUP9 PUSH2 0xD47 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x2 DUP2 PUSH2 0xFFFF AND LT PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x766 SWAP1 PUSH2 0x178A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xFFFF AND SUB PUSH2 0x838 JUMPI PUSH1 0x0 PUSH2 0x7CD DUP8 DUP10 DUP7 DUP7 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP13 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 ISZERO ISZERO PUSH1 0xCB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x181C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDA2 JUMP JUMPDEST SWAP1 POP PUSH1 0xCF PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E6 SWAP1 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xCF PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x923 PUSH2 0xDC5 JUMP JUMPDEST ISZERO PUSH2 0x96C JUMPI DUP6 CALLVALUE EQ PUSH2 0x938 JUMPI PUSH2 0x937 PUSH2 0x18A8 JUMP JUMPDEST JUMPDEST PUSH1 0xCE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x967 JUMPI PUSH2 0x966 PUSH2 0x18A8 JUMP JUMPDEST JUMPDEST PUSH2 0xA10 JUMP JUMPDEST PUSH1 0x0 CALLVALUE EQ PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP1 PUSH2 0x196F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xCE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA06 SWAP1 PUSH2 0x1A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0xA1D DUP9 PUSH2 0xDCE JUMP JUMPDEST ISZERO ISZERO EQ PUSH2 0xA5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA56 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0xCB PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xB59 DUP9 DUP8 DUP10 DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDD5 JUMP JUMPDEST SWAP1 POP PUSH2 0xDEAD PUSH1 0xCC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC02 JUMPI PUSH1 0x1 PUSH1 0xCB PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x4641DF4A962071E12719D8C8C8E5AC7FC4D97B927346A3D7A335B1F7517E133C PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xCE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH32 0x99D0E048484BAA1B1540B1367CB128ACD7AB2946D1ED91EC10E3C85E4BF51B8F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC1 SWAP1 PUSH2 0x1BDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0xCF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD3C PUSH1 0xCD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH2 0xE33 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH30 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP2 POP DUP5 PUSH1 0xF0 SHR SWAP1 POP DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP6 DUP6 DUP6 DUP6 PUSH2 0xE48 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB2 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0xEE8 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3F PUSH1 0xC8 DUP7 ADD PUSH1 0x40 MUL DIV GAS LT ISZERO PUSH2 0xE18 JUMPI PUSH4 0x8C379A0 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 MSTORE PUSH25 0x185361666543616C6C3A204E6F7420656E6F75676820676173 PUSH1 0x58 MSTORE PUSH1 0x64 PUSH1 0x1C REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x20 DUP7 ADD DUP8 DUP11 GAS CALL SWAP1 POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0xF0 SHL OR SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE61 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCBD4ECE900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF05 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xD764AD0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFAB DUP2 PUSH2 0xF8E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1001 DUP3 PUSH2 0xFD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x101C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102E DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1059 JUMPI PUSH2 0x1058 PUSH2 0x1034 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1075 PUSH2 0x1039 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0x103E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B2 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CF DUP2 PUSH2 0x10A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EE PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FD DUP8 DUP3 DUP9 ADD PUSH2 0x101F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x111E JUMPI PUSH2 0x111D PUSH2 0xFD1 JUMP JUMPDEST JUMPDEST PUSH2 0x112A DUP8 DUP3 DUP9 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x40 PUSH2 0x113D DUP8 DUP3 DUP9 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1160 DUP2 PUSH2 0x1149 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1157 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x118A DUP2 PUSH2 0xFF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11A5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1181 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11BE DUP2 PUSH2 0x11AB JUMP JUMPDEST DUP2 EQ PUSH2 0x11C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11DB DUP2 PUSH2 0x11B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH2 0x11F6 PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1205 DUP5 DUP3 DUP6 ADD PUSH2 0x11CC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1223 DUP2 PUSH2 0x120E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x121A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x125D JUMPI PUSH2 0x125C PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x127B JUMPI PUSH2 0x127A PUSH2 0xFD1 JUMP JUMPDEST JUMPDEST PUSH2 0x1287 DUP7 DUP3 DUP8 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0x20 PUSH2 0x129A DUP7 DUP3 DUP8 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BA JUMPI PUSH2 0x12B9 PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12C8 DUP5 DUP3 DUP6 ADD PUSH2 0x101F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E4 DUP2 PUSH2 0x12D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1301 DUP2 PUSH2 0x12DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1326 JUMPI PUSH2 0x1325 PUSH2 0xFCC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1334 DUP11 DUP3 DUP12 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1345 DUP11 DUP3 DUP12 ADD PUSH2 0x101F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1356 DUP11 DUP3 DUP12 ADD PUSH2 0x101F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1367 DUP11 DUP3 DUP12 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1378 DUP11 DUP3 DUP12 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1398 PUSH2 0xFD1 JUMP JUMPDEST JUMPDEST PUSH2 0x13A5 DUP11 DUP3 DUP12 ADD PUSH2 0x1043 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x13BF DUP2 PUSH2 0x12D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13E9 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142C DUP4 DUP6 PUSH2 0x13EF JUMP JUMPDEST SWAP4 POP PUSH2 0x1439 DUP4 DUP6 DUP5 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1442 DUP4 PUSH2 0x140F JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1462 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x146F PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x147C PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1489 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1496 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x13E0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x14A9 DUP2 DUP5 DUP7 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DC PUSH2 0x14D7 PUSH2 0x14D2 DUP5 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x14B7 JUMP JUMPDEST PUSH2 0x12D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x14C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1507 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1181 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x151A DUP2 DUP7 DUP9 PUSH2 0x1420 JUMP JUMPDEST SWAP1 POP PUSH2 0x1529 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1536 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x14E3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A2078446F6D61696E4D6573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7361676553656E646572206973206E6F74207365740000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15AD PUSH1 0x35 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B8 DUP3 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15DC DUP2 PUSH2 0x15A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x161D DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1628 DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1649 JUMPI PUSH2 0x1648 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x168E DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP PUSH2 0x1699 DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x16A9 JUMPI PUSH2 0x16A8 PUSH2 0x1654 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP2 POP PUSH2 0x16CA DUP4 PUSH2 0xF8E JUMP JUMPDEST SWAP3 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x16E7 JUMPI PUSH2 0x16E6 PUSH2 0x15E3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206F6E6C79207665727369 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6E2030206F722031206D657373616765732061726520737570706F72746564 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x20617420746869732074696D6500000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1774 PUSH1 0x4D DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x177F DUP3 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17A3 DUP2 PUSH2 0x1767 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206C656761637920776974 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6864726177616C20616C72656164792072656C61796564000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 PUSH1 0x37 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1811 DUP3 PUSH2 0x17AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1835 DUP2 PUSH2 0x17F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1872 PUSH1 0x1F DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x187D DUP3 PUSH2 0x183C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x18A1 DUP2 PUSH2 0x1865 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A2076616C7565206D757374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x206265207A65726F20756E6C657373206D6573736167652069732066726F6D20 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x612073797374656D206164647265737300000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1959 PUSH1 0x50 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1964 DUP3 PUSH2 0x18D7 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1988 DUP2 PUSH2 0x194C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206D657373616765206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6E6F74206265207265706C6179656400000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19EB PUSH1 0x30 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x19F6 DUP3 PUSH2 0x198F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A1A DUP2 PUSH2 0x19DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A2063616E6E6F742073656E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x64206D65737361676520746F20626C6F636B65642073797374656D2061646472 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA3 PUSH1 0x43 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AAE DUP3 PUSH2 0x1A21 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AD2 DUP2 PUSH2 0x1A96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206D657373616765206861 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7320616C7265616479206265656E2072656C6179656400000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B35 PUSH1 0x36 DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B40 DUP3 PUSH2 0x1AD9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B64 DUP2 PUSH2 0x1B28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F7373446F6D61696E4D657373656E6765723A206661696C656420746F20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72656C6179206D65737361676500000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC7 PUSH1 0x2D DUP4 PUSH2 0x1540 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BD2 DUP3 PUSH2 0x1B6B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BF6 DUP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C26 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C0B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1C35 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C46 DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH2 0x1C50 DUP2 DUP6 PUSH2 0x13EF JUMP JUMPDEST SWAP4 POP PUSH2 0x1C60 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C08 JUMP JUMPDEST PUSH2 0x1C69 DUP2 PUSH2 0x140F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1C89 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1C96 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1181 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1CA8 DUP2 DUP6 PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP PUSH2 0x1CB7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x13B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1CD5 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1CE2 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1CEF PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x1CFC PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x13B6 JUMP JUMPDEST PUSH2 0x1D09 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x13B6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1D1B DUP2 DUP5 PUSH2 0x1C3B JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x5EBA3CFE0F74F809 0x27 0xBD 0xD9 PUSH1 0x8D 0xAE EQ 0xCE DIV 0xFC 0xCF 0x21 0x24 0x28 0xD4 CALL CALLVALUE 0xDC EXTCODECOPY LOG4 PUSH2 0x2C34 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"175:707:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4588:53:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4416:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4244:64;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8785:1080;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3945:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14629:262;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4080:58;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4751:40;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6080:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5060:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16001:708;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;744:136:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10567:3656:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15231:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4588:53;4639:2;4588:53;:::o;4416:66::-;4478:4;4416:66;:::o;4244:64::-;4304:4;4244:64;:::o;8785:1080::-;9275:381;9301:15;9330:31;9338:8;;9348:12;9330:7;:31::i;:::-;9375:9;9438:26;;;9482:14;:12;:14::i;:::-;9514:10;9542:7;9567:9;9594:12;9624:8;;9398:248;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9275:12;:381::i;:::-;9684:7;9672:72;;;9693:10;9705:8;;9715:14;:12;:14::i;:::-;9731:12;9672:72;;;;;;;;;;:::i;:::-;;;;;;;;9781:10;9759:44;;;9793:9;9759:44;;;;;;:::i;:::-;;;;;;;;9840:8;;9838:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8785:1080;;;;:::o;3945:42::-;3986:1;3945:42;:::o;14629:262::-;14684:7;1300:42:0;14724:47:6;;:16;;;;;;;;;;;:47;;;14703:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;14868:16;;;;;;;;;;;14861:23;;14629:262;:::o;4080:58::-;4131:7;4080:58;:::o;4751:40::-;;;:::o;6080:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;5060:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;16001:708::-;16085:6;4131:7;4639:2;16584:8;;:15;;16577:51;;;;:::i;:::-;4478:4;4304;16421:12;16414:20;;:57;;;;:::i;:::-;16413:114;;;;:::i;:::-;16412:217;;;;:::i;:::-;:290;;;;:::i;:::-;16361:341;;16001:708;;;;;:::o;744:136:9:-;849:24;830:16;;:43;;;;;;;;;;;;;;;;;;744:136;:::o;10567:3656:6:-;10786:14;10804:37;10834:6;10804:29;:37::i;:::-;10783:58;;;10882:1;10872:7;:11;;;10851:135;;;;;;;;;;;;:::i;:::-;;;;;;;;;11199:1;11188:7;:12;;;11184:293;;11216:15;11234:68;11267:7;11276;11285:8;;11234:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11295:6;11234:32;:68::i;:::-;11216:86;;11372:5;11341:36;;:18;:27;11360:7;11341:27;;;;;;;;;;;;;;;;;;;;;:36;;;11316:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;11202:275;11184:293;11647:21;11671:172;11717:6;11737:7;11758;11779:6;11799:12;11825:8;;11671:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;:172::i;:::-;11647:196;;11938:15;:30;11954:13;11938:30;;;;;;;;;;;;;;;;;;;;;11934:102;;;11984:41;;;;;;;;;;:::i;:::-;;;;;;;;11934:102;12137:4;12104:15;:30;12120:13;12104:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12156:19;:17;:19::i;:::-;12152:598;;;12345:6;12332:9;:19;12325:27;;;;:::i;:::-;;12374:14;:29;12389:13;12374:29;;;;;;;;;;;;;;;;;;;;;12373:30;12366:38;;;;:::i;:::-;;12152:598;;;12473:1;12460:9;:14;12435:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;12628:14;:29;12643:13;12628:29;;;;;;;;;;;;;;;;;;;;;12603:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;12152:598;12809:5;12781:33;;:24;12797:7;12781:15;:24::i;:::-;:33;;;12760:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;12976:5;12939:42;;:18;:33;12958:13;12939:33;;;;;;;;;;;;;;;;;;;;;:42;;;12918:143;;;;;;;;;;;;:::i;:::-;;;;;;;;;13091:7;13072:16;;:26;;;;;;;;;;;;;;;;;;13108:12;13123:64;13147:7;13156:12;13170:6;13178:8;;13123:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;:64::i;:::-;13108:79;;1300:42:0;13197:16:6;;:46;;;;;;;;;;;;;;;;;;13258:7;13254:857;;;13317:4;13281:18;:33;13300:13;13281:33;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;13355:13;13340:29;;;;;;;;;;13254:857;;;13432:4;13400:14;:29;13415:13;13400:29;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;13476:13;13455:35;;;;;;;;;;965:1:0;13970:41:6;;:9;:41;;;13966:135;;14031:55;;;;;;;;;;:::i;:::-;;;;;;;;13966:135;13254:857;14211:5;14178:15;:30;14194:13;14178:30;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;10773:3450;;;10567:3656;;;;;;;:::o;15231:134::-;15276:7;15302:56;15332:8;;;;;;;;;;;3986:1;15302:29;:56::i;:::-;15295:63;;15231:134;:::o;298:120:9:-;;;;;:::o;5370:343:1:-;5439:7;5448:6;5466:13;5489:14;5557:66;5549:6;5545:79;5536:88;;5657:6;5652:3;5648:16;5637:27;;5691:5;5698:7;5683:23;;;;;;5370:343;;;:::o;3204:277:2:-;3369:7;3405:68;3441:7;3450;3459:5;3466:6;3405:35;:68::i;:::-;3395:79;;;;;;3388:86;;3204:277;;;;;;:::o;3975:527::-;4191:7;4256:225;4313:6;4341:7;4370;4399:6;4427:9;4458:5;4256:35;:225::i;:::-;4229:266;;;;;;4210:285;;3975:527;;;;;;;;:::o;480:95:9:-;541:4;564;557:11;;480:95;:::o;637:101::-;703:4;637:101;;;:::o;1433:2913:3:-;1587:4;1603:13;2327:2;2320:3;2311:7;2307:17;2303:2;2299:26;2295:35;2288:5;2285:46;2282:1174;;;2432:10;2429:1;2422:21;2547:2;2543;2536:14;3285:56;3281:2;3274:68;3438:3;3434:2;3427:15;2282:1174;4277:4;4245;4208:9;4202:16;4172:2;4161:9;4157:18;4118:6;4080:7;4050:5;4028:277;4016:289;;4331:8;4324:15;;;1433:2913;;;;;;:::o;4874:228:1:-;4960:7;4979:13;5057:6;5046:8;5041:3;5037:18;5034:30;5025:39;;5090:5;5083:12;;;4874:228;;;;:::o;3113:414::-;3280:12;3427:7;3452;3477:5;3500:6;3323:197;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3304:216;;3113:414;;;;;;:::o;4023:532::-;4241:12;4404:6;4428:7;4453;4478:6;4502:9;4529:5;4284:264;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4265:283;;4023:532;;;;;;;;:::o;7:101:10:-;43:7;83:18;76:5;72:30;61:41;;7:101;;;:::o;114:115::-;199:23;216:5;199:23;:::i;:::-;194:3;187:36;114:115;;:::o;235:218::-;326:4;364:2;353:9;349:18;341:26;;377:69;443:1;432:9;428:17;419:6;377:69;:::i;:::-;235:218;;;;:::o;540:117::-;649:1;646;639:12;663:117;772:1;769;762:12;786:126;823:7;863:42;856:5;852:54;841:65;;786:126;;;:::o;918:96::-;955:7;984:24;1002:5;984:24;:::i;:::-;973:35;;918:96;;;:::o;1020:122::-;1093:24;1111:5;1093:24;:::i;:::-;1086:5;1083:35;1073:63;;1132:1;1129;1122:12;1073:63;1020:122;:::o;1148:139::-;1194:5;1232:6;1219:20;1210:29;;1248:33;1275:5;1248:33;:::i;:::-;1148:139;;;;:::o;1293:117::-;1402:1;1399;1392:12;1416:117;1525:1;1522;1515:12;1539:117;1648:1;1645;1638:12;1675:552;1732:8;1742:6;1792:3;1785:4;1777:6;1773:17;1769:27;1759:122;;1800:79;;:::i;:::-;1759:122;1913:6;1900:20;1890:30;;1943:18;1935:6;1932:30;1929:117;;;1965:79;;:::i;:::-;1929:117;2079:4;2071:6;2067:17;2055:29;;2133:3;2125:4;2117:6;2113:17;2103:8;2099:32;2096:41;2093:128;;;2140:79;;:::i;:::-;2093:128;1675:552;;;;;:::o;2233:93::-;2269:7;2309:10;2302:5;2298:22;2287:33;;2233:93;;;:::o;2332:120::-;2404:23;2421:5;2404:23;:::i;:::-;2397:5;2394:34;2384:62;;2442:1;2439;2432:12;2384:62;2332:120;:::o;2458:137::-;2503:5;2541:6;2528:20;2519:29;;2557:32;2583:5;2557:32;:::i;:::-;2458:137;;;;:::o;2601:815::-;2688:6;2696;2704;2712;2761:2;2749:9;2740:7;2736:23;2732:32;2729:119;;;2767:79;;:::i;:::-;2729:119;2887:1;2912:53;2957:7;2948:6;2937:9;2933:22;2912:53;:::i;:::-;2902:63;;2858:117;3042:2;3031:9;3027:18;3014:32;3073:18;3065:6;3062:30;3059:117;;;3095:79;;:::i;:::-;3059:117;3208:64;3264:7;3255:6;3244:9;3240:22;3208:64;:::i;:::-;3190:82;;;;2985:297;3321:2;3347:52;3391:7;3382:6;3371:9;3367:22;3347:52;:::i;:::-;3337:62;;3292:117;2601:815;;;;;;;:::o;3422:89::-;3458:7;3498:6;3491:5;3487:18;3476:29;;3422:89;;;:::o;3517:115::-;3602:23;3619:5;3602:23;:::i;:::-;3597:3;3590:36;3517:115;;:::o;3638:218::-;3729:4;3767:2;3756:9;3752:18;3744:26;;3780:69;3846:1;3835:9;3831:17;3822:6;3780:69;:::i;:::-;3638:218;;;;:::o;3862:118::-;3949:24;3967:5;3949:24;:::i;:::-;3944:3;3937:37;3862:118;;:::o;3986:222::-;4079:4;4117:2;4106:9;4102:18;4094:26;;4130:71;4198:1;4187:9;4183:17;4174:6;4130:71;:::i;:::-;3986:222;;;;:::o;4214:77::-;4251:7;4280:5;4269:16;;4214:77;;;:::o;4297:122::-;4370:24;4388:5;4370:24;:::i;:::-;4363:5;4360:35;4350:63;;4409:1;4406;4399:12;4350:63;4297:122;:::o;4425:139::-;4471:5;4509:6;4496:20;4487:29;;4525:33;4552:5;4525:33;:::i;:::-;4425:139;;;;:::o;4570:329::-;4629:6;4678:2;4666:9;4657:7;4653:23;4649:32;4646:119;;;4684:79;;:::i;:::-;4646:119;4804:1;4829:53;4874:7;4865:6;4854:9;4850:22;4829:53;:::i;:::-;4819:63;;4775:117;4570:329;;;;:::o;4905:90::-;4939:7;4982:5;4975:13;4968:21;4957:32;;4905:90;;;:::o;5001:109::-;5082:21;5097:5;5082:21;:::i;:::-;5077:3;5070:34;5001:109;;:::o;5116:210::-;5203:4;5241:2;5230:9;5226:18;5218:26;;5254:65;5316:1;5305:9;5301:17;5292:6;5254:65;:::i;:::-;5116:210;;;;:::o;5332:670::-;5410:6;5418;5426;5475:2;5463:9;5454:7;5450:23;5446:32;5443:119;;;5481:79;;:::i;:::-;5443:119;5629:1;5618:9;5614:17;5601:31;5659:18;5651:6;5648:30;5645:117;;;5681:79;;:::i;:::-;5645:117;5794:64;5850:7;5841:6;5830:9;5826:22;5794:64;:::i;:::-;5776:82;;;;5572:296;5907:2;5933:52;5977:7;5968:6;5957:9;5953:22;5933:52;:::i;:::-;5923:62;;5878:117;5332:670;;;;;:::o;6008:329::-;6067:6;6116:2;6104:9;6095:7;6091:23;6087:32;6084:119;;;6122:79;;:::i;:::-;6084:119;6242:1;6267:53;6312:7;6303:6;6292:9;6288:22;6267:53;:::i;:::-;6257:63;;6213:117;6008:329;;;;:::o;6343:77::-;6380:7;6409:5;6398:16;;6343:77;;;:::o;6426:122::-;6499:24;6517:5;6499:24;:::i;:::-;6492:5;6489:35;6479:63;;6538:1;6535;6528:12;6479:63;6426:122;:::o;6554:139::-;6600:5;6638:6;6625:20;6616:29;;6654:33;6681:5;6654:33;:::i;:::-;6554:139;;;;:::o;6699:1255::-;6814:6;6822;6830;6838;6846;6854;6862;6911:3;6899:9;6890:7;6886:23;6882:33;6879:120;;;6918:79;;:::i;:::-;6879:120;7038:1;7063:53;7108:7;7099:6;7088:9;7084:22;7063:53;:::i;:::-;7053:63;;7009:117;7165:2;7191:53;7236:7;7227:6;7216:9;7212:22;7191:53;:::i;:::-;7181:63;;7136:118;7293:2;7319:53;7364:7;7355:6;7344:9;7340:22;7319:53;:::i;:::-;7309:63;;7264:118;7421:2;7447:53;7492:7;7483:6;7472:9;7468:22;7447:53;:::i;:::-;7437:63;;7392:118;7549:3;7576:53;7621:7;7612:6;7601:9;7597:22;7576:53;:::i;:::-;7566:63;;7520:119;7706:3;7695:9;7691:19;7678:33;7738:18;7730:6;7727:30;7724:117;;;7760:79;;:::i;:::-;7724:117;7873:64;7929:7;7920:6;7909:9;7905:22;7873:64;:::i;:::-;7855:82;;;;7649:298;6699:1255;;;;;;;;;;:::o;7960:118::-;8047:24;8065:5;8047:24;:::i;:::-;8042:3;8035:37;7960:118;;:::o;8084:222::-;8177:4;8215:2;8204:9;8200:18;8192:26;;8228:71;8296:1;8285:9;8281:17;8272:6;8228:71;:::i;:::-;8084:222;;;;:::o;8312:115::-;8397:23;8414:5;8397:23;:::i;:::-;8392:3;8385:36;8312:115;;:::o;8433:168::-;8516:11;8550:6;8545:3;8538:19;8590:4;8585:3;8581:14;8566:29;;8433:168;;;;:::o;8607:154::-;8691:6;8686:3;8681;8668:30;8753:1;8744:6;8739:3;8735:16;8728:27;8607:154;;;:::o;8767:102::-;8808:6;8859:2;8855:7;8850:2;8843:5;8839:14;8835:28;8825:38;;8767:102;;;:::o;8897:301::-;8993:3;9014:70;9077:6;9072:3;9014:70;:::i;:::-;9007:77;;9094:43;9130:6;9125:3;9118:5;9094:43;:::i;:::-;9162:29;9184:6;9162:29;:::i;:::-;9157:3;9153:39;9146:46;;8897:301;;;;;:::o;9204:878::-;9463:4;9501:3;9490:9;9486:19;9478:27;;9515:71;9583:1;9572:9;9568:17;9559:6;9515:71;:::i;:::-;9596:72;9664:2;9653:9;9649:18;9640:6;9596:72;:::i;:::-;9678;9746:2;9735:9;9731:18;9722:6;9678:72;:::i;:::-;9760;9828:2;9817:9;9813:18;9804:6;9760:72;:::i;:::-;9842:71;9908:3;9897:9;9893:19;9884:6;9842:71;:::i;:::-;9961:9;9955:4;9951:20;9945:3;9934:9;9930:19;9923:49;9989:86;10070:4;10061:6;10053;9989:86;:::i;:::-;9981:94;;9204:878;;;;;;;;;;:::o;10088:60::-;10116:3;10137:5;10130:12;;10088:60;;;:::o;10154:140::-;10203:9;10236:52;10254:33;10263:23;10280:5;10263:23;:::i;:::-;10254:33;:::i;:::-;10236:52;:::i;:::-;10223:65;;10154:140;;;:::o;10300:129::-;10386:36;10416:5;10386:36;:::i;:::-;10381:3;10374:49;10300:129;;:::o;10435:658::-;10639:4;10677:3;10666:9;10662:19;10654:27;;10691:71;10759:1;10748:9;10744:17;10735:6;10691:71;:::i;:::-;10809:9;10803:4;10799:20;10794:2;10783:9;10779:18;10772:48;10837:86;10918:4;10909:6;10901;10837:86;:::i;:::-;10829:94;;10933:72;11001:2;10990:9;10986:18;10977:6;10933:72;:::i;:::-;11015:71;11082:2;11071:9;11067:18;11058:6;11015:71;:::i;:::-;10435:658;;;;;;;;:::o;11099:169::-;11183:11;11217:6;11212:3;11205:19;11257:4;11252:3;11248:14;11233:29;;11099:169;;;;:::o;11274:240::-;11414:34;11410:1;11402:6;11398:14;11391:58;11483:23;11478:2;11470:6;11466:15;11459:48;11274:240;:::o;11520:366::-;11662:3;11683:67;11747:2;11742:3;11683:67;:::i;:::-;11676:74;;11759:93;11848:3;11759:93;:::i;:::-;11877:2;11872:3;11868:12;11861:19;;11520:366;;;:::o;11892:419::-;12058:4;12096:2;12085:9;12081:18;12073:26;;12145:9;12139:4;12135:20;12131:1;12120:9;12116:17;12109:47;12173:131;12299:4;12173:131;:::i;:::-;12165:139;;11892:419;;;:::o;12317:180::-;12365:77;12362:1;12355:88;12462:4;12459:1;12452:15;12486:4;12483:1;12476:15;12503:297;12542:7;12565:19;12582:1;12565:19;:::i;:::-;12560:24;;12598:19;12615:1;12598:19;:::i;:::-;12593:24;;12737:1;12717:18;12713:26;12710:1;12707:33;12702:1;12695:9;12688:17;12684:57;12681:83;;;12744:18;;:::i;:::-;12681:83;12792:1;12789;12785:9;12774:20;;12503:297;;;;:::o;12806:180::-;12854:77;12851:1;12844:88;12951:4;12948:1;12941:15;12975:4;12972:1;12965:15;12992:182;13031:1;13048:19;13065:1;13048:19;:::i;:::-;13043:24;;13081:19;13098:1;13081:19;:::i;:::-;13076:24;;13119:1;13109:35;;13124:18;;:::i;:::-;13109:35;13166:1;13163;13159:9;13154:14;;12992:182;;;;:::o;13180:254::-;13219:3;13238:19;13255:1;13238:19;:::i;:::-;13233:24;;13271:19;13288:1;13271:19;:::i;:::-;13266:24;;13376:1;13356:18;13352:26;13349:1;13346:33;13343:59;;;13382:18;;:::i;:::-;13343:59;13426:1;13423;13419:9;13412:16;;13180:254;;;;:::o;13440:301::-;13580:34;13576:1;13568:6;13564:14;13557:58;13649:34;13644:2;13636:6;13632:15;13625:59;13718:15;13713:2;13705:6;13701:15;13694:40;13440:301;:::o;13747:366::-;13889:3;13910:67;13974:2;13969:3;13910:67;:::i;:::-;13903:74;;13986:93;14075:3;13986:93;:::i;:::-;14104:2;14099:3;14095:12;14088:19;;13747:366;;;:::o;14119:419::-;14285:4;14323:2;14312:9;14308:18;14300:26;;14372:9;14366:4;14362:20;14358:1;14347:9;14343:17;14336:47;14400:131;14526:4;14400:131;:::i;:::-;14392:139;;14119:419;;;:::o;14544:242::-;14684:34;14680:1;14672:6;14668:14;14661:58;14753:25;14748:2;14740:6;14736:15;14729:50;14544:242;:::o;14792:366::-;14934:3;14955:67;15019:2;15014:3;14955:67;:::i;:::-;14948:74;;15031:93;15120:3;15031:93;:::i;:::-;15149:2;15144:3;15140:12;15133:19;;14792:366;;;:::o;15164:419::-;15330:4;15368:2;15357:9;15353:18;15345:26;;15417:9;15411:4;15407:20;15403:1;15392:9;15388:17;15381:47;15445:131;15571:4;15445:131;:::i;:::-;15437:139;;15164:419;;;:::o;15589:181::-;15729:33;15725:1;15717:6;15713:14;15706:57;15589:181;:::o;15776:366::-;15918:3;15939:67;16003:2;15998:3;15939:67;:::i;:::-;15932:74;;16015:93;16104:3;16015:93;:::i;:::-;16133:2;16128:3;16124:12;16117:19;;15776:366;;;:::o;16148:419::-;16314:4;16352:2;16341:9;16337:18;16329:26;;16401:9;16395:4;16391:20;16387:1;16376:9;16372:17;16365:47;16429:131;16555:4;16429:131;:::i;:::-;16421:139;;16148:419;;;:::o;16573:180::-;16621:77;16618:1;16611:88;16718:4;16715:1;16708:15;16742:4;16739:1;16732:15;16759:304;16899:34;16895:1;16887:6;16883:14;16876:58;16968:34;16963:2;16955:6;16951:15;16944:59;17037:18;17032:2;17024:6;17020:15;17013:43;16759:304;:::o;17069:366::-;17211:3;17232:67;17296:2;17291:3;17232:67;:::i;:::-;17225:74;;17308:93;17397:3;17308:93;:::i;:::-;17426:2;17421:3;17417:12;17410:19;;17069:366;;;:::o;17441:419::-;17607:4;17645:2;17634:9;17630:18;17622:26;;17694:9;17688:4;17684:20;17680:1;17669:9;17665:17;17658:47;17722:131;17848:4;17722:131;:::i;:::-;17714:139;;17441:419;;;:::o;17866:235::-;18006:34;18002:1;17994:6;17990:14;17983:58;18075:18;18070:2;18062:6;18058:15;18051:43;17866:235;:::o;18107:366::-;18249:3;18270:67;18334:2;18329:3;18270:67;:::i;:::-;18263:74;;18346:93;18435:3;18346:93;:::i;:::-;18464:2;18459:3;18455:12;18448:19;;18107:366;;;:::o;18479:419::-;18645:4;18683:2;18672:9;18668:18;18660:26;;18732:9;18726:4;18722:20;18718:1;18707:9;18703:17;18696:47;18760:131;18886:4;18760:131;:::i;:::-;18752:139;;18479:419;;;:::o;18904:291::-;19044:34;19040:1;19032:6;19028:14;19021:58;19113:34;19108:2;19100:6;19096:15;19089:59;19182:5;19177:2;19169:6;19165:15;19158:30;18904:291;:::o;19201:366::-;19343:3;19364:67;19428:2;19423:3;19364:67;:::i;:::-;19357:74;;19440:93;19529:3;19440:93;:::i;:::-;19558:2;19553:3;19549:12;19542:19;;19201:366;;;:::o;19573:419::-;19739:4;19777:2;19766:9;19762:18;19754:26;;19826:9;19820:4;19816:20;19812:1;19801:9;19797:17;19790:47;19854:131;19980:4;19854:131;:::i;:::-;19846:139;;19573:419;;;:::o;19998:241::-;20138:34;20134:1;20126:6;20122:14;20115:58;20207:24;20202:2;20194:6;20190:15;20183:49;19998:241;:::o;20245:366::-;20387:3;20408:67;20472:2;20467:3;20408:67;:::i;:::-;20401:74;;20484:93;20573:3;20484:93;:::i;:::-;20602:2;20597:3;20593:12;20586:19;;20245:366;;;:::o;20617:419::-;20783:4;20821:2;20810:9;20806:18;20798:26;;20870:9;20864:4;20860:20;20856:1;20845:9;20841:17;20834:47;20898:131;21024:4;20898:131;:::i;:::-;20890:139;;20617:419;;;:::o;21042:232::-;21182:34;21178:1;21170:6;21166:14;21159:58;21251:15;21246:2;21238:6;21234:15;21227:40;21042:232;:::o;21280:366::-;21422:3;21443:67;21507:2;21502:3;21443:67;:::i;:::-;21436:74;;21519:93;21608:3;21519:93;:::i;:::-;21637:2;21632:3;21628:12;21621:19;;21280:366;;;:::o;21652:419::-;21818:4;21856:2;21845:9;21841:18;21833:26;;21905:9;21899:4;21895:20;21891:1;21880:9;21876:17;21869:47;21933:131;22059:4;21933:131;:::i;:::-;21925:139;;21652:419;;;:::o;22077:98::-;22128:6;22162:5;22156:12;22146:22;;22077:98;;;:::o;22181:307::-;22249:1;22259:113;22273:6;22270:1;22267:13;22259:113;;;22358:1;22353:3;22349:11;22343:18;22339:1;22334:3;22330:11;22323:39;22295:2;22292:1;22288:10;22283:15;;22259:113;;;22390:6;22387:1;22384:13;22381:101;;;22470:1;22461:6;22456:3;22452:16;22445:27;22381:101;22230:258;22181:307;;;:::o;22494:360::-;22580:3;22608:38;22640:5;22608:38;:::i;:::-;22662:70;22725:6;22720:3;22662:70;:::i;:::-;22655:77;;22741:52;22786:6;22781:3;22774:4;22767:5;22763:16;22741:52;:::i;:::-;22818:29;22840:6;22818:29;:::i;:::-;22813:3;22809:39;22802:46;;22584:270;22494:360;;;;:::o;22860:640::-;23055:4;23093:3;23082:9;23078:19;23070:27;;23107:71;23175:1;23164:9;23160:17;23151:6;23107:71;:::i;:::-;23188:72;23256:2;23245:9;23241:18;23232:6;23188:72;:::i;:::-;23307:9;23301:4;23297:20;23292:2;23281:9;23277:18;23270:48;23335:76;23406:4;23397:6;23335:76;:::i;:::-;23327:84;;23421:72;23489:2;23478:9;23474:18;23465:6;23421:72;:::i;:::-;22860:640;;;;;;;:::o;23506:862::-;23757:4;23795:3;23784:9;23780:19;23772:27;;23809:71;23877:1;23866:9;23862:17;23853:6;23809:71;:::i;:::-;23890:72;23958:2;23947:9;23943:18;23934:6;23890:72;:::i;:::-;23972;24040:2;24029:9;24025:18;24016:6;23972:72;:::i;:::-;24054;24122:2;24111:9;24107:18;24098:6;24054:72;:::i;:::-;24136:73;24204:3;24193:9;24189:19;24180:6;24136:73;:::i;:::-;24257:9;24251:4;24247:20;24241:3;24230:9;24226:19;24219:49;24285:76;24356:4;24347:6;24285:76;:::i;:::-;24277:84;;23506:862;;;;;;;;;:::o"},"methodIdentifiers":{"MESSAGE_VERSION()":"3f827a5a","MIN_GAS_CALLDATA_OVERHEAD()":"028f85f7","MIN_GAS_CONSTANT_OVERHEAD()":"7dea7cc3","MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()":"0c568498","MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()":"2828d7e8","OTHER_MESSENGER()":"9fce812c","baseGas(bytes,uint32)":"b28ade25","failedMessages(bytes32)":"a4e7f8bd","messageNonce()":"ecc70428","relayMessage(uint256,address,address,uint256,uint256,bytes)":"d764ad0b","sendMessage(address,bytes,uint32)":"3dbb202b","setXDomainMessageSender(address)":"bf24eb63","successfulMessages(bytes32)":"b1b1b209","xDomainMessageSender()":"6e296e45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SentMessageExtension1\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSAGE_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CALLDATA_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CONSTANT_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_MESSENGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"baseGas\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"relayMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newXDomainMessageSender\",\"type\":\"address\"}],\"name\":\"setXDomainMessageSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"successfulMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"baseGas(bytes,uint32)\":{\"params\":{\"_message\":\"Message to compute the amount of required gas for.\",\"_minGasLimit\":\"Minimum desired gas limit when message goes to target.\"},\"returns\":{\"_0\":\"Amount of gas required to guarantee message receipt.\"}},\"messageNonce()\":{\"returns\":{\"_0\":\"Nonce of the next message to be sent, with added message version.\"}},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"params\":{\"_message\":\"Message to send to the target.\",\"_minGasLimit\":\"Minimum amount of gas that the message can be executed with.\",\"_nonce\":\"Nonce of the message being relayed.\",\"_sender\":\"Address of the user who sent the message.\",\"_target\":\"Address that the message is targeted at.\",\"_value\":\"ETH value to send with the message.\"}},\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_message\":\"Message to trigger the target address with.\",\"_minGasLimit\":\"Minimum gas limit that the message can be executed with.\",\"_target\":\"Target contract or wallet address.\"}},\"xDomainMessageSender()\":{\"returns\":{\"_0\":\"Address of the sender of the currently executing message on the other chain.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"FailedRelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message fails to be relayed on this chain.\"},\"RelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message is successfully relayed on this chain.\"},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"notice\":\"Emitted whenever a message is sent to the other chain.\"},\"SentMessageExtension1(address,uint256)\":{\"notice\":\"Additional event data to emit, required as of Bedrock. Cannot be merged with the         SentMessage event without breaking the ABI of this contract, this is good enough.\"}},\"kind\":\"user\",\"methods\":{\"MESSAGE_VERSION()\":{\"notice\":\"Current message version identifier.\"},\"MIN_GAS_CALLDATA_OVERHEAD()\":{\"notice\":\"Extra gas added to base gas for each byte of calldata in a message.\"},\"MIN_GAS_CONSTANT_OVERHEAD()\":{\"notice\":\"Constant overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()\":{\"notice\":\"Denominator for dynamic overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()\":{\"notice\":\"Numerator for dynamic overhead added to the base gas for a message.\"},\"OTHER_MESSENGER()\":{\"notice\":\"Address of the paired CrossDomainMessenger contract on the other chain.\"},\"baseGas(bytes,uint32)\":{\"notice\":\"Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely.\"},\"failedMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt.\"},\"messageNonce()\":{\"notice\":\"Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures.\"},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed.\"},\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function).\"},\"successfulMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again.\"},\"xDomainMessageSender()\":{\"notice\":\"Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MinimalMessenger.sol\":\"MinimalMessenger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts-bedrock/contracts/libraries/Constants.sol\":{\"keccak256\":\"0x50a2b69a5e9246945ee1588278753feae90285ff7e675369f0cc5b64acea333c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75153213766bd271cce59d5284a4a0d2f6283e3c6a9dc31b8ce20a3a4c28c066\",\"dweb:/ipfs/QmcbpwMLYuKUPahVYJ3W7sfntQgHk9RTuR2DUzFMrfPMQr\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x170cd0821cec37976a6391da20f1dcdcb1ea9ffada96ccd3c57ff2e357589418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18156216c1f9457c2e032a812ad70f2babbc5b89997554ff014d64c483fb2ff\",\"dweb:/ipfs/Qmc5rjMaBFn3jV7XqDrEvRbmatQvJxeVJYA5B5rdcKPkcJ\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x5d4988987899306d2785b3de068194a39f8e829a7864762a07a0016db5189f5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6746ed0d26d603568818cc52a29d0209effd69f7e55bd0017a6b91bd6cf319fe\",\"dweb:/ipfs/QmPebCmCELMBRtDDxt5ziEPfRXUh6tfm2qJdwz3iyrDdWN\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xe7d372c88a0e20a273308284b7b64c0e4d7e779db4d7124027061a64724328b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d72abcd5d94fab5cf2089fb12fe20bdb74fcc46e2f8dfabbd350a5bd323609\",\"dweb:/ipfs/QmTnxeCfmGBFnBHyVQhnDb7YpVPMBQTrXKKrnvbC1WX45g\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/Types.sol\":{\"keccak256\":\"0x4fe8ec920798661a828430bd30dc2715eeb40534ec01c0a7bf41cb4ab422e134\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74c8471869900bd459358cd990bda1c8d234c06b788804c7049cf465ae1e299f\",\"dweb:/ipfs/QmakcfP6NmbVUQsKqH7rEyJsbiqckigLahw9g74oencEJ7\"]},\"@eth-optimism/contracts-bedrock/contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"@eth-optimism/contracts-bedrock/contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x7ad4eb1a0b4369ce6bf959c66b1810288dcbe70a0243e1be7c3c74bc4ee77182\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28534bdd63f6b5528a06a7571345bd86bcddbb4b5f663222248bd8ec08cd48b4\",\"dweb:/ipfs/QmUXJshFpGQsFEGRhebhYaJRsCPfPxY5RUrQHyfNDQavMs\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"contracts/MinimalMessenger.sol\":{\"keccak256\":\"0x7c5d74316789c85793f48b270279100ca6a2be8d84293352a2f83811d4edecf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d550f45bb4992db219a03bb7699f566f4e47694b6353ebdfc2854a6d2a0b5fc\",\"dweb:/ipfs/QmfL8tzQY9gLLj2dWUTRvH761KSV7s55Rzph2af8PKdwXo\"]}},\"version\":1}"}}}}}