{"id":"fba29ca3d3ec57e820837b1ddc84ebf7","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >0.5.0 <0.9.0;\n\n/**\n * @title IChainStorageContainer\n */\ninterface IChainStorageContainer {\n    /********************\n     * Public Functions *\n     ********************/\n\n    /**\n     * Sets the container's global metadata field. We're using `bytes27` here because we use five\n     * bytes to maintain the length of the underlying data structure, meaning we have an extra\n     * 27 bytes to store arbitrary data.\n     * @param _globalMetadata New global metadata to set.\n     */\n    function setGlobalMetadata(bytes27 _globalMetadata) external;\n\n    /**\n     * Retrieves the container's global metadata field.\n     * @return Container global metadata field.\n     */\n    function getGlobalMetadata() external view returns (bytes27);\n\n    /**\n     * Retrieves the number of objects stored in the container.\n     * @return Number of objects in the container.\n     */\n    function length() external view returns (uint256);\n\n    /**\n     * Pushes an object into the container.\n     * @param _object A 32 byte value to insert into the container.\n     */\n    function push(bytes32 _object) external;\n\n    /**\n     * Pushes an object into the container. Function allows setting the global metadata since\n     * we'll need to touch the \"length\" storage slot anyway, which also contains the global\n     * metadata (it's an optimization).\n     * @param _object A 32 byte value to insert into the container.\n     * @param _globalMetadata New global metadata for the container.\n     */\n    function push(bytes32 _object, bytes27 _globalMetadata) external;\n\n    /**\n     * Retrieves an object from the container.\n     * @param _index Index of the particular object to access.\n     * @return 32 byte object value.\n     */\n    function get(uint256 _index) external view returns (bytes32);\n\n    /**\n     * Removes all objects after and including a given index.\n     * @param _index Object index to delete from.\n     */\n    function deleteElementsAfterInclusive(uint256 _index) external;\n\n    /**\n     * Removes all objects after and including a given index. Also allows setting the global\n     * metadata field.\n     * @param _index Object index to delete from.\n     * @param _globalMetadata New global metadata for the container.\n     */\n    function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata) external;\n}\n"},"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/* Library Imports */\nimport { Lib_RLPReader } from \"../rlp/Lib_RLPReader.sol\";\nimport { Lib_RLPWriter } from \"../rlp/Lib_RLPWriter.sol\";\nimport { Lib_BytesUtils } from \"../utils/Lib_BytesUtils.sol\";\nimport { Lib_Bytes32Utils } from \"../utils/Lib_Bytes32Utils.sol\";\n\n/**\n * @title Lib_OVMCodec\n */\nlibrary Lib_OVMCodec {\n    /*********\n     * Enums *\n     *********/\n\n    enum QueueOrigin {\n        SEQUENCER_QUEUE,\n        L1TOL2_QUEUE\n    }\n\n    /***********\n     * Structs *\n     ***********/\n\n    struct EVMAccount {\n        uint256 nonce;\n        uint256 balance;\n        bytes32 storageRoot;\n        bytes32 codeHash;\n    }\n\n    struct ChainBatchHeader {\n        uint256 batchIndex;\n        bytes32 batchRoot;\n        uint256 batchSize;\n        uint256 prevTotalElements;\n        bytes extraData;\n    }\n\n    struct ChainInclusionProof {\n        uint256 index;\n        bytes32[] siblings;\n    }\n\n    struct Transaction {\n        uint256 timestamp;\n        uint256 blockNumber;\n        QueueOrigin l1QueueOrigin;\n        address l1TxOrigin;\n        address entrypoint;\n        uint256 gasLimit;\n        bytes data;\n    }\n\n    struct TransactionChainElement {\n        bool isSequenced;\n        uint256 queueIndex; // QUEUED TX ONLY\n        uint256 timestamp; // SEQUENCER TX ONLY\n        uint256 blockNumber; // SEQUENCER TX ONLY\n        bytes txData; // SEQUENCER TX ONLY\n    }\n\n    struct QueueElement {\n        bytes32 transactionHash;\n        uint40 timestamp;\n        uint40 blockNumber;\n    }\n\n    /**********************\n     * Internal Functions *\n     **********************/\n\n    /**\n     * Encodes a standard OVM transaction.\n     * @param _transaction OVM transaction to encode.\n     * @return Encoded transaction bytes.\n     */\n    function encodeTransaction(Transaction memory _transaction)\n        internal\n        pure\n        returns (bytes memory)\n    {\n        return\n            abi.encodePacked(\n                _transaction.timestamp,\n                _transaction.blockNumber,\n                _transaction.l1QueueOrigin,\n                _transaction.l1TxOrigin,\n                _transaction.entrypoint,\n                _transaction.gasLimit,\n                _transaction.data\n            );\n    }\n\n    /**\n     * Hashes a standard OVM transaction.\n     * @param _transaction OVM transaction to encode.\n     * @return Hashed transaction\n     */\n    function hashTransaction(Transaction memory _transaction) internal pure returns (bytes32) {\n        return keccak256(encodeTransaction(_transaction));\n    }\n\n    /**\n     * @notice Decodes an RLP-encoded account state into a useful struct.\n     * @param _encoded RLP-encoded account state.\n     * @return Account state struct.\n     */\n    function decodeEVMAccount(bytes memory _encoded) internal pure returns (EVMAccount memory) {\n        Lib_RLPReader.RLPItem[] memory accountState = Lib_RLPReader.readList(_encoded);\n\n        return\n            EVMAccount({\n                nonce: Lib_RLPReader.readUint256(accountState[0]),\n                balance: Lib_RLPReader.readUint256(accountState[1]),\n                storageRoot: Lib_RLPReader.readBytes32(accountState[2]),\n                codeHash: Lib_RLPReader.readBytes32(accountState[3])\n            });\n    }\n\n    /**\n     * Calculates a hash for a given batch header.\n     * @param _batchHeader Header to hash.\n     * @return Hash of the header.\n     */\n    function hashBatchHeader(Lib_OVMCodec.ChainBatchHeader memory _batchHeader)\n        internal\n        pure\n        returns (bytes32)\n    {\n        return\n            keccak256(\n                abi.encode(\n                    _batchHeader.batchRoot,\n                    _batchHeader.batchSize,\n                    _batchHeader.prevTotalElements,\n                    _batchHeader.extraData\n                )\n            );\n    }\n}\n"},"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/* External Imports */\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Lib_AddressManager\n */\ncontract Lib_AddressManager is Ownable {\n    /**********\n     * Events *\n     **********/\n\n    event AddressSet(string indexed _name, address _newAddress, address _oldAddress);\n\n    /*************\n     * Variables *\n     *************/\n\n    mapping(bytes32 => address) private addresses;\n\n    /********************\n     * Public Functions *\n     ********************/\n\n    /**\n     * Changes the address associated with a particular name.\n     * @param _name String name to associate an address with.\n     * @param _address Address to associate with the name.\n     */\n    function setAddress(string memory _name, address _address) external onlyOwner {\n        bytes32 nameHash = _getNameHash(_name);\n        address oldAddress = addresses[nameHash];\n        addresses[nameHash] = _address;\n\n        emit AddressSet(_name, _address, oldAddress);\n    }\n\n    /**\n     * Retrieves the address associated with a given name.\n     * @param _name Name to retrieve an address for.\n     * @return Address associated with the given name.\n     */\n    function getAddress(string memory _name) external view returns (address) {\n        return addresses[_getNameHash(_name)];\n    }\n\n    /**********************\n     * Internal Functions *\n     **********************/\n\n    /**\n     * Computes the hash of a name.\n     * @param _name Name to compute a hash for.\n     * @return Hash of the given name.\n     */\n    function _getNameHash(string memory _name) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(_name));\n    }\n}\n"},"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/* Library Imports */\nimport { Lib_AddressManager } from \"./Lib_AddressManager.sol\";\n\n/**\n * @title Lib_AddressResolver\n */\nabstract contract Lib_AddressResolver {\n    /*************\n     * Variables *\n     *************/\n\n    Lib_AddressManager public libAddressManager;\n\n    /***************\n     * Constructor *\n     ***************/\n\n    /**\n     * @param _libAddressManager Address of the Lib_AddressManager.\n     */\n    constructor(address _libAddressManager) {\n        libAddressManager = Lib_AddressManager(_libAddressManager);\n    }\n\n    /********************\n     * Public Functions *\n     ********************/\n\n    /**\n     * Resolves the address associated with a given name.\n     * @param _name Name to resolve an address for.\n     * @return Address associated with the given name.\n     */\n    function resolve(string memory _name) public view returns (address) {\n        return libAddressManager.getAddress(_name);\n    }\n}\n"},"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title Lib_RLPReader\n * @dev Adapted from \"RLPReader\" by Hamdi Allam (hamdi.allam97@gmail.com).\n */\nlibrary Lib_RLPReader {\n    /*************\n     * Constants *\n     *************/\n\n    uint256 internal constant MAX_LIST_LENGTH = 32;\n\n    /*********\n     * Enums *\n     *********/\n\n    enum RLPItemType {\n        DATA_ITEM,\n        LIST_ITEM\n    }\n\n    /***********\n     * Structs *\n     ***********/\n\n    struct RLPItem {\n        uint256 length;\n        uint256 ptr;\n    }\n\n    /**********************\n     * Internal Functions *\n     **********************/\n\n    /**\n     * Converts bytes to a reference to memory position and length.\n     * @param _in Input bytes to convert.\n     * @return Output memory reference.\n     */\n    function toRLPItem(bytes memory _in) internal pure returns (RLPItem memory) {\n        uint256 ptr;\n        assembly {\n            ptr := add(_in, 32)\n        }\n\n        return RLPItem({ length: _in.length, ptr: ptr });\n    }\n\n    /**\n     * Reads an RLP list value into a list of RLP items.\n     * @param _in RLP list value.\n     * @return Decoded RLP list items.\n     */\n    function readList(RLPItem memory _in) internal pure returns (RLPItem[] memory) {\n        (uint256 listOffset, , RLPItemType itemType) = _decodeLength(_in);\n\n        require(itemType == RLPItemType.LIST_ITEM, \"Invalid RLP list value.\");\n\n        // Solidity in-memory arrays can't be increased in size, but *can* be decreased in size by\n        // writing to the length. Since we can't know the number of RLP items without looping over\n        // the entire input, we'd have to loop twice to accurately size this array. It's easier to\n        // simply set a reasonable maximum list length and decrease the size before we finish.\n        RLPItem[] memory out = new RLPItem[](MAX_LIST_LENGTH);\n\n        uint256 itemCount = 0;\n        uint256 offset = listOffset;\n        while (offset < _in.length) {\n            require(itemCount < MAX_LIST_LENGTH, \"Provided RLP list exceeds max list length.\");\n\n            (uint256 itemOffset, uint256 itemLength, ) = _decodeLength(\n                RLPItem({ length: _in.length - offset, ptr: _in.ptr + offset })\n            );\n\n            out[itemCount] = RLPItem({ length: itemLength + itemOffset, ptr: _in.ptr + offset });\n\n            itemCount += 1;\n            offset += itemOffset + itemLength;\n        }\n\n        // Decrease the array size to match the actual item count.\n        assembly {\n            mstore(out, itemCount)\n        }\n\n        return out;\n    }\n\n    /**\n     * Reads an RLP list value into a list of RLP items.\n     * @param _in RLP list value.\n     * @return Decoded RLP list items.\n     */\n    function readList(bytes memory _in) internal pure returns (RLPItem[] memory) {\n        return readList(toRLPItem(_in));\n    }\n\n    /**\n     * Reads an RLP bytes value into bytes.\n     * @param _in RLP bytes value.\n     * @return Decoded bytes.\n     */\n    function readBytes(RLPItem memory _in) internal pure returns (bytes memory) {\n        (uint256 itemOffset, uint256 itemLength, RLPItemType itemType) = _decodeLength(_in);\n\n        require(itemType == RLPItemType.DATA_ITEM, \"Invalid RLP bytes value.\");\n\n        return _copy(_in.ptr, itemOffset, itemLength);\n    }\n\n    /**\n     * Reads an RLP bytes value into bytes.\n     * @param _in RLP bytes value.\n     * @return Decoded bytes.\n     */\n    function readBytes(bytes memory _in) internal pure returns (bytes memory) {\n        return readBytes(toRLPItem(_in));\n    }\n\n    /**\n     * Reads an RLP string value into a string.\n     * @param _in RLP string value.\n     * @return Decoded string.\n     */\n    function readString(RLPItem memory _in) internal pure returns (string memory) {\n        return string(readBytes(_in));\n    }\n\n    /**\n     * Reads an RLP string value into a string.\n     * @param _in RLP string value.\n     * @return Decoded string.\n     */\n    function readString(bytes memory _in) internal pure returns (string memory) {\n        return readString(toRLPItem(_in));\n    }\n\n    /**\n     * Reads an RLP bytes32 value into a bytes32.\n     * @param _in RLP bytes32 value.\n     * @return Decoded bytes32.\n     */\n    function readBytes32(RLPItem memory _in) internal pure returns (bytes32) {\n        require(_in.length <= 33, \"Invalid RLP bytes32 value.\");\n\n        (uint256 itemOffset, uint256 itemLength, RLPItemType itemType) = _decodeLength(_in);\n\n        require(itemType == RLPItemType.DATA_ITEM, \"Invalid RLP bytes32 value.\");\n\n        uint256 ptr = _in.ptr + itemOffset;\n        bytes32 out;\n        assembly {\n            out := mload(ptr)\n\n            // Shift the bytes over to match the item size.\n            if lt(itemLength, 32) {\n                out := div(out, exp(256, sub(32, itemLength)))\n            }\n        }\n\n        return out;\n    }\n\n    /**\n     * Reads an RLP bytes32 value into a bytes32.\n     * @param _in RLP bytes32 value.\n     * @return Decoded bytes32.\n     */\n    function readBytes32(bytes memory _in) internal pure returns (bytes32) {\n        return readBytes32(toRLPItem(_in));\n    }\n\n    /**\n     * Reads an RLP uint256 value into a uint256.\n     * @param _in RLP uint256 value.\n     * @return Decoded uint256.\n     */\n    function readUint256(RLPItem memory _in) internal pure returns (uint256) {\n        return uint256(readBytes32(_in));\n    }\n\n    /**\n     * Reads an RLP uint256 value into a uint256.\n     * @param _in RLP uint256 value.\n     * @return Decoded uint256.\n     */\n    function readUint256(bytes memory _in) internal pure returns (uint256) {\n        return readUint256(toRLPItem(_in));\n    }\n\n    /**\n     * Reads an RLP bool value into a bool.\n     * @param _in RLP bool value.\n     * @return Decoded bool.\n     */\n    function readBool(RLPItem memory _in) internal pure returns (bool) {\n        require(_in.length == 1, \"Invalid RLP boolean value.\");\n\n        uint256 ptr = _in.ptr;\n        uint256 out;\n        assembly {\n            out := byte(0, mload(ptr))\n        }\n\n        require(out == 0 || out == 1, \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\");\n\n        return out != 0;\n    }\n\n    /**\n     * Reads an RLP bool value into a bool.\n     * @param _in RLP bool value.\n     * @return Decoded bool.\n     */\n    function readBool(bytes memory _in) internal pure returns (bool) {\n        return readBool(toRLPItem(_in));\n    }\n\n    /**\n     * Reads an RLP address value into a address.\n     * @param _in RLP address value.\n     * @return Decoded address.\n     */\n    function readAddress(RLPItem memory _in) internal pure returns (address) {\n        if (_in.length == 1) {\n            return address(0);\n        }\n\n        require(_in.length == 21, \"Invalid RLP address value.\");\n\n        return address(uint160(readUint256(_in)));\n    }\n\n    /**\n     * Reads an RLP address value into a address.\n     * @param _in RLP address value.\n     * @return Decoded address.\n     */\n    function readAddress(bytes memory _in) internal pure returns (address) {\n        return readAddress(toRLPItem(_in));\n    }\n\n    /**\n     * Reads the raw bytes of an RLP item.\n     * @param _in RLP item to read.\n     * @return Raw RLP bytes.\n     */\n    function readRawBytes(RLPItem memory _in) internal pure returns (bytes memory) {\n        return _copy(_in);\n    }\n\n    /*********************\n     * Private Functions *\n     *********************/\n\n    /**\n     * Decodes the length of an RLP item.\n     * @param _in RLP item to decode.\n     * @return Offset of the encoded data.\n     * @return Length of the encoded data.\n     * @return RLP item type (LIST_ITEM or DATA_ITEM).\n     */\n    function _decodeLength(RLPItem memory _in)\n        private\n        pure\n        returns (\n            uint256,\n            uint256,\n            RLPItemType\n        )\n    {\n        require(_in.length > 0, \"RLP item cannot be null.\");\n\n        uint256 ptr = _in.ptr;\n        uint256 prefix;\n        assembly {\n            prefix := byte(0, mload(ptr))\n        }\n\n        if (prefix <= 0x7f) {\n            // Single byte.\n\n            return (0, 1, RLPItemType.DATA_ITEM);\n        } else if (prefix <= 0xb7) {\n            // Short string.\n\n            // slither-disable-next-line variable-scope\n            uint256 strLen = prefix - 0x80;\n\n            require(_in.length > strLen, \"Invalid RLP short string.\");\n\n            return (1, strLen, RLPItemType.DATA_ITEM);\n        } else if (prefix <= 0xbf) {\n            // Long string.\n            uint256 lenOfStrLen = prefix - 0xb7;\n\n            require(_in.length > lenOfStrLen, \"Invalid RLP long string length.\");\n\n            uint256 strLen;\n            assembly {\n                // Pick out the string length.\n                strLen := div(mload(add(ptr, 1)), exp(256, sub(32, lenOfStrLen)))\n            }\n\n            require(_in.length > lenOfStrLen + strLen, \"Invalid RLP long string.\");\n\n            return (1 + lenOfStrLen, strLen, RLPItemType.DATA_ITEM);\n        } else if (prefix <= 0xf7) {\n            // Short list.\n            // slither-disable-next-line variable-scope\n            uint256 listLen = prefix - 0xc0;\n\n            require(_in.length > listLen, \"Invalid RLP short list.\");\n\n            return (1, listLen, RLPItemType.LIST_ITEM);\n        } else {\n            // Long list.\n            uint256 lenOfListLen = prefix - 0xf7;\n\n            require(_in.length > lenOfListLen, \"Invalid RLP long list length.\");\n\n            uint256 listLen;\n            assembly {\n                // Pick out the list length.\n                listLen := div(mload(add(ptr, 1)), exp(256, sub(32, lenOfListLen)))\n            }\n\n            require(_in.length > lenOfListLen + listLen, \"Invalid RLP long list.\");\n\n            return (1 + lenOfListLen, listLen, RLPItemType.LIST_ITEM);\n        }\n    }\n\n    /**\n     * Copies the bytes from a memory location.\n     * @param _src Pointer to the location to read from.\n     * @param _offset Offset to start reading from.\n     * @param _length Number of bytes to read.\n     * @return Copied bytes.\n     */\n    function _copy(\n        uint256 _src,\n        uint256 _offset,\n        uint256 _length\n    ) private pure returns (bytes memory) {\n        bytes memory out = new bytes(_length);\n        if (out.length == 0) {\n            return out;\n        }\n\n        uint256 src = _src + _offset;\n        uint256 dest;\n        assembly {\n            dest := add(out, 32)\n        }\n\n        // Copy over as many complete words as we can.\n        for (uint256 i = 0; i < _length / 32; i++) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n\n            src += 32;\n            dest += 32;\n        }\n\n        // Pick out the remaining bytes.\n        uint256 mask;\n        unchecked {\n            mask = 256**(32 - (_length % 32)) - 1;\n        }\n\n        assembly {\n            mstore(dest, or(and(mload(src), not(mask)), and(mload(dest), mask)))\n        }\n        return out;\n    }\n\n    /**\n     * Copies an RLP item into bytes.\n     * @param _in RLP item to copy.\n     * @return Copied bytes.\n     */\n    function _copy(RLPItem memory _in) private pure returns (bytes memory) {\n        return _copy(_in.ptr, 0, _in.length);\n    }\n}\n"},"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title Lib_RLPWriter\n * @author Bakaoh (with modifications)\n */\nlibrary Lib_RLPWriter {\n    /**********************\n     * Internal Functions *\n     **********************/\n\n    /**\n     * RLP encodes a byte string.\n     * @param _in The byte string to encode.\n     * @return The RLP encoded string in bytes.\n     */\n    function writeBytes(bytes memory _in) internal pure returns (bytes memory) {\n        bytes memory encoded;\n\n        if (_in.length == 1 && uint8(_in[0]) < 128) {\n            encoded = _in;\n        } else {\n            encoded = abi.encodePacked(_writeLength(_in.length, 128), _in);\n        }\n\n        return encoded;\n    }\n\n    /**\n     * RLP encodes a list of RLP encoded byte byte strings.\n     * @param _in The list of RLP encoded byte strings.\n     * @return The RLP encoded list of items in bytes.\n     */\n    function writeList(bytes[] memory _in) internal pure returns (bytes memory) {\n        bytes memory list = _flatten(_in);\n        return abi.encodePacked(_writeLength(list.length, 192), list);\n    }\n\n    /**\n     * RLP encodes a string.\n     * @param _in The string to encode.\n     * @return The RLP encoded string in bytes.\n     */\n    function writeString(string memory _in) internal pure returns (bytes memory) {\n        return writeBytes(bytes(_in));\n    }\n\n    /**\n     * RLP encodes an address.\n     * @param _in The address to encode.\n     * @return The RLP encoded address in bytes.\n     */\n    function writeAddress(address _in) internal pure returns (bytes memory) {\n        return writeBytes(abi.encodePacked(_in));\n    }\n\n    /**\n     * RLP encodes a uint.\n     * @param _in The uint256 to encode.\n     * @return The RLP encoded uint256 in bytes.\n     */\n    function writeUint(uint256 _in) internal pure returns (bytes memory) {\n        return writeBytes(_toBinary(_in));\n    }\n\n    /**\n     * RLP encodes a bool.\n     * @param _in The bool to encode.\n     * @return The RLP encoded bool in bytes.\n     */\n    function writeBool(bool _in) internal pure returns (bytes memory) {\n        bytes memory encoded = new bytes(1);\n        encoded[0] = (_in ? bytes1(0x01) : bytes1(0x80));\n        return encoded;\n    }\n\n    /*********************\n     * Private Functions *\n     *********************/\n\n    /**\n     * Encode the first byte, followed by the `len` in binary form if `length` is more than 55.\n     * @param _len The length of the string or the payload.\n     * @param _offset 128 if item is string, 192 if item is list.\n     * @return RLP encoded bytes.\n     */\n    function _writeLength(uint256 _len, uint256 _offset) private pure returns (bytes memory) {\n        bytes memory encoded;\n\n        if (_len < 56) {\n            encoded = new bytes(1);\n            encoded[0] = bytes1(uint8(_len) + uint8(_offset));\n        } else {\n            uint256 lenLen;\n            uint256 i = 1;\n            while (_len / i != 0) {\n                lenLen++;\n                i *= 256;\n            }\n\n            encoded = new bytes(lenLen + 1);\n            encoded[0] = bytes1(uint8(lenLen) + uint8(_offset) + 55);\n            for (i = 1; i <= lenLen; i++) {\n                encoded[i] = bytes1(uint8((_len / (256**(lenLen - i))) % 256));\n            }\n        }\n\n        return encoded;\n    }\n\n    /**\n     * Encode integer in big endian binary form with no leading zeroes.\n     * @notice TODO: This should be optimized with assembly to save gas costs.\n     * @param _x The integer to encode.\n     * @return RLP encoded bytes.\n     */\n    function _toBinary(uint256 _x) private pure returns (bytes memory) {\n        bytes memory b = abi.encodePacked(_x);\n\n        uint256 i = 0;\n        for (; i < 32; i++) {\n            if (b[i] != 0) {\n                break;\n            }\n        }\n\n        bytes memory res = new bytes(32 - i);\n        for (uint256 j = 0; j < res.length; j++) {\n            res[j] = b[i++];\n        }\n\n        return res;\n    }\n\n    /**\n     * Copies a piece of memory to another location.\n     * @notice From: https://github.com/Arachnid/solidity-stringutils/blob/master/src/strings.sol.\n     * @param _dest Destination location.\n     * @param _src Source location.\n     * @param _len Length of memory to copy.\n     */\n    function _memcpy(\n        uint256 _dest,\n        uint256 _src,\n        uint256 _len\n    ) private pure {\n        uint256 dest = _dest;\n        uint256 src = _src;\n        uint256 len = _len;\n\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        uint256 mask;\n        unchecked {\n            mask = 256**(32 - len) - 1;\n        }\n        assembly {\n            let srcpart := and(mload(src), not(mask))\n            let destpart := and(mload(dest), mask)\n            mstore(dest, or(destpart, srcpart))\n        }\n    }\n\n    /**\n     * Flattens a list of byte strings into one byte string.\n     * @notice From: https://github.com/sammayo/solidity-rlp-encoder/blob/master/RLPEncode.sol.\n     * @param _list List of byte strings to flatten.\n     * @return The flattened byte string.\n     */\n    function _flatten(bytes[] memory _list) private pure returns (bytes memory) {\n        if (_list.length == 0) {\n            return new bytes(0);\n        }\n\n        uint256 len;\n        uint256 i = 0;\n        for (; i < _list.length; i++) {\n            len += _list[i].length;\n        }\n\n        bytes memory flattened = new bytes(len);\n        uint256 flattenedPtr;\n        assembly {\n            flattenedPtr := add(flattened, 0x20)\n        }\n\n        for (i = 0; i < _list.length; i++) {\n            bytes memory item = _list[i];\n\n            uint256 listPtr;\n            assembly {\n                listPtr := add(item, 0x20)\n            }\n\n            _memcpy(flattenedPtr, listPtr, item.length);\n            flattenedPtr += _list[i].length;\n        }\n\n        return flattened;\n    }\n}\n"},"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title Lib_Buffer\n * @dev This library implements a bytes32 storage array with some additional gas-optimized\n * functionality. In particular, it encodes its length as a uint40, and tightly packs this with an\n * overwritable \"extra data\" field so we can store more information with a single SSTORE.\n */\nlibrary Lib_Buffer {\n    /*************\n     * Libraries *\n     *************/\n\n    using Lib_Buffer for Buffer;\n\n    /***********\n     * Structs *\n     ***********/\n\n    struct Buffer {\n        bytes32 context;\n        mapping(uint256 => bytes32) buf;\n    }\n\n    struct BufferContext {\n        // Stores the length of the array. Uint40 is way more elements than we'll ever reasonably\n        // need in an array and we get an extra 27 bytes of extra data to play with.\n        uint40 length;\n        // Arbitrary extra data that can be modified whenever the length is updated. Useful for\n        // squeezing out some gas optimizations.\n        bytes27 extraData;\n    }\n\n    /**********************\n     * Internal Functions *\n     **********************/\n\n    /**\n     * Pushes a single element to the buffer.\n     * @param _self Buffer to access.\n     * @param _value Value to push to the buffer.\n     * @param _extraData Global extra data.\n     */\n    function push(\n        Buffer storage _self,\n        bytes32 _value,\n        bytes27 _extraData\n    ) internal {\n        BufferContext memory ctx = _self.getContext();\n\n        _self.buf[ctx.length] = _value;\n\n        // Bump the global index and insert our extra data, then save the context.\n        ctx.length++;\n        ctx.extraData = _extraData;\n        _self.setContext(ctx);\n    }\n\n    /**\n     * Pushes a single element to the buffer.\n     * @param _self Buffer to access.\n     * @param _value Value to push to the buffer.\n     */\n    function push(Buffer storage _self, bytes32 _value) internal {\n        BufferContext memory ctx = _self.getContext();\n\n        _self.push(_value, ctx.extraData);\n    }\n\n    /**\n     * Retrieves an element from the buffer.\n     * @param _self Buffer to access.\n     * @param _index Element index to retrieve.\n     * @return Value of the element at the given index.\n     */\n    function get(Buffer storage _self, uint256 _index) internal view returns (bytes32) {\n        BufferContext memory ctx = _self.getContext();\n\n        require(_index < ctx.length, \"Index out of bounds.\");\n\n        return _self.buf[_index];\n    }\n\n    /**\n     * Deletes all elements after (and including) a given index.\n     * @param _self Buffer to access.\n     * @param _index Index of the element to delete from (inclusive).\n     * @param _extraData Optional global extra data.\n     */\n    function deleteElementsAfterInclusive(\n        Buffer storage _self,\n        uint40 _index,\n        bytes27 _extraData\n    ) internal {\n        BufferContext memory ctx = _self.getContext();\n\n        require(_index < ctx.length, \"Index out of bounds.\");\n\n        // Set our length and extra data, save the context.\n        ctx.length = _index;\n        ctx.extraData = _extraData;\n        _self.setContext(ctx);\n    }\n\n    /**\n     * Deletes all elements after (and including) a given index.\n     * @param _self Buffer to access.\n     * @param _index Index of the element to delete from (inclusive).\n     */\n    function deleteElementsAfterInclusive(Buffer storage _self, uint40 _index) internal {\n        BufferContext memory ctx = _self.getContext();\n        _self.deleteElementsAfterInclusive(_index, ctx.extraData);\n    }\n\n    /**\n     * Retrieves the current global index.\n     * @param _self Buffer to access.\n     * @return Current global index.\n     */\n    function getLength(Buffer storage _self) internal view returns (uint40) {\n        BufferContext memory ctx = _self.getContext();\n        return ctx.length;\n    }\n\n    /**\n     * Changes current global extra data.\n     * @param _self Buffer to access.\n     * @param _extraData New global extra data.\n     */\n    function setExtraData(Buffer storage _self, bytes27 _extraData) internal {\n        BufferContext memory ctx = _self.getContext();\n        ctx.extraData = _extraData;\n        _self.setContext(ctx);\n    }\n\n    /**\n     * Retrieves the current global extra data.\n     * @param _self Buffer to access.\n     * @return Current global extra data.\n     */\n    function getExtraData(Buffer storage _self) internal view returns (bytes27) {\n        BufferContext memory ctx = _self.getContext();\n        return ctx.extraData;\n    }\n\n    /**\n     * Sets the current buffer context.\n     * @param _self Buffer to access.\n     * @param _ctx Current buffer context.\n     */\n    function setContext(Buffer storage _self, BufferContext memory _ctx) internal {\n        bytes32 context;\n        uint40 length = _ctx.length;\n        bytes27 extraData = _ctx.extraData;\n        assembly {\n            context := length\n            context := or(context, extraData)\n        }\n\n        if (_self.context != context) {\n            _self.context = context;\n        }\n    }\n\n    /**\n     * Retrieves the current buffer context.\n     * @param _self Buffer to access.\n     * @return Current buffer context.\n     */\n    function getContext(Buffer storage _self) internal view returns (BufferContext memory) {\n        bytes32 context = _self.context;\n        uint40 length;\n        bytes27 extraData;\n        assembly {\n            length := and(\n                context,\n                0x000000000000000000000000000000000000000000000000000000FFFFFFFFFF\n            )\n            extraData := and(\n                context,\n                0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000\n            )\n        }\n\n        return BufferContext({ length: length, extraData: extraData });\n    }\n}\n"},"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title Lib_Byte32Utils\n */\nlibrary Lib_Bytes32Utils {\n    /**********************\n     * Internal Functions *\n     **********************/\n\n    /**\n     * Converts a bytes32 value to a boolean. Anything non-zero will be converted to \"true.\"\n     * @param _in Input bytes32 value.\n     * @return Bytes32 as a boolean.\n     */\n    function toBool(bytes32 _in) internal pure returns (bool) {\n        return _in != 0;\n    }\n\n    /**\n     * Converts a boolean to a bytes32 value.\n     * @param _in Input boolean value.\n     * @return Boolean as a bytes32.\n     */\n    function fromBool(bool _in) internal pure returns (bytes32) {\n        return bytes32(uint256(_in ? 1 : 0));\n    }\n\n    /**\n     * Converts a bytes32 value to an address. Takes the *last* 20 bytes.\n     * @param _in Input bytes32 value.\n     * @return Bytes32 as an address.\n     */\n    function toAddress(bytes32 _in) internal pure returns (address) {\n        return address(uint160(uint256(_in)));\n    }\n\n    /**\n     * Converts an address to a bytes32.\n     * @param _in Input address value.\n     * @return Address as a bytes32.\n     */\n    function fromAddress(address _in) internal pure returns (bytes32) {\n        return bytes32(uint256(uint160(_in)));\n    }\n}\n"},"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/**\n * @title Lib_BytesUtils\n */\nlibrary Lib_BytesUtils {\n    /**********************\n     * Internal Functions *\n     **********************/\n\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, \"slice_overflow\");\n        require(_start + _length >= _start, \"slice_overflow\");\n        require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n            case 0 {\n                // Get a location of some free memory and store it in tempBytes as\n                // Solidity does for memory variables.\n                tempBytes := mload(0x40)\n\n                // The first word of the slice result is potentially a partial\n                // word read from the original array. To read it, we calculate\n                // the length of that partial word and start copying that many\n                // bytes into the array. The first word we copy will start with\n                // data we don't care about, but the last `lengthmod` bytes will\n                // land at the beginning of the contents of the new array. When\n                // we're done copying, we overwrite the full first word with\n                // the actual length of the slice.\n                let lengthmod := and(_length, 31)\n\n                // The multiplication in the next line is necessary\n                // because when slicing multiples of 32 bytes (lengthmod == 0)\n                // the following copy loop was copying the origin's length\n                // and then ending prematurely not copying everything it should.\n                let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                let end := add(mc, _length)\n\n                for {\n                    // The multiplication in the next line has the same exact purpose\n                    // as the one above.\n                    let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                } lt(mc, end) {\n                    mc := add(mc, 0x20)\n                    cc := add(cc, 0x20)\n                } {\n                    mstore(mc, mload(cc))\n                }\n\n                mstore(tempBytes, _length)\n\n                //update free-memory pointer\n                //allocating the array padded to 32 bytes like the compiler does now\n                mstore(0x40, and(add(mc, 31), not(31)))\n            }\n            //if we want a zero-length slice let's just return a zero-length array\n            default {\n                tempBytes := mload(0x40)\n\n                //zero out the 32 bytes slice we are about to return\n                //we need to do it because Solidity does not garbage collect\n                mstore(tempBytes, 0)\n\n                mstore(0x40, add(tempBytes, 0x20))\n            }\n        }\n\n        return tempBytes;\n    }\n\n    function slice(bytes memory _bytes, uint256 _start) internal pure returns (bytes memory) {\n        if (_start >= _bytes.length) {\n            return bytes(\"\");\n        }\n\n        return slice(_bytes, _start, _bytes.length - _start);\n    }\n\n    function toBytes32(bytes memory _bytes) internal pure returns (bytes32) {\n        if (_bytes.length < 32) {\n            bytes32 ret;\n            assembly {\n                ret := mload(add(_bytes, 32))\n            }\n            return ret;\n        }\n\n        return abi.decode(_bytes, (bytes32)); // will truncate if input length > 32 bytes\n    }\n\n    function toUint256(bytes memory _bytes) internal pure returns (uint256) {\n        return uint256(toBytes32(_bytes));\n    }\n\n    function toNibbles(bytes memory _bytes) internal pure returns (bytes memory) {\n        bytes memory nibbles = new bytes(_bytes.length * 2);\n\n        for (uint256 i = 0; i < _bytes.length; i++) {\n            nibbles[i * 2] = _bytes[i] >> 4;\n            nibbles[i * 2 + 1] = bytes1(uint8(_bytes[i]) % 16);\n        }\n\n        return nibbles;\n    }\n\n    function fromNibbles(bytes memory _bytes) internal pure returns (bytes memory) {\n        bytes memory ret = new bytes(_bytes.length / 2);\n\n        for (uint256 i = 0; i < ret.length; i++) {\n            ret[i] = (_bytes[i * 2] << 4) | (_bytes[i * 2 + 1]);\n        }\n\n        return ret;\n    }\n\n    function equal(bytes memory _bytes, bytes memory _other) internal pure returns (bool) {\n        return keccak256(_bytes) == keccak256(_other);\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"contracts/HelperChainStorageContainer.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\n/* Library Imports */\nimport { Lib_Buffer } from \"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol\";\nimport { Lib_AddressResolver } from \"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol\";\nimport { Lib_OVMCodec } from \"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol\";\n\n/* Interface Imports */\nimport { IChainStorageContainer } from \"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol\";\n\ncontract HelperChainStorageContainer is IChainStorageContainer, Lib_AddressResolver {\n    /*************\n     * Libraries *\n     *************/\n\n    using Lib_Buffer for Lib_Buffer.Buffer;\n\n    /*************\n     * Variables *\n     *************/\n\n    string public owner;\n    Lib_Buffer.Buffer internal buffer;\n\n    bytes32 savedHash;\n\n    /***************\n     * Constructor *\n     ***************/\n\n    /**\n     * @param _libAddressManager Address of the Address Manager.\n     * @param _owner Name of the contract that owns this container (will be resolved later).\n     */\n    constructor(address _libAddressManager, string memory _owner)\n        Lib_AddressResolver(_libAddressManager)\n    {\n        owner = _owner;\n    }\n\n    /**********************\n     * Function Modifiers *\n     **********************/\n\n    modifier onlyOwner() {\n        require(\n            msg.sender == resolve(owner),\n            \"ChainStorageContainer: Function can only be called by the owner.\"\n        );\n        _;\n    }\n\n    /********************\n     * Public Functions *\n     ********************/\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function setGlobalMetadata(bytes27 _globalMetadata) public onlyOwner {\n        return buffer.setExtraData(_globalMetadata);\n    }\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function getGlobalMetadata() public view returns (bytes27) {\n        return buffer.getExtraData();\n    }\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function length() public view returns (uint256) {\n        return uint256(buffer.getLength());\n    }\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function push(bytes32 _object) public onlyOwner {\n        buffer.push(_object);\n    }\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function push(bytes32 _object, bytes27 _globalMetadata) public onlyOwner {\n        buffer.push(_object, _globalMetadata);\n    }\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function get(uint256 _index) public view returns (bytes32) {\n        return savedHash;\n    }\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function deleteElementsAfterInclusive(uint256 _index) public onlyOwner {\n        buffer.deleteElementsAfterInclusive(uint40(_index));\n    }\n\n    /**\n     * @inheritdoc IChainStorageContainer\n     */\n    // slither-disable-next-line external-function\n    function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)\n        public\n        onlyOwner\n    {\n        buffer.deleteElementsAfterInclusive(uint40(_index), _globalMetadata);\n    }\n\n    function setSavedHash(Lib_OVMCodec.ChainBatchHeader memory _batchHeader) public {\n        savedHash = Lib_OVMCodec.hashBatchHeader(_batchHeader);\n    }\n}\n"},"contracts/messaging/connectors/Connector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {ProposedOwnable} from \"../../shared/ProposedOwnable.sol\";\nimport {IConnector} from \"../interfaces/IConnector.sol\";\n\n/**\n * @title Connector\n * @author Connext Labs, Inc.\n * @notice This contract has the messaging interface functions used by all connectors.\n *\n * @dev This contract stores information about mirror connectors, but can be used as a\n * base for contracts that do not have a mirror (i.e. the connector handling messaging on\n * mainnet). In this case, the `mirrorConnector` and `MIRROR_DOMAIN`\n * will be empty\n *\n * @dev If ownership is renounced, this contract will be unable to update its `mirrorConnector`\n * or `mirrorGas`\n */\nabstract contract Connector is ProposedOwnable, IConnector {\n  // ========== Custom Errors ===========\n\n  error Connector__processMessage_notUsed();\n\n  // ============ Events ============\n\n  event NewConnector(\n    uint32 indexed domain,\n    uint32 indexed mirrorDomain,\n    address amb,\n    address rootManager,\n    address mirrorConnector\n  );\n\n  event MirrorConnectorUpdated(address previous, address current);\n\n  // ============ Public Storage ============\n\n  /**\n   * @notice The domain of this Messaging (i.e. Connector) contract.\n   */\n  uint32 public immutable DOMAIN;\n\n  /**\n   * @notice Address of the AMB on this domain.\n   */\n  address public immutable AMB;\n\n  /**\n   * @notice RootManager contract address.\n   */\n  address public immutable ROOT_MANAGER;\n\n  /**\n   * @notice The domain of the corresponding messaging (i.e. Connector) contract.\n   */\n  uint32 public immutable MIRROR_DOMAIN;\n\n  /**\n   * @notice Connector on L2 for L1 connectors, and vice versa.\n   */\n  address public mirrorConnector;\n\n  // ============ Modifiers ============\n\n  /**\n   * @notice Errors if the msg.sender is not the registered AMB\n   */\n  modifier onlyAMB() {\n    require(msg.sender == AMB, \"!AMB\");\n    _;\n  }\n\n  /**\n   * @notice Errors if the msg.sender is not the registered ROOT_MANAGER\n   */\n  modifier onlyRootManager() {\n    // NOTE: RootManager will be zero address for spoke connectors.\n    // Only root manager can dispatch a message to spokes/L2s via the hub connector.\n    require(msg.sender == ROOT_MANAGER, \"!rootManager\");\n    _;\n  }\n\n  // ============ Constructor ============\n\n  /**\n   * @notice Creates a new HubConnector instance\n   * @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n   * for optimism, there is one connector on optimism and one connector on mainnet)\n   * @param _domain The domain this connector lives on\n   * @param _mirrorDomain The spoke domain\n   * @param _amb The address of the amb on the domain this connector lives on\n   * @param _rootManager The address of the RootManager on mainnet\n   * @param _mirrorConnector The address of the spoke connector\n   */\n  constructor(\n    uint32 _domain,\n    uint32 _mirrorDomain,\n    address _amb,\n    address _rootManager,\n    address _mirrorConnector\n  ) ProposedOwnable() {\n    // set the owner\n    _setOwner(msg.sender);\n\n    // sanity checks on values\n    require(_domain != 0, \"empty domain\");\n    require(_rootManager != address(0), \"empty rootManager\");\n    // see note at top of contract on why the mirror values are not sanity checked\n\n    // set immutables\n    DOMAIN = _domain;\n    AMB = _amb;\n    ROOT_MANAGER = _rootManager;\n    MIRROR_DOMAIN = _mirrorDomain;\n    // set mutables if defined\n    if (_mirrorConnector != address(0)) {\n      _setMirrorConnector(_mirrorConnector);\n    }\n\n    emit NewConnector(_domain, _mirrorDomain, _amb, _rootManager, _mirrorConnector);\n  }\n\n  // ============ Receivable ============\n  /**\n   * @notice Connectors may need to receive native asset to handle fees when sending a\n   * message\n   */\n  receive() external payable {}\n\n  // ============ Admin Functions ============\n\n  /**\n   * @notice Sets the address of the l2Connector for this domain\n   */\n  function setMirrorConnector(address _mirrorConnector) public onlyOwner {\n    _setMirrorConnector(_mirrorConnector);\n  }\n\n  // ============ Public Functions ============\n\n  /**\n   * @notice Processes a message received by an AMB\n   * @dev This is called by AMBs to process messages originating from mirror connector\n   */\n  function processMessage(bytes memory _data) external virtual onlyAMB {\n    _processMessage(_data);\n    emit MessageProcessed(_data, msg.sender);\n  }\n\n  /**\n   * @notice Checks the cross domain sender for a given address\n   */\n  function verifySender(address _expected) external returns (bool) {\n    return _verifySender(_expected);\n  }\n\n  // ============ Virtual Functions ============\n\n  /**\n   * @notice This function is used by the Connext contract on the l2 domain to send a message to the\n   * l1 domain (i.e. called by Connext on optimism to send a message to mainnet with roots)\n   * @param _data The contents of the message\n   * @param _encodedData Data used to send the message; specific to connector\n   */\n  function _sendMessage(bytes memory _data, bytes memory _encodedData) internal virtual;\n\n  /**\n   * @notice This function is used by the AMBs to handle incoming messages. Should store the latest\n   * root generated on the l2 domain.\n   */\n  function _processMessage(\n    bytes memory /* _data */\n  ) internal virtual {\n    // By default, reverts. This is to ensure the call path is not used unless this function is\n    // overridden by the inheriting class\n    revert Connector__processMessage_notUsed();\n  }\n\n  /**\n   * @notice Verify that the msg.sender is the correct AMB contract, and that the message's origin sender\n   * is the expected address.\n   * @dev Should be overridden by the implementing Connector contract.\n   */\n  function _verifySender(address _expected) internal virtual returns (bool);\n\n  // ============ Private Functions ============\n\n  function _setMirrorConnector(address _mirrorConnector) internal virtual {\n    emit MirrorConnectorUpdated(mirrorConnector, _mirrorConnector);\n    mirrorConnector = _mirrorConnector;\n  }\n}\n"},"contracts/messaging/connectors/GasCap.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {ProposedOwnable} from \"../../shared/ProposedOwnable.sol\";\n\nabstract contract GasCap is ProposedOwnable {\n  // ============ Storage ============\n  /**\n   * @notice The gnosis amb requires destination gas to be specified on the origin.\n   * The gas used will be passed in by the relayer to allow for real-time estimates,\n   * but will be capped at the admin-set cap.\n   */\n  uint256 gasCap;\n\n  // ============ Events ============\n\n  /**\n   * @notice Emitted when admin updates the gas cap\n   * @param _previous The starting value\n   * @param _updated The final value\n   */\n  event GasCapUpdated(uint256 _previous, uint256 _updated);\n\n  // ============ Constructor ============\n  constructor(uint256 _gasCap) {\n    _setGasCap(_gasCap);\n  }\n\n  // ============ Admin Fns ============\n  function setGasCap(uint256 _gasCap) public onlyOwner {\n    _setGasCap(_gasCap);\n  }\n\n  // ============ Internal Fns ============\n\n  /**\n   * @notice Used (by admin) to update the gas cap\n   * @param _gasCap The new value\n   */\n  function _setGasCap(uint256 _gasCap) internal {\n    emit GasCapUpdated(gasCap, _gasCap);\n    gasCap = _gasCap;\n  }\n\n  /**\n   * @notice Used to get the gas to use. Will be the original value IFF it\n   * is less than the cap\n   * @param _gas The proposed gas value\n   */\n  function _getGas(uint256 _gas) internal view returns (uint256) {\n    if (_gas > gasCap) {\n      _gas = gasCap;\n    }\n    return _gas;\n  }\n}\n"},"contracts/messaging/connectors/HubConnector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {Connector} from \"./Connector.sol\";\n\n/**\n * @title HubConnector\n * @author Connext Labs, Inc.\n * @notice This contract implements the messaging functions needed on the hub-side of a given AMB.\n * The HubConnector has a limited set of functionality compared to the SpokeConnector, namely that\n * it contains no logic to store or prove messages.\n *\n * @dev This contract should be deployed on the hub-side of an AMB (i.e. on L1), and contracts\n * which extend this should implement the virtual functions defined in the BaseConnector class\n */\nabstract contract HubConnector is Connector {\n  /**\n   * @notice Creates a new HubConnector instance\n   * @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n   * for optimism, there is one connector on optimism and one connector on mainnet)\n   * @param _domain The domain this connector lives on\n   * @param _mirrorDomain The spoke domain\n   * @param _amb The address of the amb on the domain this connector lives on\n   * @param _rootManager The address of the RootManager on mainnet\n   * @param _mirrorConnector The address of the spoke connector\n   */\n  constructor(\n    uint32 _domain,\n    uint32 _mirrorDomain,\n    address _amb,\n    address _rootManager,\n    address _mirrorConnector\n  ) Connector(_domain, _mirrorDomain, _amb, _rootManager, _mirrorConnector) {}\n\n  // ============ Public fns ============\n  /**\n   * @notice Sends a message over the amb\n   * @dev This is called by the root manager *only* on mainnet to propagate the aggregate root\n   */\n  function sendMessage(bytes memory _data, bytes memory _encodedData) external payable onlyRootManager {\n    _sendMessage(_data, _encodedData);\n    emit MessageSent(_data, _encodedData, msg.sender);\n  }\n}\n"},"contracts/messaging/connectors/optimism/BaseOptimism.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {OptimismAmb} from \"../../interfaces/ambs/optimism/OptimismAmb.sol\";\n\nimport {GasCap} from \"../GasCap.sol\";\n\nabstract contract BaseOptimism is GasCap {\n  // ============ Constructor ============\n  constructor(uint256 _gasCap) GasCap(_gasCap) {}\n\n  // ============ Override Fns ============\n  function _verifySender(address _amb, address _expected) internal view returns (bool) {\n    require(msg.sender == _amb, \"!bridge\");\n    return OptimismAmb(_amb).xDomainMessageSender() == _expected;\n  }\n\n  /**\n   * @notice Using Optimism AMB, the gas is provided to `sendMessage` as an encoded uint\n   */\n  function _getGasFromEncoded(bytes memory _encodedData) internal view returns (uint256 _gas) {\n    // Should include gas info in specialized calldata\n    require(_encodedData.length == 32, \"!data length\");\n\n    // Get the gas, if it is more than the cap use the cap\n    _gas = _getGas(abi.decode(_encodedData, (uint256)));\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/BytesUtils.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @title BytesUtils\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/utils/Lib_BytesUtils.sol\n */\nlibrary BytesUtils {\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  function slice(\n    bytes memory _bytes,\n    uint256 _start,\n    uint256 _length\n  ) internal pure returns (bytes memory) {\n    require(_length + 31 >= _length, \"slice_overflow\");\n    require(_start + _length >= _start, \"slice_overflow\");\n    require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n    bytes memory tempBytes;\n\n    assembly {\n      switch iszero(_length)\n      case 0 {\n        // Get a location of some free memory and store it in tempBytes as\n        // Solidity does for memory variables.\n        tempBytes := mload(0x40)\n\n        // The first word of the slice result is potentially a partial\n        // word read from the original array. To read it, we calculate\n        // the length of that partial word and start copying that many\n        // bytes into the array. The first word we copy will start with\n        // data we don't care about, but the last `lengthmod` bytes will\n        // land at the beginning of the contents of the new array. When\n        // we're done copying, we overwrite the full first word with\n        // the actual length of the slice.\n        let lengthmod := and(_length, 31)\n\n        // The multiplication in the next line is necessary\n        // because when slicing multiples of 32 bytes (lengthmod == 0)\n        // the following copy loop was copying the origin's length\n        // and then ending prematurely not copying everything it should.\n        let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n        let end := add(mc, _length)\n\n        for {\n          // The multiplication in the next line has the same exact purpose\n          // as the one above.\n          let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n        } lt(mc, end) {\n          mc := add(mc, 0x20)\n          cc := add(cc, 0x20)\n        } {\n          mstore(mc, mload(cc))\n        }\n\n        mstore(tempBytes, _length)\n\n        //update free-memory pointer\n        //allocating the array padded to 32 bytes like the compiler does now\n        mstore(0x40, and(add(mc, 31), not(31)))\n      }\n      //if we want a zero-length slice let's just return a zero-length array\n      default {\n        tempBytes := mload(0x40)\n\n        //zero out the 32 bytes slice we are about to return\n        //we need to do it because Solidity does not garbage collect\n        mstore(tempBytes, 0)\n\n        mstore(0x40, add(tempBytes, 0x20))\n      }\n    }\n\n    return tempBytes;\n  }\n\n  function slice(bytes memory _bytes, uint256 _start) internal pure returns (bytes memory) {\n    if (_start >= _bytes.length) {\n      return bytes(\"\");\n    }\n\n    return slice(_bytes, _start, _bytes.length - _start);\n  }\n\n  function toBytes32(bytes memory _bytes) internal pure returns (bytes32) {\n    if (_bytes.length < 32) {\n      bytes32 ret;\n      assembly {\n        ret := mload(add(_bytes, 32))\n      }\n      return ret;\n    }\n\n    return abi.decode(_bytes, (bytes32)); // will truncate if input length > 32 bytes\n  }\n\n  function toUint256(bytes memory _bytes) internal pure returns (uint256) {\n    return uint256(toBytes32(_bytes));\n  }\n\n  function toNibbles(bytes memory _bytes) internal pure returns (bytes memory) {\n    bytes memory nibbles = new bytes(_bytes.length * 2);\n\n    uint256 len = _bytes.length;\n    for (uint256 i = 0; i < len; ) {\n      nibbles[i * 2] = _bytes[i] >> 4;\n      nibbles[i * 2 + 1] = bytes1(uint8(_bytes[i]) % 16);\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    return nibbles;\n  }\n\n  function fromNibbles(bytes memory _bytes) internal pure returns (bytes memory) {\n    bytes memory ret = new bytes(_bytes.length / 2);\n\n    uint256 len = ret.length;\n    for (uint256 i = 0; i < len; ) {\n      ret[i] = (_bytes[i * 2] << 4) | (_bytes[i * 2 + 1]);\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    return ret;\n  }\n\n  function equal(bytes memory _bytes, bytes memory _other) internal pure returns (bool) {\n    return keccak256(_bytes) == keccak256(_other);\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/* Library Imports */\nimport {BytesUtils} from \"./BytesUtils.sol\";\nimport {RLPReader} from \"./RLPReader.sol\";\n\n/**\n * @title MerkleTrie\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_MerkleTrie.sol\n */\nlibrary MerkleTrie {\n  /*******************\n   * Data Structures *\n   *******************/\n\n  enum NodeType {\n    BranchNode,\n    ExtensionNode,\n    LeafNode\n  }\n\n  struct TrieNode {\n    bytes encoded;\n    RLPReader.RLPItem[] decoded;\n  }\n\n  /**********************\n   * Contract Constants *\n   **********************/\n\n  // TREE_RADIX determines the number of elements per branch node.\n  uint256 constant TREE_RADIX = 16;\n  // Branch nodes have TREE_RADIX elements plus an additional `value` slot.\n  uint256 constant BRANCH_NODE_LENGTH = TREE_RADIX + 1;\n  // Leaf nodes and extension nodes always have two elements, a `path` and a `value`.\n  uint256 constant LEAF_OR_EXTENSION_NODE_LENGTH = 2;\n\n  // Prefixes are prepended to the `path` within a leaf or extension node and\n  // allow us to differentiate between the two node types. `ODD` or `EVEN` is\n  // determined by the number of nibbles within the unprefixed `path`. If the\n  // number of nibbles if even, we need to insert an extra padding nibble so\n  // the resulting prefixed `path` has an even number of nibbles.\n  uint8 constant PREFIX_EXTENSION_EVEN = 0;\n  uint8 constant PREFIX_EXTENSION_ODD = 1;\n  uint8 constant PREFIX_LEAF_EVEN = 2;\n  uint8 constant PREFIX_LEAF_ODD = 3;\n\n  // Just a utility constant. RLP represents `NULL` as 0x80.\n  bytes1 constant RLP_NULL = bytes1(0x80);\n\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  /**\n   * @notice Verifies a proof that a given key/value pair is present in the\n   * Merkle trie.\n   * @param _key Key of the node to search for, as a hex string.\n   * @param _value Value of the node to search for, as a hex string.\n   * @param _proof Merkle trie inclusion proof for the desired node. Unlike\n   * traditional Merkle trees, this proof is executed top-down and consists\n   * of a list of RLP-encoded nodes that make a path down to the target node.\n   * @param _root Known root of the Merkle trie. Used to verify that the\n   * included proof is correctly constructed.\n   * @return _verified `true` if the k/v pair exists in the trie, `false` otherwise.\n   */\n  function verifyInclusionProof(\n    bytes memory _key,\n    bytes memory _value,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _verified) {\n    (bool exists, bytes memory value) = get(_key, _proof, _root);\n\n    return (exists && BytesUtils.equal(_value, value));\n  }\n\n  /**\n   * @notice Retrieves the value associated with a given key.\n   * @param _key Key to search for, as hex bytes.\n   * @param _proof Merkle trie inclusion proof for the key.\n   * @param _root Known root of the Merkle trie.\n   * @return _exists Whether or not the key exists.\n   * @return _value Value of the key if it exists.\n   */\n  function get(\n    bytes memory _key,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _exists, bytes memory _value) {\n    TrieNode[] memory proof = _parseProof(_proof);\n    (uint256 pathLength, bytes memory keyRemainder, bool isFinalNode) = _walkNodePath(proof, _key, _root);\n\n    bool exists = keyRemainder.length == 0;\n\n    require(exists || isFinalNode, \"Provided proof is invalid.\");\n\n    bytes memory value = exists ? _getNodeValue(proof[pathLength - 1]) : bytes(\"\");\n\n    return (exists, value);\n  }\n\n  /*********************\n   * Private Functions *\n   *********************/\n\n  /**\n   * @notice Walks through a proof using a provided key.\n   * @param _proof Inclusion proof to walk through.\n   * @param _key Key to use for the walk.\n   * @param _root Known root of the trie.\n   * @return _pathLength Length of the final path\n   * @return _keyRemainder Portion of the key remaining after the walk.\n   * @return _isFinalNode Whether or not we've hit a dead end.\n   */\n  function _walkNodePath(\n    TrieNode[] memory _proof,\n    bytes memory _key,\n    bytes32 _root\n  )\n    private\n    pure\n    returns (\n      uint256 _pathLength,\n      bytes memory _keyRemainder,\n      bool _isFinalNode\n    )\n  {\n    uint256 pathLength = 0;\n    bytes memory key = BytesUtils.toNibbles(_key);\n\n    bytes32 currentNodeID = _root;\n    uint256 currentKeyIndex = 0;\n    uint256 currentKeyIncrement = 0;\n    TrieNode memory currentNode;\n\n    // Proof is top-down, so we start at the first element (root).\n    uint256 len = _proof.length;\n    for (uint256 i = 0; i < len; ) {\n      currentNode = _proof[i];\n      currentKeyIndex += currentKeyIncrement;\n\n      // Keep track of the proof elements we actually need.\n      // It's expensive to resize arrays, so this simply reduces gas costs.\n      pathLength += 1;\n\n      if (currentKeyIndex == 0) {\n        // First proof element is always the root node.\n        require(keccak256(currentNode.encoded) == currentNodeID, \"Invalid root hash\");\n      } else if (currentNode.encoded.length > 32 - 1) {\n        // Nodes 32 bytes or larger are hashed inside branch nodes.\n        require(keccak256(currentNode.encoded) == currentNodeID, \"Invalid large internal hash\");\n      } else {\n        // Nodes smaller than 31 bytes aren't hashed.\n        require(BytesUtils.toBytes32(currentNode.encoded) == currentNodeID, \"Invalid internal node hash\");\n      }\n\n      // unreachable code if it's below the if statement under this\n      unchecked {\n        ++i;\n      }\n\n      if (currentNode.decoded.length == BRANCH_NODE_LENGTH) {\n        if (currentKeyIndex == key.length) {\n          // We've hit the end of the key\n          // meaning the value should be within this branch node.\n          break;\n        } else {\n          // We're not at the end of the key yet.\n          // Figure out what the next node ID should be and continue.\n          uint8 branchKey = uint8(key[currentKeyIndex]);\n          RLPReader.RLPItem memory nextNode = currentNode.decoded[branchKey];\n          currentNodeID = _getNodeID(nextNode);\n          currentKeyIncrement = 1;\n          continue;\n        }\n      } else if (currentNode.decoded.length == LEAF_OR_EXTENSION_NODE_LENGTH) {\n        bytes memory path = _getNodePath(currentNode);\n        uint8 prefix = uint8(path[0]);\n        uint8 offset = 2 - (prefix % 2);\n        bytes memory pathRemainder = BytesUtils.slice(path, offset);\n        bytes memory keyRemainder = BytesUtils.slice(key, currentKeyIndex);\n        uint256 sharedNibbleLength = _getSharedNibbleLength(pathRemainder, keyRemainder);\n\n        if (prefix == PREFIX_LEAF_EVEN || prefix == PREFIX_LEAF_ODD) {\n          if (pathRemainder.length == sharedNibbleLength && keyRemainder.length == sharedNibbleLength) {\n            // The key within this leaf matches our key exactly.\n            // Increment the key index to reflect that we have no remainder.\n            currentKeyIndex += sharedNibbleLength;\n          }\n\n          // We've hit a leaf node, so our next node should be NULL.\n          currentNodeID = bytes32(RLP_NULL);\n          break;\n        } else if (prefix == PREFIX_EXTENSION_EVEN || prefix == PREFIX_EXTENSION_ODD) {\n          if (sharedNibbleLength != pathRemainder.length) {\n            // Our extension node is not identical to the remainder.\n            // We've hit the end of this path\n            // updates will need to modify this extension.\n            currentNodeID = bytes32(RLP_NULL);\n            break;\n          } else {\n            // Our extension shares some nibbles.\n            // Carry on to the next node.\n            currentNodeID = _getNodeID(currentNode.decoded[1]);\n            currentKeyIncrement = sharedNibbleLength;\n            continue;\n          }\n        } else {\n          revert(\"Received a node with an unknown prefix\");\n        }\n      } else {\n        revert(\"Received an unparseable node.\");\n      }\n    }\n\n    // If our node ID is NULL, then we're at a dead end.\n    bool isFinalNode = currentNodeID == bytes32(RLP_NULL);\n    return (pathLength, BytesUtils.slice(key, currentKeyIndex), isFinalNode);\n  }\n\n  /**\n   * @notice Parses an RLP-encoded proof into something more useful.\n   * @param _proof RLP-encoded proof to parse.\n   * @return _parsed Proof parsed into easily accessible structs.\n   */\n  function _parseProof(bytes memory _proof) private pure returns (TrieNode[] memory _parsed) {\n    RLPReader.RLPItem[] memory nodes = RLPReader.readList(_proof);\n    TrieNode[] memory proof = new TrieNode[](nodes.length);\n\n    uint256 len = nodes.length;\n    for (uint256 i = 0; i < len; ) {\n      bytes memory encoded = RLPReader.readBytes(nodes[i]);\n      proof[i] = TrieNode({encoded: encoded, decoded: RLPReader.readList(encoded)});\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    return proof;\n  }\n\n  /**\n   * @notice Picks out the ID for a node. Node ID is referred to as the\n   * \"hash\" within the specification, but nodes < 32 bytes are not actually\n   * hashed.\n   * @param _node Node to pull an ID for.\n   * @return _nodeID ID for the node, depending on the size of its contents.\n   */\n  function _getNodeID(RLPReader.RLPItem memory _node) private pure returns (bytes32 _nodeID) {\n    bytes memory nodeID;\n\n    if (_node.length < 32) {\n      // Nodes smaller than 32 bytes are RLP encoded.\n      nodeID = RLPReader.readRawBytes(_node);\n    } else {\n      // Nodes 32 bytes or larger are hashed.\n      nodeID = RLPReader.readBytes(_node);\n    }\n\n    return BytesUtils.toBytes32(nodeID);\n  }\n\n  /**\n   * @notice Gets the path for a leaf or extension node.\n   * @param _node Node to get a path for.\n   * @return _path Node path, converted to an array of nibbles.\n   */\n  function _getNodePath(TrieNode memory _node) private pure returns (bytes memory _path) {\n    return BytesUtils.toNibbles(RLPReader.readBytes(_node.decoded[0]));\n  }\n\n  /**\n   * @notice Gets the path for a node.\n   * @param _node Node to get a value for.\n   * @return _value Node value, as hex bytes.\n   */\n  function _getNodeValue(TrieNode memory _node) private pure returns (bytes memory _value) {\n    return RLPReader.readBytes(_node.decoded[_node.decoded.length - 1]);\n  }\n\n  /**\n   * @notice Utility; determines the number of nibbles shared between two\n   * nibble arrays.\n   * @param _a First nibble array.\n   * @param _b Second nibble array.\n   * @return _shared Number of shared nibbles.\n   */\n  function _getSharedNibbleLength(bytes memory _a, bytes memory _b) private pure returns (uint256 _shared) {\n    uint256 i = 0;\n    while (_a.length > i && _b.length > i && _a[i] == _b[i]) {\n      i++;\n    }\n    return i;\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/OVMCodec.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/* Library Imports */\nimport {RLPReader} from \"./RLPReader.sol\";\n\n/**\n * @title OVMCodec\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol\n */\nlibrary OVMCodec {\n  /***********\n   * Structs *\n   ***********/\n\n  struct EVMAccount {\n    uint256 nonce;\n    uint256 balance;\n    bytes32 storageRoot;\n    bytes32 codeHash;\n  }\n\n  /**\n   * @notice Decodes an RLP-encoded account state into a useful struct.\n   * @param _encoded RLP-encoded account state.\n   * @return Account state struct.\n   */\n  function decodeEVMAccount(bytes memory _encoded) internal pure returns (EVMAccount memory) {\n    RLPReader.RLPItem[] memory accountState = RLPReader.readList(_encoded);\n\n    return\n      EVMAccount({\n        nonce: RLPReader.readUint256(accountState[0]),\n        balance: RLPReader.readUint256(accountState[1]),\n        storageRoot: RLPReader.readBytes32(accountState[2]),\n        codeHash: RLPReader.readBytes32(accountState[3])\n      });\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @title PredeployAddresses\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol\n */\nlibrary PredeployAddresses {\n  address internal constant L2_TO_L1_MESSAGE_PASSER = 0x4200000000000000000000000000000000000000;\n  address internal constant L1_MESSAGE_SENDER = 0x4200000000000000000000000000000000000001;\n  address internal constant DEPLOYER_WHITELIST = 0x4200000000000000000000000000000000000002;\n  address payable internal constant OVM_ETH = payable(0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000);\n  address internal constant L2_CROSS_DOMAIN_MESSENGER = 0x4200000000000000000000000000000000000007;\n  address internal constant LIB_ADDRESS_MANAGER = 0x4200000000000000000000000000000000000008;\n  address internal constant PROXY_EOA = 0x4200000000000000000000000000000000000009;\n  address internal constant L2_STANDARD_BRIDGE = 0x4200000000000000000000000000000000000010;\n  address internal constant SEQUENCER_FEE_WALLET = 0x4200000000000000000000000000000000000011;\n  address internal constant L2_STANDARD_TOKEN_FACTORY = 0x4200000000000000000000000000000000000012;\n  address internal constant L1_BLOCK_NUMBER = 0x4200000000000000000000000000000000000013;\n}\n"},"contracts/messaging/connectors/optimism/lib/RLPReader.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @title RLPReader\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/rlp/Lib_RLPReader.sol\n */\nlibrary RLPReader {\n  /*************\n   * Constants *\n   *************/\n\n  uint256 internal constant MAX_LIST_LENGTH = 32;\n\n  /*********\n   * Enums *\n   *********/\n\n  enum RLPItemType {\n    DATA_ITEM,\n    LIST_ITEM\n  }\n\n  /***********\n   * Structs *\n   ***********/\n\n  struct RLPItem {\n    uint256 length;\n    uint256 ptr;\n  }\n\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  /**\n   * Converts bytes to a reference to memory position and length.\n   * @param _in Input bytes to convert.\n   * @return Output memory reference.\n   */\n  function toRLPItem(bytes memory _in) internal pure returns (RLPItem memory) {\n    uint256 ptr;\n    assembly {\n      ptr := add(_in, 32)\n    }\n\n    return RLPItem({length: _in.length, ptr: ptr});\n  }\n\n  /**\n   * Reads an RLP list value into a list of RLP items.\n   * @param _in RLP list value.\n   * @return Decoded RLP list items.\n   */\n  function readList(RLPItem memory _in) internal pure returns (RLPItem[] memory) {\n    (uint256 listOffset, , RLPItemType itemType) = _decodeLength(_in);\n\n    require(itemType == RLPItemType.LIST_ITEM, \"Invalid RLP list value.\");\n\n    // Solidity in-memory arrays can't be increased in size, but *can* be decreased in size by\n    // writing to the length. Since we can't know the number of RLP items without looping over\n    // the entire input, we'd have to loop twice to accurately size this array. It's easier to\n    // simply set a reasonable maximum list length and decrease the size before we finish.\n    RLPItem[] memory out = new RLPItem[](MAX_LIST_LENGTH);\n\n    uint256 itemCount = 0;\n    uint256 offset = listOffset;\n    while (offset < _in.length) {\n      require(itemCount < MAX_LIST_LENGTH, \"Provided RLP list exceeds max list length.\");\n\n      (uint256 itemOffset, uint256 itemLength, ) = _decodeLength(\n        RLPItem({length: _in.length - offset, ptr: _in.ptr + offset})\n      );\n\n      out[itemCount] = RLPItem({length: itemLength + itemOffset, ptr: _in.ptr + offset});\n\n      itemCount += 1;\n      offset += itemOffset + itemLength;\n    }\n\n    // Decrease the array size to match the actual item count.\n    assembly {\n      mstore(out, itemCount)\n    }\n\n    return out;\n  }\n\n  /**\n   * Reads an RLP list value into a list of RLP items.\n   * @param _in RLP list value.\n   * @return Decoded RLP list items.\n   */\n  function readList(bytes memory _in) internal pure returns (RLPItem[] memory) {\n    return readList(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP bytes value into bytes.\n   * @param _in RLP bytes value.\n   * @return Decoded bytes.\n   */\n  function readBytes(RLPItem memory _in) internal pure returns (bytes memory) {\n    (uint256 itemOffset, uint256 itemLength, RLPItemType itemType) = _decodeLength(_in);\n\n    require(itemType == RLPItemType.DATA_ITEM, \"Invalid RLP bytes value.\");\n\n    return _copy(_in.ptr, itemOffset, itemLength);\n  }\n\n  /**\n   * Reads an RLP bytes value into bytes.\n   * @param _in RLP bytes value.\n   * @return Decoded bytes.\n   */\n  function readBytes(bytes memory _in) internal pure returns (bytes memory) {\n    return readBytes(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP string value into a string.\n   * @param _in RLP string value.\n   * @return Decoded string.\n   */\n  function readString(RLPItem memory _in) internal pure returns (string memory) {\n    return string(readBytes(_in));\n  }\n\n  /**\n   * Reads an RLP string value into a string.\n   * @param _in RLP string value.\n   * @return Decoded string.\n   */\n  function readString(bytes memory _in) internal pure returns (string memory) {\n    return readString(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP bytes32 value into a bytes32.\n   * @param _in RLP bytes32 value.\n   * @return Decoded bytes32.\n   */\n  function readBytes32(RLPItem memory _in) internal pure returns (bytes32) {\n    // instead of <= 33\n    require(_in.length < 33 + 1, \"Invalid RLP bytes32 value.\");\n\n    (uint256 itemOffset, uint256 itemLength, RLPItemType itemType) = _decodeLength(_in);\n\n    require(itemType == RLPItemType.DATA_ITEM, \"Invalid RLP bytes32 value.\");\n\n    uint256 ptr = _in.ptr + itemOffset;\n    bytes32 out;\n    assembly {\n      out := mload(ptr)\n\n      // Shift the bytes over to match the item size.\n      if lt(itemLength, 32) {\n        out := div(out, exp(256, sub(32, itemLength)))\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Reads an RLP bytes32 value into a bytes32.\n   * @param _in RLP bytes32 value.\n   * @return Decoded bytes32.\n   */\n  function readBytes32(bytes memory _in) internal pure returns (bytes32) {\n    return readBytes32(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP uint256 value into a uint256.\n   * @param _in RLP uint256 value.\n   * @return Decoded uint256.\n   */\n  function readUint256(RLPItem memory _in) internal pure returns (uint256) {\n    return uint256(readBytes32(_in));\n  }\n\n  /**\n   * Reads an RLP uint256 value into a uint256.\n   * @param _in RLP uint256 value.\n   * @return Decoded uint256.\n   */\n  function readUint256(bytes memory _in) internal pure returns (uint256) {\n    return readUint256(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP bool value into a bool.\n   * @param _in RLP bool value.\n   * @return Decoded bool.\n   */\n  function readBool(RLPItem memory _in) internal pure returns (bool) {\n    require(_in.length == 1, \"Invalid RLP boolean value.\");\n\n    uint256 ptr = _in.ptr;\n    uint256 out;\n    assembly {\n      out := byte(0, mload(ptr))\n    }\n\n    require(out == 0 || out == 1, \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\");\n\n    return out != 0;\n  }\n\n  /**\n   * Reads an RLP bool value into a bool.\n   * @param _in RLP bool value.\n   * @return Decoded bool.\n   */\n  function readBool(bytes memory _in) internal pure returns (bool) {\n    return readBool(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP address value into a address.\n   * @param _in RLP address value.\n   * @return Decoded address.\n   */\n  function readAddress(RLPItem memory _in) internal pure returns (address) {\n    if (_in.length == 1) {\n      return address(0);\n    }\n\n    require(_in.length == 21, \"Invalid RLP address value.\");\n\n    return address(uint160(readUint256(_in)));\n  }\n\n  /**\n   * Reads an RLP address value into a address.\n   * @param _in RLP address value.\n   * @return Decoded address.\n   */\n  function readAddress(bytes memory _in) internal pure returns (address) {\n    return readAddress(toRLPItem(_in));\n  }\n\n  /**\n   * Reads the raw bytes of an RLP item.\n   * @param _in RLP item to read.\n   * @return Raw RLP bytes.\n   */\n  function readRawBytes(RLPItem memory _in) internal pure returns (bytes memory) {\n    return _copy(_in);\n  }\n\n  /*********************\n   * Private Functions *\n   *********************/\n\n  /**\n   * Decodes the length of an RLP item.\n   * @param _in RLP item to decode.\n   * @return Offset of the encoded data.\n   * @return Length of the encoded data.\n   * @return RLP item type (LIST_ITEM or DATA_ITEM).\n   */\n  function _decodeLength(RLPItem memory _in)\n    private\n    pure\n    returns (\n      uint256,\n      uint256,\n      RLPItemType\n    )\n  {\n    require(_in.length > 0, \"RLP item cannot be null.\");\n\n    uint256 ptr = _in.ptr;\n    uint256 prefix;\n    assembly {\n      prefix := byte(0, mload(ptr))\n    }\n\n    if (prefix < 0x7f + 1) {\n      // Single byte.\n\n      return (0, 1, RLPItemType.DATA_ITEM);\n    } else if (prefix < 0xb7 + 1) {\n      // Short string.\n\n      // slither-disable-next-line variable-scope\n      uint256 strLen = prefix - 0x80;\n\n      require(_in.length > strLen, \"Invalid RLP short string.\");\n\n      return (1, strLen, RLPItemType.DATA_ITEM);\n    } else if (prefix < 0xbf + 1) {\n      // Long string.\n      uint256 lenOfStrLen = prefix - 0xb7;\n\n      require(_in.length > lenOfStrLen, \"Invalid RLP long string length.\");\n\n      uint256 strLen;\n      assembly {\n        // Pick out the string length.\n        strLen := div(mload(add(ptr, 1)), exp(256, sub(32, lenOfStrLen)))\n      }\n\n      require(_in.length > lenOfStrLen + strLen, \"Invalid RLP long string.\");\n\n      return (1 + lenOfStrLen, strLen, RLPItemType.DATA_ITEM);\n    } else if (prefix < 0xf7 + 1) {\n      // Short list.\n      // slither-disable-next-line variable-scope\n      uint256 listLen = prefix - 0xc0;\n\n      require(_in.length > listLen, \"Invalid RLP short list.\");\n\n      return (1, listLen, RLPItemType.LIST_ITEM);\n    } else {\n      // Long list.\n      uint256 lenOfListLen = prefix - 0xf7;\n\n      require(_in.length > lenOfListLen, \"Invalid RLP long list length.\");\n\n      uint256 listLen;\n      assembly {\n        // Pick out the list length.\n        listLen := div(mload(add(ptr, 1)), exp(256, sub(32, lenOfListLen)))\n      }\n\n      require(_in.length > lenOfListLen + listLen, \"Invalid RLP long list.\");\n\n      return (1 + lenOfListLen, listLen, RLPItemType.LIST_ITEM);\n    }\n  }\n\n  /**\n   * Copies the bytes from a memory location.\n   * @param _src Pointer to the location to read from.\n   * @param _offset Offset to start reading from.\n   * @param _length Number of bytes to read.\n   * @return Copied bytes.\n   */\n  function _copy(\n    uint256 _src,\n    uint256 _offset,\n    uint256 _length\n  ) private pure returns (bytes memory) {\n    bytes memory out = new bytes(_length);\n    if (out.length == 0) {\n      return out;\n    }\n\n    uint256 src = _src + _offset;\n    uint256 dest;\n    assembly {\n      dest := add(out, 32)\n    }\n\n    // Copy over as many complete words as we can.\n    for (uint256 i = 0; i < _length / 32; ) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n\n      src += 32;\n      dest += 32;\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    // Pick out the remaining bytes.\n    uint256 mask;\n    unchecked {\n      mask = 256**(32 - (_length % 32)) - 1;\n    }\n\n    assembly {\n      mstore(dest, or(and(mload(src), not(mask)), and(mload(dest), mask)))\n    }\n    return out;\n  }\n\n  /**\n   * Copies an RLP item into bytes.\n   * @param _in RLP item to copy.\n   * @return Copied bytes.\n   */\n  function _copy(RLPItem memory _in) private pure returns (bytes memory) {\n    return _copy(_in.ptr, 0, _in.length);\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/* Library Imports */\nimport {MerkleTrie} from \"./MerkleTrie.sol\";\n\n/**\n * @title SecureMerkleTrie\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_SecureMerkleTrie.sol\n */\nlibrary SecureMerkleTrie {\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  /**\n   * @notice Verifies a proof that a given key/value pair is present in the\n   * Merkle trie.\n   * @param _key Key of the node to search for, as a hex string.\n   * @param _value Value of the node to search for, as a hex string.\n   * @param _proof Merkle trie inclusion proof for the desired node. Unlike\n   * traditional Merkle trees, this proof is executed top-down and consists\n   * of a list of RLP-encoded nodes that make a path down to the target node.\n   * @param _root Known root of the Merkle trie. Used to verify that the\n   * included proof is correctly constructed.\n   * @return _verified `true` if the k/v pair exists in the trie, `false` otherwise.\n   */\n  function verifyInclusionProof(\n    bytes memory _key,\n    bytes memory _value,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _verified) {\n    bytes memory key = _getSecureKey(_key);\n    return MerkleTrie.verifyInclusionProof(key, _value, _proof, _root);\n  }\n\n  /**\n   * @notice Retrieves the value associated with a given key.\n   * @param _key Key to search for, as hex bytes.\n   * @param _proof Merkle trie inclusion proof for the key.\n   * @param _root Known root of the Merkle trie.\n   * @return _exists Whether or not the key exists.\n   * @return _value Value of the key if it exists.\n   */\n  function get(\n    bytes memory _key,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _exists, bytes memory _value) {\n    bytes memory key = _getSecureKey(_key);\n    return MerkleTrie.get(key, _proof, _root);\n  }\n\n  /*********************\n   * Private Functions *\n   *********************/\n\n  /**\n   * Computes the secure counterpart to a key.\n   * @param _key Key to get a secure key from.\n   * @return _secureKey Secure version of the key.\n   */\n  function _getSecureKey(bytes memory _key) private pure returns (bytes memory _secureKey) {\n    return abi.encodePacked(keccak256(_key));\n  }\n}\n"},"contracts/messaging/connectors/optimism/OptimismHubConnector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {IRootManager} from \"../../interfaces/IRootManager.sol\";\nimport {OptimismAmb} from \"../../interfaces/ambs/optimism/OptimismAmb.sol\";\nimport {IStateCommitmentChain, L2MessageInclusionProof} from \"../../interfaces/ambs/optimism/IStateCommitmentChain.sol\";\n\nimport {TypedMemView} from \"../../../shared/libraries/TypedMemView.sol\";\n\nimport {HubConnector} from \"../HubConnector.sol\";\nimport {Connector} from \"../Connector.sol\";\n\nimport {PredeployAddresses} from \"./lib/PredeployAddresses.sol\";\nimport {OVMCodec} from \"./lib/OVMCodec.sol\";\nimport {SecureMerkleTrie} from \"./lib/SecureMerkleTrie.sol\";\n\nimport {BaseOptimism} from \"./BaseOptimism.sol\";\n\ncontract OptimismHubConnector is HubConnector, BaseOptimism {\n  // ============ Libraries ============\n  using TypedMemView for bytes;\n  using TypedMemView for bytes29;\n\n  // ============ Storage ============\n  IStateCommitmentChain public immutable stateCommitmentChain;\n\n  // NOTE: This is needed because we need to track the roots we've\n  // already sent across chains. When sending an optimism message, we send calldata\n  // for Connector.processMessage. At any point these messages could be processed\n  // before the timeout using `processFromRoot` or after the timeout using `process`\n  // we track the roots sent here to ensure we process each root once\n  mapping(bytes32 => bool) public processed;\n\n  // ============ Constructor ============\n  constructor(\n    uint32 _domain,\n    uint32 _mirrorDomain,\n    address _amb,\n    address _rootManager,\n    address _mirrorConnector,\n    address _stateCommitmentChain,\n    uint256 _gasCap\n  ) HubConnector(_domain, _mirrorDomain, _amb, _rootManager, _mirrorConnector) BaseOptimism(_gasCap) {\n    stateCommitmentChain = IStateCommitmentChain(_stateCommitmentChain);\n  }\n\n  // ============ Override Fns ============\n  function _verifySender(address _expected) internal view override returns (bool) {\n    return _verifySender(AMB, _expected);\n  }\n\n  /**\n   * @dev Sends `aggregateRoot` to messaging on l2\n   */\n  function _sendMessage(bytes memory _data, bytes memory _encodedData) internal override {\n    // Should always be dispatching the aggregate root\n    require(_data.length == 32, \"!length\");\n    // Get the calldata\n    bytes memory _calldata = abi.encodeWithSelector(Connector.processMessage.selector, _data);\n    // Dispatch message\n    OptimismAmb(AMB).sendMessage(mirrorConnector, _calldata, uint32(gasCap));\n  }\n\n  // DO NOT override _processMessage, should revert from `Connector` class. All messages must use the\n  // `processMessageFromRoot` flow.\n\n  /**\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L165\n   */\n  function processMessageFromRoot(\n    address _target,\n    address _sender,\n    bytes memory _message,\n    uint256 _messageNonce,\n    L2MessageInclusionProof memory _proof\n  ) external {\n    // verify the sender is the l2 contract\n    require(_sender == mirrorConnector, \"!mirrorConnector\");\n\n    // verify the target is this contract\n    require(_target == address(this), \"!this\");\n\n    // Get the encoded data\n    bytes memory xDomainData = _encodeXDomainCalldata(_target, _sender, _message, _messageNonce);\n\n    require(_verifyXDomainMessage(xDomainData, _proof), \"!proof\");\n\n    // NOTE: optimism seems to pad the calldata sent in to include more than the expected\n    // 36 bytes, i.e. in this transaction:\n    // https://blockscout.com/optimism/goerli/tx/0x440fda036d28eb547394a8689af90c5342a00a8ca2ab5117f2b85f54d1416ddd/logs\n    // the corresponding _message is:\n    // 0x4ff746f60000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002027ae5ba08d7291c96c8cbddcc148bf48a6d68c7974b94356f53754ef6171d757\n    //\n    // this means the length check and byte parsing used in the `ArbitrumHubConnector` would\n    // not work here. Instead, take the back 32 bytes of the string\n\n    // NOTE: TypedMemView only loads 32-byte chunks onto stack, which is fine in this case\n    bytes29 _view = _message.ref(0);\n    bytes32 root = _view.index(_view.len() - 32, 32);\n\n    if (!processed[root]) {\n      // set root to processed\n      processed[root] = true;\n      // update the root on the root manager\n      IRootManager(ROOT_MANAGER).aggregate(MIRROR_DOMAIN, root);\n\n      emit MessageProcessed(abi.encode(root), msg.sender);\n    } // otherwise root was already sent to root manager\n  }\n\n  /**\n   * Verifies that the given message is valid.\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L283-L288\n   * @param _xDomainCalldata Calldata to verify.\n   * @param _proof Inclusion proof for the message.\n   * @return Whether or not the provided message is valid.\n   */\n  function _verifyXDomainMessage(bytes memory _xDomainCalldata, L2MessageInclusionProof memory _proof)\n    internal\n    view\n    returns (bool)\n  {\n    return (_verifyStateRootProof(_proof) && _verifyStorageProof(_xDomainCalldata, _proof));\n  }\n\n  /**\n   * Verifies that the state root within an inclusion proof is valid.\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L295-L311\n   * @param _proof Message inclusion proof.\n   * @return Whether or not the provided proof is valid.\n   */\n  function _verifyStateRootProof(L2MessageInclusionProof memory _proof) internal view returns (bool) {\n    return\n      stateCommitmentChain.verifyStateCommitment(_proof.stateRoot, _proof.stateRootBatchHeader, _proof.stateRootProof);\n  }\n\n  /**\n   * Verifies that the storage proof within an inclusion proof is valid.\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L313-L357\n   * @param _xDomainCalldata Encoded message calldata.\n   * @param _proof Message inclusion proof.\n   * @return Whether or not the provided proof is valid.\n   */\n  function _verifyStorageProof(bytes memory _xDomainCalldata, L2MessageInclusionProof memory _proof)\n    internal\n    pure\n    returns (bool)\n  {\n    bytes32 storageKey = keccak256(\n      abi.encodePacked(\n        keccak256(abi.encodePacked(_xDomainCalldata, PredeployAddresses.L2_CROSS_DOMAIN_MESSENGER)),\n        uint256(0)\n      )\n    );\n\n    (bool exists, bytes memory encodedMessagePassingAccount) = SecureMerkleTrie.get(\n      abi.encodePacked(PredeployAddresses.L2_TO_L1_MESSAGE_PASSER),\n      _proof.stateTrieWitness,\n      _proof.stateRoot\n    );\n\n    require(exists == true, \"Message passing predeploy has not been initialized or invalid proof provided.\");\n\n    OVMCodec.EVMAccount memory account = OVMCodec.decodeEVMAccount(encodedMessagePassingAccount);\n\n    return\n      SecureMerkleTrie.verifyInclusionProof(\n        abi.encodePacked(storageKey),\n        abi.encodePacked(uint8(1)),\n        _proof.storageTrieWitness,\n        account.storageRoot\n      );\n  }\n\n  /**\n   * Generates the correct cross domain calldata for a message.\n   * @dev taken from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/bridge/Lib_CrossDomainUtils.sol\n   * @param _target Target contract address.\n   * @param _sender Message sender address.\n   * @param _message Message to send to the target.\n   * @param _messageNonce Nonce for the provided message.\n   * @return ABI encoded cross domain calldata.\n   */\n  function _encodeXDomainCalldata(\n    address _target,\n    address _sender,\n    bytes memory _message,\n    uint256 _messageNonce\n  ) internal pure returns (bytes memory) {\n    return\n      abi.encodeWithSignature(\"relayMessage(address,address,bytes,uint256)\", _target, _sender, _message, _messageNonce);\n  }\n}\n"},"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n// modified from: https://github.com/ethereum-optimism/optimism/blob/fcfcf6e7e69801e63904ec53815db01a8d45dcac/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol#L34-L40\nstruct ChainBatchHeader {\n  uint256 batchIndex;\n  bytes32 batchRoot;\n  uint256 batchSize;\n  uint256 prevTotalElements;\n  bytes extraData;\n}\n\n// modified from: https://github.com/ethereum-optimism/optimism/blob/fcfcf6e7e69801e63904ec53815db01a8d45dcac/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol#L42-L45\nstruct ChainInclusionProof {\n  uint256 index;\n  bytes32[] siblings;\n}\n\n// modified from: https://github.com/ethereum-optimism/optimism/blob/fcfcf6e7e69801e63904ec53815db01a8d45dcac/packages/contracts/contracts/L1/messaging/IL1CrossDomainMessenger.sol#L18-L24\nstruct L2MessageInclusionProof {\n  bytes32 stateRoot;\n  ChainBatchHeader stateRootBatchHeader;\n  ChainInclusionProof stateRootProof;\n  bytes stateTrieWitness;\n  bytes storageTrieWitness;\n}\n\n/**\n * @title IStateCommitmentChain\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/IStateCommitmentChain.sol\n */\ninterface IStateCommitmentChain {\n  /**********\n   * Events *\n   **********/\n\n  event StateBatchAppended(\n    uint256 indexed _batchIndex,\n    bytes32 _batchRoot,\n    uint256 _batchSize,\n    uint256 _prevTotalElements,\n    bytes _extraData\n  );\n\n  event StateBatchDeleted(uint256 indexed _batchIndex, bytes32 _batchRoot);\n\n  /********************\n   * Public Functions *\n   ********************/\n\n  /**\n   * Retrieves the total number of elements submitted.\n   * @return _totalElements Total submitted elements.\n   */\n  function getTotalElements() external view returns (uint256 _totalElements);\n\n  /**\n   * Retrieves the total number of batches submitted.\n   * @return _totalBatches Total submitted batches.\n   */\n  function getTotalBatches() external view returns (uint256 _totalBatches);\n\n  /**\n   * Retrieves the timestamp of the last batch submitted by the sequencer.\n   * @return _lastSequencerTimestamp Last sequencer batch timestamp.\n   */\n  function getLastSequencerTimestamp() external view returns (uint256 _lastSequencerTimestamp);\n\n  /**\n   * Appends a batch of state roots to the chain.\n   * @param _batch Batch of state roots.\n   * @param _shouldStartAtElement Index of the element at which this batch should start.\n   */\n  function appendStateBatch(bytes32[] calldata _batch, uint256 _shouldStartAtElement) external;\n\n  /**\n   * Deletes all state roots after (and including) a given batch.\n   * @param _batchHeader Header of the batch to start deleting from.\n   */\n  function deleteStateBatch(ChainBatchHeader memory _batchHeader) external;\n\n  /**\n   * Verifies a batch inclusion proof.\n   * @param _element Hash of the element to verify a proof for.\n   * @param _batchHeader Header of the batch in which the element was included.\n   * @param _proof Merkle inclusion proof for the element.\n   */\n  function verifyStateCommitment(\n    bytes32 _element,\n    ChainBatchHeader memory _batchHeader,\n    ChainInclusionProof memory _proof\n  ) external view returns (bool _verified);\n\n  /**\n   * Checks whether a given batch is still inside its fraud proof window.\n   * @param _batchHeader Header of the batch to check.\n   * @return _inside Whether or not the batch is inside the fraud proof window.\n   */\n  function insideFraudProofWindow(ChainBatchHeader memory _batchHeader) external view returns (bool _inside);\n}\n"},"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @dev The optimism bridge shares both of these functions, but it is important\n * to note that when going from L2 -> L1, the message cannot be processed by the\n * AMB until the challenge period elapses.\n *\n * HOWEVER, before the challenge elapses, you can read the state of the L2 as it is\n * placed on mainnet. By processing data from the L2 state, we are able to \"circumvent\"\n * this delay to a reasonable degree.\n *\n * This means that for messages going L1 -> L2, you can call \"processMessage\" and expect\n * the call to be executed to pass up the aggregate root. When going from L2 -> L1, you\n * must read the root from the L2 state\n *\n * L2 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol\n * L1 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol\n */\ninterface OptimismAmb {\n  function sendMessage(\n    address _target,\n    bytes memory _message,\n    uint32 _gasLimit\n  ) external;\n\n  function xDomainMessageSender() external view returns (address);\n}\n"},"contracts/messaging/interfaces/IConnector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {IProposedOwnable} from \"../../shared/interfaces/IProposedOwnable.sol\";\n\n/**\n * @notice This interface is what the Connext contract will send and receive messages through.\n * The messaging layer should conform to this interface, and should be interchangeable (i.e.\n * could be Nomad or a generic AMB under the hood).\n *\n * @dev This uses the nomad format to ensure nomad can be added in as it comes back online.\n *\n * Flow from transfer from polygon to optimism:\n * 1. User calls `xcall` with destination specified\n * 2. This will swap in to the bridge assets\n * 3. The swapped assets will get burned\n * 4. The Connext contract will call `dispatch` on the messaging contract to add the transfer\n *    to the root\n * 5. [At some time interval] Relayers call `send` to send the current root from polygon to\n *    mainnet. This is done on all \"spoke\" domains.\n * 6. [At some time interval] Relayers call `propagate` [better name] on mainnet, this generates a new merkle\n *    root from all of the AMBs\n *    - This function must be able to read root data from all AMBs and aggregate them into a single merkle\n *      tree root\n *    - Will send the mixed root from all chains back through the respective AMBs to all other chains\n * 7. AMB will call `update` to update the latest root on the messaging contract on spoke domains\n * 8. [At any point] Relayers can call `proveAndProcess` to prove inclusion of dispatched message, and call\n *    process on the `Connext` contract\n * 9. Takes minted bridge tokens and credits the LP\n *\n * AMB requirements:\n * - Access `msg.sender` both from mainnet -> spoke and vice versa\n * - Ability to read *our root* from the AMB\n *\n * AMBs:\n * - PoS bridge from polygon\n * - arbitrum bridge\n * - optimism bridge\n * - gnosis chain\n * - bsc (use multichain for messaging)\n */\ninterface IConnector is IProposedOwnable {\n  // ============ Events ============\n  /**\n   * @notice Emitted whenever a message is successfully sent over an AMB\n   * @param data The contents of the message\n   * @param encodedData Data used to send the message; specific to connector\n   * @param caller Who called the function (sent the message)\n   */\n  event MessageSent(bytes data, bytes encodedData, address caller);\n\n  /**\n   * @notice Emitted whenever a message is successfully received over an AMB\n   * @param data The contents of the message\n   * @param caller Who called the function\n   */\n  event MessageProcessed(bytes data, address caller);\n\n  // ============ Public fns ============\n\n  function processMessage(bytes memory _data) external;\n\n  function verifySender(address _expected) external returns (bool);\n}\n"},"contracts/messaging/interfaces/IRootManager.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\ninterface IRootManager {\n  /**\n   * @notice This is called by relayers to generate + send the mixed root from mainnet via AMB to\n   * spoke domains.\n   * @dev This must read information for the root from the registered AMBs.\n   */\n  function propagate(\n    address[] calldata _connectors,\n    uint256[] calldata _fees,\n    bytes[] memory _encodedData\n  ) external payable;\n\n  /**\n   * @notice Called by the connectors for various domains on the hub to aggregate their latest\n   * inbound root.\n   * @dev This must read information for the root from the registered AMBs\n   */\n  function aggregate(uint32 _domain, bytes32 _outbound) external;\n}\n"},"contracts/shared/interfaces/IProposedOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/**\n * @title IProposedOwnable\n * @notice Defines a minimal interface for ownership with a two step proposal and acceptance\n * process\n */\ninterface IProposedOwnable {\n  /**\n   * @dev This emits when change in ownership of a contract is proposed.\n   */\n  event OwnershipProposed(address indexed proposedOwner);\n\n  /**\n   * @dev This emits when ownership of a contract changes.\n   */\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @notice Get the address of the owner\n   * @return owner_ The address of the owner.\n   */\n  function owner() external view returns (address owner_);\n\n  /**\n   * @notice Get the address of the proposed owner\n   * @return proposed_ The address of the proposed.\n   */\n  function proposed() external view returns (address proposed_);\n\n  /**\n   * @notice Set the address of the proposed owner of the contract\n   * @param newlyProposed The proposed new owner of the contract\n   */\n  function proposeNewOwner(address newlyProposed) external;\n\n  /**\n   * @notice Set the address of the proposed owner of the contract\n   */\n  function acceptProposedOwner() external;\n}\n"},"contracts/shared/libraries/TypedMemView.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nlibrary TypedMemView {\n  // Why does this exist?\n  // the solidity `bytes memory` type has a few weaknesses.\n  // 1. You can't index ranges effectively\n  // 2. You can't slice without copying\n  // 3. The underlying data may represent any type\n  // 4. Solidity never deallocates memory, and memory costs grow\n  //    superlinearly\n\n  // By using a memory view instead of a `bytes memory` we get the following\n  // advantages:\n  // 1. Slices are done on the stack, by manipulating the pointer\n  // 2. We can index arbitrary ranges and quickly convert them to stack types\n  // 3. We can insert type info into the pointer, and typecheck at runtime\n\n  // This makes `TypedMemView` a useful tool for efficient zero-copy\n  // algorithms.\n\n  // Why bytes29?\n  // We want to avoid confusion between views, digests, and other common\n  // types so we chose a large and uncommonly used odd number of bytes\n  //\n  // Note that while bytes are left-aligned in a word, integers and addresses\n  // are right-aligned. This means when working in assembly we have to\n  // account for the 3 unused bytes on the righthand side\n  //\n  // First 5 bytes are a type flag.\n  // - ff_ffff_fffe is reserved for unknown type.\n  // - ff_ffff_ffff is reserved for invalid types/errors.\n  // next 12 are memory address\n  // next 12 are len\n  // bottom 3 bytes are empty\n\n  // Assumptions:\n  // - non-modification of memory.\n  // - No Solidity updates\n  // - - wrt free mem point\n  // - - wrt bytes representation in memory\n  // - - wrt memory addressing in general\n\n  // Usage:\n  // - create type constants\n  // - use `assertType` for runtime type assertions\n  // - - unfortunately we can't do this at compile time yet :(\n  // - recommended: implement modifiers that perform type checking\n  // - - e.g.\n  // - - `uint40 constant MY_TYPE = 3;`\n  // - - ` modifer onlyMyType(bytes29 myView) { myView.assertType(MY_TYPE); }`\n  // - instantiate a typed view from a bytearray using `ref`\n  // - use `index` to inspect the contents of the view\n  // - use `slice` to create smaller views into the same memory\n  // - - `slice` can increase the offset\n  // - - `slice can decrease the length`\n  // - - must specify the output type of `slice`\n  // - - `slice` will return a null view if you try to overrun\n  // - - make sure to explicitly check for this with `notNull` or `assertType`\n  // - use `equal` for typed comparisons.\n\n  // The null view\n  bytes29 public constant NULL = hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n  uint256 constant LOW_12_MASK = 0xffffffffffffffffffffffff;\n  uint256 constant TWENTY_SEVEN_BYTES = 8 * 27;\n  uint256 private constant _27_BYTES_IN_BITS = 8 * 27; // <--- also used this named constant where ever 216 is used.\n  uint256 private constant LOW_27_BYTES_MASK = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff; // (1 << _27_BYTES_IN_BITS) - 1;\n\n  // ========== Custom Errors ===========\n\n  error TypedMemView__assertType_typeAssertionFailed(uint256 actual, uint256 expected);\n  error TypedMemView__index_overrun(uint256 loc, uint256 len, uint256 index, uint256 slice);\n  error TypedMemView__index_indexMoreThan32Bytes();\n  error TypedMemView__unsafeCopyTo_nullPointer();\n  error TypedMemView__unsafeCopyTo_invalidPointer();\n  error TypedMemView__unsafeCopyTo_identityOOG();\n  error TypedMemView__assertValid_validityAssertionFailed();\n\n  /**\n   * @notice          Changes the endianness of a uint256.\n   * @dev             https://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel\n   * @param _b        The unsigned integer to reverse\n   * @return          v - The reversed value\n   */\n  function reverseUint256(uint256 _b) internal pure returns (uint256 v) {\n    v = _b;\n\n    // swap bytes\n    v =\n      ((v >> 8) & 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF) |\n      ((v & 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF) << 8);\n    // swap 2-byte long pairs\n    v =\n      ((v >> 16) & 0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) |\n      ((v & 0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) << 16);\n    // swap 4-byte long pairs\n    v =\n      ((v >> 32) & 0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) |\n      ((v & 0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) << 32);\n    // swap 8-byte long pairs\n    v =\n      ((v >> 64) & 0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) |\n      ((v & 0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) << 64);\n    // swap 16-byte long pairs\n    v = (v >> 128) | (v << 128);\n  }\n\n  /**\n   * @notice      Create a mask with the highest `_len` bits set.\n   * @param _len  The length\n   * @return      mask - The mask\n   */\n  function leftMask(uint8 _len) private pure returns (uint256 mask) {\n    // ugly. redo without assembly?\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      mask := sar(sub(_len, 1), 0x8000000000000000000000000000000000000000000000000000000000000000)\n    }\n  }\n\n  /**\n   * @notice      Return the null view.\n   * @return      bytes29 - The null view\n   */\n  function nullView() internal pure returns (bytes29) {\n    return NULL;\n  }\n\n  /**\n   * @notice      Check if the view is null.\n   * @return      bool - True if the view is null\n   */\n  function isNull(bytes29 memView) internal pure returns (bool) {\n    return memView == NULL;\n  }\n\n  /**\n   * @notice      Check if the view is not null.\n   * @return      bool - True if the view is not null\n   */\n  function notNull(bytes29 memView) internal pure returns (bool) {\n    return !isNull(memView);\n  }\n\n  /**\n   * @notice          Check if the view is of a invalid type and points to a valid location\n   *                  in memory.\n   * @dev             We perform this check by examining solidity's unallocated memory\n   *                  pointer and ensuring that the view's upper bound is less than that.\n   * @param memView   The view\n   * @return          ret - True if the view is invalid\n   */\n  function isNotValid(bytes29 memView) internal pure returns (bool ret) {\n    if (typeOf(memView) == 0xffffffffff) {\n      return true;\n    }\n    uint256 _end = end(memView);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ret := gt(_end, mload(0x40))\n    }\n  }\n\n  /**\n   * @notice          Require that a typed memory view be valid.\n   * @dev             Returns the view for easy chaining.\n   * @param memView   The view\n   * @return          bytes29 - The validated view\n   */\n  function assertValid(bytes29 memView) internal pure returns (bytes29) {\n    if (isNotValid(memView)) revert TypedMemView__assertValid_validityAssertionFailed();\n    return memView;\n  }\n\n  /**\n   * @notice          Return true if the memview is of the expected type. Otherwise false.\n   * @param memView   The view\n   * @param _expected The expected type\n   * @return          bool - True if the memview is of the expected type\n   */\n  function isType(bytes29 memView, uint40 _expected) internal pure returns (bool) {\n    return typeOf(memView) == _expected;\n  }\n\n  /**\n   * @notice          Require that a typed memory view has a specific type.\n   * @dev             Returns the view for easy chaining.\n   * @param memView   The view\n   * @param _expected The expected type\n   * @return          bytes29 - The view with validated type\n   */\n  function assertType(bytes29 memView, uint40 _expected) internal pure returns (bytes29) {\n    if (!isType(memView, _expected)) {\n      revert TypedMemView__assertType_typeAssertionFailed(uint256(typeOf(memView)), uint256(_expected));\n    }\n    return memView;\n  }\n\n  /**\n   * @notice          Return an identical view with a different type.\n   * @param memView   The view\n   * @param _newType  The new type\n   * @return          newView - The new view with the specified type\n   */\n  function castTo(bytes29 memView, uint40 _newType) internal pure returns (bytes29 newView) {\n    // then | in the new type\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // shift off the top 5 bytes\n      newView := or(and(memView, LOW_27_BYTES_MASK), shl(_27_BYTES_IN_BITS, _newType))\n    }\n  }\n\n  /**\n   * @notice          Unsafe raw pointer construction. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @dev             Unsafe raw pointer construction. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @param _type     The type\n   * @param _loc      The memory address\n   * @param _len      The length\n   * @return          newView - The new view with the specified type, location and length\n   */\n  function unsafeBuildUnchecked(\n    uint256 _type,\n    uint256 _loc,\n    uint256 _len\n  ) private pure returns (bytes29 newView) {\n    uint256 _uint96Bits = 96;\n    uint256 _emptyBits = 24;\n\n    // Cast params to ensure input is of correct length\n    uint96 len_ = uint96(_len);\n    uint96 loc_ = uint96(_loc);\n    require(len_ == _len && loc_ == _loc, \"!truncated\");\n\n    assembly {\n      // solium-disable-previous-line security/no-inline-assembly\n      newView := shl(_uint96Bits, _type) // insert type\n      newView := shl(_uint96Bits, or(newView, loc_)) // insert loc\n      newView := shl(_emptyBits, or(newView, len_)) // empty bottom 3 bytes\n    }\n  }\n\n  /**\n   * @notice          Instantiate a new memory view. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @dev             Instantiate a new memory view. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @param _type     The type\n   * @param _loc      The memory address\n   * @param _len      The length\n   * @return          newView - The new view with the specified type, location and length\n   */\n  function build(\n    uint256 _type,\n    uint256 _loc,\n    uint256 _len\n  ) internal pure returns (bytes29 newView) {\n    uint256 _end = _loc + _len;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      if gt(_end, mload(0x40)) {\n        _end := 0\n      }\n    }\n    if (_end == 0) {\n      return NULL;\n    }\n    newView = unsafeBuildUnchecked(_type, _loc, _len);\n  }\n\n  /**\n   * @notice          Instantiate a memory view from a byte array.\n   * @dev             Note that due to Solidity memory representation, it is not possible to\n   *                  implement a deref, as the `bytes` type stores its len in memory.\n   * @param arr       The byte array\n   * @param newType   The type\n   * @return          bytes29 - The memory view\n   */\n  function ref(bytes memory arr, uint40 newType) internal pure returns (bytes29) {\n    uint256 _len = arr.length;\n\n    uint256 _loc;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      _loc := add(arr, 0x20) // our view is of the data, not the struct\n    }\n\n    return build(newType, _loc, _len);\n  }\n\n  /**\n   * @notice          Return the associated type information.\n   * @param memView   The memory view\n   * @return          _type - The type associated with the view\n   */\n  function typeOf(bytes29 memView) internal pure returns (uint40 _type) {\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // 216 == 256 - 40\n      _type := shr(_27_BYTES_IN_BITS, memView) // shift out lower 24 bytes\n    }\n  }\n\n  /**\n   * @notice          Return the memory address of the underlying bytes.\n   * @param memView   The view\n   * @return          _loc - The memory address\n   */\n  function loc(bytes29 memView) internal pure returns (uint96 _loc) {\n    uint256 _mask = LOW_12_MASK; // assembly can't use globals\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // 120 bits = 12 bytes (the encoded loc) + 3 bytes (empty low space)\n      _loc := and(shr(120, memView), _mask)\n    }\n  }\n\n  /**\n   * @notice          The number of memory words this memory view occupies, rounded up.\n   * @param memView   The view\n   * @return          uint256 - The number of memory words\n   */\n  function words(bytes29 memView) internal pure returns (uint256) {\n    return (uint256(len(memView)) + 31) / 32;\n  }\n\n  /**\n   * @notice          The in-memory footprint of a fresh copy of the view.\n   * @param memView   The view\n   * @return          uint256 - The in-memory footprint of a fresh copy of the view.\n   */\n  function footprint(bytes29 memView) internal pure returns (uint256) {\n    return words(memView) * 32;\n  }\n\n  /**\n   * @notice          The number of bytes of the view.\n   * @param memView   The view\n   * @return          _len - The length of the view\n   */\n  function len(bytes29 memView) internal pure returns (uint96 _len) {\n    uint256 _mask = LOW_12_MASK; // assembly can't use globals\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      _len := and(shr(24, memView), _mask)\n    }\n  }\n\n  /**\n   * @notice          Returns the endpoint of `memView`.\n   * @param memView   The view\n   * @return          uint256 - The endpoint of `memView`\n   */\n  function end(bytes29 memView) internal pure returns (uint256) {\n    unchecked {\n      return loc(memView) + len(memView);\n    }\n  }\n\n  /**\n   * @notice          Safe slicing without memory modification.\n   * @param memView   The view\n   * @param _index    The start index\n   * @param _len      The length\n   * @param newType   The new type\n   * @return          bytes29 - The new view\n   */\n  function slice(\n    bytes29 memView,\n    uint256 _index,\n    uint256 _len,\n    uint40 newType\n  ) internal pure returns (bytes29) {\n    uint256 _loc = loc(memView);\n\n    // Ensure it doesn't overrun the view\n    if (_loc + _index + _len > end(memView)) {\n      return NULL;\n    }\n\n    _loc = _loc + _index;\n    return build(newType, _loc, _len);\n  }\n\n  /**\n   * @notice          Shortcut to `slice`. Gets a view representing the first `_len` bytes.\n   * @param memView   The view\n   * @param _len      The length\n   * @param newType   The new type\n   * @return          bytes29 - The new view\n   */\n  function prefix(\n    bytes29 memView,\n    uint256 _len,\n    uint40 newType\n  ) internal pure returns (bytes29) {\n    return slice(memView, 0, _len, newType);\n  }\n\n  /**\n   * @notice          Shortcut to `slice`. Gets a view representing the last `_len` byte.\n   * @param memView   The view\n   * @param _len      The length\n   * @param newType   The new type\n   * @return          bytes29 - The new view\n   */\n  function postfix(\n    bytes29 memView,\n    uint256 _len,\n    uint40 newType\n  ) internal pure returns (bytes29) {\n    return slice(memView, uint256(len(memView)) - _len, _len, newType);\n  }\n\n  /**\n   * @notice          Load up to 32 bytes from the view onto the stack.\n   * @dev             Returns a bytes32 with only the `_bytes` highest bytes set.\n   *                  This can be immediately cast to a smaller fixed-length byte array.\n   *                  To automatically cast to an integer, use `indexUint`.\n   * @param memView   The view\n   * @param _index    The index\n   * @param _bytes    The bytes\n   * @return          result - The 32 byte result\n   */\n  function index(\n    bytes29 memView,\n    uint256 _index,\n    uint8 _bytes\n  ) internal pure returns (bytes32 result) {\n    if (_bytes == 0) {\n      return bytes32(0);\n    }\n    if (_index + _bytes > len(memView)) {\n      // \"TypedMemView/index - Overran the view. Slice is at {loc} with length {len}. Attempted to index at offset {index} with length {slice},\n      revert TypedMemView__index_overrun(loc(memView), len(memView), _index, uint256(_bytes));\n    }\n    if (_bytes > 32) revert TypedMemView__index_indexMoreThan32Bytes();\n\n    uint8 bitLength;\n    unchecked {\n      bitLength = _bytes * 8;\n    }\n    uint256 _loc = loc(memView);\n    uint256 _mask = leftMask(bitLength);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      result := and(mload(add(_loc, _index)), _mask)\n    }\n  }\n\n  /**\n   * @notice          Parse an unsigned integer from the view at `_index`.\n   * @dev             Requires that the view have >= `_bytes` bytes following that index.\n   * @param memView   The view\n   * @param _index    The index\n   * @param _bytes    The bytes\n   * @return          result - The unsigned integer\n   */\n  function indexUint(\n    bytes29 memView,\n    uint256 _index,\n    uint8 _bytes\n  ) internal pure returns (uint256 result) {\n    return uint256(index(memView, _index, _bytes)) >> ((32 - _bytes) * 8);\n  }\n\n  /**\n   * @notice          Parse an unsigned integer from LE bytes.\n   * @param memView   The view\n   * @param _index    The index\n   * @param _bytes    The bytes\n   * @return          result - The unsigned integer\n   */\n  function indexLEUint(\n    bytes29 memView,\n    uint256 _index,\n    uint8 _bytes\n  ) internal pure returns (uint256 result) {\n    return reverseUint256(uint256(index(memView, _index, _bytes)));\n  }\n\n  /**\n   * @notice          Parse an address from the view at `_index`. Requires that the view have >= 20 bytes\n   *                  following that index.\n   * @param memView   The view\n   * @param _index    The index\n   * @return          address - The address\n   */\n  function indexAddress(bytes29 memView, uint256 _index) internal pure returns (address) {\n    return address(uint160(indexUint(memView, _index, 20)));\n  }\n\n  /**\n   * @notice          Return the keccak256 hash of the underlying memory\n   * @param memView   The view\n   * @return          digest - The keccak256 hash of the underlying memory\n   */\n  function keccak(bytes29 memView) internal pure returns (bytes32 digest) {\n    uint256 _loc = loc(memView);\n    uint256 _len = len(memView);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      digest := keccak256(_loc, _len)\n    }\n  }\n\n  /**\n   * @notice          Return true if the underlying memory is equal. Else false.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - True if the underlying memory is equal\n   */\n  function untypedEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return (loc(left) == loc(right) && len(left) == len(right)) || keccak(left) == keccak(right);\n  }\n\n  /**\n   * @notice          Return false if the underlying memory is equal. Else true.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - False if the underlying memory is equal\n   */\n  function untypedNotEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return !untypedEqual(left, right);\n  }\n\n  /**\n   * @notice          Compares type equality.\n   * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - True if the types are the same\n   */\n  function equal(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return left == right || (typeOf(left) == typeOf(right) && keccak(left) == keccak(right));\n  }\n\n  /**\n   * @notice          Compares type inequality.\n   * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - True if the types are not the same\n   */\n  function notEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return !equal(left, right);\n  }\n\n  /**\n   * @notice          Copy the view to a location, return an unsafe memory reference\n   * @dev             Super Dangerous direct memory access.\n   *\n   *                  This reference can be overwritten if anything else modifies memory (!!!).\n   *                  As such it MUST be consumed IMMEDIATELY.\n   *                  This function is private to prevent unsafe usage by callers.\n   * @param memView   The view\n   * @param _newLoc   The new location\n   * @return          written - the unsafe memory reference\n   */\n  function unsafeCopyTo(bytes29 memView, uint256 _newLoc) private view returns (bytes29 written) {\n    if (isNull(memView)) revert TypedMemView__unsafeCopyTo_nullPointer();\n    if (isNotValid(memView)) revert TypedMemView__unsafeCopyTo_invalidPointer();\n\n    uint256 _len = len(memView);\n    uint256 _oldLoc = loc(memView);\n\n    uint256 ptr;\n    bool res;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40)\n      // revert if we're writing in occupied memory\n      if gt(ptr, _newLoc) {\n        revert(0x60, 0x20) // empty revert message\n      }\n\n      // use the identity precompile to copy\n      // guaranteed not to fail, so pop the success\n      res := staticcall(gas(), 4, _oldLoc, _len, _newLoc, _len)\n    }\n    if (!res) revert TypedMemView__unsafeCopyTo_identityOOG();\n    written = unsafeBuildUnchecked(typeOf(memView), _newLoc, _len);\n  }\n\n  /**\n   * @notice          Copies the referenced memory to a new loc in memory, returning a `bytes` pointing to\n   *                  the new memory\n   * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n   * @param memView   The view\n   * @return          ret - The view pointing to the new memory\n   */\n  function clone(bytes29 memView) internal view returns (bytes memory ret) {\n    uint256 ptr;\n    uint256 _len = len(memView);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40) // load unused memory pointer\n      ret := ptr\n    }\n    unchecked {\n      unsafeCopyTo(memView, ptr + 0x20);\n    }\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      mstore(0x40, add(add(ptr, _len), 0x20)) // write new unused pointer\n      mstore(ptr, _len) // write len of new array (in bytes)\n    }\n  }\n\n  /**\n   * @notice          Join the views in memory, return an unsafe reference to the memory.\n   * @dev             Super Dangerous direct memory access.\n   *\n   *                  This reference can be overwritten if anything else modifies memory (!!!).\n   *                  As such it MUST be consumed IMMEDIATELY.\n   *                  This function is private to prevent unsafe usage by callers.\n   * @param memViews  The views\n   * @return          unsafeView - The conjoined view pointing to the new memory\n   */\n  function unsafeJoin(bytes29[] memory memViews, uint256 _location) private view returns (bytes29 unsafeView) {\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      let ptr := mload(0x40)\n      // revert if we're writing in occupied memory\n      if gt(ptr, _location) {\n        revert(0x60, 0x20) // empty revert message\n      }\n    }\n\n    uint256 _offset = 0;\n    uint256 _len = memViews.length;\n    for (uint256 i = 0; i < _len; ) {\n      bytes29 memView = memViews[i];\n      unchecked {\n        unsafeCopyTo(memView, _location + _offset);\n        _offset += len(memView);\n        ++i;\n      }\n    }\n    unsafeView = unsafeBuildUnchecked(0, _location, _offset);\n  }\n\n  /**\n   * @notice          Produce the keccak256 digest of the concatenated contents of multiple views.\n   * @param memViews  The views\n   * @return          bytes32 - The keccak256 digest\n   */\n  function joinKeccak(bytes29[] memory memViews) internal view returns (bytes32) {\n    uint256 ptr;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40) // load unused memory pointer\n    }\n    return keccak(unsafeJoin(memViews, ptr));\n  }\n\n  /**\n   * @notice          copies all views, joins them into a new bytearray.\n   * @param memViews  The views\n   * @return          ret - The new byte array\n   */\n  function join(bytes29[] memory memViews) internal view returns (bytes memory ret) {\n    uint256 ptr;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40) // load unused memory pointer\n    }\n\n    bytes29 _newView;\n    unchecked {\n      _newView = unsafeJoin(memViews, ptr + 0x20);\n    }\n    uint256 _written = len(_newView);\n    uint256 _footprint = footprint(_newView);\n\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // store the legnth\n      mstore(ptr, _written)\n      // new pointer is old + 0x20 + the footprint of the body\n      mstore(0x40, add(add(ptr, _footprint), 0x20))\n      ret := ptr\n    }\n  }\n}\n"},"contracts/shared/ProposedOwnable.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.17;\n\nimport {IProposedOwnable} from \"./interfaces/IProposedOwnable.sol\";\n\n/**\n * @title ProposedOwnable\n * @notice Contract module which provides a basic access control mechanism,\n * where there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed via a two step process:\n * 1. Call `proposeOwner`\n * 2. Wait out the delay period\n * 3. Call `acceptOwner`\n *\n * @dev This module is used through inheritance. It will make available the\n * modifier `onlyOwner`, which can be applied to your functions to restrict\n * their use to the owner.\n *\n * @dev The majority of this code was taken from the openzeppelin Ownable\n * contract\n *\n */\nabstract contract ProposedOwnable is IProposedOwnable {\n  // ========== Custom Errors ===========\n\n  error ProposedOwnable__onlyOwner_notOwner();\n  error ProposedOwnable__onlyProposed_notProposedOwner();\n  error ProposedOwnable__ownershipDelayElapsed_delayNotElapsed();\n  error ProposedOwnable__proposeNewOwner_invalidProposal();\n  error ProposedOwnable__proposeNewOwner_noOwnershipChange();\n  error ProposedOwnable__renounceOwnership_noProposal();\n  error ProposedOwnable__renounceOwnership_invalidProposal();\n\n  // ============ Properties ============\n\n  address private _owner;\n\n  address private _proposed;\n  uint256 private _proposedOwnershipTimestamp;\n\n  uint256 private constant _delay = 7 days;\n\n  // ======== Getters =========\n\n  /**\n   * @notice Returns the address of the current owner.\n   */\n  function owner() public view virtual returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @notice Returns the address of the proposed owner.\n   */\n  function proposed() public view virtual returns (address) {\n    return _proposed;\n  }\n\n  /**\n   * @notice Returns the address of the proposed owner.\n   */\n  function proposedTimestamp() public view virtual returns (uint256) {\n    return _proposedOwnershipTimestamp;\n  }\n\n  /**\n   * @notice Returns the delay period before a new owner can be accepted.\n   */\n  function delay() public view virtual returns (uint256) {\n    return _delay;\n  }\n\n  /**\n   * @notice Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    if (_owner != msg.sender) revert ProposedOwnable__onlyOwner_notOwner();\n    _;\n  }\n\n  /**\n   * @notice Throws if called by any account other than the proposed owner.\n   */\n  modifier onlyProposed() {\n    if (_proposed != msg.sender) revert ProposedOwnable__onlyProposed_notProposedOwner();\n    _;\n  }\n\n  /**\n   * @notice Throws if the ownership delay has not elapsed\n   */\n  modifier ownershipDelayElapsed() {\n    // Ensure delay has elapsed\n    if ((block.timestamp - _proposedOwnershipTimestamp) <= _delay)\n      revert ProposedOwnable__ownershipDelayElapsed_delayNotElapsed();\n    _;\n  }\n\n  /**\n   * @notice Indicates if the ownership has been renounced() by\n   * checking if current owner is address(0)\n   */\n  function renounced() public view returns (bool) {\n    return _owner == address(0);\n  }\n\n  // ======== External =========\n\n  /**\n   * @notice Sets the timestamp for an owner to be proposed, and sets the\n   * newly proposed owner as step 1 in a 2-step process\n   */\n  function proposeNewOwner(address newlyProposed) public virtual onlyOwner {\n    // Contract as source of truth\n    if (_proposed == newlyProposed && _proposedOwnershipTimestamp != 0)\n      revert ProposedOwnable__proposeNewOwner_invalidProposal();\n\n    // Sanity check: reasonable proposal\n    if (_owner == newlyProposed) revert ProposedOwnable__proposeNewOwner_noOwnershipChange();\n\n    _setProposed(newlyProposed);\n  }\n\n  /**\n   * @notice Renounces ownership of the contract after a delay\n   */\n  function renounceOwnership() public virtual onlyOwner ownershipDelayElapsed {\n    // Ensure there has been a proposal cycle started\n    if (_proposedOwnershipTimestamp == 0) revert ProposedOwnable__renounceOwnership_noProposal();\n\n    // Require proposed is set to 0\n    if (_proposed != address(0)) revert ProposedOwnable__renounceOwnership_invalidProposal();\n\n    // Emit event, set new owner, reset timestamp\n    _setOwner(address(0));\n  }\n\n  /**\n   * @notice Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function acceptProposedOwner() public virtual onlyProposed ownershipDelayElapsed {\n    // NOTE: no need to check if _owner == _proposed, because the _proposed\n    // is 0-d out and this check is implicitly enforced by modifier\n\n    // NOTE: no need to check if _proposedOwnershipTimestamp > 0 because\n    // the only time this would happen is if the _proposed was never\n    // set (will fail from modifier) or if the owner == _proposed (checked\n    // above)\n\n    // Emit event, set new owner, reset timestamp\n    _setOwner(_proposed);\n  }\n\n  // ======== Internal =========\n\n  function _setOwner(address newOwner) internal {\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n    delete _proposedOwnershipTimestamp;\n    delete _proposed;\n  }\n\n  function _setProposed(address newlyProposed) private {\n    _proposedOwnershipTimestamp = block.timestamp;\n    _proposed = newlyProposed;\n    emit OwnershipProposed(newlyProposed);\n  }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5740","formattedMessage":"Warning: Unreachable code.\n   --> contracts/messaging/connectors/Connector.sol:148:5:\n    |\n148 |     emit MessageProcessed(_data, msg.sender);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unreachable code.","severity":"warning","sourceLocation":{"end":4405,"file":"contracts/messaging/connectors/Connector.sol","start":4365},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/HelperChainStorageContainer.sol:102:18:\n    |\n102 |     function get(uint256 _index) public view returns (bytes32) {\n    |                  ^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2835,"file":"contracts/HelperChainStorageContainer.sol","start":2821},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/messaging/connectors/optimism/OptimismHubConnector.sol:55:45:\n   |\n55 |   function _sendMessage(bytes memory _data, bytes memory _encodedData) internal override {\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2152,"file":"contracts/messaging/connectors/optimism/OptimismHubConnector.sol","start":2127},"type":"Warning"}],"sources":{"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol","exportedSymbols":{"IChainStorageContainer":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">","0.5",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:30:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IChainStorageContainer","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"64:40:0","text":" @title IChainStorageContainer"},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"IChainStorageContainer","nameLocation":"115:22:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"224:303:0","text":" Sets the container's global metadata field. We're using `bytes27` here because we use five\n bytes to maintain the length of the underlying data structure, meaning we have an extra\n 27 bytes to store arbitrary data.\n @param _globalMetadata New global metadata to set."},"functionSelector":"29061de2","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"setGlobalMetadata","nameLocation":"541:17:0","nodeType":"FunctionDefinition","parameters":{"id":6,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"_globalMetadata","nameLocation":"567:15:0","nodeType":"VariableDeclaration","scope":8,"src":"559:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":4,"name":"bytes27","nodeType":"ElementaryTypeName","src":"559:7:0","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"558:25:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[],"src":"592:0:0"},"scope":57,"src":"532:61:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"599:115:0","text":" Retrieves the container's global metadata field.\n @return Container global metadata field."},"functionSelector":"ccf8f969","id":14,"implemented":false,"kind":"function","modifiers":[],"name":"getGlobalMetadata","nameLocation":"728:17:0","nodeType":"FunctionDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[],"src":"745:2:0"},"returnParameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14,"src":"771:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":11,"name":"bytes27","nodeType":"ElementaryTypeName","src":"771:7:0","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"770:9:0"},"scope":57,"src":"719:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"786:126:0","text":" Retrieves the number of objects stored in the container.\n @return Number of objects in the container."},"functionSelector":"1f7b6d32","id":20,"implemented":false,"kind":"function","modifiers":[],"name":"length","nameLocation":"926:6:0","nodeType":"FunctionDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"932:2:0"},"returnParameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":20,"src":"958:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"958:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"957:9:0"},"scope":57,"src":"917:50:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":21,"nodeType":"StructuredDocumentation","src":"973:123:0","text":" Pushes an object into the container.\n @param _object A 32 byte value to insert into the container."},"functionSelector":"b298e36b","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"push","nameLocation":"1110:4:0","nodeType":"FunctionDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"mutability":"mutable","name":"_object","nameLocation":"1123:7:0","nodeType":"VariableDeclaration","scope":26,"src":"1115:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1115:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1114:17:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1140:0:0"},"scope":57,"src":"1101:40:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1147:374:0","text":" Pushes an object into the container. Function allows setting the global metadata since\n we'll need to touch the \"length\" storage slot anyway, which also contains the global\n metadata (it's an optimization).\n @param _object A 32 byte value to insert into the container.\n @param _globalMetadata New global metadata for the container."},"functionSelector":"2015276c","id":34,"implemented":false,"kind":"function","modifiers":[],"name":"push","nameLocation":"1535:4:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"_object","nameLocation":"1548:7:0","nodeType":"VariableDeclaration","scope":34,"src":"1540:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1540:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"_globalMetadata","nameLocation":"1565:15:0","nodeType":"VariableDeclaration","scope":34,"src":"1557:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":30,"name":"bytes27","nodeType":"ElementaryTypeName","src":"1557:7:0","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"1539:42:0"},"returnParameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1590:0:0"},"scope":57,"src":"1526:65:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":35,"nodeType":"StructuredDocumentation","src":"1597:158:0","text":" Retrieves an object from the container.\n @param _index Index of the particular object to access.\n @return 32 byte object value."},"functionSelector":"9507d39a","id":42,"implemented":false,"kind":"function","modifiers":[],"name":"get","nameLocation":"1769:3:0","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"mutability":"mutable","name":"_index","nameLocation":"1781:6:0","nodeType":"VariableDeclaration","scope":42,"src":"1773:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"1773:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1772:16:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":42,"src":"1812:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":39,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1812:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1811:9:0"},"scope":57,"src":"1760:61:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"1827:123:0","text":" Removes all objects after and including a given index.\n @param _index Object index to delete from."},"functionSelector":"4651d91e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"deleteElementsAfterInclusive","nameLocation":"1964:28:0","nodeType":"FunctionDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"_index","nameLocation":"2001:6:0","nodeType":"VariableDeclaration","scope":48,"src":"1993:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"1993:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1992:16:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"2017:0:0"},"scope":57,"src":"1955:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"2024:246:0","text":" Removes all objects after and including a given index. Also allows setting the global\n metadata field.\n @param _index Object index to delete from.\n @param _globalMetadata New global metadata for the container."},"functionSelector":"167fd681","id":56,"implemented":false,"kind":"function","modifiers":[],"name":"deleteElementsAfterInclusive","nameLocation":"2284:28:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"_index","nameLocation":"2321:6:0","nodeType":"VariableDeclaration","scope":56,"src":"2313:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"2313:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"_globalMetadata","nameLocation":"2337:15:0","nodeType":"VariableDeclaration","scope":56,"src":"2329:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":52,"name":"bytes27","nodeType":"ElementaryTypeName","src":"2329:7:0","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"2312:41:0"},"returnParameters":{"id":55,"nodeType":"ParameterList","parameters":[],"src":"2362:0:0"},"scope":57,"src":"2275:88:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"105:2260:0","usedErrors":[]}],"src":"32:2334:0"},"id":0},"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol","exportedSymbols":{"Lib_Bytes32Utils":[2014],"Lib_BytesUtils":[2275],"Lib_OVMCodec":[248],"Lib_RLPReader":[1104],"Lib_RLPWriter":[1611]},"id":249,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:1"},{"absolutePath":"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol","file":"../rlp/Lib_RLPReader.sol","id":61,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":1105,"src":"79:57:1","symbolAliases":[{"foreign":{"id":60,"name":"Lib_RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"88:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol","file":"../rlp/Lib_RLPWriter.sol","id":63,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":1612,"src":"137:57:1","symbolAliases":[{"foreign":{"id":62,"name":"Lib_RLPWriter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"146:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol","file":"../utils/Lib_BytesUtils.sol","id":65,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":2276,"src":"195:61:1","symbolAliases":[{"foreign":{"id":64,"name":"Lib_BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"204:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol","file":"../utils/Lib_Bytes32Utils.sol","id":67,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":249,"sourceUnit":2015,"src":"257:65:1","symbolAliases":[{"foreign":{"id":66,"name":"Lib_Bytes32Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"266:16:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Lib_OVMCodec","contractDependencies":[],"contractKind":"library","documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"324:30:1","text":" @title Lib_OVMCodec"},"fullyImplemented":true,"id":248,"linearizedBaseContracts":[248],"name":"Lib_OVMCodec","nameLocation":"363:12:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Lib_OVMCodec.QueueOrigin","id":71,"members":[{"id":69,"name":"SEQUENCER_QUEUE","nameLocation":"456:15:1","nodeType":"EnumValue","src":"456:15:1"},{"id":70,"name":"L1TOL2_QUEUE","nameLocation":"481:12:1","nodeType":"EnumValue","src":"481:12:1"}],"name":"QueueOrigin","nameLocation":"434:11:1","nodeType":"EnumDefinition","src":"429:70:1"},{"canonicalName":"Lib_OVMCodec.EVMAccount","id":80,"members":[{"constant":false,"id":73,"mutability":"mutable","name":"nonce","nameLocation":"594:5:1","nodeType":"VariableDeclaration","scope":80,"src":"586:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"balance","nameLocation":"617:7:1","nodeType":"VariableDeclaration","scope":80,"src":"609:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"609:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"storageRoot","nameLocation":"642:11:1","nodeType":"VariableDeclaration","scope":80,"src":"634:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":76,"name":"bytes32","nodeType":"ElementaryTypeName","src":"634:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"codeHash","nameLocation":"671:8:1","nodeType":"VariableDeclaration","scope":80,"src":"663:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":78,"name":"bytes32","nodeType":"ElementaryTypeName","src":"663:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"EVMAccount","nameLocation":"565:10:1","nodeType":"StructDefinition","scope":248,"src":"558:128:1","visibility":"public"},{"canonicalName":"Lib_OVMCodec.ChainBatchHeader","id":91,"members":[{"constant":false,"id":82,"mutability":"mutable","name":"batchIndex","nameLocation":"734:10:1","nodeType":"VariableDeclaration","scope":91,"src":"726:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"726:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":84,"mutability":"mutable","name":"batchRoot","nameLocation":"762:9:1","nodeType":"VariableDeclaration","scope":91,"src":"754:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"754:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":86,"mutability":"mutable","name":"batchSize","nameLocation":"789:9:1","nodeType":"VariableDeclaration","scope":91,"src":"781:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"781:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"prevTotalElements","nameLocation":"816:17:1","nodeType":"VariableDeclaration","scope":91,"src":"808:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"808:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":90,"mutability":"mutable","name":"extraData","nameLocation":"849:9:1","nodeType":"VariableDeclaration","scope":91,"src":"843:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":89,"name":"bytes","nodeType":"ElementaryTypeName","src":"843:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ChainBatchHeader","nameLocation":"699:16:1","nodeType":"StructDefinition","scope":248,"src":"692:173:1","visibility":"public"},{"canonicalName":"Lib_OVMCodec.ChainInclusionProof","id":97,"members":[{"constant":false,"id":93,"mutability":"mutable","name":"index","nameLocation":"916:5:1","nodeType":"VariableDeclaration","scope":97,"src":"908:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"908:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"siblings","nameLocation":"941:8:1","nodeType":"VariableDeclaration","scope":97,"src":"931:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"931:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":95,"nodeType":"ArrayTypeName","src":"931:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"ChainInclusionProof","nameLocation":"878:19:1","nodeType":"StructDefinition","scope":248,"src":"871:85:1","visibility":"public"},{"canonicalName":"Lib_OVMCodec.Transaction","id":113,"members":[{"constant":false,"id":99,"mutability":"mutable","name":"timestamp","nameLocation":"999:9:1","nodeType":"VariableDeclaration","scope":113,"src":"991:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"991:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":101,"mutability":"mutable","name":"blockNumber","nameLocation":"1026:11:1","nodeType":"VariableDeclaration","scope":113,"src":"1018:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104,"mutability":"mutable","name":"l1QueueOrigin","nameLocation":"1059:13:1","nodeType":"VariableDeclaration","scope":113,"src":"1047:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_QueueOrigin_$71","typeString":"enum Lib_OVMCodec.QueueOrigin"},"typeName":{"id":103,"nodeType":"UserDefinedTypeName","pathNode":{"id":102,"name":"QueueOrigin","nameLocations":["1047:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":71,"src":"1047:11:1"},"referencedDeclaration":71,"src":"1047:11:1","typeDescriptions":{"typeIdentifier":"t_enum$_QueueOrigin_$71","typeString":"enum Lib_OVMCodec.QueueOrigin"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"l1TxOrigin","nameLocation":"1090:10:1","nodeType":"VariableDeclaration","scope":113,"src":"1082:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":105,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":108,"mutability":"mutable","name":"entrypoint","nameLocation":"1118:10:1","nodeType":"VariableDeclaration","scope":113,"src":"1110:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":110,"mutability":"mutable","name":"gasLimit","nameLocation":"1146:8:1","nodeType":"VariableDeclaration","scope":113,"src":"1138:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":109,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"data","nameLocation":"1170:4:1","nodeType":"VariableDeclaration","scope":113,"src":"1164:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":111,"name":"bytes","nodeType":"ElementaryTypeName","src":"1164:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Transaction","nameLocation":"969:11:1","nodeType":"StructDefinition","scope":248,"src":"962:219:1","visibility":"public"},{"canonicalName":"Lib_OVMCodec.TransactionChainElement","id":124,"members":[{"constant":false,"id":115,"mutability":"mutable","name":"isSequenced","nameLocation":"1233:11:1","nodeType":"VariableDeclaration","scope":124,"src":"1228:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":114,"name":"bool","nodeType":"ElementaryTypeName","src":"1228:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"queueIndex","nameLocation":"1262:10:1","nodeType":"VariableDeclaration","scope":124,"src":"1254:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"timestamp","nameLocation":"1308:9:1","nodeType":"VariableDeclaration","scope":124,"src":"1300:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":121,"mutability":"mutable","name":"blockNumber","nameLocation":"1356:11:1","nodeType":"VariableDeclaration","scope":124,"src":"1348:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":123,"mutability":"mutable","name":"txData","nameLocation":"1404:6:1","nodeType":"VariableDeclaration","scope":124,"src":"1398:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":122,"name":"bytes","nodeType":"ElementaryTypeName","src":"1398:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"TransactionChainElement","nameLocation":"1194:23:1","nodeType":"StructDefinition","scope":248,"src":"1187:251:1","visibility":"public"},{"canonicalName":"Lib_OVMCodec.QueueElement","id":131,"members":[{"constant":false,"id":126,"mutability":"mutable","name":"transactionHash","nameLocation":"1482:15:1","nodeType":"VariableDeclaration","scope":131,"src":"1474:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1474:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"timestamp","nameLocation":"1514:9:1","nodeType":"VariableDeclaration","scope":131,"src":"1507:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":127,"name":"uint40","nodeType":"ElementaryTypeName","src":"1507:6:1","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"blockNumber","nameLocation":"1540:11:1","nodeType":"VariableDeclaration","scope":131,"src":"1533:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":129,"name":"uint40","nodeType":"ElementaryTypeName","src":"1533:6:1","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"name":"QueueElement","nameLocation":"1451:12:1","nodeType":"StructDefinition","scope":248,"src":"1444:114:1","visibility":"public"},{"body":{"id":158,"nodeType":"Block","src":"1930:348:1","statements":[{"expression":{"arguments":[{"expression":{"id":142,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"1993:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2006:9:1","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":99,"src":"1993:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":144,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2033:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2046:11:1","memberName":"blockNumber","nodeType":"MemberAccess","referencedDeclaration":101,"src":"2033:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":146,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2075:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2088:13:1","memberName":"l1QueueOrigin","nodeType":"MemberAccess","referencedDeclaration":104,"src":"2075:26:1","typeDescriptions":{"typeIdentifier":"t_enum$_QueueOrigin_$71","typeString":"enum Lib_OVMCodec.QueueOrigin"}},{"expression":{"id":148,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2119:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}},"id":149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2132:10:1","memberName":"l1TxOrigin","nodeType":"MemberAccess","referencedDeclaration":106,"src":"2119:23:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":150,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2160:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}},"id":151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2173:10:1","memberName":"entrypoint","nodeType":"MemberAccess","referencedDeclaration":108,"src":"2160:23:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":152,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2201:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}},"id":153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2214:8:1","memberName":"gasLimit","nodeType":"MemberAccess","referencedDeclaration":110,"src":"2201:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":154,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"2240:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}},"id":155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2253:4:1","memberName":"data","nodeType":"MemberAccess","referencedDeclaration":112,"src":"2240:17:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_QueueOrigin_$71","typeString":"enum Lib_OVMCodec.QueueOrigin"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":140,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1959:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1963:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"1959:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:312:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":139,"id":157,"nodeType":"Return","src":"1940:331:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1650:150:1","text":" Encodes a standard OVM transaction.\n @param _transaction OVM transaction to encode.\n @return Encoded transaction bytes."},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"encodeTransaction","nameLocation":"1814:17:1","nodeType":"FunctionDefinition","parameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"_transaction","nameLocation":"1851:12:1","nodeType":"VariableDeclaration","scope":159,"src":"1832:31:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction"},"typeName":{"id":134,"nodeType":"UserDefinedTypeName","pathNode":{"id":133,"name":"Transaction","nameLocations":["1832:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"1832:11:1"},"referencedDeclaration":113,"src":"1832:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_storage_ptr","typeString":"struct Lib_OVMCodec.Transaction"}},"visibility":"internal"}],"src":"1831:33:1"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"1912:12:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":137,"name":"bytes","nodeType":"ElementaryTypeName","src":"1912:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1911:14:1"},"scope":248,"src":"1805:473:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":174,"nodeType":"Block","src":"2520:66:1","statements":[{"expression":{"arguments":[{"arguments":[{"id":170,"name":"_transaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"2565:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction memory"}],"id":169,"name":"encodeTransaction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"2547:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Transaction_$113_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Lib_OVMCodec.Transaction memory) pure returns (bytes memory)"}},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2547:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":168,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2537:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2537:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":167,"id":173,"nodeType":"Return","src":"2530:49:1"}]},"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"2284:141:1","text":" Hashes a standard OVM transaction.\n @param _transaction OVM transaction to encode.\n @return Hashed transaction"},"id":175,"implemented":true,"kind":"function","modifiers":[],"name":"hashTransaction","nameLocation":"2439:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"_transaction","nameLocation":"2474:12:1","nodeType":"VariableDeclaration","scope":175,"src":"2455:31:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_memory_ptr","typeString":"struct Lib_OVMCodec.Transaction"},"typeName":{"id":162,"nodeType":"UserDefinedTypeName","pathNode":{"id":161,"name":"Transaction","nameLocations":["2455:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":113,"src":"2455:11:1"},"referencedDeclaration":113,"src":"2455:11:1","typeDescriptions":{"typeIdentifier":"t_struct$_Transaction_$113_storage_ptr","typeString":"struct Lib_OVMCodec.Transaction"}},"visibility":"internal"}],"src":"2454:33:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":175,"src":"2511:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2511:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2510:9:1"},"scope":248,"src":"2430:156:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":222,"nodeType":"Block","src":"2860:430:1","statements":[{"assignments":[189],"declarations":[{"constant":false,"id":189,"mutability":"mutable","name":"accountState","nameLocation":"2901:12:1","nodeType":"VariableDeclaration","scope":222,"src":"2870:43:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":187,"nodeType":"UserDefinedTypeName","pathNode":{"id":186,"name":"Lib_RLPReader.RLPItem","nameLocations":["2870:13:1","2884:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"2870:21:1"},"referencedDeclaration":384,"src":"2870:21:1","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"id":188,"nodeType":"ArrayTypeName","src":"2870:23:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_storage_$dyn_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":194,"initialValue":{"arguments":[{"id":192,"name":"_encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"2939:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":190,"name":"Lib_RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2916:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Lib_RLPReader_$1104_$","typeString":"type(library Lib_RLPReader)"}},"id":191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2930:8:1","memberName":"readList","nodeType":"MemberAccess","referencedDeclaration":527,"src":"2916:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory[] memory)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2916:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2870:78:1"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":198,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3040:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"id":200,"indexExpression":{"hexValue":"30","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3053:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3040:15:1","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"expression":{"id":196,"name":"Lib_RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3014:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Lib_RLPReader_$1104_$","typeString":"type(library Lib_RLPReader)"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3028:11:1","memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":692,"src":"3014:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":204,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3109:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"id":206,"indexExpression":{"hexValue":"31","id":205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3122:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3109:15:1","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"expression":{"id":202,"name":"Lib_RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3083:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Lib_RLPReader_$1104_$","typeString":"type(library Lib_RLPReader)"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3097:11:1","memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":692,"src":"3083:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256)"}},"id":207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":210,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3182:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"id":212,"indexExpression":{"hexValue":"32","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3195:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3182:15:1","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"expression":{"id":208,"name":"Lib_RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3156:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Lib_RLPReader_$1104_$","typeString":"type(library Lib_RLPReader)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3170:11:1","memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":660,"src":"3156:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3156:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"baseExpression":{"id":216,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"3252:12:1","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"id":218,"indexExpression":{"hexValue":"33","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3265:1:1","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3252:15:1","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"expression":{"id":214,"name":"Lib_RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"3226:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Lib_RLPReader_$1104_$","typeString":"type(library Lib_RLPReader)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3240:11:1","memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":660,"src":"3226:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3226:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":195,"name":"EVMAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2978:10:1","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EVMAccount_$80_storage_ptr_$","typeString":"type(struct Lib_OVMCodec.EVMAccount storage pointer)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3007:5:1","3074:7:1","3143:11:1","3216:8:1"],"names":["nonce","balance","storageRoot","codeHash"],"nodeType":"FunctionCall","src":"2978:305:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$80_memory_ptr","typeString":"struct Lib_OVMCodec.EVMAccount memory"}},"functionReturnParameters":183,"id":221,"nodeType":"Return","src":"2959:324:1"}]},"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"2592:172:1","text":" @notice Decodes an RLP-encoded account state into a useful struct.\n @param _encoded RLP-encoded account state.\n @return Account state struct."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"decodeEVMAccount","nameLocation":"2778:16:1","nodeType":"FunctionDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"_encoded","nameLocation":"2808:8:1","nodeType":"VariableDeclaration","scope":223,"src":"2795:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":177,"name":"bytes","nodeType":"ElementaryTypeName","src":"2795:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2794:23:1"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"2841:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$80_memory_ptr","typeString":"struct Lib_OVMCodec.EVMAccount"},"typeName":{"id":181,"nodeType":"UserDefinedTypeName","pathNode":{"id":180,"name":"EVMAccount","nameLocations":["2841:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":80,"src":"2841:10:1"},"referencedDeclaration":80,"src":"2841:10:1","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$80_storage_ptr","typeString":"struct Lib_OVMCodec.EVMAccount"}},"visibility":"internal"}],"src":"2840:19:1"},"scope":248,"src":"2769:521:1","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":246,"nodeType":"Block","src":"3577:289:1","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":235,"name":"_batchHeader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3665:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader memory"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3678:9:1","memberName":"batchRoot","nodeType":"MemberAccess","referencedDeclaration":84,"src":"3665:22:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":237,"name":"_batchHeader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3709:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader memory"}},"id":238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3722:9:1","memberName":"batchSize","nodeType":"MemberAccess","referencedDeclaration":86,"src":"3709:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":239,"name":"_batchHeader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3753:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader memory"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3766:17:1","memberName":"prevTotalElements","nodeType":"MemberAccess","referencedDeclaration":88,"src":"3753:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":241,"name":"_batchHeader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3805:12:1","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader memory"}},"id":242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3818:9:1","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":90,"src":"3805:22:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":233,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3633:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3637:6:1","memberName":"encode","nodeType":"MemberAccess","src":"3633:10:1","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3633:212:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":232,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3606:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3606:253:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":231,"id":245,"nodeType":"Return","src":"3587:272:1"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"3296:140:1","text":" Calculates a hash for a given batch header.\n @param _batchHeader Header to hash.\n @return Hash of the header."},"id":247,"implemented":true,"kind":"function","modifiers":[],"name":"hashBatchHeader","nameLocation":"3450:15:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"_batchHeader","nameLocation":"3503:12:1","nodeType":"VariableDeclaration","scope":247,"src":"3466:49:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader"},"typeName":{"id":226,"nodeType":"UserDefinedTypeName","pathNode":{"id":225,"name":"Lib_OVMCodec.ChainBatchHeader","nameLocations":["3466:12:1","3479:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":91,"src":"3466:29:1"},"referencedDeclaration":91,"src":"3466:29:1","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_storage_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader"}},"visibility":"internal"}],"src":"3465:51:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"3564:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3564:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3563:9:1"},"scope":248,"src":"3441:425:1","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":249,"src":"355:3513:1","usedErrors":[]}],"src":"32:3837:1"},"id":1},"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol","exportedSymbols":{"Lib_AddressManager":[334],"Ownable":[2388]},"id":335,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":250,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":252,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":335,"sourceUnit":2389,"src":"80:69:2","symbolAliases":[{"foreign":{"id":251,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"89:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":254,"name":"Ownable","nameLocations":["219:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2388,"src":"219:7:2"},"id":255,"nodeType":"InheritanceSpecifier","src":"219:7:2"}],"canonicalName":"Lib_AddressManager","contractDependencies":[],"contractKind":"contract","documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"151:36:2","text":" @title Lib_AddressManager"},"fullyImplemented":true,"id":334,"linearizedBaseContracts":[334,2388,2410],"name":"Lib_AddressManager","nameLocation":"197:18:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c","id":263,"name":"AddressSet","nameLocation":"289:10:2","nodeType":"EventDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"indexed":true,"mutability":"mutable","name":"_name","nameLocation":"315:5:2","nodeType":"VariableDeclaration","scope":263,"src":"300:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":256,"name":"string","nodeType":"ElementaryTypeName","src":"300:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":259,"indexed":false,"mutability":"mutable","name":"_newAddress","nameLocation":"330:11:2","nodeType":"VariableDeclaration","scope":263,"src":"322:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":258,"name":"address","nodeType":"ElementaryTypeName","src":"322:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":261,"indexed":false,"mutability":"mutable","name":"_oldAddress","nameLocation":"351:11:2","nodeType":"VariableDeclaration","scope":263,"src":"343:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":260,"name":"address","nodeType":"ElementaryTypeName","src":"343:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"299:64:2"},"src":"283:81:2"},{"constant":false,"id":267,"mutability":"mutable","name":"addresses","nameLocation":"465:9:2","nodeType":"VariableDeclaration","scope":334,"src":"429:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":266,"keyType":{"id":264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"437:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"429:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"448:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"body":{"id":301,"nodeType":"Block","src":"838:200:2","statements":[{"assignments":[278],"declarations":[{"constant":false,"id":278,"mutability":"mutable","name":"nameHash","nameLocation":"856:8:2","nodeType":"VariableDeclaration","scope":301,"src":"848:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"848:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":282,"initialValue":{"arguments":[{"id":280,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"880:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":279,"name":"_getNameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"867:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"867:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"848:38:2"},{"assignments":[284],"declarations":[{"constant":false,"id":284,"mutability":"mutable","name":"oldAddress","nameLocation":"904:10:2","nodeType":"VariableDeclaration","scope":301,"src":"896:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"896:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":288,"initialValue":{"baseExpression":{"id":285,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"917:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":287,"indexExpression":{"id":286,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"927:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"917:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"896:40:2"},{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":289,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"946:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":291,"indexExpression":{"id":290,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"956:8:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"946:19:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":292,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"968:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"946:30:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":294,"nodeType":"ExpressionStatement","src":"946:30:2"},{"eventCall":{"arguments":[{"id":296,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"1003:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":297,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"1010:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":298,"name":"oldAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1020:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":295,"name":"AddressSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":263,"src":"992:10:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"992:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":300,"nodeType":"EmitStatement","src":"987:44:2"}]},"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"561:194:2","text":" Changes the address associated with a particular name.\n @param _name String name to associate an address with.\n @param _address Address to associate with the name."},"functionSelector":"9b2ea4bd","id":302,"implemented":true,"kind":"function","modifiers":[{"id":275,"kind":"modifierInvocation","modifierName":{"id":274,"name":"onlyOwner","nameLocations":["828:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":2307,"src":"828:9:2"},"nodeType":"ModifierInvocation","src":"828:9:2"}],"name":"setAddress","nameLocation":"769:10:2","nodeType":"FunctionDefinition","parameters":{"id":273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"_name","nameLocation":"794:5:2","nodeType":"VariableDeclaration","scope":302,"src":"780:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"780:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"_address","nameLocation":"809:8:2","nodeType":"VariableDeclaration","scope":302,"src":"801:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":271,"name":"address","nodeType":"ElementaryTypeName","src":"801:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"779:39:2"},"returnParameters":{"id":276,"nodeType":"ParameterList","parameters":[],"src":"838:0:2"},"scope":334,"src":"760:278:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":316,"nodeType":"Block","src":"1300:54:2","statements":[{"expression":{"baseExpression":{"id":310,"name":"addresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"1317:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":314,"indexExpression":{"arguments":[{"id":312,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"1340:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":311,"name":"_getNameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"1327:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (string memory) pure returns (bytes32)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1327:19:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1317:30:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":309,"id":315,"nodeType":"Return","src":"1310:37:2"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"1044:178:2","text":" Retrieves the address associated with a given name.\n @param _name Name to retrieve an address for.\n @return Address associated with the given name."},"functionSelector":"bf40fac1","id":317,"implemented":true,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"1236:10:2","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"_name","nameLocation":"1261:5:2","nodeType":"VariableDeclaration","scope":317,"src":"1247:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":304,"name":"string","nodeType":"ElementaryTypeName","src":"1247:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1246:21:2"},"returnParameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":317,"src":"1291:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1290:9:2"},"scope":334,"src":"1227:127:2","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":332,"nodeType":"Block","src":"1660:58:2","statements":[{"expression":{"arguments":[{"arguments":[{"id":328,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1704:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":326,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1687:3:2","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1691:12:2","memberName":"encodePacked","nodeType":"MemberAccess","src":"1687:16:2","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":325,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1677:9:2","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1677:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":324,"id":331,"nodeType":"Return","src":"1670:41:2"}]},"documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"1446:134:2","text":" Computes the hash of a name.\n @param _name Name to compute a hash for.\n @return Hash of the given name."},"id":333,"implemented":true,"kind":"function","modifiers":[],"name":"_getNameHash","nameLocation":"1594:12:2","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":320,"mutability":"mutable","name":"_name","nameLocation":"1621:5:2","nodeType":"VariableDeclaration","scope":333,"src":"1607:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":319,"name":"string","nodeType":"ElementaryTypeName","src":"1607:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1606:21:2"},"returnParameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":333,"src":"1651:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1651:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1650:9:2"},"scope":334,"src":"1585:133:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":335,"src":"188:1532:2","usedErrors":[]}],"src":"32:1689:2"},"id":2},"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol","exportedSymbols":{"Lib_AddressManager":[334],"Lib_AddressResolver":[370]},"id":371,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":336,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol","file":"./Lib_AddressManager.sol","id":338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":371,"sourceUnit":335,"src":"79:62:3","symbolAliases":[{"foreign":{"id":337,"name":"Lib_AddressManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"88:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Lib_AddressResolver","contractDependencies":[],"contractKind":"contract","documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"143:37:3","text":" @title Lib_AddressResolver"},"fullyImplemented":true,"id":370,"linearizedBaseContracts":[370],"name":"Lib_AddressResolver","nameLocation":"199:19:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"299ca478","id":342,"mutability":"mutable","name":"libAddressManager","nameLocation":"310:17:3","nodeType":"VariableDeclaration","scope":370,"src":"284:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_Lib_AddressManager_$334","typeString":"contract Lib_AddressManager"},"typeName":{"id":341,"nodeType":"UserDefinedTypeName","pathNode":{"id":340,"name":"Lib_AddressManager","nameLocations":["284:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":334,"src":"284:18:3"},"referencedDeclaration":334,"src":"284:18:3","typeDescriptions":{"typeIdentifier":"t_contract$_Lib_AddressManager_$334","typeString":"contract Lib_AddressManager"}},"visibility":"public"},{"body":{"id":354,"nodeType":"Block","src":"523:75:3","statements":[{"expression":{"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":348,"name":"libAddressManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"533:17:3","typeDescriptions":{"typeIdentifier":"t_contract$_Lib_AddressManager_$334","typeString":"contract Lib_AddressManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":350,"name":"_libAddressManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"572:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":349,"name":"Lib_AddressManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"553:18:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Lib_AddressManager_$334_$","typeString":"type(contract Lib_AddressManager)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"553:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_Lib_AddressManager_$334","typeString":"contract Lib_AddressManager"}},"src":"533:58:3","typeDescriptions":{"typeIdentifier":"t_contract$_Lib_AddressManager_$334","typeString":"contract Lib_AddressManager"}},"id":353,"nodeType":"ExpressionStatement","src":"533:58:3"}]},"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"399:79:3","text":" @param _libAddressManager Address of the Lib_AddressManager."},"id":355,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"_libAddressManager","nameLocation":"503:18:3","nodeType":"VariableDeclaration","scope":355,"src":"495:26:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"494:28:3"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"523:0:3"},"scope":370,"src":"483:115:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"933:59:3","statements":[{"expression":{"arguments":[{"id":365,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":358,"src":"979:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":363,"name":"libAddressManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"950:17:3","typeDescriptions":{"typeIdentifier":"t_contract$_Lib_AddressManager_$334","typeString":"contract Lib_AddressManager"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"968:10:3","memberName":"getAddress","nodeType":"MemberAccess","referencedDeclaration":317,"src":"950:28:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view external returns (address)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"950:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":362,"id":367,"nodeType":"Return","src":"943:42:3"}]},"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"684:176:3","text":" Resolves the address associated with a given name.\n @param _name Name to resolve an address for.\n @return Address associated with the given name."},"functionSelector":"461a4478","id":369,"implemented":true,"kind":"function","modifiers":[],"name":"resolve","nameLocation":"874:7:3","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"_name","nameLocation":"896:5:3","nodeType":"VariableDeclaration","scope":369,"src":"882:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":357,"name":"string","nodeType":"ElementaryTypeName","src":"882:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"881:21:3"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":369,"src":"924:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"923:9:3"},"scope":370,"src":"865:127:3","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":371,"src":"181:813:3","usedErrors":[]}],"src":"32:963:3"},"id":3},"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol","exportedSymbols":{"Lib_RLPReader":[1104]},"id":1105,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":372,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"Lib_RLPReader","contractDependencies":[],"contractKind":"library","documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"57:106:4","text":" @title Lib_RLPReader\n @dev Adapted from \"RLPReader\" by Hamdi Allam (hamdi.allam97@gmail.com)."},"fullyImplemented":true,"id":1104,"linearizedBaseContracts":[1104],"name":"Lib_RLPReader","nameLocation":"172:13:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":376,"mutability":"constant","name":"MAX_LIST_LENGTH","nameLocation":"277:15:4","nodeType":"VariableDeclaration","scope":1104,"src":"251:46:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":374,"name":"uint256","nodeType":"ElementaryTypeName","src":"251:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"295:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"canonicalName":"Lib_RLPReader.RLPItemType","id":379,"members":[{"id":377,"name":"DATA_ITEM","nameLocation":"378:9:4","nodeType":"EnumValue","src":"378:9:4"},{"id":378,"name":"LIST_ITEM","nameLocation":"397:9:4","nodeType":"EnumValue","src":"397:9:4"}],"name":"RLPItemType","nameLocation":"356:11:4","nodeType":"EnumDefinition","src":"351:61:4"},{"canonicalName":"Lib_RLPReader.RLPItem","id":384,"members":[{"constant":false,"id":381,"mutability":"mutable","name":"length","nameLocation":"504:6:4","nodeType":"VariableDeclaration","scope":384,"src":"496:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"496:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"ptr","nameLocation":"528:3:4","nodeType":"VariableDeclaration","scope":384,"src":"520:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":382,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RLPItem","nameLocation":"478:7:4","nodeType":"StructDefinition","scope":1104,"src":"471:67:4","visibility":"public"},{"body":{"id":403,"nodeType":"Block","src":"872:148:4","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"ptr","nameLocation":"890:3:4","nodeType":"VariableDeclaration","scope":403,"src":"882:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"882:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":395,"nodeType":"VariableDeclarationStatement","src":"882:11:4"},{"AST":{"nodeType":"YulBlock","src":"912:43:4","statements":[{"nodeType":"YulAssignment","src":"926:19:4","value":{"arguments":[{"name":"_in","nodeType":"YulIdentifier","src":"937:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"942:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:4"},"nodeType":"YulFunctionCall","src":"933:12:4"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"926:3:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":387,"isOffset":false,"isSlot":false,"src":"937:3:4","valueSize":1},{"declaration":394,"isOffset":false,"isSlot":false,"src":"926:3:4","valueSize":1}],"id":396,"nodeType":"InlineAssembly","src":"903:52:4"},{"expression":{"arguments":[{"expression":{"id":398,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"990:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"994:6:4","memberName":"length","nodeType":"MemberAccess","src":"990:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":400,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"1007:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":397,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"972:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$384_storage_ptr_$","typeString":"type(struct Lib_RLPReader.RLPItem storage pointer)"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["982:6:4","1002:3:4"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"972:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"functionReturnParameters":392,"id":402,"nodeType":"Return","src":"965:48:4"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"630:161:4","text":" Converts bytes to a reference to memory position and length.\n @param _in Input bytes to convert.\n @return Output memory reference."},"id":404,"implemented":true,"kind":"function","modifiers":[],"name":"toRLPItem","nameLocation":"805:9:4","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"_in","nameLocation":"828:3:4","nodeType":"VariableDeclaration","scope":404,"src":"815:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":386,"name":"bytes","nodeType":"ElementaryTypeName","src":"815:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"814:18:4"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"856:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":390,"nodeType":"UserDefinedTypeName","pathNode":{"id":389,"name":"RLPItem","nameLocations":["856:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"856:7:4"},"referencedDeclaration":384,"src":"856:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"855:16:4"},"scope":1104,"src":"796:224:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":509,"nodeType":"Block","src":"1251:1327:4","statements":[{"assignments":[416,null,419],"declarations":[{"constant":false,"id":416,"mutability":"mutable","name":"listOffset","nameLocation":"1270:10:4","nodeType":"VariableDeclaration","scope":509,"src":"1262:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1262:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,{"constant":false,"id":419,"mutability":"mutable","name":"itemType","nameLocation":"1296:8:4","nodeType":"VariableDeclaration","scope":509,"src":"1284:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"},"typeName":{"id":418,"nodeType":"UserDefinedTypeName","pathNode":{"id":417,"name":"RLPItemType","nameLocations":["1284:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"1284:11:4"},"referencedDeclaration":379,"src":"1284:11:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"visibility":"internal"}],"id":423,"initialValue":{"arguments":[{"id":421,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1322:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":420,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"1308:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1308:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"1261:65:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":425,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"1345:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":426,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"1357:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1369:9:4","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":378,"src":"1357:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"src":"1345:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6973742076616c75652e","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1380:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","typeString":"literal_string \"Invalid RLP list value.\""},"value":"Invalid RLP list value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","typeString":"literal_string \"Invalid RLP list value.\""}],"id":424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1337:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":431,"nodeType":"ExpressionStatement","src":"1337:69:4"},{"assignments":[436],"declarations":[{"constant":false,"id":436,"mutability":"mutable","name":"out","nameLocation":"1826:3:4","nodeType":"VariableDeclaration","scope":509,"src":"1809:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":434,"nodeType":"UserDefinedTypeName","pathNode":{"id":433,"name":"RLPItem","nameLocations":["1809:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"1809:7:4"},"referencedDeclaration":384,"src":"1809:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"id":435,"nodeType":"ArrayTypeName","src":"1809:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_storage_$dyn_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":443,"initialValue":{"arguments":[{"id":441,"name":"MAX_LIST_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"1846:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1832:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Lib_RLPReader.RLPItem memory[] memory)"},"typeName":{"baseType":{"id":438,"nodeType":"UserDefinedTypeName","pathNode":{"id":437,"name":"RLPItem","nameLocations":["1836:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"1836:7:4"},"referencedDeclaration":384,"src":"1836:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"id":439,"nodeType":"ArrayTypeName","src":"1836:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_storage_$dyn_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"}}},"id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1832:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1809:53:4"},{"assignments":[445],"declarations":[{"constant":false,"id":445,"mutability":"mutable","name":"itemCount","nameLocation":"1881:9:4","nodeType":"VariableDeclaration","scope":509,"src":"1873:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":447,"initialValue":{"hexValue":"30","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1893:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1873:21:4"},{"assignments":[449],"declarations":[{"constant":false,"id":449,"mutability":"mutable","name":"offset","nameLocation":"1912:6:4","nodeType":"VariableDeclaration","scope":509,"src":"1904:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1904:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":451,"initialValue":{"id":450,"name":"listOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1921:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1904:27:4"},{"body":{"id":504,"nodeType":"Block","src":"1969:450:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":457,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"1991:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":458,"name":"MAX_LIST_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"2003:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1991:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f766964656420524c50206c6973742065786365656473206d6178206c697374206c656e6774682e","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","typeString":"literal_string \"Provided RLP list exceeds max list length.\""},"value":"Provided RLP list exceeds max list length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","typeString":"literal_string \"Provided RLP list exceeds max list length.\""}],"id":456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1983:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1983:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"1983:82:4"},{"assignments":[464,466,null],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"itemOffset","nameLocation":"2089:10:4","nodeType":"VariableDeclaration","scope":504,"src":"2081:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":466,"mutability":"mutable","name":"itemLength","nameLocation":"2109:10:4","nodeType":"VariableDeclaration","scope":504,"src":"2101:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2101:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":479,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":469,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2174:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2178:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"2174:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":471,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2187:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2174:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":473,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2200:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2204:3:4","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":383,"src":"2200:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":475,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2210:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2200:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":468,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2156:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$384_storage_ptr_$","typeString":"type(struct Lib_RLPReader.RLPItem storage pointer)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2166:6:4","2195:3:4"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"2156:63:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":467,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"2125:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:108:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"2080:153:4"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":480,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2248:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"id":482,"indexExpression":{"id":481,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2252:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2248:14:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":484,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"2283:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":485,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2296:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2283:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":487,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2313:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":488,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2317:3:4","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":383,"src":"2313:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":489,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2323:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2313:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":483,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"2265:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$384_storage_ptr_$","typeString":"type(struct Lib_RLPReader.RLPItem storage pointer)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2275:6:4","2308:3:4"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"2265:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"src":"2248:84:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":493,"nodeType":"ExpressionStatement","src":"2248:84:4"},{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":494,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"2347:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2360:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2347:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"nodeType":"ExpressionStatement","src":"2347:14:4"},{"expression":{"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":498,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"2375:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":499,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2385:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":500,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"2398:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2385:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2375:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":503,"nodeType":"ExpressionStatement","src":"2375:33:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":452,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1948:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":453,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1957:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1961:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1957:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"WhileStatement","src":"1941:478:4"},{"AST":{"nodeType":"YulBlock","src":"2505:46:4","statements":[{"expression":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"2526:3:4"},{"name":"itemCount","nodeType":"YulIdentifier","src":"2531:9:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2519:6:4"},"nodeType":"YulFunctionCall","src":"2519:22:4"},"nodeType":"YulExpressionStatement","src":"2519:22:4"}]},"evmVersion":"london","externalReferences":[{"declaration":445,"isOffset":false,"isSlot":false,"src":"2531:9:4","valueSize":1},{"declaration":436,"isOffset":false,"isSlot":false,"src":"2526:3:4","valueSize":1}],"id":506,"nodeType":"InlineAssembly","src":"2496:55:4"},{"expression":{"id":507,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"2568:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"functionReturnParameters":414,"id":508,"nodeType":"Return","src":"2561:10:4"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"1026:141:4","text":" Reads an RLP list value into a list of RLP items.\n @param _in RLP list value.\n @return Decoded RLP list items."},"id":510,"implemented":true,"kind":"function","modifiers":[],"name":"readList","nameLocation":"1181:8:4","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"_in","nameLocation":"1205:3:4","nodeType":"VariableDeclaration","scope":510,"src":"1190:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":407,"nodeType":"UserDefinedTypeName","pathNode":{"id":406,"name":"RLPItem","nameLocations":["1190:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"1190:7:4"},"referencedDeclaration":384,"src":"1190:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"1189:20:4"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":510,"src":"1233:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":411,"nodeType":"UserDefinedTypeName","pathNode":{"id":410,"name":"RLPItem","nameLocations":["1233:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"1233:7:4"},"referencedDeclaration":384,"src":"1233:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"id":412,"nodeType":"ArrayTypeName","src":"1233:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_storage_$dyn_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"}},"visibility":"internal"}],"src":"1232:18:4"},"scope":1104,"src":"1172:1406:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":526,"nodeType":"Block","src":"2807:48:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":522,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2843:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":521,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2833:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$384_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2833:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":520,"name":"readList","nodeType":"Identifier","overloadedDeclarations":[510,527],"referencedDeclaration":510,"src":"2824:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (struct Lib_RLPReader.RLPItem memory[] memory)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2824:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory[] memory"}},"functionReturnParameters":519,"id":525,"nodeType":"Return","src":"2817:31:4"}]},"documentation":{"id":511,"nodeType":"StructuredDocumentation","src":"2584:141:4","text":" Reads an RLP list value into a list of RLP items.\n @param _in RLP list value.\n @return Decoded RLP list items."},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"readList","nameLocation":"2739:8:4","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"_in","nameLocation":"2761:3:4","nodeType":"VariableDeclaration","scope":527,"src":"2748:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":512,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2747:18:4"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"2789:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_memory_ptr_$dyn_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":516,"nodeType":"UserDefinedTypeName","pathNode":{"id":515,"name":"RLPItem","nameLocations":["2789:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"2789:7:4"},"referencedDeclaration":384,"src":"2789:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"id":517,"nodeType":"ArrayTypeName","src":"2789:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$384_storage_$dyn_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem[]"}},"visibility":"internal"}],"src":"2788:18:4"},"scope":1104,"src":"2730:125:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"3062:237:4","statements":[{"assignments":[537,539,542],"declarations":[{"constant":false,"id":537,"mutability":"mutable","name":"itemOffset","nameLocation":"3081:10:4","nodeType":"VariableDeclaration","scope":562,"src":"3073:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":539,"mutability":"mutable","name":"itemLength","nameLocation":"3101:10:4","nodeType":"VariableDeclaration","scope":562,"src":"3093:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"itemType","nameLocation":"3125:8:4","nodeType":"VariableDeclaration","scope":562,"src":"3113:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"},"typeName":{"id":541,"nodeType":"UserDefinedTypeName","pathNode":{"id":540,"name":"RLPItemType","nameLocations":["3113:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"3113:11:4"},"referencedDeclaration":379,"src":"3113:11:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"visibility":"internal"}],"id":546,"initialValue":{"arguments":[{"id":544,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3151:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":543,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3137:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3137:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"3072:83:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"3174:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":549,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"3186:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3198:9:4","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":377,"src":"3186:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"src":"3174:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502062797465732076616c75652e","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3209:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","typeString":"literal_string \"Invalid RLP bytes value.\""},"value":"Invalid RLP bytes value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","typeString":"literal_string \"Invalid RLP bytes value.\""}],"id":547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3166:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3166:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"3166:70:4"},{"expression":{"arguments":[{"expression":{"id":556,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"3260:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3264:3:4","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":383,"src":"3260:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":558,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"3269:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":559,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"3281:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":555,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[1085,1103],"referencedDeclaration":1085,"src":"3254:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes memory)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3254:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":535,"id":561,"nodeType":"Return","src":"3247:45:4"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"2861:120:4","text":" Reads an RLP bytes value into bytes.\n @param _in RLP bytes value.\n @return Decoded bytes."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes","nameLocation":"2995:9:4","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"_in","nameLocation":"3020:3:4","nodeType":"VariableDeclaration","scope":563,"src":"3005:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"RLPItem","nameLocations":["3005:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"3005:7:4"},"referencedDeclaration":384,"src":"3005:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"3004:20:4"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":563,"src":"3048:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"3048:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3047:14:4"},"scope":1104,"src":"2986:313:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"3504:49:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":573,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"3541:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":572,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3531:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$384_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":571,"name":"readBytes","nodeType":"Identifier","overloadedDeclarations":[563,578],"referencedDeclaration":563,"src":"3521:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3521:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":570,"id":576,"nodeType":"Return","src":"3514:32:4"}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"3305:120:4","text":" Reads an RLP bytes value into bytes.\n @param _in RLP bytes value.\n @return Decoded bytes."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes","nameLocation":"3439:9:4","nodeType":"FunctionDefinition","parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"mutability":"mutable","name":"_in","nameLocation":"3462:3:4","nodeType":"VariableDeclaration","scope":578,"src":"3449:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"3449:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3448:18:4"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":578,"src":"3490:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":568,"name":"bytes","nodeType":"ElementaryTypeName","src":"3490:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3489:14:4"},"scope":1104,"src":"3430:123:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"3768:46:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":590,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":582,"src":"3802:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":589,"name":"readBytes","nodeType":"Identifier","overloadedDeclarations":[563,578],"referencedDeclaration":563,"src":"3792:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3785:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":587,"name":"string","nodeType":"ElementaryTypeName","src":"3785:6:4","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3785:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":586,"id":593,"nodeType":"Return","src":"3778:29:4"}]},"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"3559:126:4","text":" Reads an RLP string value into a string.\n @param _in RLP string value.\n @return Decoded string."},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"readString","nameLocation":"3699:10:4","nodeType":"FunctionDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":582,"mutability":"mutable","name":"_in","nameLocation":"3725:3:4","nodeType":"VariableDeclaration","scope":595,"src":"3710:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":581,"nodeType":"UserDefinedTypeName","pathNode":{"id":580,"name":"RLPItem","nameLocations":["3710:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"3710:7:4"},"referencedDeclaration":384,"src":"3710:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"3709:20:4"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"3753:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":584,"name":"string","nodeType":"ElementaryTypeName","src":"3753:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3752:15:4"},"scope":1104,"src":"3690:124:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":609,"nodeType":"Block","src":"4027:50:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":605,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"4065:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":604,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"4055:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$384_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4055:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":603,"name":"readString","nodeType":"Identifier","overloadedDeclarations":[595,610],"referencedDeclaration":595,"src":"4044:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (string memory)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":602,"id":608,"nodeType":"Return","src":"4037:33:4"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"3820:126:4","text":" Reads an RLP string value into a string.\n @param _in RLP string value.\n @return Decoded string."},"id":610,"implemented":true,"kind":"function","modifiers":[],"name":"readString","nameLocation":"3960:10:4","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"_in","nameLocation":"3984:3:4","nodeType":"VariableDeclaration","scope":610,"src":"3971:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":597,"name":"bytes","nodeType":"ElementaryTypeName","src":"3971:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3970:18:4"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":610,"src":"4012:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":600,"name":"string","nodeType":"ElementaryTypeName","src":"4012:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4011:15:4"},"scope":1104,"src":"3951:126:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":659,"nodeType":"Block","src":"4291:569:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":620,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4309:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4313:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"4309:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3333","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4323:2:4","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"src":"4309:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4327:28:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""},"value":"Invalid RLP bytes32 value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""}],"id":619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4301:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4301:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"4301:55:4"},{"assignments":[628,630,633],"declarations":[{"constant":false,"id":628,"mutability":"mutable","name":"itemOffset","nameLocation":"4376:10:4","nodeType":"VariableDeclaration","scope":659,"src":"4368:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"4368:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"itemLength","nameLocation":"4396:10:4","nodeType":"VariableDeclaration","scope":659,"src":"4388:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"4388:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"itemType","nameLocation":"4420:8:4","nodeType":"VariableDeclaration","scope":659,"src":"4408:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"},"typeName":{"id":632,"nodeType":"UserDefinedTypeName","pathNode":{"id":631,"name":"RLPItemType","nameLocations":["4408:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"4408:11:4"},"referencedDeclaration":379,"src":"4408:11:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"visibility":"internal"}],"id":637,"initialValue":{"arguments":[{"id":635,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4446:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":634,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"4432:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4432:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"4367:83:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":639,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"4469:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":640,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"4481:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4493:9:4","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":377,"src":"4481:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"src":"4469:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4504:28:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""},"value":"Invalid RLP bytes32 value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""}],"id":638,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4461:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4461:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":645,"nodeType":"ExpressionStatement","src":"4461:72:4"},{"assignments":[647],"declarations":[{"constant":false,"id":647,"mutability":"mutable","name":"ptr","nameLocation":"4552:3:4","nodeType":"VariableDeclaration","scope":659,"src":"4544:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":652,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":648,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"4558:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":649,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4562:3:4","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":383,"src":"4558:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":650,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4568:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4558:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4544:34:4"},{"assignments":[654],"declarations":[{"constant":false,"id":654,"mutability":"mutable","name":"out","nameLocation":"4596:3:4","nodeType":"VariableDeclaration","scope":659,"src":"4588:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4588:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":655,"nodeType":"VariableDeclarationStatement","src":"4588:11:4"},{"AST":{"nodeType":"YulBlock","src":"4618:215:4","statements":[{"nodeType":"YulAssignment","src":"4632:17:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4645:3:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4639:5:4"},"nodeType":"YulFunctionCall","src":"4639:10:4"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"4632:3:4"}]},{"body":{"nodeType":"YulBlock","src":"4745:78:4","statements":[{"nodeType":"YulAssignment","src":"4763:46:4","value":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"4774:3:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4783:3:4","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4792:2:4","type":"","value":"32"},{"name":"itemLength","nodeType":"YulIdentifier","src":"4796:10:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4788:3:4"},"nodeType":"YulFunctionCall","src":"4788:19:4"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"4779:3:4"},"nodeType":"YulFunctionCall","src":"4779:29:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4770:3:4"},"nodeType":"YulFunctionCall","src":"4770:39:4"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"4763:3:4"}]}]},"condition":{"arguments":[{"name":"itemLength","nodeType":"YulIdentifier","src":"4729:10:4"},{"kind":"number","nodeType":"YulLiteral","src":"4741:2:4","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4726:2:4"},"nodeType":"YulFunctionCall","src":"4726:18:4"},"nodeType":"YulIf","src":"4723:100:4"}]},"evmVersion":"london","externalReferences":[{"declaration":630,"isOffset":false,"isSlot":false,"src":"4729:10:4","valueSize":1},{"declaration":630,"isOffset":false,"isSlot":false,"src":"4796:10:4","valueSize":1},{"declaration":654,"isOffset":false,"isSlot":false,"src":"4632:3:4","valueSize":1},{"declaration":654,"isOffset":false,"isSlot":false,"src":"4763:3:4","valueSize":1},{"declaration":654,"isOffset":false,"isSlot":false,"src":"4774:3:4","valueSize":1},{"declaration":647,"isOffset":false,"isSlot":false,"src":"4645:3:4","valueSize":1}],"id":656,"nodeType":"InlineAssembly","src":"4609:224:4"},{"expression":{"id":657,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"4850:3:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":618,"id":658,"nodeType":"Return","src":"4843:10:4"}]},"documentation":{"id":611,"nodeType":"StructuredDocumentation","src":"4083:130:4","text":" Reads an RLP bytes32 value into a bytes32.\n @param _in RLP bytes32 value.\n @return Decoded bytes32."},"id":660,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"4227:11:4","nodeType":"FunctionDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"_in","nameLocation":"4254:3:4","nodeType":"VariableDeclaration","scope":660,"src":"4239:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":613,"nodeType":"UserDefinedTypeName","pathNode":{"id":612,"name":"RLPItem","nameLocations":["4239:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"4239:7:4"},"referencedDeclaration":384,"src":"4239:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"4238:20:4"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":660,"src":"4282:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":616,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4282:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4281:9:4"},"scope":1104,"src":"4218:642:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"5072:51:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":670,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"5111:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":669,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5101:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$384_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory)"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5101:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":668,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[660,675],"referencedDeclaration":660,"src":"5089:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5089:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":667,"id":673,"nodeType":"Return","src":"5082:34:4"}]},"documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"4866:130:4","text":" Reads an RLP bytes32 value into a bytes32.\n @param _in RLP bytes32 value.\n @return Decoded bytes32."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"5010:11:4","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":663,"mutability":"mutable","name":"_in","nameLocation":"5035:3:4","nodeType":"VariableDeclaration","scope":675,"src":"5022:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":662,"name":"bytes","nodeType":"ElementaryTypeName","src":"5022:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5021:18:4"},"returnParameters":{"id":667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"5063:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":665,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5063:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5062:9:4"},"scope":1104,"src":"5001:122:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"5337:49:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":687,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"5374:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":686,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[660,675],"referencedDeclaration":660,"src":"5362:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5354:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":684,"name":"uint256","nodeType":"ElementaryTypeName","src":"5354:7:4","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":683,"id":690,"nodeType":"Return","src":"5347:32:4"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"5129:130:4","text":" Reads an RLP uint256 value into a uint256.\n @param _in RLP uint256 value.\n @return Decoded uint256."},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","nameLocation":"5273:11:4","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"_in","nameLocation":"5300:3:4","nodeType":"VariableDeclaration","scope":692,"src":"5285:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":678,"nodeType":"UserDefinedTypeName","pathNode":{"id":677,"name":"RLPItem","nameLocations":["5285:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"5285:7:4"},"referencedDeclaration":384,"src":"5285:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"5284:20:4"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":692,"src":"5328:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"5328:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5327:9:4"},"scope":1104,"src":"5264:122:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"5598:51:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":702,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5637:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":701,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"5627:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$384_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5627:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":700,"name":"readUint256","nodeType":"Identifier","overloadedDeclarations":[692,707],"referencedDeclaration":692,"src":"5615:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":699,"id":705,"nodeType":"Return","src":"5608:34:4"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"5392:130:4","text":" Reads an RLP uint256 value into a uint256.\n @param _in RLP uint256 value.\n @return Decoded uint256."},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","nameLocation":"5536:11:4","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"_in","nameLocation":"5561:3:4","nodeType":"VariableDeclaration","scope":707,"src":"5548:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":694,"name":"bytes","nodeType":"ElementaryTypeName","src":"5548:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5547:18:4"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"5589:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"5589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5588:9:4"},"scope":1104,"src":"5527:122:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":748,"nodeType":"Block","src":"5845:318:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":717,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"5863:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5867:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"5863:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5877:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5863:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020626f6f6c65616e2076616c75652e","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5880:28:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f8f0c9c05acf0cd50562c9d3d6d407e972c8243af862a438314d07063a3dca1","typeString":"literal_string \"Invalid RLP boolean value.\""},"value":"Invalid RLP boolean value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f8f0c9c05acf0cd50562c9d3d6d407e972c8243af862a438314d07063a3dca1","typeString":"literal_string \"Invalid RLP boolean value.\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5855:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5855:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":723,"nodeType":"ExpressionStatement","src":"5855:54:4"},{"assignments":[725],"declarations":[{"constant":false,"id":725,"mutability":"mutable","name":"ptr","nameLocation":"5928:3:4","nodeType":"VariableDeclaration","scope":748,"src":"5920:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint256","nodeType":"ElementaryTypeName","src":"5920:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":728,"initialValue":{"expression":{"id":726,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"5934:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5938:3:4","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":383,"src":"5934:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5920:21:4"},{"assignments":[730],"declarations":[{"constant":false,"id":730,"mutability":"mutable","name":"out","nameLocation":"5959:3:4","nodeType":"VariableDeclaration","scope":748,"src":"5951:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":729,"name":"uint256","nodeType":"ElementaryTypeName","src":"5951:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":731,"nodeType":"VariableDeclarationStatement","src":"5951:11:4"},{"AST":{"nodeType":"YulBlock","src":"5981:50:4","statements":[{"nodeType":"YulAssignment","src":"5995:26:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6007:1:4","type":"","value":"0"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6016:3:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6010:5:4"},"nodeType":"YulFunctionCall","src":"6010:10:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"6002:4:4"},"nodeType":"YulFunctionCall","src":"6002:19:4"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"5995:3:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":730,"isOffset":false,"isSlot":false,"src":"5995:3:4","valueSize":1},{"declaration":725,"isOffset":false,"isSlot":false,"src":"6016:3:4","valueSize":1}],"id":732,"nodeType":"InlineAssembly","src":"5972:59:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6049:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6056:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6049:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6061:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6061:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6049:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69625f524c505265616465723a20496e76616c696420524c5020626f6f6c65616e2076616c75652c206d7573742062652030206f722031","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6071:58:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_fde08809139da424e56770eb1214d54bfc635eebfb4310c90ffede9d9074c3c0","typeString":"literal_string \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\""},"value":"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fde08809139da424e56770eb1214d54bfc635eebfb4310c90ffede9d9074c3c0","typeString":"literal_string \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\""}],"id":733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6041:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6041:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":743,"nodeType":"ExpressionStatement","src":"6041:89:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":744,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"6148:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6155:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6148:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":715,"id":747,"nodeType":"Return","src":"6141:15:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"5655:118:4","text":" Reads an RLP bool value into a bool.\n @param _in RLP bool value.\n @return Decoded bool."},"id":749,"implemented":true,"kind":"function","modifiers":[],"name":"readBool","nameLocation":"5787:8:4","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"_in","nameLocation":"5811:3:4","nodeType":"VariableDeclaration","scope":749,"src":"5796:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":710,"nodeType":"UserDefinedTypeName","pathNode":{"id":709,"name":"RLPItem","nameLocations":["5796:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"5796:7:4"},"referencedDeclaration":384,"src":"5796:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"5795:20:4"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":749,"src":"5839:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":713,"name":"bool","nodeType":"ElementaryTypeName","src":"5839:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5838:6:4"},"scope":1104,"src":"5778:385:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"6357:48:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":759,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"6393:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":758,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"6383:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$384_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6383:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":757,"name":"readBool","nodeType":"Identifier","overloadedDeclarations":[749,764],"referencedDeclaration":749,"src":"6374:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bool_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bool)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":756,"id":762,"nodeType":"Return","src":"6367:31:4"}]},"documentation":{"id":750,"nodeType":"StructuredDocumentation","src":"6169:118:4","text":" Reads an RLP bool value into a bool.\n @param _in RLP bool value.\n @return Decoded bool."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"readBool","nameLocation":"6301:8:4","nodeType":"FunctionDefinition","parameters":{"id":753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":752,"mutability":"mutable","name":"_in","nameLocation":"6323:3:4","nodeType":"VariableDeclaration","scope":764,"src":"6310:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":751,"name":"bytes","nodeType":"ElementaryTypeName","src":"6310:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6309:18:4"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":764,"src":"6351:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":754,"name":"bool","nodeType":"ElementaryTypeName","src":"6351:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6350:6:4"},"scope":1104,"src":"6292:113:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":802,"nodeType":"Block","src":"6619:197:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":773,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6633:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6637:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"6633:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6647:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6633:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":783,"nodeType":"IfStatement","src":"6629:63:4","trueBody":{"id":782,"nodeType":"Block","src":"6650:42:4","statements":[{"expression":{"arguments":[{"hexValue":"30","id":779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6679:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6671:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"6671:7:4","typeDescriptions":{}}},"id":780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6671:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"6664:17:4"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":785,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6710:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6714:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"6710:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6724:2:4","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"6710:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020616464726573732076616c75652e","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6728:28:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3c570d87b7de672f933cbe715f40a3d65ef8c8e2e231b1b150ebbdb2d252b9f","typeString":"literal_string \"Invalid RLP address value.\""},"value":"Invalid RLP address value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3c570d87b7de672f933cbe715f40a3d65ef8c8e2e231b1b150ebbdb2d252b9f","typeString":"literal_string \"Invalid RLP address value.\""}],"id":784,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6702:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6702:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":791,"nodeType":"ExpressionStatement","src":"6702:55:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":797,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"6803:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":796,"name":"readUint256","nodeType":"Identifier","overloadedDeclarations":[692,707],"referencedDeclaration":692,"src":"6791:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (uint256)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6791:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6783:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":794,"name":"uint160","nodeType":"ElementaryTypeName","src":"6783:7:4","typeDescriptions":{}}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6783:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6775:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"6775:7:4","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6775:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":772,"id":801,"nodeType":"Return","src":"6768:41:4"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"6411:130:4","text":" Reads an RLP address value into a address.\n @param _in RLP address value.\n @return Decoded address."},"id":803,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"6555:11:4","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"_in","nameLocation":"6582:3:4","nodeType":"VariableDeclaration","scope":803,"src":"6567:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":767,"nodeType":"UserDefinedTypeName","pathNode":{"id":766,"name":"RLPItem","nameLocations":["6567:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"6567:7:4"},"referencedDeclaration":384,"src":"6567:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"6566:20:4"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"6610:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"6610:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6609:9:4"},"scope":1104,"src":"6546:270:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":817,"nodeType":"Block","src":"7028:51:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":813,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"7067:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":812,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"7057:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$384_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct Lib_RLPReader.RLPItem memory)"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7057:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":811,"name":"readAddress","nodeType":"Identifier","overloadedDeclarations":[803,818],"referencedDeclaration":803,"src":"7045:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_address_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (address)"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7045:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":810,"id":816,"nodeType":"Return","src":"7038:34:4"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"6822:130:4","text":" Reads an RLP address value into a address.\n @param _in RLP address value.\n @return Decoded address."},"id":818,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"6966:11:4","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"_in","nameLocation":"6991:3:4","nodeType":"VariableDeclaration","scope":818,"src":"6978:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":805,"name":"bytes","nodeType":"ElementaryTypeName","src":"6978:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6977:18:4"},"returnParameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"7019:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"7019:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7018:9:4"},"scope":1104,"src":"6957:122:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":831,"nodeType":"Block","src":"7289:34:4","statements":[{"expression":{"arguments":[{"id":828,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"7312:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}],"id":827,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[1085,1103],"referencedDeclaration":1103,"src":"7306:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$384_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct Lib_RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7306:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":826,"id":830,"nodeType":"Return","src":"7299:17:4"}]},"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"7085:120:4","text":" Reads the raw bytes of an RLP item.\n @param _in RLP item to read.\n @return Raw RLP bytes."},"id":832,"implemented":true,"kind":"function","modifiers":[],"name":"readRawBytes","nameLocation":"7219:12:4","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"_in","nameLocation":"7247:3:4","nodeType":"VariableDeclaration","scope":832,"src":"7232:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":821,"nodeType":"UserDefinedTypeName","pathNode":{"id":820,"name":"RLPItem","nameLocations":["7232:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"7232:7:4"},"referencedDeclaration":384,"src":"7232:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"7231:20:4"},"returnParameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":832,"src":"7275:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":824,"name":"bytes","nodeType":"ElementaryTypeName","src":"7275:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7274:14:4"},"scope":1104,"src":"7210:113:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1002,"nodeType":"Block","src":"7819:1978:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":847,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7837:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7841:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"7837:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7850:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7837:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"524c50206974656d2063616e6e6f74206265206e756c6c2e","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7853:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","typeString":"literal_string \"RLP item cannot be null.\""},"value":"RLP item cannot be null."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","typeString":"literal_string \"RLP item cannot be null.\""}],"id":846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7829:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7829:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"ExpressionStatement","src":"7829:51:4"},{"assignments":[855],"declarations":[{"constant":false,"id":855,"mutability":"mutable","name":"ptr","nameLocation":"7899:3:4","nodeType":"VariableDeclaration","scope":1002,"src":"7891:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"7891:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":858,"initialValue":{"expression":{"id":856,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"7905:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7909:3:4","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":383,"src":"7905:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7891:21:4"},{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"prefix","nameLocation":"7930:6:4","nodeType":"VariableDeclaration","scope":1002,"src":"7922:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"7922:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":861,"nodeType":"VariableDeclarationStatement","src":"7922:14:4"},{"AST":{"nodeType":"YulBlock","src":"7955:53:4","statements":[{"nodeType":"YulAssignment","src":"7969:29:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7984:1:4","type":"","value":"0"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7993:3:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7987:5:4"},"nodeType":"YulFunctionCall","src":"7987:10:4"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"7979:4:4"},"nodeType":"YulFunctionCall","src":"7979:19:4"},"variableNames":[{"name":"prefix","nodeType":"YulIdentifier","src":"7969:6:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":860,"isOffset":false,"isSlot":false,"src":"7969:6:4","valueSize":1},{"declaration":855,"isOffset":false,"isSlot":false,"src":"7993:3:4","valueSize":1}],"id":862,"nodeType":"InlineAssembly","src":"7946:62:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":863,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8022:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30783766","id":864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8032:4:4","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"0x7f"},"src":"8022:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":873,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8138:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30786237","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8148:4:4","typeDescriptions":{"typeIdentifier":"t_rational_183_by_1","typeString":"int_const 183"},"value":"0xb7"},"src":"8138:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8433:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30786266","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8443:4:4","typeDescriptions":{"typeIdentifier":"t_rational_191_by_1","typeString":"int_const 191"},"value":"0xbf"},"src":"8433:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":937,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8980:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30786637","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:4:4","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"0xf7"},"src":"8980:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":997,"nodeType":"Block","src":"9269:522:4","statements":[{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"lenOfListLen","nameLocation":"9317:12:4","nodeType":"VariableDeclaration","scope":997,"src":"9309:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"9309:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":966,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"9332:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786637","id":964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9341:4:4","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"0xf7"},"src":"9332:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9309:36:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":968,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"9368:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9372:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"9368:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":970,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"9381:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9368:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e67206c697374206c656e6774682e","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9395:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","typeString":"literal_string \"Invalid RLP long list length.\""},"value":"Invalid RLP long list length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","typeString":"literal_string \"Invalid RLP long list length.\""}],"id":967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9360:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9360:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"9360:67:4"},{"assignments":[976],"declarations":[{"constant":false,"id":976,"mutability":"mutable","name":"listLen","nameLocation":"9450:7:4","nodeType":"VariableDeclaration","scope":997,"src":"9442:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"9442:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":977,"nodeType":"VariableDeclarationStatement","src":"9442:15:4"},{"AST":{"nodeType":"YulBlock","src":"9480:144:4","statements":[{"nodeType":"YulAssignment","src":"9543:67:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9568:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"9573:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9564:3:4"},"nodeType":"YulFunctionCall","src":"9564:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9558:5:4"},"nodeType":"YulFunctionCall","src":"9558:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9582:3:4","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9591:2:4","type":"","value":"32"},{"name":"lenOfListLen","nodeType":"YulIdentifier","src":"9595:12:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9587:3:4"},"nodeType":"YulFunctionCall","src":"9587:21:4"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"9578:3:4"},"nodeType":"YulFunctionCall","src":"9578:31:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9554:3:4"},"nodeType":"YulFunctionCall","src":"9554:56:4"},"variableNames":[{"name":"listLen","nodeType":"YulIdentifier","src":"9543:7:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":962,"isOffset":false,"isSlot":false,"src":"9595:12:4","valueSize":1},{"declaration":976,"isOffset":false,"isSlot":false,"src":"9543:7:4","valueSize":1},{"declaration":855,"isOffset":false,"isSlot":false,"src":"9568:3:4","valueSize":1}],"id":978,"nodeType":"InlineAssembly","src":"9471:153:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":980,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"9646:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9650:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"9646:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"9659:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":983,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"9674:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9659:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9646:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e67206c6973742e","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9683:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","typeString":"literal_string \"Invalid RLP long list.\""},"value":"Invalid RLP long list."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","typeString":"literal_string \"Invalid RLP long list.\""}],"id":979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9638:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9638:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"9638:70:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9731:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":990,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"9735:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9731:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":992,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":976,"src":"9749:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":993,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9758:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9770:9:4","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":378,"src":"9758:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}}],"id":995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9730:50:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"functionReturnParameters":845,"id":996,"nodeType":"Return","src":"9723:57:4"}]},"id":998,"nodeType":"IfStatement","src":"8976:815:4","trueBody":{"id":960,"nodeType":"Block","src":"8996:267:4","statements":[{"assignments":[941],"declarations":[{"constant":false,"id":941,"mutability":"mutable","name":"listLen","nameLocation":"9101:7:4","nodeType":"VariableDeclaration","scope":960,"src":"9093:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"9093:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":945,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":942,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"9111:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786330","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9120:4:4","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"0xc0"},"src":"9111:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9093:31:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":947,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"9147:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9151:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"9147:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":949,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"9160:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9147:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502073686f7274206c6973742e","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9169:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","typeString":"literal_string \"Invalid RLP short list.\""},"value":"Invalid RLP short list."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","typeString":"literal_string \"Invalid RLP short list.\""}],"id":946,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9139:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9139:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":953,"nodeType":"ExpressionStatement","src":"9139:56:4"},{"expression":{"components":[{"hexValue":"31","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9218:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":955,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"9221:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":956,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"9230:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9242:9:4","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":378,"src":"9230:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}}],"id":958,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9217:35:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(int_const 1,uint256,enum Lib_RLPReader.RLPItemType)"}},"functionReturnParameters":845,"id":959,"nodeType":"Return","src":"9210:42:4"}]}},"id":999,"nodeType":"IfStatement","src":"8429:1362:4","trueBody":{"id":936,"nodeType":"Block","src":"8449:521:4","statements":[{"assignments":[901],"declarations":[{"constant":false,"id":901,"mutability":"mutable","name":"lenOfStrLen","nameLocation":"8499:11:4","nodeType":"VariableDeclaration","scope":936,"src":"8491:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"8491:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":905,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":902,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8513:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786237","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:4:4","typeDescriptions":{"typeIdentifier":"t_rational_183_by_1","typeString":"int_const 183"},"value":"0xb7"},"src":"8513:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8491:35:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":907,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"8549:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":908,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8553:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"8549:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":909,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"8562:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8549:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8575:33:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","typeString":"literal_string \"Invalid RLP long string length.\""},"value":"Invalid RLP long string length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","typeString":"literal_string \"Invalid RLP long string length.\""}],"id":906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8541:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8541:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"8541:68:4"},{"assignments":[915],"declarations":[{"constant":false,"id":915,"mutability":"mutable","name":"strLen","nameLocation":"8632:6:4","nodeType":"VariableDeclaration","scope":936,"src":"8624:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"8624:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":916,"nodeType":"VariableDeclarationStatement","src":"8624:14:4"},{"AST":{"nodeType":"YulBlock","src":"8661:144:4","statements":[{"nodeType":"YulAssignment","src":"8726:65:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8750:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"8755:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8746:3:4"},"nodeType":"YulFunctionCall","src":"8746:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8740:5:4"},"nodeType":"YulFunctionCall","src":"8740:18:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8764:3:4","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8773:2:4","type":"","value":"32"},{"name":"lenOfStrLen","nodeType":"YulIdentifier","src":"8777:11:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8769:3:4"},"nodeType":"YulFunctionCall","src":"8769:20:4"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8760:3:4"},"nodeType":"YulFunctionCall","src":"8760:30:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8736:3:4"},"nodeType":"YulFunctionCall","src":"8736:55:4"},"variableNames":[{"name":"strLen","nodeType":"YulIdentifier","src":"8726:6:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":901,"isOffset":false,"isSlot":false,"src":"8777:11:4","valueSize":1},{"declaration":855,"isOffset":false,"isSlot":false,"src":"8750:3:4","valueSize":1},{"declaration":915,"isOffset":false,"isSlot":false,"src":"8726:6:4","valueSize":1}],"id":917,"nodeType":"InlineAssembly","src":"8652:153:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":919,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"8827:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8831:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"8827:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":921,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"8840:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":922,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"8854:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8840:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8827:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e672e","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8862:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","typeString":"literal_string \"Invalid RLP long string.\""},"value":"Invalid RLP long string."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","typeString":"literal_string \"Invalid RLP long string.\""}],"id":918,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8819:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8819:70:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":927,"nodeType":"ExpressionStatement","src":"8819:70:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8912:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":929,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"8916:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8912:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":931,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"8929:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":932,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"8937:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8949:9:4","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":377,"src":"8937:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}}],"id":934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8911:48:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(uint256,uint256,enum Lib_RLPReader.RLPItemType)"}},"functionReturnParameters":845,"id":935,"nodeType":"Return","src":"8904:55:4"}]}},"id":1000,"nodeType":"IfStatement","src":"8134:1657:4","trueBody":{"id":896,"nodeType":"Block","src":"8154:269:4","statements":[{"assignments":[877],"declarations":[{"constant":false,"id":877,"mutability":"mutable","name":"strLen","nameLocation":"8262:6:4","nodeType":"VariableDeclaration","scope":896,"src":"8254:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8254:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":881,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"8271:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30783830","id":879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8280:4:4","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"8271:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8254:30:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":883,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"8307:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8311:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"8307:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":885,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8320:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8307:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502073686f727420737472696e672e","id":887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8328:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","typeString":"literal_string \"Invalid RLP short string.\""},"value":"Invalid RLP short string."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","typeString":"literal_string \"Invalid RLP short string.\""}],"id":882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8299:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8299:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":889,"nodeType":"ExpressionStatement","src":"8299:57:4"},{"expression":{"components":[{"hexValue":"31","id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8379:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":891,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"8382:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":892,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"8390:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8402:9:4","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":377,"src":"8390:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}}],"id":894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8378:34:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_uint256_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(int_const 1,uint256,enum Lib_RLPReader.RLPItemType)"}},"functionReturnParameters":845,"id":895,"nodeType":"Return","src":"8371:41:4"}]}},"id":1001,"nodeType":"IfStatement","src":"8018:1773:4","trueBody":{"id":872,"nodeType":"Block","src":"8038:90:4","statements":[{"expression":{"components":[{"hexValue":"30","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8089:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"31","id":867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8092:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"expression":{"id":868,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"8095:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$379_$","typeString":"type(enum Lib_RLPReader.RLPItemType)"}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8107:9:4","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":377,"src":"8095:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}}],"id":870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8088:29:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_1_by_1_$_t_enum$_RLPItemType_$379_$","typeString":"tuple(int_const 0,int_const 1,enum Lib_RLPReader.RLPItemType)"}},"functionReturnParameters":845,"id":871,"nodeType":"Return","src":"8081:36:4"}]}}]},"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"7412:232:4","text":" Decodes the length of an RLP item.\n @param _in RLP item to decode.\n @return Offset of the encoded data.\n @return Length of the encoded data.\n @return RLP item type (LIST_ITEM or DATA_ITEM)."},"id":1003,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeLength","nameLocation":"7658:13:4","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"_in","nameLocation":"7687:3:4","nodeType":"VariableDeclaration","scope":1003,"src":"7672:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":835,"nodeType":"UserDefinedTypeName","pathNode":{"id":834,"name":"RLPItem","nameLocations":["7672:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"7672:7:4"},"referencedDeclaration":384,"src":"7672:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"7671:20:4"},"returnParameters":{"id":845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"7751:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"7751:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"7772:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"7772:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1003,"src":"7793:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"},"typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"RLPItemType","nameLocations":["7793:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"7793:11:4"},"referencedDeclaration":379,"src":"7793:11:4","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$379","typeString":"enum Lib_RLPReader.RLPItemType"}},"visibility":"internal"}],"src":"7737:77:4"},"scope":1104,"src":"7649:2148:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1084,"nodeType":"Block","src":"10181:763:4","statements":[{"assignments":[1016],"declarations":[{"constant":false,"id":1016,"mutability":"mutable","name":"out","nameLocation":"10204:3:4","nodeType":"VariableDeclaration","scope":1084,"src":"10191:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1015,"name":"bytes","nodeType":"ElementaryTypeName","src":"10191:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1021,"initialValue":{"arguments":[{"id":1019,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10220:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10210:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"10214:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10210:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10191:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1022,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"10242:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10246:6:4","memberName":"length","nodeType":"MemberAccess","src":"10242:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10256:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10242:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1029,"nodeType":"IfStatement","src":"10238:56:4","trueBody":{"id":1028,"nodeType":"Block","src":"10259:35:4","statements":[{"expression":{"id":1026,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"10280:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1014,"id":1027,"nodeType":"Return","src":"10273:10:4"}]}},{"assignments":[1031],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"src","nameLocation":"10312:3:4","nodeType":"VariableDeclaration","scope":1084,"src":"10304:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"10304:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1035,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1032,"name":"_src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"10318:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1033,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"10325:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10318:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10304:28:4"},{"assignments":[1037],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"dest","nameLocation":"10350:4:4","nodeType":"VariableDeclaration","scope":1084,"src":"10342:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"10342:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1038,"nodeType":"VariableDeclarationStatement","src":"10342:12:4"},{"AST":{"nodeType":"YulBlock","src":"10373:44:4","statements":[{"nodeType":"YulAssignment","src":"10387:20:4","value":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"10399:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"10404:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10395:3:4"},"nodeType":"YulFunctionCall","src":"10395:12:4"},"variableNames":[{"name":"dest","nodeType":"YulIdentifier","src":"10387:4:4"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1037,"isOffset":false,"isSlot":false,"src":"10387:4:4","valueSize":1},{"declaration":1016,"isOffset":false,"isSlot":false,"src":"10399:3:4","valueSize":1}],"id":1039,"nodeType":"InlineAssembly","src":"10364:53:4"},{"body":{"id":1061,"nodeType":"Block","src":"10525:137:4","statements":[{"AST":{"nodeType":"YulBlock","src":"10548:56:4","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"10573:4:4"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10585:3:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10579:5:4"},"nodeType":"YulFunctionCall","src":"10579:10:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10566:6:4"},"nodeType":"YulFunctionCall","src":"10566:24:4"},"nodeType":"YulExpressionStatement","src":"10566:24:4"}]},"evmVersion":"london","externalReferences":[{"declaration":1037,"isOffset":false,"isSlot":false,"src":"10573:4:4","valueSize":1},{"declaration":1031,"isOffset":false,"isSlot":false,"src":"10585:3:4","valueSize":1}],"id":1052,"nodeType":"InlineAssembly","src":"10539:65:4"},{"expression":{"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1053,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"10618:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10625:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10618:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1056,"nodeType":"ExpressionStatement","src":"10618:9:4"},{"expression":{"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1057,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"10641:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10649:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10641:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1060,"nodeType":"ExpressionStatement","src":"10641:10:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1044,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"10502:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1045,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10506:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3332","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10516:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10506:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10502:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1062,"initializationExpression":{"assignments":[1041],"declarations":[{"constant":false,"id":1041,"mutability":"mutable","name":"i","nameLocation":"10495:1:4","nodeType":"VariableDeclaration","scope":1062,"src":"10487:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"10487:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1043,"initialValue":{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10499:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10487:13:4"},"loopExpression":{"expression":{"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10520:3:4","subExpression":{"id":1049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"10520:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1051,"nodeType":"ExpressionStatement","src":"10520:3:4"},"nodeType":"ForStatement","src":"10482:180:4"},{"assignments":[1064],"declarations":[{"constant":false,"id":1064,"mutability":"mutable","name":"mask","nameLocation":"10721:4:4","nodeType":"VariableDeclaration","scope":1084,"src":"10713:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1065,"nodeType":"VariableDeclarationStatement","src":"10713:12:4"},{"id":1080,"nodeType":"UncheckedBlock","src":"10735:72:4","statements":[{"expression":{"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1066,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"10759:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10766:3:4","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10772:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"10778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10788:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10778:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10777:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10772:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10771:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10766:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10795:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10766:30:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10759:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1079,"nodeType":"ExpressionStatement","src":"10759:37:4"}]},{"AST":{"nodeType":"YulBlock","src":"10826:92:4","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"10847:4:4"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10866:3:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10860:5:4"},"nodeType":"YulFunctionCall","src":"10860:10:4"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"10876:4:4"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10872:3:4"},"nodeType":"YulFunctionCall","src":"10872:9:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10856:3:4"},"nodeType":"YulFunctionCall","src":"10856:26:4"},{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"10894:4:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10888:5:4"},"nodeType":"YulFunctionCall","src":"10888:11:4"},{"name":"mask","nodeType":"YulIdentifier","src":"10901:4:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10884:3:4"},"nodeType":"YulFunctionCall","src":"10884:22:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"10853:2:4"},"nodeType":"YulFunctionCall","src":"10853:54:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10840:6:4"},"nodeType":"YulFunctionCall","src":"10840:68:4"},"nodeType":"YulExpressionStatement","src":"10840:68:4"}]},"evmVersion":"london","externalReferences":[{"declaration":1037,"isOffset":false,"isSlot":false,"src":"10847:4:4","valueSize":1},{"declaration":1037,"isOffset":false,"isSlot":false,"src":"10894:4:4","valueSize":1},{"declaration":1064,"isOffset":false,"isSlot":false,"src":"10876:4:4","valueSize":1},{"declaration":1064,"isOffset":false,"isSlot":false,"src":"10901:4:4","valueSize":1},{"declaration":1031,"isOffset":false,"isSlot":false,"src":"10866:3:4","valueSize":1}],"id":1081,"nodeType":"InlineAssembly","src":"10817:101:4"},{"expression":{"id":1082,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"10934:3:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1014,"id":1083,"nodeType":"Return","src":"10927:10:4"}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"9803:244:4","text":" Copies the bytes from a memory location.\n @param _src Pointer to the location to read from.\n @param _offset Offset to start reading from.\n @param _length Number of bytes to read.\n @return Copied bytes."},"id":1085,"implemented":true,"kind":"function","modifiers":[],"name":"_copy","nameLocation":"10061:5:4","nodeType":"FunctionDefinition","parameters":{"id":1011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"_src","nameLocation":"10084:4:4","nodeType":"VariableDeclaration","scope":1085,"src":"10076:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"10076:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"_offset","nameLocation":"10106:7:4","nodeType":"VariableDeclaration","scope":1085,"src":"10098:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"10098:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"_length","nameLocation":"10131:7:4","nodeType":"VariableDeclaration","scope":1085,"src":"10123:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"10123:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10066:78:4"},"returnParameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1085,"src":"10167:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1012,"name":"bytes","nodeType":"ElementaryTypeName","src":"10167:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10166:14:4"},"scope":1104,"src":"10052:892:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1102,"nodeType":"Block","src":"11140:53:4","statements":[{"expression":{"arguments":[{"expression":{"id":1095,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"11163:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":1096,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11167:3:4","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":383,"src":"11163:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11172:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1098,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"11175:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem memory"}},"id":1099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11179:6:4","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":381,"src":"11175:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1094,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[1085,1103],"referencedDeclaration":1085,"src":"11157:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes memory)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11157:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1093,"id":1101,"nodeType":"Return","src":"11150:36:4"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"10950:114:4","text":" Copies an RLP item into bytes.\n @param _in RLP item to copy.\n @return Copied bytes."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"_copy","nameLocation":"11078:5:4","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"_in","nameLocation":"11099:3:4","nodeType":"VariableDeclaration","scope":1103,"src":"11084:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_memory_ptr","typeString":"struct Lib_RLPReader.RLPItem"},"typeName":{"id":1088,"nodeType":"UserDefinedTypeName","pathNode":{"id":1087,"name":"RLPItem","nameLocations":["11084:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"11084:7:4"},"referencedDeclaration":384,"src":"11084:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$384_storage_ptr","typeString":"struct Lib_RLPReader.RLPItem"}},"visibility":"internal"}],"src":"11083:20:4"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1103,"src":"11126:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1091,"name":"bytes","nodeType":"ElementaryTypeName","src":"11126:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11125:14:4"},"scope":1104,"src":"11069:124:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1105,"src":"164:11031:4","usedErrors":[]}],"src":"32:11164:4"},"id":4},"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol","exportedSymbols":{"Lib_RLPWriter":[1611]},"id":1612,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1106,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Lib_RLPWriter","contractDependencies":[],"contractKind":"library","documentation":{"id":1107,"nodeType":"StructuredDocumentation","src":"57:70:5","text":" @title Lib_RLPWriter\n @author Bakaoh (with modifications)"},"fullyImplemented":true,"id":1611,"linearizedBaseContracts":[1611],"name":"Lib_RLPWriter","nameLocation":"136:13:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1152,"nodeType":"Block","src":"460:247:5","statements":[{"assignments":[1116],"declarations":[{"constant":false,"id":1116,"mutability":"mutable","name":"encoded","nameLocation":"483:7:5","nodeType":"VariableDeclaration","scope":1152,"src":"470:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1115,"name":"bytes","nodeType":"ElementaryTypeName","src":"470:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1117,"nodeType":"VariableDeclarationStatement","src":"470:20:5"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1118,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"505:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"509:6:5","memberName":"length","nodeType":"MemberAccess","src":"505:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"519:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"505:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1124,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"530:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1126,"indexExpression":{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"534:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"530:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"524:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1122,"name":"uint8","nodeType":"ElementaryTypeName","src":"524:5:5","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"524:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313238","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"540:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"524:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"505:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1148,"nodeType":"Block","src":"589:87:5","statements":[{"expression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1136,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"603:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":1140,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"643:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"647:6:5","memberName":"length","nodeType":"MemberAccess","src":"643:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313238","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"655:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":1139,"name":"_writeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"630:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (bytes memory)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"630:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1144,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"661:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1137,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"613:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"617:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"613:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"613:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"603:62:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1147,"nodeType":"ExpressionStatement","src":"603:62:5"}]},"id":1149,"nodeType":"IfStatement","src":"501:175:5","trueBody":{"id":1135,"nodeType":"Block","src":"545:38:5","statements":[{"expression":{"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1131,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"559:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1132,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"569:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"559:13:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1134,"nodeType":"ExpressionStatement","src":"559:13:5"}]}},{"expression":{"id":1150,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"693:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1114,"id":1151,"nodeType":"Return","src":"686:14:5"}]},"documentation":{"id":1108,"nodeType":"StructuredDocumentation","src":"242:138:5","text":" RLP encodes a byte string.\n @param _in The byte string to encode.\n @return The RLP encoded string in bytes."},"id":1153,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes","nameLocation":"394:10:5","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"_in","nameLocation":"418:3:5","nodeType":"VariableDeclaration","scope":1153,"src":"405:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"405:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"404:18:5"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1153,"src":"446:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1112,"name":"bytes","nodeType":"ElementaryTypeName","src":"446:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"445:14:5"},"scope":1611,"src":"385:322:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1178,"nodeType":"Block","src":"976:121:5","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"list","nameLocation":"999:4:5","nodeType":"VariableDeclaration","scope":1178,"src":"986:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1162,"name":"bytes","nodeType":"ElementaryTypeName","src":"986:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1167,"initialValue":{"arguments":[{"id":1165,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"1015:3:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}],"id":1164,"name":"_flatten","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"1006:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory[] memory) pure returns (bytes memory)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1006:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"986:33:5"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1171,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1066:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1071:6:5","memberName":"length","nodeType":"MemberAccess","src":"1066:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"313932","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1079:3:5","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}],"id":1170,"name":"_writeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"1053:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (bytes memory)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1053:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1175,"name":"list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"1085:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1168,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1036:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1040:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1036:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1036:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1161,"id":1177,"nodeType":"Return","src":"1029:61:5"}]},"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"713:182:5","text":" RLP encodes a list of RLP encoded byte byte strings.\n @param _in The list of RLP encoded byte strings.\n @return The RLP encoded list of items in bytes."},"id":1179,"implemented":true,"kind":"function","modifiers":[],"name":"writeList","nameLocation":"909:9:5","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"_in","nameLocation":"934:3:5","nodeType":"VariableDeclaration","scope":1179,"src":"919:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"919:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1156,"nodeType":"ArrayTypeName","src":"919:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"918:20:5"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1179,"src":"962:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1159,"name":"bytes","nodeType":"ElementaryTypeName","src":"962:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"961:14:5"},"scope":1611,"src":"900:197:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"1313:46:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1190,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"1347:3:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1341:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1188,"name":"bytes","nodeType":"ElementaryTypeName","src":"1341:5:5","typeDescriptions":{}}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1341:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1187,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1330:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1186,"id":1193,"nodeType":"Return","src":"1323:29:5"}]},"documentation":{"id":1180,"nodeType":"StructuredDocumentation","src":"1103:128:5","text":" RLP encodes a string.\n @param _in The string to encode.\n @return The RLP encoded string in bytes."},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"writeString","nameLocation":"1245:11:5","nodeType":"FunctionDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"_in","nameLocation":"1271:3:5","nodeType":"VariableDeclaration","scope":1195,"src":"1257:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1181,"name":"string","nodeType":"ElementaryTypeName","src":"1257:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1256:19:5"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1195,"src":"1299:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1184,"name":"bytes","nodeType":"ElementaryTypeName","src":"1299:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1298:14:5"},"scope":1611,"src":"1236:123:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"1574:57:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1206,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"1619:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1204,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1602:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1606:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"1602:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1602:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1203,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1591:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1591:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1202,"id":1209,"nodeType":"Return","src":"1584:40:5"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"1365:132:5","text":" RLP encodes an address.\n @param _in The address to encode.\n @return The RLP encoded address in bytes."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"writeAddress","nameLocation":"1511:12:5","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"_in","nameLocation":"1532:3:5","nodeType":"VariableDeclaration","scope":1211,"src":"1524:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1523:13:5"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1211,"src":"1560:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1200,"name":"bytes","nodeType":"ElementaryTypeName","src":"1560:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1559:14:5"},"scope":1611,"src":"1502:129:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"1839:50:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1221,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"1877:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1220,"name":"_toBinary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1459,"src":"1867:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1867:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1219,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"1856:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1856:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1218,"id":1224,"nodeType":"Return","src":"1849:33:5"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"1637:128:5","text":" RLP encodes a uint.\n @param _in The uint256 to encode.\n @return The RLP encoded uint256 in bytes."},"id":1226,"implemented":true,"kind":"function","modifiers":[],"name":"writeUint","nameLocation":"1779:9:5","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"_in","nameLocation":"1797:3:5","nodeType":"VariableDeclaration","scope":1226,"src":"1789:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1789:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1788:13:5"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1226,"src":"1825:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1216,"name":"bytes","nodeType":"ElementaryTypeName","src":"1825:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1824:14:5"},"scope":1611,"src":"1770:119:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1259,"nodeType":"Block","src":"2088:134:5","statements":[{"assignments":[1235],"declarations":[{"constant":false,"id":1235,"mutability":"mutable","name":"encoded","nameLocation":"2111:7:5","nodeType":"VariableDeclaration","scope":1259,"src":"2098:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1234,"name":"bytes","nodeType":"ElementaryTypeName","src":"2098:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1240,"initialValue":{"arguments":[{"hexValue":"31","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2131:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2121:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1236,"name":"bytes","nodeType":"ElementaryTypeName","src":"2125:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2121:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2098:35:5"},{"expression":{"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1241,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2143:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1243,"indexExpression":{"hexValue":"30","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2151:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2143:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"condition":{"id":1244,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2157:3:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"30783830","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2185:4:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2178:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1249,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2178:6:5","typeDescriptions":{}}},"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2157:33:5","trueExpression":{"arguments":[{"hexValue":"30783031","id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2170:4:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2163:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2163:6:5","typeDescriptions":{}}},"id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":1254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2156:35:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2143:48:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1256,"nodeType":"ExpressionStatement","src":"2143:48:5"},{"expression":{"id":1257,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1235,"src":"2208:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1233,"id":1258,"nodeType":"Return","src":"2201:14:5"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"1895:122:5","text":" RLP encodes a bool.\n @param _in The bool to encode.\n @return The RLP encoded bool in bytes."},"id":1260,"implemented":true,"kind":"function","modifiers":[],"name":"writeBool","nameLocation":"2031:9:5","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"_in","nameLocation":"2046:3:5","nodeType":"VariableDeclaration","scope":1260,"src":"2041:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1228,"name":"bool","nodeType":"ElementaryTypeName","src":"2041:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2040:10:5"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1260,"src":"2074:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1231,"name":"bytes","nodeType":"ElementaryTypeName","src":"2074:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2073:14:5"},"scope":1611,"src":"2022:200:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1389,"nodeType":"Block","src":"2672:625:5","statements":[{"assignments":[1271],"declarations":[{"constant":false,"id":1271,"mutability":"mutable","name":"encoded","nameLocation":"2695:7:5","nodeType":"VariableDeclaration","scope":1389,"src":"2682:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1270,"name":"bytes","nodeType":"ElementaryTypeName","src":"2682:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1272,"nodeType":"VariableDeclarationStatement","src":"2682:20:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1273,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2717:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3536","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2724:2:5","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},"src":"2717:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1385,"nodeType":"Block","src":"2844:422:5","statements":[{"assignments":[1302],"declarations":[{"constant":false,"id":1302,"mutability":"mutable","name":"lenLen","nameLocation":"2866:6:5","nodeType":"VariableDeclaration","scope":1385,"src":"2858:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1303,"nodeType":"VariableDeclarationStatement","src":"2858:14:5"},{"assignments":[1305],"declarations":[{"constant":false,"id":1305,"mutability":"mutable","name":"i","nameLocation":"2894:1:5","nodeType":"VariableDeclaration","scope":1385,"src":"2886:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1304,"name":"uint256","nodeType":"ElementaryTypeName","src":"2886:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1307,"initialValue":{"hexValue":"31","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2898:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"2886:13:5"},{"body":{"id":1320,"nodeType":"Block","src":"2935:67:5","statements":[{"expression":{"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2953:8:5","subExpression":{"id":1313,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"2953:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1315,"nodeType":"ExpressionStatement","src":"2953:8:5"},{"expression":{"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1316,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"2979:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"323536","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2984:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"2979:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1319,"nodeType":"ExpressionStatement","src":"2979:8:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2920:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"2927:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2920:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2932:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2920:13:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1321,"nodeType":"WhileStatement","src":"2913:89:5"},{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1322,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3016:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1325,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3036:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3045:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3036:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3026:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1323,"name":"bytes","nodeType":"ElementaryTypeName","src":"3030:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3026:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"3016:31:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1330,"nodeType":"ExpressionStatement","src":"3016:31:5"},{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1331,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3061:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1333,"indexExpression":{"hexValue":"30","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3069:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3061:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1338,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3087:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3081:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1336,"name":"uint8","nodeType":"ElementaryTypeName","src":"3081:5:5","typeDescriptions":{}}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3081:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1342,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"3103:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3097:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1340,"name":"uint8","nodeType":"ElementaryTypeName","src":"3097:5:5","typeDescriptions":{}}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3097:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3081:30:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3535","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3114:2:5","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"3081:35:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3074:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1334,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3074:6:5","typeDescriptions":{}}},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3074:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3061:56:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1349,"nodeType":"ExpressionStatement","src":"3061:56:5"},{"body":{"id":1383,"nodeType":"Block","src":"3161:95:5","statements":[{"expression":{"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1360,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3179:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1362,"indexExpression":{"id":1361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"3187:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3179:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1367,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"3206:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1369,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3220:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"3229:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3220:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3219:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3214:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1374,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3213:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1376,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3205:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"323536","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3236:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"3205:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3199:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1365,"name":"uint8","nodeType":"ElementaryTypeName","src":"3199:5:5","typeDescriptions":{}}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3192:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1363,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3192:6:5","typeDescriptions":{}}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3192:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3179:62:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1382,"nodeType":"ExpressionStatement","src":"3179:62:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"3143:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1355,"name":"lenLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"3148:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3143:11:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1384,"initializationExpression":{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"3136:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3140:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3136:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"3136:5:5"},"loopExpression":{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3156:3:5","subExpression":{"id":1357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"3156:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1359,"nodeType":"ExpressionStatement","src":"3156:3:5"},"nodeType":"ForStatement","src":"3131:125:5"}]},"id":1386,"nodeType":"IfStatement","src":"2713:553:5","trueBody":{"id":1300,"nodeType":"Block","src":"2728:110:5","statements":[{"expression":{"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1276,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"2742:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"31","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2752:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"2756:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2752:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"2742:22:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1282,"nodeType":"ExpressionStatement","src":"2742:22:5"},{"expression":{"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1283,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"2778:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1285,"indexExpression":{"hexValue":"30","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2786:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2778:10:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1290,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"2804:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2798:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1288,"name":"uint8","nodeType":"ElementaryTypeName","src":"2798:5:5","typeDescriptions":{}}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2798:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":1294,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"2818:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2812:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1292,"name":"uint8","nodeType":"ElementaryTypeName","src":"2812:5:5","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2812:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2798:28:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1286,"name":"bytes1","nodeType":"ElementaryTypeName","src":"2791:6:5","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2778:49:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1299,"nodeType":"ExpressionStatement","src":"2778:49:5"}]}},{"expression":{"id":1387,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3283:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1269,"id":1388,"nodeType":"Return","src":"3276:14:5"}]},"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"2311:267:5","text":" Encode the first byte, followed by the `len` in binary form if `length` is more than 55.\n @param _len The length of the string or the payload.\n @param _offset 128 if item is string, 192 if item is list.\n @return RLP encoded bytes."},"id":1390,"implemented":true,"kind":"function","modifiers":[],"name":"_writeLength","nameLocation":"2592:12:5","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"_len","nameLocation":"2613:4:5","nodeType":"VariableDeclaration","scope":1390,"src":"2605:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"_offset","nameLocation":"2627:7:5","nodeType":"VariableDeclaration","scope":1390,"src":"2619:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"2619:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2604:31:5"},"returnParameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1390,"src":"2658:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1267,"name":"bytes","nodeType":"ElementaryTypeName","src":"2658:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2657:14:5"},"scope":1611,"src":"2583:714:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1458,"nodeType":"Block","src":"3611:342:5","statements":[{"assignments":[1399],"declarations":[{"constant":false,"id":1399,"mutability":"mutable","name":"b","nameLocation":"3634:1:5","nodeType":"VariableDeclaration","scope":1458,"src":"3621:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1398,"name":"bytes","nodeType":"ElementaryTypeName","src":"3621:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1404,"initialValue":{"arguments":[{"id":1402,"name":"_x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"3655:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1400,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3638:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3642:12:5","memberName":"encodePacked","nodeType":"MemberAccess","src":"3638:16:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3638:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3621:37:5"},{"assignments":[1406],"declarations":[{"constant":false,"id":1406,"mutability":"mutable","name":"i","nameLocation":"3677:1:5","nodeType":"VariableDeclaration","scope":1458,"src":"3669:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3669:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1408,"initialValue":{"hexValue":"30","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3669:13:5"},{"body":{"id":1423,"nodeType":"Block","src":"3712:77:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1415,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"3730:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1417,"indexExpression":{"id":1416,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"3732:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3730:4:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3738:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3730:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1422,"nodeType":"IfStatement","src":"3726:53:5","trueBody":{"id":1421,"nodeType":"Block","src":"3741:38:5","statements":[{"id":1420,"nodeType":"Break","src":"3759:5:5"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"3699:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3703:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3699:6:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1424,"loopExpression":{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3707:3:5","subExpression":{"id":1412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"3707:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1414,"nodeType":"ExpressionStatement","src":"3707:3:5"},"nodeType":"ForStatement","src":"3692:97:5"},{"assignments":[1426],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"res","nameLocation":"3812:3:5","nodeType":"VariableDeclaration","scope":1458,"src":"3799:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1425,"name":"bytes","nodeType":"ElementaryTypeName","src":"3799:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1433,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3828:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1430,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"3833:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3828:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3818:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1427,"name":"bytes","nodeType":"ElementaryTypeName","src":"3822:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3818:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3799:36:5"},{"body":{"id":1454,"nodeType":"Block","src":"3886:40:5","statements":[{"expression":{"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1445,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3900:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1447,"indexExpression":{"id":1446,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3904:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3900:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1448,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"3909:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1451,"indexExpression":{"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3911:3:5","subExpression":{"id":1449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"3911:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3909:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3900:15:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1453,"nodeType":"ExpressionStatement","src":"3900:15:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3865:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1439,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3869:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:6:5","memberName":"length","nodeType":"MemberAccess","src":"3869:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3865:14:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"initializationExpression":{"assignments":[1435],"declarations":[{"constant":false,"id":1435,"mutability":"mutable","name":"j","nameLocation":"3858:1:5","nodeType":"VariableDeclaration","scope":1455,"src":"3850:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"3850:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1437,"initialValue":{"hexValue":"30","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3862:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3850:13:5"},"loopExpression":{"expression":{"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3881:3:5","subExpression":{"id":1442,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"3881:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1444,"nodeType":"ExpressionStatement","src":"3881:3:5"},"nodeType":"ForStatement","src":"3845:81:5"},{"expression":{"id":1456,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"3943:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1397,"id":1457,"nodeType":"Return","src":"3936:10:5"}]},"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"3303:236:5","text":" Encode integer in big endian binary form with no leading zeroes.\n @notice TODO: This should be optimized with assembly to save gas costs.\n @param _x The integer to encode.\n @return RLP encoded bytes."},"id":1459,"implemented":true,"kind":"function","modifiers":[],"name":"_toBinary","nameLocation":"3553:9:5","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"_x","nameLocation":"3571:2:5","nodeType":"VariableDeclaration","scope":1459,"src":"3563:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3563:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3562:12:5"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1459,"src":"3597:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1395,"name":"bytes","nodeType":"ElementaryTypeName","src":"3597:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3596:14:5"},"scope":1611,"src":"3544:409:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1515,"nodeType":"Block","src":"4353:543:5","statements":[{"assignments":[1470],"declarations":[{"constant":false,"id":1470,"mutability":"mutable","name":"dest","nameLocation":"4371:4:5","nodeType":"VariableDeclaration","scope":1515,"src":"4363:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4363:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1472,"initialValue":{"id":1471,"name":"_dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1462,"src":"4378:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4363:20:5"},{"assignments":[1474],"declarations":[{"constant":false,"id":1474,"mutability":"mutable","name":"src","nameLocation":"4401:3:5","nodeType":"VariableDeclaration","scope":1515,"src":"4393:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"4393:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1476,"initialValue":{"id":1475,"name":"_src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"4407:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4393:18:5"},{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"len","nameLocation":"4429:3:5","nodeType":"VariableDeclaration","scope":1515,"src":"4421:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4421:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"initialValue":{"id":1479,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"4435:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4421:18:5"},{"body":{"id":1497,"nodeType":"Block","src":"4479:136:5","statements":[{"AST":{"nodeType":"YulBlock","src":"4502:56:5","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4527:4:5"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4539:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4533:5:5"},"nodeType":"YulFunctionCall","src":"4533:10:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4520:6:5"},"nodeType":"YulFunctionCall","src":"4520:24:5"},"nodeType":"YulExpressionStatement","src":"4520:24:5"}]},"evmVersion":"london","externalReferences":[{"declaration":1470,"isOffset":false,"isSlot":false,"src":"4527:4:5","valueSize":1},{"declaration":1474,"isOffset":false,"isSlot":false,"src":"4539:3:5","valueSize":1}],"id":1488,"nodeType":"InlineAssembly","src":"4493:65:5"},{"expression":{"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1489,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"4571:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4579:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4571:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1492,"nodeType":"ExpressionStatement","src":"4571:10:5"},{"expression":{"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1493,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"4595:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4602:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4595:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1496,"nodeType":"ExpressionStatement","src":"4595:9:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4457:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4464:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4457:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1498,"loopExpression":{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1484,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4468:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4475:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4468:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"4468:9:5"},"nodeType":"ForStatement","src":"4450:165:5"},{"assignments":[1500],"declarations":[{"constant":false,"id":1500,"mutability":"mutable","name":"mask","nameLocation":"4633:4:5","nodeType":"VariableDeclaration","scope":1515,"src":"4625:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4625:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1501,"nodeType":"VariableDeclarationStatement","src":"4625:12:5"},{"id":1513,"nodeType":"UncheckedBlock","src":"4647:61:5","statements":[{"expression":{"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1502,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"4671:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4678:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4684:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1505,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"4689:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4684:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4683:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4678:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4696:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4678:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4671:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1512,"nodeType":"ExpressionStatement","src":"4671:26:5"}]},{"AST":{"nodeType":"YulBlock","src":"4726:164:5","statements":[{"nodeType":"YulVariableDeclaration","src":"4740:41:5","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4765:3:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4759:5:5"},"nodeType":"YulFunctionCall","src":"4759:10:5"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4775:4:5"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4771:3:5"},"nodeType":"YulFunctionCall","src":"4771:9:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4755:3:5"},"nodeType":"YulFunctionCall","src":"4755:26:5"},"variables":[{"name":"srcpart","nodeType":"YulTypedName","src":"4744:7:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4794:38:5","value":{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4820:4:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4814:5:5"},"nodeType":"YulFunctionCall","src":"4814:11:5"},{"name":"mask","nodeType":"YulIdentifier","src":"4827:4:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4810:3:5"},"nodeType":"YulFunctionCall","src":"4810:22:5"},"variables":[{"name":"destpart","nodeType":"YulTypedName","src":"4798:8:5","type":""}]},{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"4852:4:5"},{"arguments":[{"name":"destpart","nodeType":"YulIdentifier","src":"4861:8:5"},{"name":"srcpart","nodeType":"YulIdentifier","src":"4871:7:5"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4858:2:5"},"nodeType":"YulFunctionCall","src":"4858:21:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4845:6:5"},"nodeType":"YulFunctionCall","src":"4845:35:5"},"nodeType":"YulExpressionStatement","src":"4845:35:5"}]},"evmVersion":"london","externalReferences":[{"declaration":1470,"isOffset":false,"isSlot":false,"src":"4820:4:5","valueSize":1},{"declaration":1470,"isOffset":false,"isSlot":false,"src":"4852:4:5","valueSize":1},{"declaration":1500,"isOffset":false,"isSlot":false,"src":"4775:4:5","valueSize":1},{"declaration":1500,"isOffset":false,"isSlot":false,"src":"4827:4:5","valueSize":1},{"declaration":1474,"isOffset":false,"isSlot":false,"src":"4765:3:5","valueSize":1}],"id":1514,"nodeType":"InlineAssembly","src":"4717:173:5"}]},"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"3959:286:5","text":" Copies a piece of memory to another location.\n @notice From: https://github.com/Arachnid/solidity-stringutils/blob/master/src/strings.sol.\n @param _dest Destination location.\n @param _src Source location.\n @param _len Length of memory to copy."},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"_memcpy","nameLocation":"4259:7:5","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1462,"mutability":"mutable","name":"_dest","nameLocation":"4284:5:5","nodeType":"VariableDeclaration","scope":1516,"src":"4276:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1461,"name":"uint256","nodeType":"ElementaryTypeName","src":"4276:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1464,"mutability":"mutable","name":"_src","nameLocation":"4307:4:5","nodeType":"VariableDeclaration","scope":1516,"src":"4299:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"4299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"_len","nameLocation":"4329:4:5","nodeType":"VariableDeclaration","scope":1516,"src":"4321:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4266:73:5"},"returnParameters":{"id":1468,"nodeType":"ParameterList","parameters":[],"src":"4353:0:5"},"scope":1611,"src":"4250:646:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1609,"nodeType":"Block","src":"5246:710:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1525,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5260:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5266:6:5","memberName":"length","nodeType":"MemberAccess","src":"5260:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5276:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5260:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1535,"nodeType":"IfStatement","src":"5256:67:5","trueBody":{"id":1534,"nodeType":"Block","src":"5279:44:5","statements":[{"expression":{"arguments":[{"hexValue":"30","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5310:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5300:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1529,"name":"bytes","nodeType":"ElementaryTypeName","src":"5304:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5300:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1524,"id":1533,"nodeType":"Return","src":"5293:19:5"}]}},{"assignments":[1537],"declarations":[{"constant":false,"id":1537,"mutability":"mutable","name":"len","nameLocation":"5341:3:5","nodeType":"VariableDeclaration","scope":1609,"src":"5333:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"5333:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1538,"nodeType":"VariableDeclarationStatement","src":"5333:11:5"},{"assignments":[1540],"declarations":[{"constant":false,"id":1540,"mutability":"mutable","name":"i","nameLocation":"5362:1:5","nodeType":"VariableDeclaration","scope":1609,"src":"5354:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5354:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1542,"initialValue":{"hexValue":"30","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5366:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5354:13:5"},{"body":{"id":1557,"nodeType":"Block","src":"5407:47:5","statements":[{"expression":{"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"5421:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1551,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5428:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1553,"indexExpression":{"id":1552,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5434:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5428:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5437:6:5","memberName":"length","nodeType":"MemberAccess","src":"5428:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5421:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1556,"nodeType":"ExpressionStatement","src":"5421:22:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1543,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5384:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1544,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5388:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:6:5","memberName":"length","nodeType":"MemberAccess","src":"5388:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5384:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1558,"loopExpression":{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5402:3:5","subExpression":{"id":1547,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5402:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ExpressionStatement","src":"5402:3:5"},"nodeType":"ForStatement","src":"5377:77:5"},{"assignments":[1560],"declarations":[{"constant":false,"id":1560,"mutability":"mutable","name":"flattened","nameLocation":"5477:9:5","nodeType":"VariableDeclaration","scope":1609,"src":"5464:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1559,"name":"bytes","nodeType":"ElementaryTypeName","src":"5464:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1565,"initialValue":{"arguments":[{"id":1563,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"5499:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5489:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1561,"name":"bytes","nodeType":"ElementaryTypeName","src":"5493:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5489:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5464:39:5"},{"assignments":[1567],"declarations":[{"constant":false,"id":1567,"mutability":"mutable","name":"flattenedPtr","nameLocation":"5521:12:5","nodeType":"VariableDeclaration","scope":1609,"src":"5513:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1568,"nodeType":"VariableDeclarationStatement","src":"5513:20:5"},{"AST":{"nodeType":"YulBlock","src":"5552:60:5","statements":[{"nodeType":"YulAssignment","src":"5566:36:5","value":{"arguments":[{"name":"flattened","nodeType":"YulIdentifier","src":"5586:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"5597:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5582:3:5"},"nodeType":"YulFunctionCall","src":"5582:20:5"},"variableNames":[{"name":"flattenedPtr","nodeType":"YulIdentifier","src":"5566:12:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1560,"isOffset":false,"isSlot":false,"src":"5586:9:5","valueSize":1},{"declaration":1567,"isOffset":false,"isSlot":false,"src":"5566:12:5","valueSize":1}],"id":1569,"nodeType":"InlineAssembly","src":"5543:69:5"},{"body":{"id":1605,"nodeType":"Block","src":"5657:266:5","statements":[{"assignments":[1582],"declarations":[{"constant":false,"id":1582,"mutability":"mutable","name":"item","nameLocation":"5684:4:5","nodeType":"VariableDeclaration","scope":1605,"src":"5671:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"5671:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1586,"initialValue":{"baseExpression":{"id":1583,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5691:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1585,"indexExpression":{"id":1584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5697:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5691:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5671:28:5"},{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"listPtr","nameLocation":"5722:7:5","nodeType":"VariableDeclaration","scope":1605,"src":"5714:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"5714:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1589,"nodeType":"VariableDeclarationStatement","src":"5714:15:5"},{"AST":{"nodeType":"YulBlock","src":"5752:58:5","statements":[{"nodeType":"YulAssignment","src":"5770:26:5","value":{"arguments":[{"name":"item","nodeType":"YulIdentifier","src":"5785:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"5791:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5781:3:5"},"nodeType":"YulFunctionCall","src":"5781:15:5"},"variableNames":[{"name":"listPtr","nodeType":"YulIdentifier","src":"5770:7:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1582,"isOffset":false,"isSlot":false,"src":"5785:4:5","valueSize":1},{"declaration":1588,"isOffset":false,"isSlot":false,"src":"5770:7:5","valueSize":1}],"id":1590,"nodeType":"InlineAssembly","src":"5743:67:5"},{"expression":{"arguments":[{"id":1592,"name":"flattenedPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"5832:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1593,"name":"listPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"5846:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1594,"name":"item","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"5855:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5860:6:5","memberName":"length","nodeType":"MemberAccess","src":"5855:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1591,"name":"_memcpy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"5824:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256) pure"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5824:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"ExpressionStatement","src":"5824:43:5"},{"expression":{"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1598,"name":"flattenedPtr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"5881:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":1599,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5897:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1601,"indexExpression":{"id":1600,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5903:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5897:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5906:6:5","memberName":"length","nodeType":"MemberAccess","src":"5897:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5881:31:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1604,"nodeType":"ExpressionStatement","src":"5881:31:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1574,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5634:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1575,"name":"_list","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"5638:5:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5644:6:5","memberName":"length","nodeType":"MemberAccess","src":"5638:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5634:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"initializationExpression":{"expression":{"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5627:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5631:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5627:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1573,"nodeType":"ExpressionStatement","src":"5627:5:5"},"loopExpression":{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5652:3:5","subExpression":{"id":1578,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"5652:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1580,"nodeType":"ExpressionStatement","src":"5652:3:5"},"nodeType":"ForStatement","src":"5622:301:5"},{"expression":{"id":1607,"name":"flattened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"5940:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1524,"id":1608,"nodeType":"Return","src":"5933:16:5"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"4902:263:5","text":" Flattens a list of byte strings into one byte string.\n @notice From: https://github.com/sammayo/solidity-rlp-encoder/blob/master/RLPEncode.sol.\n @param _list List of byte strings to flatten.\n @return The flattened byte string."},"id":1610,"implemented":true,"kind":"function","modifiers":[],"name":"_flatten","nameLocation":"5179:8:5","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"_list","nameLocation":"5203:5:5","nodeType":"VariableDeclaration","scope":1610,"src":"5188:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":1518,"name":"bytes","nodeType":"ElementaryTypeName","src":"5188:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":1519,"nodeType":"ArrayTypeName","src":"5188:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5187:22:5"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1610,"src":"5232:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1522,"name":"bytes","nodeType":"ElementaryTypeName","src":"5232:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5231:14:5"},"scope":1611,"src":"5170:786:5","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1612,"src":"128:5830:5","usedErrors":[]}],"src":"32:5927:5"},"id":5},"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol","exportedSymbols":{"Lib_Buffer":[1937]},"id":1938,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1613,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Lib_Buffer","contractDependencies":[],"contractKind":"library","documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"57:308:6","text":" @title Lib_Buffer\n @dev This library implements a bytes32 storage array with some additional gas-optimized\n functionality. In particular, it encodes its length as a uint40, and tightly packs this with an\n overwritable \"extra data\" field so we can store more information with a single SSTORE."},"fullyImplemented":true,"id":1937,"linearizedBaseContracts":[1937],"name":"Lib_Buffer","nameLocation":"374:10:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1618,"libraryName":{"id":1615,"name":"Lib_Buffer","nameLocations":["456:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"456:10:6"},"nodeType":"UsingForDirective","src":"450:28:6","typeName":{"id":1617,"nodeType":"UserDefinedTypeName","pathNode":{"id":1616,"name":"Buffer","nameLocations":["471:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"471:6:6"},"referencedDeclaration":1625,"src":"471:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}}},{"canonicalName":"Lib_Buffer.Buffer","id":1625,"members":[{"constant":false,"id":1620,"mutability":"mutable","name":"context","nameLocation":"569:7:6","nodeType":"VariableDeclaration","scope":1625,"src":"561:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"561:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"buf","nameLocation":"614:3:6","nodeType":"VariableDeclaration","scope":1625,"src":"586:31:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":1623,"keyType":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"594:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"586:27:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueType":{"id":1622,"name":"bytes32","nodeType":"ElementaryTypeName","src":"605:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Buffer","nameLocation":"544:6:6","nodeType":"StructDefinition","scope":1937,"src":"537:87:6","visibility":"public"},{"canonicalName":"Lib_Buffer.BufferContext","id":1630,"members":[{"constant":false,"id":1627,"mutability":"mutable","name":"length","nameLocation":"851:6:6","nodeType":"VariableDeclaration","scope":1630,"src":"844:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1626,"name":"uint40","nodeType":"ElementaryTypeName","src":"844:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"extraData","nameLocation":"1020:9:6","nodeType":"VariableDeclaration","scope":1630,"src":"1012:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":1628,"name":"bytes27","nodeType":"ElementaryTypeName","src":"1012:7:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"name":"BufferContext","nameLocation":"637:13:6","nodeType":"StructDefinition","scope":1937,"src":"630:406:6","visibility":"public"},{"body":{"id":1674,"nodeType":"Block","src":"1433:276:6","statements":[{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"ctx","nameLocation":"1464:3:6","nodeType":"VariableDeclaration","scope":1674,"src":"1443:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1642,"nodeType":"UserDefinedTypeName","pathNode":{"id":1641,"name":"BufferContext","nameLocations":["1443:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"1443:13:6"},"referencedDeclaration":1630,"src":"1443:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1647,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1644,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1470:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1476:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"1470:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1470:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"1443:45:6"},{"expression":{"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1648,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1499:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1505:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"1499:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":1653,"indexExpression":{"expression":{"id":1650,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1509:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1513:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"1509:10:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1499:21:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1654,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"1523:6:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1499:30:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1656,"nodeType":"ExpressionStatement","src":"1499:30:6"},{"expression":{"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1623:12:6","subExpression":{"expression":{"id":1657,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1623:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1659,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1627:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"1623:10:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":1661,"nodeType":"ExpressionStatement","src":"1623:12:6"},{"expression":{"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1662,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1645:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1649:9:6","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"1645:13:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1665,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1661:10:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"src":"1645:26:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"id":1667,"nodeType":"ExpressionStatement","src":"1645:26:6"},{"expression":{"arguments":[{"id":1671,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"1698:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}],"expression":{"id":1668,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"1681:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1687:10:6","memberName":"setContext","nodeType":"MemberAccess","referencedDeclaration":1908,"src":"1681:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_struct$_BufferContext_$1630_memory_ptr_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,struct Lib_Buffer.BufferContext memory)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1681:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"1681:21:6"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1128:189:6","text":" Pushes a single element to the buffer.\n @param _self Buffer to access.\n @param _value Value to push to the buffer.\n @param _extraData Global extra data."},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1331:4:6","nodeType":"FunctionDefinition","parameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"_self","nameLocation":"1360:5:6","nodeType":"VariableDeclaration","scope":1675,"src":"1345:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"Buffer","nameLocations":["1345:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"1345:6:6"},"referencedDeclaration":1625,"src":"1345:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":1636,"mutability":"mutable","name":"_value","nameLocation":"1383:6:6","nodeType":"VariableDeclaration","scope":1675,"src":"1375:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1375:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1638,"mutability":"mutable","name":"_extraData","nameLocation":"1407:10:6","nodeType":"VariableDeclaration","scope":1675,"src":"1399:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":1637,"name":"bytes27","nodeType":"ElementaryTypeName","src":"1399:7:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"1335:88:6"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[],"src":"1433:0:6"},"scope":1937,"src":"1322:387:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1699,"nodeType":"Block","src":"1926:106:6","statements":[{"assignments":[1686],"declarations":[{"constant":false,"id":1686,"mutability":"mutable","name":"ctx","nameLocation":"1957:3:6","nodeType":"VariableDeclaration","scope":1699,"src":"1936:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1685,"nodeType":"UserDefinedTypeName","pathNode":{"id":1684,"name":"BufferContext","nameLocations":["1936:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"1936:13:6"},"referencedDeclaration":1630,"src":"1936:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1690,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1687,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1963:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1969:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"1963:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1963:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"1936:45:6"},{"expression":{"arguments":[{"id":1694,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"2003:6:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1695,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1686,"src":"2011:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2015:9:6","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"2011:13:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes27","typeString":"bytes27"}],"expression":{"id":1691,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1992:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1998:4:6","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"1992:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_bytes32_$_t_bytes27_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,bytes32,bytes27)"}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1992:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1698,"nodeType":"ExpressionStatement","src":"1992:33:6"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"1715:145:6","text":" Pushes a single element to the buffer.\n @param _self Buffer to access.\n @param _value Value to push to the buffer."},"id":1700,"implemented":true,"kind":"function","modifiers":[],"name":"push","nameLocation":"1874:4:6","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"_self","nameLocation":"1894:5:6","nodeType":"VariableDeclaration","scope":1700,"src":"1879:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1678,"nodeType":"UserDefinedTypeName","pathNode":{"id":1677,"name":"Buffer","nameLocations":["1879:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"1879:6:6"},"referencedDeclaration":1625,"src":"1879:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"_value","nameLocation":"1909:6:6","nodeType":"VariableDeclaration","scope":1700,"src":"1901:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1901:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1878:38:6"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"1926:0:6"},"scope":1937,"src":"1865:167:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1731,"nodeType":"Block","src":"2324:160:6","statements":[{"assignments":[1713],"declarations":[{"constant":false,"id":1713,"mutability":"mutable","name":"ctx","nameLocation":"2355:3:6","nodeType":"VariableDeclaration","scope":1731,"src":"2334:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1712,"nodeType":"UserDefinedTypeName","pathNode":{"id":1711,"name":"BufferContext","nameLocations":["2334:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"2334:13:6"},"referencedDeclaration":1630,"src":"2334:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1717,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1714,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2361:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2367:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"2361:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2361:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"2334:45:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1719,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2398:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1720,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"2407:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2411:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"2407:10:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"2398:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e64732e","id":1723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2419:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8","typeString":"literal_string \"Index out of bounds.\""},"value":"Index out of bounds."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8","typeString":"literal_string \"Index out of bounds.\""}],"id":1718,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2390:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2390:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1725,"nodeType":"ExpressionStatement","src":"2390:52:6"},{"expression":{"baseExpression":{"expression":{"id":1726,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"2460:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1727,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2466:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1624,"src":"2460:9:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":1729,"indexExpression":{"id":1728,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2470:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2460:17:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1710,"id":1730,"nodeType":"Return","src":"2453:24:6"}]},"documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"2038:198:6","text":" Retrieves an element from the buffer.\n @param _self Buffer to access.\n @param _index Element index to retrieve.\n @return Value of the element at the given index."},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"2250:3:6","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"_self","nameLocation":"2269:5:6","nodeType":"VariableDeclaration","scope":1732,"src":"2254:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1703,"nodeType":"UserDefinedTypeName","pathNode":{"id":1702,"name":"Buffer","nameLocations":["2254:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"2254:6:6"},"referencedDeclaration":1625,"src":"2254:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"_index","nameLocation":"2284:6:6","nodeType":"VariableDeclaration","scope":1732,"src":"2276:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"2276:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2253:38:6"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"2315:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2315:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2314:9:6"},"scope":1937,"src":"2241:243:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1776,"nodeType":"Block","src":"2866:282:6","statements":[{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"ctx","nameLocation":"2897:3:6","nodeType":"VariableDeclaration","scope":1776,"src":"2876:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1744,"nodeType":"UserDefinedTypeName","pathNode":{"id":1743,"name":"BufferContext","nameLocations":["2876:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"2876:13:6"},"referencedDeclaration":1630,"src":"2876:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1749,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1746,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"2903:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2909:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"2903:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2903:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"2876:45:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1751,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2940:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1752,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2949:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2953:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"2949:10:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"2940:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f6620626f756e64732e","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2961:22:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8","typeString":"literal_string \"Index out of bounds.\""},"value":"Index out of bounds."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8","typeString":"literal_string \"Index out of bounds.\""}],"id":1750,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2932:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2932:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1757,"nodeType":"ExpressionStatement","src":"2932:52:6"},{"expression":{"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1758,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"3055:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1760,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3059:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"3055:10:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1761,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"3068:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"3055:19:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"id":1763,"nodeType":"ExpressionStatement","src":"3055:19:6"},{"expression":{"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1764,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"3084:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3088:9:6","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"3084:13:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1767,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"3100:10:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"src":"3084:26:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"id":1769,"nodeType":"ExpressionStatement","src":"3084:26:6"},{"expression":{"arguments":[{"id":1773,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"3137:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}],"expression":{"id":1770,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"3120:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3126:10:6","memberName":"setContext","nodeType":"MemberAccess","referencedDeclaration":1908,"src":"3120:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_struct$_BufferContext_$1630_memory_ptr_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,struct Lib_Buffer.BufferContext memory)"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3120:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1775,"nodeType":"ExpressionStatement","src":"3120:21:6"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"2490:237:6","text":" Deletes all elements after (and including) a given index.\n @param _self Buffer to access.\n @param _index Index of the element to delete from (inclusive).\n @param _extraData Optional global extra data."},"id":1777,"implemented":true,"kind":"function","modifiers":[],"name":"deleteElementsAfterInclusive","nameLocation":"2741:28:6","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"_self","nameLocation":"2794:5:6","nodeType":"VariableDeclaration","scope":1777,"src":"2779:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1735,"nodeType":"UserDefinedTypeName","pathNode":{"id":1734,"name":"Buffer","nameLocations":["2779:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"2779:6:6"},"referencedDeclaration":1625,"src":"2779:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"_index","nameLocation":"2816:6:6","nodeType":"VariableDeclaration","scope":1777,"src":"2809:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1737,"name":"uint40","nodeType":"ElementaryTypeName","src":"2809:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"_extraData","nameLocation":"2840:10:6","nodeType":"VariableDeclaration","scope":1777,"src":"2832:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":1739,"name":"bytes27","nodeType":"ElementaryTypeName","src":"2832:7:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"2769:87:6"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"2866:0:6"},"scope":1937,"src":"2732:416:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1801,"nodeType":"Block","src":"3427:129:6","statements":[{"assignments":[1788],"declarations":[{"constant":false,"id":1788,"mutability":"mutable","name":"ctx","nameLocation":"3458:3:6","nodeType":"VariableDeclaration","scope":1801,"src":"3437:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1787,"nodeType":"UserDefinedTypeName","pathNode":{"id":1786,"name":"BufferContext","nameLocations":["3437:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"3437:13:6"},"referencedDeclaration":1630,"src":"3437:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1792,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1789,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"3464:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3470:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"3464:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3464:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"3437:45:6"},{"expression":{"arguments":[{"id":1796,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"3527:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"expression":{"id":1797,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"3535:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3539:9:6","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"3535:13:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_bytes27","typeString":"bytes27"}],"expression":{"id":1793,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"3492:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3498:28:6","memberName":"deleteElementsAfterInclusive","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"3492:34:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_uint40_$_t_bytes27_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,uint40,bytes27)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3492:57:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1800,"nodeType":"ExpressionStatement","src":"3492:57:6"}]},"documentation":{"id":1778,"nodeType":"StructuredDocumentation","src":"3154:184:6","text":" Deletes all elements after (and including) a given index.\n @param _self Buffer to access.\n @param _index Index of the element to delete from (inclusive)."},"id":1802,"implemented":true,"kind":"function","modifiers":[],"name":"deleteElementsAfterInclusive","nameLocation":"3352:28:6","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"_self","nameLocation":"3396:5:6","nodeType":"VariableDeclaration","scope":1802,"src":"3381:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1780,"nodeType":"UserDefinedTypeName","pathNode":{"id":1779,"name":"Buffer","nameLocations":["3381:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"3381:6:6"},"referencedDeclaration":1625,"src":"3381:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"_index","nameLocation":"3410:6:6","nodeType":"VariableDeclaration","scope":1802,"src":"3403:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1782,"name":"uint40","nodeType":"ElementaryTypeName","src":"3403:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3380:37:6"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"3427:0:6"},"scope":1937,"src":"3343:213:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"3768:89:6","statements":[{"assignments":[1813],"declarations":[{"constant":false,"id":1813,"mutability":"mutable","name":"ctx","nameLocation":"3799:3:6","nodeType":"VariableDeclaration","scope":1821,"src":"3778:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1812,"nodeType":"UserDefinedTypeName","pathNode":{"id":1811,"name":"BufferContext","nameLocations":["3778:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"3778:13:6"},"referencedDeclaration":1630,"src":"3778:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1814,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"3805:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1815,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3811:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"3805:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3805:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"3778:45:6"},{"expression":{"expression":{"id":1818,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1813,"src":"3840:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3844:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"3840:10:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":1810,"id":1820,"nodeType":"Return","src":"3833:17:6"}]},"documentation":{"id":1803,"nodeType":"StructuredDocumentation","src":"3562:129:6","text":" Retrieves the current global index.\n @param _self Buffer to access.\n @return Current global index."},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"getLength","nameLocation":"3705:9:6","nodeType":"FunctionDefinition","parameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"_self","nameLocation":"3730:5:6","nodeType":"VariableDeclaration","scope":1822,"src":"3715:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1805,"nodeType":"UserDefinedTypeName","pathNode":{"id":1804,"name":"Buffer","nameLocations":["3715:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"3715:6:6"},"referencedDeclaration":1625,"src":"3715:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"}],"src":"3714:22:6"},"returnParameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1822,"src":"3760:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1808,"name":"uint40","nodeType":"ElementaryTypeName","src":"3760:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"3759:8:6"},"scope":1937,"src":"3696:161:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1850,"nodeType":"Block","src":"4080:129:6","statements":[{"assignments":[1833],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"ctx","nameLocation":"4111:3:6","nodeType":"VariableDeclaration","scope":1850,"src":"4090:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1832,"nodeType":"UserDefinedTypeName","pathNode":{"id":1831,"name":"BufferContext","nameLocations":["4090:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"4090:13:6"},"referencedDeclaration":1630,"src":"4090:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1837,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1834,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"4117:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4123:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"4117:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4117:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"4090:45:6"},{"expression":{"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1838,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"4145:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4149:9:6","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"4145:13:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1841,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"4161:10:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"src":"4145:26:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"id":1843,"nodeType":"ExpressionStatement","src":"4145:26:6"},{"expression":{"arguments":[{"id":1847,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"4198:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}],"expression":{"id":1844,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"4181:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4187:10:6","memberName":"setContext","nodeType":"MemberAccess","referencedDeclaration":1908,"src":"4181:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_struct$_BufferContext_$1630_memory_ptr_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,struct Lib_Buffer.BufferContext memory)"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4181:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"ExpressionStatement","src":"4181:21:6"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"3863:139:6","text":" Changes current global extra data.\n @param _self Buffer to access.\n @param _extraData New global extra data."},"id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"setExtraData","nameLocation":"4016:12:6","nodeType":"FunctionDefinition","parameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1826,"mutability":"mutable","name":"_self","nameLocation":"4044:5:6","nodeType":"VariableDeclaration","scope":1851,"src":"4029:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1825,"nodeType":"UserDefinedTypeName","pathNode":{"id":1824,"name":"Buffer","nameLocations":["4029:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"4029:6:6"},"referencedDeclaration":1625,"src":"4029:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":1828,"mutability":"mutable","name":"_extraData","nameLocation":"4059:10:6","nodeType":"VariableDeclaration","scope":1851,"src":"4051:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":1827,"name":"bytes27","nodeType":"ElementaryTypeName","src":"4051:7:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"4028:42:6"},"returnParameters":{"id":1830,"nodeType":"ParameterList","parameters":[],"src":"4080:0:6"},"scope":1937,"src":"4007:202:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1870,"nodeType":"Block","src":"4435:92:6","statements":[{"assignments":[1862],"declarations":[{"constant":false,"id":1862,"mutability":"mutable","name":"ctx","nameLocation":"4466:3:6","nodeType":"VariableDeclaration","scope":1870,"src":"4445:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1861,"nodeType":"UserDefinedTypeName","pathNode":{"id":1860,"name":"BufferContext","nameLocations":["4445:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"4445:13:6"},"referencedDeclaration":1630,"src":"4445:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"id":1866,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1863,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"4472:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4478:10:6","memberName":"getContext","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"4472:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_struct$_BufferContext_$1630_memory_ptr_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (struct Lib_Buffer.BufferContext memory)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"nodeType":"VariableDeclarationStatement","src":"4445:45:6"},{"expression":{"expression":{"id":1867,"name":"ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"4507:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4511:9:6","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"4507:13:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"functionReturnParameters":1859,"id":1869,"nodeType":"Return","src":"4500:20:6"}]},"documentation":{"id":1852,"nodeType":"StructuredDocumentation","src":"4215:139:6","text":" Retrieves the current global extra data.\n @param _self Buffer to access.\n @return Current global extra data."},"id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"getExtraData","nameLocation":"4368:12:6","nodeType":"FunctionDefinition","parameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"_self","nameLocation":"4396:5:6","nodeType":"VariableDeclaration","scope":1871,"src":"4381:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1854,"nodeType":"UserDefinedTypeName","pathNode":{"id":1853,"name":"Buffer","nameLocations":["4381:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"4381:6:6"},"referencedDeclaration":1625,"src":"4381:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"}],"src":"4380:22:6"},"returnParameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"4426:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":1857,"name":"bytes27","nodeType":"ElementaryTypeName","src":"4426:7:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"4425:9:6"},"scope":1937,"src":"4359:168:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1907,"nodeType":"Block","src":"4748:306:6","statements":[{"assignments":[1882],"declarations":[{"constant":false,"id":1882,"mutability":"mutable","name":"context","nameLocation":"4766:7:6","nodeType":"VariableDeclaration","scope":1907,"src":"4758:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4758:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1883,"nodeType":"VariableDeclarationStatement","src":"4758:15:6"},{"assignments":[1885],"declarations":[{"constant":false,"id":1885,"mutability":"mutable","name":"length","nameLocation":"4790:6:6","nodeType":"VariableDeclaration","scope":1907,"src":"4783:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1884,"name":"uint40","nodeType":"ElementaryTypeName","src":"4783:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":1888,"initialValue":{"expression":{"id":1886,"name":"_ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4799:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4804:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1627,"src":"4799:11:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"VariableDeclarationStatement","src":"4783:27:6"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"extraData","nameLocation":"4828:9:6","nodeType":"VariableDeclaration","scope":1907,"src":"4820:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":1889,"name":"bytes27","nodeType":"ElementaryTypeName","src":"4820:7:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"id":1893,"initialValue":{"expression":{"id":1891,"name":"_ctx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"4840:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"id":1892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4845:9:6","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":1629,"src":"4840:14:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"nodeType":"VariableDeclarationStatement","src":"4820:34:6"},{"AST":{"nodeType":"YulBlock","src":"4873:87:6","statements":[{"nodeType":"YulAssignment","src":"4887:17:6","value":{"name":"length","nodeType":"YulIdentifier","src":"4898:6:6"},"variableNames":[{"name":"context","nodeType":"YulIdentifier","src":"4887:7:6"}]},{"nodeType":"YulAssignment","src":"4917:33:6","value":{"arguments":[{"name":"context","nodeType":"YulIdentifier","src":"4931:7:6"},{"name":"extraData","nodeType":"YulIdentifier","src":"4940:9:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4928:2:6"},"nodeType":"YulFunctionCall","src":"4928:22:6"},"variableNames":[{"name":"context","nodeType":"YulIdentifier","src":"4917:7:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1882,"isOffset":false,"isSlot":false,"src":"4887:7:6","valueSize":1},{"declaration":1882,"isOffset":false,"isSlot":false,"src":"4917:7:6","valueSize":1},{"declaration":1882,"isOffset":false,"isSlot":false,"src":"4931:7:6","valueSize":1},{"declaration":1890,"isOffset":false,"isSlot":false,"src":"4940:9:6","valueSize":1},{"declaration":1885,"isOffset":false,"isSlot":false,"src":"4898:6:6","valueSize":1}],"id":1894,"nodeType":"InlineAssembly","src":"4864:96:6"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1895,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"4974:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4980:7:6","memberName":"context","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"4974:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1897,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"4991:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4974:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1906,"nodeType":"IfStatement","src":"4970:78:6","trueBody":{"id":1905,"nodeType":"Block","src":"5000:48:6","statements":[{"expression":{"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1899,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"5014:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5020:7:6","memberName":"context","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"5014:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1902,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1882,"src":"5030:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5014:23:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1904,"nodeType":"ExpressionStatement","src":"5014:23:6"}]}}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"4533:132:6","text":" Sets the current buffer context.\n @param _self Buffer to access.\n @param _ctx Current buffer context."},"id":1908,"implemented":true,"kind":"function","modifiers":[],"name":"setContext","nameLocation":"4679:10:6","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"_self","nameLocation":"4705:5:6","nodeType":"VariableDeclaration","scope":1908,"src":"4690:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1874,"nodeType":"UserDefinedTypeName","pathNode":{"id":1873,"name":"Buffer","nameLocations":["4690:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"4690:6:6"},"referencedDeclaration":1625,"src":"4690:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"_ctx","nameLocation":"4733:4:6","nodeType":"VariableDeclaration","scope":1908,"src":"4712:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1877,"nodeType":"UserDefinedTypeName","pathNode":{"id":1876,"name":"BufferContext","nameLocations":["4712:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"4712:13:6"},"referencedDeclaration":1630,"src":"4712:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"src":"4689:49:6"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"4748:0:6"},"scope":1937,"src":"4670:384:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1935,"nodeType":"Block","src":"5285:501:6","statements":[{"assignments":[1919],"declarations":[{"constant":false,"id":1919,"mutability":"mutable","name":"context","nameLocation":"5303:7:6","nodeType":"VariableDeclaration","scope":1935,"src":"5295:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1918,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5295:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1922,"initialValue":{"expression":{"id":1920,"name":"_self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"5313:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer storage pointer"}},"id":1921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5319:7:6","memberName":"context","nodeType":"MemberAccess","referencedDeclaration":1620,"src":"5313:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5295:31:6"},{"assignments":[1924],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"length","nameLocation":"5343:6:6","nodeType":"VariableDeclaration","scope":1935,"src":"5336:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":1923,"name":"uint40","nodeType":"ElementaryTypeName","src":"5336:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"id":1925,"nodeType":"VariableDeclarationStatement","src":"5336:13:6"},{"assignments":[1927],"declarations":[{"constant":false,"id":1927,"mutability":"mutable","name":"extraData","nameLocation":"5367:9:6","nodeType":"VariableDeclaration","scope":1935,"src":"5359:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":1926,"name":"bytes27","nodeType":"ElementaryTypeName","src":"5359:7:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"id":1928,"nodeType":"VariableDeclarationStatement","src":"5359:17:6"},{"AST":{"nodeType":"YulBlock","src":"5395:312:6","statements":[{"nodeType":"YulAssignment","src":"5409:136:6","value":{"arguments":[{"name":"context","nodeType":"YulIdentifier","src":"5440:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"5465:66:6","type":"","value":"0x000000000000000000000000000000000000000000000000000000FFFFFFFFFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5419:3:6"},"nodeType":"YulFunctionCall","src":"5419:126:6"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5409:6:6"}]},{"nodeType":"YulAssignment","src":"5558:139:6","value":{"arguments":[{"name":"context","nodeType":"YulIdentifier","src":"5592:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"5617:66:6","type":"","value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5571:3:6"},"nodeType":"YulFunctionCall","src":"5571:126:6"},"variableNames":[{"name":"extraData","nodeType":"YulIdentifier","src":"5558:9:6"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1919,"isOffset":false,"isSlot":false,"src":"5440:7:6","valueSize":1},{"declaration":1919,"isOffset":false,"isSlot":false,"src":"5592:7:6","valueSize":1},{"declaration":1927,"isOffset":false,"isSlot":false,"src":"5558:9:6","valueSize":1},{"declaration":1924,"isOffset":false,"isSlot":false,"src":"5409:6:6","valueSize":1}],"id":1929,"nodeType":"InlineAssembly","src":"5386:321:6"},{"expression":{"arguments":[{"id":1931,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"5748:6:6","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":1932,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"5767:9:6","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_bytes27","typeString":"bytes27"}],"id":1930,"name":"BufferContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"5724:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BufferContext_$1630_storage_ptr_$","typeString":"type(struct Lib_Buffer.BufferContext storage pointer)"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5740:6:6","5756:9:6"],"names":["length","extraData"],"nodeType":"FunctionCall","src":"5724:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext memory"}},"functionReturnParameters":1917,"id":1934,"nodeType":"Return","src":"5717:62:6"}]},"documentation":{"id":1909,"nodeType":"StructuredDocumentation","src":"5060:133:6","text":" Retrieves the current buffer context.\n @param _self Buffer to access.\n @return Current buffer context."},"id":1936,"implemented":true,"kind":"function","modifiers":[],"name":"getContext","nameLocation":"5207:10:6","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"_self","nameLocation":"5233:5:6","nodeType":"VariableDeclaration","scope":1936,"src":"5218:20:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":1911,"nodeType":"UserDefinedTypeName","pathNode":{"id":1910,"name":"Buffer","nameLocations":["5218:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"5218:6:6"},"referencedDeclaration":1625,"src":"5218:6:6","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"}],"src":"5217:22:6"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"5263:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_memory_ptr","typeString":"struct Lib_Buffer.BufferContext"},"typeName":{"id":1915,"nodeType":"UserDefinedTypeName","pathNode":{"id":1914,"name":"BufferContext","nameLocations":["5263:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"5263:13:6"},"referencedDeclaration":1630,"src":"5263:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_BufferContext_$1630_storage_ptr","typeString":"struct Lib_Buffer.BufferContext"}},"visibility":"internal"}],"src":"5262:22:6"},"scope":1937,"src":"5198:588:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1938,"src":"366:5422:6","usedErrors":[]}],"src":"32:5757:6"},"id":6},"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol","exportedSymbols":{"Lib_Bytes32Utils":[2014]},"id":2015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1939,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Lib_Bytes32Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"57:33:7","text":" @title Lib_Byte32Utils"},"fullyImplemented":true,"id":2014,"linearizedBaseContracts":[2014],"name":"Lib_Bytes32Utils","nameLocation":"99:16:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1952,"nodeType":"Block","src":"451:32:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1948,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"468:3:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"475:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"468:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1947,"id":1951,"nodeType":"Return","src":"461:15:7"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"208:180:7","text":" Converts a bytes32 value to a boolean. Anything non-zero will be converted to \"true.\"\n @param _in Input bytes32 value.\n @return Bytes32 as a boolean."},"id":1953,"implemented":true,"kind":"function","modifiers":[],"name":"toBool","nameLocation":"402:6:7","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"_in","nameLocation":"417:3:7","nodeType":"VariableDeclaration","scope":1953,"src":"409:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"409:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"408:13:7"},"returnParameters":{"id":1947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1953,"src":"445:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1945,"name":"bool","nodeType":"ElementaryTypeName","src":"445:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"444:6:7"},"scope":2014,"src":"393:90:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1972,"nodeType":"Block","src":"687:53:7","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"id":1965,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1956,"src":"720:3:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"730:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"720:11:7","trueExpression":{"hexValue":"31","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"712:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"712:7:7","typeDescriptions":{}}},"id":1969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"712:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"704:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"704:7:7","typeDescriptions":{}}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"704:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1960,"id":1971,"nodeType":"Return","src":"697:36:7"}]},"documentation":{"id":1954,"nodeType":"StructuredDocumentation","src":"489:133:7","text":" Converts a boolean to a bytes32 value.\n @param _in Input boolean value.\n @return Boolean as a bytes32."},"id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"fromBool","nameLocation":"636:8:7","nodeType":"FunctionDefinition","parameters":{"id":1957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1956,"mutability":"mutable","name":"_in","nameLocation":"650:3:7","nodeType":"VariableDeclaration","scope":1973,"src":"645:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1955,"name":"bool","nodeType":"ElementaryTypeName","src":"645:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"644:10:7"},"returnParameters":{"id":1960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1973,"src":"678:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"678:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"677:9:7"},"scope":2014,"src":"627:113:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1992,"nodeType":"Block","src":"977:54:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1987,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"1018:3:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"1010:7:7","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1010:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1002:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1983,"name":"uint160","nodeType":"ElementaryTypeName","src":"1002:7:7","typeDescriptions":{}}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1002:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"994:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:7","typeDescriptions":{}}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"994:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1980,"id":1991,"nodeType":"Return","src":"987:37:7"}]},"documentation":{"id":1974,"nodeType":"StructuredDocumentation","src":"746:162:7","text":" Converts a bytes32 value to an address. Takes the *last* 20 bytes.\n @param _in Input bytes32 value.\n @return Bytes32 as an address."},"id":1993,"implemented":true,"kind":"function","modifiers":[],"name":"toAddress","nameLocation":"922:9:7","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"_in","nameLocation":"940:3:7","nodeType":"VariableDeclaration","scope":1993,"src":"932:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"932:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"931:13:7"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1993,"src":"968:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1978,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:9:7"},"scope":2014,"src":"913:118:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2012,"nodeType":"Block","src":"1236:54:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2007,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1996,"src":"1277:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1269:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2005,"name":"uint160","nodeType":"ElementaryTypeName","src":"1269:7:7","typeDescriptions":{}}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1261:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1261:7:7","typeDescriptions":{}}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1261:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1253:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2001,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1253:7:7","typeDescriptions":{}}},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1253:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2000,"id":2011,"nodeType":"Return","src":"1246:37:7"}]},"documentation":{"id":1994,"nodeType":"StructuredDocumentation","src":"1037:128:7","text":" Converts an address to a bytes32.\n @param _in Input address value.\n @return Address as a bytes32."},"id":2013,"implemented":true,"kind":"function","modifiers":[],"name":"fromAddress","nameLocation":"1179:11:7","nodeType":"FunctionDefinition","parameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"_in","nameLocation":"1199:3:7","nodeType":"VariableDeclaration","scope":2013,"src":"1191:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"1191:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1190:13:7"},"returnParameters":{"id":2000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2013,"src":"1227:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1998,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1227:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1226:9:7"},"scope":2014,"src":"1170:120:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2015,"src":"91:1201:7","usedErrors":[]}],"src":"32:1261:7"},"id":7},"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol":{"ast":{"absolutePath":"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol","exportedSymbols":{"Lib_BytesUtils":[2275]},"id":2276,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2016,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Lib_BytesUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"57:32:8","text":" @title Lib_BytesUtils"},"fullyImplemented":true,"id":2275,"linearizedBaseContracts":[2275],"name":"Lib_BytesUtils","nameLocation":"98:14:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":2062,"nodeType":"Block","src":"341:2704:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"359:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"369:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"359:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2032,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"375:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"359:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":2028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"351:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"351:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2036,"nodeType":"ExpressionStatement","src":"351:50:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2038,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"419:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2039,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"428:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"419:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2041,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"439:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"419:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"447:16:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":2037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"411:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"411:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"411:53:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2047,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"482:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"489:6:8","memberName":"length","nodeType":"MemberAccess","src":"482:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2049,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"499:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2050,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"508:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"499:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"482:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":2053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"517:19:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":2046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"474:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"474:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2055,"nodeType":"ExpressionStatement","src":"474:63:8"},{"assignments":[2057],"declarations":[{"constant":false,"id":2057,"mutability":"mutable","name":"tempBytes","nameLocation":"561:9:8","nodeType":"VariableDeclaration","scope":2062,"src":"548:22:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2056,"name":"bytes","nodeType":"ElementaryTypeName","src":"548:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2058,"nodeType":"VariableDeclarationStatement","src":"548:22:8"},{"AST":{"nodeType":"YulBlock","src":"590:2422:8","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"646:1960:8","statements":[{"nodeType":"YulAssignment","src":"802:24:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"821:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"815:5:8"},"nodeType":"YulFunctionCall","src":"815:11:8"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"802:9:8"}]},{"nodeType":"YulVariableDeclaration","src":"1450:33:8","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"1471:7:8"},{"kind":"number","nodeType":"YulLiteral","src":"1480:2:8","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1467:3:8"},"nodeType":"YulFunctionCall","src":"1467:16:8"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"1454:9:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1804:70:8","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1822:9:8"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"1833:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1818:3:8"},"nodeType":"YulFunctionCall","src":"1818:25:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1849:4:8","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"1862:9:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1855:6:8"},"nodeType":"YulFunctionCall","src":"1855:17:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1845:3:8"},"nodeType":"YulFunctionCall","src":"1845:28:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1814:3:8"},"nodeType":"YulFunctionCall","src":"1814:60:8"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1808:2:8","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1891:27:8","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1906:2:8"},{"name":"_length","nodeType":"YulIdentifier","src":"1910:7:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1902:3:8"},"nodeType":"YulFunctionCall","src":"1902:16:8"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1895:3:8","type":""}]},{"body":{"nodeType":"YulBlock","src":"2300:61:8","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2329:2:8"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2339:2:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2333:5:8"},"nodeType":"YulFunctionCall","src":"2333:9:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2322:6:8"},"nodeType":"YulFunctionCall","src":"2322:21:8"},"nodeType":"YulExpressionStatement","src":"2322:21:8"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2191:2:8"},{"name":"end","nodeType":"YulIdentifier","src":"2195:3:8"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2188:2:8"},"nodeType":"YulFunctionCall","src":"2188:11:8"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2200:99:8","statements":[{"nodeType":"YulAssignment","src":"2222:19:8","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2232:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"2236:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:8"},"nodeType":"YulFunctionCall","src":"2228:13:8"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2222:2:8"}]},{"nodeType":"YulAssignment","src":"2262:19:8","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2272:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"2276:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2268:3:8"},"nodeType":"YulFunctionCall","src":"2268:13:8"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2262:2:8"}]}]},"pre":{"nodeType":"YulBlock","src":"1940:247:8","statements":[{"nodeType":"YulVariableDeclaration","src":"2089:80:8","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"2111:6:8"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"2119:9:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2107:3:8"},"nodeType":"YulFunctionCall","src":"2107:22:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2135:4:8","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"2148:9:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2141:6:8"},"nodeType":"YulFunctionCall","src":"2141:17:8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2131:3:8"},"nodeType":"YulFunctionCall","src":"2131:28:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2103:3:8"},"nodeType":"YulFunctionCall","src":"2103:57:8"},{"name":"_start","nodeType":"YulIdentifier","src":"2162:6:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2099:3:8"},"nodeType":"YulFunctionCall","src":"2099:70:8"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2093:2:8","type":""}]}]},"src":"1936:425:8"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2386:9:8"},{"name":"_length","nodeType":"YulIdentifier","src":"2397:7:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2379:6:8"},"nodeType":"YulFunctionCall","src":"2379:26:8"},"nodeType":"YulExpressionStatement","src":"2379:26:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2560:4:8","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2574:2:8"},{"kind":"number","nodeType":"YulLiteral","src":"2578:2:8","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2570:3:8"},"nodeType":"YulFunctionCall","src":"2570:11:8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2587:2:8","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2583:3:8"},"nodeType":"YulFunctionCall","src":"2583:7:8"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2566:3:8"},"nodeType":"YulFunctionCall","src":"2566:25:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2553:6:8"},"nodeType":"YulFunctionCall","src":"2553:39:8"},"nodeType":"YulExpressionStatement","src":"2553:39:8"}]},"nodeType":"YulCase","src":"639:1967:8","value":{"kind":"number","nodeType":"YulLiteral","src":"644:1:8","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"2710:292:8","statements":[{"nodeType":"YulAssignment","src":"2728:24:8","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2747:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2741:5:8"},"nodeType":"YulFunctionCall","src":"2741:11:8"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2728:9:8"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2923:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2934:1:8","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2916:6:8"},"nodeType":"YulFunctionCall","src":"2916:20:8"},"nodeType":"YulExpressionStatement","src":"2916:20:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2961:4:8","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2971:9:8"},{"kind":"number","nodeType":"YulLiteral","src":"2982:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2967:3:8"},"nodeType":"YulFunctionCall","src":"2967:20:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2954:6:8"},"nodeType":"YulFunctionCall","src":"2954:34:8"},"nodeType":"YulExpressionStatement","src":"2954:34:8"}]},"nodeType":"YulCase","src":"2702:300:8","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"618:7:8"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"611:6:8"},"nodeType":"YulFunctionCall","src":"611:15:8"},"nodeType":"YulSwitch","src":"604:2398:8"}]},"evmVersion":"london","externalReferences":[{"declaration":2019,"isOffset":false,"isSlot":false,"src":"2111:6:8","valueSize":1},{"declaration":2023,"isOffset":false,"isSlot":false,"src":"1471:7:8","valueSize":1},{"declaration":2023,"isOffset":false,"isSlot":false,"src":"1910:7:8","valueSize":1},{"declaration":2023,"isOffset":false,"isSlot":false,"src":"2397:7:8","valueSize":1},{"declaration":2023,"isOffset":false,"isSlot":false,"src":"618:7:8","valueSize":1},{"declaration":2021,"isOffset":false,"isSlot":false,"src":"2162:6:8","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"1822:9:8","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"2386:9:8","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"2728:9:8","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"2923:9:8","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"2971:9:8","valueSize":1},{"declaration":2057,"isOffset":false,"isSlot":false,"src":"802:9:8","valueSize":1}],"id":2059,"nodeType":"InlineAssembly","src":"581:2431:8"},{"expression":{"id":2060,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"3029:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2027,"id":2061,"nodeType":"Return","src":"3022:16:8"}]},"id":2063,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"214:5:8","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"_bytes","nameLocation":"242:6:8","nodeType":"VariableDeclaration","scope":2063,"src":"229:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"229:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"_start","nameLocation":"266:6:8","nodeType":"VariableDeclaration","scope":2063,"src":"258:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"_length","nameLocation":"290:7:8","nodeType":"VariableDeclaration","scope":2063,"src":"282:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"282:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"219:84:8"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2063,"src":"327:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2025,"name":"bytes","nodeType":"ElementaryTypeName","src":"327:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"326:14:8"},"scope":2275,"src":"205:2840:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"3140:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3154:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":2073,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"3164:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3171:6:8","memberName":"length","nodeType":"MemberAccess","src":"3164:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3154:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2082,"nodeType":"IfStatement","src":"3150:70:8","trueBody":{"id":2081,"nodeType":"Block","src":"3179:41:8","statements":[{"expression":{"arguments":[{"hexValue":"","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3206:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3200:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2076,"name":"bytes","nodeType":"ElementaryTypeName","src":"3200:5:8","typeDescriptions":{}}},"id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3200:9:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2071,"id":2080,"nodeType":"Return","src":"3193:16:8"}]}},{"expression":{"arguments":[{"id":2084,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"3243:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2085,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3251:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2086,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2065,"src":"3259:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3266:6:8","memberName":"length","nodeType":"MemberAccess","src":"3259:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2088,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3275:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3259:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2083,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[2063,2093],"referencedDeclaration":2063,"src":"3237:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3237:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2071,"id":2091,"nodeType":"Return","src":"3230:52:8"}]},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"3060:5:8","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2065,"mutability":"mutable","name":"_bytes","nameLocation":"3079:6:8","nodeType":"VariableDeclaration","scope":2093,"src":"3066:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2064,"name":"bytes","nodeType":"ElementaryTypeName","src":"3066:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2067,"mutability":"mutable","name":"_start","nameLocation":"3095:6:8","nodeType":"VariableDeclaration","scope":2093,"src":"3087:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2066,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3065:37:8"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"3126:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2069,"name":"bytes","nodeType":"ElementaryTypeName","src":"3126:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3125:14:8"},"scope":2275,"src":"3051:238:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"3367:274:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2100,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"3381:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3388:6:8","memberName":"length","nodeType":"MemberAccess","src":"3381:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3381:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2111,"nodeType":"IfStatement","src":"3377:167:8","trueBody":{"id":2110,"nodeType":"Block","src":"3401:143:8","statements":[{"assignments":[2105],"declarations":[{"constant":false,"id":2105,"mutability":"mutable","name":"ret","nameLocation":"3423:3:8","nodeType":"VariableDeclaration","scope":2110,"src":"3415:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2104,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3415:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2106,"nodeType":"VariableDeclarationStatement","src":"3415:11:8"},{"AST":{"nodeType":"YulBlock","src":"3449:61:8","statements":[{"nodeType":"YulAssignment","src":"3467:29:8","value":{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"3484:6:8"},{"kind":"number","nodeType":"YulLiteral","src":"3492:2:8","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:8"},"nodeType":"YulFunctionCall","src":"3480:15:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3474:5:8"},"nodeType":"YulFunctionCall","src":"3474:22:8"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3467:3:8"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2095,"isOffset":false,"isSlot":false,"src":"3484:6:8","valueSize":1},{"declaration":2105,"isOffset":false,"isSlot":false,"src":"3467:3:8","valueSize":1}],"id":2107,"nodeType":"InlineAssembly","src":"3440:70:8"},{"expression":{"id":2108,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"3530:3:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2099,"id":2109,"nodeType":"Return","src":"3523:10:8"}]}},{"expression":{"arguments":[{"id":2114,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"3572:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3581:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2115,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3581:7:8","typeDescriptions":{}}}],"id":2117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3580:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":2112,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:6:8","memberName":"decode","nodeType":"MemberAccess","src":"3561:10:8","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2099,"id":2119,"nodeType":"Return","src":"3554:36:8"}]},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"3304:9:8","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"_bytes","nameLocation":"3327:6:8","nodeType":"VariableDeclaration","scope":2121,"src":"3314:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2094,"name":"bytes","nodeType":"ElementaryTypeName","src":"3314:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3313:21:8"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2121,"src":"3358:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3358:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3357:9:8"},"scope":2275,"src":"3295:346:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"3719:50:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2131,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"3754:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2130,"name":"toBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"3744:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3736:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3736:7:8","typeDescriptions":{}}},"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3736:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2127,"id":2134,"nodeType":"Return","src":"3729:33:8"}]},"id":2136,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"3656:9:8","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2123,"mutability":"mutable","name":"_bytes","nameLocation":"3679:6:8","nodeType":"VariableDeclaration","scope":2136,"src":"3666:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2122,"name":"bytes","nodeType":"ElementaryTypeName","src":"3666:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3665:21:8"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2136,"src":"3710:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"3710:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3709:9:8"},"scope":2275,"src":"3647:122:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2200,"nodeType":"Block","src":"3852:267:8","statements":[{"assignments":[2144],"declarations":[{"constant":false,"id":2144,"mutability":"mutable","name":"nibbles","nameLocation":"3875:7:8","nodeType":"VariableDeclaration","scope":2200,"src":"3862:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2143,"name":"bytes","nodeType":"ElementaryTypeName","src":"3862:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2152,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2147,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3895:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3902:6:8","memberName":"length","nodeType":"MemberAccess","src":"3895:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3911:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3895:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3885:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2145,"name":"bytes","nodeType":"ElementaryTypeName","src":"3889:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3885:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3862:51:8"},{"body":{"id":2196,"nodeType":"Block","src":"3968:120:8","statements":[{"expression":{"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2164,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"3982:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2168,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3990:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3994:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3982:14:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2169,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3999:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2171,"indexExpression":{"id":2170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"4006:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3999:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4012:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3999:14:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3982:31:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2175,"nodeType":"ExpressionStatement","src":"3982:31:8"},{"expression":{"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2176,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"4027:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2182,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2177,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"4035:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4039:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4035:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4043:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4035:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4027:18:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2187,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"4061:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2189,"indexExpression":{"id":2188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"4068:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4061:9:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4055:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2185,"name":"uint8","nodeType":"ElementaryTypeName","src":"4055:5:8","typeDescriptions":{}}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4055:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3136","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4074:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4055:21:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4048:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2183,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4048:6:8","typeDescriptions":{}}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4048:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4027:50:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2195,"nodeType":"ExpressionStatement","src":"4027:50:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2157,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3944:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2158,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"3948:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3955:6:8","memberName":"length","nodeType":"MemberAccess","src":"3948:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3944:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2197,"initializationExpression":{"assignments":[2154],"declarations":[{"constant":false,"id":2154,"mutability":"mutable","name":"i","nameLocation":"3937:1:8","nodeType":"VariableDeclaration","scope":2197,"src":"3929:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3929:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2156,"initialValue":{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3941:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3929:13:8"},"loopExpression":{"expression":{"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3963:3:8","subExpression":{"id":2161,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"3963:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"nodeType":"ExpressionStatement","src":"3963:3:8"},"nodeType":"ForStatement","src":"3924:164:8"},{"expression":{"id":2198,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"4105:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2142,"id":2199,"nodeType":"Return","src":"4098:14:8"}]},"id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"toNibbles","nameLocation":"3784:9:8","nodeType":"FunctionDefinition","parameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"_bytes","nameLocation":"3807:6:8","nodeType":"VariableDeclaration","scope":2201,"src":"3794:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2137,"name":"bytes","nodeType":"ElementaryTypeName","src":"3794:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3793:21:8"},"returnParameters":{"id":2142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2201,"src":"3838:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2140,"name":"bytes","nodeType":"ElementaryTypeName","src":"3838:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3837:14:8"},"scope":2275,"src":"3775:344:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2255,"nodeType":"Block","src":"4204:212:8","statements":[{"assignments":[2209],"declarations":[{"constant":false,"id":2209,"mutability":"mutable","name":"ret","nameLocation":"4227:3:8","nodeType":"VariableDeclaration","scope":2255,"src":"4214:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2208,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2217,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2212,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"4243:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4250:6:8","memberName":"length","nodeType":"MemberAccess","src":"4243:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4259:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4243:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4233:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"4237:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4233:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4214:47:8"},{"body":{"id":2251,"nodeType":"Block","src":"4313:76:8","statements":[{"expression":{"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2229,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4327:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2231,"indexExpression":{"id":2230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4331:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4327:6:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2232,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"4337:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2236,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2233,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4344:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4348:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4344:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4337:13:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4354:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4337:18:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":2239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4336:20:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"baseExpression":{"id":2240,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"4360:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2246,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4367:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4371:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4367:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4375:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4367:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4360:17:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":2247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4359:19:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4336:42:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4327:51:8","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2250,"nodeType":"ExpressionStatement","src":"4327:51:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2222,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4292:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2223,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4296:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4300:6:8","memberName":"length","nodeType":"MemberAccess","src":"4296:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4292:14:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2252,"initializationExpression":{"assignments":[2219],"declarations":[{"constant":false,"id":2219,"mutability":"mutable","name":"i","nameLocation":"4285:1:8","nodeType":"VariableDeclaration","scope":2252,"src":"4277:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"4277:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2221,"initialValue":{"hexValue":"30","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4289:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4277:13:8"},"loopExpression":{"expression":{"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4308:3:8","subExpression":{"id":2226,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4308:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2228,"nodeType":"ExpressionStatement","src":"4308:3:8"},"nodeType":"ForStatement","src":"4272:117:8"},{"expression":{"id":2253,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"4406:3:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2207,"id":2254,"nodeType":"Return","src":"4399:10:8"}]},"id":2256,"implemented":true,"kind":"function","modifiers":[],"name":"fromNibbles","nameLocation":"4134:11:8","nodeType":"FunctionDefinition","parameters":{"id":2204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"_bytes","nameLocation":"4159:6:8","nodeType":"VariableDeclaration","scope":2256,"src":"4146:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2202,"name":"bytes","nodeType":"ElementaryTypeName","src":"4146:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4145:21:8"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"4190:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2205,"name":"bytes","nodeType":"ElementaryTypeName","src":"4190:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4189:14:8"},"scope":2275,"src":"4125:291:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2273,"nodeType":"Block","src":"4508:62:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2266,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"4535:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2265,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4525:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4525:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2269,"name":"_other","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"4556:6:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2268,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4546:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4525:38:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2264,"id":2272,"nodeType":"Return","src":"4518:45:8"}]},"id":2274,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4431:5:8","nodeType":"FunctionDefinition","parameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"_bytes","nameLocation":"4450:6:8","nodeType":"VariableDeclaration","scope":2274,"src":"4437:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"4437:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"_other","nameLocation":"4471:6:8","nodeType":"VariableDeclaration","scope":2274,"src":"4458:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2259,"name":"bytes","nodeType":"ElementaryTypeName","src":"4458:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4436:42:8"},"returnParameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2263,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2274,"src":"4502:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2262,"name":"bool","nodeType":"ElementaryTypeName","src":"4502:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4501:6:8"},"scope":2275,"src":"4422:148:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2276,"src":"90:4482:8","usedErrors":[]}],"src":"32:4541:8"},"id":8},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2410],"Ownable":[2388]},"id":2389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2277,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:9"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2278,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2389,"sourceUnit":2411,"src":"127:30:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2280,"name":"Context","nameLocations":["683:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":2410,"src":"683:7:9"},"id":2281,"nodeType":"InheritanceSpecifier","src":"683:7:9"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"159:494:9","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2388,"linearizedBaseContracts":[2388,2410],"name":"Ownable","nameLocation":"672:7:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2283,"mutability":"mutable","name":"_owner","nameLocation":"713:6:9","nodeType":"VariableDeclaration","scope":2388,"src":"697:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2282,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2289,"name":"OwnershipTransferred","nameLocation":"732:20:9","nodeType":"EventDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:9","nodeType":"VariableDeclaration","scope":2289,"src":"753:29:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:9","nodeType":"VariableDeclaration","scope":2289,"src":"784:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2286,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:9"},"src":"726:84:9"},{"body":{"id":2298,"nodeType":"Block","src":"926:49:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2294,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"955:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2293,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"936:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2297,"nodeType":"ExpressionStatement","src":"936:32:9"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"816:91:9","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":2299,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[],"src":"923:2:9"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[],"src":"926:0:9"},"scope":2388,"src":"912:63:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2306,"nodeType":"Block","src":"1084:41:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2302,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2330,"src":"1094:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2304,"nodeType":"ExpressionStatement","src":"1094:13:9"},{"id":2305,"nodeType":"PlaceholderStatement","src":"1117:1:9"}]},"documentation":{"id":2300,"nodeType":"StructuredDocumentation","src":"981:77:9","text":" @dev Throws if called by any account other than the owner."},"id":2307,"name":"onlyOwner","nameLocation":"1072:9:9","nodeType":"ModifierDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[],"src":"1081:2:9"},"src":"1063:62:9","virtual":false,"visibility":"internal"},{"body":{"id":2315,"nodeType":"Block","src":"1256:30:9","statements":[{"expression":{"id":2313,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"1273:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2312,"id":2314,"nodeType":"Return","src":"1266:13:9"}]},"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"1131:65:9","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2316,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:9","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"1215:2:9"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2316,"src":"1247:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:9"},"scope":2388,"src":"1201:85:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2329,"nodeType":"Block","src":"1404:85:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2321,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2316,"src":"1422:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2323,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"1433:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":2320,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2328,"nodeType":"ExpressionStatement","src":"1414:68:9"}]},"documentation":{"id":2317,"nodeType":"StructuredDocumentation","src":"1292:62:9","text":" @dev Throws if the sender is not the owner."},"id":2330,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:9","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[],"src":"1379:2:9"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"1404:0:9"},"scope":2388,"src":"1359:130:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2343,"nodeType":"Block","src":"1885:47:9","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:9","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2336,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"1895:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2342,"nodeType":"ExpressionStatement","src":"1895:30:9"}]},"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"1495:331:9","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2344,"implemented":true,"kind":"function","modifiers":[{"id":2334,"kind":"modifierInvocation","modifierName":{"id":2333,"name":"onlyOwner","nameLocations":["1875:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":2307,"src":"1875:9:9"},"nodeType":"ModifierInvocation","src":"1875:9:9"}],"name":"renounceOwnership","nameLocation":"1840:17:9","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[],"src":"1857:2:9"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[],"src":"1885:0:9"},"scope":2388,"src":"1831:101:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2366,"nodeType":"Block","src":"2151:128:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2353,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2169:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2354,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:9","typeDescriptions":{}}},"id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":2352,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2361,"nodeType":"ExpressionStatement","src":"2161:73:9"},{"expression":{"arguments":[{"id":2363,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"2263:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2362,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2387,"src":"2244:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2365,"nodeType":"ExpressionStatement","src":"2244:28:9"}]},"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"1938:138:9","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2367,"implemented":true,"kind":"function","modifiers":[{"id":2350,"kind":"modifierInvocation","modifierName":{"id":2349,"name":"onlyOwner","nameLocations":["2141:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":2307,"src":"2141:9:9"},"nodeType":"ModifierInvocation","src":"2141:9:9"}],"name":"transferOwnership","nameLocation":"2090:17:9","nodeType":"FunctionDefinition","parameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:9","nodeType":"VariableDeclaration","scope":2367,"src":"2108:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:9"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[],"src":"2151:0:9"},"scope":2388,"src":"2081:198:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2386,"nodeType":"Block","src":"2496:124:9","statements":[{"assignments":[2374],"declarations":[{"constant":false,"id":2374,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:9","nodeType":"VariableDeclaration","scope":2386,"src":"2506:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2376,"initialValue":{"id":2375,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"2525:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:9"},{"expression":{"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"2541:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2378,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2550:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2380,"nodeType":"ExpressionStatement","src":"2541:17:9"},{"eventCall":{"arguments":[{"id":2382,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"2594:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2383,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"2604:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2381,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"2573:20:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2385,"nodeType":"EmitStatement","src":"2568:45:9"}]},"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"2285:143:9","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2387,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:9","nodeType":"FunctionDefinition","parameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:9","nodeType":"VariableDeclaration","scope":2387,"src":"2461:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2369,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:9"},"returnParameters":{"id":2372,"nodeType":"ParameterList","parameters":[],"src":"2496:0:9"},"scope":2388,"src":"2433:187:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2389,"src":"654:1968:9","usedErrors":[]}],"src":"102:2521:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2410]},"id":2411,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2410,"linearizedBaseContracts":[2410],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2399,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":2396,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:10","memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2395,"id":2398,"nodeType":"Return","src":"712:17:10"}]},"id":2400,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":2395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2400,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":2410,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":2405,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:10","memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2404,"id":2407,"nodeType":"Return","src":"819:15:10"}]},"id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2409,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2402,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":2410,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2411,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"contracts/HelperChainStorageContainer.sol":{"ast":{"absolutePath":"contracts/HelperChainStorageContainer.sol","exportedSymbols":{"HelperChainStorageContainer":[2602],"IChainStorageContainer":[57],"Lib_AddressResolver":[370],"Lib_Buffer":[1937],"Lib_OVMCodec":[248]},"id":2603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2412,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"32:23:11"},{"absolutePath":"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol","file":"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol","id":2414,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2603,"sourceUnit":1938,"src":"79:84:11","symbolAliases":[{"foreign":{"id":2413,"name":"Lib_Buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"88:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol","file":"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol","id":2416,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2603,"sourceUnit":371,"src":"164:105:11","symbolAliases":[{"foreign":{"id":2415,"name":"Lib_AddressResolver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"173:19:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol","file":"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol","id":2418,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2603,"sourceUnit":249,"src":"270:88:11","symbolAliases":[{"foreign":{"id":2417,"name":"Lib_OVMCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"279:12:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol","file":"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol","id":2420,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2603,"sourceUnit":58,"src":"384:102:11","symbolAliases":[{"foreign":{"id":2419,"name":"IChainStorageContainer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":57,"src":"393:22:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2421,"name":"IChainStorageContainer","nameLocations":["528:22:11"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"528:22:11"},"id":2422,"nodeType":"InheritanceSpecifier","src":"528:22:11"},{"baseName":{"id":2423,"name":"Lib_AddressResolver","nameLocations":["552:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"552:19:11"},"id":2424,"nodeType":"InheritanceSpecifier","src":"552:19:11"}],"canonicalName":"HelperChainStorageContainer","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2602,"linearizedBaseContracts":[2602,370,57],"name":"HelperChainStorageContainer","nameLocation":"497:27:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2428,"libraryName":{"id":2425,"name":"Lib_Buffer","nameLocations":["643:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"643:10:11"},"nodeType":"UsingForDirective","src":"637:39:11","typeName":{"id":2427,"nodeType":"UserDefinedTypeName","pathNode":{"id":2426,"name":"Lib_Buffer.Buffer","nameLocations":["658:10:11","669:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"658:17:11"},"referencedDeclaration":1625,"src":"658:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}}},{"constant":false,"functionSelector":"8da5cb5b","id":2430,"mutability":"mutable","name":"owner","nameLocation":"755:5:11","nodeType":"VariableDeclaration","scope":2602,"src":"741:19:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2429,"name":"string","nodeType":"ElementaryTypeName","src":"741:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"id":2433,"mutability":"mutable","name":"buffer","nameLocation":"793:6:11","nodeType":"VariableDeclaration","scope":2602,"src":"766:33:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer"},"typeName":{"id":2432,"nodeType":"UserDefinedTypeName","pathNode":{"id":2431,"name":"Lib_Buffer.Buffer","nameLocations":["766:10:11","777:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1625,"src":"766:17:11"},"referencedDeclaration":1625,"src":"766:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage_ptr","typeString":"struct Lib_Buffer.Buffer"}},"visibility":"internal"},{"constant":false,"id":2435,"mutability":"mutable","name":"savedHash","nameLocation":"814:9:11","nodeType":"VariableDeclaration","scope":2602,"src":"806:17:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2434,"name":"bytes32","nodeType":"ElementaryTypeName","src":"806:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"body":{"id":2450,"nodeType":"Block","src":"1183:31:11","statements":[{"expression":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2446,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"1193:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2447,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"1201:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1193:14:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2449,"nodeType":"ExpressionStatement","src":"1193:14:11"}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"895:169:11","text":" @param _libAddressManager Address of the Address Manager.\n @param _owner Name of the contract that owns this container (will be resolved later)."},"id":2451,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2443,"name":"_libAddressManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"1159:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2444,"kind":"baseConstructorSpecifier","modifierName":{"id":2442,"name":"Lib_AddressResolver","nameLocations":["1139:19:11"],"nodeType":"IdentifierPath","referencedDeclaration":370,"src":"1139:19:11"},"nodeType":"ModifierInvocation","src":"1139:39:11"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"_libAddressManager","nameLocation":"1089:18:11","nodeType":"VariableDeclaration","scope":2451,"src":"1081:26:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"_owner","nameLocation":"1123:6:11","nodeType":"VariableDeclaration","scope":2451,"src":"1109:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2439,"name":"string","nodeType":"ElementaryTypeName","src":"1109:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1080:50:11"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[],"src":"1183:0:11"},"scope":2602,"src":"1069:145:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2464,"nodeType":"Block","src":"1327:167:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1358:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1362:6:11","memberName":"sender","nodeType":"MemberAccess","src":"1358:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"1380:5:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2456,"name":"resolve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":369,"src":"1372:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_string_memory_ptr_$returns$_t_address_$","typeString":"function (string memory) view returns (address)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1372:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1358:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436861696e53746f72616765436f6e7461696e65723a2046756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e65722e","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1400:66:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5","typeString":"literal_string \"ChainStorageContainer: Function can only be called by the owner.\""},"value":"ChainStorageContainer: Function can only be called by the owner."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5","typeString":"literal_string \"ChainStorageContainer: Function can only be called by the owner.\""}],"id":2453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1337:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:139:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2462,"nodeType":"ExpressionStatement","src":"1337:139:11"},{"id":2463,"nodeType":"PlaceholderStatement","src":"1486:1:11"}]},"id":2465,"name":"onlyOwner","nameLocation":"1315:9:11","nodeType":"ModifierDefinition","parameters":{"id":2452,"nodeType":"ParameterList","parameters":[],"src":"1324:2:11"},"src":"1306:188:11","virtual":false,"visibility":"internal"},{"baseFunctions":[8],"body":{"id":2478,"nodeType":"Block","src":"1758:60:11","statements":[{"expression":{"arguments":[{"id":2475,"name":"_globalMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2468,"src":"1795:15:11","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes27","typeString":"bytes27"}],"expression":{"id":2473,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"1775:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer storage ref"}},"id":2474,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1782:12:11","memberName":"setExtraData","nodeType":"MemberAccess","referencedDeclaration":1851,"src":"1775:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_bytes27_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,bytes27)"}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1775:36:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"functionReturnParameters":2472,"id":2477,"nodeType":"Return","src":"1768:43:11"}]},"documentation":{"id":2466,"nodeType":"StructuredDocumentation","src":"1580:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"29061de2","id":2479,"implemented":true,"kind":"function","modifiers":[{"id":2471,"kind":"modifierInvocation","modifierName":{"id":2470,"name":"onlyOwner","nameLocations":["1748:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2465,"src":"1748:9:11"},"nodeType":"ModifierInvocation","src":"1748:9:11"}],"name":"setGlobalMetadata","nameLocation":"1698:17:11","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"_globalMetadata","nameLocation":"1724:15:11","nodeType":"VariableDeclaration","scope":2479,"src":"1716:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":2467,"name":"bytes27","nodeType":"ElementaryTypeName","src":"1716:7:11","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"1715:25:11"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"1758:0:11"},"scope":2602,"src":"1689:129:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[14],"body":{"id":2489,"nodeType":"Block","src":"1992:45:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2485,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2009:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer storage ref"}},"id":2486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2016:12:11","memberName":"getExtraData","nodeType":"MemberAccess","referencedDeclaration":1871,"src":"2009:19:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_bytes27_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (bytes27)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"functionReturnParameters":2484,"id":2488,"nodeType":"Return","src":"2002:28:11"}]},"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"1824:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"ccf8f969","id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"getGlobalMetadata","nameLocation":"1942:17:11","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[],"src":"1959:2:11"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"1983:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":2482,"name":"bytes27","nodeType":"ElementaryTypeName","src":"1983:7:11","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"1982:9:11"},"scope":2602,"src":"1933:104:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[20],"body":{"id":2503,"nodeType":"Block","src":"2200:51:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2498,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2225:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer storage ref"}},"id":2499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2232:9:11","memberName":"getLength","nodeType":"MemberAccess","referencedDeclaration":1822,"src":"2225:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Buffer_$1625_storage_ptr_$returns$_t_uint40_$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer) view returns (uint40)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":2497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2217:7:11","typeDescriptions":{}}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2495,"id":2502,"nodeType":"Return","src":"2210:34:11"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"2043:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"1f7b6d32","id":2504,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"2161:6:11","nodeType":"FunctionDefinition","parameters":{"id":2492,"nodeType":"ParameterList","parameters":[],"src":"2167:2:11"},"returnParameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2504,"src":"2191:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"2191:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2190:9:11"},"scope":2602,"src":"2152:99:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[26],"body":{"id":2518,"nodeType":"Block","src":"2414:37:11","statements":[{"expression":{"arguments":[{"id":2515,"name":"_object","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"2436:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2512,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2424:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer storage ref"}},"id":2514,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2431:4:11","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":1700,"src":"2424:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,bytes32)"}},"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2424:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2517,"nodeType":"ExpressionStatement","src":"2424:20:11"}]},"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"2257:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"b298e36b","id":2519,"implemented":true,"kind":"function","modifiers":[{"id":2510,"kind":"modifierInvocation","modifierName":{"id":2509,"name":"onlyOwner","nameLocations":["2404:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2465,"src":"2404:9:11"},"nodeType":"ModifierInvocation","src":"2404:9:11"}],"name":"push","nameLocation":"2375:4:11","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"_object","nameLocation":"2388:7:11","nodeType":"VariableDeclaration","scope":2519,"src":"2380:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2380:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2379:17:11"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[],"src":"2414:0:11"},"scope":2602,"src":"2366:85:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[34],"body":{"id":2536,"nodeType":"Block","src":"2639:54:11","statements":[{"expression":{"arguments":[{"id":2532,"name":"_object","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2661:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2533,"name":"_globalMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"2670:15:11","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes27","typeString":"bytes27"}],"expression":{"id":2529,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2649:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer storage ref"}},"id":2531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2656:4:11","memberName":"push","nodeType":"MemberAccess","referencedDeclaration":1675,"src":"2649:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_bytes32_$_t_bytes27_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,bytes32,bytes27)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2535,"nodeType":"ExpressionStatement","src":"2649:37:11"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"2457:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"2015276c","id":2537,"implemented":true,"kind":"function","modifiers":[{"id":2527,"kind":"modifierInvocation","modifierName":{"id":2526,"name":"onlyOwner","nameLocations":["2629:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2465,"src":"2629:9:11"},"nodeType":"ModifierInvocation","src":"2629:9:11"}],"name":"push","nameLocation":"2575:4:11","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"_object","nameLocation":"2588:7:11","nodeType":"VariableDeclaration","scope":2537,"src":"2580:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2580:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"_globalMetadata","nameLocation":"2605:15:11","nodeType":"VariableDeclaration","scope":2537,"src":"2597:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":2523,"name":"bytes27","nodeType":"ElementaryTypeName","src":"2597:7:11","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"2579:42:11"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[],"src":"2639:0:11"},"scope":2602,"src":"2566:127:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[42],"body":{"id":2547,"nodeType":"Block","src":"2867:33:11","statements":[{"expression":{"id":2545,"name":"savedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"2884:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2544,"id":2546,"nodeType":"Return","src":"2877:16:11"}]},"documentation":{"id":2538,"nodeType":"StructuredDocumentation","src":"2699:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"9507d39a","id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"2817:3:11","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"_index","nameLocation":"2829:6:11","nodeType":"VariableDeclaration","scope":2548,"src":"2821:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2820:16:11"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"2858:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:9:11"},"scope":2602,"src":"2808:92:11","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[48],"body":{"id":2565,"nodeType":"Block","src":"3086:68:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2561,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"3139:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3132:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2559,"name":"uint40","nodeType":"ElementaryTypeName","src":"3132:6:11","typeDescriptions":{}}},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3132:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"expression":{"id":2556,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3096:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer storage ref"}},"id":2558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3103:28:11","memberName":"deleteElementsAfterInclusive","nodeType":"MemberAccess","referencedDeclaration":1802,"src":"3096:35:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_uint40_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,uint40)"}},"id":2563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3096:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2564,"nodeType":"ExpressionStatement","src":"3096:51:11"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"2906:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"4651d91e","id":2566,"implemented":true,"kind":"function","modifiers":[{"id":2554,"kind":"modifierInvocation","modifierName":{"id":2553,"name":"onlyOwner","nameLocations":["3076:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2465,"src":"3076:9:11"},"nodeType":"ModifierInvocation","src":"3076:9:11"}],"name":"deleteElementsAfterInclusive","nameLocation":"3024:28:11","nodeType":"FunctionDefinition","parameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"_index","nameLocation":"3061:6:11","nodeType":"VariableDeclaration","scope":2566,"src":"3053:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"3053:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3052:16:11"},"returnParameters":{"id":2555,"nodeType":"ParameterList","parameters":[],"src":"3086:0:11"},"scope":2602,"src":"3015:139:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[56],"body":{"id":2586,"nodeType":"Block","src":"3385:85:11","statements":[{"expression":{"arguments":[{"arguments":[{"id":2581,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"3438:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3431:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":2579,"name":"uint40","nodeType":"ElementaryTypeName","src":"3431:6:11","typeDescriptions":{}}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3431:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":2583,"name":"_globalMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"3447:15:11","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_bytes27","typeString":"bytes27"}],"expression":{"id":2576,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"3395:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Buffer_$1625_storage","typeString":"struct Lib_Buffer.Buffer storage ref"}},"id":2578,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:28:11","memberName":"deleteElementsAfterInclusive","nodeType":"MemberAccess","referencedDeclaration":1777,"src":"3395:35:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Buffer_$1625_storage_ptr_$_t_uint40_$_t_bytes27_$returns$__$bound_to$_t_struct$_Buffer_$1625_storage_ptr_$","typeString":"function (struct Lib_Buffer.Buffer storage pointer,uint40,bytes27)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3395:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2585,"nodeType":"ExpressionStatement","src":"3395:68:11"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"3160:53:11","text":" @inheritdoc IChainStorageContainer"},"functionSelector":"167fd681","id":2587,"implemented":true,"kind":"function","modifiers":[{"id":2574,"kind":"modifierInvocation","modifierName":{"id":2573,"name":"onlyOwner","nameLocations":["3371:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":2465,"src":"3371:9:11"},"nodeType":"ModifierInvocation","src":"3371:9:11"}],"name":"deleteElementsAfterInclusive","nameLocation":"3278:28:11","nodeType":"FunctionDefinition","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"_index","nameLocation":"3315:6:11","nodeType":"VariableDeclaration","scope":2587,"src":"3307:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"_globalMetadata","nameLocation":"3331:15:11","nodeType":"VariableDeclaration","scope":2587,"src":"3323:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"},"typeName":{"id":2570,"name":"bytes27","nodeType":"ElementaryTypeName","src":"3323:7:11","typeDescriptions":{"typeIdentifier":"t_bytes27","typeString":"bytes27"}},"visibility":"internal"}],"src":"3306:41:11"},"returnParameters":{"id":2575,"nodeType":"ParameterList","parameters":[],"src":"3385:0:11"},"scope":2602,"src":"3269:201:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2600,"nodeType":"Block","src":"3556:71:11","statements":[{"expression":{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2593,"name":"savedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"3566:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2596,"name":"_batchHeader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"3607:12:11","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader memory"}],"expression":{"id":2594,"name":"Lib_OVMCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3578:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Lib_OVMCodec_$248_$","typeString":"type(library Lib_OVMCodec)"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3591:15:11","memberName":"hashBatchHeader","nodeType":"MemberAccess","referencedDeclaration":247,"src":"3578:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ChainBatchHeader_$91_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct Lib_OVMCodec.ChainBatchHeader memory) pure returns (bytes32)"}},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3578:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3566:54:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2599,"nodeType":"ExpressionStatement","src":"3566:54:11"}]},"functionSelector":"3d160572","id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"setSavedHash","nameLocation":"3485:12:11","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"_batchHeader","nameLocation":"3535:12:11","nodeType":"VariableDeclaration","scope":2601,"src":"3498:49:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_memory_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader"},"typeName":{"id":2589,"nodeType":"UserDefinedTypeName","pathNode":{"id":2588,"name":"Lib_OVMCodec.ChainBatchHeader","nameLocations":["3498:12:11","3511:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":91,"src":"3498:29:11"},"referencedDeclaration":91,"src":"3498:29:11","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$91_storage_ptr","typeString":"struct Lib_OVMCodec.ChainBatchHeader"}},"visibility":"internal"}],"src":"3497:51:11"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"3556:0:11"},"scope":2602,"src":"3476:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2603,"src":"488:3141:11","usedErrors":[]}],"src":"32:3598:11"},"id":11},"contracts/messaging/connectors/Connector.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/Connector.sol","exportedSymbols":{"Connector":[2841],"IConnector":[5324],"ProposedOwnable":[5715]},"id":2842,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2604,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:12"},{"absolutePath":"contracts/shared/ProposedOwnable.sol","file":"../../shared/ProposedOwnable.sol","id":2606,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2842,"sourceUnit":5716,"src":"71:65:12","symbolAliases":[{"foreign":{"id":2605,"name":"ProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"79:15:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/interfaces/IConnector.sol","file":"../interfaces/IConnector.sol","id":2608,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2842,"sourceUnit":5325,"src":"137:56:12","symbolAliases":[{"foreign":{"id":2607,"name":"IConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"145:10:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2610,"name":"ProposedOwnable","nameLocations":["754:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":5715,"src":"754:15:12"},"id":2611,"nodeType":"InheritanceSpecifier","src":"754:15:12"},{"baseName":{"id":2612,"name":"IConnector","nameLocations":["771:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":5324,"src":"771:10:12"},"id":2613,"nodeType":"InheritanceSpecifier","src":"771:10:12"}],"canonicalName":"Connector","contractDependencies":[],"contractKind":"contract","documentation":{"id":2609,"nodeType":"StructuredDocumentation","src":"195:527:12","text":" @title Connector\n @author Connext Labs, Inc.\n @notice This contract has the messaging interface functions used by all connectors.\n @dev This contract stores information about mirror connectors, but can be used as a\n base for contracts that do not have a mirror (i.e. the connector handling messaging on\n mainnet). In this case, the `mirrorConnector` and `MIRROR_DOMAIN`\n will be empty\n @dev If ownership is renounced, this contract will be unable to update its `mirrorConnector`\n or `mirrorGas`"},"fullyImplemented":false,"id":2841,"linearizedBaseContracts":[2841,5324,5715,5753],"name":"Connector","nameLocation":"741:9:12","nodeType":"ContractDefinition","nodes":[{"errorSelector":"5b0bf6d4","id":2615,"name":"Connector__processMessage_notUsed","nameLocation":"835:33:12","nodeType":"ErrorDefinition","parameters":{"id":2614,"nodeType":"ParameterList","parameters":[],"src":"868:2:12"},"src":"829:42:12"},{"anonymous":false,"eventSelector":"4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f0","id":2627,"name":"NewConnector","nameLocation":"920:12:12","nodeType":"EventDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"indexed":true,"mutability":"mutable","name":"domain","nameLocation":"953:6:12","nodeType":"VariableDeclaration","scope":2627,"src":"938:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2616,"name":"uint32","nodeType":"ElementaryTypeName","src":"938:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2619,"indexed":true,"mutability":"mutable","name":"mirrorDomain","nameLocation":"980:12:12","nodeType":"VariableDeclaration","scope":2627,"src":"965:27:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2618,"name":"uint32","nodeType":"ElementaryTypeName","src":"965:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2621,"indexed":false,"mutability":"mutable","name":"amb","nameLocation":"1006:3:12","nodeType":"VariableDeclaration","scope":2627,"src":"998:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2623,"indexed":false,"mutability":"mutable","name":"rootManager","nameLocation":"1023:11:12","nodeType":"VariableDeclaration","scope":2627,"src":"1015:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2622,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2625,"indexed":false,"mutability":"mutable","name":"mirrorConnector","nameLocation":"1048:15:12","nodeType":"VariableDeclaration","scope":2627,"src":"1040:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"932:135:12"},"src":"914:154:12"},{"anonymous":false,"eventSelector":"c77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc","id":2633,"name":"MirrorConnectorUpdated","nameLocation":"1078:22:12","nodeType":"EventDefinition","parameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"indexed":false,"mutability":"mutable","name":"previous","nameLocation":"1109:8:12","nodeType":"VariableDeclaration","scope":2633,"src":"1101:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2628,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2631,"indexed":false,"mutability":"mutable","name":"current","nameLocation":"1127:7:12","nodeType":"VariableDeclaration","scope":2633,"src":"1119:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1100:35:12"},"src":"1072:64:12"},{"constant":false,"documentation":{"id":2634,"nodeType":"StructuredDocumentation","src":"1187:78:12","text":" @notice The domain of this Messaging (i.e. Connector) contract."},"functionSelector":"52a9674b","id":2636,"mutability":"immutable","name":"DOMAIN","nameLocation":"1292:6:12","nodeType":"VariableDeclaration","scope":2841,"src":"1268:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2635,"name":"uint32","nodeType":"ElementaryTypeName","src":"1268:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"1303:57:12","text":" @notice Address of the AMB on this domain."},"functionSelector":"d69f9d61","id":2639,"mutability":"immutable","name":"AMB","nameLocation":"1388:3:12","nodeType":"VariableDeclaration","scope":2841,"src":"1363:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2640,"nodeType":"StructuredDocumentation","src":"1396:52:12","text":" @notice RootManager contract address."},"functionSelector":"5f61e3ec","id":2642,"mutability":"immutable","name":"ROOT_MANAGER","nameLocation":"1476:12:12","nodeType":"VariableDeclaration","scope":2841,"src":"1451:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"1451:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"1493:91:12","text":" @notice The domain of the corresponding messaging (i.e. Connector) contract."},"functionSelector":"14168416","id":2645,"mutability":"immutable","name":"MIRROR_DOMAIN","nameLocation":"1611:13:12","nodeType":"VariableDeclaration","scope":2841,"src":"1587:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2644,"name":"uint32","nodeType":"ElementaryTypeName","src":"1587:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"1629:73:12","text":" @notice Connector on L2 for L1 connectors, and vice versa."},"functionSelector":"cc394283","id":2648,"mutability":"mutable","name":"mirrorConnector","nameLocation":"1720:15:12","nodeType":"VariableDeclaration","scope":2841,"src":"1705:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":2660,"nodeType":"Block","src":"1877:52:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2652,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1891:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1895:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1891:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2654,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"1905:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1891:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"21414d42","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1910:6:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","typeString":"literal_string \"!AMB\""},"value":"!AMB"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","typeString":"literal_string \"!AMB\""}],"id":2651,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1883:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2658,"nodeType":"ExpressionStatement","src":"1883:34:12"},{"id":2659,"nodeType":"PlaceholderStatement","src":"1923:1:12"}]},"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"1782:73:12","text":" @notice Errors if the msg.sender is not the registered AMB"},"id":2661,"name":"onlyAMB","nameLocation":"1867:7:12","nodeType":"ModifierDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[],"src":"1874:2:12"},"src":"1858:71:12","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"2045:222:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2665,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2212:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2212:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2667,"name":"ROOT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"2226:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2212:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"21726f6f744d616e61676572","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2240:14:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","typeString":"literal_string \"!rootManager\""},"value":"!rootManager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","typeString":"literal_string \"!rootManager\""}],"id":2664,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2204:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2671,"nodeType":"ExpressionStatement","src":"2204:51:12"},{"id":2672,"nodeType":"PlaceholderStatement","src":"2261:1:12"}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"1933:82:12","text":" @notice Errors if the msg.sender is not the registered ROOT_MANAGER"},"id":2674,"name":"onlyRootManager","nameLocation":"2027:15:12","nodeType":"ModifierDefinition","parameters":{"id":2663,"nodeType":"ParameterList","parameters":[],"src":"2042:2:12"},"src":"2018:249:12","virtual":false,"visibility":"internal"},{"body":{"id":2748,"nodeType":"Block","src":"3011:612:12","statements":[{"expression":{"arguments":[{"expression":{"id":2691,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3048:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3052:6:12","memberName":"sender","nodeType":"MemberAccess","src":"3048:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2690,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"3038:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3038:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2694,"nodeType":"ExpressionStatement","src":"3038:21:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3105:7:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3116:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3105:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656d70747920646f6d61696e","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3119:14:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","typeString":"literal_string \"empty domain\""},"value":"empty domain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","typeString":"literal_string \"empty domain\""}],"id":2695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3097:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3097:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2701,"nodeType":"ExpressionStatement","src":"3097:37:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3148:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3172:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3164:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2704,"name":"address","nodeType":"ElementaryTypeName","src":"3164:7:12","typeDescriptions":{}}},"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3164:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3148:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656d70747920726f6f744d616e61676572","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3176:19:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","typeString":"literal_string \"empty rootManager\""},"value":"empty rootManager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","typeString":"literal_string \"empty rootManager\""}],"id":2702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2711,"nodeType":"ExpressionStatement","src":"3140:56:12"},{"expression":{"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2712,"name":"DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2636,"src":"3308:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2713,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3317:7:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3308:16:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2715,"nodeType":"ExpressionStatement","src":"3308:16:12"},{"expression":{"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2716,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"3330:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2717,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"3336:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3330:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2719,"nodeType":"ExpressionStatement","src":"3330:10:12"},{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2720,"name":"ROOT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"3346:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2721,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3361:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3346:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2723,"nodeType":"ExpressionStatement","src":"3346:27:12"},{"expression":{"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2724,"name":"MIRROR_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"3379:13:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2725,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3395:13:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3379:29:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2727,"nodeType":"ExpressionStatement","src":"3379:29:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2728,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3449:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3469:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"3469:7:12","typeDescriptions":{}}},"id":2732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3469:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3449:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2739,"nodeType":"IfStatement","src":"3445:88:12","trueBody":{"id":2738,"nodeType":"Block","src":"3481:52:12","statements":[{"expression":{"arguments":[{"id":2735,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3509:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2734,"name":"_setMirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"3489:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2737,"nodeType":"ExpressionStatement","src":"3489:37:12"}]}},{"eventCall":{"arguments":[{"id":2741,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3557:7:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2742,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"3566:13:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2743,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"3581:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2744,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"3587:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2745,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"3601:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2740,"name":"NewConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"3544:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint32_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint32,uint32,address,address,address)"}},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3544:74:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2747,"nodeType":"EmitStatement","src":"3539:79:12"}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"2315:539:12","text":" @notice Creates a new HubConnector instance\n @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n for optimism, there is one connector on optimism and one connector on mainnet)\n @param _domain The domain this connector lives on\n @param _mirrorDomain The spoke domain\n @param _amb The address of the amb on the domain this connector lives on\n @param _rootManager The address of the RootManager on mainnet\n @param _mirrorConnector The address of the spoke connector"},"id":2749,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":2688,"kind":"baseConstructorSpecifier","modifierName":{"id":2687,"name":"ProposedOwnable","nameLocations":["2993:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":5715,"src":"2993:15:12"},"nodeType":"ModifierInvocation","src":"2993:17:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"_domain","nameLocation":"2881:7:12","nodeType":"VariableDeclaration","scope":2749,"src":"2874:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2676,"name":"uint32","nodeType":"ElementaryTypeName","src":"2874:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2679,"mutability":"mutable","name":"_mirrorDomain","nameLocation":"2901:13:12","nodeType":"VariableDeclaration","scope":2749,"src":"2894:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2678,"name":"uint32","nodeType":"ElementaryTypeName","src":"2894:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2681,"mutability":"mutable","name":"_amb","nameLocation":"2928:4:12","nodeType":"VariableDeclaration","scope":2749,"src":"2920:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"2920:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"_rootManager","nameLocation":"2946:12:12","nodeType":"VariableDeclaration","scope":2749,"src":"2938:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2682,"name":"address","nodeType":"ElementaryTypeName","src":"2938:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"2972:16:12","nodeType":"VariableDeclaration","scope":2749,"src":"2964:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2684,"name":"address","nodeType":"ElementaryTypeName","src":"2964:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2868:124:12"},"returnParameters":{"id":2689,"nodeType":"ParameterList","parameters":[],"src":"3011:0:12"},"scope":2841,"src":"2857:766:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2753,"nodeType":"Block","src":"3808:2:12","statements":[]},"documentation":{"id":2750,"nodeType":"StructuredDocumentation","src":"3669:109:12","text":" @notice Connectors may need to receive native asset to handle fees when sending a\n message"},"id":2754,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"3788:2:12"},"returnParameters":{"id":2752,"nodeType":"ParameterList","parameters":[],"src":"3808:0:12"},"scope":2841,"src":"3781:29:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":2766,"nodeType":"Block","src":"4010:48:12","statements":[{"expression":{"arguments":[{"id":2763,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"4036:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2762,"name":"_setMirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2840,"src":"4016:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2765,"nodeType":"ExpressionStatement","src":"4016:37:12"}]},"documentation":{"id":2755,"nodeType":"StructuredDocumentation","src":"3862:74:12","text":" @notice Sets the address of the l2Connector for this domain"},"functionSelector":"5bd11efc","id":2767,"implemented":true,"kind":"function","modifiers":[{"id":2760,"kind":"modifierInvocation","modifierName":{"id":2759,"name":"onlyOwner","nameLocations":["4000:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":5554,"src":"4000:9:12"},"nodeType":"ModifierInvocation","src":"4000:9:12"}],"name":"setMirrorConnector","nameLocation":"3948:18:12","nodeType":"FunctionDefinition","parameters":{"id":2758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2757,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"3975:16:12","nodeType":"VariableDeclaration","scope":2767,"src":"3967:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2756,"name":"address","nodeType":"ElementaryTypeName","src":"3967:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3966:26:12"},"returnParameters":{"id":2761,"nodeType":"ParameterList","parameters":[],"src":"4010:0:12"},"scope":2841,"src":"3939:119:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[5316],"body":{"id":2785,"nodeType":"Block","src":"4331:79:12","statements":[{"expression":{"arguments":[{"id":2776,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"4353:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2775,"name":"_processMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"4337:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2778,"nodeType":"ExpressionStatement","src":"4337:22:12"},{"eventCall":{"arguments":[{"id":2780,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"4387:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2781,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4394:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4398:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4394:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2779,"name":"MessageProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4370:16:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2784,"nodeType":"EmitStatement","src":"4365:40:12"}]},"documentation":{"id":2768,"nodeType":"StructuredDocumentation","src":"4111:148:12","text":" @notice Processes a message received by an AMB\n @dev This is called by AMBs to process messages originating from mirror connector"},"functionSelector":"4ff746f6","id":2786,"implemented":true,"kind":"function","modifiers":[{"id":2773,"kind":"modifierInvocation","modifierName":{"id":2772,"name":"onlyAMB","nameLocations":["4323:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":2661,"src":"4323:7:12"},"nodeType":"ModifierInvocation","src":"4323:7:12"}],"name":"processMessage","nameLocation":"4271:14:12","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"_data","nameLocation":"4299:5:12","nodeType":"VariableDeclaration","scope":2786,"src":"4286:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"4286:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4285:20:12"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[],"src":"4331:0:12"},"scope":2841,"src":"4262:148:12","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"baseFunctions":[5323],"body":{"id":2798,"nodeType":"Block","src":"4555:42:12","statements":[{"expression":{"arguments":[{"id":2795,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4582:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2794,"name":"_verifySender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2825,"src":"4568:13:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2793,"id":2797,"nodeType":"Return","src":"4561:31:12"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"4414:73:12","text":" @notice Checks the cross domain sender for a given address"},"functionSelector":"db1b7659","id":2799,"implemented":true,"kind":"function","modifiers":[],"name":"verifySender","nameLocation":"4499:12:12","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"_expected","nameLocation":"4520:9:12","nodeType":"VariableDeclaration","scope":2799,"src":"4512:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"4512:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4511:19:12"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2799,"src":"4549:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2791,"name":"bool","nodeType":"ElementaryTypeName","src":"4549:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4548:6:12"},"scope":2841,"src":"4490:107:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2800,"nodeType":"StructuredDocumentation","src":"4651:326:12","text":" @notice This function is used by the Connext contract on the l2 domain to send a message to the\n l1 domain (i.e. called by Connext on optimism to send a message to mainnet with roots)\n @param _data The contents of the message\n @param _encodedData Data used to send the message; specific to connector"},"id":2807,"implemented":false,"kind":"function","modifiers":[],"name":"_sendMessage","nameLocation":"4989:12:12","nodeType":"FunctionDefinition","parameters":{"id":2805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"_data","nameLocation":"5015:5:12","nodeType":"VariableDeclaration","scope":2807,"src":"5002:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"5002:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"_encodedData","nameLocation":"5035:12:12","nodeType":"VariableDeclaration","scope":2807,"src":"5022:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2803,"name":"bytes","nodeType":"ElementaryTypeName","src":"5022:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5001:47:12"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[],"src":"5065:0:12"},"scope":2841,"src":"4980:86:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2816,"nodeType":"Block","src":"5296:191:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2813,"name":"Connector__processMessage_notUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"5447:33:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5447:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"RevertStatement","src":"5440:42:12"}]},"documentation":{"id":2808,"nodeType":"StructuredDocumentation","src":"5070:147:12","text":" @notice This function is used by the AMBs to handle incoming messages. Should store the latest\n root generated on the l2 domain."},"id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"_processMessage","nameLocation":"5229:15:12","nodeType":"FunctionDefinition","parameters":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"5250:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2809,"name":"bytes","nodeType":"ElementaryTypeName","src":"5250:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5244:34:12"},"returnParameters":{"id":2812,"nodeType":"ParameterList","parameters":[],"src":"5296:0:12"},"scope":2841,"src":"5220:267:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"5491:216:12","text":" @notice Verify that the msg.sender is the correct AMB contract, and that the message's origin sender\n is the expected address.\n @dev Should be overridden by the implementing Connector contract."},"id":2825,"implemented":false,"kind":"function","modifiers":[],"name":"_verifySender","nameLocation":"5719:13:12","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"_expected","nameLocation":"5741:9:12","nodeType":"VariableDeclaration","scope":2825,"src":"5733:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"5733:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5732:19:12"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"5778:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2822,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5777:6:12"},"scope":2841,"src":"5710:74:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2839,"nodeType":"Block","src":"5910:113:12","statements":[{"eventCall":{"arguments":[{"id":2831,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"5944:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2832,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"5961:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2830,"name":"MirrorConnectorUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"5921:22:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5921:57:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2834,"nodeType":"EmitStatement","src":"5916:62:12"},{"expression":{"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2835,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"5984:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2836,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"6002:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5984:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2838,"nodeType":"ExpressionStatement","src":"5984:34:12"}]},"id":2840,"implemented":true,"kind":"function","modifiers":[],"name":"_setMirrorConnector","nameLocation":"5847:19:12","nodeType":"FunctionDefinition","parameters":{"id":2828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"5875:16:12","nodeType":"VariableDeclaration","scope":2840,"src":"5867:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2826,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5866:26:12"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[],"src":"5910:0:12"},"scope":2841,"src":"5838:185:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2842,"src":"723:5302:12","usedErrors":[2615,5484,5486,5488,5490,5492,5494,5496]}],"src":"46:5980:12"},"id":12},"contracts/messaging/connectors/GasCap.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/GasCap.sol","exportedSymbols":{"GasCap":[2916],"ProposedOwnable":[5715]},"id":2917,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2843,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:13"},{"absolutePath":"contracts/shared/ProposedOwnable.sol","file":"../../shared/ProposedOwnable.sol","id":2845,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2917,"sourceUnit":5716,"src":"71:65:13","symbolAliases":[{"foreign":{"id":2844,"name":"ProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5715,"src":"79:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2846,"name":"ProposedOwnable","nameLocations":["166:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":5715,"src":"166:15:13"},"id":2847,"nodeType":"InheritanceSpecifier","src":"166:15:13"}],"canonicalName":"GasCap","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2916,"linearizedBaseContracts":[2916,5715,5753],"name":"GasCap","nameLocation":"156:6:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"225:224:13","text":" @notice The gnosis amb requires destination gas to be specified on the origin.\n The gas used will be passed in by the relayer to allow for real-time estimates,\n but will be capped at the admin-set cap."},"id":2850,"mutability":"mutable","name":"gasCap","nameLocation":"460:6:13","nodeType":"VariableDeclaration","scope":2916,"src":"452:14:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"510:139:13","text":" @notice Emitted when admin updates the gas cap\n @param _previous The starting value\n @param _updated The final value"},"eventSelector":"877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5","id":2857,"name":"GasCapUpdated","nameLocation":"658:13:13","nodeType":"EventDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"indexed":false,"mutability":"mutable","name":"_previous","nameLocation":"680:9:13","nodeType":"VariableDeclaration","scope":2857,"src":"672:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"672:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2855,"indexed":false,"mutability":"mutable","name":"_updated","nameLocation":"699:8:13","nodeType":"VariableDeclaration","scope":2857,"src":"691:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2854,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"671:37:13"},"src":"652:57:13"},{"body":{"id":2866,"nodeType":"Block","src":"785:30:13","statements":[{"expression":{"arguments":[{"id":2863,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2862,"name":"_setGasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"791:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"791:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2865,"nodeType":"ExpressionStatement","src":"791:19:13"}]},"id":2867,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"_gasCap","nameLocation":"776:7:13","nodeType":"VariableDeclaration","scope":2867,"src":"768:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:17:13"},"returnParameters":{"id":2861,"nodeType":"ParameterList","parameters":[],"src":"785:0:13"},"scope":2916,"src":"756:59:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2878,"nodeType":"Block","src":"913:30:13","statements":[{"expression":{"arguments":[{"id":2875,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"930:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2874,"name":"_setGasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"919:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"919:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2877,"nodeType":"ExpressionStatement","src":"919:19:13"}]},"functionSelector":"7850b020","id":2879,"implemented":true,"kind":"function","modifiers":[{"id":2872,"kind":"modifierInvocation","modifierName":{"id":2871,"name":"onlyOwner","nameLocations":["903:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":5554,"src":"903:9:13"},"nodeType":"ModifierInvocation","src":"903:9:13"}],"name":"setGasCap","nameLocation":"869:9:13","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"_gasCap","nameLocation":"887:7:13","nodeType":"VariableDeclaration","scope":2879,"src":"879:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2868,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"878:17:13"},"returnParameters":{"id":2873,"nodeType":"ParameterList","parameters":[],"src":"913:0:13"},"scope":2916,"src":"860:83:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2894,"nodeType":"Block","src":"1135:68:13","statements":[{"eventCall":{"arguments":[{"id":2886,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1160:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2887,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"1168:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2885,"name":"GasCapUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"1146:13:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1146:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"EmitStatement","src":"1141:35:13"},{"expression":{"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2890,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1182:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2891,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"1191:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1182:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2893,"nodeType":"ExpressionStatement","src":"1182:16:13"}]},"documentation":{"id":2880,"nodeType":"StructuredDocumentation","src":"992:94:13","text":" @notice Used (by admin) to update the gas cap\n @param _gasCap The new value"},"id":2895,"implemented":true,"kind":"function","modifiers":[],"name":"_setGasCap","nameLocation":"1098:10:13","nodeType":"FunctionDefinition","parameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"_gasCap","nameLocation":"1117:7:13","nodeType":"VariableDeclaration","scope":2895,"src":"1109:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1108:17:13"},"returnParameters":{"id":2884,"nodeType":"ParameterList","parameters":[],"src":"1135:0:13"},"scope":2916,"src":"1089:114:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2914,"nodeType":"Block","src":"1423:74:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2903,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"1433:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2904,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1440:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1433:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2911,"nodeType":"IfStatement","src":"1429:47:13","trueBody":{"id":2910,"nodeType":"Block","src":"1448:28:13","statements":[{"expression":{"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2906,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"1456:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2907,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"1463:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1456:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2909,"nodeType":"ExpressionStatement","src":"1456:13:13"}]}},{"expression":{"id":2912,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"1488:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2902,"id":2913,"nodeType":"Return","src":"1481:11:13"}]},"documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"1207:150:13","text":" @notice Used to get the gas to use. Will be the original value IFF it\n is less than the cap\n @param _gas The proposed gas value"},"id":2915,"implemented":true,"kind":"function","modifiers":[],"name":"_getGas","nameLocation":"1369:7:13","nodeType":"FunctionDefinition","parameters":{"id":2899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2898,"mutability":"mutable","name":"_gas","nameLocation":"1385:4:13","nodeType":"VariableDeclaration","scope":2915,"src":"1377:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1376:14:13"},"returnParameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2915,"src":"1414:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1413:9:13"},"scope":2916,"src":"1360:137:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2917,"src":"138:1361:13","usedErrors":[5484,5486,5488,5490,5492,5494,5496]}],"src":"46:1454:13"},"id":13},"contracts/messaging/connectors/HubConnector.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/HubConnector.sol","exportedSymbols":{"Connector":[2841],"HubConnector":[2969]},"id":2970,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2918,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:14"},{"absolutePath":"contracts/messaging/connectors/Connector.sol","file":"./Connector.sol","id":2920,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2970,"sourceUnit":2842,"src":"71:42:14","symbolAliases":[{"foreign":{"id":2919,"name":"Connector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"79:9:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2922,"name":"Connector","nameLocations":["653:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"653:9:14"},"id":2923,"nodeType":"InheritanceSpecifier","src":"653:9:14"}],"canonicalName":"HubConnector","contractDependencies":[],"contractKind":"contract","documentation":{"id":2921,"nodeType":"StructuredDocumentation","src":"115:503:14","text":" @title HubConnector\n @author Connext Labs, Inc.\n @notice This contract implements the messaging functions needed on the hub-side of a given AMB.\n The HubConnector has a limited set of functionality compared to the SpokeConnector, namely that\n it contains no logic to store or prove messages.\n @dev This contract should be deployed on the hub-side of an AMB (i.e. on L1), and contracts\n which extend this should implement the virtual functions defined in the BaseConnector class"},"fullyImplemented":false,"id":2969,"linearizedBaseContracts":[2969,2841,5324,5715,5753],"name":"HubConnector","nameLocation":"637:12:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2944,"nodeType":"Block","src":"1417:2:14","statements":[]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"667:539:14","text":" @notice Creates a new HubConnector instance\n @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n for optimism, there is one connector on optimism and one connector on mainnet)\n @param _domain The domain this connector lives on\n @param _mirrorDomain The spoke domain\n @param _amb The address of the amb on the domain this connector lives on\n @param _rootManager The address of the RootManager on mainnet\n @param _mirrorConnector The address of the spoke connector"},"id":2945,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2937,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"1355:7:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2938,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"1364:13:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2939,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"1379:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2940,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"1385:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2941,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"1399:16:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2942,"kind":"baseConstructorSpecifier","modifierName":{"id":2936,"name":"Connector","nameLocations":["1345:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"1345:9:14"},"nodeType":"ModifierInvocation","src":"1345:71:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"_domain","nameLocation":"1233:7:14","nodeType":"VariableDeclaration","scope":2945,"src":"1226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2925,"name":"uint32","nodeType":"ElementaryTypeName","src":"1226:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2928,"mutability":"mutable","name":"_mirrorDomain","nameLocation":"1253:13:14","nodeType":"VariableDeclaration","scope":2945,"src":"1246:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2927,"name":"uint32","nodeType":"ElementaryTypeName","src":"1246:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"_amb","nameLocation":"1280:4:14","nodeType":"VariableDeclaration","scope":2945,"src":"1272:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2929,"name":"address","nodeType":"ElementaryTypeName","src":"1272:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"_rootManager","nameLocation":"1298:12:14","nodeType":"VariableDeclaration","scope":2945,"src":"1290:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"1324:16:14","nodeType":"VariableDeclaration","scope":2945,"src":"1316:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2933,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1220:124:14"},"returnParameters":{"id":2943,"nodeType":"ParameterList","parameters":[],"src":"1417:0:14"},"scope":2969,"src":"1209:210:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2967,"nodeType":"Block","src":"1715:99:14","statements":[{"expression":{"arguments":[{"id":2956,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"1734:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2957,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"1741:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2955,"name":"_sendMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"1721:12:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory,bytes memory)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2959,"nodeType":"ExpressionStatement","src":"1721:33:14"},{"eventCall":{"arguments":[{"id":2961,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2948,"src":"1777:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2962,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"1784:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":2963,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1798:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1802:6:14","memberName":"sender","nodeType":"MemberAccess","src":"1798:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2960,"name":"MessageSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"1765:11:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,bytes memory,address)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1765:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2966,"nodeType":"EmitStatement","src":"1760:49:14"}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"1465:146:14","text":" @notice Sends a message over the amb\n @dev This is called by the root manager *only* on mainnet to propagate the aggregate root"},"functionSelector":"48e6fa23","id":2968,"implemented":true,"kind":"function","modifiers":[{"id":2953,"kind":"modifierInvocation","modifierName":{"id":2952,"name":"onlyRootManager","nameLocations":["1699:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":2674,"src":"1699:15:14"},"nodeType":"ModifierInvocation","src":"1699:15:14"}],"name":"sendMessage","nameLocation":"1623:11:14","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"_data","nameLocation":"1648:5:14","nodeType":"VariableDeclaration","scope":2968,"src":"1635:18:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2947,"name":"bytes","nodeType":"ElementaryTypeName","src":"1635:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2950,"mutability":"mutable","name":"_encodedData","nameLocation":"1668:12:14","nodeType":"VariableDeclaration","scope":2968,"src":"1655:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2949,"name":"bytes","nodeType":"ElementaryTypeName","src":"1655:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1634:47:14"},"returnParameters":{"id":2954,"nodeType":"ParameterList","parameters":[],"src":"1715:0:14"},"scope":2969,"src":"1614:200:14","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2970,"src":"619:1197:14","usedErrors":[2615,5484,5486,5488,5490,5492,5494,5496]}],"src":"46:1771:14"},"id":14},"contracts/messaging/connectors/optimism/BaseOptimism.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/BaseOptimism.sol","exportedSymbols":{"BaseOptimism":[3042],"GasCap":[2916],"OptimismAmb":[5475]},"id":3043,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2971,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:15"},{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol","file":"../../interfaces/ambs/optimism/OptimismAmb.sol","id":2973,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3043,"sourceUnit":5476,"src":"71:75:15","symbolAliases":[{"foreign":{"id":2972,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"79:11:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/GasCap.sol","file":"../GasCap.sol","id":2975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3043,"sourceUnit":2917,"src":"148:37:15","symbolAliases":[{"foreign":{"id":2974,"name":"GasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2916,"src":"156:6:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2976,"name":"GasCap","nameLocations":["221:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"221:6:15"},"id":2977,"nodeType":"InheritanceSpecifier","src":"221:6:15"}],"canonicalName":"BaseOptimism","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3042,"linearizedBaseContracts":[3042,2916,5715,5753],"name":"BaseOptimism","nameLocation":"205:12:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2985,"nodeType":"Block","src":"320:2:15","statements":[]},"id":2986,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2982,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"311:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2983,"kind":"baseConstructorSpecifier","modifierName":{"id":2981,"name":"GasCap","nameLocations":["304:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":2916,"src":"304:6:15"},"nodeType":"ModifierInvocation","src":"304:15:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"_gasCap","nameLocation":"295:7:15","nodeType":"VariableDeclaration","scope":2986,"src":"287:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"286:17:15"},"returnParameters":{"id":2984,"nodeType":"ParameterList","parameters":[],"src":"320:0:15"},"scope":3042,"src":"275:47:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3011,"nodeType":"Block","src":"455:115:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"469:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"473:6:15","memberName":"sender","nodeType":"MemberAccess","src":"469:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2998,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"483:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"469:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"21627269646765","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"489:9:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","typeString":"literal_string \"!bridge\""},"value":"!bridge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","typeString":"literal_string \"!bridge\""}],"id":2995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"461:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"461:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3002,"nodeType":"ExpressionStatement","src":"461:38:15"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3004,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"524:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3003,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"512:11:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OptimismAmb_$5475_$","typeString":"type(contract OptimismAmb)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"512:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OptimismAmb_$5475","typeString":"contract OptimismAmb"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"530:20:15","memberName":"xDomainMessageSender","nodeType":"MemberAccess","referencedDeclaration":5474,"src":"512:38:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"512:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3008,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"556:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"512:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2994,"id":3010,"nodeType":"Return","src":"505:60:15"}]},"id":3012,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySender","nameLocation":"379:13:15","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"_amb","nameLocation":"401:4:15","nodeType":"VariableDeclaration","scope":3012,"src":"393:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2987,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"_expected","nameLocation":"415:9:15","nodeType":"VariableDeclaration","scope":3012,"src":"407:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2989,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"392:33:15"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3012,"src":"449:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2992,"name":"bool","nodeType":"ElementaryTypeName","src":"449:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"448:6:15"},"scope":3042,"src":"370:200:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3040,"nodeType":"Block","src":"767:233:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3021,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"836:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"849:6:15","memberName":"length","nodeType":"MemberAccess","src":"836:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"859:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"836:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"2164617461206c656e677468","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"863:14:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_abfa6fb3ccf047761ac8ce83931004d0ae8b60afbf71730225c4a288d09a2b7b","typeString":"literal_string \"!data length\""},"value":"!data length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_abfa6fb3ccf047761ac8ce83931004d0ae8b60afbf71730225c4a288d09a2b7b","typeString":"literal_string \"!data length\""}],"id":3020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"828:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3027,"nodeType":"ExpressionStatement","src":"828:50:15"},{"expression":{"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3028,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"944:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3032,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"970:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"985:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:15","typeDescriptions":{}}}],"id":3035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"984:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":3030,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"959:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"963:6:15","memberName":"decode","nodeType":"MemberAccess","src":"959:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3029,"name":"_getGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2915,"src":"951:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"951:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"944:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3039,"nodeType":"ExpressionStatement","src":"944:51:15"}]},"documentation":{"id":3013,"nodeType":"StructuredDocumentation","src":"574:98:15","text":" @notice Using Optimism AMB, the gas is provided to `sendMessage` as an encoded uint"},"id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasFromEncoded","nameLocation":"684:18:15","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"_encodedData","nameLocation":"716:12:15","nodeType":"VariableDeclaration","scope":3041,"src":"703:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3014,"name":"bytes","nodeType":"ElementaryTypeName","src":"703:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"702:27:15"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3018,"mutability":"mutable","name":"_gas","nameLocation":"761:4:15","nodeType":"VariableDeclaration","scope":3041,"src":"753:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"753:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"752:14:15"},"scope":3042,"src":"675:325:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3043,"src":"187:815:15","usedErrors":[5484,5486,5488,5490,5492,5494,5496]}],"src":"46:957:15"},"id":15},"contracts/messaging/connectors/optimism/OptimismHubConnector.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/OptimismHubConnector.sol","exportedSymbols":{"BaseOptimism":[3042],"Connector":[2841],"HubConnector":[2969],"IRootManager":[5348],"IStateCommitmentChain":[5457],"L2MessageInclusionProof":[5380],"OVMCodec":[4424],"OptimismAmb":[5475],"OptimismHubConnector":[3420],"PredeployAddresses":[4464],"SecureMerkleTrie":[5288],"TypedMemView":[6830]},"id":3421,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3044,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:16"},{"absolutePath":"contracts/messaging/interfaces/IRootManager.sol","file":"../../interfaces/IRootManager.sol","id":3046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":5349,"src":"71:63:16","symbolAliases":[{"foreign":{"id":3045,"name":"IRootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"79:12:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol","file":"../../interfaces/ambs/optimism/OptimismAmb.sol","id":3048,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":5476,"src":"135:75:16","symbolAliases":[{"foreign":{"id":3047,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"143:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol","file":"../../interfaces/ambs/optimism/IStateCommitmentChain.sol","id":3051,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":5458,"src":"211:120:16","symbolAliases":[{"foreign":{"id":3049,"name":"IStateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"219:21:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3050,"name":"L2MessageInclusionProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"242:23:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/shared/libraries/TypedMemView.sol","file":"../../../shared/libraries/TypedMemView.sol","id":3053,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":6831,"src":"333:72:16","symbolAliases":[{"foreign":{"id":3052,"name":"TypedMemView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6830,"src":"341:12:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/HubConnector.sol","file":"../HubConnector.sol","id":3055,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":2970,"src":"407:49:16","symbolAliases":[{"foreign":{"id":3054,"name":"HubConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"415:12:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/Connector.sol","file":"../Connector.sol","id":3057,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":2842,"src":"457:43:16","symbolAliases":[{"foreign":{"id":3056,"name":"Connector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"465:9:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol","file":"./lib/PredeployAddresses.sol","id":3059,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":4465,"src":"502:64:16","symbolAliases":[{"foreign":{"id":3058,"name":"PredeployAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"510:18:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/OVMCodec.sol","file":"./lib/OVMCodec.sol","id":3061,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":4425,"src":"567:44:16","symbolAliases":[{"foreign":{"id":3060,"name":"OVMCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"575:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol","file":"./lib/SecureMerkleTrie.sol","id":3063,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":5289,"src":"612:60:16","symbolAliases":[{"foreign":{"id":3062,"name":"SecureMerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"620:16:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/BaseOptimism.sol","file":"./BaseOptimism.sol","id":3065,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3421,"sourceUnit":3043,"src":"674:48:16","symbolAliases":[{"foreign":{"id":3064,"name":"BaseOptimism","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"682:12:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3066,"name":"HubConnector","nameLocations":["757:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2969,"src":"757:12:16"},"id":3067,"nodeType":"InheritanceSpecifier","src":"757:12:16"},{"baseName":{"id":3068,"name":"BaseOptimism","nameLocations":["771:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3042,"src":"771:12:16"},"id":3069,"nodeType":"InheritanceSpecifier","src":"771:12:16"}],"canonicalName":"OptimismHubConnector","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3420,"linearizedBaseContracts":[3420,3042,2916,2969,2841,5324,5715,5753],"name":"OptimismHubConnector","nameLocation":"733:20:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3072,"libraryName":{"id":3070,"name":"TypedMemView","nameLocations":["835:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":6830,"src":"835:12:16"},"nodeType":"UsingForDirective","src":"829:29:16","typeName":{"id":3071,"name":"bytes","nodeType":"ElementaryTypeName","src":"852:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"global":false,"id":3075,"libraryName":{"id":3073,"name":"TypedMemView","nameLocations":["867:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":6830,"src":"867:12:16"},"nodeType":"UsingForDirective","src":"861:31:16","typeName":{"id":3074,"name":"bytes29","nodeType":"ElementaryTypeName","src":"884:7:16","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}},{"constant":false,"functionSelector":"0f329ef8","id":3078,"mutability":"immutable","name":"stateCommitmentChain","nameLocation":"974:20:16","nodeType":"VariableDeclaration","scope":3420,"src":"935:59:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$5457","typeString":"contract IStateCommitmentChain"},"typeName":{"id":3077,"nodeType":"UserDefinedTypeName","pathNode":{"id":3076,"name":"IStateCommitmentChain","nameLocations":["935:21:16"],"nodeType":"IdentifierPath","referencedDeclaration":5457,"src":"935:21:16"},"referencedDeclaration":5457,"src":"935:21:16","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$5457","typeString":"contract IStateCommitmentChain"}},"visibility":"public"},{"constant":false,"functionSelector":"c1f0808a","id":3082,"mutability":"mutable","name":"processed","nameLocation":"1419:9:16","nodeType":"VariableDeclaration","scope":3420,"src":"1387:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":3081,"keyType":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1395:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1387:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":3080,"name":"bool","nodeType":"ElementaryTypeName","src":"1406:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":3115,"nodeType":"Block","src":"1765:78:16","statements":[{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"stateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"1771:20:16","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$5457","typeString":"contract IStateCommitmentChain"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3111,"name":"_stateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"1816:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3110,"name":"IStateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"1794:21:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStateCommitmentChain_$5457_$","typeString":"type(contract IStateCommitmentChain)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$5457","typeString":"contract IStateCommitmentChain"}},"src":"1771:67:16","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$5457","typeString":"contract IStateCommitmentChain"}},"id":3114,"nodeType":"ExpressionStatement","src":"1771:67:16"}]},"id":3116,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":3099,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"1681:7:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3100,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"1690:13:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3101,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"1705:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3102,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"1711:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3103,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"1725:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3104,"kind":"baseConstructorSpecifier","modifierName":{"id":3098,"name":"HubConnector","nameLocations":["1668:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":2969,"src":"1668:12:16"},"nodeType":"ModifierInvocation","src":"1668:74:16"},{"arguments":[{"id":3106,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"1756:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3107,"kind":"baseConstructorSpecifier","modifierName":{"id":3105,"name":"BaseOptimism","nameLocations":["1743:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3042,"src":"1743:12:16"},"nodeType":"ModifierInvocation","src":"1743:21:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"_domain","nameLocation":"1500:7:16","nodeType":"VariableDeclaration","scope":3116,"src":"1493:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3083,"name":"uint32","nodeType":"ElementaryTypeName","src":"1493:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"_mirrorDomain","nameLocation":"1520:13:16","nodeType":"VariableDeclaration","scope":3116,"src":"1513:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3085,"name":"uint32","nodeType":"ElementaryTypeName","src":"1513:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3088,"mutability":"mutable","name":"_amb","nameLocation":"1547:4:16","nodeType":"VariableDeclaration","scope":3116,"src":"1539:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"_rootManager","nameLocation":"1565:12:16","nodeType":"VariableDeclaration","scope":3116,"src":"1557:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3089,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"1591:16:16","nodeType":"VariableDeclaration","scope":3116,"src":"1583:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3091,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3094,"mutability":"mutable","name":"_stateCommitmentChain","nameLocation":"1621:21:16","nodeType":"VariableDeclaration","scope":3116,"src":"1613:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3093,"name":"address","nodeType":"ElementaryTypeName","src":"1613:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3096,"mutability":"mutable","name":"_gasCap","nameLocation":"1656:7:16","nodeType":"VariableDeclaration","scope":3116,"src":"1648:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1487:180:16"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[],"src":"1765:0:16"},"scope":3420,"src":"1476:367:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2825],"body":{"id":3129,"nodeType":"Block","src":"1971:47:16","statements":[{"expression":{"arguments":[{"id":3125,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"1998:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3126,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"2003:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3124,"name":"_verifySender","nodeType":"Identifier","overloadedDeclarations":[3130,3012],"referencedDeclaration":3012,"src":"1984:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1984:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3123,"id":3128,"nodeType":"Return","src":"1977:36:16"}]},"id":3130,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySender","nameLocation":"1900:13:16","nodeType":"FunctionDefinition","overrides":{"id":3120,"nodeType":"OverrideSpecifier","overrides":[],"src":"1947:8:16"},"parameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"_expected","nameLocation":"1922:9:16","nodeType":"VariableDeclaration","scope":3130,"src":"1914:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3117,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1913:19:16"},"returnParameters":{"id":3123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"1965:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3121,"name":"bool","nodeType":"ElementaryTypeName","src":"1965:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1964:6:16"},"scope":3420,"src":"1891:127:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[2807],"body":{"id":3169,"nodeType":"Block","src":"2172:325:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3140,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"2241:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2247:6:16","memberName":"length","nodeType":"MemberAccess","src":"2241:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":3142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2257:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2241:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"216c656e677468","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2261:9:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","typeString":"literal_string \"!length\""},"value":"!length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","typeString":"literal_string \"!length\""}],"id":3139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2233:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3146,"nodeType":"ExpressionStatement","src":"2233:38:16"},{"assignments":[3148],"declarations":[{"constant":false,"id":3148,"mutability":"mutable","name":"_calldata","nameLocation":"2314:9:16","nodeType":"VariableDeclaration","scope":3169,"src":"2301:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3147,"name":"bytes","nodeType":"ElementaryTypeName","src":"2301:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3156,"initialValue":{"arguments":[{"expression":{"expression":{"id":3151,"name":"Connector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"2349:9:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Connector_$2841_$","typeString":"type(contract Connector)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2359:14:16","memberName":"processMessage","nodeType":"MemberAccess","referencedDeclaration":2786,"src":"2349:24:16","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function Connector.processMessage(bytes memory)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2374:8:16","memberName":"selector","nodeType":"MemberAccess","src":"2349:33:16","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3154,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"2384:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3149,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2326:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2330:18:16","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2326:22:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2301:89:16"},{"expression":{"arguments":[{"id":3161,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"2449:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3162,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"2466:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":3165,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"2484:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2477:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3163,"name":"uint32","nodeType":"ElementaryTypeName","src":"2477:6:16","typeDescriptions":{}}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"arguments":[{"id":3158,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"2432:3:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3157,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5475,"src":"2420:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OptimismAmb_$5475_$","typeString":"type(contract OptimismAmb)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OptimismAmb_$5475","typeString":"contract OptimismAmb"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2437:11:16","memberName":"sendMessage","nodeType":"MemberAccess","referencedDeclaration":5469,"src":"2420:28:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$","typeString":"function (address,bytes memory,uint32) external"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:72:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3168,"nodeType":"ExpressionStatement","src":"2420:72:16"}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"2022:60:16","text":" @dev Sends `aggregateRoot` to messaging on l2"},"id":3170,"implemented":true,"kind":"function","modifiers":[],"name":"_sendMessage","nameLocation":"2094:12:16","nodeType":"FunctionDefinition","overrides":{"id":3137,"nodeType":"OverrideSpecifier","overrides":[],"src":"2163:8:16"},"parameters":{"id":3136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"_data","nameLocation":"2120:5:16","nodeType":"VariableDeclaration","scope":3170,"src":"2107:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3132,"name":"bytes","nodeType":"ElementaryTypeName","src":"2107:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3135,"mutability":"mutable","name":"_encodedData","nameLocation":"2140:12:16","nodeType":"VariableDeclaration","scope":3170,"src":"2127:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3134,"name":"bytes","nodeType":"ElementaryTypeName","src":"2127:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2106:47:16"},"returnParameters":{"id":3138,"nodeType":"ParameterList","parameters":[],"src":"2172:0:16"},"scope":3420,"src":"2085:412:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3267,"nodeType":"Block","src":"3027:1567:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"3085:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3187,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"3096:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3085:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"216d6972726f72436f6e6e6563746f72","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3113:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","typeString":"literal_string \"!mirrorConnector\""},"value":"!mirrorConnector"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","typeString":"literal_string \"!mirrorConnector\""}],"id":3185,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3077:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3191,"nodeType":"ExpressionStatement","src":"3077:55:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"3189:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3196,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3208:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_OptimismHubConnector_$3420","typeString":"contract OptimismHubConnector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OptimismHubConnector_$3420","typeString":"contract OptimismHubConnector"}],"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3200:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"3200:7:16","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3200:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3189:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"2174686973","id":3199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3215:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","typeString":"literal_string \"!this\""},"value":"!this"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","typeString":"literal_string \"!this\""}],"id":3192,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3181:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3201,"nodeType":"ExpressionStatement","src":"3181:42:16"},{"assignments":[3203],"declarations":[{"constant":false,"id":3203,"mutability":"mutable","name":"xDomainData","nameLocation":"3271:11:16","nodeType":"VariableDeclaration","scope":3267,"src":"3258:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3202,"name":"bytes","nodeType":"ElementaryTypeName","src":"3258:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3210,"initialValue":{"arguments":[{"id":3205,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"3308:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3206,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"3317:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3207,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"3326:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3208,"name":"_messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"3336:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3204,"name":"_encodeXDomainCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"3285:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes memory)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3258:92:16"},{"expression":{"arguments":[{"arguments":[{"id":3213,"name":"xDomainData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"3387:11:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3214,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"3400:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}],"id":3212,"name":"_verifyXDomainMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"3365:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_struct$_L2MessageInclusionProof_$5380_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,struct L2MessageInclusionProof memory) view returns (bool)"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"2170726f6f66","id":3216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3409:8:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","typeString":"literal_string \"!proof\""},"value":"!proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","typeString":"literal_string \"!proof\""}],"id":3211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3357:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3357:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3218,"nodeType":"ExpressionStatement","src":"3357:61:16"},{"assignments":[3220],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"_view","nameLocation":"4195:5:16","nodeType":"VariableDeclaration","scope":3267,"src":"4187:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3219,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4187:7:16","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":3225,"initialValue":{"arguments":[{"hexValue":"30","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4216:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3221,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4203:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4212:3:16","memberName":"ref","nodeType":"MemberAccess","referencedDeclaration":6156,"src":"4203:12:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint40_$returns$_t_bytes29_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint40) pure returns (bytes29)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4203:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"4187:31:16"},{"assignments":[3227],"declarations":[{"constant":false,"id":3227,"mutability":"mutable","name":"root","nameLocation":"4232:4:16","nodeType":"VariableDeclaration","scope":3267,"src":"4224:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4224:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3237,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3230,"name":"_view","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4251:5:16","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4257:3:16","memberName":"len","nodeType":"MemberAccess","referencedDeclaration":6230,"src":"4251:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4251:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4265:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4251:16:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"3332","id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4269:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":3228,"name":"_view","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"4239:5:16","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4245:5:16","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":6417,"src":"4239:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4239:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4224:48:16"},{"condition":{"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4283:16:16","subExpression":{"baseExpression":{"id":3238,"name":"processed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"4284:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":3240,"indexExpression":{"id":3239,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4294:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4284:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3266,"nodeType":"IfStatement","src":"4279:260:16","trueBody":{"id":3265,"nodeType":"Block","src":"4301:238:16","statements":[{"expression":{"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3242,"name":"processed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"4340:9:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":3244,"indexExpression":{"id":3243,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4350:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4340:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4358:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4340:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3247,"nodeType":"ExpressionStatement","src":"4340:22:16"},{"expression":{"arguments":[{"id":3252,"name":"MIRROR_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2645,"src":"4452:13:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3253,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4467:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":3249,"name":"ROOT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"4428:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3248,"name":"IRootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"4415:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRootManager_$5348_$","typeString":"type(contract IRootManager)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4415:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRootManager_$5348","typeString":"contract IRootManager"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4442:9:16","memberName":"aggregate","nodeType":"MemberAccess","referencedDeclaration":5347,"src":"4415:36:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32) external"}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4415:57:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3255,"nodeType":"ExpressionStatement","src":"4415:57:16"},{"eventCall":{"arguments":[{"arguments":[{"id":3259,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"4514:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3257,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4503:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4507:6:16","memberName":"encode","nodeType":"MemberAccess","src":"4503:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4503:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3261,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4521:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4525:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4521:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3256,"name":"MessageProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"4486:16:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4486:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3264,"nodeType":"EmitStatement","src":"4481:51:16"}]}}]},"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"2640:200:16","text":" @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L165"},"functionSelector":"6e2edb4e","id":3268,"implemented":true,"kind":"function","modifiers":[],"name":"processMessageFromRoot","nameLocation":"2852:22:16","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"_target","nameLocation":"2888:7:16","nodeType":"VariableDeclaration","scope":3268,"src":"2880:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"2880:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"_sender","nameLocation":"2909:7:16","nodeType":"VariableDeclaration","scope":3268,"src":"2901:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3174,"name":"address","nodeType":"ElementaryTypeName","src":"2901:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"_message","nameLocation":"2935:8:16","nodeType":"VariableDeclaration","scope":3268,"src":"2922:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3176,"name":"bytes","nodeType":"ElementaryTypeName","src":"2922:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"_messageNonce","nameLocation":"2957:13:16","nodeType":"VariableDeclaration","scope":3268,"src":"2949:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"2949:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"_proof","nameLocation":"3007:6:16","nodeType":"VariableDeclaration","scope":3268,"src":"2976:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":3181,"nodeType":"UserDefinedTypeName","pathNode":{"id":3180,"name":"L2MessageInclusionProof","nameLocations":["2976:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":5380,"src":"2976:23:16"},"referencedDeclaration":5380,"src":"2976:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"2874:143:16"},"returnParameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"3027:0:16"},"scope":3420,"src":"2843:1751:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3289,"nodeType":"Block","src":"5157:98:16","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3280,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"5193:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}],"id":3279,"name":"_verifyStateRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5171:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_L2MessageInclusionProof_$5380_memory_ptr_$returns$_t_bool_$","typeString":"function (struct L2MessageInclusionProof memory) view returns (bool)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5171:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3283,"name":"_xDomainCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"5224:16:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3284,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"5242:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}],"id":3282,"name":"_verifyStorageProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"5204:19:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_struct$_L2MessageInclusionProof_$5380_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,struct L2MessageInclusionProof memory) pure returns (bool)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5171:78:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5170:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3278,"id":3288,"nodeType":"Return","src":"5163:87:16"}]},"documentation":{"id":3269,"nodeType":"StructuredDocumentation","src":"4598:412:16","text":" Verifies that the given message is valid.\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L283-L288\n @param _xDomainCalldata Calldata to verify.\n @param _proof Inclusion proof for the message.\n @return Whether or not the provided message is valid."},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyXDomainMessage","nameLocation":"5022:21:16","nodeType":"FunctionDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3271,"mutability":"mutable","name":"_xDomainCalldata","nameLocation":"5057:16:16","nodeType":"VariableDeclaration","scope":3290,"src":"5044:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3270,"name":"bytes","nodeType":"ElementaryTypeName","src":"5044:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3274,"mutability":"mutable","name":"_proof","nameLocation":"5106:6:16","nodeType":"VariableDeclaration","scope":3290,"src":"5075:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":3273,"nodeType":"UserDefinedTypeName","pathNode":{"id":3272,"name":"L2MessageInclusionProof","nameLocations":["5075:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":5380,"src":"5075:23:16"},"referencedDeclaration":5380,"src":"5075:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"5043:70:16"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"5149:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3276,"name":"bool","nodeType":"ElementaryTypeName","src":"5149:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5148:6:16"},"scope":3420,"src":"5013:242:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3309,"nodeType":"Block","src":"5737:136:16","statements":[{"expression":{"arguments":[{"expression":{"id":3301,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"5799:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":3302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5806:9:16","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":5369,"src":"5799:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3303,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"5817:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":3304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5824:20:16","memberName":"stateRootBatchHeader","nodeType":"MemberAccess","referencedDeclaration":5372,"src":"5817:27:16","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_memory_ptr","typeString":"struct ChainBatchHeader memory"}},{"expression":{"id":3305,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"5846:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":3306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5853:14:16","memberName":"stateRootProof","nodeType":"MemberAccess","referencedDeclaration":5375,"src":"5846:21:16","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$5367_memory_ptr","typeString":"struct ChainInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_memory_ptr","typeString":"struct ChainBatchHeader memory"},{"typeIdentifier":"t_struct$_ChainInclusionProof_$5367_memory_ptr","typeString":"struct ChainInclusionProof memory"}],"expression":{"id":3299,"name":"stateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"5756:20:16","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$5457","typeString":"contract IStateCommitmentChain"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5777:21:16","memberName":"verifyStateCommitment","nodeType":"MemberAccess","referencedDeclaration":5447,"src":"5756:42:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_struct$_ChainBatchHeader_$5361_memory_ptr_$_t_struct$_ChainInclusionProof_$5367_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,struct ChainBatchHeader memory,struct ChainInclusionProof memory) view external returns (bool)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5756:112:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3298,"id":3308,"nodeType":"Return","src":"5743:125:16"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"5259:376:16","text":" Verifies that the state root within an inclusion proof is valid.\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L295-L311\n @param _proof Message inclusion proof.\n @return Whether or not the provided proof is valid."},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyStateRootProof","nameLocation":"5647:21:16","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"_proof","nameLocation":"5700:6:16","nodeType":"VariableDeclaration","scope":3310,"src":"5669:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":3293,"nodeType":"UserDefinedTypeName","pathNode":{"id":3292,"name":"L2MessageInclusionProof","nameLocations":["5669:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":5380,"src":"5669:23:16"},"referencedDeclaration":5380,"src":"5669:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"5668:39:16"},"returnParameters":{"id":3298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3310,"src":"5731:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3296,"name":"bool","nodeType":"ElementaryTypeName","src":"5731:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5730:6:16"},"scope":3420,"src":"5638:235:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3394,"nodeType":"Block","src":"6456:828:16","statements":[{"assignments":[3322],"declarations":[{"constant":false,"id":3322,"mutability":"mutable","name":"storageKey","nameLocation":"6470:10:16","nodeType":"VariableDeclaration","scope":3394,"src":"6462:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3340,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":3329,"name":"_xDomainCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"6553:16:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3330,"name":"PredeployAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"6571:18:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PredeployAddresses_$4464_$","typeString":"type(library PredeployAddresses)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:25:16","memberName":"L2_CROSS_DOMAIN_MESSENGER","nodeType":"MemberAccess","referencedDeclaration":4445,"src":"6571:44:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3327,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6536:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6540:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"6536:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:80:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3326,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6526:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6526:91:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6635:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6627:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"6627:7:16","typeDescriptions":{}}},"id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6627:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3324,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6500:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6504:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"6500:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:145:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3323,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6483:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6483:168:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6462:189:16"},{"assignments":[3342,3344],"declarations":[{"constant":false,"id":3342,"mutability":"mutable","name":"exists","nameLocation":"6664:6:16","nodeType":"VariableDeclaration","scope":3394,"src":"6659:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3341,"name":"bool","nodeType":"ElementaryTypeName","src":"6659:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"encodedMessagePassingAccount","nameLocation":"6685:28:16","nodeType":"VariableDeclaration","scope":3394,"src":"6672:41:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3343,"name":"bytes","nodeType":"ElementaryTypeName","src":"6672:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3357,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":3349,"name":"PredeployAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"6762:18:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PredeployAddresses_$4464_$","typeString":"type(library PredeployAddresses)"}},"id":3350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6781:23:16","memberName":"L2_TO_L1_MESSAGE_PASSER","nodeType":"MemberAccess","referencedDeclaration":4430,"src":"6762:42:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3347,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6745:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6749:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"6745:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6745:60:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3352,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6813:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":3353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6820:16:16","memberName":"stateTrieWitness","nodeType":"MemberAccess","referencedDeclaration":5377,"src":"6813:23:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3354,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"6844:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":3355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6851:9:16","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":5369,"src":"6844:16:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3345,"name":"SecureMerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"6717:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecureMerkleTrie_$5288_$","typeString":"type(library SecureMerkleTrie)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6734:3:16","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":5271,"src":"6717:20:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes32) pure returns (bool,bytes memory)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:149:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6658:208:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3359,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"6881:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6891:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6881:14:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6573736167652070617373696e67207072656465706c6f7920686173206e6f74206265656e20696e697469616c697a6564206f7220696e76616c69642070726f6f662070726f76696465642e","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6897:79:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","typeString":"literal_string \"Message passing predeploy has not been initialized or invalid proof provided.\""},"value":"Message passing predeploy has not been initialized or invalid proof provided."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","typeString":"literal_string \"Message passing predeploy has not been initialized or invalid proof provided.\""}],"id":3358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6873:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6873:104:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3364,"nodeType":"ExpressionStatement","src":"6873:104:16"},{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"account","nameLocation":"7011:7:16","nodeType":"VariableDeclaration","scope":3394,"src":"6984:34:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$4375_memory_ptr","typeString":"struct OVMCodec.EVMAccount"},"typeName":{"id":3368,"nodeType":"UserDefinedTypeName","pathNode":{"id":3367,"name":"OVMCodec.EVMAccount","nameLocations":["6984:8:16","6993:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":4375,"src":"6984:19:16"},"referencedDeclaration":4375,"src":"6984:19:16","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$4375_storage_ptr","typeString":"struct OVMCodec.EVMAccount"}},"visibility":"internal"}],"id":3374,"initialValue":{"arguments":[{"id":3372,"name":"encodedMessagePassingAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"7047:28:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3370,"name":"OVMCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"7021:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OVMCodec_$4424_$","typeString":"type(library OVMCodec)"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7030:16:16","memberName":"decodeEVMAccount","nodeType":"MemberAccess","referencedDeclaration":4423,"src":"7021:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_EVMAccount_$4375_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct OVMCodec.EVMAccount memory)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$4375_memory_ptr","typeString":"struct OVMCodec.EVMAccount memory"}},"nodeType":"VariableDeclarationStatement","src":"6984:92:16"},{"expression":{"arguments":[{"arguments":[{"id":3379,"name":"storageKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"7160:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3377,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7143:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7147:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"7143:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7143:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"hexValue":"31","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7204:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7198:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3383,"name":"uint8","nodeType":"ElementaryTypeName","src":"7198:5:16","typeDescriptions":{}}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7198:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3381,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7181:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7185:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"7181:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7181:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3388,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"7217:6:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":3389,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7224:18:16","memberName":"storageTrieWitness","nodeType":"MemberAccess","referencedDeclaration":5379,"src":"7217:25:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":3390,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"7252:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$4375_memory_ptr","typeString":"struct OVMCodec.EVMAccount memory"}},"id":3391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7260:11:16","memberName":"storageRoot","nodeType":"MemberAccess","referencedDeclaration":4372,"src":"7252:19:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3375,"name":"SecureMerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5288,"src":"7096:16:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecureMerkleTrie_$5288_$","typeString":"type(library SecureMerkleTrie)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7113:20:16","memberName":"verifyInclusionProof","nodeType":"MemberAccess","referencedDeclaration":5243,"src":"7096:37:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory,bytes memory,bytes32) pure returns (bool)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7096:183:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3320,"id":3393,"nodeType":"Return","src":"7083:196:16"}]},"documentation":{"id":3311,"nodeType":"StructuredDocumentation","src":"5877:434:16","text":" Verifies that the storage proof within an inclusion proof is valid.\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L313-L357\n @param _xDomainCalldata Encoded message calldata.\n @param _proof Message inclusion proof.\n @return Whether or not the provided proof is valid."},"id":3395,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyStorageProof","nameLocation":"6323:19:16","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"_xDomainCalldata","nameLocation":"6356:16:16","nodeType":"VariableDeclaration","scope":3395,"src":"6343:29:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3312,"name":"bytes","nodeType":"ElementaryTypeName","src":"6343:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"_proof","nameLocation":"6405:6:16","nodeType":"VariableDeclaration","scope":3395,"src":"6374:37:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":3315,"nodeType":"UserDefinedTypeName","pathNode":{"id":3314,"name":"L2MessageInclusionProof","nameLocations":["6374:23:16"],"nodeType":"IdentifierPath","referencedDeclaration":5380,"src":"6374:23:16"},"referencedDeclaration":5380,"src":"6374:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$5380_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"6342:70:16"},"returnParameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3395,"src":"6448:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3318,"name":"bool","nodeType":"ElementaryTypeName","src":"6448:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6447:6:16"},"scope":3420,"src":"6314:970:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"7932:137:16","statements":[{"expression":{"arguments":[{"hexValue":"72656c61794d65737361676528616464726573732c616464726573732c62797465732c75696e7432353629","id":3411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7975:45:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},"value":"relayMessage(address,address,bytes,uint256)"},{"id":3412,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3398,"src":"8022:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3413,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"8031:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3414,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"8040:8:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3415,"name":"_messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3404,"src":"8050:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7951:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7955:19:16","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"7951:23:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7951:113:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3408,"id":3417,"nodeType":"Return","src":"7938:126:16"}]},"documentation":{"id":3396,"nodeType":"StructuredDocumentation","src":"7288:472:16","text":" Generates the correct cross domain calldata for a message.\n @dev taken from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/bridge/Lib_CrossDomainUtils.sol\n @param _target Target contract address.\n @param _sender Message sender address.\n @param _message Message to send to the target.\n @param _messageNonce Nonce for the provided message.\n @return ABI encoded cross domain calldata."},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"_encodeXDomainCalldata","nameLocation":"7772:22:16","nodeType":"FunctionDefinition","parameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3398,"mutability":"mutable","name":"_target","nameLocation":"7808:7:16","nodeType":"VariableDeclaration","scope":3419,"src":"7800:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"7800:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3400,"mutability":"mutable","name":"_sender","nameLocation":"7829:7:16","nodeType":"VariableDeclaration","scope":3419,"src":"7821:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3399,"name":"address","nodeType":"ElementaryTypeName","src":"7821:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"_message","nameLocation":"7855:8:16","nodeType":"VariableDeclaration","scope":3419,"src":"7842:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3401,"name":"bytes","nodeType":"ElementaryTypeName","src":"7842:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"_messageNonce","nameLocation":"7877:13:16","nodeType":"VariableDeclaration","scope":3419,"src":"7869:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"7869:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7794:100:16"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3419,"src":"7918:12:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3406,"name":"bytes","nodeType":"ElementaryTypeName","src":"7918:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7917:14:16"},"scope":3420,"src":"7763:306:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3421,"src":"724:7347:16","usedErrors":[2615,5484,5486,5488,5490,5492,5494,5496,5790,5792]}],"src":"46:8026:16"},"id":16},"contracts/messaging/connectors/optimism/lib/BytesUtils.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/BytesUtils.sol","exportedSymbols":{"BytesUtils":[3691]},"id":3692,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3422,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3423,"nodeType":"StructuredDocumentation","src":"71:177:17","text":" @title BytesUtils\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/utils/Lib_BytesUtils.sol"},"fullyImplemented":true,"id":3691,"linearizedBaseContracts":[3691],"name":"BytesUtils","nameLocation":"257:10:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3468,"nodeType":"Block","src":"474:2330:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3435,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"488:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":3436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"498:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"488:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3438,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"504:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"488:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"513:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":3434,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"480:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"480:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3442,"nodeType":"ExpressionStatement","src":"480:50:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"544:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3445,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"553:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"544:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3447,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"564:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"544:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":3449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"572:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":3443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"536:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"536:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3451,"nodeType":"ExpressionStatement","src":"536:53:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3453,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3425,"src":"603:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"610:6:17","memberName":"length","nodeType":"MemberAccess","src":"603:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3427,"src":"620:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3456,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3429,"src":"629:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"620:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"603:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"638:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":3452,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"595:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3461,"nodeType":"ExpressionStatement","src":"595:63:17"},{"assignments":[3463],"declarations":[{"constant":false,"id":3463,"mutability":"mutable","name":"tempBytes","nameLocation":"678:9:17","nodeType":"VariableDeclaration","scope":3468,"src":"665:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3462,"name":"bytes","nodeType":"ElementaryTypeName","src":"665:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3464,"nodeType":"VariableDeclarationStatement","src":"665:22:17"},{"AST":{"nodeType":"YulBlock","src":"703:2074:17","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"747:1686:17","statements":[{"nodeType":"YulAssignment","src":"879:24:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"898:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"892:5:17"},"nodeType":"YulFunctionCall","src":"892:11:17"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"879:9:17"}]},{"nodeType":"YulVariableDeclaration","src":"1455:33:17","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"1476:7:17"},{"kind":"number","nodeType":"YulLiteral","src":"1485:2:17","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1472:3:17"},"nodeType":"YulFunctionCall","src":"1472:16:17"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"1459:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1769:70:17","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1787:9:17"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"1798:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:17"},"nodeType":"YulFunctionCall","src":"1783:25:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1814:4:17","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"1827:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1820:6:17"},"nodeType":"YulFunctionCall","src":"1820:17:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1810:3:17"},"nodeType":"YulFunctionCall","src":"1810:28:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:17"},"nodeType":"YulFunctionCall","src":"1779:60:17"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1773:2:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1848:27:17","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1863:2:17"},{"name":"_length","nodeType":"YulIdentifier","src":"1867:7:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1859:3:17"},"nodeType":"YulFunctionCall","src":"1859:16:17"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1852:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2183:43:17","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2202:2:17"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2212:2:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2206:5:17"},"nodeType":"YulFunctionCall","src":"2206:9:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2195:6:17"},"nodeType":"YulFunctionCall","src":"2195:21:17"},"nodeType":"YulExpressionStatement","src":"2195:21:17"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2102:2:17"},{"name":"end","nodeType":"YulIdentifier","src":"2106:3:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2099:2:17"},"nodeType":"YulFunctionCall","src":"2099:11:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2111:71:17","statements":[{"nodeType":"YulAssignment","src":"2123:19:17","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2133:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"2137:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2129:3:17"},"nodeType":"YulFunctionCall","src":"2129:13:17"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2123:2:17"}]},{"nodeType":"YulAssignment","src":"2153:19:17","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2163:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"2167:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:17"},"nodeType":"YulFunctionCall","src":"2159:13:17"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2153:2:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1889:209:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2008:80:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"2030:6:17"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"2038:9:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:17"},"nodeType":"YulFunctionCall","src":"2026:22:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2054:4:17","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"2067:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2060:6:17"},"nodeType":"YulFunctionCall","src":"2060:17:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2050:3:17"},"nodeType":"YulFunctionCall","src":"2050:28:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2022:3:17"},"nodeType":"YulFunctionCall","src":"2022:57:17"},{"name":"_start","nodeType":"YulIdentifier","src":"2081:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:17"},"nodeType":"YulFunctionCall","src":"2018:70:17"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2012:2:17","type":""}]}]},"src":"1885:341:17"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2243:9:17"},{"name":"_length","nodeType":"YulIdentifier","src":"2254:7:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2236:6:17"},"nodeType":"YulFunctionCall","src":"2236:26:17"},"nodeType":"YulExpressionStatement","src":"2236:26:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2393:4:17","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2407:2:17"},{"kind":"number","nodeType":"YulLiteral","src":"2411:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2403:3:17"},"nodeType":"YulFunctionCall","src":"2403:11:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2420:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2416:3:17"},"nodeType":"YulFunctionCall","src":"2416:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2399:3:17"},"nodeType":"YulFunctionCall","src":"2399:25:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2386:6:17"},"nodeType":"YulFunctionCall","src":"2386:39:17"},"nodeType":"YulExpressionStatement","src":"2386:39:17"}]},"nodeType":"YulCase","src":"740:1693:17","value":{"kind":"number","nodeType":"YulLiteral","src":"745:1:17","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"2525:246:17","statements":[{"nodeType":"YulAssignment","src":"2535:24:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2554:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2548:5:17"},"nodeType":"YulFunctionCall","src":"2548:11:17"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2535:9:17"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2706:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2717:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2699:6:17"},"nodeType":"YulFunctionCall","src":"2699:20:17"},"nodeType":"YulExpressionStatement","src":"2699:20:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2736:4:17","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2746:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2757:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2742:3:17"},"nodeType":"YulFunctionCall","src":"2742:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2729:6:17"},"nodeType":"YulFunctionCall","src":"2729:34:17"},"nodeType":"YulExpressionStatement","src":"2729:34:17"}]},"nodeType":"YulCase","src":"2517:254:17","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"725:7:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"718:6:17"},"nodeType":"YulFunctionCall","src":"718:15:17"},"nodeType":"YulSwitch","src":"711:2060:17"}]},"evmVersion":"london","externalReferences":[{"declaration":3425,"isOffset":false,"isSlot":false,"src":"2030:6:17","valueSize":1},{"declaration":3429,"isOffset":false,"isSlot":false,"src":"1476:7:17","valueSize":1},{"declaration":3429,"isOffset":false,"isSlot":false,"src":"1867:7:17","valueSize":1},{"declaration":3429,"isOffset":false,"isSlot":false,"src":"2254:7:17","valueSize":1},{"declaration":3429,"isOffset":false,"isSlot":false,"src":"725:7:17","valueSize":1},{"declaration":3427,"isOffset":false,"isSlot":false,"src":"2081:6:17","valueSize":1},{"declaration":3463,"isOffset":false,"isSlot":false,"src":"1787:9:17","valueSize":1},{"declaration":3463,"isOffset":false,"isSlot":false,"src":"2243:9:17","valueSize":1},{"declaration":3463,"isOffset":false,"isSlot":false,"src":"2535:9:17","valueSize":1},{"declaration":3463,"isOffset":false,"isSlot":false,"src":"2706:9:17","valueSize":1},{"declaration":3463,"isOffset":false,"isSlot":false,"src":"2746:9:17","valueSize":1},{"declaration":3463,"isOffset":false,"isSlot":false,"src":"879:9:17","valueSize":1}],"id":3465,"nodeType":"InlineAssembly","src":"694:2083:17"},{"expression":{"id":3466,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"2790:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3433,"id":3467,"nodeType":"Return","src":"2783:16:17"}]},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"361:5:17","nodeType":"FunctionDefinition","parameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"_bytes","nameLocation":"385:6:17","nodeType":"VariableDeclaration","scope":3469,"src":"372:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3424,"name":"bytes","nodeType":"ElementaryTypeName","src":"372:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"_start","nameLocation":"405:6:17","nodeType":"VariableDeclaration","scope":3469,"src":"397:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3426,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"_length","nameLocation":"425:7:17","nodeType":"VariableDeclaration","scope":3469,"src":"417:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"417:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"366:70:17"},"returnParameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3469,"src":"460:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3431,"name":"bytes","nodeType":"ElementaryTypeName","src":"460:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"459:14:17"},"scope":3691,"src":"352:2452:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3498,"nodeType":"Block","src":"2897:129:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2907:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3479,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2917:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:17","memberName":"length","nodeType":"MemberAccess","src":"2917:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2907:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"IfStatement","src":"2903:60:17","trueBody":{"id":3487,"nodeType":"Block","src":"2932:31:17","statements":[{"expression":{"arguments":[{"hexValue":"","id":3484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2953:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2947:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3482,"name":"bytes","nodeType":"ElementaryTypeName","src":"2947:5:17","typeDescriptions":{}}},"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2947:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3477,"id":3486,"nodeType":"Return","src":"2940:16:17"}]}},{"expression":{"arguments":[{"id":3490,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2982:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3491,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"2990:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3492,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3471,"src":"2998:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3005:6:17","memberName":"length","nodeType":"MemberAccess","src":"2998:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3494,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"3014:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2998:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3489,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[3469,3499],"referencedDeclaration":3469,"src":"2976:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2976:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3477,"id":3497,"nodeType":"Return","src":"2969:52:17"}]},"id":3499,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"2817:5:17","nodeType":"FunctionDefinition","parameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3471,"mutability":"mutable","name":"_bytes","nameLocation":"2836:6:17","nodeType":"VariableDeclaration","scope":3499,"src":"2823:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3470,"name":"bytes","nodeType":"ElementaryTypeName","src":"2823:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3473,"mutability":"mutable","name":"_start","nameLocation":"2852:6:17","nodeType":"VariableDeclaration","scope":3499,"src":"2844:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2844:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2822:37:17"},"returnParameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3499,"src":"2883:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3475,"name":"bytes","nodeType":"ElementaryTypeName","src":"2883:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2882:14:17"},"scope":3691,"src":"2808:218:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3526,"nodeType":"Block","src":"3102:228:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3506,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"3112:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3119:6:17","memberName":"length","nodeType":"MemberAccess","src":"3112:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":3508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3128:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3112:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3517,"nodeType":"IfStatement","src":"3108:131:17","trueBody":{"id":3516,"nodeType":"Block","src":"3132:107:17","statements":[{"assignments":[3511],"declarations":[{"constant":false,"id":3511,"mutability":"mutable","name":"ret","nameLocation":"3148:3:17","nodeType":"VariableDeclaration","scope":3516,"src":"3140:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3140:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3512,"nodeType":"VariableDeclarationStatement","src":"3140:11:17"},{"AST":{"nodeType":"YulBlock","src":"3168:47:17","statements":[{"nodeType":"YulAssignment","src":"3178:29:17","value":{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"3195:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3203:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3191:3:17"},"nodeType":"YulFunctionCall","src":"3191:15:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3185:5:17"},"nodeType":"YulFunctionCall","src":"3185:22:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3178:3:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3501,"isOffset":false,"isSlot":false,"src":"3195:6:17","valueSize":1},{"declaration":3511,"isOffset":false,"isSlot":false,"src":"3178:3:17","valueSize":1}],"id":3513,"nodeType":"InlineAssembly","src":"3159:56:17"},{"expression":{"id":3514,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3511,"src":"3229:3:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3505,"id":3515,"nodeType":"Return","src":"3222:10:17"}]}},{"expression":{"arguments":[{"id":3520,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3501,"src":"3263:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3272:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3272:7:17","typeDescriptions":{}}}],"id":3523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3271:9:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":3518,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3252:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3256:6:17","memberName":"decode","nodeType":"MemberAccess","src":"3252:10:17","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3252:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3505,"id":3525,"nodeType":"Return","src":"3245:36:17"}]},"id":3527,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"3039:9:17","nodeType":"FunctionDefinition","parameters":{"id":3502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3501,"mutability":"mutable","name":"_bytes","nameLocation":"3062:6:17","nodeType":"VariableDeclaration","scope":3527,"src":"3049:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3500,"name":"bytes","nodeType":"ElementaryTypeName","src":"3049:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3048:21:17"},"returnParameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3527,"src":"3093:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3092:9:17"},"scope":3691,"src":"3030:300:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3541,"nodeType":"Block","src":"3406:44:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3537,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3529,"src":"3437:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3536,"name":"toBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"3427:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3427:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3419:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"3419:7:17","typeDescriptions":{}}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3533,"id":3540,"nodeType":"Return","src":"3412:33:17"}]},"id":3542,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"3343:9:17","nodeType":"FunctionDefinition","parameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"_bytes","nameLocation":"3366:6:17","nodeType":"VariableDeclaration","scope":3542,"src":"3353:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3528,"name":"bytes","nodeType":"ElementaryTypeName","src":"3353:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:21:17"},"returnParameters":{"id":3533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3542,"src":"3397:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3396:9:17"},"scope":3691,"src":"3334:116:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3611,"nodeType":"Block","src":"3531:297:17","statements":[{"assignments":[3550],"declarations":[{"constant":false,"id":3550,"mutability":"mutable","name":"nibbles","nameLocation":"3550:7:17","nodeType":"VariableDeclaration","scope":3611,"src":"3537:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3549,"name":"bytes","nodeType":"ElementaryTypeName","src":"3537:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3558,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3553,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"3570:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3577:6:17","memberName":"length","nodeType":"MemberAccess","src":"3570:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3586:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3570:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3560:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3551,"name":"bytes","nodeType":"ElementaryTypeName","src":"3564:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3537:51:17"},{"assignments":[3560],"declarations":[{"constant":false,"id":3560,"mutability":"mutable","name":"len","nameLocation":"3603:3:17","nodeType":"VariableDeclaration","scope":3611,"src":"3595:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3595:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3563,"initialValue":{"expression":{"id":3561,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"3609:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3616:6:17","memberName":"length","nodeType":"MemberAccess","src":"3609:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3595:27:17"},{"body":{"id":3607,"nodeType":"Block","src":"3659:144:17","statements":[{"expression":{"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3571,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"3667:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3575,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3675:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3675:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3667:14:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3576,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"3684:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3578,"indexExpression":{"id":3577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3691:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3684:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3697:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3684:14:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3667:31:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3582,"nodeType":"ExpressionStatement","src":"3667:31:17"},{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3583,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"3706:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3589,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3714:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3718:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3714:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3714:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3706:18:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":3594,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"3740:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3596,"indexExpression":{"id":3595,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3747:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3740:9:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3734:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3592,"name":"uint8","nodeType":"ElementaryTypeName","src":"3734:5:17","typeDescriptions":{}}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3136","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3753:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"3734:21:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3727:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3590,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3727:6:17","typeDescriptions":{}}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3727:29:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3706:50:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3602,"nodeType":"ExpressionStatement","src":"3706:50:17"},{"id":3606,"nodeType":"UncheckedBlock","src":"3765:32:17","statements":[{"expression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3785:3:17","subExpression":{"id":3603,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3787:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3605,"nodeType":"ExpressionStatement","src":"3785:3:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3648:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3569,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"3652:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3648:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3608,"initializationExpression":{"assignments":[3565],"declarations":[{"constant":false,"id":3565,"mutability":"mutable","name":"i","nameLocation":"3641:1:17","nodeType":"VariableDeclaration","scope":3608,"src":"3633:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3567,"initialValue":{"hexValue":"30","id":3566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3645:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3633:13:17"},"nodeType":"ForStatement","src":"3628:175:17"},{"expression":{"id":3609,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3550,"src":"3816:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3548,"id":3610,"nodeType":"Return","src":"3809:14:17"}]},"id":3612,"implemented":true,"kind":"function","modifiers":[],"name":"toNibbles","nameLocation":"3463:9:17","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"_bytes","nameLocation":"3486:6:17","nodeType":"VariableDeclaration","scope":3612,"src":"3473:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3543,"name":"bytes","nodeType":"ElementaryTypeName","src":"3473:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3472:21:17"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3612,"src":"3517:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3546,"name":"bytes","nodeType":"ElementaryTypeName","src":"3517:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3516:14:17"},"scope":3691,"src":"3454:374:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3671,"nodeType":"Block","src":"3911:248:17","statements":[{"assignments":[3620],"declarations":[{"constant":false,"id":3620,"mutability":"mutable","name":"ret","nameLocation":"3930:3:17","nodeType":"VariableDeclaration","scope":3671,"src":"3917:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3619,"name":"bytes","nodeType":"ElementaryTypeName","src":"3917:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3628,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3623,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"3946:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3953:6:17","memberName":"length","nodeType":"MemberAccess","src":"3946:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3946:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3936:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3621,"name":"bytes","nodeType":"ElementaryTypeName","src":"3940:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3936:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3917:47:17"},{"assignments":[3630],"declarations":[{"constant":false,"id":3630,"mutability":"mutable","name":"len","nameLocation":"3979:3:17","nodeType":"VariableDeclaration","scope":3671,"src":"3971:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"3971:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3633,"initialValue":{"expression":{"id":3631,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"3985:3:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:6:17","memberName":"length","nodeType":"MemberAccess","src":"3985:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3971:24:17"},{"body":{"id":3667,"nodeType":"Block","src":"4032:106:17","statements":[{"expression":{"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3641,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"4040:3:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3643,"indexExpression":{"id":3642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4044:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4040:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3644,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"4050:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3648,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4057:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4057:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4050:13:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4067:1:17","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4050:18:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":3651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4049:20:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"baseExpression":{"id":3652,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"4073:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3658,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3653,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4080:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4080:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4088:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4080:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4073:17:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":3659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4072:19:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4049:42:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4040:51:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3662,"nodeType":"ExpressionStatement","src":"4040:51:17"},{"id":3666,"nodeType":"UncheckedBlock","src":"4100:32:17","statements":[{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4120:3:17","subExpression":{"id":3663,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4122:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3665,"nodeType":"ExpressionStatement","src":"4120:3:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"4021:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3639,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"4025:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4021:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"initializationExpression":{"assignments":[3635],"declarations":[{"constant":false,"id":3635,"mutability":"mutable","name":"i","nameLocation":"4014:1:17","nodeType":"VariableDeclaration","scope":3668,"src":"4006:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3637,"initialValue":{"hexValue":"30","id":3636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4018:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4006:13:17"},"nodeType":"ForStatement","src":"4001:137:17"},{"expression":{"id":3669,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"4151:3:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3618,"id":3670,"nodeType":"Return","src":"4144:10:17"}]},"id":3672,"implemented":true,"kind":"function","modifiers":[],"name":"fromNibbles","nameLocation":"3841:11:17","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"_bytes","nameLocation":"3866:6:17","nodeType":"VariableDeclaration","scope":3672,"src":"3853:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3613,"name":"bytes","nodeType":"ElementaryTypeName","src":"3853:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3852:21:17"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3672,"src":"3897:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3616,"name":"bytes","nodeType":"ElementaryTypeName","src":"3897:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3896:14:17"},"scope":3691,"src":"3832:327:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3689,"nodeType":"Block","src":"4249:56:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3682,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"4272:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3681,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4262:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3685,"name":"_other","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3676,"src":"4293:6:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3684,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4283:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4262:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3680,"id":3688,"nodeType":"Return","src":"4255:45:17"}]},"id":3690,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4172:5:17","nodeType":"FunctionDefinition","parameters":{"id":3677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"_bytes","nameLocation":"4191:6:17","nodeType":"VariableDeclaration","scope":3690,"src":"4178:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3673,"name":"bytes","nodeType":"ElementaryTypeName","src":"4178:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3676,"mutability":"mutable","name":"_other","nameLocation":"4212:6:17","nodeType":"VariableDeclaration","scope":3690,"src":"4199:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3675,"name":"bytes","nodeType":"ElementaryTypeName","src":"4199:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4177:42:17"},"returnParameters":{"id":3680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3690,"src":"4243:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3678,"name":"bool","nodeType":"ElementaryTypeName","src":"4243:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4242:6:17"},"scope":3691,"src":"4163:142:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3692,"src":"249:4058:17","usedErrors":[]}],"src":"46:4262:17"},"id":17},"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol","exportedSymbols":{"BytesUtils":[3691],"MerkleTrie":[4361],"RLPReader":[5209]},"id":4362,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3693,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:18"},{"absolutePath":"contracts/messaging/connectors/optimism/lib/BytesUtils.sol","file":"./BytesUtils.sol","id":3695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4362,"sourceUnit":3692,"src":"93:44:18","symbolAliases":[{"foreign":{"id":3694,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"101:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/RLPReader.sol","file":"./RLPReader.sol","id":3697,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4362,"sourceUnit":5210,"src":"138:42:18","symbolAliases":[{"foreign":{"id":3696,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"146:9:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleTrie","contractDependencies":[],"contractKind":"library","documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"182:176:18","text":" @title MerkleTrie\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_MerkleTrie.sol"},"fullyImplemented":true,"id":4361,"linearizedBaseContracts":[4361],"name":"MerkleTrie","nameLocation":"367:10:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MerkleTrie.NodeType","id":3702,"members":[{"id":3699,"name":"BranchNode","nameLocation":"473:10:18","nodeType":"EnumValue","src":"473:10:18"},{"id":3700,"name":"ExtensionNode","nameLocation":"489:13:18","nodeType":"EnumValue","src":"489:13:18"},{"id":3701,"name":"LeafNode","nameLocation":"508:8:18","nodeType":"EnumValue","src":"508:8:18"}],"name":"NodeType","nameLocation":"458:8:18","nodeType":"EnumDefinition","src":"453:67:18"},{"canonicalName":"MerkleTrie.TrieNode","id":3709,"members":[{"constant":false,"id":3704,"mutability":"mutable","name":"encoded","nameLocation":"552:7:18","nodeType":"VariableDeclaration","scope":3709,"src":"546:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3703,"name":"bytes","nodeType":"ElementaryTypeName","src":"546:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"decoded","nameLocation":"585:7:18","nodeType":"VariableDeclaration","scope":3709,"src":"565:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":3706,"nodeType":"UserDefinedTypeName","pathNode":{"id":3705,"name":"RLPReader.RLPItem","nameLocations":["565:9:18","575:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"565:17:18"},"referencedDeclaration":4478,"src":"565:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":3707,"nodeType":"ArrayTypeName","src":"565:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"name":"TrieNode","nameLocation":"531:8:18","nodeType":"StructDefinition","scope":4361,"src":"524:73:18","visibility":"public"},{"constant":true,"id":3712,"mutability":"constant","name":"TREE_RADIX","nameLocation":"765:10:18","nodeType":"VariableDeclaration","scope":4361,"src":"748:32:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"778:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"internal"},{"constant":true,"id":3717,"mutability":"constant","name":"BRANCH_NODE_LENGTH","nameLocation":"877:18:18","nodeType":"VariableDeclaration","scope":4361,"src":"860:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":3714,"name":"TREE_RADIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"898:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"911:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"898:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":3720,"mutability":"constant","name":"LEAF_OR_EXTENSION_NODE_LENGTH","nameLocation":"1019:29:18","nodeType":"VariableDeclaration","scope":4361,"src":"1002:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1051:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":3723,"mutability":"constant","name":"PREFIX_EXTENSION_EVEN","nameLocation":"1449:21:18","nodeType":"VariableDeclaration","scope":4361,"src":"1434:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3721,"name":"uint8","nodeType":"ElementaryTypeName","src":"1434:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1473:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":3726,"mutability":"constant","name":"PREFIX_EXTENSION_ODD","nameLocation":"1493:20:18","nodeType":"VariableDeclaration","scope":4361,"src":"1478:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3724,"name":"uint8","nodeType":"ElementaryTypeName","src":"1478:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1516:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":3729,"mutability":"constant","name":"PREFIX_LEAF_EVEN","nameLocation":"1536:16:18","nodeType":"VariableDeclaration","scope":4361,"src":"1521:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3727,"name":"uint8","nodeType":"ElementaryTypeName","src":"1521:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1555:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":3732,"mutability":"constant","name":"PREFIX_LEAF_ODD","nameLocation":"1575:15:18","nodeType":"VariableDeclaration","scope":4361,"src":"1560:34:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3730,"name":"uint8","nodeType":"ElementaryTypeName","src":"1560:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":3731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1593:1:18","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":3738,"mutability":"constant","name":"RLP_NULL","nameLocation":"1676:8:18","nodeType":"VariableDeclaration","scope":4361,"src":"1660:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3733,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1660:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"arguments":[{"hexValue":"30783830","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1694:4:18","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1687:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3734,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1687:6:18","typeDescriptions":{}}},"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"body":{"id":3771,"nodeType":"Block","src":"2623:128:18","statements":[{"assignments":[3753,3755],"declarations":[{"constant":false,"id":3753,"mutability":"mutable","name":"exists","nameLocation":"2635:6:18","nodeType":"VariableDeclaration","scope":3771,"src":"2630:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3752,"name":"bool","nodeType":"ElementaryTypeName","src":"2630:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3755,"mutability":"mutable","name":"value","nameLocation":"2656:5:18","nodeType":"VariableDeclaration","scope":3771,"src":"2643:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3754,"name":"bytes","nodeType":"ElementaryTypeName","src":"2643:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3761,"initialValue":{"arguments":[{"id":3757,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"2669:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3758,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"2675:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3759,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"2683:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3756,"name":"get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"2665:3:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes32) pure returns (bool,bytes memory)"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2629:60:18"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3753,"src":"2704:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":3765,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"2731:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3755,"src":"2739:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3763,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"2714:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2725:5:18","memberName":"equal","nodeType":"MemberAccess","referencedDeclaration":3690,"src":"2714:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory) pure returns (bool)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2714:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2704:41:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2703:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3751,"id":3770,"nodeType":"Return","src":"2696:50:18"}]},"documentation":{"id":3739,"nodeType":"StructuredDocumentation","src":"1784:671:18","text":" @notice Verifies a proof that a given key/value pair is present in the\n Merkle trie.\n @param _key Key of the node to search for, as a hex string.\n @param _value Value of the node to search for, as a hex string.\n @param _proof Merkle trie inclusion proof for the desired node. Unlike\n traditional Merkle trees, this proof is executed top-down and consists\n of a list of RLP-encoded nodes that make a path down to the target node.\n @param _root Known root of the Merkle trie. Used to verify that the\n included proof is correctly constructed.\n @return _verified `true` if the k/v pair exists in the trie, `false` otherwise."},"id":3772,"implemented":true,"kind":"function","modifiers":[],"name":"verifyInclusionProof","nameLocation":"2467:20:18","nodeType":"FunctionDefinition","parameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3741,"mutability":"mutable","name":"_key","nameLocation":"2506:4:18","nodeType":"VariableDeclaration","scope":3772,"src":"2493:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3740,"name":"bytes","nodeType":"ElementaryTypeName","src":"2493:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"_value","nameLocation":"2529:6:18","nodeType":"VariableDeclaration","scope":3772,"src":"2516:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3742,"name":"bytes","nodeType":"ElementaryTypeName","src":"2516:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3745,"mutability":"mutable","name":"_proof","nameLocation":"2554:6:18","nodeType":"VariableDeclaration","scope":3772,"src":"2541:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3744,"name":"bytes","nodeType":"ElementaryTypeName","src":"2541:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3747,"mutability":"mutable","name":"_root","nameLocation":"2574:5:18","nodeType":"VariableDeclaration","scope":3772,"src":"2566:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2566:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2487:96:18"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3750,"mutability":"mutable","name":"_verified","nameLocation":"2612:9:18","nodeType":"VariableDeclaration","scope":3772,"src":"2607:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3749,"name":"bool","nodeType":"ElementaryTypeName","src":"2607:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2606:16:18"},"scope":4361,"src":"2458:293:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"3233:389:18","statements":[{"assignments":[3790],"declarations":[{"constant":false,"id":3790,"mutability":"mutable","name":"proof","nameLocation":"3257:5:18","nodeType":"VariableDeclaration","scope":3841,"src":"3239:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":3788,"nodeType":"UserDefinedTypeName","pathNode":{"id":3787,"name":"TrieNode","nameLocations":["3239:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"3239:8:18"},"referencedDeclaration":3709,"src":"3239:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":3789,"nodeType":"ArrayTypeName","src":"3239:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"}],"id":3794,"initialValue":{"arguments":[{"id":3792,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"3277:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3791,"name":"_parseProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"3265:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct MerkleTrie.TrieNode memory[] memory)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3239:45:18"},{"assignments":[3796,3798,3800],"declarations":[{"constant":false,"id":3796,"mutability":"mutable","name":"pathLength","nameLocation":"3299:10:18","nodeType":"VariableDeclaration","scope":3841,"src":"3291:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3798,"mutability":"mutable","name":"keyRemainder","nameLocation":"3324:12:18","nodeType":"VariableDeclaration","scope":3841,"src":"3311:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3797,"name":"bytes","nodeType":"ElementaryTypeName","src":"3311:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"isFinalNode","nameLocation":"3343:11:18","nodeType":"VariableDeclaration","scope":3841,"src":"3338:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3799,"name":"bool","nodeType":"ElementaryTypeName","src":"3338:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3806,"initialValue":{"arguments":[{"id":3802,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3372:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},{"id":3803,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"3379:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3804,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"3385:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3801,"name":"_walkNodePath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"3358:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$","typeString":"function (struct MerkleTrie.TrieNode memory[] memory,bytes memory,bytes32) pure returns (uint256,bytes memory,bool)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3358:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$","typeString":"tuple(uint256,bytes memory,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3290:101:18"},{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"exists","nameLocation":"3403:6:18","nodeType":"VariableDeclaration","scope":3841,"src":"3398:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3807,"name":"bool","nodeType":"ElementaryTypeName","src":"3398:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3813,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3809,"name":"keyRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"3412:12:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3425:6:18","memberName":"length","nodeType":"MemberAccess","src":"3412:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3435:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3412:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3398:38:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3815,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"3451:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3816,"name":"isFinalNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"3461:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3451:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f76696465642070726f6f6620697320696e76616c69642e","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3474:28:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","typeString":"literal_string \"Provided proof is invalid.\""},"value":"Provided proof is invalid."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","typeString":"literal_string \"Provided proof is invalid.\""}],"id":3814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3443:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3443:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3820,"nodeType":"ExpressionStatement","src":"3443:60:18"},{"assignments":[3822],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"value","nameLocation":"3523:5:18","nodeType":"VariableDeclaration","scope":3841,"src":"3510:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3821,"name":"bytes","nodeType":"ElementaryTypeName","src":"3510:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3836,"initialValue":{"condition":{"id":3823,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"3531:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3585:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3579:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3831,"name":"bytes","nodeType":"ElementaryTypeName","src":"3579:5:18","typeDescriptions":{}}},"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3579:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3531:57:18","trueExpression":{"arguments":[{"baseExpression":{"id":3825,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3554:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":3829,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"3560:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3573:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3560:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3554:21:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}],"id":3824,"name":"_getNodeValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"3540:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TrieNode_$3709_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct MerkleTrie.TrieNode memory) pure returns (bytes memory)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3510:78:18"},{"expression":{"components":[{"id":3837,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"3603:6:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"3611:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3602:15:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3785,"id":3840,"nodeType":"Return","src":"3595:22:18"}]},"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"2755:333:18","text":" @notice Retrieves the value associated with a given key.\n @param _key Key to search for, as hex bytes.\n @param _proof Merkle trie inclusion proof for the key.\n @param _root Known root of the Merkle trie.\n @return _exists Whether or not the key exists.\n @return _value Value of the key if it exists."},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3100:3:18","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"_key","nameLocation":"3122:4:18","nodeType":"VariableDeclaration","scope":3842,"src":"3109:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3774,"name":"bytes","nodeType":"ElementaryTypeName","src":"3109:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"_proof","nameLocation":"3145:6:18","nodeType":"VariableDeclaration","scope":3842,"src":"3132:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3776,"name":"bytes","nodeType":"ElementaryTypeName","src":"3132:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"_root","nameLocation":"3165:5:18","nodeType":"VariableDeclaration","scope":3842,"src":"3157:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3103:71:18"},"returnParameters":{"id":3785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"_exists","nameLocation":"3203:7:18","nodeType":"VariableDeclaration","scope":3842,"src":"3198:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3781,"name":"bool","nodeType":"ElementaryTypeName","src":"3198:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"_value","nameLocation":"3225:6:18","nodeType":"VariableDeclaration","scope":3842,"src":"3212:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3783,"name":"bytes","nodeType":"ElementaryTypeName","src":"3212:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3197:35:18"},"scope":4361,"src":"3091:531:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4162,"nodeType":"Block","src":"4320:3882:18","statements":[{"assignments":[3861],"declarations":[{"constant":false,"id":3861,"mutability":"mutable","name":"pathLength","nameLocation":"4334:10:18","nodeType":"VariableDeclaration","scope":4162,"src":"4326:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"4326:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3863,"initialValue":{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4347:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4326:22:18"},{"assignments":[3865],"declarations":[{"constant":false,"id":3865,"mutability":"mutable","name":"key","nameLocation":"4367:3:18","nodeType":"VariableDeclaration","scope":4162,"src":"4354:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3864,"name":"bytes","nodeType":"ElementaryTypeName","src":"4354:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3870,"initialValue":{"arguments":[{"id":3868,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"4394:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3866,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"4373:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4384:9:18","memberName":"toNibbles","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"4373:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4373:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4354:45:18"},{"assignments":[3872],"declarations":[{"constant":false,"id":3872,"mutability":"mutable","name":"currentNodeID","nameLocation":"4414:13:18","nodeType":"VariableDeclaration","scope":4162,"src":"4406:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3874,"initialValue":{"id":3873,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"4430:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4406:29:18"},{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"currentKeyIndex","nameLocation":"4449:15:18","nodeType":"VariableDeclaration","scope":4162,"src":"4441:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3878,"initialValue":{"hexValue":"30","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4441:27:18"},{"assignments":[3880],"declarations":[{"constant":false,"id":3880,"mutability":"mutable","name":"currentKeyIncrement","nameLocation":"4482:19:18","nodeType":"VariableDeclaration","scope":4162,"src":"4474:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"4474:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3882,"initialValue":{"hexValue":"30","id":3881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4504:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4474:31:18"},{"assignments":[3885],"declarations":[{"constant":false,"id":3885,"mutability":"mutable","name":"currentNode","nameLocation":"4527:11:18","nodeType":"VariableDeclaration","scope":4162,"src":"4511:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode"},"typeName":{"id":3884,"nodeType":"UserDefinedTypeName","pathNode":{"id":3883,"name":"TrieNode","nameLocations":["4511:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"4511:8:18"},"referencedDeclaration":3709,"src":"4511:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"visibility":"internal"}],"id":3886,"nodeType":"VariableDeclarationStatement","src":"4511:27:18"},{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"len","nameLocation":"4620:3:18","nodeType":"VariableDeclaration","scope":4162,"src":"4612:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"4612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3891,"initialValue":{"expression":{"id":3889,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"4626:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4633:6:18","memberName":"length","nodeType":"MemberAccess","src":"4626:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4612:27:18"},{"body":{"id":4142,"nodeType":"Block","src":"4676:3327:18","statements":[{"expression":{"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3899,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"4684:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3900,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"4698:6:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":3902,"indexExpression":{"id":3901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"4705:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4698:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"src":"4684:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":3904,"nodeType":"ExpressionStatement","src":"4684:23:18"},{"expression":{"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3905,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4715:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3906,"name":"currentKeyIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4734:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:38:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3908,"nodeType":"ExpressionStatement","src":"4715:38:18"},{"expression":{"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3909,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"4898:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4912:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4898:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3912,"nodeType":"ExpressionStatement","src":"4898:15:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3913,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"4926:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4945:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4926:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3927,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"5110:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":3928,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5122:7:18","memberName":"encoded","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"5110:19:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5130:6:18","memberName":"length","nodeType":"MemberAccess","src":"5110:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"id":3932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5139:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5144:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5139:6:18","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"}},"src":"5110:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3956,"nodeType":"Block","src":"5327:170:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3948,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"5420:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":3949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5432:7:18","memberName":"encoded","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"5420:19:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3946,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"5399:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5410:9:18","memberName":"toBytes32","nodeType":"MemberAccess","referencedDeclaration":3527,"src":"5399:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5399:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3951,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5444:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5399:58:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e7465726e616c206e6f64652068617368","id":3953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5459:28:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","typeString":"literal_string \"Invalid internal node hash\""},"value":"Invalid internal node hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","typeString":"literal_string \"Invalid internal node hash\""}],"id":3945,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5391:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5391:97:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3955,"nodeType":"ExpressionStatement","src":"5391:97:18"}]},"id":3957,"nodeType":"IfStatement","src":"5106:391:18","trueBody":{"id":3944,"nodeType":"Block","src":"5147:174:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3936,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"5243:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":3937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5255:7:18","memberName":"encoded","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"5243:19:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3935,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5233:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5233:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3939,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5267:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5233:47:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206c6172676520696e7465726e616c2068617368","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5282:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec","typeString":"literal_string \"Invalid large internal hash\""},"value":"Invalid large internal hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec","typeString":"literal_string \"Invalid large internal hash\""}],"id":3934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5225:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5225:87:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3943,"nodeType":"ExpressionStatement","src":"5225:87:18"}]}},"id":3958,"nodeType":"IfStatement","src":"4922:575:18","trueBody":{"id":3926,"nodeType":"Block","src":"4948:152:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3918,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"5032:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":3919,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5044:7:18","memberName":"encoded","nodeType":"MemberAccess","referencedDeclaration":3704,"src":"5032:19:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3917,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5022:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5022:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3921,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"5056:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5022:47:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726f6f742068617368","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5071:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","typeString":"literal_string \"Invalid root hash\""},"value":"Invalid root hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","typeString":"literal_string \"Invalid root hash\""}],"id":3916,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5014:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5014:77:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3925,"nodeType":"ExpressionStatement","src":"5014:77:18"}]}},{"id":3962,"nodeType":"UncheckedBlock","src":"5573:32:18","statements":[{"expression":{"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5593:3:18","subExpression":{"id":3959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"5595:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3961,"nodeType":"ExpressionStatement","src":"5593:3:18"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3963,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"5617:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":3964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5629:7:18","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"5617:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5637:6:18","memberName":"length","nodeType":"MemberAccess","src":"5617:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3966,"name":"BRANCH_NODE_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"5647:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5617:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4007,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"6241:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":4008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6253:7:18","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"6241:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6261:6:18","memberName":"length","nodeType":"MemberAccess","src":"6241:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4010,"name":"LEAF_OR_EXTENSION_NODE_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"6271:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6241:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4139,"nodeType":"Block","src":"7939:58:18","statements":[{"expression":{"arguments":[{"hexValue":"526563656976656420616e20756e706172736561626c65206e6f64652e","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7956:31:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","typeString":"literal_string \"Received an unparseable node.\""},"value":"Received an unparseable node."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","typeString":"literal_string \"Received an unparseable node.\""}],"id":4135,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7949:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7949:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4138,"nodeType":"ExpressionStatement","src":"7949:39:18"}]},"id":4140,"nodeType":"IfStatement","src":"6237:1760:18","trueBody":{"id":4134,"nodeType":"Block","src":"6302:1631:18","statements":[{"assignments":[4013],"declarations":[{"constant":false,"id":4013,"mutability":"mutable","name":"path","nameLocation":"6325:4:18","nodeType":"VariableDeclaration","scope":4134,"src":"6312:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4012,"name":"bytes","nodeType":"ElementaryTypeName","src":"6312:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4017,"initialValue":{"arguments":[{"id":4015,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"6345:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}],"id":4014,"name":"_getNodePath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"6332:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TrieNode_$3709_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct MerkleTrie.TrieNode memory) pure returns (bytes memory)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6332:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6312:45:18"},{"assignments":[4019],"declarations":[{"constant":false,"id":4019,"mutability":"mutable","name":"prefix","nameLocation":"6373:6:18","nodeType":"VariableDeclaration","scope":4134,"src":"6367:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4018,"name":"uint8","nodeType":"ElementaryTypeName","src":"6367:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4026,"initialValue":{"arguments":[{"baseExpression":{"id":4022,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"6388:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4024,"indexExpression":{"hexValue":"30","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6393:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6388:7:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6382:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4020,"name":"uint8","nodeType":"ElementaryTypeName","src":"6382:5:18","typeDescriptions":{}}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6382:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6367:29:18"},{"assignments":[4028],"declarations":[{"constant":false,"id":4028,"mutability":"mutable","name":"offset","nameLocation":"6412:6:18","nodeType":"VariableDeclaration","scope":4134,"src":"6406:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4027,"name":"uint8","nodeType":"ElementaryTypeName","src":"6406:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4035,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6421:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4030,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"6426:6:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6435:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6426:10:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6425:12:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6421:16:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6406:31:18"},{"assignments":[4037],"declarations":[{"constant":false,"id":4037,"mutability":"mutable","name":"pathRemainder","nameLocation":"6460:13:18","nodeType":"VariableDeclaration","scope":4134,"src":"6447:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4036,"name":"bytes","nodeType":"ElementaryTypeName","src":"6447:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4043,"initialValue":{"arguments":[{"id":4040,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4013,"src":"6493:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4041,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4028,"src":"6499:6:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":4038,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"6476:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6487:5:18","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":3499,"src":"6476:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes memory)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6447:59:18"},{"assignments":[4045],"declarations":[{"constant":false,"id":4045,"mutability":"mutable","name":"keyRemainder","nameLocation":"6529:12:18","nodeType":"VariableDeclaration","scope":4134,"src":"6516:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4044,"name":"bytes","nodeType":"ElementaryTypeName","src":"6516:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4051,"initialValue":{"arguments":[{"id":4048,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"6561:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4049,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"6566:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4046,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"6544:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6555:5:18","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":3499,"src":"6544:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes memory)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6544:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6516:66:18"},{"assignments":[4053],"declarations":[{"constant":false,"id":4053,"mutability":"mutable","name":"sharedNibbleLength","nameLocation":"6600:18:18","nodeType":"VariableDeclaration","scope":4134,"src":"6592:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4052,"name":"uint256","nodeType":"ElementaryTypeName","src":"6592:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4058,"initialValue":{"arguments":[{"id":4055,"name":"pathRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6644:13:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4056,"name":"keyRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"6659:12:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4054,"name":"_getSharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4360,"src":"6621:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) pure returns (uint256)"}},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6621:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6592:80:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4059,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"6687:6:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4060,"name":"PREFIX_LEAF_EVEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"6697:16:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6687:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4062,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"6717:6:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4063,"name":"PREFIX_LEAF_ODD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"6727:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6717:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6687:55:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"7207:6:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4091,"name":"PREFIX_EXTENSION_EVEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"7217:21:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7207:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4093,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"7242:6:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4094,"name":"PREFIX_EXTENSION_ODD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3726,"src":"7252:20:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7242:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7207:65:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4131,"nodeType":"Block","src":"7854:71:18","statements":[{"expression":{"arguments":[{"hexValue":"52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e20707265666978","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","typeString":"literal_string \"Received a node with an unknown prefix\""},"value":"Received a node with an unknown prefix"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","typeString":"literal_string \"Received a node with an unknown prefix\""}],"id":4127,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7866:6:18","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7866:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4130,"nodeType":"ExpressionStatement","src":"7866:48:18"}]},"id":4132,"nodeType":"IfStatement","src":"7203:722:18","trueBody":{"id":4126,"nodeType":"Block","src":"7274:574:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"7290:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":4098,"name":"pathRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"7312:13:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7326:6:18","memberName":"length","nodeType":"MemberAccess","src":"7312:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7290:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4124,"nodeType":"Block","src":"7593:245:18","statements":[{"expression":{"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4110,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7699:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":4112,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"7726:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":4113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7738:7:18","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"7726:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4115,"indexExpression":{"hexValue":"31","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7746:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7726:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4111,"name":"_getNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"7715:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7715:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7699:50:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4118,"nodeType":"ExpressionStatement","src":"7699:50:18"},{"expression":{"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4119,"name":"currentKeyIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"7763:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4120,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"7785:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7763:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4122,"nodeType":"ExpressionStatement","src":"7763:40:18"},{"id":4123,"nodeType":"Continue","src":"7817:8:18"}]},"id":4125,"nodeType":"IfStatement","src":"7286:552:18","trueBody":{"id":4109,"nodeType":"Block","src":"7334:253:18","statements":[{"expression":{"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4101,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7522:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4104,"name":"RLP_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"7546:8:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7538:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7538:7:18","typeDescriptions":{}}},"id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7538:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7522:33:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4107,"nodeType":"ExpressionStatement","src":"7522:33:18"},{"id":4108,"nodeType":"Break","src":"7569:5:18"}]}}]}},"id":4133,"nodeType":"IfStatement","src":"6683:1242:18","trueBody":{"id":4089,"nodeType":"Block","src":"6744:453:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4066,"name":"pathRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"6760:13:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6774:6:18","memberName":"length","nodeType":"MemberAccess","src":"6760:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4068,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"6784:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6760:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4070,"name":"keyRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"6806:12:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6819:6:18","memberName":"length","nodeType":"MemberAccess","src":"6806:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4072,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"6829:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6806:41:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6760:87:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4080,"nodeType":"IfStatement","src":"6756:299:18","trueBody":{"id":4079,"nodeType":"Block","src":"6849:206:18","statements":[{"expression":{"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4075,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"7005:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4076,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4053,"src":"7024:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7005:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4078,"nodeType":"ExpressionStatement","src":"7005:37:18"}]}},{"expression":{"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4081,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"7136:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4084,"name":"RLP_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"7160:8:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7152:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:18","typeDescriptions":{}}},"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7152:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7136:33:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4087,"nodeType":"ExpressionStatement","src":"7136:33:18"},{"id":4088,"nodeType":"Break","src":"7181:5:18"}]}}]}},"id":4141,"nodeType":"IfStatement","src":"5613:2384:18","trueBody":{"id":4006,"nodeType":"Block","src":"5667:564:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"5681:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3969,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"5700:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5704:6:18","memberName":"length","nodeType":"MemberAccess","src":"5700:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5681:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4004,"nodeType":"Block","src":"5854:369:18","statements":[{"assignments":[3975],"declarations":[{"constant":false,"id":3975,"mutability":"mutable","name":"branchKey","nameLocation":"5992:9:18","nodeType":"VariableDeclaration","scope":4004,"src":"5986:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3974,"name":"uint8","nodeType":"ElementaryTypeName","src":"5986:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3982,"initialValue":{"arguments":[{"baseExpression":{"id":3978,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"6010:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3980,"indexExpression":{"id":3979,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"6014:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6010:20:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6004:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3976,"name":"uint8","nodeType":"ElementaryTypeName","src":"6004:5:18","typeDescriptions":{}}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6004:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5986:45:18"},{"assignments":[3987],"declarations":[{"constant":false,"id":3987,"mutability":"mutable","name":"nextNode","nameLocation":"6068:8:18","nodeType":"VariableDeclaration","scope":4004,"src":"6043:33:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":3986,"nodeType":"UserDefinedTypeName","pathNode":{"id":3985,"name":"RLPReader.RLPItem","nameLocations":["6043:9:18","6053:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"6043:17:18"},"referencedDeclaration":4478,"src":"6043:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"id":3992,"initialValue":{"baseExpression":{"expression":{"id":3988,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"6079:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":3989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6091:7:18","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"6079:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":3991,"indexExpression":{"id":3990,"name":"branchKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"6099:9:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6079:30:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"nodeType":"VariableDeclarationStatement","src":"6043:66:18"},{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3993,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"6121:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3995,"name":"nextNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"6148:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":3994,"name":"_getNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4278,"src":"6137:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6137:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6121:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3998,"nodeType":"ExpressionStatement","src":"6121:36:18"},{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3999,"name":"currentKeyIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"6169:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6191:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6169:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"6169:23:18"},{"id":4003,"nodeType":"Continue","src":"6204:8:18"}]},"id":4005,"nodeType":"IfStatement","src":"5677:546:18","trueBody":{"id":3973,"nodeType":"Block","src":"5712:136:18","statements":[{"id":3972,"nodeType":"Break","src":"5832:5:18"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3893,"src":"4665:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3897,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"4669:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4665:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4143,"initializationExpression":{"assignments":[3893],"declarations":[{"constant":false,"id":3893,"mutability":"mutable","name":"i","nameLocation":"4658:1:18","nodeType":"VariableDeclaration","scope":4143,"src":"4650:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3892,"name":"uint256","nodeType":"ElementaryTypeName","src":"4650:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3895,"initialValue":{"hexValue":"30","id":3894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4662:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4650:13:18"},"nodeType":"ForStatement","src":"4645:3358:18"},{"assignments":[4145],"declarations":[{"constant":false,"id":4145,"mutability":"mutable","name":"isFinalNode","nameLocation":"8071:11:18","nodeType":"VariableDeclaration","scope":4162,"src":"8066:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4144,"name":"bool","nodeType":"ElementaryTypeName","src":"8066:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4152,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"8085:13:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4149,"name":"RLP_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"8110:8:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8102:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8102:7:18","typeDescriptions":{}}},"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8102:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8085:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8066:53:18"},{"expression":{"components":[{"id":4153,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"8133:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4156,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"8162:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4157,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"8167:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4154,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"8145:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8156:5:18","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":3499,"src":"8145:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes memory)"}},"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8145:38:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4159,"name":"isFinalNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4145,"src":"8185:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8132:65:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$","typeString":"tuple(uint256,bytes memory,bool)"}},"functionReturnParameters":3859,"id":4161,"nodeType":"Return","src":"8125:72:18"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"3703:387:18","text":" @notice Walks through a proof using a provided key.\n @param _proof Inclusion proof to walk through.\n @param _key Key to use for the walk.\n @param _root Known root of the trie.\n @return _pathLength Length of the final path\n @return _keyRemainder Portion of the key remaining after the walk.\n @return _isFinalNode Whether or not we've hit a dead end."},"id":4163,"implemented":true,"kind":"function","modifiers":[],"name":"_walkNodePath","nameLocation":"4102:13:18","nodeType":"FunctionDefinition","parameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3847,"mutability":"mutable","name":"_proof","nameLocation":"4139:6:18","nodeType":"VariableDeclaration","scope":4163,"src":"4121:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":3845,"nodeType":"UserDefinedTypeName","pathNode":{"id":3844,"name":"TrieNode","nameLocations":["4121:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"4121:8:18"},"referencedDeclaration":3709,"src":"4121:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":3846,"nodeType":"ArrayTypeName","src":"4121:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"},{"constant":false,"id":3849,"mutability":"mutable","name":"_key","nameLocation":"4164:4:18","nodeType":"VariableDeclaration","scope":4163,"src":"4151:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3848,"name":"bytes","nodeType":"ElementaryTypeName","src":"4151:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3851,"mutability":"mutable","name":"_root","nameLocation":"4182:5:18","nodeType":"VariableDeclaration","scope":4163,"src":"4174:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3850,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4174:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4115:76:18"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3854,"mutability":"mutable","name":"_pathLength","nameLocation":"4241:11:18","nodeType":"VariableDeclaration","scope":4163,"src":"4233:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3853,"name":"uint256","nodeType":"ElementaryTypeName","src":"4233:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3856,"mutability":"mutable","name":"_keyRemainder","nameLocation":"4273:13:18","nodeType":"VariableDeclaration","scope":4163,"src":"4260:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3855,"name":"bytes","nodeType":"ElementaryTypeName","src":"4260:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"_isFinalNode","nameLocation":"4299:12:18","nodeType":"VariableDeclaration","scope":4163,"src":"4294:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3857,"name":"bool","nodeType":"ElementaryTypeName","src":"4294:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4225:92:18"},"scope":4361,"src":"4093:4109:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4238,"nodeType":"Block","src":"8491:412:18","statements":[{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"nodes","nameLocation":"8524:5:18","nodeType":"VariableDeclaration","scope":4238,"src":"8497:32:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":4176,"nodeType":"UserDefinedTypeName","pathNode":{"id":4175,"name":"RLPReader.RLPItem","nameLocations":["8497:9:18","8507:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"8497:17:18"},"referencedDeclaration":4478,"src":"8497:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":4177,"nodeType":"ArrayTypeName","src":"8497:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":4183,"initialValue":{"arguments":[{"id":4181,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"8551:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4179,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"8532:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8542:8:18","memberName":"readList","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"8532:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8532:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8497:61:18"},{"assignments":[4188],"declarations":[{"constant":false,"id":4188,"mutability":"mutable","name":"proof","nameLocation":"8582:5:18","nodeType":"VariableDeclaration","scope":4238,"src":"8564:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":4186,"nodeType":"UserDefinedTypeName","pathNode":{"id":4185,"name":"TrieNode","nameLocations":["8564:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"8564:8:18"},"referencedDeclaration":3709,"src":"8564:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":4187,"nodeType":"ArrayTypeName","src":"8564:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"}],"id":4196,"initialValue":{"arguments":[{"expression":{"id":4193,"name":"nodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8605:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8611:6:18","memberName":"length","nodeType":"MemberAccess","src":"8605:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8590:14:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MerkleTrie.TrieNode memory[] memory)"},"typeName":{"baseType":{"id":4190,"nodeType":"UserDefinedTypeName","pathNode":{"id":4189,"name":"TrieNode","nameLocations":["8594:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"8594:8:18"},"referencedDeclaration":3709,"src":"8594:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":4191,"nodeType":"ArrayTypeName","src":"8594:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8590:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8564:54:18"},{"assignments":[4198],"declarations":[{"constant":false,"id":4198,"mutability":"mutable","name":"len","nameLocation":"8633:3:18","nodeType":"VariableDeclaration","scope":4238,"src":"8625:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4197,"name":"uint256","nodeType":"ElementaryTypeName","src":"8625:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4201,"initialValue":{"expression":{"id":4199,"name":"nodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8639:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8645:6:18","memberName":"length","nodeType":"MemberAccess","src":"8639:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8625:26:18"},{"body":{"id":4234,"nodeType":"Block","src":"8688:192:18","statements":[{"assignments":[4210],"declarations":[{"constant":false,"id":4210,"mutability":"mutable","name":"encoded","nameLocation":"8709:7:18","nodeType":"VariableDeclaration","scope":4234,"src":"8696:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4209,"name":"bytes","nodeType":"ElementaryTypeName","src":"8696:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4217,"initialValue":{"arguments":[{"baseExpression":{"id":4213,"name":"nodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"8739:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4215,"indexExpression":{"id":4214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8745:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8739:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4211,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"8719:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8729:9:18","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":4657,"src":"8719:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8696:52:18"},{"expression":{"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4218,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"8756:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":4220,"indexExpression":{"id":4219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8762:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8756:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4222,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"8786:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":4225,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"8823:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4223,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"8804:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8814:8:18","memberName":"readList","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"8804:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8804:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}],"id":4221,"name":"TrieNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"8767:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TrieNode_$3709_storage_ptr_$","typeString":"type(struct MerkleTrie.TrieNode storage pointer)"}},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8777:7:18","8795:7:18"],"names":["encoded","decoded"],"nodeType":"FunctionCall","src":"8767:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"src":"8756:77:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":4229,"nodeType":"ExpressionStatement","src":"8756:77:18"},{"id":4233,"nodeType":"UncheckedBlock","src":"8842:32:18","statements":[{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8862:3:18","subExpression":{"id":4230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8864:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4232,"nodeType":"ExpressionStatement","src":"8862:3:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"8677:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4207,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4198,"src":"8681:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8677:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"initializationExpression":{"assignments":[4203],"declarations":[{"constant":false,"id":4203,"mutability":"mutable","name":"i","nameLocation":"8670:1:18","nodeType":"VariableDeclaration","scope":4235,"src":"8662:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"8662:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4205,"initialValue":{"hexValue":"30","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8674:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8662:13:18"},"nodeType":"ForStatement","src":"8657:223:18"},{"expression":{"id":4236,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"8893:5:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"functionReturnParameters":4172,"id":4237,"nodeType":"Return","src":"8886:12:18"}]},"documentation":{"id":4164,"nodeType":"StructuredDocumentation","src":"8206:191:18","text":" @notice Parses an RLP-encoded proof into something more useful.\n @param _proof RLP-encoded proof to parse.\n @return _parsed Proof parsed into easily accessible structs."},"id":4239,"implemented":true,"kind":"function","modifiers":[],"name":"_parseProof","nameLocation":"8409:11:18","nodeType":"FunctionDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"_proof","nameLocation":"8434:6:18","nodeType":"VariableDeclaration","scope":4239,"src":"8421:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4165,"name":"bytes","nodeType":"ElementaryTypeName","src":"8421:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8420:21:18"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"_parsed","nameLocation":"8482:7:18","nodeType":"VariableDeclaration","scope":4239,"src":"8464:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":4169,"nodeType":"UserDefinedTypeName","pathNode":{"id":4168,"name":"TrieNode","nameLocations":["8464:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"8464:8:18"},"referencedDeclaration":3709,"src":"8464:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":4170,"nodeType":"ArrayTypeName","src":"8464:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$3709_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"}],"src":"8463:27:18"},"scope":4361,"src":"8400:503:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4277,"nodeType":"Block","src":"9290:310:18","statements":[{"assignments":[4249],"declarations":[{"constant":false,"id":4249,"mutability":"mutable","name":"nodeID","nameLocation":"9309:6:18","nodeType":"VariableDeclaration","scope":4277,"src":"9296:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4248,"name":"bytes","nodeType":"ElementaryTypeName","src":"9296:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4250,"nodeType":"VariableDeclarationStatement","src":"9296:19:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4251,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"9326:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4252,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9332:6:18","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"9326:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9341:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9326:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4270,"nodeType":"Block","src":"9458:96:18","statements":[{"expression":{"id":4268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4263,"name":"nodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"9512:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4266,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"9541:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4264,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"9521:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9531:9:18","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":4657,"src":"9521:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9521:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"9512:35:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4269,"nodeType":"ExpressionStatement","src":"9512:35:18"}]},"id":4271,"nodeType":"IfStatement","src":"9322:232:18","trueBody":{"id":4262,"nodeType":"Block","src":"9345:107:18","statements":[{"expression":{"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4255,"name":"nodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"9407:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4258,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"9439:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4256,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"9416:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9426:12:18","memberName":"readRawBytes","nodeType":"MemberAccess","referencedDeclaration":4928,"src":"9416:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9416:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"9407:38:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4261,"nodeType":"ExpressionStatement","src":"9407:38:18"}]}},{"expression":{"arguments":[{"id":4274,"name":"nodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"9588:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4272,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"9567:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9578:9:18","memberName":"toBytes32","nodeType":"MemberAccess","referencedDeclaration":3527,"src":"9567:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9567:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4247,"id":4276,"nodeType":"Return","src":"9560:35:18"}]},"documentation":{"id":4240,"nodeType":"StructuredDocumentation","src":"8907:289:18","text":" @notice Picks out the ID for a node. Node ID is referred to as the\n \"hash\" within the specification, but nodes < 32 bytes are not actually\n hashed.\n @param _node Node to pull an ID for.\n @return _nodeID ID for the node, depending on the size of its contents."},"id":4278,"implemented":true,"kind":"function","modifiers":[],"name":"_getNodeID","nameLocation":"9208:10:18","nodeType":"FunctionDefinition","parameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"_node","nameLocation":"9244:5:18","nodeType":"VariableDeclaration","scope":4278,"src":"9219:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4242,"nodeType":"UserDefinedTypeName","pathNode":{"id":4241,"name":"RLPReader.RLPItem","nameLocations":["9219:9:18","9229:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"9219:17:18"},"referencedDeclaration":4478,"src":"9219:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"9218:32:18"},"returnParameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"_nodeID","nameLocation":"9281:7:18","nodeType":"VariableDeclaration","scope":4278,"src":"9273:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9272:17:18"},"scope":4361,"src":"9199:401:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4298,"nodeType":"Block","src":"9866:77:18","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":4291,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"9920:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":4292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9926:7:18","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"9920:13:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4294,"indexExpression":{"hexValue":"30","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9934:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9920:16:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4289,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"9900:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9910:9:18","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":4657,"src":"9900:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4287,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"9879:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$3691_$","typeString":"type(library BytesUtils)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9890:9:18","memberName":"toNibbles","nodeType":"MemberAccess","referencedDeclaration":3612,"src":"9879:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4286,"id":4297,"nodeType":"Return","src":"9872:66:18"}]},"documentation":{"id":4279,"nodeType":"StructuredDocumentation","src":"9604:172:18","text":" @notice Gets the path for a leaf or extension node.\n @param _node Node to get a path for.\n @return _path Node path, converted to an array of nibbles."},"id":4299,"implemented":true,"kind":"function","modifiers":[],"name":"_getNodePath","nameLocation":"9788:12:18","nodeType":"FunctionDefinition","parameters":{"id":4283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"_node","nameLocation":"9817:5:18","nodeType":"VariableDeclaration","scope":4299,"src":"9801:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode"},"typeName":{"id":4281,"nodeType":"UserDefinedTypeName","pathNode":{"id":4280,"name":"TrieNode","nameLocations":["9801:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"9801:8:18"},"referencedDeclaration":3709,"src":"9801:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"visibility":"internal"}],"src":"9800:23:18"},"returnParameters":{"id":4286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4285,"mutability":"mutable","name":"_path","nameLocation":"9859:5:18","nodeType":"VariableDeclaration","scope":4299,"src":"9846:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4284,"name":"bytes","nodeType":"ElementaryTypeName","src":"9846:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9845:20:18"},"scope":4361,"src":"9779:164:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4320,"nodeType":"Block","src":"10176:78:18","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":4310,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"10209:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":4311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10215:7:18","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"10209:13:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4317,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":4312,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"10223:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":4313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10229:7:18","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":3708,"src":"10223:13:18","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10237:6:18","memberName":"length","nodeType":"MemberAccess","src":"10223:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10246:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10223:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10209:39:18","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4308,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"10189:9:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10199:9:18","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":4657,"src":"10189:19:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4307,"id":4319,"nodeType":"Return","src":"10182:67:18"}]},"documentation":{"id":4300,"nodeType":"StructuredDocumentation","src":"9947:137:18","text":" @notice Gets the path for a node.\n @param _node Node to get a value for.\n @return _value Node value, as hex bytes."},"id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"_getNodeValue","nameLocation":"10096:13:18","nodeType":"FunctionDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"_node","nameLocation":"10126:5:18","nodeType":"VariableDeclaration","scope":4321,"src":"10110:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_memory_ptr","typeString":"struct MerkleTrie.TrieNode"},"typeName":{"id":4302,"nodeType":"UserDefinedTypeName","pathNode":{"id":4301,"name":"TrieNode","nameLocations":["10110:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":3709,"src":"10110:8:18"},"referencedDeclaration":3709,"src":"10110:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$3709_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"visibility":"internal"}],"src":"10109:23:18"},"returnParameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"_value","nameLocation":"10168:6:18","nodeType":"VariableDeclaration","scope":4321,"src":"10155:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4305,"name":"bytes","nodeType":"ElementaryTypeName","src":"10155:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10154:21:18"},"scope":4361,"src":"10087:167:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4359,"nodeType":"Block","src":"10587:118:18","statements":[{"assignments":[4332],"declarations":[{"constant":false,"id":4332,"mutability":"mutable","name":"i","nameLocation":"10601:1:18","nodeType":"VariableDeclaration","scope":4359,"src":"10593:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4331,"name":"uint256","nodeType":"ElementaryTypeName","src":"10593:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4334,"initialValue":{"hexValue":"30","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10605:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10593:13:18"},{"body":{"id":4355,"nodeType":"Block","src":"10669:18:18","statements":[{"expression":{"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10677:3:18","subExpression":{"id":4352,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"10677:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4354,"nodeType":"ExpressionStatement","src":"10677:3:18"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4335,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"10619:2:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10622:6:18","memberName":"length","nodeType":"MemberAccess","src":"10619:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4337,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"10631:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10619:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4339,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"10636:2:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10639:6:18","memberName":"length","nodeType":"MemberAccess","src":"10636:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4341,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"10648:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10619:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4344,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"10653:2:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4346,"indexExpression":{"id":4345,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"10656:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10653:5:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":4347,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"10662:2:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4349,"indexExpression":{"id":4348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"10665:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10662:5:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10653:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10619:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4356,"nodeType":"WhileStatement","src":"10612:75:18"},{"expression":{"id":4357,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"10699:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4330,"id":4358,"nodeType":"Return","src":"10692:8:18"}]},"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"10258:221:18","text":" @notice Utility; determines the number of nibbles shared between two\n nibble arrays.\n @param _a First nibble array.\n @param _b Second nibble array.\n @return _shared Number of shared nibbles."},"id":4360,"implemented":true,"kind":"function","modifiers":[],"name":"_getSharedNibbleLength","nameLocation":"10491:22:18","nodeType":"FunctionDefinition","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"_a","nameLocation":"10527:2:18","nodeType":"VariableDeclaration","scope":4360,"src":"10514:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4323,"name":"bytes","nodeType":"ElementaryTypeName","src":"10514:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"_b","nameLocation":"10544:2:18","nodeType":"VariableDeclaration","scope":4360,"src":"10531:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4325,"name":"bytes","nodeType":"ElementaryTypeName","src":"10531:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10513:34:18"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"_shared","nameLocation":"10578:7:18","nodeType":"VariableDeclaration","scope":4360,"src":"10570:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"10570:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10569:17:18"},"scope":4361,"src":"10482:223:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4362,"src":"359:10348:18","usedErrors":[]}],"src":"46:10662:18"},"id":18},"contracts/messaging/connectors/optimism/lib/OVMCodec.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/OVMCodec.sol","exportedSymbols":{"OVMCodec":[4424],"RLPReader":[5209]},"id":4425,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4363,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:19"},{"absolutePath":"contracts/messaging/connectors/optimism/lib/RLPReader.sol","file":"./RLPReader.sol","id":4365,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4425,"sourceUnit":5210,"src":"93:42:19","symbolAliases":[{"foreign":{"id":4364,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"101:9:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"OVMCodec","contractDependencies":[],"contractKind":"library","documentation":{"id":4366,"nodeType":"StructuredDocumentation","src":"137:173:19","text":" @title OVMCodec\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol"},"fullyImplemented":true,"id":4424,"linearizedBaseContracts":[4424],"name":"OVMCodec","nameLocation":"319:8:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OVMCodec.EVMAccount","id":4375,"members":[{"constant":false,"id":4368,"mutability":"mutable","name":"nonce","nameLocation":"411:5:19","nodeType":"VariableDeclaration","scope":4375,"src":"403:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"balance","nameLocation":"430:7:19","nodeType":"VariableDeclaration","scope":4375,"src":"422:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"422:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4372,"mutability":"mutable","name":"storageRoot","nameLocation":"451:11:19","nodeType":"VariableDeclaration","scope":4375,"src":"443:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"443:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4374,"mutability":"mutable","name":"codeHash","nameLocation":"476:8:19","nodeType":"VariableDeclaration","scope":4375,"src":"468:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"468:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"EVMAccount","nameLocation":"386:10:19","nodeType":"StructDefinition","scope":4424,"src":"379:110:19","visibility":"public"},{"body":{"id":4422,"nodeType":"Block","src":"751:352:19","statements":[{"assignments":[4389],"declarations":[{"constant":false,"id":4389,"mutability":"mutable","name":"accountState","nameLocation":"784:12:19","nodeType":"VariableDeclaration","scope":4422,"src":"757:39:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":4387,"nodeType":"UserDefinedTypeName","pathNode":{"id":4386,"name":"RLPReader.RLPItem","nameLocations":["757:9:19","767:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"757:17:19"},"referencedDeclaration":4478,"src":"757:17:19","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":4388,"nodeType":"ArrayTypeName","src":"757:19:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":4394,"initialValue":{"arguments":[{"id":4392,"name":"_encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"818:8:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4390,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"799:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"809:8:19","memberName":"readList","nodeType":"MemberAccess","referencedDeclaration":4621,"src":"799:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"799:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"757:70:19"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":4398,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"897:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4400,"indexExpression":{"hexValue":"30","id":4399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"910:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"897:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4396,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"875:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"885:11:19","memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"875:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":4404,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"954:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4406,"indexExpression":{"hexValue":"31","id":4405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"954:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4402,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"932:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"942:11:19","memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":4788,"src":"932:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":4410,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"1015:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4412,"indexExpression":{"hexValue":"32","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1028:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1015:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4408,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"993:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1003:11:19","memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":4756,"src":"993:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"baseExpression":{"id":4416,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"1073:12:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4418,"indexExpression":{"hexValue":"33","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1086:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1073:15:19","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":4414,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5209,"src":"1051:9:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$5209_$","typeString":"type(library RLPReader)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1061:11:19","memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":4756,"src":"1051:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1051:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4395,"name":"EVMAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"847:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EVMAccount_$4375_storage_ptr_$","typeString":"type(struct OVMCodec.EVMAccount storage pointer)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["868:5:19","923:7:19","980:11:19","1041:8:19"],"names":["nonce","balance","storageRoot","codeHash"],"nodeType":"FunctionCall","src":"847:251:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$4375_memory_ptr","typeString":"struct OVMCodec.EVMAccount memory"}},"functionReturnParameters":4383,"id":4421,"nodeType":"Return","src":"834:264:19"}]},"documentation":{"id":4376,"nodeType":"StructuredDocumentation","src":"493:164:19","text":" @notice Decodes an RLP-encoded account state into a useful struct.\n @param _encoded RLP-encoded account state.\n @return Account state struct."},"id":4423,"implemented":true,"kind":"function","modifiers":[],"name":"decodeEVMAccount","nameLocation":"669:16:19","nodeType":"FunctionDefinition","parameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"_encoded","nameLocation":"699:8:19","nodeType":"VariableDeclaration","scope":4423,"src":"686:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4377,"name":"bytes","nodeType":"ElementaryTypeName","src":"686:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"685:23:19"},"returnParameters":{"id":4383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4423,"src":"732:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$4375_memory_ptr","typeString":"struct OVMCodec.EVMAccount"},"typeName":{"id":4381,"nodeType":"UserDefinedTypeName","pathNode":{"id":4380,"name":"EVMAccount","nameLocations":["732:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4375,"src":"732:10:19"},"referencedDeclaration":4375,"src":"732:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$4375_storage_ptr","typeString":"struct OVMCodec.EVMAccount"}},"visibility":"internal"}],"src":"731:19:19"},"scope":4424,"src":"660:443:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4425,"src":"311:794:19","usedErrors":[]}],"src":"46:1060:19"},"id":19},"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol","exportedSymbols":{"PredeployAddresses":[4464]},"id":4465,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4426,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"PredeployAddresses","contractDependencies":[],"contractKind":"library","documentation":{"id":4427,"nodeType":"StructuredDocumentation","src":"71:197:20","text":" @title PredeployAddresses\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol"},"fullyImplemented":true,"id":4464,"linearizedBaseContracts":[4464],"name":"PredeployAddresses","nameLocation":"277:18:20","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4430,"mutability":"constant","name":"L2_TO_L1_MESSAGE_PASSER","nameLocation":"326:23:20","nodeType":"VariableDeclaration","scope":4464,"src":"300:94:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4428,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303030","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"352:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":4433,"mutability":"constant","name":"L1_MESSAGE_SENDER","nameLocation":"424:17:20","nodeType":"VariableDeclaration","scope":4464,"src":"398:88:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4431,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303031","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"444:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000001"},"visibility":"internal"},{"constant":true,"id":4436,"mutability":"constant","name":"DEPLOYER_WHITELIST","nameLocation":"516:18:20","nodeType":"VariableDeclaration","scope":4464,"src":"490:89:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4434,"name":"address","nodeType":"ElementaryTypeName","src":"490:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303032","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000002"},"visibility":"internal"},{"constant":true,"id":4442,"mutability":"constant","name":"OVM_ETH","nameLocation":"617:7:20","nodeType":"VariableDeclaration","scope":4464,"src":"583:95:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4437,"name":"address","nodeType":"ElementaryTypeName","src":"583:15:20","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":{"arguments":[{"hexValue":"307844656164446541646465416464454164646561644445614444454164446561444465414430303030","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"635:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"627:8:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4438,"name":"address","nodeType":"ElementaryTypeName","src":"627:8:20","stateMutability":"payable","typeDescriptions":{}}},"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":true,"id":4445,"mutability":"constant","name":"L2_CROSS_DOMAIN_MESSENGER","nameLocation":"708:25:20","nodeType":"VariableDeclaration","scope":4464,"src":"682:96:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4443,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303037","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"736:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000007"},"visibility":"internal"},{"constant":true,"id":4448,"mutability":"constant","name":"LIB_ADDRESS_MANAGER","nameLocation":"808:19:20","nodeType":"VariableDeclaration","scope":4464,"src":"782:90:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4446,"name":"address","nodeType":"ElementaryTypeName","src":"782:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303038","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"830:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000008"},"visibility":"internal"},{"constant":true,"id":4451,"mutability":"constant","name":"PROXY_EOA","nameLocation":"902:9:20","nodeType":"VariableDeclaration","scope":4464,"src":"876:80:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4449,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303039","id":4450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000009"},"visibility":"internal"},{"constant":true,"id":4454,"mutability":"constant","name":"L2_STANDARD_BRIDGE","nameLocation":"986:18:20","nodeType":"VariableDeclaration","scope":4464,"src":"960:89:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4452,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303130","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000010"},"visibility":"internal"},{"constant":true,"id":4457,"mutability":"constant","name":"SEQUENCER_FEE_WALLET","nameLocation":"1079:20:20","nodeType":"VariableDeclaration","scope":4464,"src":"1053:91:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303131","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1102:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000011"},"visibility":"internal"},{"constant":true,"id":4460,"mutability":"constant","name":"L2_STANDARD_TOKEN_FACTORY","nameLocation":"1174:25:20","nodeType":"VariableDeclaration","scope":4464,"src":"1148:96:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4458,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303132","id":4459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1202:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000012"},"visibility":"internal"},{"constant":true,"id":4463,"mutability":"constant","name":"L1_BLOCK_NUMBER","nameLocation":"1274:15:20","nodeType":"VariableDeclaration","scope":4464,"src":"1248:86:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4461,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303133","id":4462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:42:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000013"},"visibility":"internal"}],"scope":4465,"src":"269:1068:20","usedErrors":[]}],"src":"46:1292:20"},"id":20},"contracts/messaging/connectors/optimism/lib/RLPReader.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/RLPReader.sol","exportedSymbols":{"RLPReader":[5209]},"id":5210,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":4466,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"RLPReader","contractDependencies":[],"contractKind":"library","documentation":{"id":4467,"nodeType":"StructuredDocumentation","src":"71:170:21","text":" @title RLPReader\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/rlp/Lib_RLPReader.sol"},"fullyImplemented":true,"id":5209,"linearizedBaseContracts":[5209],"name":"RLPReader","nameLocation":"250:9:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4470,"mutability":"constant","name":"MAX_LIST_LENGTH","nameLocation":"343:15:21","nodeType":"VariableDeclaration","scope":5209,"src":"317:46:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4468,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"361:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"canonicalName":"RLPReader.RLPItemType","id":4473,"members":[{"id":4471,"name":"DATA_ITEM","nameLocation":"432:9:21","nodeType":"EnumValue","src":"432:9:21"},{"id":4472,"name":"LIST_ITEM","nameLocation":"447:9:21","nodeType":"EnumValue","src":"447:9:21"}],"name":"RLPItemType","nameLocation":"414:11:21","nodeType":"EnumDefinition","src":"409:51:21"},{"canonicalName":"RLPReader.RLPItem","id":4478,"members":[{"constant":false,"id":4475,"mutability":"mutable","name":"length","nameLocation":"540:6:21","nodeType":"VariableDeclaration","scope":4478,"src":"532:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4474,"name":"uint256","nodeType":"ElementaryTypeName","src":"532:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"ptr","nameLocation":"560:3:21","nodeType":"VariableDeclaration","scope":4478,"src":"552:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RLPItem","nameLocation":"518:7:21","nodeType":"StructDefinition","scope":5209,"src":"511:57:21","visibility":"public"},{"body":{"id":4497,"nodeType":"Block","src":"884:122:21","statements":[{"assignments":[4488],"declarations":[{"constant":false,"id":4488,"mutability":"mutable","name":"ptr","nameLocation":"898:3:21","nodeType":"VariableDeclaration","scope":4497,"src":"890:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4489,"nodeType":"VariableDeclarationStatement","src":"890:11:21"},{"AST":{"nodeType":"YulBlock","src":"916:33:21","statements":[{"nodeType":"YulAssignment","src":"924:19:21","value":{"arguments":[{"name":"_in","nodeType":"YulIdentifier","src":"935:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"940:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"931:3:21"},"nodeType":"YulFunctionCall","src":"931:12:21"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"924:3:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4481,"isOffset":false,"isSlot":false,"src":"935:3:21","valueSize":1},{"declaration":4488,"isOffset":false,"isSlot":false,"src":"924:3:21","valueSize":1}],"id":4490,"nodeType":"InlineAssembly","src":"907:42:21"},{"expression":{"arguments":[{"expression":{"id":4492,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4481,"src":"979:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"983:6:21","memberName":"length","nodeType":"MemberAccess","src":"979:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4494,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"996:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4491,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"962:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$4478_storage_ptr_$","typeString":"type(struct RLPReader.RLPItem storage pointer)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["971:6:21","991:3:21"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"962:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"functionReturnParameters":4486,"id":4496,"nodeType":"Return","src":"955:46:21"}]},"documentation":{"id":4479,"nodeType":"StructuredDocumentation","src":"652:153:21","text":" Converts bytes to a reference to memory position and length.\n @param _in Input bytes to convert.\n @return Output memory reference."},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"toRLPItem","nameLocation":"817:9:21","nodeType":"FunctionDefinition","parameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"_in","nameLocation":"840:3:21","nodeType":"VariableDeclaration","scope":4498,"src":"827:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4480,"name":"bytes","nodeType":"ElementaryTypeName","src":"827:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"826:18:21"},"returnParameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4498,"src":"868:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4484,"nodeType":"UserDefinedTypeName","pathNode":{"id":4483,"name":"RLPItem","nameLocations":["868:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"868:7:21"},"referencedDeclaration":4478,"src":"868:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"867:16:21"},"scope":5209,"src":"808:198:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4603,"nodeType":"Block","src":"1225:1211:21","statements":[{"assignments":[4510,null,4513],"declarations":[{"constant":false,"id":4510,"mutability":"mutable","name":"listOffset","nameLocation":"1240:10:21","nodeType":"VariableDeclaration","scope":4603,"src":"1232:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,{"constant":false,"id":4513,"mutability":"mutable","name":"itemType","nameLocation":"1266:8:21","nodeType":"VariableDeclaration","scope":4603,"src":"1254:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":4512,"nodeType":"UserDefinedTypeName","pathNode":{"id":4511,"name":"RLPItemType","nameLocations":["1254:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4473,"src":"1254:11:21"},"referencedDeclaration":4473,"src":"1254:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"id":4517,"initialValue":{"arguments":[{"id":4515,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"1292:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4514,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"1278:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"1231:65:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4519,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"1311:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4520,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"1323:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1335:9:21","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":4472,"src":"1323:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"src":"1311:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6973742076616c75652e","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1346:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","typeString":"literal_string \"Invalid RLP list value.\""},"value":"Invalid RLP list value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","typeString":"literal_string \"Invalid RLP list value.\""}],"id":4518,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1303:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1303:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4525,"nodeType":"ExpressionStatement","src":"1303:69:21"},{"assignments":[4530],"declarations":[{"constant":false,"id":4530,"mutability":"mutable","name":"out","nameLocation":"1772:3:21","nodeType":"VariableDeclaration","scope":4603,"src":"1755:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":4528,"nodeType":"UserDefinedTypeName","pathNode":{"id":4527,"name":"RLPItem","nameLocations":["1755:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"1755:7:21"},"referencedDeclaration":4478,"src":"1755:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":4529,"nodeType":"ArrayTypeName","src":"1755:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":4537,"initialValue":{"arguments":[{"id":4535,"name":"MAX_LIST_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"1792:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1778:13:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct RLPReader.RLPItem memory[] memory)"},"typeName":{"baseType":{"id":4532,"nodeType":"UserDefinedTypeName","pathNode":{"id":4531,"name":"RLPItem","nameLocations":["1782:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"1782:7:21"},"referencedDeclaration":4478,"src":"1782:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":4533,"nodeType":"ArrayTypeName","src":"1782:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}}},"id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:30:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1755:53:21"},{"assignments":[4539],"declarations":[{"constant":false,"id":4539,"mutability":"mutable","name":"itemCount","nameLocation":"1823:9:21","nodeType":"VariableDeclaration","scope":4603,"src":"1815:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4541,"initialValue":{"hexValue":"30","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1815:21:21"},{"assignments":[4543],"declarations":[{"constant":false,"id":4543,"mutability":"mutable","name":"offset","nameLocation":"1850:6:21","nodeType":"VariableDeclaration","scope":4603,"src":"1842:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4542,"name":"uint256","nodeType":"ElementaryTypeName","src":"1842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4545,"initialValue":{"id":4544,"name":"listOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4510,"src":"1859:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1842:27:21"},{"body":{"id":4598,"nodeType":"Block","src":"1903:398:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4551,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"1919:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4552,"name":"MAX_LIST_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"1931:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1919:27:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f766964656420524c50206c6973742065786365656473206d6178206c697374206c656e6774682e","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1948:44:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","typeString":"literal_string \"Provided RLP list exceeds max list length.\""},"value":"Provided RLP list exceeds max list length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","typeString":"literal_string \"Provided RLP list exceeds max list length.\""}],"id":4550,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1911:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:82:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4556,"nodeType":"ExpressionStatement","src":"1911:82:21"},{"assignments":[4558,4560,null],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"itemOffset","nameLocation":"2011:10:21","nodeType":"VariableDeclaration","scope":4598,"src":"2003:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4557,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4560,"mutability":"mutable","name":"itemLength","nameLocation":"2031:10:21","nodeType":"VariableDeclaration","scope":4598,"src":"2023:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":4573,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4563,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"2087:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2091:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"2087:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4565,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2100:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2087:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4567,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"2113:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2117:3:21","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":4477,"src":"2113:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4569,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2123:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4562,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"2070:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$4478_storage_ptr_$","typeString":"type(struct RLPReader.RLPItem storage pointer)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2079:6:21","2108:3:21"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"2070:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4561,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"2047:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:92:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"2002:137:21"},{"expression":{"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4574,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"2148:3:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":4576,"indexExpression":{"id":4575,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"2152:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2148:14:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2182:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4579,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"2195:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2182:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4581,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"2212:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2216:3:21","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":4477,"src":"2212:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4583,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2222:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2212:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4577,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"2165:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$4478_storage_ptr_$","typeString":"type(struct RLPReader.RLPItem storage pointer)"}},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2174:6:21","2207:3:21"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"2165:65:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"src":"2148:82:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4587,"nodeType":"ExpressionStatement","src":"2148:82:21"},{"expression":{"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4588,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4539,"src":"2239:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2252:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2239:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4591,"nodeType":"ExpressionStatement","src":"2239:14:21"},{"expression":{"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4592,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"2261:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"2271:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4594,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"2284:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2271:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2261:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4597,"nodeType":"ExpressionStatement","src":"2261:33:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4543,"src":"1882:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4547,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4502,"src":"1891:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1895:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"1891:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1882:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4599,"nodeType":"WhileStatement","src":"1875:426:21"},{"AST":{"nodeType":"YulBlock","src":"2379:36:21","statements":[{"expression":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"2394:3:21"},{"name":"itemCount","nodeType":"YulIdentifier","src":"2399:9:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2387:6:21"},"nodeType":"YulFunctionCall","src":"2387:22:21"},"nodeType":"YulExpressionStatement","src":"2387:22:21"}]},"evmVersion":"london","externalReferences":[{"declaration":4539,"isOffset":false,"isSlot":false,"src":"2399:9:21","valueSize":1},{"declaration":4530,"isOffset":false,"isSlot":false,"src":"2394:3:21","valueSize":1}],"id":4600,"nodeType":"InlineAssembly","src":"2370:45:21"},{"expression":{"id":4601,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"2428:3:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"functionReturnParameters":4508,"id":4602,"nodeType":"Return","src":"2421:10:21"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"1010:133:21","text":" Reads an RLP list value into a list of RLP items.\n @param _in RLP list value.\n @return Decoded RLP list items."},"id":4604,"implemented":true,"kind":"function","modifiers":[],"name":"readList","nameLocation":"1155:8:21","nodeType":"FunctionDefinition","parameters":{"id":4503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4502,"mutability":"mutable","name":"_in","nameLocation":"1179:3:21","nodeType":"VariableDeclaration","scope":4604,"src":"1164:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4501,"nodeType":"UserDefinedTypeName","pathNode":{"id":4500,"name":"RLPItem","nameLocations":["1164:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"1164:7:21"},"referencedDeclaration":4478,"src":"1164:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"1163:20:21"},"returnParameters":{"id":4508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4604,"src":"1207:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":4505,"nodeType":"UserDefinedTypeName","pathNode":{"id":4504,"name":"RLPItem","nameLocations":["1207:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"1207:7:21"},"referencedDeclaration":4478,"src":"1207:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":4506,"nodeType":"ArrayTypeName","src":"1207:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"src":"1206:18:21"},"scope":5209,"src":"1146:1290:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4620,"nodeType":"Block","src":"2653:42:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4616,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"2685:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4615,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"2675:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$4478_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4614,"name":"readList","nodeType":"Identifier","overloadedDeclarations":[4604,4621],"referencedDeclaration":4604,"src":"2666:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2666:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"functionReturnParameters":4613,"id":4619,"nodeType":"Return","src":"2659:31:21"}]},"documentation":{"id":4605,"nodeType":"StructuredDocumentation","src":"2440:133:21","text":" Reads an RLP list value into a list of RLP items.\n @param _in RLP list value.\n @return Decoded RLP list items."},"id":4621,"implemented":true,"kind":"function","modifiers":[],"name":"readList","nameLocation":"2585:8:21","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"_in","nameLocation":"2607:3:21","nodeType":"VariableDeclaration","scope":4621,"src":"2594:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4606,"name":"bytes","nodeType":"ElementaryTypeName","src":"2594:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2593:18:21"},"returnParameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4621,"src":"2635:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":4610,"nodeType":"UserDefinedTypeName","pathNode":{"id":4609,"name":"RLPItem","nameLocations":["2635:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"2635:7:21"},"referencedDeclaration":4478,"src":"2635:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":4611,"nodeType":"ArrayTypeName","src":"2635:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$4478_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"src":"2634:18:21"},"scope":5209,"src":"2576:119:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4656,"nodeType":"Block","src":"2890:223:21","statements":[{"assignments":[4631,4633,4636],"declarations":[{"constant":false,"id":4631,"mutability":"mutable","name":"itemOffset","nameLocation":"2905:10:21","nodeType":"VariableDeclaration","scope":4656,"src":"2897:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4633,"mutability":"mutable","name":"itemLength","nameLocation":"2925:10:21","nodeType":"VariableDeclaration","scope":4656,"src":"2917:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4636,"mutability":"mutable","name":"itemType","nameLocation":"2949:8:21","nodeType":"VariableDeclaration","scope":4656,"src":"2937:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":4635,"nodeType":"UserDefinedTypeName","pathNode":{"id":4634,"name":"RLPItemType","nameLocations":["2937:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4473,"src":"2937:11:21"},"referencedDeclaration":4473,"src":"2937:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"id":4640,"initialValue":{"arguments":[{"id":4638,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"2975:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4637,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"2961:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2961:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"2896:83:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"2994:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4643,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"3006:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":4644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3018:9:21","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"3006:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"src":"2994:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502062797465732076616c75652e","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3029:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","typeString":"literal_string \"Invalid RLP bytes value.\""},"value":"Invalid RLP bytes value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","typeString":"literal_string \"Invalid RLP bytes value.\""}],"id":4641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2986:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4648,"nodeType":"ExpressionStatement","src":"2986:70:21"},{"expression":{"arguments":[{"expression":{"id":4650,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4625,"src":"3076:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3080:3:21","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":4477,"src":"3076:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4652,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"3085:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4653,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"3097:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4649,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[5190,5208],"referencedDeclaration":5190,"src":"3070:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes memory)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4629,"id":4655,"nodeType":"Return","src":"3063:45:21"}]},"documentation":{"id":4622,"nodeType":"StructuredDocumentation","src":"2699:112:21","text":" Reads an RLP bytes value into bytes.\n @param _in RLP bytes value.\n @return Decoded bytes."},"id":4657,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes","nameLocation":"2823:9:21","nodeType":"FunctionDefinition","parameters":{"id":4626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4625,"mutability":"mutable","name":"_in","nameLocation":"2848:3:21","nodeType":"VariableDeclaration","scope":4657,"src":"2833:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4624,"nodeType":"UserDefinedTypeName","pathNode":{"id":4623,"name":"RLPItem","nameLocations":["2833:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"2833:7:21"},"referencedDeclaration":4478,"src":"2833:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"2832:20:21"},"returnParameters":{"id":4629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4657,"src":"2876:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4627,"name":"bytes","nodeType":"ElementaryTypeName","src":"2876:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2875:14:21"},"scope":5209,"src":"2814:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4671,"nodeType":"Block","src":"3306:43:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4667,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"3339:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4666,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"3329:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$4478_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3329:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4665,"name":"readBytes","nodeType":"Identifier","overloadedDeclarations":[4657,4672],"referencedDeclaration":4657,"src":"3319:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4664,"id":4670,"nodeType":"Return","src":"3312:32:21"}]},"documentation":{"id":4658,"nodeType":"StructuredDocumentation","src":"3117:112:21","text":" Reads an RLP bytes value into bytes.\n @param _in RLP bytes value.\n @return Decoded bytes."},"id":4672,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes","nameLocation":"3241:9:21","nodeType":"FunctionDefinition","parameters":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"_in","nameLocation":"3264:3:21","nodeType":"VariableDeclaration","scope":4672,"src":"3251:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4659,"name":"bytes","nodeType":"ElementaryTypeName","src":"3251:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3250:18:21"},"returnParameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4672,"src":"3292:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4662,"name":"bytes","nodeType":"ElementaryTypeName","src":"3292:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3291:14:21"},"scope":5209,"src":"3232:117:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4688,"nodeType":"Block","src":"3552:40:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4684,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4676,"src":"3582:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4683,"name":"readBytes","nodeType":"Identifier","overloadedDeclarations":[4657,4672],"referencedDeclaration":4657,"src":"3572:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3565:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4681,"name":"string","nodeType":"ElementaryTypeName","src":"3565:6:21","typeDescriptions":{}}},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4680,"id":4687,"nodeType":"Return","src":"3558:29:21"}]},"documentation":{"id":4673,"nodeType":"StructuredDocumentation","src":"3353:118:21","text":" Reads an RLP string value into a string.\n @param _in RLP string value.\n @return Decoded string."},"id":4689,"implemented":true,"kind":"function","modifiers":[],"name":"readString","nameLocation":"3483:10:21","nodeType":"FunctionDefinition","parameters":{"id":4677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4676,"mutability":"mutable","name":"_in","nameLocation":"3509:3:21","nodeType":"VariableDeclaration","scope":4689,"src":"3494:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4675,"nodeType":"UserDefinedTypeName","pathNode":{"id":4674,"name":"RLPItem","nameLocations":["3494:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"3494:7:21"},"referencedDeclaration":4478,"src":"3494:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"3493:20:21"},"returnParameters":{"id":4680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4689,"src":"3537:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4678,"name":"string","nodeType":"ElementaryTypeName","src":"3537:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3536:15:21"},"scope":5209,"src":"3474:118:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4703,"nodeType":"Block","src":"3793:44:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4699,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"3827:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4698,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"3817:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$4478_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3817:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4697,"name":"readString","nodeType":"Identifier","overloadedDeclarations":[4689,4704],"referencedDeclaration":4689,"src":"3806:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (string memory)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4696,"id":4702,"nodeType":"Return","src":"3799:33:21"}]},"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"3596:118:21","text":" Reads an RLP string value into a string.\n @param _in RLP string value.\n @return Decoded string."},"id":4704,"implemented":true,"kind":"function","modifiers":[],"name":"readString","nameLocation":"3726:10:21","nodeType":"FunctionDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"_in","nameLocation":"3750:3:21","nodeType":"VariableDeclaration","scope":4704,"src":"3737:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4691,"name":"bytes","nodeType":"ElementaryTypeName","src":"3737:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3736:18:21"},"returnParameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4704,"src":"3778:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4694,"name":"string","nodeType":"ElementaryTypeName","src":"3778:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3777:15:21"},"scope":5209,"src":"3717:120:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4755,"nodeType":"Block","src":"4039:530:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4714,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"4077:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4081:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"4077:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3333","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4090:2:21","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4095:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4090:6:21","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"}},"src":"4077:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4098:28:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""},"value":"Invalid RLP bytes32 value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""}],"id":4713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4069:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4069:58:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4722,"nodeType":"ExpressionStatement","src":"4069:58:21"},{"assignments":[4724,4726,4729],"declarations":[{"constant":false,"id":4724,"mutability":"mutable","name":"itemOffset","nameLocation":"4143:10:21","nodeType":"VariableDeclaration","scope":4755,"src":"4135:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"4135:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4726,"mutability":"mutable","name":"itemLength","nameLocation":"4163:10:21","nodeType":"VariableDeclaration","scope":4755,"src":"4155:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4155:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4729,"mutability":"mutable","name":"itemType","nameLocation":"4187:8:21","nodeType":"VariableDeclaration","scope":4755,"src":"4175:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":4728,"nodeType":"UserDefinedTypeName","pathNode":{"id":4727,"name":"RLPItemType","nameLocations":["4175:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4473,"src":"4175:11:21"},"referencedDeclaration":4473,"src":"4175:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"id":4733,"initialValue":{"arguments":[{"id":4731,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"4213:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4730,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"4199:13:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4199:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"4134:83:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4735,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"4232:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4736,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"4244:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4256:9:21","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"4244:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"src":"4232:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4267:28:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""},"value":"Invalid RLP bytes32 value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""}],"id":4734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4224:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:72:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4741,"nodeType":"ExpressionStatement","src":"4224:72:21"},{"assignments":[4743],"declarations":[{"constant":false,"id":4743,"mutability":"mutable","name":"ptr","nameLocation":"4311:3:21","nodeType":"VariableDeclaration","scope":4755,"src":"4303:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4742,"name":"uint256","nodeType":"ElementaryTypeName","src":"4303:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4748,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4744,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"4317:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4321:3:21","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":4477,"src":"4317:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4746,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"4327:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4317:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4303:34:21"},{"assignments":[4750],"declarations":[{"constant":false,"id":4750,"mutability":"mutable","name":"out","nameLocation":"4351:3:21","nodeType":"VariableDeclaration","scope":4755,"src":"4343:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4343:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4751,"nodeType":"VariableDeclarationStatement","src":"4343:11:21"},{"AST":{"nodeType":"YulBlock","src":"4369:179:21","statements":[{"nodeType":"YulAssignment","src":"4377:17:21","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4390:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4384:5:21"},"nodeType":"YulFunctionCall","src":"4384:10:21"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"4377:3:21"}]},{"body":{"nodeType":"YulBlock","src":"4478:64:21","statements":[{"nodeType":"YulAssignment","src":"4488:46:21","value":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"4499:3:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4508:3:21","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4517:2:21","type":"","value":"32"},{"name":"itemLength","nodeType":"YulIdentifier","src":"4521:10:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4513:3:21"},"nodeType":"YulFunctionCall","src":"4513:19:21"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"4504:3:21"},"nodeType":"YulFunctionCall","src":"4504:29:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4495:3:21"},"nodeType":"YulFunctionCall","src":"4495:39:21"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"4488:3:21"}]}]},"condition":{"arguments":[{"name":"itemLength","nodeType":"YulIdentifier","src":"4462:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"4474:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4459:2:21"},"nodeType":"YulFunctionCall","src":"4459:18:21"},"nodeType":"YulIf","src":"4456:86:21"}]},"evmVersion":"london","externalReferences":[{"declaration":4726,"isOffset":false,"isSlot":false,"src":"4462:10:21","valueSize":1},{"declaration":4726,"isOffset":false,"isSlot":false,"src":"4521:10:21","valueSize":1},{"declaration":4750,"isOffset":false,"isSlot":false,"src":"4377:3:21","valueSize":1},{"declaration":4750,"isOffset":false,"isSlot":false,"src":"4488:3:21","valueSize":1},{"declaration":4750,"isOffset":false,"isSlot":false,"src":"4499:3:21","valueSize":1},{"declaration":4743,"isOffset":false,"isSlot":false,"src":"4390:3:21","valueSize":1}],"id":4752,"nodeType":"InlineAssembly","src":"4360:188:21"},{"expression":{"id":4753,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4750,"src":"4561:3:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4712,"id":4754,"nodeType":"Return","src":"4554:10:21"}]},"documentation":{"id":4705,"nodeType":"StructuredDocumentation","src":"3841:122:21","text":" Reads an RLP bytes32 value into a bytes32.\n @param _in RLP bytes32 value.\n @return Decoded bytes32."},"id":4756,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"3975:11:21","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"_in","nameLocation":"4002:3:21","nodeType":"VariableDeclaration","scope":4756,"src":"3987:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4707,"nodeType":"UserDefinedTypeName","pathNode":{"id":4706,"name":"RLPItem","nameLocations":["3987:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"3987:7:21"},"referencedDeclaration":4478,"src":"3987:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"3986:20:21"},"returnParameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4756,"src":"4030:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4030:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4029:9:21"},"scope":5209,"src":"3966:603:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4770,"nodeType":"Block","src":"4769:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4766,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"4804:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4765,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"4794:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$4478_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4794:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4764,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[4756,4771],"referencedDeclaration":4756,"src":"4782:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4763,"id":4769,"nodeType":"Return","src":"4775:34:21"}]},"documentation":{"id":4757,"nodeType":"StructuredDocumentation","src":"4573:122:21","text":" Reads an RLP bytes32 value into a bytes32.\n @param _in RLP bytes32 value.\n @return Decoded bytes32."},"id":4771,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"4707:11:21","nodeType":"FunctionDefinition","parameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"_in","nameLocation":"4732:3:21","nodeType":"VariableDeclaration","scope":4771,"src":"4719:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4758,"name":"bytes","nodeType":"ElementaryTypeName","src":"4719:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4718:18:21"},"returnParameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4771,"src":"4760:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4760:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4759:9:21"},"scope":5209,"src":"4698:116:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4787,"nodeType":"Block","src":"5016:43:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4783,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"5049:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4782,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[4756,4771],"referencedDeclaration":4756,"src":"5037:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5037:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5029:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:21","typeDescriptions":{}}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4779,"id":4786,"nodeType":"Return","src":"5022:32:21"}]},"documentation":{"id":4772,"nodeType":"StructuredDocumentation","src":"4818:122:21","text":" Reads an RLP uint256 value into a uint256.\n @param _in RLP uint256 value.\n @return Decoded uint256."},"id":4788,"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","nameLocation":"4952:11:21","nodeType":"FunctionDefinition","parameters":{"id":4776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4775,"mutability":"mutable","name":"_in","nameLocation":"4979:3:21","nodeType":"VariableDeclaration","scope":4788,"src":"4964:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4774,"nodeType":"UserDefinedTypeName","pathNode":{"id":4773,"name":"RLPItem","nameLocations":["4964:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"4964:7:21"},"referencedDeclaration":4478,"src":"4964:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"4963:20:21"},"returnParameters":{"id":4779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4788,"src":"5007:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5007:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5006:9:21"},"scope":5209,"src":"4943:116:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4802,"nodeType":"Block","src":"5259:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4798,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"5294:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4797,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5284:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$4478_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5284:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4796,"name":"readUint256","nodeType":"Identifier","overloadedDeclarations":[4788,4803],"referencedDeclaration":4788,"src":"5272:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5272:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4795,"id":4801,"nodeType":"Return","src":"5265:34:21"}]},"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"5063:122:21","text":" Reads an RLP uint256 value into a uint256.\n @param _in RLP uint256 value.\n @return Decoded uint256."},"id":4803,"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","nameLocation":"5197:11:21","nodeType":"FunctionDefinition","parameters":{"id":4792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"_in","nameLocation":"5222:3:21","nodeType":"VariableDeclaration","scope":4803,"src":"5209:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4790,"name":"bytes","nodeType":"ElementaryTypeName","src":"5209:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5208:18:21"},"returnParameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4803,"src":"5250:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5250:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5249:9:21"},"scope":5209,"src":"5188:116:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4844,"nodeType":"Block","src":"5488:282:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4813,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"5502:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5506:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"5502:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5516:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5502:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020626f6f6c65616e2076616c75652e","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5519:28:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f8f0c9c05acf0cd50562c9d3d6d407e972c8243af862a438314d07063a3dca1","typeString":"literal_string \"Invalid RLP boolean value.\""},"value":"Invalid RLP boolean value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f8f0c9c05acf0cd50562c9d3d6d407e972c8243af862a438314d07063a3dca1","typeString":"literal_string \"Invalid RLP boolean value.\""}],"id":4812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5494:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5494:54:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4819,"nodeType":"ExpressionStatement","src":"5494:54:21"},{"assignments":[4821],"declarations":[{"constant":false,"id":4821,"mutability":"mutable","name":"ptr","nameLocation":"5563:3:21","nodeType":"VariableDeclaration","scope":4844,"src":"5555:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5555:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4824,"initialValue":{"expression":{"id":4822,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"5569:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5573:3:21","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":4477,"src":"5569:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5555:21:21"},{"assignments":[4826],"declarations":[{"constant":false,"id":4826,"mutability":"mutable","name":"out","nameLocation":"5590:3:21","nodeType":"VariableDeclaration","scope":4844,"src":"5582:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4825,"name":"uint256","nodeType":"ElementaryTypeName","src":"5582:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4827,"nodeType":"VariableDeclarationStatement","src":"5582:11:21"},{"AST":{"nodeType":"YulBlock","src":"5608:40:21","statements":[{"nodeType":"YulAssignment","src":"5616:26:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5628:1:21","type":"","value":"0"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5637:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5631:5:21"},"nodeType":"YulFunctionCall","src":"5631:10:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"5623:4:21"},"nodeType":"YulFunctionCall","src":"5623:19:21"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"5616:3:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4826,"isOffset":false,"isSlot":false,"src":"5616:3:21","valueSize":1},{"declaration":4821,"isOffset":false,"isSlot":false,"src":"5637:3:21","valueSize":1}],"id":4828,"nodeType":"InlineAssembly","src":"5599:49:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4830,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"5662:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5669:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5662:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4833,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"5674:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5674:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5662:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69625f524c505265616465723a20496e76616c696420524c5020626f6f6c65616e2076616c75652c206d7573742062652030206f722031","id":4837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5684:58:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_fde08809139da424e56770eb1214d54bfc635eebfb4310c90ffede9d9074c3c0","typeString":"literal_string \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\""},"value":"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fde08809139da424e56770eb1214d54bfc635eebfb4310c90ffede9d9074c3c0","typeString":"literal_string \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\""}],"id":4829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5654:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5654:89:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4839,"nodeType":"ExpressionStatement","src":"5654:89:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4840,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"5757:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5764:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5757:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4811,"id":4843,"nodeType":"Return","src":"5750:15:21"}]},"documentation":{"id":4804,"nodeType":"StructuredDocumentation","src":"5308:110:21","text":" Reads an RLP bool value into a bool.\n @param _in RLP bool value.\n @return Decoded bool."},"id":4845,"implemented":true,"kind":"function","modifiers":[],"name":"readBool","nameLocation":"5430:8:21","nodeType":"FunctionDefinition","parameters":{"id":4808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4807,"mutability":"mutable","name":"_in","nameLocation":"5454:3:21","nodeType":"VariableDeclaration","scope":4845,"src":"5439:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4806,"nodeType":"UserDefinedTypeName","pathNode":{"id":4805,"name":"RLPItem","nameLocations":["5439:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"5439:7:21"},"referencedDeclaration":4478,"src":"5439:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"5438:20:21"},"returnParameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4845,"src":"5482:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4809,"name":"bool","nodeType":"ElementaryTypeName","src":"5482:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5481:6:21"},"scope":5209,"src":"5421:349:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4859,"nodeType":"Block","src":"5952:42:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4855,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"5984:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4854,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"5974:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$4478_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4853,"name":"readBool","nodeType":"Identifier","overloadedDeclarations":[4845,4860],"referencedDeclaration":4845,"src":"5965:8:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bool_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bool)"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4852,"id":4858,"nodeType":"Return","src":"5958:31:21"}]},"documentation":{"id":4846,"nodeType":"StructuredDocumentation","src":"5774:110:21","text":" Reads an RLP bool value into a bool.\n @param _in RLP bool value.\n @return Decoded bool."},"id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"readBool","nameLocation":"5896:8:21","nodeType":"FunctionDefinition","parameters":{"id":4849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4848,"mutability":"mutable","name":"_in","nameLocation":"5918:3:21","nodeType":"VariableDeclaration","scope":4860,"src":"5905:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4847,"name":"bytes","nodeType":"ElementaryTypeName","src":"5905:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5904:18:21"},"returnParameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4860,"src":"5946:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4850,"name":"bool","nodeType":"ElementaryTypeName","src":"5946:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5945:6:21"},"scope":5209,"src":"5887:107:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4898,"nodeType":"Block","src":"6196:173:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4869,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"6206:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6210:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"6206:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6220:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6206:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4879,"nodeType":"IfStatement","src":"6202:53:21","trueBody":{"id":4878,"nodeType":"Block","src":"6223:32:21","statements":[{"expression":{"arguments":[{"hexValue":"30","id":4875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6246:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6238:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4873,"name":"address","nodeType":"ElementaryTypeName","src":"6238:7:21","typeDescriptions":{}}},"id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6238:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4868,"id":4877,"nodeType":"Return","src":"6231:17:21"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4881,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"6269:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6273:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"6269:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:2:21","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"6269:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020616464726573732076616c75652e","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6287:28:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3c570d87b7de672f933cbe715f40a3d65ef8c8e2e231b1b150ebbdb2d252b9f","typeString":"literal_string \"Invalid RLP address value.\""},"value":"Invalid RLP address value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3c570d87b7de672f933cbe715f40a3d65ef8c8e2e231b1b150ebbdb2d252b9f","typeString":"literal_string \"Invalid RLP address value.\""}],"id":4880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6261:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6261:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4887,"nodeType":"ExpressionStatement","src":"6261:55:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4893,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"6358:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4892,"name":"readUint256","nodeType":"Identifier","overloadedDeclarations":[4788,4803],"referencedDeclaration":4788,"src":"6346:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6338:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4890,"name":"uint160","nodeType":"ElementaryTypeName","src":"6338:7:21","typeDescriptions":{}}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6330:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4888,"name":"address","nodeType":"ElementaryTypeName","src":"6330:7:21","typeDescriptions":{}}},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6330:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4868,"id":4897,"nodeType":"Return","src":"6323:41:21"}]},"documentation":{"id":4861,"nodeType":"StructuredDocumentation","src":"5998:122:21","text":" Reads an RLP address value into a address.\n @param _in RLP address value.\n @return Decoded address."},"id":4899,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"6132:11:21","nodeType":"FunctionDefinition","parameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"_in","nameLocation":"6159:3:21","nodeType":"VariableDeclaration","scope":4899,"src":"6144:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4863,"nodeType":"UserDefinedTypeName","pathNode":{"id":4862,"name":"RLPItem","nameLocations":["6144:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"6144:7:21"},"referencedDeclaration":4478,"src":"6144:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"6143:20:21"},"returnParameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4899,"src":"6187:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4866,"name":"address","nodeType":"ElementaryTypeName","src":"6187:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6186:9:21"},"scope":5209,"src":"6123:246:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"6569:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":4909,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4902,"src":"6604:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4908,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"6594:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$4478_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6594:14:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4907,"name":"readAddress","nodeType":"Identifier","overloadedDeclarations":[4899,4914],"referencedDeclaration":4899,"src":"6582:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_address_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (address)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4906,"id":4912,"nodeType":"Return","src":"6575:34:21"}]},"documentation":{"id":4900,"nodeType":"StructuredDocumentation","src":"6373:122:21","text":" Reads an RLP address value into a address.\n @param _in RLP address value.\n @return Decoded address."},"id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"6507:11:21","nodeType":"FunctionDefinition","parameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"_in","nameLocation":"6532:3:21","nodeType":"VariableDeclaration","scope":4914,"src":"6519:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4901,"name":"bytes","nodeType":"ElementaryTypeName","src":"6519:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6518:18:21"},"returnParameters":{"id":4906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"6560:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4904,"name":"address","nodeType":"ElementaryTypeName","src":"6560:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6559:9:21"},"scope":5209,"src":"6498:116:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4927,"nodeType":"Block","src":"6812:28:21","statements":[{"expression":{"arguments":[{"id":4924,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"6831:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":4923,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[5190,5208],"referencedDeclaration":5208,"src":"6825:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$4478_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6825:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4922,"id":4926,"nodeType":"Return","src":"6818:17:21"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"6618:112:21","text":" Reads the raw bytes of an RLP item.\n @param _in RLP item to read.\n @return Raw RLP bytes."},"id":4928,"implemented":true,"kind":"function","modifiers":[],"name":"readRawBytes","nameLocation":"6742:12:21","nodeType":"FunctionDefinition","parameters":{"id":4919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4918,"mutability":"mutable","name":"_in","nameLocation":"6770:3:21","nodeType":"VariableDeclaration","scope":4928,"src":"6755:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4917,"nodeType":"UserDefinedTypeName","pathNode":{"id":4916,"name":"RLPItem","nameLocations":["6755:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"6755:7:21"},"referencedDeclaration":4478,"src":"6755:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"6754:20:21"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4928,"src":"6798:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4920,"name":"bytes","nodeType":"ElementaryTypeName","src":"6798:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6797:14:21"},"scope":5209,"src":"6733:107:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5106,"nodeType":"Block","src":"7278:1738:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4943,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7292:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7296:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"7292:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7305:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7292:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"524c50206974656d2063616e6e6f74206265206e756c6c2e","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7308:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","typeString":"literal_string \"RLP item cannot be null.\""},"value":"RLP item cannot be null."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","typeString":"literal_string \"RLP item cannot be null.\""}],"id":4942,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7284:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4949,"nodeType":"ExpressionStatement","src":"7284:51:21"},{"assignments":[4951],"declarations":[{"constant":false,"id":4951,"mutability":"mutable","name":"ptr","nameLocation":"7350:3:21","nodeType":"VariableDeclaration","scope":5106,"src":"7342:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4950,"name":"uint256","nodeType":"ElementaryTypeName","src":"7342:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4954,"initialValue":{"expression":{"id":4952,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7356:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7360:3:21","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":4477,"src":"7356:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7342:21:21"},{"assignments":[4956],"declarations":[{"constant":false,"id":4956,"mutability":"mutable","name":"prefix","nameLocation":"7377:6:21","nodeType":"VariableDeclaration","scope":5106,"src":"7369:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"7369:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4957,"nodeType":"VariableDeclarationStatement","src":"7369:14:21"},{"AST":{"nodeType":"YulBlock","src":"7398:43:21","statements":[{"nodeType":"YulAssignment","src":"7406:29:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7421:1:21","type":"","value":"0"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7430:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7424:5:21"},"nodeType":"YulFunctionCall","src":"7424:10:21"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"7416:4:21"},"nodeType":"YulFunctionCall","src":"7416:19:21"},"variableNames":[{"name":"prefix","nodeType":"YulIdentifier","src":"7406:6:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4956,"isOffset":false,"isSlot":false,"src":"7406:6:21","valueSize":1},{"declaration":4951,"isOffset":false,"isSlot":false,"src":"7430:3:21","valueSize":1}],"id":4958,"nodeType":"InlineAssembly","src":"7389:52:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"7451:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30783766","id":4960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7460:4:21","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"0x7f"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7467:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7460:8:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}},"src":"7451:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4971,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"7554:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30786237","id":4972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7563:4:21","typeDescriptions":{"typeIdentifier":"t_rational_183_by_1","typeString":"int_const 183"},"value":"0xb7"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7570:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7563:8:21","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"}},"src":"7554:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4997,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"7818:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"id":5000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30786266","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:4:21","typeDescriptions":{"typeIdentifier":"t_rational_191_by_1","typeString":"int_const 191"},"value":"0xbf"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7834:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7827:8:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}},"src":"7818:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5039,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"8300:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30786637","id":5040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8309:4:21","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"0xf7"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8316:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8309:8:21","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"}},"src":"8300:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5101,"nodeType":"Block","src":"8558:454:21","statements":[{"assignments":[5066],"declarations":[{"constant":false,"id":5066,"mutability":"mutable","name":"lenOfListLen","nameLocation":"8594:12:21","nodeType":"VariableDeclaration","scope":5101,"src":"8586:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5070,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5067,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"8609:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786637","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8618:4:21","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"0xf7"},"src":"8609:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8586:36:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5072,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"8639:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":5073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8643:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"8639:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5074,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"8652:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8639:25:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e67206c697374206c656e6774682e","id":5076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8666:31:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","typeString":"literal_string \"Invalid RLP long list length.\""},"value":"Invalid RLP long list length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","typeString":"literal_string \"Invalid RLP long list length.\""}],"id":5071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8631:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8631:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5078,"nodeType":"ExpressionStatement","src":"8631:67:21"},{"assignments":[5080],"declarations":[{"constant":false,"id":5080,"mutability":"mutable","name":"listLen","nameLocation":"8715:7:21","nodeType":"VariableDeclaration","scope":5101,"src":"8707:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"8707:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5081,"nodeType":"VariableDeclarationStatement","src":"8707:15:21"},{"AST":{"nodeType":"YulBlock","src":"8739:122:21","statements":[{"nodeType":"YulAssignment","src":"8786:67:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8811:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8816:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8807:3:21"},"nodeType":"YulFunctionCall","src":"8807:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8801:5:21"},"nodeType":"YulFunctionCall","src":"8801:18:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8825:3:21","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8834:2:21","type":"","value":"32"},{"name":"lenOfListLen","nodeType":"YulIdentifier","src":"8838:12:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8830:3:21"},"nodeType":"YulFunctionCall","src":"8830:21:21"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8821:3:21"},"nodeType":"YulFunctionCall","src":"8821:31:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8797:3:21"},"nodeType":"YulFunctionCall","src":"8797:56:21"},"variableNames":[{"name":"listLen","nodeType":"YulIdentifier","src":"8786:7:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5066,"isOffset":false,"isSlot":false,"src":"8838:12:21","valueSize":1},{"declaration":5080,"isOffset":false,"isSlot":false,"src":"8786:7:21","valueSize":1},{"declaration":4951,"isOffset":false,"isSlot":false,"src":"8811:3:21","valueSize":1}],"id":5082,"nodeType":"InlineAssembly","src":"8730:131:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5084,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"8877:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":5085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8881:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"8877:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"8890:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5087,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"8905:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8890:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8877:35:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e67206c6973742e","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8914:24:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","typeString":"literal_string \"Invalid RLP long list.\""},"value":"Invalid RLP long list."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","typeString":"literal_string \"Invalid RLP long list.\""}],"id":5083,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8869:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5092,"nodeType":"ExpressionStatement","src":"8869:70:21"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5094,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"8960:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8956:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5096,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"8974:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5097,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8983:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8995:9:21","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":4472,"src":"8983:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}}],"id":5099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8955:50:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":4941,"id":5100,"nodeType":"Return","src":"8948:57:21"}]},"id":5102,"nodeType":"IfStatement","src":"8296:716:21","trueBody":{"id":5064,"nodeType":"Block","src":"8319:233:21","statements":[{"assignments":[5045],"declarations":[{"constant":false,"id":5045,"mutability":"mutable","name":"listLen","nameLocation":"8406:7:21","nodeType":"VariableDeclaration","scope":5064,"src":"8398:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"8398:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5049,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5046,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"8416:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786330","id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8425:4:21","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"0xc0"},"src":"8416:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8398:31:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5051,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"8446:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":5052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8450:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"8446:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5053,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"8459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8446:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502073686f7274206c6973742e","id":5055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8468:25:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","typeString":"literal_string \"Invalid RLP short list.\""},"value":"Invalid RLP short list."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","typeString":"literal_string \"Invalid RLP short list.\""}],"id":5050,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8438:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5057,"nodeType":"ExpressionStatement","src":"8438:56:21"},{"expression":{"components":[{"hexValue":"31","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8511:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":5059,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"8514:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5060,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8523:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8535:9:21","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":4472,"src":"8523:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}}],"id":5062,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8510:35:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(int_const 1,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":4941,"id":5063,"nodeType":"Return","src":"8503:42:21"}]}},"id":5103,"nodeType":"IfStatement","src":"7814:1198:21","trueBody":{"id":5038,"nodeType":"Block","src":"7837:453:21","statements":[{"assignments":[5003],"declarations":[{"constant":false,"id":5003,"mutability":"mutable","name":"lenOfStrLen","nameLocation":"7875:11:21","nodeType":"VariableDeclaration","scope":5038,"src":"7867:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5002,"name":"uint256","nodeType":"ElementaryTypeName","src":"7867:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5007,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"7889:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786237","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7898:4:21","typeDescriptions":{"typeIdentifier":"t_rational_183_by_1","typeString":"int_const 183"},"value":"0xb7"},"src":"7889:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7867:35:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5009,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7919:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":5010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7923:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"7919:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5011,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"7932:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7919:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7945:33:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","typeString":"literal_string \"Invalid RLP long string length.\""},"value":"Invalid RLP long string length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","typeString":"literal_string \"Invalid RLP long string length.\""}],"id":5008,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7911:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7911:68:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5015,"nodeType":"ExpressionStatement","src":"7911:68:21"},{"assignments":[5017],"declarations":[{"constant":false,"id":5017,"mutability":"mutable","name":"strLen","nameLocation":"7996:6:21","nodeType":"VariableDeclaration","scope":5038,"src":"7988:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5016,"name":"uint256","nodeType":"ElementaryTypeName","src":"7988:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5018,"nodeType":"VariableDeclarationStatement","src":"7988:14:21"},{"AST":{"nodeType":"YulBlock","src":"8019:122:21","statements":[{"nodeType":"YulAssignment","src":"8068:65:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8092:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"8097:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8088:3:21"},"nodeType":"YulFunctionCall","src":"8088:11:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8082:5:21"},"nodeType":"YulFunctionCall","src":"8082:18:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8106:3:21","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8115:2:21","type":"","value":"32"},{"name":"lenOfStrLen","nodeType":"YulIdentifier","src":"8119:11:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8111:3:21"},"nodeType":"YulFunctionCall","src":"8111:20:21"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8102:3:21"},"nodeType":"YulFunctionCall","src":"8102:30:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8078:3:21"},"nodeType":"YulFunctionCall","src":"8078:55:21"},"variableNames":[{"name":"strLen","nodeType":"YulIdentifier","src":"8068:6:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5003,"isOffset":false,"isSlot":false,"src":"8119:11:21","valueSize":1},{"declaration":4951,"isOffset":false,"isSlot":false,"src":"8092:3:21","valueSize":1},{"declaration":5017,"isOffset":false,"isSlot":false,"src":"8068:6:21","valueSize":1}],"id":5019,"nodeType":"InlineAssembly","src":"8010:131:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5021,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"8157:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":5022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8161:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"8157:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5023,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"8170:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5024,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"8184:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8170:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8157:33:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e672e","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8192:26:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","typeString":"literal_string \"Invalid RLP long string.\""},"value":"Invalid RLP long string."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","typeString":"literal_string \"Invalid RLP long string.\""}],"id":5020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8149:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:70:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5029,"nodeType":"ExpressionStatement","src":"8149:70:21"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5031,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5003,"src":"8240:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8236:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5033,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"8253:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5034,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"8261:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8273:9:21","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"8261:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}}],"id":5036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8235:48:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":4941,"id":5037,"nodeType":"Return","src":"8228:55:21"}]}},"id":5104,"nodeType":"IfStatement","src":"7550:1462:21","trueBody":{"id":4996,"nodeType":"Block","src":"7573:235:21","statements":[{"assignments":[4977],"declarations":[{"constant":false,"id":4977,"mutability":"mutable","name":"strLen","nameLocation":"7663:6:21","nodeType":"VariableDeclaration","scope":4996,"src":"7655:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4976,"name":"uint256","nodeType":"ElementaryTypeName","src":"7655:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4981,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4978,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"7672:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30783830","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7681:4:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"7672:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7655:30:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4983,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"7702:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":4984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7706:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"7702:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4985,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"7715:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7702:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502073686f727420737472696e672e","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7723:27:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","typeString":"literal_string \"Invalid RLP short string.\""},"value":"Invalid RLP short string."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","typeString":"literal_string \"Invalid RLP short string.\""}],"id":4982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7694:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7694:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4989,"nodeType":"ExpressionStatement","src":"7694:57:21"},{"expression":{"components":[{"hexValue":"31","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7768:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":4991,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"7771:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4992,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"7779:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7791:9:21","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"7779:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}}],"id":4994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7767:34:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_uint256_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(int_const 1,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":4941,"id":4995,"nodeType":"Return","src":"7760:41:21"}]}},"id":5105,"nodeType":"IfStatement","src":"7447:1565:21","trueBody":{"id":4970,"nodeType":"Block","src":"7470:74:21","statements":[{"expression":{"components":[{"hexValue":"30","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7509:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"31","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7512:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"expression":{"id":4966,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"7515:11:21","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$4473_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":4967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7527:9:21","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":4471,"src":"7515:21:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}}],"id":4968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7508:29:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_1_by_1_$_t_enum$_RLPItemType_$4473_$","typeString":"tuple(int_const 0,int_const 1,enum RLPReader.RLPItemType)"}},"functionReturnParameters":4941,"id":4969,"nodeType":"Return","src":"7501:36:21"}]}}]},"documentation":{"id":4929,"nodeType":"StructuredDocumentation","src":"6921:220:21","text":" Decodes the length of an RLP item.\n @param _in RLP item to decode.\n @return Offset of the encoded data.\n @return Length of the encoded data.\n @return RLP item type (LIST_ITEM or DATA_ITEM)."},"id":5107,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeLength","nameLocation":"7153:13:21","nodeType":"FunctionDefinition","parameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"_in","nameLocation":"7182:3:21","nodeType":"VariableDeclaration","scope":5107,"src":"7167:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":4931,"nodeType":"UserDefinedTypeName","pathNode":{"id":4930,"name":"RLPItem","nameLocations":["7167:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"7167:7:21"},"referencedDeclaration":4478,"src":"7167:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"7166:20:21"},"returnParameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"7228:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4934,"name":"uint256","nodeType":"ElementaryTypeName","src":"7228:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"7243:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"7243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5107,"src":"7258:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":4939,"nodeType":"UserDefinedTypeName","pathNode":{"id":4938,"name":"RLPItemType","nameLocations":["7258:11:21"],"nodeType":"IdentifierPath","referencedDeclaration":4473,"src":"7258:11:21"},"referencedDeclaration":4473,"src":"7258:11:21","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$4473","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"src":"7220:55:21"},"scope":5209,"src":"7144:1872:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5189,"nodeType":"Block","src":"9370:674:21","statements":[{"assignments":[5120],"declarations":[{"constant":false,"id":5120,"mutability":"mutable","name":"out","nameLocation":"9389:3:21","nodeType":"VariableDeclaration","scope":5189,"src":"9376:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5119,"name":"bytes","nodeType":"ElementaryTypeName","src":"9376:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5125,"initialValue":{"arguments":[{"id":5123,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"9405:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9395:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5121,"name":"bytes","nodeType":"ElementaryTypeName","src":"9399:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9395:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9376:37:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5126,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"9423:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9427:6:21","memberName":"length","nodeType":"MemberAccess","src":"9423:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9437:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9423:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5133,"nodeType":"IfStatement","src":"9419:46:21","trueBody":{"id":5132,"nodeType":"Block","src":"9440:25:21","statements":[{"expression":{"id":5130,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"9455:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5118,"id":5131,"nodeType":"Return","src":"9448:10:21"}]}},{"assignments":[5135],"declarations":[{"constant":false,"id":5135,"mutability":"mutable","name":"src","nameLocation":"9479:3:21","nodeType":"VariableDeclaration","scope":5189,"src":"9471:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5134,"name":"uint256","nodeType":"ElementaryTypeName","src":"9471:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5139,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5136,"name":"_src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"9485:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5137,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"9492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9485:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9471:28:21"},{"assignments":[5141],"declarations":[{"constant":false,"id":5141,"mutability":"mutable","name":"dest","nameLocation":"9513:4:21","nodeType":"VariableDeclaration","scope":5189,"src":"9505:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5140,"name":"uint256","nodeType":"ElementaryTypeName","src":"9505:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5142,"nodeType":"VariableDeclarationStatement","src":"9505:12:21"},{"AST":{"nodeType":"YulBlock","src":"9532:34:21","statements":[{"nodeType":"YulAssignment","src":"9540:20:21","value":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"9552:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"9557:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9548:3:21"},"nodeType":"YulFunctionCall","src":"9548:12:21"},"variableNames":[{"name":"dest","nodeType":"YulIdentifier","src":"9540:4:21"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5141,"isOffset":false,"isSlot":false,"src":"9540:4:21","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"9552:3:21","valueSize":1}],"id":5143,"nodeType":"InlineAssembly","src":"9523:43:21"},{"body":{"id":5166,"nodeType":"Block","src":"9663:141:21","statements":[{"AST":{"nodeType":"YulBlock","src":"9680:42:21","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9697:4:21"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9709:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9703:5:21"},"nodeType":"YulFunctionCall","src":"9703:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9690:6:21"},"nodeType":"YulFunctionCall","src":"9690:24:21"},"nodeType":"YulExpressionStatement","src":"9690:24:21"}]},"evmVersion":"london","externalReferences":[{"declaration":5141,"isOffset":false,"isSlot":false,"src":"9697:4:21","valueSize":1},{"declaration":5135,"isOffset":false,"isSlot":false,"src":"9709:3:21","valueSize":1}],"id":5153,"nodeType":"InlineAssembly","src":"9671:51:21"},{"expression":{"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5154,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"9730:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9737:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9730:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5157,"nodeType":"ExpressionStatement","src":"9730:9:21"},{"expression":{"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5158,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"9747:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9755:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9747:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5161,"nodeType":"ExpressionStatement","src":"9747:10:21"},{"id":5165,"nodeType":"UncheckedBlock","src":"9766:32:21","statements":[{"expression":{"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9786:3:21","subExpression":{"id":5162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"9788:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5164,"nodeType":"ExpressionStatement","src":"9786:3:21"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5148,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"9643:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5149,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"9647:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3332","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9647:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9643:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5167,"initializationExpression":{"assignments":[5145],"declarations":[{"constant":false,"id":5145,"mutability":"mutable","name":"i","nameLocation":"9636:1:21","nodeType":"VariableDeclaration","scope":5167,"src":"9628:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5147,"initialValue":{"hexValue":"30","id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9640:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9628:13:21"},"nodeType":"ForStatement","src":"9623:181:21"},{"assignments":[5169],"declarations":[{"constant":false,"id":5169,"mutability":"mutable","name":"mask","nameLocation":"9855:4:21","nodeType":"VariableDeclaration","scope":5189,"src":"9847:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"9847:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5170,"nodeType":"VariableDeclarationStatement","src":"9847:12:21"},{"id":5185,"nodeType":"UncheckedBlock","src":"9865:62:21","statements":[{"expression":{"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5171,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"9883:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":5172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9890:3:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9896:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5174,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"9902:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9912:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9902:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9901:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9896:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9895:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9890:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9919:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9890:30:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5184,"nodeType":"ExpressionStatement","src":"9883:37:21"}]},{"AST":{"nodeType":"YulBlock","src":"9942:82:21","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9957:4:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9976:3:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9970:5:21"},"nodeType":"YulFunctionCall","src":"9970:10:21"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9986:4:21"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9982:3:21"},"nodeType":"YulFunctionCall","src":"9982:9:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9966:3:21"},"nodeType":"YulFunctionCall","src":"9966:26:21"},{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"10004:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9998:5:21"},"nodeType":"YulFunctionCall","src":"9998:11:21"},{"name":"mask","nodeType":"YulIdentifier","src":"10011:4:21"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9994:3:21"},"nodeType":"YulFunctionCall","src":"9994:22:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9963:2:21"},"nodeType":"YulFunctionCall","src":"9963:54:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9950:6:21"},"nodeType":"YulFunctionCall","src":"9950:68:21"},"nodeType":"YulExpressionStatement","src":"9950:68:21"}]},"evmVersion":"london","externalReferences":[{"declaration":5141,"isOffset":false,"isSlot":false,"src":"10004:4:21","valueSize":1},{"declaration":5141,"isOffset":false,"isSlot":false,"src":"9957:4:21","valueSize":1},{"declaration":5169,"isOffset":false,"isSlot":false,"src":"10011:4:21","valueSize":1},{"declaration":5169,"isOffset":false,"isSlot":false,"src":"9986:4:21","valueSize":1},{"declaration":5135,"isOffset":false,"isSlot":false,"src":"9976:3:21","valueSize":1}],"id":5186,"nodeType":"InlineAssembly","src":"9933:91:21"},{"expression":{"id":5187,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"10036:3:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5118,"id":5188,"nodeType":"Return","src":"10029:10:21"}]},"documentation":{"id":5108,"nodeType":"StructuredDocumentation","src":"9020:232:21","text":" Copies the bytes from a memory location.\n @param _src Pointer to the location to read from.\n @param _offset Offset to start reading from.\n @param _length Number of bytes to read.\n @return Copied bytes."},"id":5190,"implemented":true,"kind":"function","modifiers":[],"name":"_copy","nameLocation":"9264:5:21","nodeType":"FunctionDefinition","parameters":{"id":5115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5110,"mutability":"mutable","name":"_src","nameLocation":"9283:4:21","nodeType":"VariableDeclaration","scope":5190,"src":"9275:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"9275:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5112,"mutability":"mutable","name":"_offset","nameLocation":"9301:7:21","nodeType":"VariableDeclaration","scope":5190,"src":"9293:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5111,"name":"uint256","nodeType":"ElementaryTypeName","src":"9293:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5114,"mutability":"mutable","name":"_length","nameLocation":"9322:7:21","nodeType":"VariableDeclaration","scope":5190,"src":"9314:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9314:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9269:64:21"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5190,"src":"9356:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5116,"name":"bytes","nodeType":"ElementaryTypeName","src":"9356:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9355:14:21"},"scope":5209,"src":"9255:789:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5207,"nodeType":"Block","src":"10228:47:21","statements":[{"expression":{"arguments":[{"expression":{"id":5200,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"10247:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":5201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10251:3:21","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":4477,"src":"10247:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10256:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":5203,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"10259:3:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":5204,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10263:6:21","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4475,"src":"10259:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5199,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[5190,5208],"referencedDeclaration":5190,"src":"10241:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes memory)"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10241:29:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5198,"id":5206,"nodeType":"Return","src":"10234:36:21"}]},"documentation":{"id":5191,"nodeType":"StructuredDocumentation","src":"10048:106:21","text":" Copies an RLP item into bytes.\n @param _in RLP item to copy.\n @return Copied bytes."},"id":5208,"implemented":true,"kind":"function","modifiers":[],"name":"_copy","nameLocation":"10166:5:21","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5194,"mutability":"mutable","name":"_in","nameLocation":"10187:3:21","nodeType":"VariableDeclaration","scope":5208,"src":"10172:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":5193,"nodeType":"UserDefinedTypeName","pathNode":{"id":5192,"name":"RLPItem","nameLocations":["10172:7:21"],"nodeType":"IdentifierPath","referencedDeclaration":4478,"src":"10172:7:21"},"referencedDeclaration":4478,"src":"10172:7:21","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$4478_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"10171:20:21"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5208,"src":"10214:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5196,"name":"bytes","nodeType":"ElementaryTypeName","src":"10214:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10213:14:21"},"scope":5209,"src":"10157:118:21","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5210,"src":"242:10035:21","usedErrors":[]}],"src":"46:10232:21"},"id":21},"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol","exportedSymbols":{"MerkleTrie":[4361],"SecureMerkleTrie":[5288]},"id":5289,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5211,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:22"},{"absolutePath":"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol","file":"./MerkleTrie.sol","id":5213,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5289,"sourceUnit":4362,"src":"93:44:22","symbolAliases":[{"foreign":{"id":5212,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"101:10:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SecureMerkleTrie","contractDependencies":[],"contractKind":"library","documentation":{"id":5214,"nodeType":"StructuredDocumentation","src":"139:188:22","text":" @title SecureMerkleTrie\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_SecureMerkleTrie.sol"},"fullyImplemented":true,"id":5288,"linearizedBaseContracts":[5288],"name":"SecureMerkleTrie","nameLocation":"336:16:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":5242,"nodeType":"Block","src":"1276:121:22","statements":[{"assignments":[5229],"declarations":[{"constant":false,"id":5229,"mutability":"mutable","name":"key","nameLocation":"1295:3:22","nodeType":"VariableDeclaration","scope":5242,"src":"1282:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5228,"name":"bytes","nodeType":"ElementaryTypeName","src":"1282:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5233,"initialValue":{"arguments":[{"id":5231,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5217,"src":"1315:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5230,"name":"_getSecureKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"1301:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1282:38:22"},{"expression":{"arguments":[{"id":5236,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"1365:3:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5237,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5219,"src":"1370:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5238,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"1378:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5239,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"1386:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5234,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"1333:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTrie_$4361_$","typeString":"type(library MerkleTrie)"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1344:20:22","memberName":"verifyInclusionProof","nodeType":"MemberAccess","referencedDeclaration":3772,"src":"1333:31:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory,bytes memory,bytes32) pure returns (bool)"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1333:59:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5227,"id":5241,"nodeType":"Return","src":"1326:66:22"}]},"documentation":{"id":5215,"nodeType":"StructuredDocumentation","src":"437:671:22","text":" @notice Verifies a proof that a given key/value pair is present in the\n Merkle trie.\n @param _key Key of the node to search for, as a hex string.\n @param _value Value of the node to search for, as a hex string.\n @param _proof Merkle trie inclusion proof for the desired node. Unlike\n traditional Merkle trees, this proof is executed top-down and consists\n of a list of RLP-encoded nodes that make a path down to the target node.\n @param _root Known root of the Merkle trie. Used to verify that the\n included proof is correctly constructed.\n @return _verified `true` if the k/v pair exists in the trie, `false` otherwise."},"id":5243,"implemented":true,"kind":"function","modifiers":[],"name":"verifyInclusionProof","nameLocation":"1120:20:22","nodeType":"FunctionDefinition","parameters":{"id":5224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5217,"mutability":"mutable","name":"_key","nameLocation":"1159:4:22","nodeType":"VariableDeclaration","scope":5243,"src":"1146:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5216,"name":"bytes","nodeType":"ElementaryTypeName","src":"1146:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5219,"mutability":"mutable","name":"_value","nameLocation":"1182:6:22","nodeType":"VariableDeclaration","scope":5243,"src":"1169:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5218,"name":"bytes","nodeType":"ElementaryTypeName","src":"1169:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5221,"mutability":"mutable","name":"_proof","nameLocation":"1207:6:22","nodeType":"VariableDeclaration","scope":5243,"src":"1194:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5220,"name":"bytes","nodeType":"ElementaryTypeName","src":"1194:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5223,"mutability":"mutable","name":"_root","nameLocation":"1227:5:22","nodeType":"VariableDeclaration","scope":5243,"src":"1219:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1219:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1140:96:22"},"returnParameters":{"id":5227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5226,"mutability":"mutable","name":"_verified","nameLocation":"1265:9:22","nodeType":"VariableDeclaration","scope":5243,"src":"1260:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5225,"name":"bool","nodeType":"ElementaryTypeName","src":"1260:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1259:16:22"},"scope":5288,"src":"1111:286:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5270,"nodeType":"Block","src":"1879:96:22","statements":[{"assignments":[5258],"declarations":[{"constant":false,"id":5258,"mutability":"mutable","name":"key","nameLocation":"1898:3:22","nodeType":"VariableDeclaration","scope":5270,"src":"1885:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5257,"name":"bytes","nodeType":"ElementaryTypeName","src":"1885:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5262,"initialValue":{"arguments":[{"id":5260,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"1918:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5259,"name":"_getSecureKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5287,"src":"1904:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":5261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1885:38:22"},{"expression":{"arguments":[{"id":5265,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"1951:3:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5266,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"1956:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5267,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"1964:5:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5263,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4361,"src":"1936:10:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTrie_$4361_$","typeString":"type(library MerkleTrie)"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1947:3:22","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3842,"src":"1936:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes32) pure returns (bool,bytes memory)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1936:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5256,"id":5269,"nodeType":"Return","src":"1929:41:22"}]},"documentation":{"id":5244,"nodeType":"StructuredDocumentation","src":"1401:333:22","text":" @notice Retrieves the value associated with a given key.\n @param _key Key to search for, as hex bytes.\n @param _proof Merkle trie inclusion proof for the key.\n @param _root Known root of the Merkle trie.\n @return _exists Whether or not the key exists.\n @return _value Value of the key if it exists."},"id":5271,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"1746:3:22","nodeType":"FunctionDefinition","parameters":{"id":5251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"_key","nameLocation":"1768:4:22","nodeType":"VariableDeclaration","scope":5271,"src":"1755:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5245,"name":"bytes","nodeType":"ElementaryTypeName","src":"1755:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5248,"mutability":"mutable","name":"_proof","nameLocation":"1791:6:22","nodeType":"VariableDeclaration","scope":5271,"src":"1778:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5247,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5250,"mutability":"mutable","name":"_root","nameLocation":"1811:5:22","nodeType":"VariableDeclaration","scope":5271,"src":"1803:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1749:71:22"},"returnParameters":{"id":5256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"_exists","nameLocation":"1849:7:22","nodeType":"VariableDeclaration","scope":5271,"src":"1844:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5252,"name":"bool","nodeType":"ElementaryTypeName","src":"1844:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5255,"mutability":"mutable","name":"_value","nameLocation":"1871:6:22","nodeType":"VariableDeclaration","scope":5271,"src":"1858:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5254,"name":"bytes","nodeType":"ElementaryTypeName","src":"1858:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1843:35:22"},"scope":5288,"src":"1737:238:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5286,"nodeType":"Block","src":"2302:51:22","statements":[{"expression":{"arguments":[{"arguments":[{"id":5282,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5274,"src":"2342:4:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5281,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2332:9:22","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":5279,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2315:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2319:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"2315:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2315:33:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5278,"id":5285,"nodeType":"Return","src":"2308:40:22"}]},"documentation":{"id":5272,"nodeType":"StructuredDocumentation","src":"2056:154:22","text":" Computes the secure counterpart to a key.\n @param _key Key to get a secure key from.\n @return _secureKey Secure version of the key."},"id":5287,"implemented":true,"kind":"function","modifiers":[],"name":"_getSecureKey","nameLocation":"2222:13:22","nodeType":"FunctionDefinition","parameters":{"id":5275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5274,"mutability":"mutable","name":"_key","nameLocation":"2249:4:22","nodeType":"VariableDeclaration","scope":5287,"src":"2236:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5273,"name":"bytes","nodeType":"ElementaryTypeName","src":"2236:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2235:19:22"},"returnParameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"_secureKey","nameLocation":"2290:10:22","nodeType":"VariableDeclaration","scope":5287,"src":"2277:23:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5276,"name":"bytes","nodeType":"ElementaryTypeName","src":"2277:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2276:25:22"},"scope":5288,"src":"2213:140:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5289,"src":"328:2027:22","usedErrors":[]}],"src":"46:2310:22"},"id":22},"contracts/messaging/interfaces/IConnector.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/IConnector.sol","exportedSymbols":{"IConnector":[5324],"IProposedOwnable":[5753]},"id":5325,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5290,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:23"},{"absolutePath":"contracts/shared/interfaces/IProposedOwnable.sol","file":"../../shared/interfaces/IProposedOwnable.sol","id":5292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5325,"sourceUnit":5754,"src":"71:78:23","symbolAliases":[{"foreign":{"id":5291,"name":"IProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"79:16:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5294,"name":"IProposedOwnable","nameLocations":["1907:16:23"],"nodeType":"IdentifierPath","referencedDeclaration":5753,"src":"1907:16:23"},"id":5295,"nodeType":"InheritanceSpecifier","src":"1907:16:23"}],"canonicalName":"IConnector","contractDependencies":[],"contractKind":"interface","documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"151:1731:23","text":" @notice This interface is what the Connext contract will send and receive messages through.\n The messaging layer should conform to this interface, and should be interchangeable (i.e.\n could be Nomad or a generic AMB under the hood).\n @dev This uses the nomad format to ensure nomad can be added in as it comes back online.\n Flow from transfer from polygon to optimism:\n 1. User calls `xcall` with destination specified\n 2. This will swap in to the bridge assets\n 3. The swapped assets will get burned\n 4. The Connext contract will call `dispatch` on the messaging contract to add the transfer\n    to the root\n 5. [At some time interval] Relayers call `send` to send the current root from polygon to\n    mainnet. This is done on all \"spoke\" domains.\n 6. [At some time interval] Relayers call `propagate` [better name] on mainnet, this generates a new merkle\n    root from all of the AMBs\n    - This function must be able to read root data from all AMBs and aggregate them into a single merkle\n      tree root\n    - Will send the mixed root from all chains back through the respective AMBs to all other chains\n 7. AMB will call `update` to update the latest root on the messaging contract on spoke domains\n 8. [At any point] Relayers can call `proveAndProcess` to prove inclusion of dispatched message, and call\n    process on the `Connext` contract\n 9. Takes minted bridge tokens and credits the LP\n AMB requirements:\n - Access `msg.sender` both from mainnet -> spoke and vice versa\n - Ability to read *our root* from the AMB\n AMBs:\n - PoS bridge from polygon\n - arbitrum bridge\n - optimism bridge\n - gnosis chain\n - bsc (use multichain for messaging)"},"fullyImplemented":false,"id":5324,"linearizedBaseContracts":[5324,5753],"name":"IConnector","nameLocation":"1893:10:23","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5296,"nodeType":"StructuredDocumentation","src":"1966:266:23","text":" @notice Emitted whenever a message is successfully sent over an AMB\n @param data The contents of the message\n @param encodedData Data used to send the message; specific to connector\n @param caller Who called the function (sent the message)"},"eventSelector":"dcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077","id":5304,"name":"MessageSent","nameLocation":"2241:11:23","nodeType":"EventDefinition","parameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"2259:4:23","nodeType":"VariableDeclaration","scope":5304,"src":"2253:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5297,"name":"bytes","nodeType":"ElementaryTypeName","src":"2253:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5300,"indexed":false,"mutability":"mutable","name":"encodedData","nameLocation":"2271:11:23","nodeType":"VariableDeclaration","scope":5304,"src":"2265:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5299,"name":"bytes","nodeType":"ElementaryTypeName","src":"2265:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5302,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"2292:6:23","nodeType":"VariableDeclaration","scope":5304,"src":"2284:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5301,"name":"address","nodeType":"ElementaryTypeName","src":"2284:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2252:47:23"},"src":"2235:65:23"},{"anonymous":false,"documentation":{"id":5305,"nodeType":"StructuredDocumentation","src":"2304:174:23","text":" @notice Emitted whenever a message is successfully received over an AMB\n @param data The contents of the message\n @param caller Who called the function"},"eventSelector":"b3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced","id":5311,"name":"MessageProcessed","nameLocation":"2487:16:23","nodeType":"EventDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"2510:4:23","nodeType":"VariableDeclaration","scope":5311,"src":"2504:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5306,"name":"bytes","nodeType":"ElementaryTypeName","src":"2504:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5309,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"2524:6:23","nodeType":"VariableDeclaration","scope":5311,"src":"2516:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5308,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:28:23"},"src":"2481:51:23"},{"functionSelector":"4ff746f6","id":5316,"implemented":false,"kind":"function","modifiers":[],"name":"processMessage","nameLocation":"2588:14:23","nodeType":"FunctionDefinition","parameters":{"id":5314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5313,"mutability":"mutable","name":"_data","nameLocation":"2616:5:23","nodeType":"VariableDeclaration","scope":5316,"src":"2603:18:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5312,"name":"bytes","nodeType":"ElementaryTypeName","src":"2603:5:23","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2602:20:23"},"returnParameters":{"id":5315,"nodeType":"ParameterList","parameters":[],"src":"2631:0:23"},"scope":5324,"src":"2579:53:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"db1b7659","id":5323,"implemented":false,"kind":"function","modifiers":[],"name":"verifySender","nameLocation":"2645:12:23","nodeType":"FunctionDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"_expected","nameLocation":"2666:9:23","nodeType":"VariableDeclaration","scope":5323,"src":"2658:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5317,"name":"address","nodeType":"ElementaryTypeName","src":"2658:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2657:19:23"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5323,"src":"2695:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5320,"name":"bool","nodeType":"ElementaryTypeName","src":"2695:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2694:6:23"},"scope":5324,"src":"2636:65:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5325,"src":"1883:820:23","usedErrors":[]}],"src":"46:2658:23"},"id":23},"contracts/messaging/interfaces/IRootManager.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/IRootManager.sol","exportedSymbols":{"IRootManager":[5348]},"id":5349,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5326,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IRootManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5348,"linearizedBaseContracts":[5348],"name":"IRootManager","nameLocation":"81:12:24","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5327,"nodeType":"StructuredDocumentation","src":"98:203:24","text":" @notice This is called by relayers to generate + send the mixed root from mainnet via AMB to\n spoke domains.\n @dev This must read information for the root from the registered AMBs."},"functionSelector":"412e12db","id":5339,"implemented":false,"kind":"function","modifiers":[],"name":"propagate","nameLocation":"313:9:24","nodeType":"FunctionDefinition","parameters":{"id":5337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5330,"mutability":"mutable","name":"_connectors","nameLocation":"347:11:24","nodeType":"VariableDeclaration","scope":5339,"src":"328:30:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5328,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5329,"nodeType":"ArrayTypeName","src":"328:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5333,"mutability":"mutable","name":"_fees","nameLocation":"383:5:24","nodeType":"VariableDeclaration","scope":5339,"src":"364:24:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5331,"name":"uint256","nodeType":"ElementaryTypeName","src":"364:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5332,"nodeType":"ArrayTypeName","src":"364:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5336,"mutability":"mutable","name":"_encodedData","nameLocation":"409:12:24","nodeType":"VariableDeclaration","scope":5339,"src":"394:27:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":5334,"name":"bytes","nodeType":"ElementaryTypeName","src":"394:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":5335,"nodeType":"ArrayTypeName","src":"394:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"322:103:24"},"returnParameters":{"id":5338,"nodeType":"ParameterList","parameters":[],"src":"442:0:24"},"scope":5348,"src":"304:139:24","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":5340,"nodeType":"StructuredDocumentation","src":"447:198:24","text":" @notice Called by the connectors for various domains on the hub to aggregate their latest\n inbound root.\n @dev This must read information for the root from the registered AMBs"},"functionSelector":"8e7d93fa","id":5347,"implemented":false,"kind":"function","modifiers":[],"name":"aggregate","nameLocation":"657:9:24","nodeType":"FunctionDefinition","parameters":{"id":5345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5342,"mutability":"mutable","name":"_domain","nameLocation":"674:7:24","nodeType":"VariableDeclaration","scope":5347,"src":"667:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5341,"name":"uint32","nodeType":"ElementaryTypeName","src":"667:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":5344,"mutability":"mutable","name":"_outbound","nameLocation":"691:9:24","nodeType":"VariableDeclaration","scope":5347,"src":"683:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"683:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"666:35:24"},"returnParameters":{"id":5346,"nodeType":"ParameterList","parameters":[],"src":"710:0:24"},"scope":5348,"src":"648:63:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5349,"src":"71:642:24","usedErrors":[]}],"src":"46:668:24"},"id":24},"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol","exportedSymbols":{"ChainBatchHeader":[5361],"ChainInclusionProof":[5367],"IStateCommitmentChain":[5457],"L2MessageInclusionProof":[5380]},"id":5458,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5350,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:25"},{"canonicalName":"ChainBatchHeader","id":5361,"members":[{"constant":false,"id":5352,"mutability":"mutable","name":"batchIndex","nameLocation":"287:10:25","nodeType":"VariableDeclaration","scope":5361,"src":"279:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5354,"mutability":"mutable","name":"batchRoot","nameLocation":"309:9:25","nodeType":"VariableDeclaration","scope":5361,"src":"301:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"301:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5356,"mutability":"mutable","name":"batchSize","nameLocation":"330:9:25","nodeType":"VariableDeclaration","scope":5361,"src":"322:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5355,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5358,"mutability":"mutable","name":"prevTotalElements","nameLocation":"351:17:25","nodeType":"VariableDeclaration","scope":5361,"src":"343:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5357,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5360,"mutability":"mutable","name":"extraData","nameLocation":"378:9:25","nodeType":"VariableDeclaration","scope":5361,"src":"372:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5359,"name":"bytes","nodeType":"ElementaryTypeName","src":"372:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ChainBatchHeader","nameLocation":"258:16:25","nodeType":"StructDefinition","scope":5458,"src":"251:139:25","visibility":"public"},{"canonicalName":"ChainInclusionProof","id":5367,"members":[{"constant":false,"id":5363,"mutability":"mutable","name":"index","nameLocation":"611:5:25","nodeType":"VariableDeclaration","scope":5367,"src":"603:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5362,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5366,"mutability":"mutable","name":"siblings","nameLocation":"630:8:25","nodeType":"VariableDeclaration","scope":5367,"src":"620:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"620:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5365,"nodeType":"ArrayTypeName","src":"620:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"ChainInclusionProof","nameLocation":"579:19:25","nodeType":"StructDefinition","scope":5458,"src":"572:69:25","visibility":"public"},{"canonicalName":"L2MessageInclusionProof","id":5380,"members":[{"constant":false,"id":5369,"mutability":"mutable","name":"stateRoot","nameLocation":"874:9:25","nodeType":"VariableDeclaration","scope":5380,"src":"866:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5368,"name":"bytes32","nodeType":"ElementaryTypeName","src":"866:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5372,"mutability":"mutable","name":"stateRootBatchHeader","nameLocation":"904:20:25","nodeType":"VariableDeclaration","scope":5380,"src":"887:37:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_storage_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":5371,"nodeType":"UserDefinedTypeName","pathNode":{"id":5370,"name":"ChainBatchHeader","nameLocations":["887:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"887:16:25"},"referencedDeclaration":5361,"src":"887:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"},{"constant":false,"id":5375,"mutability":"mutable","name":"stateRootProof","nameLocation":"948:14:25","nodeType":"VariableDeclaration","scope":5380,"src":"928:34:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$5367_storage_ptr","typeString":"struct ChainInclusionProof"},"typeName":{"id":5374,"nodeType":"UserDefinedTypeName","pathNode":{"id":5373,"name":"ChainInclusionProof","nameLocations":["928:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":5367,"src":"928:19:25"},"referencedDeclaration":5367,"src":"928:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$5367_storage_ptr","typeString":"struct ChainInclusionProof"}},"visibility":"internal"},{"constant":false,"id":5377,"mutability":"mutable","name":"stateTrieWitness","nameLocation":"972:16:25","nodeType":"VariableDeclaration","scope":5380,"src":"966:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5376,"name":"bytes","nodeType":"ElementaryTypeName","src":"966:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5379,"mutability":"mutable","name":"storageTrieWitness","nameLocation":"998:18:25","nodeType":"VariableDeclaration","scope":5380,"src":"992:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5378,"name":"bytes","nodeType":"ElementaryTypeName","src":"992:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"L2MessageInclusionProof","nameLocation":"838:23:25","nodeType":"StructDefinition","scope":5458,"src":"831:188:25","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IStateCommitmentChain","contractDependencies":[],"contractKind":"interface","documentation":{"id":5381,"nodeType":"StructuredDocumentation","src":"1021:189:25","text":" @title IStateCommitmentChain\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/IStateCommitmentChain.sol"},"fullyImplemented":false,"id":5457,"linearizedBaseContracts":[5457],"name":"IStateCommitmentChain","nameLocation":"1221:21:25","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"16be4c5129a4e03cf3350262e181dc02ddfb4a6008d925368c0899fcd97ca9c5","id":5393,"name":"StateBatchAppended","nameLocation":"1297:18:25","nodeType":"EventDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"indexed":true,"mutability":"mutable","name":"_batchIndex","nameLocation":"1337:11:25","nodeType":"VariableDeclaration","scope":5393,"src":"1321:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"1321:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5385,"indexed":false,"mutability":"mutable","name":"_batchRoot","nameLocation":"1362:10:25","nodeType":"VariableDeclaration","scope":5393,"src":"1354:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1354:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5387,"indexed":false,"mutability":"mutable","name":"_batchSize","nameLocation":"1386:10:25","nodeType":"VariableDeclaration","scope":5393,"src":"1378:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5389,"indexed":false,"mutability":"mutable","name":"_prevTotalElements","nameLocation":"1410:18:25","nodeType":"VariableDeclaration","scope":5393,"src":"1402:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5391,"indexed":false,"mutability":"mutable","name":"_extraData","nameLocation":"1440:10:25","nodeType":"VariableDeclaration","scope":5393,"src":"1434:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5390,"name":"bytes","nodeType":"ElementaryTypeName","src":"1434:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1315:139:25"},"src":"1291:164:25"},{"anonymous":false,"eventSelector":"8747b69ce8fdb31c3b9b0a67bd8049ad8c1a69ea417b69b12174068abd9cbd64","id":5399,"name":"StateBatchDeleted","nameLocation":"1465:17:25","nodeType":"EventDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5395,"indexed":true,"mutability":"mutable","name":"_batchIndex","nameLocation":"1499:11:25","nodeType":"VariableDeclaration","scope":5399,"src":"1483:27:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5397,"indexed":false,"mutability":"mutable","name":"_batchRoot","nameLocation":"1520:10:25","nodeType":"VariableDeclaration","scope":5399,"src":"1512:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1512:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1482:49:25"},"src":"1459:73:25"},{"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"1610:118:25","text":" Retrieves the total number of elements submitted.\n @return _totalElements Total submitted elements."},"functionSelector":"7aa63a86","id":5405,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalElements","nameLocation":"1740:16:25","nodeType":"FunctionDefinition","parameters":{"id":5401,"nodeType":"ParameterList","parameters":[],"src":"1756:2:25"},"returnParameters":{"id":5404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5403,"mutability":"mutable","name":"_totalElements","nameLocation":"1790:14:25","nodeType":"VariableDeclaration","scope":5405,"src":"1782:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1782:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1781:24:25"},"scope":5457,"src":"1731:75:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"1810:115:25","text":" Retrieves the total number of batches submitted.\n @return _totalBatches Total submitted batches."},"functionSelector":"e561dddc","id":5411,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalBatches","nameLocation":"1937:15:25","nodeType":"FunctionDefinition","parameters":{"id":5407,"nodeType":"ParameterList","parameters":[],"src":"1952:2:25"},"returnParameters":{"id":5410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5409,"mutability":"mutable","name":"_totalBatches","nameLocation":"1986:13:25","nodeType":"VariableDeclaration","scope":5411,"src":"1978:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5408,"name":"uint256","nodeType":"ElementaryTypeName","src":"1978:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1977:23:25"},"scope":5457,"src":"1928:73:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5412,"nodeType":"StructuredDocumentation","src":"2005:153:25","text":" Retrieves the timestamp of the last batch submitted by the sequencer.\n @return _lastSequencerTimestamp Last sequencer batch timestamp."},"functionSelector":"7ad168a0","id":5417,"implemented":false,"kind":"function","modifiers":[],"name":"getLastSequencerTimestamp","nameLocation":"2170:25:25","nodeType":"FunctionDefinition","parameters":{"id":5413,"nodeType":"ParameterList","parameters":[],"src":"2195:2:25"},"returnParameters":{"id":5416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5415,"mutability":"mutable","name":"_lastSequencerTimestamp","nameLocation":"2229:23:25","nodeType":"VariableDeclaration","scope":5417,"src":"2221:31:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5414,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2220:33:25"},"scope":5457,"src":"2161:93:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5418,"nodeType":"StructuredDocumentation","src":"2258:189:25","text":" Appends a batch of state roots to the chain.\n @param _batch Batch of state roots.\n @param _shouldStartAtElement Index of the element at which this batch should start."},"functionSelector":"8ca5cbb9","id":5426,"implemented":false,"kind":"function","modifiers":[],"name":"appendStateBatch","nameLocation":"2459:16:25","nodeType":"FunctionDefinition","parameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"_batch","nameLocation":"2495:6:25","nodeType":"VariableDeclaration","scope":5426,"src":"2476:25:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":5419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2476:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":5420,"nodeType":"ArrayTypeName","src":"2476:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":5423,"mutability":"mutable","name":"_shouldStartAtElement","nameLocation":"2511:21:25","nodeType":"VariableDeclaration","scope":5426,"src":"2503:29:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2503:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2475:58:25"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[],"src":"2542:0:25"},"scope":5457,"src":"2450:93:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5427,"nodeType":"StructuredDocumentation","src":"2547:144:25","text":" Deletes all state roots after (and including) a given batch.\n @param _batchHeader Header of the batch to start deleting from."},"functionSelector":"b8e189ac","id":5433,"implemented":false,"kind":"function","modifiers":[],"name":"deleteStateBatch","nameLocation":"2703:16:25","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"_batchHeader","nameLocation":"2744:12:25","nodeType":"VariableDeclaration","scope":5433,"src":"2720:36:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_memory_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":5429,"nodeType":"UserDefinedTypeName","pathNode":{"id":5428,"name":"ChainBatchHeader","nameLocations":["2720:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"2720:16:25"},"referencedDeclaration":5361,"src":"2720:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"}],"src":"2719:38:25"},"returnParameters":{"id":5432,"nodeType":"ParameterList","parameters":[],"src":"2766:0:25"},"scope":5457,"src":"2694:73:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"2771:251:25","text":" Verifies a batch inclusion proof.\n @param _element Hash of the element to verify a proof for.\n @param _batchHeader Header of the batch in which the element was included.\n @param _proof Merkle inclusion proof for the element."},"functionSelector":"4d69ee57","id":5447,"implemented":false,"kind":"function","modifiers":[],"name":"verifyStateCommitment","nameLocation":"3034:21:25","nodeType":"FunctionDefinition","parameters":{"id":5443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"_element","nameLocation":"3069:8:25","nodeType":"VariableDeclaration","scope":5447,"src":"3061:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":5439,"mutability":"mutable","name":"_batchHeader","nameLocation":"3107:12:25","nodeType":"VariableDeclaration","scope":5447,"src":"3083:36:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_memory_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":5438,"nodeType":"UserDefinedTypeName","pathNode":{"id":5437,"name":"ChainBatchHeader","nameLocations":["3083:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"3083:16:25"},"referencedDeclaration":5361,"src":"3083:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"},{"constant":false,"id":5442,"mutability":"mutable","name":"_proof","nameLocation":"3152:6:25","nodeType":"VariableDeclaration","scope":5447,"src":"3125:33:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$5367_memory_ptr","typeString":"struct ChainInclusionProof"},"typeName":{"id":5441,"nodeType":"UserDefinedTypeName","pathNode":{"id":5440,"name":"ChainInclusionProof","nameLocations":["3125:19:25"],"nodeType":"IdentifierPath","referencedDeclaration":5367,"src":"3125:19:25"},"referencedDeclaration":5367,"src":"3125:19:25","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$5367_storage_ptr","typeString":"struct ChainInclusionProof"}},"visibility":"internal"}],"src":"3055:107:25"},"returnParameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"_verified","nameLocation":"3191:9:25","nodeType":"VariableDeclaration","scope":5447,"src":"3186:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5444,"name":"bool","nodeType":"ElementaryTypeName","src":"3186:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3185:16:25"},"scope":5457,"src":"3025:177:25","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5448,"nodeType":"StructuredDocumentation","src":"3206:218:25","text":" Checks whether a given batch is still inside its fraud proof window.\n @param _batchHeader Header of the batch to check.\n @return _inside Whether or not the batch is inside the fraud proof window."},"functionSelector":"9418bddd","id":5456,"implemented":false,"kind":"function","modifiers":[],"name":"insideFraudProofWindow","nameLocation":"3436:22:25","nodeType":"FunctionDefinition","parameters":{"id":5452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5451,"mutability":"mutable","name":"_batchHeader","nameLocation":"3483:12:25","nodeType":"VariableDeclaration","scope":5456,"src":"3459:36:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_memory_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":5450,"nodeType":"UserDefinedTypeName","pathNode":{"id":5449,"name":"ChainBatchHeader","nameLocations":["3459:16:25"],"nodeType":"IdentifierPath","referencedDeclaration":5361,"src":"3459:16:25"},"referencedDeclaration":5361,"src":"3459:16:25","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$5361_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"}],"src":"3458:38:25"},"returnParameters":{"id":5455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5454,"mutability":"mutable","name":"_inside","nameLocation":"3525:7:25","nodeType":"VariableDeclaration","scope":5456,"src":"3520:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5453,"name":"bool","nodeType":"ElementaryTypeName","src":"3520:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3519:14:25"},"scope":5457,"src":"3427:107:25","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5458,"src":"1211:2325:25","usedErrors":[]}],"src":"46:3491:25"},"id":25},"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol","exportedSymbols":{"OptimismAmb":[5475]},"id":5476,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5459,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"OptimismAmb","contractDependencies":[],"contractKind":"interface","documentation":{"id":5460,"nodeType":"StructuredDocumentation","src":"71:937:26","text":" @dev The optimism bridge shares both of these functions, but it is important\n to note that when going from L2 -> L1, the message cannot be processed by the\n AMB until the challenge period elapses.\n HOWEVER, before the challenge elapses, you can read the state of the L2 as it is\n placed on mainnet. By processing data from the L2 state, we are able to \"circumvent\"\n this delay to a reasonable degree.\n This means that for messages going L1 -> L2, you can call \"processMessage\" and expect\n the call to be executed to pass up the aggregate root. When going from L2 -> L1, you\n must read the root from the L2 state\n L2 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol\n L1 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol"},"fullyImplemented":false,"id":5475,"linearizedBaseContracts":[5475],"name":"OptimismAmb","nameLocation":"1019:11:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3dbb202b","id":5469,"implemented":false,"kind":"function","modifiers":[],"name":"sendMessage","nameLocation":"1044:11:26","nodeType":"FunctionDefinition","parameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"_target","nameLocation":"1069:7:26","nodeType":"VariableDeclaration","scope":5469,"src":"1061:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5461,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5464,"mutability":"mutable","name":"_message","nameLocation":"1095:8:26","nodeType":"VariableDeclaration","scope":5469,"src":"1082:21:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5463,"name":"bytes","nodeType":"ElementaryTypeName","src":"1082:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5466,"mutability":"mutable","name":"_gasLimit","nameLocation":"1116:9:26","nodeType":"VariableDeclaration","scope":5469,"src":"1109:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5465,"name":"uint32","nodeType":"ElementaryTypeName","src":"1109:6:26","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1055:74:26"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[],"src":"1138:0:26"},"scope":5475,"src":"1035:104:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e296e45","id":5474,"implemented":false,"kind":"function","modifiers":[],"name":"xDomainMessageSender","nameLocation":"1152:20:26","nodeType":"FunctionDefinition","parameters":{"id":5470,"nodeType":"ParameterList","parameters":[],"src":"1172:2:26"},"returnParameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5474,"src":"1198:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5471,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1197:9:26"},"scope":5475,"src":"1143:64:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5476,"src":"1009:200:26","usedErrors":[]}],"src":"46:1164:26"},"id":26},"contracts/shared/ProposedOwnable.sol":{"ast":{"absolutePath":"contracts/shared/ProposedOwnable.sol","exportedSymbols":{"IProposedOwnable":[5753],"ProposedOwnable":[5715]},"id":5716,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":5477,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"39:23:27"},{"absolutePath":"contracts/shared/interfaces/IProposedOwnable.sol","file":"./interfaces/IProposedOwnable.sol","id":5479,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5716,"sourceUnit":5754,"src":"64:67:27","symbolAliases":[{"foreign":{"id":5478,"name":"IProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5753,"src":"72:16:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5481,"name":"IProposedOwnable","nameLocations":["872:16:27"],"nodeType":"IdentifierPath","referencedDeclaration":5753,"src":"872:16:27"},"id":5482,"nodeType":"InheritanceSpecifier","src":"872:16:27"}],"canonicalName":"ProposedOwnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":5480,"nodeType":"StructuredDocumentation","src":"133:701:27","text":" @title ProposedOwnable\n @notice Contract module which provides a basic access control mechanism,\n where there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed via a two step process:\n 1. Call `proposeOwner`\n 2. Wait out the delay period\n 3. Call `acceptOwner`\n @dev This module is used through inheritance. It will make available the\n modifier `onlyOwner`, which can be applied to your functions to restrict\n their use to the owner.\n @dev The majority of this code was taken from the openzeppelin Ownable\n contract"},"fullyImplemented":true,"id":5715,"linearizedBaseContracts":[5715,5753],"name":"ProposedOwnable","nameLocation":"853:15:27","nodeType":"ContractDefinition","nodes":[{"errorSelector":"8d450dd8","id":5484,"name":"ProposedOwnable__onlyOwner_notOwner","nameLocation":"942:35:27","nodeType":"ErrorDefinition","parameters":{"id":5483,"nodeType":"ParameterList","parameters":[],"src":"977:2:27"},"src":"936:44:27"},{"errorSelector":"234fe4e2","id":5486,"name":"ProposedOwnable__onlyProposed_notProposedOwner","nameLocation":"989:46:27","nodeType":"ErrorDefinition","parameters":{"id":5485,"nodeType":"ParameterList","parameters":[],"src":"1035:2:27"},"src":"983:55:27"},{"errorSelector":"9380a17c","id":5488,"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","nameLocation":"1047:54:27","nodeType":"ErrorDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[],"src":"1101:2:27"},"src":"1041:63:27"},{"errorSelector":"23780cca","id":5490,"name":"ProposedOwnable__proposeNewOwner_invalidProposal","nameLocation":"1113:48:27","nodeType":"ErrorDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[],"src":"1161:2:27"},"src":"1107:57:27"},{"errorSelector":"945f6e7e","id":5492,"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","nameLocation":"1173:50:27","nodeType":"ErrorDefinition","parameters":{"id":5491,"nodeType":"ParameterList","parameters":[],"src":"1223:2:27"},"src":"1167:59:27"},{"errorSelector":"392cc0fc","id":5494,"name":"ProposedOwnable__renounceOwnership_noProposal","nameLocation":"1235:45:27","nodeType":"ErrorDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[],"src":"1280:2:27"},"src":"1229:54:27"},{"errorSelector":"23295ef9","id":5496,"name":"ProposedOwnable__renounceOwnership_invalidProposal","nameLocation":"1292:50:27","nodeType":"ErrorDefinition","parameters":{"id":5495,"nodeType":"ParameterList","parameters":[],"src":"1342:2:27"},"src":"1286:59:27"},{"constant":false,"id":5498,"mutability":"mutable","name":"_owner","nameLocation":"1408:6:27","nodeType":"VariableDeclaration","scope":5715,"src":"1392:22:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5497,"name":"address","nodeType":"ElementaryTypeName","src":"1392:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":5500,"mutability":"mutable","name":"_proposed","nameLocation":"1435:9:27","nodeType":"VariableDeclaration","scope":5715,"src":"1419:25:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5499,"name":"address","nodeType":"ElementaryTypeName","src":"1419:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":5502,"mutability":"mutable","name":"_proposedOwnershipTimestamp","nameLocation":"1464:27:27","nodeType":"VariableDeclaration","scope":5715,"src":"1448:43:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":5505,"mutability":"constant","name":"_delay","nameLocation":"1521:6:27","nodeType":"VariableDeclaration","scope":5715,"src":"1496:40:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":5504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:6:27","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"private"},{"baseFunctions":[5736],"body":{"id":5513,"nodeType":"Block","src":"1696:24:27","statements":[{"expression":{"id":5511,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"1709:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5510,"id":5512,"nodeType":"Return","src":"1702:13:27"}]},"documentation":{"id":5506,"nodeType":"StructuredDocumentation","src":"1574:64:27","text":" @notice Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":5514,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1650:5:27","nodeType":"FunctionDefinition","parameters":{"id":5507,"nodeType":"ParameterList","parameters":[],"src":"1655:2:27"},"returnParameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5514,"src":"1687:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5508,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1686:9:27"},"scope":5715,"src":"1641:79:27","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[5742],"body":{"id":5522,"nodeType":"Block","src":"1850:27:27","statements":[{"expression":{"id":5520,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"1863:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5519,"id":5521,"nodeType":"Return","src":"1856:16:27"}]},"documentation":{"id":5515,"nodeType":"StructuredDocumentation","src":"1724:65:27","text":" @notice Returns the address of the proposed owner."},"functionSelector":"d1851c92","id":5523,"implemented":true,"kind":"function","modifiers":[],"name":"proposed","nameLocation":"1801:8:27","nodeType":"FunctionDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[],"src":"1809:2:27"},"returnParameters":{"id":5519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5523,"src":"1841:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5517,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1840:9:27"},"scope":5715,"src":"1792:85:27","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":5531,"nodeType":"Block","src":"2016:45:27","statements":[{"expression":{"id":5529,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"2029:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5528,"id":5530,"nodeType":"Return","src":"2022:34:27"}]},"documentation":{"id":5524,"nodeType":"StructuredDocumentation","src":"1881:65:27","text":" @notice Returns the address of the proposed owner."},"functionSelector":"3cf52ffb","id":5532,"implemented":true,"kind":"function","modifiers":[],"name":"proposedTimestamp","nameLocation":"1958:17:27","nodeType":"FunctionDefinition","parameters":{"id":5525,"nodeType":"ParameterList","parameters":[],"src":"1975:2:27"},"returnParameters":{"id":5528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5532,"src":"2007:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5526,"name":"uint256","nodeType":"ElementaryTypeName","src":"2007:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2006:9:27"},"scope":5715,"src":"1949:112:27","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":5540,"nodeType":"Block","src":"2206:24:27","statements":[{"expression":{"id":5538,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2219:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5537,"id":5539,"nodeType":"Return","src":"2212:13:27"}]},"documentation":{"id":5533,"nodeType":"StructuredDocumentation","src":"2065:83:27","text":" @notice Returns the delay period before a new owner can be accepted."},"functionSelector":"6a42b8f8","id":5541,"implemented":true,"kind":"function","modifiers":[],"name":"delay","nameLocation":"2160:5:27","nodeType":"FunctionDefinition","parameters":{"id":5534,"nodeType":"ParameterList","parameters":[],"src":"2165:2:27"},"returnParameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5541,"src":"2197:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2197:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2196:9:27"},"scope":5715,"src":"2151:79:27","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":5553,"nodeType":"Block","src":"2334:88:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5544,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"2344:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5545,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2354:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2354:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2344:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5551,"nodeType":"IfStatement","src":"2340:70:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5548,"name":"ProposedOwnable__onlyOwner_notOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"2373:35:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5550,"nodeType":"RevertStatement","src":"2366:44:27"}},{"id":5552,"nodeType":"PlaceholderStatement","src":"2416:1:27"}]},"documentation":{"id":5542,"nodeType":"StructuredDocumentation","src":"2234:76:27","text":" @notice Throws if called by any account other than the owner."},"id":5554,"name":"onlyOwner","nameLocation":"2322:9:27","nodeType":"ModifierDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[],"src":"2331:2:27"},"src":"2313:109:27","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"2538:102:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5557,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"2548:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":5558,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2561:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:6:27","memberName":"sender","nodeType":"MemberAccess","src":"2561:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2548:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5564,"nodeType":"IfStatement","src":"2544:84:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5561,"name":"ProposedOwnable__onlyProposed_notProposedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"2580:46:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2580:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5563,"nodeType":"RevertStatement","src":"2573:55:27"}},{"id":5565,"nodeType":"PlaceholderStatement","src":"2634:1:27"}]},"documentation":{"id":5555,"nodeType":"StructuredDocumentation","src":"2426:85:27","text":" @notice Throws if called by any account other than the proposed owner."},"id":5567,"name":"onlyProposed","nameLocation":"2523:12:27","nodeType":"ModifierDefinition","parameters":{"id":5556,"nodeType":"ParameterList","parameters":[],"src":"2535:2:27"},"src":"2514:126:27","virtual":false,"visibility":"internal"},{"body":{"id":5582,"nodeType":"Block","src":"2748:182:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5570,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2791:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2797:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"2791:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5572,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"2809:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2791:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2790:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5575,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2841:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2790:57:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5580,"nodeType":"IfStatement","src":"2786:132:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5577,"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"2862:54:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5579,"nodeType":"RevertStatement","src":"2855:63:27"}},{"id":5581,"nodeType":"PlaceholderStatement","src":"2924:1:27"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"2644:68:27","text":" @notice Throws if the ownership delay has not elapsed"},"id":5583,"name":"ownershipDelayElapsed","nameLocation":"2724:21:27","nodeType":"ModifierDefinition","parameters":{"id":5569,"nodeType":"ParameterList","parameters":[],"src":"2745:2:27"},"src":"2715:215:27","virtual":false,"visibility":"internal"},{"body":{"id":5596,"nodeType":"Block","src":"3103:38:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"3116:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3134:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3126:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5590,"name":"address","nodeType":"ElementaryTypeName","src":"3126:7:27","typeDescriptions":{}}},"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3126:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3116:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5588,"id":5595,"nodeType":"Return","src":"3109:27:27"}]},"documentation":{"id":5584,"nodeType":"StructuredDocumentation","src":"2934:118:27","text":" @notice Indicates if the ownership has been renounced() by\n checking if current owner is address(0)"},"functionSelector":"d232c220","id":5597,"implemented":true,"kind":"function","modifiers":[],"name":"renounced","nameLocation":"3064:9:27","nodeType":"FunctionDefinition","parameters":{"id":5585,"nodeType":"ParameterList","parameters":[],"src":"3073:2:27"},"returnParameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5597,"src":"3097:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5586,"name":"bool","nodeType":"ElementaryTypeName","src":"3097:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3096:6:27"},"scope":5715,"src":"3055:86:27","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[5748],"body":{"id":5627,"nodeType":"Block","src":"3394:347:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5605,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"3439:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5606,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"3452:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3439:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5608,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"3469:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3500:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3469:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3439:62:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5615,"nodeType":"IfStatement","src":"3435:131:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5612,"name":"ProposedOwnable__proposeNewOwner_invalidProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5490,"src":"3516:48:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:50:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5614,"nodeType":"RevertStatement","src":"3509:57:27"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5616,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"3618:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5617,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"3628:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3618:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5622,"nodeType":"IfStatement","src":"3614:88:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5619,"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"3650:50:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3650:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5621,"nodeType":"RevertStatement","src":"3643:59:27"}},{"expression":{"arguments":[{"id":5624,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"3722:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5623,"name":"_setProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5714,"src":"3709:12:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3709:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5626,"nodeType":"ExpressionStatement","src":"3709:27:27"}]},"documentation":{"id":5598,"nodeType":"StructuredDocumentation","src":"3179:139:27","text":" @notice Sets the timestamp for an owner to be proposed, and sets the\n newly proposed owner as step 1 in a 2-step process"},"functionSelector":"b1f8100d","id":5628,"implemented":true,"kind":"function","modifiers":[{"id":5603,"kind":"modifierInvocation","modifierName":{"id":5602,"name":"onlyOwner","nameLocations":["3384:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":5554,"src":"3384:9:27"},"nodeType":"ModifierInvocation","src":"3384:9:27"}],"name":"proposeNewOwner","nameLocation":"3330:15:27","nodeType":"FunctionDefinition","parameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"newlyProposed","nameLocation":"3354:13:27","nodeType":"VariableDeclaration","scope":5628,"src":"3346:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5599,"name":"address","nodeType":"ElementaryTypeName","src":"3346:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:23:27"},"returnParameters":{"id":5604,"nodeType":"ParameterList","parameters":[],"src":"3394:0:27"},"scope":5715,"src":"3321:420:27","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":5660,"nodeType":"Block","src":"3896:366:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5636,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"3960:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3991:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3960:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5642,"nodeType":"IfStatement","src":"3956:92:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5639,"name":"ProposedOwnable__renounceOwnership_noProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5494,"src":"4001:45:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4001:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5641,"nodeType":"RevertStatement","src":"3994:54:27"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5643,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"4095:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4116:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5644,"name":"address","nodeType":"ElementaryTypeName","src":"4108:7:27","typeDescriptions":{}}},"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4108:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4095:23:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5652,"nodeType":"IfStatement","src":"4091:88:27","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5649,"name":"ProposedOwnable__renounceOwnership_invalidProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"4127:50:27","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5651,"nodeType":"RevertStatement","src":"4120:59:27"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":5656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4254:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4246:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5654,"name":"address","nodeType":"ElementaryTypeName","src":"4246:7:27","typeDescriptions":{}}},"id":5657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5653,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"4236:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5659,"nodeType":"ExpressionStatement","src":"4236:21:27"}]},"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"3745:72:27","text":" @notice Renounces ownership of the contract after a delay"},"functionSelector":"715018a6","id":5661,"implemented":true,"kind":"function","modifiers":[{"id":5632,"kind":"modifierInvocation","modifierName":{"id":5631,"name":"onlyOwner","nameLocations":["3864:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":5554,"src":"3864:9:27"},"nodeType":"ModifierInvocation","src":"3864:9:27"},{"id":5634,"kind":"modifierInvocation","modifierName":{"id":5633,"name":"ownershipDelayElapsed","nameLocations":["3874:21:27"],"nodeType":"IdentifierPath","referencedDeclaration":5583,"src":"3874:21:27"},"nodeType":"ModifierInvocation","src":"3874:21:27"}],"name":"renounceOwnership","nameLocation":"3829:17:27","nodeType":"FunctionDefinition","parameters":{"id":5630,"nodeType":"ParameterList","parameters":[],"src":"3846:2:27"},"returnParameters":{"id":5635,"nodeType":"ParameterList","parameters":[],"src":"3896:0:27"},"scope":5715,"src":"3820:442:27","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[5752],"body":{"id":5673,"nodeType":"Block","src":"4485:458:27","statements":[{"expression":{"arguments":[{"id":5670,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"4928:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5669,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5695,"src":"4918:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4918:20:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5672,"nodeType":"ExpressionStatement","src":"4918:20:27"}]},"documentation":{"id":5662,"nodeType":"StructuredDocumentation","src":"4266:135:27","text":" @notice Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"c5b350df","id":5674,"implemented":true,"kind":"function","modifiers":[{"id":5665,"kind":"modifierInvocation","modifierName":{"id":5664,"name":"onlyProposed","nameLocations":["4450:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":5567,"src":"4450:12:27"},"nodeType":"ModifierInvocation","src":"4450:12:27"},{"id":5667,"kind":"modifierInvocation","modifierName":{"id":5666,"name":"ownershipDelayElapsed","nameLocations":["4463:21:27"],"nodeType":"IdentifierPath","referencedDeclaration":5583,"src":"4463:21:27"},"nodeType":"ModifierInvocation","src":"4463:21:27"}],"name":"acceptProposedOwner","nameLocation":"4413:19:27","nodeType":"FunctionDefinition","parameters":{"id":5663,"nodeType":"ParameterList","parameters":[],"src":"4432:2:27"},"returnParameters":{"id":5668,"nodeType":"ParameterList","parameters":[],"src":"4485:0:27"},"scope":5715,"src":"4404:539:27","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":5694,"nodeType":"Block","src":"5027:139:27","statements":[{"eventCall":{"arguments":[{"id":5680,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"5059:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5681,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"5067:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5679,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"5038:20:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5038:38:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5683,"nodeType":"EmitStatement","src":"5033:43:27"},{"expression":{"id":5686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5684,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5498,"src":"5082:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5685,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"5091:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5082:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5687,"nodeType":"ExpressionStatement","src":"5082:17:27"},{"expression":{"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5105:34:27","subExpression":{"id":5688,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"5112:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5690,"nodeType":"ExpressionStatement","src":"5105:34:27"},{"expression":{"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5145:16:27","subExpression":{"id":5691,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"5152:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5693,"nodeType":"ExpressionStatement","src":"5145:16:27"}]},"id":5695,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"4990:9:27","nodeType":"FunctionDefinition","parameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"newOwner","nameLocation":"5008:8:27","nodeType":"VariableDeclaration","scope":5695,"src":"5000:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5675,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4999:18:27"},"returnParameters":{"id":5678,"nodeType":"ParameterList","parameters":[],"src":"5027:0:27"},"scope":5715,"src":"4981:185:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5713,"nodeType":"Block","src":"5223:130:27","statements":[{"expression":{"id":5703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5700,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"5229:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5701,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5259:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5265:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"5259:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5229:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5704,"nodeType":"ExpressionStatement","src":"5229:45:27"},{"expression":{"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5705,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"5280:9:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5706,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"5292:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5280:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5708,"nodeType":"ExpressionStatement","src":"5280:25:27"},{"eventCall":{"arguments":[{"id":5710,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5697,"src":"5334:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5709,"name":"OwnershipProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"5316:17:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5712,"nodeType":"EmitStatement","src":"5311:37:27"}]},"id":5714,"implemented":true,"kind":"function","modifiers":[],"name":"_setProposed","nameLocation":"5179:12:27","nodeType":"FunctionDefinition","parameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5697,"mutability":"mutable","name":"newlyProposed","nameLocation":"5200:13:27","nodeType":"VariableDeclaration","scope":5714,"src":"5192:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5696,"name":"address","nodeType":"ElementaryTypeName","src":"5192:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5191:23:27"},"returnParameters":{"id":5699,"nodeType":"ParameterList","parameters":[],"src":"5223:0:27"},"scope":5715,"src":"5170:183:27","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":5716,"src":"835:4520:27","usedErrors":[5484,5486,5488,5490,5492,5494,5496]}],"src":"39:5317:27"},"id":27},"contracts/shared/interfaces/IProposedOwnable.sol":{"ast":{"absolutePath":"contracts/shared/interfaces/IProposedOwnable.sol","exportedSymbols":{"IProposedOwnable":[5753]},"id":5754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5717,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:28"},{"abstract":false,"baseContracts":[],"canonicalName":"IProposedOwnable","contractDependencies":[],"contractKind":"interface","documentation":{"id":5718,"nodeType":"StructuredDocumentation","src":"57:138:28","text":" @title IProposedOwnable\n @notice Defines a minimal interface for ownership with a two step proposal and acceptance\n process"},"fullyImplemented":false,"id":5753,"linearizedBaseContracts":[5753],"name":"IProposedOwnable","nameLocation":"206:16:28","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":5719,"nodeType":"StructuredDocumentation","src":"227:82:28","text":" @dev This emits when change in ownership of a contract is proposed."},"eventSelector":"6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a","id":5723,"name":"OwnershipProposed","nameLocation":"318:17:28","nodeType":"EventDefinition","parameters":{"id":5722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"indexed":true,"mutability":"mutable","name":"proposedOwner","nameLocation":"352:13:28","nodeType":"VariableDeclaration","scope":5723,"src":"336:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5720,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"335:31:28"},"src":"312:55:28"},{"anonymous":false,"documentation":{"id":5724,"nodeType":"StructuredDocumentation","src":"371:68:28","text":" @dev This emits when ownership of a contract changes."},"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":5730,"name":"OwnershipTransferred","nameLocation":"448:20:28","nodeType":"EventDefinition","parameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5726,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"485:13:28","nodeType":"VariableDeclaration","scope":5730,"src":"469:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5725,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5728,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"516:8:28","nodeType":"VariableDeclaration","scope":5730,"src":"500:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5727,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"468:57:28"},"src":"442:84:28"},{"documentation":{"id":5731,"nodeType":"StructuredDocumentation","src":"530:97:28","text":" @notice Get the address of the owner\n @return owner_ The address of the owner."},"functionSelector":"8da5cb5b","id":5736,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"639:5:28","nodeType":"FunctionDefinition","parameters":{"id":5732,"nodeType":"ParameterList","parameters":[],"src":"644:2:28"},"returnParameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"owner_","nameLocation":"678:6:28","nodeType":"VariableDeclaration","scope":5736,"src":"670:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5733,"name":"address","nodeType":"ElementaryTypeName","src":"670:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"669:16:28"},"scope":5753,"src":"630:56:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5737,"nodeType":"StructuredDocumentation","src":"690:112:28","text":" @notice Get the address of the proposed owner\n @return proposed_ The address of the proposed."},"functionSelector":"d1851c92","id":5742,"implemented":false,"kind":"function","modifiers":[],"name":"proposed","nameLocation":"814:8:28","nodeType":"FunctionDefinition","parameters":{"id":5738,"nodeType":"ParameterList","parameters":[],"src":"822:2:28"},"returnParameters":{"id":5741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5740,"mutability":"mutable","name":"proposed_","nameLocation":"856:9:28","nodeType":"VariableDeclaration","scope":5742,"src":"848:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5739,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"847:19:28"},"scope":5753,"src":"805:62:28","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":5743,"nodeType":"StructuredDocumentation","src":"871:141:28","text":" @notice Set the address of the proposed owner of the contract\n @param newlyProposed The proposed new owner of the contract"},"functionSelector":"b1f8100d","id":5748,"implemented":false,"kind":"function","modifiers":[],"name":"proposeNewOwner","nameLocation":"1024:15:28","nodeType":"FunctionDefinition","parameters":{"id":5746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5745,"mutability":"mutable","name":"newlyProposed","nameLocation":"1048:13:28","nodeType":"VariableDeclaration","scope":5748,"src":"1040:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5744,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1039:23:28"},"returnParameters":{"id":5747,"nodeType":"ParameterList","parameters":[],"src":"1071:0:28"},"scope":5753,"src":"1015:57:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":5749,"nodeType":"StructuredDocumentation","src":"1076:76:28","text":" @notice Set the address of the proposed owner of the contract"},"functionSelector":"c5b350df","id":5752,"implemented":false,"kind":"function","modifiers":[],"name":"acceptProposedOwner","nameLocation":"1164:19:28","nodeType":"FunctionDefinition","parameters":{"id":5750,"nodeType":"ParameterList","parameters":[],"src":"1183:2:28"},"returnParameters":{"id":5751,"nodeType":"ParameterList","parameters":[],"src":"1194:0:28"},"scope":5753,"src":"1155:40:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5754,"src":"196:1001:28","usedErrors":[]}],"src":"32:1166:28"},"id":28},"contracts/shared/libraries/TypedMemView.sol":{"ast":{"absolutePath":"contracts/shared/libraries/TypedMemView.sol","exportedSymbols":{"TypedMemView":[6830]},"id":6831,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":5755,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:29"},{"abstract":false,"baseContracts":[],"canonicalName":"TypedMemView","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":6830,"linearizedBaseContracts":[6830],"name":"TypedMemView","nameLocation":"79:12:29","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f26be3fc","id":5758,"mutability":"constant","name":"NULL","nameLocation":"2502:4:29","nodeType":"VariableDeclaration","scope":6830,"src":"2478:94:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5756,"name":"bytes29","nodeType":"ElementaryTypeName","src":"2478:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"value":{"hexValue":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2509:63:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_7894ac7152936831bdd146bb58cc79cdde7fa746d05d79c2b1dea4074b875c40","typeString":"literal_string hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\""}},"visibility":"public"},{"constant":true,"id":5761,"mutability":"constant","name":"LOW_12_MASK","nameLocation":"2593:11:29","nodeType":"VariableDeclaration","scope":6830,"src":"2576:57:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5759,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666666666666666666666666666666666666666","id":5760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2607:26:29","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950335_by_1","typeString":"int_const 79228162514264337593543950335"},"value":"0xffffffffffffffffffffffff"},"visibility":"internal"},{"constant":true,"id":5766,"mutability":"constant","name":"TWENTY_SEVEN_BYTES","nameLocation":"2654:18:29","nodeType":"VariableDeclaration","scope":6830,"src":"2637:44:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"id":5765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2675:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3237","id":5764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2679:2:29","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"2675:6:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"}},"visibility":"internal"},{"constant":true,"id":5771,"mutability":"constant","name":"_27_BYTES_IN_BITS","nameLocation":"2710:17:29","nodeType":"VariableDeclaration","scope":6830,"src":"2685:51:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5767,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2730:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3237","id":5769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2734:2:29","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"2730:6:29","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"}},"visibility":"private"},{"constant":true,"id":5774,"mutability":"constant","name":"LOW_27_BYTES_MASK","nameLocation":"2827:17:29","nodeType":"VariableDeclaration","scope":6830,"src":"2802:101:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5772,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":5773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:56:29","typeDescriptions":{"typeIdentifier":"t_rational_105312291668557186697918027683670432318895095400549111254310977535_by_1","typeString":"int_const 1053...(58 digits omitted)...7535"},"value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"private"},{"errorSelector":"d32c1d37","id":5780,"name":"TypedMemView__assertType_typeAssertionFailed","nameLocation":"2990:44:29","nodeType":"ErrorDefinition","parameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5776,"mutability":"mutable","name":"actual","nameLocation":"3043:6:29","nodeType":"VariableDeclaration","scope":5780,"src":"3035:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3035:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5778,"mutability":"mutable","name":"expected","nameLocation":"3059:8:29","nodeType":"VariableDeclaration","scope":5780,"src":"3051:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5777,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3034:34:29"},"src":"2984:85:29"},{"errorSelector":"78218d29","id":5790,"name":"TypedMemView__index_overrun","nameLocation":"3078:27:29","nodeType":"ErrorDefinition","parameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"loc","nameLocation":"3114:3:29","nodeType":"VariableDeclaration","scope":5790,"src":"3106:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5781,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5784,"mutability":"mutable","name":"len","nameLocation":"3127:3:29","nodeType":"VariableDeclaration","scope":5790,"src":"3119:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5783,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5786,"mutability":"mutable","name":"index","nameLocation":"3140:5:29","nodeType":"VariableDeclaration","scope":5790,"src":"3132:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5785,"name":"uint256","nodeType":"ElementaryTypeName","src":"3132:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5788,"mutability":"mutable","name":"slice","nameLocation":"3155:5:29","nodeType":"VariableDeclaration","scope":5790,"src":"3147:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5787,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3105:56:29"},"src":"3072:90:29"},{"errorSelector":"045df3f9","id":5792,"name":"TypedMemView__index_indexMoreThan32Bytes","nameLocation":"3171:40:29","nodeType":"ErrorDefinition","parameters":{"id":5791,"nodeType":"ParameterList","parameters":[],"src":"3211:2:29"},"src":"3165:49:29"},{"errorSelector":"523544cc","id":5794,"name":"TypedMemView__unsafeCopyTo_nullPointer","nameLocation":"3223:38:29","nodeType":"ErrorDefinition","parameters":{"id":5793,"nodeType":"ParameterList","parameters":[],"src":"3261:2:29"},"src":"3217:47:29"},{"errorSelector":"5dc12922","id":5796,"name":"TypedMemView__unsafeCopyTo_invalidPointer","nameLocation":"3273:41:29","nodeType":"ErrorDefinition","parameters":{"id":5795,"nodeType":"ParameterList","parameters":[],"src":"3314:2:29"},"src":"3267:50:29"},{"errorSelector":"abc6f66c","id":5798,"name":"TypedMemView__unsafeCopyTo_identityOOG","nameLocation":"3326:38:29","nodeType":"ErrorDefinition","parameters":{"id":5797,"nodeType":"ParameterList","parameters":[],"src":"3364:2:29"},"src":"3320:47:29"},{"errorSelector":"252e0d83","id":5800,"name":"TypedMemView__assertValid_validityAssertionFailed","nameLocation":"3376:49:29","nodeType":"ErrorDefinition","parameters":{"id":5799,"nodeType":"ParameterList","parameters":[],"src":"3425:2:29"},"src":"3370:58:29"},{"body":{"id":5896,"nodeType":"Block","src":"3763:928:29","statements":[{"expression":{"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5808,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"3769:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5809,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"3773:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5811,"nodeType":"ExpressionStatement","src":"3769:6:29"},{"expression":{"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5812,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"3800:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5813,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"3812:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":5814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3817:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"3812:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3811:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3822:66:29","typeDescriptions":{"typeIdentifier":"t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1","typeString":"int_const 4505...(67 digits omitted)...9455"},"value":"0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"},"src":"3811:77:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3810:79:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5820,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"3900:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646","id":5821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3904:66:29","typeDescriptions":{"typeIdentifier":"t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1","typeString":"int_const 4505...(67 digits omitted)...9455"},"value":"0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"},"src":"3900:70:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3899:72:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3975:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"3899:77:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3898:79:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3810:167:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3800:177:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5829,"nodeType":"ExpressionStatement","src":"3800:177:29"},{"expression":{"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5830,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4013:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5831,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4025:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4030:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4025:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4024:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646","id":5835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4036:66:29","typeDescriptions":{"typeIdentifier":"t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1","typeString":"int_const 1766...(65 digits omitted)...4255"},"value":"0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"},"src":"4024:78:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5837,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4023:80:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4114:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646","id":5839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4118:66:29","typeDescriptions":{"typeIdentifier":"t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1","typeString":"int_const 1766...(65 digits omitted)...4255"},"value":"0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"},"src":"4114:70:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4113:72:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4189:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4113:78:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4112:80:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4023:169:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4013:179:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5847,"nodeType":"ExpressionStatement","src":"4013:179:29"},{"expression":{"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5848,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4228:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4240:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4245:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4240:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5852,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4239:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:66:29","typeDescriptions":{"typeIdentifier":"t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1","typeString":"int_const 2695...(60 digits omitted)...3855"},"value":"0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"},"src":"4239:78:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4238:80:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4329:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:66:29","typeDescriptions":{"typeIdentifier":"t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1","typeString":"int_const 2695...(60 digits omitted)...3855"},"value":"0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"},"src":"4329:70:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5859,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4328:72:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4404:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4328:78:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4327:80:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4238:169:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4228:179:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5865,"nodeType":"ExpressionStatement","src":"4228:179:29"},{"expression":{"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5866,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4443:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5867,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4455:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4460:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4455:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4454:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4466:66:29","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763495507056286727952657427581105975853055_by_1","typeString":"int_const 6277...(50 digits omitted)...3055"},"value":"0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"},"src":"4454:78:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5873,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4453:80:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5874,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4544:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646","id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4548:66:29","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763495507056286727952657427581105975853055_by_1","typeString":"int_const 6277...(50 digits omitted)...3055"},"value":"0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"},"src":"4544:70:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4543:72:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4619:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4543:78:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4542:80:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:169:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4443:179:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5883,"nodeType":"ExpressionStatement","src":"4443:179:29"},{"expression":{"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5884,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4659:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5885,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4664:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4669:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"4664:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5888,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4663:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5889,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"4677:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4682:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"4677:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4676:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4663:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4659:27:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5895,"nodeType":"ExpressionStatement","src":"4659:27:29"}]},"documentation":{"id":5801,"nodeType":"StructuredDocumentation","src":"3432:258:29","text":" @notice          Changes the endianness of a uint256.\n @dev             https://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel\n @param _b        The unsigned integer to reverse\n @return          v - The reversed value"},"id":5897,"implemented":true,"kind":"function","modifiers":[],"name":"reverseUint256","nameLocation":"3702:14:29","nodeType":"FunctionDefinition","parameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"_b","nameLocation":"3725:2:29","nodeType":"VariableDeclaration","scope":5897,"src":"3717:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5802,"name":"uint256","nodeType":"ElementaryTypeName","src":"3717:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3716:12:29"},"returnParameters":{"id":5807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"v","nameLocation":"3760:1:29","nodeType":"VariableDeclaration","scope":5897,"src":"3752:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5805,"name":"uint256","nodeType":"ElementaryTypeName","src":"3752:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3751:11:29"},"scope":6830,"src":"3693:998:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5906,"nodeType":"Block","src":"4902:220:29","statements":[{"AST":{"nodeType":"YulBlock","src":"4953:165:29","statements":[{"nodeType":"YulAssignment","src":"5019:93:29","value":{"arguments":[{"arguments":[{"name":"_len","nodeType":"YulIdentifier","src":"5035:4:29"},{"kind":"number","nodeType":"YulLiteral","src":"5041:1:29","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5031:3:29"},"nodeType":"YulFunctionCall","src":"5031:12:29"},{"kind":"number","nodeType":"YulLiteral","src":"5045:66:29","type":"","value":"0x8000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"sar","nodeType":"YulIdentifier","src":"5027:3:29"},"nodeType":"YulFunctionCall","src":"5027:85:29"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"5019:4:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5900,"isOffset":false,"isSlot":false,"src":"5035:4:29","valueSize":1},{"declaration":5903,"isOffset":false,"isSlot":false,"src":"5019:4:29","valueSize":1}],"id":5905,"nodeType":"InlineAssembly","src":"4944:174:29"}]},"documentation":{"id":5898,"nodeType":"StructuredDocumentation","src":"4695:138:29","text":" @notice      Create a mask with the highest `_len` bits set.\n @param _len  The length\n @return      mask - The mask"},"id":5907,"implemented":true,"kind":"function","modifiers":[],"name":"leftMask","nameLocation":"4845:8:29","nodeType":"FunctionDefinition","parameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"_len","nameLocation":"4860:4:29","nodeType":"VariableDeclaration","scope":5907,"src":"4854:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5899,"name":"uint8","nodeType":"ElementaryTypeName","src":"4854:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4853:12:29"},"returnParameters":{"id":5904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"mask","nameLocation":"4896:4:29","nodeType":"VariableDeclaration","scope":5907,"src":"4888:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5902,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:14:29"},"scope":6830,"src":"4836:286:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5915,"nodeType":"Block","src":"5272:22:29","statements":[{"expression":{"id":5913,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"5285:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":5912,"id":5914,"nodeType":"Return","src":"5278:11:29"}]},"documentation":{"id":5908,"nodeType":"StructuredDocumentation","src":"5126:91:29","text":" @notice      Return the null view.\n @return      bytes29 - The null view"},"id":5916,"implemented":true,"kind":"function","modifiers":[],"name":"nullView","nameLocation":"5229:8:29","nodeType":"FunctionDefinition","parameters":{"id":5909,"nodeType":"ParameterList","parameters":[],"src":"5237:2:29"},"returnParameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5916,"src":"5263:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5910,"name":"bytes29","nodeType":"ElementaryTypeName","src":"5263:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"5262:9:29"},"scope":6830,"src":"5220:74:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5928,"nodeType":"Block","src":"5467:33:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"5480:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5925,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"5491:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"5480:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5923,"id":5927,"nodeType":"Return","src":"5473:22:29"}]},"documentation":{"id":5917,"nodeType":"StructuredDocumentation","src":"5298:104:29","text":" @notice      Check if the view is null.\n @return      bool - True if the view is null"},"id":5929,"implemented":true,"kind":"function","modifiers":[],"name":"isNull","nameLocation":"5414:6:29","nodeType":"FunctionDefinition","parameters":{"id":5920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5919,"mutability":"mutable","name":"memView","nameLocation":"5429:7:29","nodeType":"VariableDeclaration","scope":5929,"src":"5421:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5918,"name":"bytes29","nodeType":"ElementaryTypeName","src":"5421:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"5420:17:29"},"returnParameters":{"id":5923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5929,"src":"5461:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5921,"name":"bool","nodeType":"ElementaryTypeName","src":"5461:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5460:6:29"},"scope":6830,"src":"5405:95:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5942,"nodeType":"Block","src":"5682:34:29","statements":[{"expression":{"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5695:16:29","subExpression":{"arguments":[{"id":5938,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5932,"src":"5703:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":5937,"name":"isNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"5696:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5696:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5936,"id":5941,"nodeType":"Return","src":"5688:23:29"}]},"documentation":{"id":5930,"nodeType":"StructuredDocumentation","src":"5504:112:29","text":" @notice      Check if the view is not null.\n @return      bool - True if the view is not null"},"id":5943,"implemented":true,"kind":"function","modifiers":[],"name":"notNull","nameLocation":"5628:7:29","nodeType":"FunctionDefinition","parameters":{"id":5933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5932,"mutability":"mutable","name":"memView","nameLocation":"5644:7:29","nodeType":"VariableDeclaration","scope":5943,"src":"5636:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5931,"name":"bytes29","nodeType":"ElementaryTypeName","src":"5636:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"5635:17:29"},"returnParameters":{"id":5936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5943,"src":"5676:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5934,"name":"bool","nodeType":"ElementaryTypeName","src":"5676:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5675:6:29"},"scope":6830,"src":"5619:97:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5967,"nodeType":"Block","src":"6191:220:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5952,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"6208:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":5951,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"6201:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307866666666666666666666","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6220:12:29","typeDescriptions":{"typeIdentifier":"t_rational_1099511627775_by_1","typeString":"int_const 1099511627775"},"value":"0xffffffffff"},"src":"6201:31:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5959,"nodeType":"IfStatement","src":"6197:63:29","trueBody":{"id":5958,"nodeType":"Block","src":"6234:26:29","statements":[{"expression":{"hexValue":"74727565","id":5956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6249:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5950,"id":5957,"nodeType":"Return","src":"6242:11:29"}]}},{"assignments":[5961],"declarations":[{"constant":false,"id":5961,"mutability":"mutable","name":"_end","nameLocation":"6273:4:29","nodeType":"VariableDeclaration","scope":5967,"src":"6265:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"6265:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5965,"initialValue":{"arguments":[{"id":5963,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"6284:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":5962,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"6280:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6265:27:29"},{"AST":{"nodeType":"YulBlock","src":"6307:100:29","statements":[{"nodeType":"YulAssignment","src":"6373:28:29","value":{"arguments":[{"name":"_end","nodeType":"YulIdentifier","src":"6383:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6395:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6389:5:29"},"nodeType":"YulFunctionCall","src":"6389:11:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6380:2:29"},"nodeType":"YulFunctionCall","src":"6380:21:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6373:3:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5961,"isOffset":false,"isSlot":false,"src":"6383:4:29","valueSize":1},{"declaration":5949,"isOffset":false,"isSlot":false,"src":"6373:3:29","valueSize":1}],"id":5966,"nodeType":"InlineAssembly","src":"6298:109:29"}]},"documentation":{"id":5944,"nodeType":"StructuredDocumentation","src":"5720:398:29","text":" @notice          Check if the view is of a invalid type and points to a valid location\n                  in memory.\n @dev             We perform this check by examining solidity's unallocated memory\n                  pointer and ensuring that the view's upper bound is less than that.\n @param memView   The view\n @return          ret - True if the view is invalid"},"id":5968,"implemented":true,"kind":"function","modifiers":[],"name":"isNotValid","nameLocation":"6130:10:29","nodeType":"FunctionDefinition","parameters":{"id":5947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5946,"mutability":"mutable","name":"memView","nameLocation":"6149:7:29","nodeType":"VariableDeclaration","scope":5968,"src":"6141:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5945,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6141:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6140:17:29"},"returnParameters":{"id":5950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5949,"mutability":"mutable","name":"ret","nameLocation":"6186:3:29","nodeType":"VariableDeclaration","scope":5968,"src":"6181:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5948,"name":"bool","nodeType":"ElementaryTypeName","src":"6181:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6180:10:29"},"scope":6830,"src":"6121:290:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5985,"nodeType":"Block","src":"6702:114:29","statements":[{"condition":{"arguments":[{"id":5977,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"6723:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":5976,"name":"isNotValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"6712:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6712:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5982,"nodeType":"IfStatement","src":"6708:83:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5979,"name":"TypedMemView__assertValid_validityAssertionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"6740:49:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6740:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5981,"nodeType":"RevertStatement","src":"6733:58:29"}},{"expression":{"id":5983,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5971,"src":"6804:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":5975,"id":5984,"nodeType":"Return","src":"6797:14:29"}]},"documentation":{"id":5969,"nodeType":"StructuredDocumentation","src":"6415:214:29","text":" @notice          Require that a typed memory view be valid.\n @dev             Returns the view for easy chaining.\n @param memView   The view\n @return          bytes29 - The validated view"},"id":5986,"implemented":true,"kind":"function","modifiers":[],"name":"assertValid","nameLocation":"6641:11:29","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5971,"mutability":"mutable","name":"memView","nameLocation":"6661:7:29","nodeType":"VariableDeclaration","scope":5986,"src":"6653:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5970,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6653:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6652:17:29"},"returnParameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5986,"src":"6693:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5973,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6693:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6692:9:29"},"scope":6830,"src":"6632:184:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"7147:46:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5997,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5989,"src":"7167:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":5996,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"7160:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":5998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7160:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5999,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5991,"src":"7179:9:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"7160:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5995,"id":6001,"nodeType":"Return","src":"7153:35:29"}]},"documentation":{"id":5987,"nodeType":"StructuredDocumentation","src":"6820:244:29","text":" @notice          Return true if the memview is of the expected type. Otherwise false.\n @param memView   The view\n @param _expected The expected type\n @return          bool - True if the memview is of the expected type"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"isType","nameLocation":"7076:6:29","nodeType":"FunctionDefinition","parameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"memView","nameLocation":"7091:7:29","nodeType":"VariableDeclaration","scope":6003,"src":"7083:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":5988,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7083:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":5991,"mutability":"mutable","name":"_expected","nameLocation":"7107:9:29","nodeType":"VariableDeclaration","scope":6003,"src":"7100:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5990,"name":"uint40","nodeType":"ElementaryTypeName","src":"7100:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"7082:35:29"},"returnParameters":{"id":5995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"7141:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5993,"name":"bool","nodeType":"ElementaryTypeName","src":"7141:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7140:6:29"},"scope":6830,"src":"7067:126:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6035,"nodeType":"Block","src":"7562:175:29","statements":[{"condition":{"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7572:27:29","subExpression":{"arguments":[{"id":6014,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"7580:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":6015,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"7589:9:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":6013,"name":"isType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6003,"src":"7573:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint40_$returns$_t_bool_$","typeString":"function (bytes29,uint40) pure returns (bool)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7573:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"7568:145:29","trueBody":{"id":6031,"nodeType":"Block","src":"7601:112:29","statements":[{"errorCall":{"arguments":[{"arguments":[{"arguments":[{"id":6022,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"7676:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6021,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"7669:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":6020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7661:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6019,"name":"uint256","nodeType":"ElementaryTypeName","src":"7661:7:29","typeDescriptions":{}}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7661:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6027,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6008,"src":"7695:9:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7687:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6025,"name":"uint256","nodeType":"ElementaryTypeName","src":"7687:7:29","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7687:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"TypedMemView__assertType_typeAssertionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"7616:44:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7616:90:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6030,"nodeType":"RevertStatement","src":"7609:97:29"}]}},{"expression":{"id":6033,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"7725:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":6012,"id":6034,"nodeType":"Return","src":"7718:14:29"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"7197:275:29","text":" @notice          Require that a typed memory view has a specific type.\n @dev             Returns the view for easy chaining.\n @param memView   The view\n @param _expected The expected type\n @return          bytes29 - The view with validated type"},"id":6036,"implemented":true,"kind":"function","modifiers":[],"name":"assertType","nameLocation":"7484:10:29","nodeType":"FunctionDefinition","parameters":{"id":6009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"memView","nameLocation":"7503:7:29","nodeType":"VariableDeclaration","scope":6036,"src":"7495:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6005,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7495:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6008,"mutability":"mutable","name":"_expected","nameLocation":"7519:9:29","nodeType":"VariableDeclaration","scope":6036,"src":"7512:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6007,"name":"uint40","nodeType":"ElementaryTypeName","src":"7512:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"7494:35:29"},"returnParameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6036,"src":"7553:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6010,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7553:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"7552:9:29"},"scope":6830,"src":"7475:262:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6047,"nodeType":"Block","src":"8048:236:29","statements":[{"AST":{"nodeType":"YulBlock","src":"8093:187:29","statements":[{"nodeType":"YulAssignment","src":"8194:80:29","value":{"arguments":[{"arguments":[{"name":"memView","nodeType":"YulIdentifier","src":"8212:7:29"},{"name":"LOW_27_BYTES_MASK","nodeType":"YulIdentifier","src":"8221:17:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8208:3:29"},"nodeType":"YulFunctionCall","src":"8208:31:29"},{"arguments":[{"name":"_27_BYTES_IN_BITS","nodeType":"YulIdentifier","src":"8245:17:29"},{"name":"_newType","nodeType":"YulIdentifier","src":"8264:8:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8241:3:29"},"nodeType":"YulFunctionCall","src":"8241:32:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8205:2:29"},"nodeType":"YulFunctionCall","src":"8205:69:29"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"8194:7:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5774,"isOffset":false,"isSlot":false,"src":"8221:17:29","valueSize":1},{"declaration":5771,"isOffset":false,"isSlot":false,"src":"8245:17:29","valueSize":1},{"declaration":6041,"isOffset":false,"isSlot":false,"src":"8264:8:29","valueSize":1},{"declaration":6039,"isOffset":false,"isSlot":false,"src":"8212:7:29","valueSize":1},{"declaration":6044,"isOffset":false,"isSlot":false,"src":"8194:7:29","valueSize":1}],"id":6046,"nodeType":"InlineAssembly","src":"8084:196:29"}]},"documentation":{"id":6037,"nodeType":"StructuredDocumentation","src":"7741:214:29","text":" @notice          Return an identical view with a different type.\n @param memView   The view\n @param _newType  The new type\n @return          newView - The new view with the specified type"},"id":6048,"implemented":true,"kind":"function","modifiers":[],"name":"castTo","nameLocation":"7967:6:29","nodeType":"FunctionDefinition","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"memView","nameLocation":"7982:7:29","nodeType":"VariableDeclaration","scope":6048,"src":"7974:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6038,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7974:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6041,"mutability":"mutable","name":"_newType","nameLocation":"7998:8:29","nodeType":"VariableDeclaration","scope":6048,"src":"7991:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6040,"name":"uint40","nodeType":"ElementaryTypeName","src":"7991:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"7973:34:29"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"newView","nameLocation":"8039:7:29","nodeType":"VariableDeclaration","scope":6048,"src":"8031:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6043,"name":"bytes29","nodeType":"ElementaryTypeName","src":"8031:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"8030:17:29"},"scope":6830,"src":"7958:326:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6094,"nodeType":"Block","src":"8933:529:29","statements":[{"assignments":[6061],"declarations":[{"constant":false,"id":6061,"mutability":"mutable","name":"_uint96Bits","nameLocation":"8947:11:29","nodeType":"VariableDeclaration","scope":6094,"src":"8939:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6060,"name":"uint256","nodeType":"ElementaryTypeName","src":"8939:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6063,"initialValue":{"hexValue":"3936","id":6062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:2:29","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"nodeType":"VariableDeclarationStatement","src":"8939:24:29"},{"assignments":[6065],"declarations":[{"constant":false,"id":6065,"mutability":"mutable","name":"_emptyBits","nameLocation":"8977:10:29","nodeType":"VariableDeclaration","scope":6094,"src":"8969:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"8969:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6067,"initialValue":{"hexValue":"3234","id":6066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:29","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"VariableDeclarationStatement","src":"8969:23:29"},{"assignments":[6069],"declarations":[{"constant":false,"id":6069,"mutability":"mutable","name":"len_","nameLocation":"9062:4:29","nodeType":"VariableDeclaration","scope":6094,"src":"9055:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6068,"name":"uint96","nodeType":"ElementaryTypeName","src":"9055:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":6074,"initialValue":{"arguments":[{"id":6072,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"9076:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9069:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6070,"name":"uint96","nodeType":"ElementaryTypeName","src":"9069:6:29","typeDescriptions":{}}},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"9055:26:29"},{"assignments":[6076],"declarations":[{"constant":false,"id":6076,"mutability":"mutable","name":"loc_","nameLocation":"9094:4:29","nodeType":"VariableDeclaration","scope":6094,"src":"9087:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6075,"name":"uint96","nodeType":"ElementaryTypeName","src":"9087:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":6081,"initialValue":{"arguments":[{"id":6079,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"9108:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9101:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6077,"name":"uint96","nodeType":"ElementaryTypeName","src":"9101:6:29","typeDescriptions":{}}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9101:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"9087:26:29"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"len_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6069,"src":"9127:4:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6084,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6055,"src":"9135:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9127:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6086,"name":"loc_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"9143:4:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6087,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6053,"src":"9151:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9143:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9127:28:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"217472756e6361746564","id":6090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9157:12:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","typeString":"literal_string \"!truncated\""},"value":"!truncated"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","typeString":"literal_string \"!truncated\""}],"id":6082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9119:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6092,"nodeType":"ExpressionStatement","src":"9119:51:29"},{"AST":{"nodeType":"YulBlock","src":"9186:272:29","statements":[{"nodeType":"YulAssignment","src":"9260:34:29","value":{"arguments":[{"name":"_uint96Bits","nodeType":"YulIdentifier","src":"9275:11:29"},{"name":"_type","nodeType":"YulIdentifier","src":"9288:5:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9271:3:29"},"nodeType":"YulFunctionCall","src":"9271:23:29"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"9260:7:29"}]},{"nodeType":"YulAssignment","src":"9316:46:29","value":{"arguments":[{"name":"_uint96Bits","nodeType":"YulIdentifier","src":"9331:11:29"},{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"9347:7:29"},{"name":"loc_","nodeType":"YulIdentifier","src":"9356:4:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9344:2:29"},"nodeType":"YulFunctionCall","src":"9344:17:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9327:3:29"},"nodeType":"YulFunctionCall","src":"9327:35:29"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"9316:7:29"}]},{"nodeType":"YulAssignment","src":"9383:45:29","value":{"arguments":[{"name":"_emptyBits","nodeType":"YulIdentifier","src":"9398:10:29"},{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"9413:7:29"},{"name":"len_","nodeType":"YulIdentifier","src":"9422:4:29"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9410:2:29"},"nodeType":"YulFunctionCall","src":"9410:17:29"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9394:3:29"},"nodeType":"YulFunctionCall","src":"9394:34:29"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"9383:7:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6065,"isOffset":false,"isSlot":false,"src":"9398:10:29","valueSize":1},{"declaration":6051,"isOffset":false,"isSlot":false,"src":"9288:5:29","valueSize":1},{"declaration":6061,"isOffset":false,"isSlot":false,"src":"9275:11:29","valueSize":1},{"declaration":6061,"isOffset":false,"isSlot":false,"src":"9331:11:29","valueSize":1},{"declaration":6069,"isOffset":false,"isSlot":false,"src":"9422:4:29","valueSize":1},{"declaration":6076,"isOffset":false,"isSlot":false,"src":"9356:4:29","valueSize":1},{"declaration":6058,"isOffset":false,"isSlot":false,"src":"9260:7:29","valueSize":1},{"declaration":6058,"isOffset":false,"isSlot":false,"src":"9316:7:29","valueSize":1},{"declaration":6058,"isOffset":false,"isSlot":false,"src":"9347:7:29","valueSize":1},{"declaration":6058,"isOffset":false,"isSlot":false,"src":"9383:7:29","valueSize":1},{"declaration":6058,"isOffset":false,"isSlot":false,"src":"9413:7:29","valueSize":1}],"id":6093,"nodeType":"InlineAssembly","src":"9177:281:29"}]},"documentation":{"id":6049,"nodeType":"StructuredDocumentation","src":"8288:514:29","text":" @notice          Unsafe raw pointer construction. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @dev             Unsafe raw pointer construction. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @param _type     The type\n @param _loc      The memory address\n @param _len      The length\n @return          newView - The new view with the specified type, location and length"},"id":6095,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeBuildUnchecked","nameLocation":"8814:20:29","nodeType":"FunctionDefinition","parameters":{"id":6056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6051,"mutability":"mutable","name":"_type","nameLocation":"8848:5:29","nodeType":"VariableDeclaration","scope":6095,"src":"8840:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6050,"name":"uint256","nodeType":"ElementaryTypeName","src":"8840:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6053,"mutability":"mutable","name":"_loc","nameLocation":"8867:4:29","nodeType":"VariableDeclaration","scope":6095,"src":"8859:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6052,"name":"uint256","nodeType":"ElementaryTypeName","src":"8859:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"_len","nameLocation":"8885:4:29","nodeType":"VariableDeclaration","scope":6095,"src":"8877:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6054,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8834:59:29"},"returnParameters":{"id":6059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6058,"mutability":"mutable","name":"newView","nameLocation":"8924:7:29","nodeType":"VariableDeclaration","scope":6095,"src":"8916:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6057,"name":"bytes29","nodeType":"ElementaryTypeName","src":"8916:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"8915:17:29"},"scope":6830,"src":"8805:657:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6129,"nodeType":"Block","src":"10093:276:29","statements":[{"assignments":[6108],"declarations":[{"constant":false,"id":6108,"mutability":"mutable","name":"_end","nameLocation":"10107:4:29","nodeType":"VariableDeclaration","scope":6129,"src":"10099:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"10099:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6112,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"10114:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6110,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"10121:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10114:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10099:26:29"},{"AST":{"nodeType":"YulBlock","src":"10140:124:29","statements":[{"body":{"nodeType":"YulBlock","src":"10231:27:29","statements":[{"nodeType":"YulAssignment","src":"10241:9:29","value":{"kind":"number","nodeType":"YulLiteral","src":"10249:1:29","type":"","value":"0"},"variableNames":[{"name":"_end","nodeType":"YulIdentifier","src":"10241:4:29"}]}]},"condition":{"arguments":[{"name":"_end","nodeType":"YulIdentifier","src":"10212:4:29"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10224:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10218:5:29"},"nodeType":"YulFunctionCall","src":"10218:11:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10209:2:29"},"nodeType":"YulFunctionCall","src":"10209:21:29"},"nodeType":"YulIf","src":"10206:52:29"}]},"evmVersion":"london","externalReferences":[{"declaration":6108,"isOffset":false,"isSlot":false,"src":"10212:4:29","valueSize":1},{"declaration":6108,"isOffset":false,"isSlot":false,"src":"10241:4:29","valueSize":1}],"id":6113,"nodeType":"InlineAssembly","src":"10131:133:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6114,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"10273:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10281:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10273:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6120,"nodeType":"IfStatement","src":"10269:41:29","trueBody":{"id":6119,"nodeType":"Block","src":"10284:26:29","statements":[{"expression":{"id":6117,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"10299:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":6106,"id":6118,"nodeType":"Return","src":"10292:11:29"}]}},{"expression":{"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6121,"name":"newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6105,"src":"10315:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6123,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"10346:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6124,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"10353:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6125,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"10359:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6122,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"10325:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10325:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"10315:49:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6128,"nodeType":"ExpressionStatement","src":"10315:49:29"}]},"documentation":{"id":6096,"nodeType":"StructuredDocumentation","src":"9466:510:29","text":" @notice          Instantiate a new memory view. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @dev             Instantiate a new memory view. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @param _type     The type\n @param _loc      The memory address\n @param _len      The length\n @return          newView - The new view with the specified type, location and length"},"id":6130,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"9988:5:29","nodeType":"FunctionDefinition","parameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"_type","nameLocation":"10007:5:29","nodeType":"VariableDeclaration","scope":6130,"src":"9999:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6097,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6100,"mutability":"mutable","name":"_loc","nameLocation":"10026:4:29","nodeType":"VariableDeclaration","scope":6130,"src":"10018:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6099,"name":"uint256","nodeType":"ElementaryTypeName","src":"10018:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6102,"mutability":"mutable","name":"_len","nameLocation":"10044:4:29","nodeType":"VariableDeclaration","scope":6130,"src":"10036:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6101,"name":"uint256","nodeType":"ElementaryTypeName","src":"10036:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9993:59:29"},"returnParameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6105,"mutability":"mutable","name":"newView","nameLocation":"10084:7:29","nodeType":"VariableDeclaration","scope":6130,"src":"10076:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6104,"name":"bytes29","nodeType":"ElementaryTypeName","src":"10076:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"10075:17:29"},"scope":6830,"src":"9979:390:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6155,"nodeType":"Block","src":"10827:246:29","statements":[{"assignments":[6141],"declarations":[{"constant":false,"id":6141,"mutability":"mutable","name":"_len","nameLocation":"10841:4:29","nodeType":"VariableDeclaration","scope":6155,"src":"10833:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"10833:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6144,"initialValue":{"expression":{"id":6142,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6133,"src":"10848:3:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10852:6:29","memberName":"length","nodeType":"MemberAccess","src":"10848:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10833:25:29"},{"assignments":[6146],"declarations":[{"constant":false,"id":6146,"mutability":"mutable","name":"_loc","nameLocation":"10873:4:29","nodeType":"VariableDeclaration","scope":6155,"src":"10865:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10865:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6147,"nodeType":"VariableDeclarationStatement","src":"10865:12:29"},{"AST":{"nodeType":"YulBlock","src":"10892:137:29","statements":[{"nodeType":"YulAssignment","src":"10958:22:29","value":{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"10970:3:29"},{"kind":"number","nodeType":"YulLiteral","src":"10975:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10966:3:29"},"nodeType":"YulFunctionCall","src":"10966:14:29"},"variableNames":[{"name":"_loc","nodeType":"YulIdentifier","src":"10958:4:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6146,"isOffset":false,"isSlot":false,"src":"10958:4:29","valueSize":1},{"declaration":6133,"isOffset":false,"isSlot":false,"src":"10970:3:29","valueSize":1}],"id":6148,"nodeType":"InlineAssembly","src":"10883:146:29"},{"expression":{"arguments":[{"id":6150,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6135,"src":"11048:7:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":6151,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"11057:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6152,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"11063:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6149,"name":"build","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"11042:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":6139,"id":6154,"nodeType":"Return","src":"11035:33:29"}]},"documentation":{"id":6131,"nodeType":"StructuredDocumentation","src":"10373:372:29","text":" @notice          Instantiate a memory view from a byte array.\n @dev             Note that due to Solidity memory representation, it is not possible to\n                  implement a deref, as the `bytes` type stores its len in memory.\n @param arr       The byte array\n @param newType   The type\n @return          bytes29 - The memory view"},"id":6156,"implemented":true,"kind":"function","modifiers":[],"name":"ref","nameLocation":"10757:3:29","nodeType":"FunctionDefinition","parameters":{"id":6136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6133,"mutability":"mutable","name":"arr","nameLocation":"10774:3:29","nodeType":"VariableDeclaration","scope":6156,"src":"10761:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6132,"name":"bytes","nodeType":"ElementaryTypeName","src":"10761:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"newType","nameLocation":"10786:7:29","nodeType":"VariableDeclaration","scope":6156,"src":"10779:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6134,"name":"uint40","nodeType":"ElementaryTypeName","src":"10779:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"10760:34:29"},"returnParameters":{"id":6139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6156,"src":"10818:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6137,"name":"bytes29","nodeType":"ElementaryTypeName","src":"10818:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"10817:9:29"},"scope":6830,"src":"10748:325:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6165,"nodeType":"Block","src":"11323:184:29","statements":[{"AST":{"nodeType":"YulBlock","src":"11338:165:29","statements":[{"nodeType":"YulAssignment","src":"11429:40:29","value":{"arguments":[{"name":"_27_BYTES_IN_BITS","nodeType":"YulIdentifier","src":"11442:17:29"},{"name":"memView","nodeType":"YulIdentifier","src":"11461:7:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11438:3:29"},"nodeType":"YulFunctionCall","src":"11438:31:29"},"variableNames":[{"name":"_type","nodeType":"YulIdentifier","src":"11429:5:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":5771,"isOffset":false,"isSlot":false,"src":"11442:17:29","valueSize":1},{"declaration":6162,"isOffset":false,"isSlot":false,"src":"11429:5:29","valueSize":1},{"declaration":6159,"isOffset":false,"isSlot":false,"src":"11461:7:29","valueSize":1}],"id":6164,"nodeType":"InlineAssembly","src":"11329:174:29"}]},"documentation":{"id":6157,"nodeType":"StructuredDocumentation","src":"11077:173:29","text":" @notice          Return the associated type information.\n @param memView   The memory view\n @return          _type - The type associated with the view"},"id":6166,"implemented":true,"kind":"function","modifiers":[],"name":"typeOf","nameLocation":"11262:6:29","nodeType":"FunctionDefinition","parameters":{"id":6160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6159,"mutability":"mutable","name":"memView","nameLocation":"11277:7:29","nodeType":"VariableDeclaration","scope":6166,"src":"11269:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6158,"name":"bytes29","nodeType":"ElementaryTypeName","src":"11269:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"11268:17:29"},"returnParameters":{"id":6163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6162,"mutability":"mutable","name":"_type","nameLocation":"11316:5:29","nodeType":"VariableDeclaration","scope":6166,"src":"11309:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6161,"name":"uint40","nodeType":"ElementaryTypeName","src":"11309:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"11308:14:29"},"scope":6830,"src":"11253:254:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6179,"nodeType":"Block","src":"11741:266:29","statements":[{"assignments":[6175],"declarations":[{"constant":false,"id":6175,"mutability":"mutable","name":"_mask","nameLocation":"11755:5:29","nodeType":"VariableDeclaration","scope":6179,"src":"11747:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6174,"name":"uint256","nodeType":"ElementaryTypeName","src":"11747:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6177,"initialValue":{"id":6176,"name":"LOW_12_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"11763:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11747:27:29"},{"AST":{"nodeType":"YulBlock","src":"11819:184:29","statements":[{"nodeType":"YulAssignment","src":"11960:37:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11976:3:29","type":"","value":"120"},{"name":"memView","nodeType":"YulIdentifier","src":"11981:7:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11972:3:29"},"nodeType":"YulFunctionCall","src":"11972:17:29"},{"name":"_mask","nodeType":"YulIdentifier","src":"11991:5:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11968:3:29"},"nodeType":"YulFunctionCall","src":"11968:29:29"},"variableNames":[{"name":"_loc","nodeType":"YulIdentifier","src":"11960:4:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6172,"isOffset":false,"isSlot":false,"src":"11960:4:29","valueSize":1},{"declaration":6175,"isOffset":false,"isSlot":false,"src":"11991:5:29","valueSize":1},{"declaration":6169,"isOffset":false,"isSlot":false,"src":"11981:7:29","valueSize":1}],"id":6178,"nodeType":"InlineAssembly","src":"11810:193:29"}]},"documentation":{"id":6167,"nodeType":"StructuredDocumentation","src":"11511:161:29","text":" @notice          Return the memory address of the underlying bytes.\n @param memView   The view\n @return          _loc - The memory address"},"id":6180,"implemented":true,"kind":"function","modifiers":[],"name":"loc","nameLocation":"11684:3:29","nodeType":"FunctionDefinition","parameters":{"id":6170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6169,"mutability":"mutable","name":"memView","nameLocation":"11696:7:29","nodeType":"VariableDeclaration","scope":6180,"src":"11688:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6168,"name":"bytes29","nodeType":"ElementaryTypeName","src":"11688:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"11687:17:29"},"returnParameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"_loc","nameLocation":"11735:4:29","nodeType":"VariableDeclaration","scope":6180,"src":"11728:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6171,"name":"uint96","nodeType":"ElementaryTypeName","src":"11728:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11727:13:29"},"scope":6830,"src":"11675:332:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6200,"nodeType":"Block","src":"12265:51:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6191,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6183,"src":"12291:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6190,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"12287:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12287:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":6189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12279:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6188,"name":"uint256","nodeType":"ElementaryTypeName","src":"12279:7:29","typeDescriptions":{}}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12279:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":6194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:2:29","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"12279:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6196,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12278:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3332","id":6197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12309:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12278:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6187,"id":6199,"nodeType":"Return","src":"12271:40:29"}]},"documentation":{"id":6181,"nodeType":"StructuredDocumentation","src":"12011:187:29","text":" @notice          The number of memory words this memory view occupies, rounded up.\n @param memView   The view\n @return          uint256 - The number of memory words"},"id":6201,"implemented":true,"kind":"function","modifiers":[],"name":"words","nameLocation":"12210:5:29","nodeType":"FunctionDefinition","parameters":{"id":6184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6183,"mutability":"mutable","name":"memView","nameLocation":"12224:7:29","nodeType":"VariableDeclaration","scope":6201,"src":"12216:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6182,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12216:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12215:17:29"},"returnParameters":{"id":6187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6201,"src":"12256:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6185,"name":"uint256","nodeType":"ElementaryTypeName","src":"12256:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12255:9:29"},"scope":6830,"src":"12201:115:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6215,"nodeType":"Block","src":"12591:37:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6210,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"12610:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6209,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"12604:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12604:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12621:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12604:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6208,"id":6214,"nodeType":"Return","src":"12597:26:29"}]},"documentation":{"id":6202,"nodeType":"StructuredDocumentation","src":"12320:200:29","text":" @notice          The in-memory footprint of a fresh copy of the view.\n @param memView   The view\n @return          uint256 - The in-memory footprint of a fresh copy of the view."},"id":6216,"implemented":true,"kind":"function","modifiers":[],"name":"footprint","nameLocation":"12532:9:29","nodeType":"FunctionDefinition","parameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"memView","nameLocation":"12550:7:29","nodeType":"VariableDeclaration","scope":6216,"src":"12542:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6203,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12542:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12541:17:29"},"returnParameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6216,"src":"12582:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6206,"name":"uint256","nodeType":"ElementaryTypeName","src":"12582:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12581:9:29"},"scope":6830,"src":"12523:105:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6229,"nodeType":"Block","src":"12848:190:29","statements":[{"assignments":[6225],"declarations":[{"constant":false,"id":6225,"mutability":"mutable","name":"_mask","nameLocation":"12862:5:29","nodeType":"VariableDeclaration","scope":6229,"src":"12854:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6224,"name":"uint256","nodeType":"ElementaryTypeName","src":"12854:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6227,"initialValue":{"id":6226,"name":"LOW_12_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"12870:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12854:27:29"},{"AST":{"nodeType":"YulBlock","src":"12926:108:29","statements":[{"nodeType":"YulAssignment","src":"12992:36:29","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13008:2:29","type":"","value":"24"},{"name":"memView","nodeType":"YulIdentifier","src":"13012:7:29"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13004:3:29"},"nodeType":"YulFunctionCall","src":"13004:16:29"},{"name":"_mask","nodeType":"YulIdentifier","src":"13022:5:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13000:3:29"},"nodeType":"YulFunctionCall","src":"13000:28:29"},"variableNames":[{"name":"_len","nodeType":"YulIdentifier","src":"12992:4:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6222,"isOffset":false,"isSlot":false,"src":"12992:4:29","valueSize":1},{"declaration":6225,"isOffset":false,"isSlot":false,"src":"13022:5:29","valueSize":1},{"declaration":6219,"isOffset":false,"isSlot":false,"src":"13012:7:29","valueSize":1}],"id":6228,"nodeType":"InlineAssembly","src":"12917:117:29"}]},"documentation":{"id":6217,"nodeType":"StructuredDocumentation","src":"12632:147:29","text":" @notice          The number of bytes of the view.\n @param memView   The view\n @return          _len - The length of the view"},"id":6230,"implemented":true,"kind":"function","modifiers":[],"name":"len","nameLocation":"12791:3:29","nodeType":"FunctionDefinition","parameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"memView","nameLocation":"12803:7:29","nodeType":"VariableDeclaration","scope":6230,"src":"12795:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6218,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12795:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12794:17:29"},"returnParameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"_len","nameLocation":"12842:4:29","nodeType":"VariableDeclaration","scope":6230,"src":"12835:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6221,"name":"uint96","nodeType":"ElementaryTypeName","src":"12835:6:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"12834:13:29"},"scope":6830,"src":"12782:256:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6247,"nodeType":"Block","src":"13262:69:29","statements":[{"id":6246,"nodeType":"UncheckedBlock","src":"13268:59:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":6244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6239,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"13297:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6238,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"13293:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13293:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":6242,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6233,"src":"13312:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6241,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"13308:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13308:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13293:27:29","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6237,"id":6245,"nodeType":"Return","src":"13286:34:29"}]}]},"documentation":{"id":6231,"nodeType":"StructuredDocumentation","src":"13042:155:29","text":" @notice          Returns the endpoint of `memView`.\n @param memView   The view\n @return          uint256 - The endpoint of `memView`"},"id":6248,"implemented":true,"kind":"function","modifiers":[],"name":"end","nameLocation":"13209:3:29","nodeType":"FunctionDefinition","parameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"memView","nameLocation":"13221:7:29","nodeType":"VariableDeclaration","scope":6248,"src":"13213:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6232,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13213:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"13212:17:29"},"returnParameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6236,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6248,"src":"13253:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"13253:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13252:9:29"},"scope":6830,"src":"13200:131:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6293,"nodeType":"Block","src":"13723:219:29","statements":[{"assignments":[6263],"declarations":[{"constant":false,"id":6263,"mutability":"mutable","name":"_loc","nameLocation":"13737:4:29","nodeType":"VariableDeclaration","scope":6293,"src":"13729:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6262,"name":"uint256","nodeType":"ElementaryTypeName","src":"13729:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6267,"initialValue":{"arguments":[{"id":6265,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"13748:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6264,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"13744:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13744:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"13729:27:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6268,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"13809:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6269,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"13816:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13809:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6271,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"13825:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13809:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":6274,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"13836:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6273,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"13832:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13832:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13809:35:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6280,"nodeType":"IfStatement","src":"13805:67:29","trueBody":{"id":6279,"nodeType":"Block","src":"13846:26:29","statements":[{"expression":{"id":6277,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"13861:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":6261,"id":6278,"nodeType":"Return","src":"13854:11:29"}]}},{"expression":{"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6281,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"13878:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6282,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"13885:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6283,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"13892:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13885:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13878:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6286,"nodeType":"ExpressionStatement","src":"13878:20:29"},{"expression":{"arguments":[{"id":6288,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6257,"src":"13917:7:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":6289,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"13926:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6290,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"13932:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6287,"name":"build","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6130,"src":"13911:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13911:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":6261,"id":6292,"nodeType":"Return","src":"13904:33:29"}]},"documentation":{"id":6249,"nodeType":"StructuredDocumentation","src":"13335:255:29","text":" @notice          Safe slicing without memory modification.\n @param memView   The view\n @param _index    The start index\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":6294,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"13602:5:29","nodeType":"FunctionDefinition","parameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"memView","nameLocation":"13621:7:29","nodeType":"VariableDeclaration","scope":6294,"src":"13613:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6250,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13613:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6253,"mutability":"mutable","name":"_index","nameLocation":"13642:6:29","nodeType":"VariableDeclaration","scope":6294,"src":"13634:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6252,"name":"uint256","nodeType":"ElementaryTypeName","src":"13634:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"_len","nameLocation":"13662:4:29","nodeType":"VariableDeclaration","scope":6294,"src":"13654:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6254,"name":"uint256","nodeType":"ElementaryTypeName","src":"13654:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6257,"mutability":"mutable","name":"newType","nameLocation":"13679:7:29","nodeType":"VariableDeclaration","scope":6294,"src":"13672:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6256,"name":"uint40","nodeType":"ElementaryTypeName","src":"13672:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"13607:83:29"},"returnParameters":{"id":6261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6294,"src":"13714:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6259,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13714:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"13713:9:29"},"scope":6830,"src":"13593:349:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6313,"nodeType":"Block","src":"14305:50:29","statements":[{"expression":{"arguments":[{"id":6307,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"14324:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"hexValue":"30","id":6308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14333:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6309,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6299,"src":"14336:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6310,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6301,"src":"14342:7:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":6306,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"14318:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint256_$_t_uint40_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256,uint256,uint40) pure returns (bytes29)"}},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14318:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":6305,"id":6312,"nodeType":"Return","src":"14311:39:29"}]},"documentation":{"id":6295,"nodeType":"StructuredDocumentation","src":"13946:245:29","text":" @notice          Shortcut to `slice`. Gets a view representing the first `_len` bytes.\n @param memView   The view\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":6314,"implemented":true,"kind":"function","modifiers":[],"name":"prefix","nameLocation":"14203:6:29","nodeType":"FunctionDefinition","parameters":{"id":6302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"memView","nameLocation":"14223:7:29","nodeType":"VariableDeclaration","scope":6314,"src":"14215:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6296,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14215:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6299,"mutability":"mutable","name":"_len","nameLocation":"14244:4:29","nodeType":"VariableDeclaration","scope":6314,"src":"14236:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6298,"name":"uint256","nodeType":"ElementaryTypeName","src":"14236:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6301,"mutability":"mutable","name":"newType","nameLocation":"14261:7:29","nodeType":"VariableDeclaration","scope":6314,"src":"14254:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6300,"name":"uint40","nodeType":"ElementaryTypeName","src":"14254:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14209:63:29"},"returnParameters":{"id":6305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6314,"src":"14296:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6303,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14296:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"14295:9:29"},"scope":6830,"src":"14194:161:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6340,"nodeType":"Block","src":"14717:77:29","statements":[{"expression":{"arguments":[{"id":6327,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"14736:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6331,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6317,"src":"14757:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6330,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"14753:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14753:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":6329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14745:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6328,"name":"uint256","nodeType":"ElementaryTypeName","src":"14745:7:29","typeDescriptions":{}}},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14745:21:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6334,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"14769:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14745:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6336,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6319,"src":"14775:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6337,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"14781:7:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":6326,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"14730:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint256_$_t_uint40_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256,uint256,uint40) pure returns (bytes29)"}},"id":6338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14730:59:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":6325,"id":6339,"nodeType":"Return","src":"14723:66:29"}]},"documentation":{"id":6315,"nodeType":"StructuredDocumentation","src":"14359:243:29","text":" @notice          Shortcut to `slice`. Gets a view representing the last `_len` byte.\n @param memView   The view\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":6341,"implemented":true,"kind":"function","modifiers":[],"name":"postfix","nameLocation":"14614:7:29","nodeType":"FunctionDefinition","parameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"memView","nameLocation":"14635:7:29","nodeType":"VariableDeclaration","scope":6341,"src":"14627:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6316,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14627:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6319,"mutability":"mutable","name":"_len","nameLocation":"14656:4:29","nodeType":"VariableDeclaration","scope":6341,"src":"14648:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6318,"name":"uint256","nodeType":"ElementaryTypeName","src":"14648:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6321,"mutability":"mutable","name":"newType","nameLocation":"14673:7:29","nodeType":"VariableDeclaration","scope":6341,"src":"14666:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6320,"name":"uint40","nodeType":"ElementaryTypeName","src":"14666:6:29","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14621:63:29"},"returnParameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6341,"src":"14708:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6323,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14708:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"14707:9:29"},"scope":6830,"src":"14605:189:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6416,"nodeType":"Block","src":"15391:698:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6353,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"15401:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15411:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15401:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6362,"nodeType":"IfStatement","src":"15397:49:29","trueBody":{"id":6361,"nodeType":"Block","src":"15414:32:29","statements":[{"expression":{"arguments":[{"hexValue":"30","id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15437:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15429:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":6356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15429:7:29","typeDescriptions":{}}},"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15429:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6352,"id":6360,"nodeType":"Return","src":"15422:17:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6363,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"15455:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6364,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"15464:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"15455:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":6367,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15477:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6366,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"15473:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15473:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"15455:30:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6385,"nodeType":"IfStatement","src":"15451:282:29","trueBody":{"id":6384,"nodeType":"Block","src":"15487:246:29","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":6372,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15678:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6371,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"15674:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15674:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"arguments":[{"id":6375,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15692:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6374,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"15688:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15688:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":6377,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6346,"src":"15702:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6380,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"15718:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:29","typeDescriptions":{}}},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6370,"name":"TypedMemView__index_overrun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"15646:27:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256) pure"}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15646:80:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6383,"nodeType":"RevertStatement","src":"15639:87:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6386,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"15742:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3332","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15751:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"15742:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6392,"nodeType":"IfStatement","src":"15738:66:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6389,"name":"TypedMemView__index_indexMoreThan32Bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"15762:40:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15762:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6391,"nodeType":"RevertStatement","src":"15755:49:29"}},{"assignments":[6394],"declarations":[{"constant":false,"id":6394,"mutability":"mutable","name":"bitLength","nameLocation":"15817:9:29","nodeType":"VariableDeclaration","scope":6416,"src":"15811:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6393,"name":"uint8","nodeType":"ElementaryTypeName","src":"15811:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6395,"nodeType":"VariableDeclarationStatement","src":"15811:15:29"},{"id":6402,"nodeType":"UncheckedBlock","src":"15832:47:29","statements":[{"expression":{"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6396,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"15850:9:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6397,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"15862:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15871:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"15862:10:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"15850:22:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6401,"nodeType":"ExpressionStatement","src":"15850:22:29"}]},{"assignments":[6404],"declarations":[{"constant":false,"id":6404,"mutability":"mutable","name":"_loc","nameLocation":"15892:4:29","nodeType":"VariableDeclaration","scope":6416,"src":"15884:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6403,"name":"uint256","nodeType":"ElementaryTypeName","src":"15884:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6408,"initialValue":{"arguments":[{"id":6406,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6344,"src":"15903:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6405,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"15899:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15899:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"15884:27:29"},{"assignments":[6410],"declarations":[{"constant":false,"id":6410,"mutability":"mutable","name":"_mask","nameLocation":"15925:5:29","nodeType":"VariableDeclaration","scope":6416,"src":"15917:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6409,"name":"uint256","nodeType":"ElementaryTypeName","src":"15917:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6414,"initialValue":{"arguments":[{"id":6412,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6394,"src":"15942:9:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6411,"name":"leftMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"15933:8:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint8) pure returns (uint256)"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15933:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15917:35:29"},{"AST":{"nodeType":"YulBlock","src":"15967:118:29","statements":[{"nodeType":"YulAssignment","src":"16033:46:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_loc","nodeType":"YulIdentifier","src":"16057:4:29"},{"name":"_index","nodeType":"YulIdentifier","src":"16063:6:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16053:3:29"},"nodeType":"YulFunctionCall","src":"16053:17:29"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16047:5:29"},"nodeType":"YulFunctionCall","src":"16047:24:29"},{"name":"_mask","nodeType":"YulIdentifier","src":"16073:5:29"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16043:3:29"},"nodeType":"YulFunctionCall","src":"16043:36:29"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16033:6:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6346,"isOffset":false,"isSlot":false,"src":"16063:6:29","valueSize":1},{"declaration":6404,"isOffset":false,"isSlot":false,"src":"16057:4:29","valueSize":1},{"declaration":6410,"isOffset":false,"isSlot":false,"src":"16073:5:29","valueSize":1},{"declaration":6351,"isOffset":false,"isSlot":false,"src":"16033:6:29","valueSize":1}],"id":6415,"nodeType":"InlineAssembly","src":"15958:127:29"}]},"documentation":{"id":6342,"nodeType":"StructuredDocumentation","src":"14798:473:29","text":" @notice          Load up to 32 bytes from the view onto the stack.\n @dev             Returns a bytes32 with only the `_bytes` highest bytes set.\n                  This can be immediately cast to a smaller fixed-length byte array.\n                  To automatically cast to an integer, use `indexUint`.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The 32 byte result"},"id":6417,"implemented":true,"kind":"function","modifiers":[],"name":"index","nameLocation":"15283:5:29","nodeType":"FunctionDefinition","parameters":{"id":6349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6344,"mutability":"mutable","name":"memView","nameLocation":"15302:7:29","nodeType":"VariableDeclaration","scope":6417,"src":"15294:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6343,"name":"bytes29","nodeType":"ElementaryTypeName","src":"15294:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6346,"mutability":"mutable","name":"_index","nameLocation":"15323:6:29","nodeType":"VariableDeclaration","scope":6417,"src":"15315:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6345,"name":"uint256","nodeType":"ElementaryTypeName","src":"15315:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6348,"mutability":"mutable","name":"_bytes","nameLocation":"15341:6:29","nodeType":"VariableDeclaration","scope":6417,"src":"15335:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6347,"name":"uint8","nodeType":"ElementaryTypeName","src":"15335:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15288:63:29"},"returnParameters":{"id":6352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6351,"mutability":"mutable","name":"result","nameLocation":"15383:6:29","nodeType":"VariableDeclaration","scope":6417,"src":"15375:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15375:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15374:16:29"},"scope":6830,"src":"15274:815:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6446,"nodeType":"Block","src":"16538:80:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6432,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6420,"src":"16565:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":6433,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"16574:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6434,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"16582:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6431,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"16559:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16559:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16551:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6429,"name":"uint256","nodeType":"ElementaryTypeName","src":"16551:7:29","typeDescriptions":{}}},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16551:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":6437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16596:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6438,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"16601:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16596:11:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16595:13:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16611:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"16595:17:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":6443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16594:19:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16551:62:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6428,"id":6445,"nodeType":"Return","src":"16544:69:29"}]},"documentation":{"id":6418,"nodeType":"StructuredDocumentation","src":"16093:321:29","text":" @notice          Parse an unsigned integer from the view at `_index`.\n @dev             Requires that the view have >= `_bytes` bytes following that index.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The unsigned integer"},"id":6447,"implemented":true,"kind":"function","modifiers":[],"name":"indexUint","nameLocation":"16426:9:29","nodeType":"FunctionDefinition","parameters":{"id":6425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"memView","nameLocation":"16449:7:29","nodeType":"VariableDeclaration","scope":6447,"src":"16441:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6419,"name":"bytes29","nodeType":"ElementaryTypeName","src":"16441:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6422,"mutability":"mutable","name":"_index","nameLocation":"16470:6:29","nodeType":"VariableDeclaration","scope":6447,"src":"16462:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6421,"name":"uint256","nodeType":"ElementaryTypeName","src":"16462:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6424,"mutability":"mutable","name":"_bytes","nameLocation":"16488:6:29","nodeType":"VariableDeclaration","scope":6447,"src":"16482:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6423,"name":"uint8","nodeType":"ElementaryTypeName","src":"16482:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16435:63:29"},"returnParameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6427,"mutability":"mutable","name":"result","nameLocation":"16530:6:29","nodeType":"VariableDeclaration","scope":6447,"src":"16522:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6426,"name":"uint256","nodeType":"ElementaryTypeName","src":"16522:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16521:16:29"},"scope":6830,"src":"16417:201:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6470,"nodeType":"Block","src":"16967:73:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6463,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6450,"src":"17009:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":6464,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6452,"src":"17018:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6465,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"17026:6:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6462,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6417,"src":"17003:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17003:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6461,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16995:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6460,"name":"uint256","nodeType":"ElementaryTypeName","src":"16995:7:29","typeDescriptions":{}}},"id":6467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16995:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6459,"name":"reverseUint256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"16980:14:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16980:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6458,"id":6469,"nodeType":"Return","src":"16973:62:29"}]},"documentation":{"id":6448,"nodeType":"StructuredDocumentation","src":"16622:219:29","text":" @notice          Parse an unsigned integer from LE bytes.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The unsigned integer"},"id":6471,"implemented":true,"kind":"function","modifiers":[],"name":"indexLEUint","nameLocation":"16853:11:29","nodeType":"FunctionDefinition","parameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6450,"mutability":"mutable","name":"memView","nameLocation":"16878:7:29","nodeType":"VariableDeclaration","scope":6471,"src":"16870:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6449,"name":"bytes29","nodeType":"ElementaryTypeName","src":"16870:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6452,"mutability":"mutable","name":"_index","nameLocation":"16899:6:29","nodeType":"VariableDeclaration","scope":6471,"src":"16891:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6451,"name":"uint256","nodeType":"ElementaryTypeName","src":"16891:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6454,"mutability":"mutable","name":"_bytes","nameLocation":"16917:6:29","nodeType":"VariableDeclaration","scope":6471,"src":"16911:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6453,"name":"uint8","nodeType":"ElementaryTypeName","src":"16911:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16864:63:29"},"returnParameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6457,"mutability":"mutable","name":"result","nameLocation":"16959:6:29","nodeType":"VariableDeclaration","scope":6471,"src":"16951:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6456,"name":"uint256","nodeType":"ElementaryTypeName","src":"16951:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16950:16:29"},"scope":6830,"src":"16844:196:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6493,"nodeType":"Block","src":"17400:66:29","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6486,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6474,"src":"17439:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":6487,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6476,"src":"17448:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3230","id":6488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17456:2:29","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":6485,"name":"indexUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6447,"src":"17429:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":6489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17429:30:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17421:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6483,"name":"uint160","nodeType":"ElementaryTypeName","src":"17421:7:29","typeDescriptions":{}}},"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17421:39:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17413:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6481,"name":"address","nodeType":"ElementaryTypeName","src":"17413:7:29","typeDescriptions":{}}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17413:48:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6480,"id":6492,"nodeType":"Return","src":"17406:55:29"}]},"documentation":{"id":6472,"nodeType":"StructuredDocumentation","src":"17044:266:29","text":" @notice          Parse an address from the view at `_index`. Requires that the view have >= 20 bytes\n                  following that index.\n @param memView   The view\n @param _index    The index\n @return          address - The address"},"id":6494,"implemented":true,"kind":"function","modifiers":[],"name":"indexAddress","nameLocation":"17322:12:29","nodeType":"FunctionDefinition","parameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6474,"mutability":"mutable","name":"memView","nameLocation":"17343:7:29","nodeType":"VariableDeclaration","scope":6494,"src":"17335:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6473,"name":"bytes29","nodeType":"ElementaryTypeName","src":"17335:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6476,"mutability":"mutable","name":"_index","nameLocation":"17360:6:29","nodeType":"VariableDeclaration","scope":6494,"src":"17352:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6475,"name":"uint256","nodeType":"ElementaryTypeName","src":"17352:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17334:33:29"},"returnParameters":{"id":6480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6494,"src":"17391:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6478,"name":"address","nodeType":"ElementaryTypeName","src":"17391:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17390:9:29"},"scope":6830,"src":"17313:153:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6515,"nodeType":"Block","src":"17733:188:29","statements":[{"assignments":[6503],"declarations":[{"constant":false,"id":6503,"mutability":"mutable","name":"_loc","nameLocation":"17747:4:29","nodeType":"VariableDeclaration","scope":6515,"src":"17739:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"17739:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6507,"initialValue":{"arguments":[{"id":6505,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"17758:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6504,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"17754:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17754:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"17739:27:29"},{"assignments":[6509],"declarations":[{"constant":false,"id":6509,"mutability":"mutable","name":"_len","nameLocation":"17780:4:29","nodeType":"VariableDeclaration","scope":6515,"src":"17772:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"17772:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6513,"initialValue":{"arguments":[{"id":6511,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6497,"src":"17791:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6510,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"17787:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17787:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"17772:27:29"},{"AST":{"nodeType":"YulBlock","src":"17814:103:29","statements":[{"nodeType":"YulAssignment","src":"17880:31:29","value":{"arguments":[{"name":"_loc","nodeType":"YulIdentifier","src":"17900:4:29"},{"name":"_len","nodeType":"YulIdentifier","src":"17906:4:29"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17890:9:29"},"nodeType":"YulFunctionCall","src":"17890:21:29"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"17880:6:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6509,"isOffset":false,"isSlot":false,"src":"17906:4:29","valueSize":1},{"declaration":6503,"isOffset":false,"isSlot":false,"src":"17900:4:29","valueSize":1},{"declaration":6500,"isOffset":false,"isSlot":false,"src":"17880:6:29","valueSize":1}],"id":6514,"nodeType":"InlineAssembly","src":"17805:112:29"}]},"documentation":{"id":6495,"nodeType":"StructuredDocumentation","src":"17470:188:29","text":" @notice          Return the keccak256 hash of the underlying memory\n @param memView   The view\n @return          digest - The keccak256 hash of the underlying memory"},"id":6516,"implemented":true,"kind":"function","modifiers":[],"name":"keccak","nameLocation":"17670:6:29","nodeType":"FunctionDefinition","parameters":{"id":6498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6497,"mutability":"mutable","name":"memView","nameLocation":"17685:7:29","nodeType":"VariableDeclaration","scope":6516,"src":"17677:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6496,"name":"bytes29","nodeType":"ElementaryTypeName","src":"17677:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"17676:17:29"},"returnParameters":{"id":6501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6500,"mutability":"mutable","name":"digest","nameLocation":"17725:6:29","nodeType":"VariableDeclaration","scope":6516,"src":"17717:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17717:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17716:16:29"},"scope":6830,"src":"17661:260:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6551,"nodeType":"Block","src":"18241:103:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6527,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"18259:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6526,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"18255:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18255:9:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6530,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"18272:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6529,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"18268:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18268:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18255:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6534,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"18286:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6533,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"18282:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18282:9:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6537,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"18299:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6536,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"18295:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18295:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18282:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18255:50:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18254:52:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6543,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"18317:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6542,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"18310:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18310:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6546,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"18333:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6545,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"18326:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18310:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18254:85:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6525,"id":6550,"nodeType":"Return","src":"18247:92:29"}]},"documentation":{"id":6517,"nodeType":"StructuredDocumentation","src":"17925:233:29","text":" @notice          Return true if the underlying memory is equal. Else false.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the underlying memory is equal"},"id":6552,"implemented":true,"kind":"function","modifiers":[],"name":"untypedEqual","nameLocation":"18170:12:29","nodeType":"FunctionDefinition","parameters":{"id":6522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6519,"mutability":"mutable","name":"left","nameLocation":"18191:4:29","nodeType":"VariableDeclaration","scope":6552,"src":"18183:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6518,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18183:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6521,"mutability":"mutable","name":"right","nameLocation":"18205:5:29","nodeType":"VariableDeclaration","scope":6552,"src":"18197:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6520,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18197:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"18182:29:29"},"returnParameters":{"id":6525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6552,"src":"18235:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6523,"name":"bool","nodeType":"ElementaryTypeName","src":"18235:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18234:6:29"},"scope":6830,"src":"18161:183:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6568,"nodeType":"Block","src":"18668:44:29","statements":[{"expression":{"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18681:26:29","subExpression":{"arguments":[{"id":6563,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"18695:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":6564,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"18701:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6562,"name":"untypedEqual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"18682:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29,bytes29) pure returns (bool)"}},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18682:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6561,"id":6567,"nodeType":"Return","src":"18674:33:29"}]},"documentation":{"id":6553,"nodeType":"StructuredDocumentation","src":"18348:234:29","text":" @notice          Return false if the underlying memory is equal. Else true.\n @param left      The first view\n @param right     The second view\n @return          bool - False if the underlying memory is equal"},"id":6569,"implemented":true,"kind":"function","modifiers":[],"name":"untypedNotEqual","nameLocation":"18594:15:29","nodeType":"FunctionDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6555,"mutability":"mutable","name":"left","nameLocation":"18618:4:29","nodeType":"VariableDeclaration","scope":6569,"src":"18610:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6554,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18610:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6557,"mutability":"mutable","name":"right","nameLocation":"18632:5:29","nodeType":"VariableDeclaration","scope":6569,"src":"18624:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6556,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18624:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"18609:29:29"},"returnParameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6569,"src":"18662:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6559,"name":"bool","nodeType":"ElementaryTypeName","src":"18662:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18661:6:29"},"scope":6830,"src":"18585:127:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6600,"nodeType":"Block","src":"19081:99:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6579,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"19094:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6580,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"19102:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"19094:13:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6583,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"19119:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6582,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"19112:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19112:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6586,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"19135:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6585,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"19128:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":6587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19128:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"19112:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6590,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"19152:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6589,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"19145:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19145:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":6593,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"19168:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6592,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"19161:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":6594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19161:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19145:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19112:62:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19111:64:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19094:81:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6578,"id":6599,"nodeType":"Return","src":"19087:88:29"}]},"documentation":{"id":6570,"nodeType":"StructuredDocumentation","src":"18716:289:29","text":" @notice          Compares type equality.\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the types are the same"},"id":6601,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"19017:5:29","nodeType":"FunctionDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"left","nameLocation":"19031:4:29","nodeType":"VariableDeclaration","scope":6601,"src":"19023:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6571,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19023:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6574,"mutability":"mutable","name":"right","nameLocation":"19045:5:29","nodeType":"VariableDeclaration","scope":6601,"src":"19037:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6573,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19037:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"19022:29:29"},"returnParameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6601,"src":"19075:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6576,"name":"bool","nodeType":"ElementaryTypeName","src":"19075:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19074:6:29"},"scope":6830,"src":"19008:172:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"19558:37:29","statements":[{"expression":{"id":6615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19571:19:29","subExpression":{"arguments":[{"id":6612,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"19578:4:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":6613,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6606,"src":"19584:5:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6611,"name":"equal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6601,"src":"19572:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29,bytes29) pure returns (bool)"}},"id":6614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19572:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6610,"id":6616,"nodeType":"Return","src":"19564:26:29"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"19184:295:29","text":" @notice          Compares type inequality.\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the types are not the same"},"id":6618,"implemented":true,"kind":"function","modifiers":[],"name":"notEqual","nameLocation":"19491:8:29","nodeType":"FunctionDefinition","parameters":{"id":6607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"left","nameLocation":"19508:4:29","nodeType":"VariableDeclaration","scope":6618,"src":"19500:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6603,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19500:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6606,"mutability":"mutable","name":"right","nameLocation":"19522:5:29","nodeType":"VariableDeclaration","scope":6618,"src":"19514:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6605,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19514:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"19499:29:29"},"returnParameters":{"id":6610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6618,"src":"19552:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6608,"name":"bool","nodeType":"ElementaryTypeName","src":"19552:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19551:6:29"},"scope":6830,"src":"19482:113:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6677,"nodeType":"Block","src":"20228:798:29","statements":[{"condition":{"arguments":[{"id":6629,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"20245:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6628,"name":"isNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"20238:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20238:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6634,"nodeType":"IfStatement","src":"20234:68:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6631,"name":"TypedMemView__unsafeCopyTo_nullPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5794,"src":"20262:38:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20262:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6633,"nodeType":"RevertStatement","src":"20255:47:29"}},{"condition":{"arguments":[{"id":6636,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"20323:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6635,"name":"isNotValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5968,"src":"20312:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20312:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6641,"nodeType":"IfStatement","src":"20308:75:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6638,"name":"TypedMemView__unsafeCopyTo_invalidPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5796,"src":"20340:41:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20340:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6640,"nodeType":"RevertStatement","src":"20333:50:29"}},{"assignments":[6643],"declarations":[{"constant":false,"id":6643,"mutability":"mutable","name":"_len","nameLocation":"20398:4:29","nodeType":"VariableDeclaration","scope":6677,"src":"20390:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6642,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6647,"initialValue":{"arguments":[{"id":6645,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"20409:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6644,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"20405:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20405:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"20390:27:29"},{"assignments":[6649],"declarations":[{"constant":false,"id":6649,"mutability":"mutable","name":"_oldLoc","nameLocation":"20431:7:29","nodeType":"VariableDeclaration","scope":6677,"src":"20423:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6648,"name":"uint256","nodeType":"ElementaryTypeName","src":"20423:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6653,"initialValue":{"arguments":[{"id":6651,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"20445:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6650,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"20441:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20441:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"20423:30:29"},{"assignments":[6655],"declarations":[{"constant":false,"id":6655,"mutability":"mutable","name":"ptr","nameLocation":"20468:3:29","nodeType":"VariableDeclaration","scope":6677,"src":"20460:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6654,"name":"uint256","nodeType":"ElementaryTypeName","src":"20460:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6656,"nodeType":"VariableDeclarationStatement","src":"20460:11:29"},{"assignments":[6658],"declarations":[{"constant":false,"id":6658,"mutability":"mutable","name":"res","nameLocation":"20482:3:29","nodeType":"VariableDeclaration","scope":6677,"src":"20477:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6657,"name":"bool","nodeType":"ElementaryTypeName","src":"20477:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6659,"nodeType":"VariableDeclarationStatement","src":"20477:8:29"},{"AST":{"nodeType":"YulBlock","src":"20500:391:29","statements":[{"nodeType":"YulAssignment","src":"20566:18:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20579:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20573:5:29"},"nodeType":"YulFunctionCall","src":"20573:11:29"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"20566:3:29"}]},{"body":{"nodeType":"YulBlock","src":"20663:60:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20680:4:29","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"20686:4:29","type":"","value":"0x20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20673:6:29"},"nodeType":"YulFunctionCall","src":"20673:18:29"},"nodeType":"YulExpressionStatement","src":"20673:18:29"}]},"condition":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"20649:3:29"},{"name":"_newLoc","nodeType":"YulIdentifier","src":"20654:7:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20646:2:29"},"nodeType":"YulFunctionCall","src":"20646:16:29"},"nodeType":"YulIf","src":"20643:80:29"},{"nodeType":"YulAssignment","src":"20828:57:29","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"20846:3:29"},"nodeType":"YulFunctionCall","src":"20846:5:29"},{"kind":"number","nodeType":"YulLiteral","src":"20853:1:29","type":"","value":"4"},{"name":"_oldLoc","nodeType":"YulIdentifier","src":"20856:7:29"},{"name":"_len","nodeType":"YulIdentifier","src":"20865:4:29"},{"name":"_newLoc","nodeType":"YulIdentifier","src":"20871:7:29"},{"name":"_len","nodeType":"YulIdentifier","src":"20880:4:29"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"20835:10:29"},"nodeType":"YulFunctionCall","src":"20835:50:29"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"20828:3:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6643,"isOffset":false,"isSlot":false,"src":"20865:4:29","valueSize":1},{"declaration":6643,"isOffset":false,"isSlot":false,"src":"20880:4:29","valueSize":1},{"declaration":6623,"isOffset":false,"isSlot":false,"src":"20654:7:29","valueSize":1},{"declaration":6623,"isOffset":false,"isSlot":false,"src":"20871:7:29","valueSize":1},{"declaration":6649,"isOffset":false,"isSlot":false,"src":"20856:7:29","valueSize":1},{"declaration":6655,"isOffset":false,"isSlot":false,"src":"20566:3:29","valueSize":1},{"declaration":6655,"isOffset":false,"isSlot":false,"src":"20649:3:29","valueSize":1},{"declaration":6658,"isOffset":false,"isSlot":false,"src":"20828:3:29","valueSize":1}],"id":6660,"nodeType":"InlineAssembly","src":"20491:400:29"},{"condition":{"id":6662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20900:4:29","subExpression":{"id":6661,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6658,"src":"20901:3:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6666,"nodeType":"IfStatement","src":"20896:57:29","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6663,"name":"TypedMemView__unsafeCopyTo_identityOOG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"20913:38:29","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":6664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20913:40:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6665,"nodeType":"RevertStatement","src":"20906:47:29"}},{"expression":{"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6667,"name":"written","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6626,"src":"20959:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":6670,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"20997:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6669,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6166,"src":"20990:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20990:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":6672,"name":"_newLoc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6623,"src":"21007:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6673,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"21016:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6668,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"20969:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20969:52:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"20959:62:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6676,"nodeType":"ExpressionStatement","src":"20959:62:29"}]},"documentation":{"id":6619,"nodeType":"StructuredDocumentation","src":"19599:531:29","text":" @notice          Copy the view to a location, return an unsafe memory reference\n @dev             Super Dangerous direct memory access.\n                  This reference can be overwritten if anything else modifies memory (!!!).\n                  As such it MUST be consumed IMMEDIATELY.\n                  This function is private to prevent unsafe usage by callers.\n @param memView   The view\n @param _newLoc   The new location\n @return          written - the unsafe memory reference"},"id":6678,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeCopyTo","nameLocation":"20142:12:29","nodeType":"FunctionDefinition","parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6621,"mutability":"mutable","name":"memView","nameLocation":"20163:7:29","nodeType":"VariableDeclaration","scope":6678,"src":"20155:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6620,"name":"bytes29","nodeType":"ElementaryTypeName","src":"20155:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":6623,"mutability":"mutable","name":"_newLoc","nameLocation":"20180:7:29","nodeType":"VariableDeclaration","scope":6678,"src":"20172:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6622,"name":"uint256","nodeType":"ElementaryTypeName","src":"20172:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20154:34:29"},"returnParameters":{"id":6627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6626,"mutability":"mutable","name":"written","nameLocation":"20219:7:29","nodeType":"VariableDeclaration","scope":6678,"src":"20211:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6625,"name":"bytes29","nodeType":"ElementaryTypeName","src":"20211:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"20210:17:29"},"scope":6830,"src":"20133:893:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6705,"nodeType":"Block","src":"21453:483:29","statements":[{"assignments":[6687],"declarations":[{"constant":false,"id":6687,"mutability":"mutable","name":"ptr","nameLocation":"21467:3:29","nodeType":"VariableDeclaration","scope":6705,"src":"21459:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6686,"name":"uint256","nodeType":"ElementaryTypeName","src":"21459:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6688,"nodeType":"VariableDeclarationStatement","src":"21459:11:29"},{"assignments":[6690],"declarations":[{"constant":false,"id":6690,"mutability":"mutable","name":"_len","nameLocation":"21484:4:29","nodeType":"VariableDeclaration","scope":6705,"src":"21476:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"21476:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6694,"initialValue":{"arguments":[{"id":6692,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"21495:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6691,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"21491:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21491:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"21476:27:29"},{"AST":{"nodeType":"YulBlock","src":"21518:137:29","statements":[{"nodeType":"YulAssignment","src":"21584:18:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21597:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21591:5:29"},"nodeType":"YulFunctionCall","src":"21591:11:29"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"21584:3:29"}]},{"nodeType":"YulAssignment","src":"21639:10:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21646:3:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21639:3:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6687,"isOffset":false,"isSlot":false,"src":"21584:3:29","valueSize":1},{"declaration":6687,"isOffset":false,"isSlot":false,"src":"21646:3:29","valueSize":1},{"declaration":6684,"isOffset":false,"isSlot":false,"src":"21639:3:29","valueSize":1}],"id":6695,"nodeType":"InlineAssembly","src":"21509:146:29"},{"id":6703,"nodeType":"UncheckedBlock","src":"21660:58:29","statements":[{"expression":{"arguments":[{"id":6697,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"21691:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6698,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6687,"src":"21700:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21706:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"21700:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6696,"name":"unsafeCopyTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"21678:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256) view returns (bytes29)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21678:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6702,"nodeType":"ExpressionStatement","src":"21678:33:29"}]},{"AST":{"nodeType":"YulBlock","src":"21732:200:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21805:4:29","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21819:3:29"},{"name":"_len","nodeType":"YulIdentifier","src":"21824:4:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21815:3:29"},"nodeType":"YulFunctionCall","src":"21815:14:29"},{"kind":"number","nodeType":"YulLiteral","src":"21831:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21811:3:29"},"nodeType":"YulFunctionCall","src":"21811:25:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21798:6:29"},"nodeType":"YulFunctionCall","src":"21798:39:29"},"nodeType":"YulExpressionStatement","src":"21798:39:29"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21879:3:29"},{"name":"_len","nodeType":"YulIdentifier","src":"21884:4:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21872:6:29"},"nodeType":"YulFunctionCall","src":"21872:17:29"},"nodeType":"YulExpressionStatement","src":"21872:17:29"}]},"evmVersion":"london","externalReferences":[{"declaration":6690,"isOffset":false,"isSlot":false,"src":"21824:4:29","valueSize":1},{"declaration":6690,"isOffset":false,"isSlot":false,"src":"21884:4:29","valueSize":1},{"declaration":6687,"isOffset":false,"isSlot":false,"src":"21819:3:29","valueSize":1},{"declaration":6687,"isOffset":false,"isSlot":false,"src":"21879:3:29","valueSize":1}],"id":6704,"nodeType":"InlineAssembly","src":"21723:209:29"}]},"documentation":{"id":6679,"nodeType":"StructuredDocumentation","src":"21030:347:29","text":" @notice          Copies the referenced memory to a new loc in memory, returning a `bytes` pointing to\n                  the new memory\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param memView   The view\n @return          ret - The view pointing to the new memory"},"id":6706,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"21389:5:29","nodeType":"FunctionDefinition","parameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"memView","nameLocation":"21403:7:29","nodeType":"VariableDeclaration","scope":6706,"src":"21395:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6680,"name":"bytes29","nodeType":"ElementaryTypeName","src":"21395:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"21394:17:29"},"returnParameters":{"id":6685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6684,"mutability":"mutable","name":"ret","nameLocation":"21448:3:29","nodeType":"VariableDeclaration","scope":6706,"src":"21435:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6683,"name":"bytes","nodeType":"ElementaryTypeName","src":"21435:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21434:18:29"},"scope":6830,"src":"21380:556:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6767,"nodeType":"Block","src":"22570:583:29","statements":[{"AST":{"nodeType":"YulBlock","src":"22585:235:29","statements":[{"nodeType":"YulVariableDeclaration","src":"22651:22:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22668:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22662:5:29"},"nodeType":"YulFunctionCall","src":"22662:11:29"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"22655:3:29","type":""}]},{"body":{"nodeType":"YulBlock","src":"22754:60:29","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22771:4:29","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"22777:4:29","type":"","value":"0x20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22764:6:29"},"nodeType":"YulFunctionCall","src":"22764:18:29"},"nodeType":"YulExpressionStatement","src":"22764:18:29"}]},"condition":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22738:3:29"},{"name":"_location","nodeType":"YulIdentifier","src":"22743:9:29"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22735:2:29"},"nodeType":"YulFunctionCall","src":"22735:18:29"},"nodeType":"YulIf","src":"22732:82:29"}]},"evmVersion":"london","externalReferences":[{"declaration":6712,"isOffset":false,"isSlot":false,"src":"22743:9:29","valueSize":1}],"id":6717,"nodeType":"InlineAssembly","src":"22576:244:29"},{"assignments":[6719],"declarations":[{"constant":false,"id":6719,"mutability":"mutable","name":"_offset","nameLocation":"22834:7:29","nodeType":"VariableDeclaration","scope":6767,"src":"22826:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6718,"name":"uint256","nodeType":"ElementaryTypeName","src":"22826:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6721,"initialValue":{"hexValue":"30","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22826:19:29"},{"assignments":[6723],"declarations":[{"constant":false,"id":6723,"mutability":"mutable","name":"_len","nameLocation":"22859:4:29","nodeType":"VariableDeclaration","scope":6767,"src":"22851:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6722,"name":"uint256","nodeType":"ElementaryTypeName","src":"22851:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6726,"initialValue":{"expression":{"id":6724,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"22866:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22875:6:29","memberName":"length","nodeType":"MemberAccess","src":"22866:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22851:30:29"},{"body":{"id":6757,"nodeType":"Block","src":"22919:168:29","statements":[{"assignments":[6735],"declarations":[{"constant":false,"id":6735,"mutability":"mutable","name":"memView","nameLocation":"22935:7:29","nodeType":"VariableDeclaration","scope":6757,"src":"22927:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6734,"name":"bytes29","nodeType":"ElementaryTypeName","src":"22927:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":6739,"initialValue":{"baseExpression":{"id":6736,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"22945:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},"id":6738,"indexExpression":{"id":6737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"22954:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22945:11:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"22927:29:29"},{"id":6756,"nodeType":"UncheckedBlock","src":"22964:117:29","statements":[{"expression":{"arguments":[{"id":6741,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"22997:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"_location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"23006:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6743,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"23018:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23006:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6740,"name":"unsafeCopyTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"22984:12:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256) view returns (bytes29)"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22984:42:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6746,"nodeType":"ExpressionStatement","src":"22984:42:29"},{"expression":{"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6747,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"23036:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":6749,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6735,"src":"23051:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6748,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"23047:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23047:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"23036:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6752,"nodeType":"ExpressionStatement","src":"23036:23:29"},{"expression":{"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"23069:3:29","subExpression":{"id":6753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"23071:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6755,"nodeType":"ExpressionStatement","src":"23069:3:29"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6728,"src":"22907:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6732,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6723,"src":"22911:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22907:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6758,"initializationExpression":{"assignments":[6728],"declarations":[{"constant":false,"id":6728,"mutability":"mutable","name":"i","nameLocation":"22900:1:29","nodeType":"VariableDeclaration","scope":6758,"src":"22892:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6727,"name":"uint256","nodeType":"ElementaryTypeName","src":"22892:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6730,"initialValue":{"hexValue":"30","id":6729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22904:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22892:13:29"},"nodeType":"ForStatement","src":"22887:200:29"},{"expression":{"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6759,"name":"unsafeView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"23092:10:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":6761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23126:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":6762,"name":"_location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"23129:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6763,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"23140:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6760,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"23105:20:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":6764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23105:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"23092:56:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6766,"nodeType":"ExpressionStatement","src":"23092:56:29"}]},"documentation":{"id":6707,"nodeType":"StructuredDocumentation","src":"21940:519:29","text":" @notice          Join the views in memory, return an unsafe reference to the memory.\n @dev             Super Dangerous direct memory access.\n                  This reference can be overwritten if anything else modifies memory (!!!).\n                  As such it MUST be consumed IMMEDIATELY.\n                  This function is private to prevent unsafe usage by callers.\n @param memViews  The views\n @return          unsafeView - The conjoined view pointing to the new memory"},"id":6768,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeJoin","nameLocation":"22471:10:29","nodeType":"FunctionDefinition","parameters":{"id":6713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"memViews","nameLocation":"22499:8:29","nodeType":"VariableDeclaration","scope":6768,"src":"22482:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":6708,"name":"bytes29","nodeType":"ElementaryTypeName","src":"22482:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6709,"nodeType":"ArrayTypeName","src":"22482:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"},{"constant":false,"id":6712,"mutability":"mutable","name":"_location","nameLocation":"22517:9:29","nodeType":"VariableDeclaration","scope":6768,"src":"22509:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"22509:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22481:46:29"},"returnParameters":{"id":6716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6715,"mutability":"mutable","name":"unsafeView","nameLocation":"22558:10:29","nodeType":"VariableDeclaration","scope":6768,"src":"22550:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6714,"name":"bytes29","nodeType":"ElementaryTypeName","src":"22550:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"22549:20:29"},"scope":6830,"src":"22462:691:29","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":6788,"nodeType":"Block","src":"23432:202:29","statements":[{"assignments":[6778],"declarations":[{"constant":false,"id":6778,"mutability":"mutable","name":"ptr","nameLocation":"23446:3:29","nodeType":"VariableDeclaration","scope":6788,"src":"23438:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"23438:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6779,"nodeType":"VariableDeclarationStatement","src":"23438:11:29"},{"AST":{"nodeType":"YulBlock","src":"23464:120:29","statements":[{"nodeType":"YulAssignment","src":"23530:18:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23543:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23537:5:29"},"nodeType":"YulFunctionCall","src":"23537:11:29"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"23530:3:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6778,"isOffset":false,"isSlot":false,"src":"23530:3:29","valueSize":1}],"id":6780,"nodeType":"InlineAssembly","src":"23455:129:29"},{"expression":{"arguments":[{"arguments":[{"id":6783,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"23614:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},{"id":6784,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"23624:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"name":"unsafeJoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"23603:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes29_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29[] memory,uint256) view returns (bytes29)"}},"id":6785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23603:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6781,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"23596:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23596:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6776,"id":6787,"nodeType":"Return","src":"23589:40:29"}]},"documentation":{"id":6769,"nodeType":"StructuredDocumentation","src":"23157:193:29","text":" @notice          Produce the keccak256 digest of the concatenated contents of multiple views.\n @param memViews  The views\n @return          bytes32 - The keccak256 digest"},"id":6789,"implemented":true,"kind":"function","modifiers":[],"name":"joinKeccak","nameLocation":"23362:10:29","nodeType":"FunctionDefinition","parameters":{"id":6773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6772,"mutability":"mutable","name":"memViews","nameLocation":"23390:8:29","nodeType":"VariableDeclaration","scope":6789,"src":"23373:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":6770,"name":"bytes29","nodeType":"ElementaryTypeName","src":"23373:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6771,"nodeType":"ArrayTypeName","src":"23373:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"}],"src":"23372:27:29"},"returnParameters":{"id":6776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6789,"src":"23423:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23423:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"23422:9:29"},"scope":6830,"src":"23353:281:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6828,"nodeType":"Block","src":"23884:602:29","statements":[{"assignments":[6799],"declarations":[{"constant":false,"id":6799,"mutability":"mutable","name":"ptr","nameLocation":"23898:3:29","nodeType":"VariableDeclaration","scope":6828,"src":"23890:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6798,"name":"uint256","nodeType":"ElementaryTypeName","src":"23890:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6800,"nodeType":"VariableDeclarationStatement","src":"23890:11:29"},{"AST":{"nodeType":"YulBlock","src":"23916:120:29","statements":[{"nodeType":"YulAssignment","src":"23982:18:29","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23995:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23989:5:29"},"nodeType":"YulFunctionCall","src":"23989:11:29"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"23982:3:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6799,"isOffset":false,"isSlot":false,"src":"23982:3:29","valueSize":1}],"id":6801,"nodeType":"InlineAssembly","src":"23907:129:29"},{"assignments":[6803],"declarations":[{"constant":false,"id":6803,"mutability":"mutable","name":"_newView","nameLocation":"24050:8:29","nodeType":"VariableDeclaration","scope":6828,"src":"24042:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":6802,"name":"bytes29","nodeType":"ElementaryTypeName","src":"24042:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":6804,"nodeType":"VariableDeclarationStatement","src":"24042:16:29"},{"id":6814,"nodeType":"UncheckedBlock","src":"24064:68:29","statements":[{"expression":{"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6805,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"24082:8:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6807,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6793,"src":"24104:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6808,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"24114:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":6809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24120:4:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"24114:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6806,"name":"unsafeJoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"24093:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes29_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29[] memory,uint256) view returns (bytes29)"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24093:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"24082:43:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6813,"nodeType":"ExpressionStatement","src":"24082:43:29"}]},{"assignments":[6816],"declarations":[{"constant":false,"id":6816,"mutability":"mutable","name":"_written","nameLocation":"24145:8:29","nodeType":"VariableDeclaration","scope":6828,"src":"24137:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6815,"name":"uint256","nodeType":"ElementaryTypeName","src":"24137:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6820,"initialValue":{"arguments":[{"id":6818,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"24160:8:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6817,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"24156:3:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":6819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24156:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"24137:32:29"},{"assignments":[6822],"declarations":[{"constant":false,"id":6822,"mutability":"mutable","name":"_footprint","nameLocation":"24183:10:29","nodeType":"VariableDeclaration","scope":6828,"src":"24175:18:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"24175:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6826,"initialValue":{"arguments":[{"id":6824,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"24206:8:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":6823,"name":"footprint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6216,"src":"24196:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24196:19:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24175:40:29"},{"AST":{"nodeType":"YulBlock","src":"24231:251:29","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"24330:3:29"},{"name":"_written","nodeType":"YulIdentifier","src":"24335:8:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24323:6:29"},"nodeType":"YulFunctionCall","src":"24323:21:29"},"nodeType":"YulExpressionStatement","src":"24323:21:29"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24421:4:29","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"24435:3:29"},{"name":"_footprint","nodeType":"YulIdentifier","src":"24440:10:29"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24431:3:29"},"nodeType":"YulFunctionCall","src":"24431:20:29"},{"kind":"number","nodeType":"YulLiteral","src":"24453:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24427:3:29"},"nodeType":"YulFunctionCall","src":"24427:31:29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24414:6:29"},"nodeType":"YulFunctionCall","src":"24414:45:29"},"nodeType":"YulExpressionStatement","src":"24414:45:29"},{"nodeType":"YulAssignment","src":"24466:10:29","value":{"name":"ptr","nodeType":"YulIdentifier","src":"24473:3:29"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24466:3:29"}]}]},"evmVersion":"london","externalReferences":[{"declaration":6822,"isOffset":false,"isSlot":false,"src":"24440:10:29","valueSize":1},{"declaration":6816,"isOffset":false,"isSlot":false,"src":"24335:8:29","valueSize":1},{"declaration":6799,"isOffset":false,"isSlot":false,"src":"24330:3:29","valueSize":1},{"declaration":6799,"isOffset":false,"isSlot":false,"src":"24435:3:29","valueSize":1},{"declaration":6799,"isOffset":false,"isSlot":false,"src":"24473:3:29","valueSize":1},{"declaration":6796,"isOffset":false,"isSlot":false,"src":"24466:3:29","valueSize":1}],"id":6827,"nodeType":"InlineAssembly","src":"24222:260:29"}]},"documentation":{"id":6790,"nodeType":"StructuredDocumentation","src":"23638:161:29","text":" @notice          copies all views, joins them into a new bytearray.\n @param memViews  The views\n @return          ret - The new byte array"},"id":6829,"implemented":true,"kind":"function","modifiers":[],"name":"join","nameLocation":"23811:4:29","nodeType":"FunctionDefinition","parameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"memViews","nameLocation":"23833:8:29","nodeType":"VariableDeclaration","scope":6829,"src":"23816:25:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":6791,"name":"bytes29","nodeType":"ElementaryTypeName","src":"23816:7:29","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":6792,"nodeType":"ArrayTypeName","src":"23816:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"}],"src":"23815:27:29"},"returnParameters":{"id":6797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6796,"mutability":"mutable","name":"ret","nameLocation":"23879:3:29","nodeType":"VariableDeclaration","scope":6829,"src":"23866:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6795,"name":"bytes","nodeType":"ElementaryTypeName","src":"23866:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23865:18:29"},"scope":6830,"src":"23802:684:29","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":6831,"src":"71:24417:29","usedErrors":[5780,5790,5792,5794,5796,5798,5800]}],"src":"46:24443:29"},"id":29}},"contracts":{"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol":{"IChainStorageContainer":{"abi":[{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"bytes27","name":"_globalMetadata","type":"bytes27"}],"name":"deleteElementsAfterInclusive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"deleteElementsAfterInclusive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"get","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGlobalMetadata","outputs":[{"internalType":"bytes27","name":"","type":"bytes27"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"length","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_object","type":"bytes32"},{"internalType":"bytes27","name":"_globalMetadata","type":"bytes27"}],"name":"push","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_object","type":"bytes32"}],"name":"push","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes27","name":"_globalMetadata","type":"bytes27"}],"name":"setGlobalMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deleteElementsAfterInclusive(uint256)":"4651d91e","deleteElementsAfterInclusive(uint256,bytes27)":"167fd681","get(uint256)":"9507d39a","getGlobalMetadata()":"ccf8f969","length()":"1f7b6d32","push(bytes32)":"b298e36b","push(bytes32,bytes27)":"2015276c","setGlobalMetadata(bytes27)":"29061de2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes27\",\"name\":\"_globalMetadata\",\"type\":\"bytes27\"}],\"name\":\"deleteElementsAfterInclusive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deleteElementsAfterInclusive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalMetadata\",\"outputs\":[{\"internalType\":\"bytes27\",\"name\":\"\",\"type\":\"bytes27\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_object\",\"type\":\"bytes32\"},{\"internalType\":\"bytes27\",\"name\":\"_globalMetadata\",\"type\":\"bytes27\"}],\"name\":\"push\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_object\",\"type\":\"bytes32\"}],\"name\":\"push\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes27\",\"name\":\"_globalMetadata\",\"type\":\"bytes27\"}],\"name\":\"setGlobalMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deleteElementsAfterInclusive(uint256)\":{\"params\":{\"_index\":\"Object index to delete from.\"}},\"deleteElementsAfterInclusive(uint256,bytes27)\":{\"params\":{\"_globalMetadata\":\"New global metadata for the container.\",\"_index\":\"Object index to delete from.\"}},\"get(uint256)\":{\"params\":{\"_index\":\"Index of the particular object to access.\"},\"returns\":{\"_0\":\"32 byte object value.\"}},\"getGlobalMetadata()\":{\"returns\":{\"_0\":\"Container global metadata field.\"}},\"length()\":{\"returns\":{\"_0\":\"Number of objects in the container.\"}},\"push(bytes32)\":{\"params\":{\"_object\":\"A 32 byte value to insert into the container.\"}},\"push(bytes32,bytes27)\":{\"params\":{\"_globalMetadata\":\"New global metadata for the container.\",\"_object\":\"A 32 byte value to insert into the container.\"}},\"setGlobalMetadata(bytes27)\":{\"params\":{\"_globalMetadata\":\"New global metadata to set.\"}}},\"title\":\"IChainStorageContainer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deleteElementsAfterInclusive(uint256)\":{\"notice\":\"Removes all objects after and including a given index.\"},\"deleteElementsAfterInclusive(uint256,bytes27)\":{\"notice\":\"Removes all objects after and including a given index. Also allows setting the global metadata field.\"},\"get(uint256)\":{\"notice\":\"Retrieves an object from the container.\"},\"getGlobalMetadata()\":{\"notice\":\"Retrieves the container's global metadata field.\"},\"length()\":{\"notice\":\"Retrieves the number of objects stored in the container.\"},\"push(bytes32)\":{\"notice\":\"Pushes an object into the container.\"},\"push(bytes32,bytes27)\":{\"notice\":\"Pushes an object into the container. Function allows setting the global metadata since we'll need to touch the \\\"length\\\" storage slot anyway, which also contains the global metadata (it's an optimization).\"},\"setGlobalMetadata(bytes27)\":{\"notice\":\"Sets the container's global metadata field. We're using `bytes27` here because we use five bytes to maintain the length of the underlying data structure, meaning we have an extra 27 bytes to store arbitrary data.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol\":\"IChainStorageContainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol\":{\"keccak256\":\"0xe55ad72572ec47dc09a02228d0c5a438571c76a41d16d92b35add057811977ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fbaa5e33249a772f1e1f40065f5346a85a2a019b5fbefd24be600e1a6547992\",\"dweb:/ipfs/Qmf92XDpqVFukyZcXiXGNkexNMYJYCVYkySo1SZBbcx7PX\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol":{"Lib_OVMCodec":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9a3657ec341a3e4e87eff97507675c52ab1af682edf7032194f17d2e248612964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG3 PUSH6 0x7EC341A3E4E8 PUSH31 0xFF97507675C52AB1AF682EDF7032194F17D2E248612964736F6C6343000811 STOP CALLER ","sourceMap":"355:3513:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9a3657ec341a3e4e87eff97507675c52ab1af682edf7032194f17d2e248612964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 LOG3 PUSH6 0x7EC341A3E4E8 PUSH31 0xFF97507675C52AB1AF682EDF7032194F17D2E248612964736F6C6343000811 STOP CALLER ","sourceMap":"355:3513:1:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Lib_OVMCodec\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol\":\"Lib_OVMCodec\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol\":{\"keccak256\":\"0xb5009ac1e0617e0b3b2fb917f08f8e8a7ae706034cc3a675258bc3d91978525e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://776f8407a5c3bcd0991801a922ea69a9665b14e85e6ac925ef9ec5dc5d0de87c\",\"dweb:/ipfs/QmRE5yQd69rDDmPPo2TcFDoCzXtbodHgicQNoXiRCTsBJb\"]},\"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol\":{\"keccak256\":\"0xd794d1b32c6e31d40e2526b5e519de1b4e8d14d6933889f9b916e69c5d1848c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a6d82cce64bf143f77249c49de3d93687a2b3e69b020f2f74fad503806b52b\",\"dweb:/ipfs/QmUHF33h4Tn4Q4cVHwk82eMMer8YTDTk1u3e4MCfrSYt3J\"]},\"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol\":{\"keccak256\":\"0x215b90672ce126effc3f2df61ca0cdf52d2b1cc9be602877e637829b0bf229fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7418707a22a792e838759becfa4ceb60774171a0a219cdd39452351225ec31a6\",\"dweb:/ipfs/QmZWxL4DNv8EVZoJbLSf4euzQwhzyRduSia5cVFJo4Bxh2\"]},\"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol\":{\"keccak256\":\"0xf2d1a526f2529e51fc2fffccf093c1691e291cbbb6de8a3da7d7f80024a9a234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3e0ff635f68c17f1b1a9b094a9da670dd1170241e67d8e87b00be2157f28ad6\",\"dweb:/ipfs/QmS9fK2TZ123NE2iXAbUxfaasSPGbui5EG6HP9uz6gveiN\"]},\"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol\":{\"keccak256\":\"0xc39ee13f97e4ccfbc72a5aac571deb3c1aff882fca2dd18be794d43ac5de0a30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c5761b5cf7287ac94404f54481d88ee0122bc031f1c2e0b4b2cc4c384e1b018\",\"dweb:/ipfs/QmbBTssPvH5ABa3e8MNRoHMkGGaoRXqneWhJzrDx7FsD1R\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol":{"Lib_AddressManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"_name","type":"string"},{"indexed":false,"internalType":"address","name":"_newAddress","type":"address"},{"indexed":false,"internalType":"address","name":"_oldAddress","type":"address"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_address","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2299":{"entryPoint":null,"id":2299,"parameterSlots":0,"returnSlots":0},"@_msgSender_2400":{"entryPoint":50,"id":2400,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_2387":{"entryPoint":58,"id":2387,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6109098061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639b2ea4bd14610084578063bf40fac1146100a0578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610100565b60405161007b91906104a0565b60405180910390f35b61009e60048036038101906100999190610641565b610129565b005b6100ba60048036038101906100b5919061069d565b61021d565b6040516100c791906104a0565b60405180910390f35b6100ea60048036038101906100e591906106e6565b610262565b005b6100f46102e5565b6100fe6000610363565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101316102e5565b600061013c83610427565b905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836040516101d69190610784565b60405180910390207f9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c848360405161020f92919061079b565b60405180910390a250505050565b60006001600061022c84610427565b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61026a6102e5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d090610847565b60405180910390fd5b6102e281610363565b50565b6102ed610457565b73ffffffffffffffffffffffffffffffffffffffff1661030b610100565b73ffffffffffffffffffffffffffffffffffffffff1614610361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610358906108b3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008160405160200161043a9190610784565b604051602081830303815290604052805190602001209050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061048a8261045f565b9050919050565b61049a8161047f565b82525050565b60006020820190506104b56000830184610491565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610522826104d9565b810181811067ffffffffffffffff82111715610541576105406104ea565b5b80604052505050565b60006105546104bb565b90506105608282610519565b919050565b600067ffffffffffffffff8211156105805761057f6104ea565b5b610589826104d9565b9050602081019050919050565b82818337600083830152505050565b60006105b86105b384610565565b61054a565b9050828152602081018484840111156105d4576105d36104d4565b5b6105df848285610596565b509392505050565b600082601f8301126105fc576105fb6104cf565b5b813561060c8482602086016105a5565b91505092915050565b61061e8161047f565b811461062957600080fd5b50565b60008135905061063b81610615565b92915050565b60008060408385031215610658576106576104c5565b5b600083013567ffffffffffffffff811115610676576106756104ca565b5b610682858286016105e7565b92505060206106938582860161062c565b9150509250929050565b6000602082840312156106b3576106b26104c5565b5b600082013567ffffffffffffffff8111156106d1576106d06104ca565b5b6106dd848285016105e7565b91505092915050565b6000602082840312156106fc576106fb6104c5565b5b600061070a8482850161062c565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561074757808201518184015260208101905061072c565b60008484015250505050565b600061075e82610713565b610768818561071e565b9350610778818560208601610729565b80840191505092915050565b60006107908284610753565b915081905092915050565b60006040820190506107b06000830185610491565b6107bd6020830184610491565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108316026836107c4565b915061083c826107d5565b604082019050919050565b6000602082019050818103600083015261086081610824565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061089d6020836107c4565b91506108a882610867565b602082019050919050565b600060208201905081810360008301526108cc81610890565b905091905056fea264697066735822122027b856576978e8a4197bff21a830ea896c80869ddba64c1ddff8cdf8f9a0c2d664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x909 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x9B2EA4BD EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xBF40FAC1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0xFE PUSH1 0x0 PUSH2 0x363 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x9416A153A346F93D95F94B064AE3F148B6460473C6E82B3F9FC2521B873FCD6C DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x20F SWAP3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x22C DUP5 PUSH2 0x427 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x363 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x457 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30B PUSH2 0x100 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP3 PUSH2 0x45F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49A DUP2 PUSH2 0x47F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x522 DUP3 PUSH2 0x4D9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x4EA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP PUSH2 0x560 DUP3 DUP3 PUSH2 0x519 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x4EA JUMP JUMPDEST JUMPDEST PUSH2 0x589 DUP3 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B8 PUSH2 0x5B3 DUP5 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x4D4 JUMP JUMPDEST JUMPDEST PUSH2 0x5DF DUP5 DUP3 DUP6 PUSH2 0x596 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5FC JUMPI PUSH2 0x5FB PUSH2 0x4CF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x47F JUMP JUMPDEST DUP2 EQ PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x63B DUP2 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH2 0x657 PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x676 JUMPI PUSH2 0x675 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH2 0x682 DUP6 DUP3 DUP7 ADD PUSH2 0x5E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x693 DUP6 DUP3 DUP7 ADD PUSH2 0x62C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6D1 JUMPI PUSH2 0x6D0 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH2 0x6DD DUP5 DUP3 DUP6 ADD PUSH2 0x5E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FC JUMPI PUSH2 0x6FB PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x70A DUP5 DUP3 DUP6 ADD PUSH2 0x62C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x747 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x768 DUP2 DUP6 PUSH2 0x71E JUMP JUMPDEST SWAP4 POP PUSH2 0x778 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x729 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 DUP3 DUP5 PUSH2 0x753 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7B0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x7BD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x831 PUSH1 0x26 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x83C DUP3 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x860 DUP2 PUSH2 0x824 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89D PUSH1 0x20 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A8 DUP3 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CC DUP2 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xB8 JUMP JUMPI PUSH10 0x78E8A4197BFF21A830EA DUP10 PUSH13 0x80869DDBA64C1DDFF8CDF8F9A0 0xC2 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"188:1532:2:-:0;;;;;;;;;;;;;936:32:9;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;188:1532:2;;640:96:10;693:7;719:10;712:17;;640:96;:::o;2433:187:9:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;188:1532:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_2330":{"entryPoint":741,"id":2330,"parameterSlots":0,"returnSlots":0},"@_getNameHash_333":{"entryPoint":1063,"id":333,"parameterSlots":1,"returnSlots":1},"@_msgSender_2400":{"entryPoint":1111,"id":2400,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_2387":{"entryPoint":867,"id":2387,"parameterSlots":1,"returnSlots":0},"@getAddress_317":{"entryPoint":541,"id":317,"parameterSlots":1,"returnSlots":1},"@owner_2316":{"entryPoint":256,"id":2316,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_2344":{"entryPoint":236,"id":2344,"parameterSlots":0,"returnSlots":0},"@setAddress_302":{"entryPoint":297,"id":302,"parameterSlots":2,"returnSlots":0},"@transferOwnership_2367":{"entryPoint":610,"id":2367,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":1445,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":1580,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":1511,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":1693,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_address":{"entryPoint":1601,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1169,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":2084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":2192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1924,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":1947,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2227,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1354,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1211,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1811,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1988,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1822,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1151,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1119,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":1430,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1833,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":1305,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x41":{"entryPoint":1258,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1231,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1236,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1226,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1221,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1241,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":2005,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":2151,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1557,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8633:30","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:30","statements":[{"nodeType":"YulAssignment","src":"62:65:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:30"},"nodeType":"YulFunctionCall","src":"73:54:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:30"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:30","type":""}],"src":"7:126:30"},{"body":{"nodeType":"YulBlock","src":"184:51:30","statements":[{"nodeType":"YulAssignment","src":"194:35:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:30"},"nodeType":"YulFunctionCall","src":"205:24:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:30"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:30","type":""}],"src":"139:96:30"},{"body":{"nodeType":"YulBlock","src":"306:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:30"},"nodeType":"YulFunctionCall","src":"328:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:30"},"nodeType":"YulFunctionCall","src":"316:37:30"},"nodeType":"YulExpressionStatement","src":"316:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:30","type":""}],"src":"241:118:30"},{"body":{"nodeType":"YulBlock","src":"463:124:30","statements":[{"nodeType":"YulAssignment","src":"473:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:30"},"nodeType":"YulFunctionCall","src":"481:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:30"},"nodeType":"YulFunctionCall","src":"562:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:30"},"nodeType":"YulFunctionCall","src":"509:71:30"},"nodeType":"YulExpressionStatement","src":"509:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:30","type":""}],"src":"365:222:30"},{"body":{"nodeType":"YulBlock","src":"633:35:30","statements":[{"nodeType":"YulAssignment","src":"643:19:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"659:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"653:5:30"},"nodeType":"YulFunctionCall","src":"653:9:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"643:6:30"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"626:6:30","type":""}],"src":"593:75:30"},{"body":{"nodeType":"YulBlock","src":"763:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"780:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"783:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"773:6:30"},"nodeType":"YulFunctionCall","src":"773:12:30"},"nodeType":"YulExpressionStatement","src":"773:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"674:117:30"},{"body":{"nodeType":"YulBlock","src":"886:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"903:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"906:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"896:6:30"},"nodeType":"YulFunctionCall","src":"896:12:30"},"nodeType":"YulExpressionStatement","src":"896:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"797:117:30"},{"body":{"nodeType":"YulBlock","src":"1009:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1029:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1019:6:30"},"nodeType":"YulFunctionCall","src":"1019:12:30"},"nodeType":"YulExpressionStatement","src":"1019:12:30"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"920:117:30"},{"body":{"nodeType":"YulBlock","src":"1132:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1149:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1152:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1142:6:30"},"nodeType":"YulFunctionCall","src":"1142:12:30"},"nodeType":"YulExpressionStatement","src":"1142:12:30"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"1043:117:30"},{"body":{"nodeType":"YulBlock","src":"1214:54:30","statements":[{"nodeType":"YulAssignment","src":"1224:38:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1242:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1249:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:30"},"nodeType":"YulFunctionCall","src":"1238:14:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1258:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1254:3:30"},"nodeType":"YulFunctionCall","src":"1254:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1234:3:30"},"nodeType":"YulFunctionCall","src":"1234:28:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1224:6:30"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1197:5:30","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1207:6:30","type":""}],"src":"1166:102:30"},{"body":{"nodeType":"YulBlock","src":"1302:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1319:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1322:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1312:6:30"},"nodeType":"YulFunctionCall","src":"1312:88:30"},"nodeType":"YulExpressionStatement","src":"1312:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1416:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1419:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1409:6:30"},"nodeType":"YulFunctionCall","src":"1409:15:30"},"nodeType":"YulExpressionStatement","src":"1409:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1440:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1443:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1433:6:30"},"nodeType":"YulFunctionCall","src":"1433:15:30"},"nodeType":"YulExpressionStatement","src":"1433:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1274:180:30"},{"body":{"nodeType":"YulBlock","src":"1503:238:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:58:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1535:6:30"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1565:4:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1543:21:30"},"nodeType":"YulFunctionCall","src":"1543:27:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1531:3:30"},"nodeType":"YulFunctionCall","src":"1531:40:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1517:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1682:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1684:16:30"},"nodeType":"YulFunctionCall","src":"1684:18:30"},"nodeType":"YulExpressionStatement","src":"1684:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1625:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"1637:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1622:2:30"},"nodeType":"YulFunctionCall","src":"1622:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1661:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1673:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1658:2:30"},"nodeType":"YulFunctionCall","src":"1658:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1619:2:30"},"nodeType":"YulFunctionCall","src":"1619:62:30"},"nodeType":"YulIf","src":"1616:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1720:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1724:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1713:6:30"},"nodeType":"YulFunctionCall","src":"1713:22:30"},"nodeType":"YulExpressionStatement","src":"1713:22:30"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1489:6:30","type":""},{"name":"size","nodeType":"YulTypedName","src":"1497:4:30","type":""}],"src":"1460:281:30"},{"body":{"nodeType":"YulBlock","src":"1788:88:30","statements":[{"nodeType":"YulAssignment","src":"1798:30:30","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1808:18:30"},"nodeType":"YulFunctionCall","src":"1808:20:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1798:6:30"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1857:6:30"},{"name":"size","nodeType":"YulIdentifier","src":"1865:4:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1837:19:30"},"nodeType":"YulFunctionCall","src":"1837:33:30"},"nodeType":"YulExpressionStatement","src":"1837:33:30"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1772:4:30","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1781:6:30","type":""}],"src":"1747:129:30"},{"body":{"nodeType":"YulBlock","src":"1949:241:30","statements":[{"body":{"nodeType":"YulBlock","src":"2054:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2056:16:30"},"nodeType":"YulFunctionCall","src":"2056:18:30"},"nodeType":"YulExpressionStatement","src":"2056:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2026:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"2034:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2023:2:30"},"nodeType":"YulFunctionCall","src":"2023:30:30"},"nodeType":"YulIf","src":"2020:56:30"},{"nodeType":"YulAssignment","src":"2086:37:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2116:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2094:21:30"},"nodeType":"YulFunctionCall","src":"2094:29:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2086:4:30"}]},{"nodeType":"YulAssignment","src":"2160:23:30","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2172:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"2178:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2168:3:30"},"nodeType":"YulFunctionCall","src":"2168:15:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2160:4:30"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1933:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1944:4:30","type":""}],"src":"1882:308:30"},{"body":{"nodeType":"YulBlock","src":"2260:82:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2283:3:30"},{"name":"src","nodeType":"YulIdentifier","src":"2288:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2293:6:30"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"2270:12:30"},"nodeType":"YulFunctionCall","src":"2270:30:30"},"nodeType":"YulExpressionStatement","src":"2270:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2320:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2325:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2316:3:30"},"nodeType":"YulFunctionCall","src":"2316:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"2334:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2309:6:30"},"nodeType":"YulFunctionCall","src":"2309:27:30"},"nodeType":"YulExpressionStatement","src":"2309:27:30"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2242:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2247:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"2252:6:30","type":""}],"src":"2196:146:30"},{"body":{"nodeType":"YulBlock","src":"2432:341:30","statements":[{"nodeType":"YulAssignment","src":"2442:75:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2509:6:30"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2467:41:30"},"nodeType":"YulFunctionCall","src":"2467:49:30"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2451:15:30"},"nodeType":"YulFunctionCall","src":"2451:66:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2442:5:30"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2533:5:30"},{"name":"length","nodeType":"YulIdentifier","src":"2540:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2526:6:30"},"nodeType":"YulFunctionCall","src":"2526:21:30"},"nodeType":"YulExpressionStatement","src":"2526:21:30"},{"nodeType":"YulVariableDeclaration","src":"2556:27:30","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2571:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2578:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2567:3:30"},"nodeType":"YulFunctionCall","src":"2567:16:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2560:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2621:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2623:77:30"},"nodeType":"YulFunctionCall","src":"2623:79:30"},"nodeType":"YulExpressionStatement","src":"2623:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2602:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2607:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2598:3:30"},"nodeType":"YulFunctionCall","src":"2598:16:30"},{"name":"end","nodeType":"YulIdentifier","src":"2616:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2595:2:30"},"nodeType":"YulFunctionCall","src":"2595:25:30"},"nodeType":"YulIf","src":"2592:112:30"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2750:3:30"},{"name":"dst","nodeType":"YulIdentifier","src":"2755:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2760:6:30"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2713:36:30"},"nodeType":"YulFunctionCall","src":"2713:54:30"},"nodeType":"YulExpressionStatement","src":"2713:54:30"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2405:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"2410:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"2418:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2426:5:30","type":""}],"src":"2348:425:30"},{"body":{"nodeType":"YulBlock","src":"2855:278:30","statements":[{"body":{"nodeType":"YulBlock","src":"2904:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2906:77:30"},"nodeType":"YulFunctionCall","src":"2906:79:30"},"nodeType":"YulExpressionStatement","src":"2906:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2883:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"2891:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2879:3:30"},"nodeType":"YulFunctionCall","src":"2879:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"2898:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2875:3:30"},"nodeType":"YulFunctionCall","src":"2875:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2868:6:30"},"nodeType":"YulFunctionCall","src":"2868:35:30"},"nodeType":"YulIf","src":"2865:122:30"},{"nodeType":"YulVariableDeclaration","src":"2996:34:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3023:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3010:12:30"},"nodeType":"YulFunctionCall","src":"3010:20:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3000:6:30","type":""}]},{"nodeType":"YulAssignment","src":"3039:88:30","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3100:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3108:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3096:3:30"},"nodeType":"YulFunctionCall","src":"3096:17:30"},{"name":"length","nodeType":"YulIdentifier","src":"3115:6:30"},{"name":"end","nodeType":"YulIdentifier","src":"3123:3:30"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3048:47:30"},"nodeType":"YulFunctionCall","src":"3048:79:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3039:5:30"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2833:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"2841:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2849:5:30","type":""}],"src":"2793:340:30"},{"body":{"nodeType":"YulBlock","src":"3182:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"3239:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3251:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3241:6:30"},"nodeType":"YulFunctionCall","src":"3241:12:30"},"nodeType":"YulExpressionStatement","src":"3241:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3205:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3230:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3212:17:30"},"nodeType":"YulFunctionCall","src":"3212:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3202:2:30"},"nodeType":"YulFunctionCall","src":"3202:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3195:6:30"},"nodeType":"YulFunctionCall","src":"3195:43:30"},"nodeType":"YulIf","src":"3192:63:30"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3175:5:30","type":""}],"src":"3139:122:30"},{"body":{"nodeType":"YulBlock","src":"3319:87:30","statements":[{"nodeType":"YulAssignment","src":"3329:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3351:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3338:12:30"},"nodeType":"YulFunctionCall","src":"3338:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3329:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3394:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3367:26:30"},"nodeType":"YulFunctionCall","src":"3367:33:30"},"nodeType":"YulExpressionStatement","src":"3367:33:30"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3297:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"3305:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3313:5:30","type":""}],"src":"3267:139:30"},{"body":{"nodeType":"YulBlock","src":"3505:561:30","statements":[{"body":{"nodeType":"YulBlock","src":"3551:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3553:77:30"},"nodeType":"YulFunctionCall","src":"3553:79:30"},"nodeType":"YulExpressionStatement","src":"3553:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3526:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3535:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3522:3:30"},"nodeType":"YulFunctionCall","src":"3522:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"3547:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3518:3:30"},"nodeType":"YulFunctionCall","src":"3518:32:30"},"nodeType":"YulIf","src":"3515:119:30"},{"nodeType":"YulBlock","src":"3644:287:30","statements":[{"nodeType":"YulVariableDeclaration","src":"3659:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3701:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:30"},"nodeType":"YulFunctionCall","src":"3686:17:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3673:12:30"},"nodeType":"YulFunctionCall","src":"3673:31:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3663:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3751:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3753:77:30"},"nodeType":"YulFunctionCall","src":"3753:79:30"},"nodeType":"YulExpressionStatement","src":"3753:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3723:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3731:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3720:2:30"},"nodeType":"YulFunctionCall","src":"3720:30:30"},"nodeType":"YulIf","src":"3717:117:30"},{"nodeType":"YulAssignment","src":"3848:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3893:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"3904:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3889:3:30"},"nodeType":"YulFunctionCall","src":"3889:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3913:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3858:30:30"},"nodeType":"YulFunctionCall","src":"3858:63:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3848:6:30"}]}]},{"nodeType":"YulBlock","src":"3941:118:30","statements":[{"nodeType":"YulVariableDeclaration","src":"3956:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3970:2:30","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3960:6:30","type":""}]},{"nodeType":"YulAssignment","src":"3986:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4021:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"4032:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4017:3:30"},"nodeType":"YulFunctionCall","src":"4017:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4041:7:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3996:20:30"},"nodeType":"YulFunctionCall","src":"3996:53:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3986:6:30"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3467:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3478:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3490:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3498:6:30","type":""}],"src":"3412:654:30"},{"body":{"nodeType":"YulBlock","src":"4148:433:30","statements":[{"body":{"nodeType":"YulBlock","src":"4194:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4196:77:30"},"nodeType":"YulFunctionCall","src":"4196:79:30"},"nodeType":"YulExpressionStatement","src":"4196:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4169:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"4178:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4165:3:30"},"nodeType":"YulFunctionCall","src":"4165:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"4190:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4161:3:30"},"nodeType":"YulFunctionCall","src":"4161:32:30"},"nodeType":"YulIf","src":"4158:119:30"},{"nodeType":"YulBlock","src":"4287:287:30","statements":[{"nodeType":"YulVariableDeclaration","src":"4302:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4333:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4344:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4329:3:30"},"nodeType":"YulFunctionCall","src":"4329:17:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4316:12:30"},"nodeType":"YulFunctionCall","src":"4316:31:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4306:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4394:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4396:77:30"},"nodeType":"YulFunctionCall","src":"4396:79:30"},"nodeType":"YulExpressionStatement","src":"4396:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4366:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4374:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4363:2:30"},"nodeType":"YulFunctionCall","src":"4363:30:30"},"nodeType":"YulIf","src":"4360:117:30"},{"nodeType":"YulAssignment","src":"4491:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4536:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"4547:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4532:3:30"},"nodeType":"YulFunctionCall","src":"4532:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4556:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4501:30:30"},"nodeType":"YulFunctionCall","src":"4501:63:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4491:6:30"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4118:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4129:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4141:6:30","type":""}],"src":"4072:509:30"},{"body":{"nodeType":"YulBlock","src":"4653:263:30","statements":[{"body":{"nodeType":"YulBlock","src":"4699:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4701:77:30"},"nodeType":"YulFunctionCall","src":"4701:79:30"},"nodeType":"YulExpressionStatement","src":"4701:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4674:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"4683:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4670:3:30"},"nodeType":"YulFunctionCall","src":"4670:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"4695:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4666:3:30"},"nodeType":"YulFunctionCall","src":"4666:32:30"},"nodeType":"YulIf","src":"4663:119:30"},{"nodeType":"YulBlock","src":"4792:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"4807:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"4821:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4811:6:30","type":""}]},{"nodeType":"YulAssignment","src":"4836:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4871:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"4882:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4867:3:30"},"nodeType":"YulFunctionCall","src":"4867:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4891:7:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4846:20:30"},"nodeType":"YulFunctionCall","src":"4846:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4836:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4623:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4634:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4646:6:30","type":""}],"src":"4587:329:30"},{"body":{"nodeType":"YulBlock","src":"4981:40:30","statements":[{"nodeType":"YulAssignment","src":"4992:22:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5008:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5002:5:30"},"nodeType":"YulFunctionCall","src":"5002:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4992:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4964:5:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4974:6:30","type":""}],"src":"4922:99:30"},{"body":{"nodeType":"YulBlock","src":"5141:34:30","statements":[{"nodeType":"YulAssignment","src":"5151:18:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"5166:3:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5151:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5113:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"5118:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5129:11:30","type":""}],"src":"5027:148:30"},{"body":{"nodeType":"YulBlock","src":"5243:184:30","statements":[{"nodeType":"YulVariableDeclaration","src":"5253:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5262:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5257:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5322:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5347:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"5352:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5343:3:30"},"nodeType":"YulFunctionCall","src":"5343:11:30"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5366:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"5371:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5362:3:30"},"nodeType":"YulFunctionCall","src":"5362:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5356:5:30"},"nodeType":"YulFunctionCall","src":"5356:18:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5336:6:30"},"nodeType":"YulFunctionCall","src":"5336:39:30"},"nodeType":"YulExpressionStatement","src":"5336:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5283:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"5286:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5280:2:30"},"nodeType":"YulFunctionCall","src":"5280:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5294:19:30","statements":[{"nodeType":"YulAssignment","src":"5296:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5305:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"5308:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5301:3:30"},"nodeType":"YulFunctionCall","src":"5301:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5296:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"5276:3:30","statements":[]},"src":"5272:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5405:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"5410:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5401:3:30"},"nodeType":"YulFunctionCall","src":"5401:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"5419:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5394:6:30"},"nodeType":"YulFunctionCall","src":"5394:27:30"},"nodeType":"YulExpressionStatement","src":"5394:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5225:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5230:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"5235:6:30","type":""}],"src":"5181:246:30"},{"body":{"nodeType":"YulBlock","src":"5543:280:30","statements":[{"nodeType":"YulVariableDeclaration","src":"5553:53:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5600:5:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5567:32:30"},"nodeType":"YulFunctionCall","src":"5567:39:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5557:6:30","type":""}]},{"nodeType":"YulAssignment","src":"5615:96:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5699:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"5704:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5622:76:30"},"nodeType":"YulFunctionCall","src":"5622:89:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5615:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5759:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"5766:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5755:3:30"},"nodeType":"YulFunctionCall","src":"5755:16:30"},{"name":"pos","nodeType":"YulIdentifier","src":"5773:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"5778:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"5720:34:30"},"nodeType":"YulFunctionCall","src":"5720:65:30"},"nodeType":"YulExpressionStatement","src":"5720:65:30"},{"nodeType":"YulAssignment","src":"5794:23:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5805:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"5810:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5801:3:30"},"nodeType":"YulFunctionCall","src":"5801:16:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5794:3:30"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5524:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5531:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5539:3:30","type":""}],"src":"5433:390:30"},{"body":{"nodeType":"YulBlock","src":"5965:139:30","statements":[{"nodeType":"YulAssignment","src":"5976:102:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6065:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"6074:3:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5983:81:30"},"nodeType":"YulFunctionCall","src":"5983:95:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5976:3:30"}]},{"nodeType":"YulAssignment","src":"6088:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"6095:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6088:3:30"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5944:3:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5950:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5961:3:30","type":""}],"src":"5829:275:30"},{"body":{"nodeType":"YulBlock","src":"6236:206:30","statements":[{"nodeType":"YulAssignment","src":"6246:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6258:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6269:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6254:3:30"},"nodeType":"YulFunctionCall","src":"6254:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6246:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6326:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6339:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6350:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6335:3:30"},"nodeType":"YulFunctionCall","src":"6335:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6282:43:30"},"nodeType":"YulFunctionCall","src":"6282:71:30"},"nodeType":"YulExpressionStatement","src":"6282:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6407:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6420:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6431:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6416:3:30"},"nodeType":"YulFunctionCall","src":"6416:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6363:43:30"},"nodeType":"YulFunctionCall","src":"6363:72:30"},"nodeType":"YulExpressionStatement","src":"6363:72:30"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6200:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6212:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6220:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6231:4:30","type":""}],"src":"6110:332:30"},{"body":{"nodeType":"YulBlock","src":"6544:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6561:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"6566:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6554:6:30"},"nodeType":"YulFunctionCall","src":"6554:19:30"},"nodeType":"YulExpressionStatement","src":"6554:19:30"},{"nodeType":"YulAssignment","src":"6582:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6601:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"6606:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6597:3:30"},"nodeType":"YulFunctionCall","src":"6597:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"6582:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6516:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"6521:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"6532:11:30","type":""}],"src":"6448:169:30"},{"body":{"nodeType":"YulBlock","src":"6729:119:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6751:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"6759:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6747:3:30"},"nodeType":"YulFunctionCall","src":"6747:14:30"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"6763:34:30","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6740:6:30"},"nodeType":"YulFunctionCall","src":"6740:58:30"},"nodeType":"YulExpressionStatement","src":"6740:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6819:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"6827:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6815:3:30"},"nodeType":"YulFunctionCall","src":"6815:15:30"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"6832:8:30","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6808:6:30"},"nodeType":"YulFunctionCall","src":"6808:33:30"},"nodeType":"YulExpressionStatement","src":"6808:33:30"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6721:6:30","type":""}],"src":"6623:225:30"},{"body":{"nodeType":"YulBlock","src":"7000:220:30","statements":[{"nodeType":"YulAssignment","src":"7010:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7076:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"7081:2:30","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7017:58:30"},"nodeType":"YulFunctionCall","src":"7017:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7010:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7182:3:30"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"7093:88:30"},"nodeType":"YulFunctionCall","src":"7093:93:30"},"nodeType":"YulExpressionStatement","src":"7093:93:30"},{"nodeType":"YulAssignment","src":"7195:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7206:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"7211:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7202:3:30"},"nodeType":"YulFunctionCall","src":"7202:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7195:3:30"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6988:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6996:3:30","type":""}],"src":"6854:366:30"},{"body":{"nodeType":"YulBlock","src":"7397:248:30","statements":[{"nodeType":"YulAssignment","src":"7407:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7419:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7430:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7415:3:30"},"nodeType":"YulFunctionCall","src":"7415:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7407:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7454:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7465:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7450:3:30"},"nodeType":"YulFunctionCall","src":"7450:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7473:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"7479:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7469:3:30"},"nodeType":"YulFunctionCall","src":"7469:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7443:6:30"},"nodeType":"YulFunctionCall","src":"7443:47:30"},"nodeType":"YulExpressionStatement","src":"7443:47:30"},{"nodeType":"YulAssignment","src":"7499:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7633:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7507:124:30"},"nodeType":"YulFunctionCall","src":"7507:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7499:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7377:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7392:4:30","type":""}],"src":"7226:419:30"},{"body":{"nodeType":"YulBlock","src":"7757:76:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7779:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"7787:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7775:3:30"},"nodeType":"YulFunctionCall","src":"7775:14:30"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7791:34:30","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7768:6:30"},"nodeType":"YulFunctionCall","src":"7768:58:30"},"nodeType":"YulExpressionStatement","src":"7768:58:30"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7749:6:30","type":""}],"src":"7651:182:30"},{"body":{"nodeType":"YulBlock","src":"7985:220:30","statements":[{"nodeType":"YulAssignment","src":"7995:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8061:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"8066:2:30","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8002:58:30"},"nodeType":"YulFunctionCall","src":"8002:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7995:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8167:3:30"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"8078:88:30"},"nodeType":"YulFunctionCall","src":"8078:93:30"},"nodeType":"YulExpressionStatement","src":"8078:93:30"},{"nodeType":"YulAssignment","src":"8180:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8191:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"8196:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8187:3:30"},"nodeType":"YulFunctionCall","src":"8187:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8180:3:30"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7973:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7981:3:30","type":""}],"src":"7839:366:30"},{"body":{"nodeType":"YulBlock","src":"8382:248:30","statements":[{"nodeType":"YulAssignment","src":"8392:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8404:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8415:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8400:3:30"},"nodeType":"YulFunctionCall","src":"8400:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8392:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8439:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8450:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8435:3:30"},"nodeType":"YulFunctionCall","src":"8435:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8458:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"8464:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8454:3:30"},"nodeType":"YulFunctionCall","src":"8454:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8428:6:30"},"nodeType":"YulFunctionCall","src":"8428:47:30"},"nodeType":"YulExpressionStatement","src":"8428:47:30"},{"nodeType":"YulAssignment","src":"8484:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8618:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8492:124:30"},"nodeType":"YulFunctionCall","src":"8492:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8484:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8362:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8377:4:30","type":""}],"src":"8211:419:30"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639b2ea4bd14610084578063bf40fac1146100a0578063f2fde38b146100d0575b600080fd5b6100646100ec565b005b61006e610100565b60405161007b91906104a0565b60405180910390f35b61009e60048036038101906100999190610641565b610129565b005b6100ba60048036038101906100b5919061069d565b61021d565b6040516100c791906104a0565b60405180910390f35b6100ea60048036038101906100e591906106e6565b610262565b005b6100f46102e5565b6100fe6000610363565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101316102e5565b600061013c83610427565b905060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550836040516101d69190610784565b60405180910390207f9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c848360405161020f92919061079b565b60405180910390a250505050565b60006001600061022c84610427565b815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61026a6102e5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d090610847565b60405180910390fd5b6102e281610363565b50565b6102ed610457565b73ffffffffffffffffffffffffffffffffffffffff1661030b610100565b73ffffffffffffffffffffffffffffffffffffffff1614610361576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610358906108b3565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008160405160200161043a9190610784565b604051602081830303815290604052805190602001209050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061048a8261045f565b9050919050565b61049a8161047f565b82525050565b60006020820190506104b56000830184610491565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610522826104d9565b810181811067ffffffffffffffff82111715610541576105406104ea565b5b80604052505050565b60006105546104bb565b90506105608282610519565b919050565b600067ffffffffffffffff8211156105805761057f6104ea565b5b610589826104d9565b9050602081019050919050565b82818337600083830152505050565b60006105b86105b384610565565b61054a565b9050828152602081018484840111156105d4576105d36104d4565b5b6105df848285610596565b509392505050565b600082601f8301126105fc576105fb6104cf565b5b813561060c8482602086016105a5565b91505092915050565b61061e8161047f565b811461062957600080fd5b50565b60008135905061063b81610615565b92915050565b60008060408385031215610658576106576104c5565b5b600083013567ffffffffffffffff811115610676576106756104ca565b5b610682858286016105e7565b92505060206106938582860161062c565b9150509250929050565b6000602082840312156106b3576106b26104c5565b5b600082013567ffffffffffffffff8111156106d1576106d06104ca565b5b6106dd848285016105e7565b91505092915050565b6000602082840312156106fc576106fb6104c5565b5b600061070a8482850161062c565b91505092915050565b600081519050919050565b600081905092915050565b60005b8381101561074757808201518184015260208101905061072c565b60008484015250505050565b600061075e82610713565b610768818561071e565b9350610778818560208601610729565b80840191505092915050565b60006107908284610753565b915081905092915050565b60006040820190506107b06000830185610491565b6107bd6020830184610491565b9392505050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006108316026836107c4565b915061083c826107d5565b604082019050919050565b6000602082019050818103600083015261086081610824565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061089d6020836107c4565b91506108a882610867565b602082019050919050565b600060208201905081810360008301526108cc81610890565b905091905056fea264697066735822122027b856576978e8a4197bff21a830ea896c80869ddba64c1ddff8cdf8f9a0c2d664736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x9B2EA4BD EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xBF40FAC1 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xEC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x100 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x69D JUMP JUMPDEST PUSH2 0x21D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x6E6 JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF4 PUSH2 0x2E5 JUMP JUMPDEST PUSH2 0xFE PUSH1 0x0 PUSH2 0x363 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH32 0x9416A153A346F93D95F94B064AE3F148B6460473C6E82B3F9FC2521B873FCD6C DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x20F SWAP3 SWAP2 SWAP1 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x22C DUP5 PUSH2 0x427 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26A PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x363 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2ED PUSH2 0x457 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x30B PUSH2 0x100 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP3 PUSH2 0x45F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49A DUP2 PUSH2 0x47F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x522 DUP3 PUSH2 0x4D9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x541 JUMPI PUSH2 0x540 PUSH2 0x4EA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 PUSH2 0x4BB JUMP JUMPDEST SWAP1 POP PUSH2 0x560 DUP3 DUP3 PUSH2 0x519 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x580 JUMPI PUSH2 0x57F PUSH2 0x4EA JUMP JUMPDEST JUMPDEST PUSH2 0x589 DUP3 PUSH2 0x4D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B8 PUSH2 0x5B3 DUP5 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x5D3 PUSH2 0x4D4 JUMP JUMPDEST JUMPDEST PUSH2 0x5DF DUP5 DUP3 DUP6 PUSH2 0x596 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5FC JUMPI PUSH2 0x5FB PUSH2 0x4CF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x61E DUP2 PUSH2 0x47F JUMP JUMPDEST DUP2 EQ PUSH2 0x629 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x63B DUP2 PUSH2 0x615 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x658 JUMPI PUSH2 0x657 PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x676 JUMPI PUSH2 0x675 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH2 0x682 DUP6 DUP3 DUP7 ADD PUSH2 0x5E7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x693 DUP6 DUP3 DUP7 ADD PUSH2 0x62C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B3 JUMPI PUSH2 0x6B2 PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6D1 JUMPI PUSH2 0x6D0 PUSH2 0x4CA JUMP JUMPDEST JUMPDEST PUSH2 0x6DD DUP5 DUP3 DUP6 ADD PUSH2 0x5E7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6FC JUMPI PUSH2 0x6FB PUSH2 0x4C5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x70A DUP5 DUP3 DUP6 ADD PUSH2 0x62C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x747 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E DUP3 PUSH2 0x713 JUMP JUMPDEST PUSH2 0x768 DUP2 DUP6 PUSH2 0x71E JUMP JUMPDEST SWAP4 POP PUSH2 0x778 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x729 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x790 DUP3 DUP5 PUSH2 0x753 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7B0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x7BD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x491 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x831 PUSH1 0x26 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x83C DUP3 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x860 DUP2 PUSH2 0x824 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89D PUSH1 0x20 DUP4 PUSH2 0x7C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A8 DUP3 PUSH2 0x867 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8CC DUP2 PUSH2 0x890 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xB8 JUMP JUMPI PUSH10 0x78E8A4197BFF21A830EA DUP10 PUSH13 0x80869DDBA64C1DDFF8CDF8F9A0 0xC2 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"188:1532:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:9;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;760:278:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1227:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;760:278:2:-;1094:13:9;:11;:13::i;:::-;848:16:2::1;867:19;880:5;867:12;:19::i;:::-;848:38;;896:18;917:9;:19;927:8;917:19;;;;;;;;;;;;;;;;;;;;;896:40;;968:8;946:9;:19;956:8;946:19;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1003:5;992:39;;;;;;:::i;:::-;;;;;;;;;1010:8;1020:10;992:39;;;;;;;:::i;:::-;;;;;;;;838:200;;760:278:::0;;:::o;1227:127::-;1291:7;1317:9;:30;1327:19;1340:5;1327:12;:19::i;:::-;1317:30;;;;;;;;;;;;;;;;;;;;;1310:37;;1227:127;;;:::o;2081:198:9:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;1585:133:2:-;1651:7;1704:5;1687:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;1677:34;;;;;;1670:41;;1585:133;;;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;7:126:30:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:75::-;626:6;659:2;653:9;643:19;;593:75;:::o;674:117::-;783:1;780;773:12;797:117;906:1;903;896:12;920:117;1029:1;1026;1019:12;1043:117;1152:1;1149;1142:12;1166:102;1207:6;1258:2;1254:7;1249:2;1242:5;1238:14;1234:28;1224:38;;1166:102;;;:::o;1274:180::-;1322:77;1319:1;1312:88;1419:4;1416:1;1409:15;1443:4;1440:1;1433:15;1460:281;1543:27;1565:4;1543:27;:::i;:::-;1535:6;1531:40;1673:6;1661:10;1658:22;1637:18;1625:10;1622:34;1619:62;1616:88;;;1684:18;;:::i;:::-;1616:88;1724:10;1720:2;1713:22;1503:238;1460:281;;:::o;1747:129::-;1781:6;1808:20;;:::i;:::-;1798:30;;1837:33;1865:4;1857:6;1837:33;:::i;:::-;1747:129;;;:::o;1882:308::-;1944:4;2034:18;2026:6;2023:30;2020:56;;;2056:18;;:::i;:::-;2020:56;2094:29;2116:6;2094:29;:::i;:::-;2086:37;;2178:4;2172;2168:15;2160:23;;1882:308;;;:::o;2196:146::-;2293:6;2288:3;2283;2270:30;2334:1;2325:6;2320:3;2316:16;2309:27;2196:146;;;:::o;2348:425::-;2426:5;2451:66;2467:49;2509:6;2467:49;:::i;:::-;2451:66;:::i;:::-;2442:75;;2540:6;2533:5;2526:21;2578:4;2571:5;2567:16;2616:3;2607:6;2602:3;2598:16;2595:25;2592:112;;;2623:79;;:::i;:::-;2592:112;2713:54;2760:6;2755:3;2750;2713:54;:::i;:::-;2432:341;2348:425;;;;;:::o;2793:340::-;2849:5;2898:3;2891:4;2883:6;2879:17;2875:27;2865:122;;2906:79;;:::i;:::-;2865:122;3023:6;3010:20;3048:79;3123:3;3115:6;3108:4;3100:6;3096:17;3048:79;:::i;:::-;3039:88;;2855:278;2793:340;;;;:::o;3139:122::-;3212:24;3230:5;3212:24;:::i;:::-;3205:5;3202:35;3192:63;;3251:1;3248;3241:12;3192:63;3139:122;:::o;3267:139::-;3313:5;3351:6;3338:20;3329:29;;3367:33;3394:5;3367:33;:::i;:::-;3267:139;;;;:::o;3412:654::-;3490:6;3498;3547:2;3535:9;3526:7;3522:23;3518:32;3515:119;;;3553:79;;:::i;:::-;3515:119;3701:1;3690:9;3686:17;3673:31;3731:18;3723:6;3720:30;3717:117;;;3753:79;;:::i;:::-;3717:117;3858:63;3913:7;3904:6;3893:9;3889:22;3858:63;:::i;:::-;3848:73;;3644:287;3970:2;3996:53;4041:7;4032:6;4021:9;4017:22;3996:53;:::i;:::-;3986:63;;3941:118;3412:654;;;;;:::o;4072:509::-;4141:6;4190:2;4178:9;4169:7;4165:23;4161:32;4158:119;;;4196:79;;:::i;:::-;4158:119;4344:1;4333:9;4329:17;4316:31;4374:18;4366:6;4363:30;4360:117;;;4396:79;;:::i;:::-;4360:117;4501:63;4556:7;4547:6;4536:9;4532:22;4501:63;:::i;:::-;4491:73;;4287:287;4072:509;;;;:::o;4587:329::-;4646:6;4695:2;4683:9;4674:7;4670:23;4666:32;4663:119;;;4701:79;;:::i;:::-;4663:119;4821:1;4846:53;4891:7;4882:6;4871:9;4867:22;4846:53;:::i;:::-;4836:63;;4792:117;4587:329;;;;:::o;4922:99::-;4974:6;5008:5;5002:12;4992:22;;4922:99;;;:::o;5027:148::-;5129:11;5166:3;5151:18;;5027:148;;;;:::o;5181:246::-;5262:1;5272:113;5286:6;5283:1;5280:13;5272:113;;;5371:1;5366:3;5362:11;5356:18;5352:1;5347:3;5343:11;5336:39;5308:2;5305:1;5301:10;5296:15;;5272:113;;;5419:1;5410:6;5405:3;5401:16;5394:27;5243:184;5181:246;;;:::o;5433:390::-;5539:3;5567:39;5600:5;5567:39;:::i;:::-;5622:89;5704:6;5699:3;5622:89;:::i;:::-;5615:96;;5720:65;5778:6;5773:3;5766:4;5759:5;5755:16;5720:65;:::i;:::-;5810:6;5805:3;5801:16;5794:23;;5543:280;5433:390;;;;:::o;5829:275::-;5961:3;5983:95;6074:3;6065:6;5983:95;:::i;:::-;5976:102;;6095:3;6088:10;;5829:275;;;;:::o;6110:332::-;6231:4;6269:2;6258:9;6254:18;6246:26;;6282:71;6350:1;6339:9;6335:17;6326:6;6282:71;:::i;:::-;6363:72;6431:2;6420:9;6416:18;6407:6;6363:72;:::i;:::-;6110:332;;;;;:::o;6448:169::-;6532:11;6566:6;6561:3;6554:19;6606:4;6601:3;6597:14;6582:29;;6448:169;;;;:::o;6623:225::-;6763:34;6759:1;6751:6;6747:14;6740:58;6832:8;6827:2;6819:6;6815:15;6808:33;6623:225;:::o;6854:366::-;6996:3;7017:67;7081:2;7076:3;7017:67;:::i;:::-;7010:74;;7093:93;7182:3;7093:93;:::i;:::-;7211:2;7206:3;7202:12;7195:19;;6854:366;;;:::o;7226:419::-;7392:4;7430:2;7419:9;7415:18;7407:26;;7479:9;7473:4;7469:20;7465:1;7454:9;7450:17;7443:47;7507:131;7633:4;7507:131;:::i;:::-;7499:139;;7226:419;;;:::o;7651:182::-;7791:34;7787:1;7779:6;7775:14;7768:58;7651:182;:::o;7839:366::-;7981:3;8002:67;8066:2;8061:3;8002:67;:::i;:::-;7995:74;;8078:93;8167:3;8078:93;:::i;:::-;8196:2;8191:3;8187:12;8180:19;;7839:366;;;:::o;8211:419::-;8377:4;8415:2;8404:9;8400:18;8392:26;;8464:9;8458:4;8454:20;8450:1;8439:9;8435:17;8428:47;8492:131;8618:4;8492:131;:::i;:::-;8484:139;;8211:419;;;:::o"},"methodIdentifiers":{"getAddress(string)":"bf40fac1","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setAddress(string,address)":"9b2ea4bd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAddress(string)\":{\"params\":{\"_name\":\"Name to retrieve an address for.\"},\"returns\":{\"_0\":\"Address associated with the given name.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAddress(string,address)\":{\"params\":{\"_address\":\"Address to associate with the name.\",\"_name\":\"String name to associate an address with.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Lib_AddressManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAddress(string)\":{\"notice\":\"Retrieves the address associated with a given name.\"},\"setAddress(string,address)\":{\"notice\":\"Changes the address associated with a particular name.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol\":\"Lib_AddressManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol\":{\"keccak256\":\"0xcde9b29429d512c549f7c1b8a033f161fa71c18cda08b241748663854196ae14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbd748ce0173bd14166174c68a43e108ec27d8f90cf3dc3703cda120b641e0b\",\"dweb:/ipfs/QmT818AKJieRAndixSms9L7gmC7b1cvD4BGycUPtFpbWaM\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol":{"Lib_AddressResolver":{"abi":[{"inputs":[],"name":"libAddressManager","outputs":[{"internalType":"contract Lib_AddressManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"resolve","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"libAddressManager()":"299ca478","resolve(string)":"461a4478"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"libAddressManager\",\"outputs\":[{\"internalType\":\"contract Lib_AddressManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_libAddressManager\":\"Address of the Lib_AddressManager.\"}},\"resolve(string)\":{\"params\":{\"_name\":\"Name to resolve an address for.\"},\"returns\":{\"_0\":\"Address associated with the given name.\"}}},\"title\":\"Lib_AddressResolver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"resolve(string)\":{\"notice\":\"Resolves the address associated with a given name.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol\":\"Lib_AddressResolver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol\":{\"keccak256\":\"0xcde9b29429d512c549f7c1b8a033f161fa71c18cda08b241748663854196ae14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbd748ce0173bd14166174c68a43e108ec27d8f90cf3dc3703cda120b641e0b\",\"dweb:/ipfs/QmT818AKJieRAndixSms9L7gmC7b1cvD4BGycUPtFpbWaM\"]},\"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol\":{\"keccak256\":\"0x515c4db671a28e2fe180201f6d11c0208c05f582ca3489fb6b8e81c27659bc62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c92c08efa7be210e9447267517c77ca39372b5bd33d121539ef1f59fac149fa\",\"dweb:/ipfs/QmZ8V2Kaw7XqGhCCe2CAPMCPkHgcMGr92enXfXqGpBYw23\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol":{"Lib_RLPReader":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204864d8a2a33835641989377beaeb90621c92f23feade068b75758102b8e58bcd64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE PUSH5 0xD8A2A33835 PUSH5 0x1989377BEA 0xEB SWAP1 PUSH3 0x1C92F2 EXTCODEHASH 0xEA 0xDE MOD DUP12 PUSH22 0x758102B8E58BCD64736F6C6343000811003300000000 ","sourceMap":"164:11031:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204864d8a2a33835641989377beaeb90621c92f23feade068b75758102b8e58bcd64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE PUSH5 0xD8A2A33835 PUSH5 0x1989377BEA 0xEB SWAP1 PUSH3 0x1C92F2 EXTCODEHASH 0xEA 0xDE MOD DUP12 PUSH22 0x758102B8E58BCD64736F6C6343000811003300000000 ","sourceMap":"164:11031:4:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Adapted from \\\"RLPReader\\\" by Hamdi Allam (hamdi.allam97@gmail.com).\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Lib_RLPReader\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol\":\"Lib_RLPReader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol\":{\"keccak256\":\"0xd794d1b32c6e31d40e2526b5e519de1b4e8d14d6933889f9b916e69c5d1848c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a6d82cce64bf143f77249c49de3d93687a2b3e69b020f2f74fad503806b52b\",\"dweb:/ipfs/QmUHF33h4Tn4Q4cVHwk82eMMer8YTDTk1u3e4MCfrSYt3J\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol":{"Lib_RLPWriter":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eeb8fb7a2b914dc2ead38af90bfb4157a95cfefeaf3cd1d68a427e4bdd794fcd64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xB8 0xFB PUSH27 0x2B914DC2EAD38AF90BFB4157A95CFEFEAF3CD1D68A427E4BDD794F 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"128:5830:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220eeb8fb7a2b914dc2ead38af90bfb4157a95cfefeaf3cd1d68a427e4bdd794fcd64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xB8 0xFB PUSH27 0x2B914DC2EAD38AF90BFB4157A95CFEFEAF3CD1D68A427E4BDD794F 0xCD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"128:5830:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Bakaoh (with modifications)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Lib_RLPWriter\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol\":\"Lib_RLPWriter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol\":{\"keccak256\":\"0x215b90672ce126effc3f2df61ca0cdf52d2b1cc9be602877e637829b0bf229fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7418707a22a792e838759becfa4ceb60774171a0a219cdd39452351225ec31a6\",\"dweb:/ipfs/QmZWxL4DNv8EVZoJbLSf4euzQwhzyRduSia5cVFJo4Bxh2\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol":{"Lib_Buffer":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204966c45d255d19fcfdd0d4ab6f9780bd8ac441b5fa9ce1621f9172d664bfaf9364736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH7 0xC45D255D19FCFD 0xD0 0xD4 0xAB PUSH16 0x9780BD8AC441B5FA9CE1621F9172D664 0xBF 0xAF SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"366:5422:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204966c45d255d19fcfdd0d4ab6f9780bd8ac441b5fa9ce1621f9172d664bfaf9364736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH7 0xC45D255D19FCFD 0xD0 0xD4 0xAB PUSH16 0x9780BD8AC441B5FA9CE1621F9172D664 0xBF 0xAF SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"366:5422:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library implements a bytes32 storage array with some additional gas-optimized functionality. In particular, it encodes its length as a uint40, and tightly packs this with an overwritable \\\"extra data\\\" field so we can store more information with a single SSTORE.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Lib_Buffer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol\":\"Lib_Buffer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol\":{\"keccak256\":\"0x38917b618db448e356c76c999ce9aaca094541eb1f9bc65b06b8d4d84308f056\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06bfafb4235e56fd6371939e90b4b6cbb4ccbe18ff0bc8af5fa457ec111d4bc5\",\"dweb:/ipfs/QmTsjSFRLdpRfGhLGLR7QghrSbkHpYN4qHaMGYzWyznYYS\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol":{"Lib_Bytes32Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c749ece33239b4dc708415e3b0eb253b44ed822d6882b360f79dbbd7eb7c46f564736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x49 0xEC 0xE3 ORIGIN CODECOPY 0xB4 0xDC PUSH17 0x8415E3B0EB253B44ED822D6882B360F79D 0xBB 0xD7 0xEB PUSH29 0x46F564736F6C6343000811003300000000000000000000000000000000 ","sourceMap":"91:1201:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c749ece33239b4dc708415e3b0eb253b44ed822d6882b360f79dbbd7eb7c46f564736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0x49 0xEC 0xE3 ORIGIN CODECOPY 0xB4 0xDC PUSH17 0x8415E3B0EB253B44ED822D6882B360F79D 0xBB 0xD7 0xEB PUSH29 0x46F564736F6C6343000811003300000000000000000000000000000000 ","sourceMap":"91:1201:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Lib_Byte32Utils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol\":\"Lib_Bytes32Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol\":{\"keccak256\":\"0xf2d1a526f2529e51fc2fffccf093c1691e291cbbb6de8a3da7d7f80024a9a234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3e0ff635f68c17f1b1a9b094a9da670dd1170241e67d8e87b00be2157f28ad6\",\"dweb:/ipfs/QmS9fK2TZ123NE2iXAbUxfaasSPGbui5EG6HP9uz6gveiN\"]}},\"version\":1}"}},"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol":{"Lib_BytesUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ad1061cdd17bc46bfe9a1d45b87c38e598c1af67b4517cdc7bc910bce8eaed964736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xD1 MOD SHR 0xDD OR 0xBC CHAINID 0xBF 0xE9 LOG1 0xD4 JUMPDEST DUP8 0xC3 DUP15 MSIZE DUP13 BYTE 0xF6 PUSH28 0x4517CDC7BC910BCE8EAED964736F6C63430008110033000000000000 ","sourceMap":"90:4482:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ad1061cdd17bc46bfe9a1d45b87c38e598c1af67b4517cdc7bc910bce8eaed964736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xD1 MOD SHR 0xDD OR 0xBC CHAINID 0xBF 0xE9 LOG1 0xD4 JUMPDEST DUP8 0xC3 DUP15 MSIZE DUP13 BYTE 0xF6 PUSH28 0x4517CDC7BC910BCE8EAED964736F6C63430008110033000000000000 ","sourceMap":"90:4482:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Lib_BytesUtils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol\":\"Lib_BytesUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol\":{\"keccak256\":\"0xc39ee13f97e4ccfbc72a5aac571deb3c1aff882fca2dd18be794d43ac5de0a30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c5761b5cf7287ac94404f54481d88ee0122bc031f1c2e0b4b2cc4c384e1b018\",\"dweb:/ipfs/QmbBTssPvH5ABa3e8MNRoHMkGGaoRXqneWhJzrDx7FsD1R\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"contracts/HelperChainStorageContainer.sol":{"HelperChainStorageContainer":{"abi":[{"inputs":[{"internalType":"address","name":"_libAddressManager","type":"address"},{"internalType":"string","name":"_owner","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"bytes27","name":"_globalMetadata","type":"bytes27"}],"name":"deleteElementsAfterInclusive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"deleteElementsAfterInclusive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"get","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGlobalMetadata","outputs":[{"internalType":"bytes27","name":"","type":"bytes27"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"length","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"libAddressManager","outputs":[{"internalType":"contract Lib_AddressManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_object","type":"bytes32"},{"internalType":"bytes27","name":"_globalMetadata","type":"bytes27"}],"name":"push","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_object","type":"bytes32"}],"name":"push","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"}],"name":"resolve","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes27","name":"_globalMetadata","type":"bytes27"}],"name":"setGlobalMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct Lib_OVMCodec.ChainBatchHeader","name":"_batchHeader","type":"tuple"}],"name":"setSavedHash","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2451":{"entryPoint":null,"id":2451,"parameterSlots":2,"returnSlots":0},"@_355":{"entryPoint":null,"id":355,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":525,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":245,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":600,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":396,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":147,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":427,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":864,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":753,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1185,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":199,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":167,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1146,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1020,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1340,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":481,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":885,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":811,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1310,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":342,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":1010,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1278,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":764,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":295,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1060,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":268,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":273,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":162,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":157,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":901,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1265,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1118,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":914,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1070,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":219,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1113,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8912:30","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:30","statements":[{"nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:30"},"nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:30"},"nodeType":"YulFunctionCall","src":"187:12:30"},"nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:30"},"nodeType":"YulFunctionCall","src":"310:12:30"},"nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nodeType":"YulBlock","src":"379:81:30","statements":[{"nodeType":"YulAssignment","src":"389:65:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:30"},"nodeType":"YulFunctionCall","src":"400:54:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:30"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:30","type":""}],"src":"334:126:30"},{"body":{"nodeType":"YulBlock","src":"511:51:30","statements":[{"nodeType":"YulAssignment","src":"521:35:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:30"},"nodeType":"YulFunctionCall","src":"532:24:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:30"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:30","type":""}],"src":"466:96:30"},{"body":{"nodeType":"YulBlock","src":"611:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:30"},"nodeType":"YulFunctionCall","src":"670:12:30"},"nodeType":"YulExpressionStatement","src":"670:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:30"},"nodeType":"YulFunctionCall","src":"641:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:30"},"nodeType":"YulFunctionCall","src":"631:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:30"},"nodeType":"YulFunctionCall","src":"624:43:30"},"nodeType":"YulIf","src":"621:63:30"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:30","type":""}],"src":"568:122:30"},{"body":{"nodeType":"YulBlock","src":"759:80:30","statements":[{"nodeType":"YulAssignment","src":"769:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:30"},"nodeType":"YulFunctionCall","src":"778:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:30"},"nodeType":"YulFunctionCall","src":"800:33:30"},"nodeType":"YulExpressionStatement","src":"800:33:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:30","type":""}],"src":"696:143:30"},{"body":{"nodeType":"YulBlock","src":"934:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:30"},"nodeType":"YulFunctionCall","src":"944:12:30"},"nodeType":"YulExpressionStatement","src":"944:12:30"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:30"},{"body":{"nodeType":"YulBlock","src":"1057:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:30"},"nodeType":"YulFunctionCall","src":"1067:12:30"},"nodeType":"YulExpressionStatement","src":"1067:12:30"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:30"},{"body":{"nodeType":"YulBlock","src":"1139:54:30","statements":[{"nodeType":"YulAssignment","src":"1149:38:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:30"},"nodeType":"YulFunctionCall","src":"1163:14:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:30"},"nodeType":"YulFunctionCall","src":"1179:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:30"},"nodeType":"YulFunctionCall","src":"1159:28:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:30"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:30","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:30","type":""}],"src":"1091:102:30"},{"body":{"nodeType":"YulBlock","src":"1227:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:30"},"nodeType":"YulFunctionCall","src":"1237:88:30"},"nodeType":"YulExpressionStatement","src":"1237:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:30"},"nodeType":"YulFunctionCall","src":"1334:15:30"},"nodeType":"YulExpressionStatement","src":"1334:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:30"},"nodeType":"YulFunctionCall","src":"1358:15:30"},"nodeType":"YulExpressionStatement","src":"1358:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:30"},{"body":{"nodeType":"YulBlock","src":"1428:238:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:30"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:30"},"nodeType":"YulFunctionCall","src":"1468:27:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:30"},"nodeType":"YulFunctionCall","src":"1456:40:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:30"},"nodeType":"YulFunctionCall","src":"1609:18:30"},"nodeType":"YulExpressionStatement","src":"1609:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:30"},"nodeType":"YulFunctionCall","src":"1547:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:30"},"nodeType":"YulFunctionCall","src":"1583:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:30"},"nodeType":"YulFunctionCall","src":"1544:62:30"},"nodeType":"YulIf","src":"1541:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:30"},"nodeType":"YulFunctionCall","src":"1638:22:30"},"nodeType":"YulExpressionStatement","src":"1638:22:30"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:30","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:30","type":""}],"src":"1385:281:30"},{"body":{"nodeType":"YulBlock","src":"1713:88:30","statements":[{"nodeType":"YulAssignment","src":"1723:30:30","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:30"},"nodeType":"YulFunctionCall","src":"1733:20:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:30"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:30"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:30"},"nodeType":"YulFunctionCall","src":"1762:33:30"},"nodeType":"YulExpressionStatement","src":"1762:33:30"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:30","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:30","type":""}],"src":"1672:129:30"},{"body":{"nodeType":"YulBlock","src":"1874:241:30","statements":[{"body":{"nodeType":"YulBlock","src":"1979:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1981:16:30"},"nodeType":"YulFunctionCall","src":"1981:18:30"},"nodeType":"YulExpressionStatement","src":"1981:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1951:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"1959:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1948:2:30"},"nodeType":"YulFunctionCall","src":"1948:30:30"},"nodeType":"YulIf","src":"1945:56:30"},{"nodeType":"YulAssignment","src":"2011:37:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2041:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2019:21:30"},"nodeType":"YulFunctionCall","src":"2019:29:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2011:4:30"}]},{"nodeType":"YulAssignment","src":"2085:23:30","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2097:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2093:3:30"},"nodeType":"YulFunctionCall","src":"2093:15:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:30"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1858:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1869:4:30","type":""}],"src":"1807:308:30"},{"body":{"nodeType":"YulBlock","src":"2183:184:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2193:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2202:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2197:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2262:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2287:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"2292:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2283:3:30"},"nodeType":"YulFunctionCall","src":"2283:11:30"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2306:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"2311:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2302:3:30"},"nodeType":"YulFunctionCall","src":"2302:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2296:5:30"},"nodeType":"YulFunctionCall","src":"2296:18:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2276:6:30"},"nodeType":"YulFunctionCall","src":"2276:39:30"},"nodeType":"YulExpressionStatement","src":"2276:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2223:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"2226:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2220:2:30"},"nodeType":"YulFunctionCall","src":"2220:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2234:19:30","statements":[{"nodeType":"YulAssignment","src":"2236:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2245:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"2248:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2241:3:30"},"nodeType":"YulFunctionCall","src":"2241:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2236:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"2216:3:30","statements":[]},"src":"2212:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2345:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2350:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2341:3:30"},"nodeType":"YulFunctionCall","src":"2341:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"2359:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2334:6:30"},"nodeType":"YulFunctionCall","src":"2334:27:30"},"nodeType":"YulExpressionStatement","src":"2334:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2165:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2170:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"2175:6:30","type":""}],"src":"2121:246:30"},{"body":{"nodeType":"YulBlock","src":"2468:339:30","statements":[{"nodeType":"YulAssignment","src":"2478:75:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2545:6:30"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2503:41:30"},"nodeType":"YulFunctionCall","src":"2503:49:30"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2487:15:30"},"nodeType":"YulFunctionCall","src":"2487:66:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2478:5:30"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2569:5:30"},{"name":"length","nodeType":"YulIdentifier","src":"2576:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2562:6:30"},"nodeType":"YulFunctionCall","src":"2562:21:30"},"nodeType":"YulExpressionStatement","src":"2562:21:30"},{"nodeType":"YulVariableDeclaration","src":"2592:27:30","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2607:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2614:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2603:3:30"},"nodeType":"YulFunctionCall","src":"2603:16:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2596:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"2657:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2659:77:30"},"nodeType":"YulFunctionCall","src":"2659:79:30"},"nodeType":"YulExpressionStatement","src":"2659:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2638:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2643:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:30"},"nodeType":"YulFunctionCall","src":"2634:16:30"},{"name":"end","nodeType":"YulIdentifier","src":"2652:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2631:2:30"},"nodeType":"YulFunctionCall","src":"2631:25:30"},"nodeType":"YulIf","src":"2628:112:30"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2784:3:30"},{"name":"dst","nodeType":"YulIdentifier","src":"2789:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2794:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2749:34:30"},"nodeType":"YulFunctionCall","src":"2749:52:30"},"nodeType":"YulExpressionStatement","src":"2749:52:30"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2441:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"2446:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"2454:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2462:5:30","type":""}],"src":"2373:434:30"},{"body":{"nodeType":"YulBlock","src":"2900:282:30","statements":[{"body":{"nodeType":"YulBlock","src":"2949:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2951:77:30"},"nodeType":"YulFunctionCall","src":"2951:79:30"},"nodeType":"YulExpressionStatement","src":"2951:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2928:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"2936:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2924:3:30"},"nodeType":"YulFunctionCall","src":"2924:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"2943:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2920:3:30"},"nodeType":"YulFunctionCall","src":"2920:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2913:6:30"},"nodeType":"YulFunctionCall","src":"2913:35:30"},"nodeType":"YulIf","src":"2910:122:30"},{"nodeType":"YulVariableDeclaration","src":"3041:27:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3061:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3055:5:30"},"nodeType":"YulFunctionCall","src":"3055:13:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3045:6:30","type":""}]},{"nodeType":"YulAssignment","src":"3077:99:30","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3149:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3157:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3145:3:30"},"nodeType":"YulFunctionCall","src":"3145:17:30"},{"name":"length","nodeType":"YulIdentifier","src":"3164:6:30"},{"name":"end","nodeType":"YulIdentifier","src":"3172:3:30"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3086:58:30"},"nodeType":"YulFunctionCall","src":"3086:90:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3077:5:30"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2878:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"2886:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2894:5:30","type":""}],"src":"2827:355:30"},{"body":{"nodeType":"YulBlock","src":"3292:576:30","statements":[{"body":{"nodeType":"YulBlock","src":"3338:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3340:77:30"},"nodeType":"YulFunctionCall","src":"3340:79:30"},"nodeType":"YulExpressionStatement","src":"3340:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3313:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3322:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3309:3:30"},"nodeType":"YulFunctionCall","src":"3309:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"3334:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3305:3:30"},"nodeType":"YulFunctionCall","src":"3305:32:30"},"nodeType":"YulIf","src":"3302:119:30"},{"nodeType":"YulBlock","src":"3431:128:30","statements":[{"nodeType":"YulVariableDeclaration","src":"3446:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3460:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3450:6:30","type":""}]},{"nodeType":"YulAssignment","src":"3475:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3521:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"3532:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3517:3:30"},"nodeType":"YulFunctionCall","src":"3517:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3541:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3485:31:30"},"nodeType":"YulFunctionCall","src":"3485:64:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3475:6:30"}]}]},{"nodeType":"YulBlock","src":"3569:292:30","statements":[{"nodeType":"YulVariableDeclaration","src":"3584:39:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3608:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3619:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3604:3:30"},"nodeType":"YulFunctionCall","src":"3604:18:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3598:5:30"},"nodeType":"YulFunctionCall","src":"3598:25:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3588:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3670:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3672:77:30"},"nodeType":"YulFunctionCall","src":"3672:79:30"},"nodeType":"YulExpressionStatement","src":"3672:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3642:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3650:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3639:2:30"},"nodeType":"YulFunctionCall","src":"3639:30:30"},"nodeType":"YulIf","src":"3636:117:30"},{"nodeType":"YulAssignment","src":"3767:84:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3823:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"3834:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3819:3:30"},"nodeType":"YulFunctionCall","src":"3819:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3843:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3777:41:30"},"nodeType":"YulFunctionCall","src":"3777:74:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3767:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3254:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3265:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3277:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3285:6:30","type":""}],"src":"3188:680:30"},{"body":{"nodeType":"YulBlock","src":"3933:40:30","statements":[{"nodeType":"YulAssignment","src":"3944:22:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3960:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3954:5:30"},"nodeType":"YulFunctionCall","src":"3954:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3944:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3916:5:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3926:6:30","type":""}],"src":"3874:99:30"},{"body":{"nodeType":"YulBlock","src":"4007:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4024:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4027:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4017:6:30"},"nodeType":"YulFunctionCall","src":"4017:88:30"},"nodeType":"YulExpressionStatement","src":"4017:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4121:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4124:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4114:6:30"},"nodeType":"YulFunctionCall","src":"4114:15:30"},"nodeType":"YulExpressionStatement","src":"4114:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4145:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4148:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4138:6:30"},"nodeType":"YulFunctionCall","src":"4138:15:30"},"nodeType":"YulExpressionStatement","src":"4138:15:30"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3979:180:30"},{"body":{"nodeType":"YulBlock","src":"4216:269:30","statements":[{"nodeType":"YulAssignment","src":"4226:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4240:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"4246:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4236:3:30"},"nodeType":"YulFunctionCall","src":"4236:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4226:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"4257:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4287:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"4293:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4283:3:30"},"nodeType":"YulFunctionCall","src":"4283:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4261:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4334:51:30","statements":[{"nodeType":"YulAssignment","src":"4348:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4362:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4370:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4358:3:30"},"nodeType":"YulFunctionCall","src":"4358:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4348:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4314:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4307:6:30"},"nodeType":"YulFunctionCall","src":"4307:26:30"},"nodeType":"YulIf","src":"4304:81:30"},{"body":{"nodeType":"YulBlock","src":"4437:42:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4451:16:30"},"nodeType":"YulFunctionCall","src":"4451:18:30"},"nodeType":"YulExpressionStatement","src":"4451:18:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4401:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4424:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4432:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4421:2:30"},"nodeType":"YulFunctionCall","src":"4421:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4398:2:30"},"nodeType":"YulFunctionCall","src":"4398:38:30"},"nodeType":"YulIf","src":"4395:84:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4200:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4209:6:30","type":""}],"src":"4165:320:30"},{"body":{"nodeType":"YulBlock","src":"4545:87:30","statements":[{"nodeType":"YulAssignment","src":"4555:11:30","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4563:3:30"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4555:4:30"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4583:1:30","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4586:3:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4576:6:30"},"nodeType":"YulFunctionCall","src":"4576:14:30"},"nodeType":"YulExpressionStatement","src":"4576:14:30"},{"nodeType":"YulAssignment","src":"4599:26:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4617:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4620:4:30","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4607:9:30"},"nodeType":"YulFunctionCall","src":"4607:18:30"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4599:4:30"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4532:3:30","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4540:4:30","type":""}],"src":"4491:141:30"},{"body":{"nodeType":"YulBlock","src":"4682:49:30","statements":[{"nodeType":"YulAssignment","src":"4692:33:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4710:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4717:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4706:3:30"},"nodeType":"YulFunctionCall","src":"4706:14:30"},{"kind":"number","nodeType":"YulLiteral","src":"4722:2:30","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4702:3:30"},"nodeType":"YulFunctionCall","src":"4702:23:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4692:6:30"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4665:5:30","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4675:6:30","type":""}],"src":"4638:93:30"},{"body":{"nodeType":"YulBlock","src":"4790:54:30","statements":[{"nodeType":"YulAssignment","src":"4800:37:30","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4825:4:30"},{"name":"value","nodeType":"YulIdentifier","src":"4831:5:30"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4821:3:30"},"nodeType":"YulFunctionCall","src":"4821:16:30"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4800:8:30"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4765:4:30","type":""},{"name":"value","nodeType":"YulTypedName","src":"4771:5:30","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4781:8:30","type":""}],"src":"4737:107:30"},{"body":{"nodeType":"YulBlock","src":"4926:317:30","statements":[{"nodeType":"YulVariableDeclaration","src":"4936:35:30","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4957:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"4969:1:30","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4953:3:30"},"nodeType":"YulFunctionCall","src":"4953:18:30"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4940:9:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4980:109:30","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5011:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5022:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4992:18:30"},"nodeType":"YulFunctionCall","src":"4992:97:30"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4984:4:30","type":""}]},{"nodeType":"YulAssignment","src":"5098:51:30","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"5129:9:30"},{"name":"toInsert","nodeType":"YulIdentifier","src":"5140:8:30"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"5110:18:30"},"nodeType":"YulFunctionCall","src":"5110:39:30"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5098:8:30"}]},{"nodeType":"YulAssignment","src":"5158:30:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5171:5:30"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"5182:4:30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5178:3:30"},"nodeType":"YulFunctionCall","src":"5178:9:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5167:3:30"},"nodeType":"YulFunctionCall","src":"5167:21:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5158:5:30"}]},{"nodeType":"YulAssignment","src":"5197:40:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5210:5:30"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"5221:8:30"},{"name":"mask","nodeType":"YulIdentifier","src":"5231:4:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5217:3:30"},"nodeType":"YulFunctionCall","src":"5217:19:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5207:2:30"},"nodeType":"YulFunctionCall","src":"5207:30:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5197:6:30"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4887:5:30","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4894:10:30","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4906:8:30","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4919:6:30","type":""}],"src":"4850:393:30"},{"body":{"nodeType":"YulBlock","src":"5294:32:30","statements":[{"nodeType":"YulAssignment","src":"5304:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"5315:5:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5304:7:30"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5276:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5286:7:30","type":""}],"src":"5249:77:30"},{"body":{"nodeType":"YulBlock","src":"5364:28:30","statements":[{"nodeType":"YulAssignment","src":"5374:12:30","value":{"name":"value","nodeType":"YulIdentifier","src":"5381:5:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5374:3:30"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5350:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5360:3:30","type":""}],"src":"5332:60:30"},{"body":{"nodeType":"YulBlock","src":"5458:82:30","statements":[{"nodeType":"YulAssignment","src":"5468:66:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5526:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5508:17:30"},"nodeType":"YulFunctionCall","src":"5508:24:30"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5499:8:30"},"nodeType":"YulFunctionCall","src":"5499:34:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5481:17:30"},"nodeType":"YulFunctionCall","src":"5481:53:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5468:9:30"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5438:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5448:9:30","type":""}],"src":"5398:142:30"},{"body":{"nodeType":"YulBlock","src":"5593:28:30","statements":[{"nodeType":"YulAssignment","src":"5603:12:30","value":{"name":"value","nodeType":"YulIdentifier","src":"5610:5:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5603:3:30"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5579:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5589:3:30","type":""}],"src":"5546:75:30"},{"body":{"nodeType":"YulBlock","src":"5703:193:30","statements":[{"nodeType":"YulVariableDeclaration","src":"5713:63:30","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5768:7:30"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5737:30:30"},"nodeType":"YulFunctionCall","src":"5737:39:30"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5717:16:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5792:4:30"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5832:4:30"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5826:5:30"},"nodeType":"YulFunctionCall","src":"5826:11:30"},{"name":"offset","nodeType":"YulIdentifier","src":"5839:6:30"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5871:16:30"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5847:23:30"},"nodeType":"YulFunctionCall","src":"5847:41:30"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5798:27:30"},"nodeType":"YulFunctionCall","src":"5798:91:30"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5785:6:30"},"nodeType":"YulFunctionCall","src":"5785:105:30"},"nodeType":"YulExpressionStatement","src":"5785:105:30"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5680:4:30","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5686:6:30","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5694:7:30","type":""}],"src":"5627:269:30"},{"body":{"nodeType":"YulBlock","src":"5951:24:30","statements":[{"nodeType":"YulAssignment","src":"5961:8:30","value":{"kind":"number","nodeType":"YulLiteral","src":"5968:1:30","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5961:3:30"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5947:3:30","type":""}],"src":"5902:73:30"},{"body":{"nodeType":"YulBlock","src":"6034:136:30","statements":[{"nodeType":"YulVariableDeclaration","src":"6044:46:30","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"6058:30:30"},"nodeType":"YulFunctionCall","src":"6058:32:30"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"6048:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"6143:4:30"},{"name":"offset","nodeType":"YulIdentifier","src":"6149:6:30"},{"name":"zero_0","nodeType":"YulIdentifier","src":"6157:6:30"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6099:43:30"},"nodeType":"YulFunctionCall","src":"6099:65:30"},"nodeType":"YulExpressionStatement","src":"6099:65:30"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"6020:4:30","type":""},{"name":"offset","nodeType":"YulTypedName","src":"6026:6:30","type":""}],"src":"5981:189:30"},{"body":{"nodeType":"YulBlock","src":"6226:136:30","statements":[{"body":{"nodeType":"YulBlock","src":"6293:63:30","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6337:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"6344:1:30","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"6307:29:30"},"nodeType":"YulFunctionCall","src":"6307:39:30"},"nodeType":"YulExpressionStatement","src":"6307:39:30"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6246:5:30"},{"name":"end","nodeType":"YulIdentifier","src":"6253:3:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6243:2:30"},"nodeType":"YulFunctionCall","src":"6243:14:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6258:26:30","statements":[{"nodeType":"YulAssignment","src":"6260:22:30","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"6273:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"6280:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6269:3:30"},"nodeType":"YulFunctionCall","src":"6269:13:30"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"6260:5:30"}]}]},"pre":{"nodeType":"YulBlock","src":"6240:2:30","statements":[]},"src":"6236:120:30"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"6214:5:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"6221:3:30","type":""}],"src":"6176:186:30"},{"body":{"nodeType":"YulBlock","src":"6447:464:30","statements":[{"body":{"nodeType":"YulBlock","src":"6473:431:30","statements":[{"nodeType":"YulVariableDeclaration","src":"6487:54:30","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6535:5:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6503:31:30"},"nodeType":"YulFunctionCall","src":"6503:38:30"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6491:8:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6554:63:30","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6577:8:30"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6605:10:30"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6587:17:30"},"nodeType":"YulFunctionCall","src":"6587:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6573:3:30"},"nodeType":"YulFunctionCall","src":"6573:44:30"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6558:11:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"6774:27:30","statements":[{"nodeType":"YulAssignment","src":"6776:23:30","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6791:8:30"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6776:11:30"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6758:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"6770:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6755:2:30"},"nodeType":"YulFunctionCall","src":"6755:18:30"},"nodeType":"YulIf","src":"6752:49:30"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6843:11:30"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6860:8:30"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6888:3:30"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6870:17:30"},"nodeType":"YulFunctionCall","src":"6870:22:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6856:3:30"},"nodeType":"YulFunctionCall","src":"6856:37:30"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6814:28:30"},"nodeType":"YulFunctionCall","src":"6814:80:30"},"nodeType":"YulExpressionStatement","src":"6814:80:30"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6464:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"6469:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6461:2:30"},"nodeType":"YulFunctionCall","src":"6461:11:30"},"nodeType":"YulIf","src":"6458:446:30"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6423:5:30","type":""},{"name":"len","nodeType":"YulTypedName","src":"6430:3:30","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6435:10:30","type":""}],"src":"6368:543:30"},{"body":{"nodeType":"YulBlock","src":"6980:54:30","statements":[{"nodeType":"YulAssignment","src":"6990:37:30","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7015:4:30"},{"name":"value","nodeType":"YulIdentifier","src":"7021:5:30"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7011:3:30"},"nodeType":"YulFunctionCall","src":"7011:16:30"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6990:8:30"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6955:4:30","type":""},{"name":"value","nodeType":"YulTypedName","src":"6961:5:30","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6971:8:30","type":""}],"src":"6917:117:30"},{"body":{"nodeType":"YulBlock","src":"7091:118:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7101:68:30","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7150:1:30","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"7153:5:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7146:3:30"},"nodeType":"YulFunctionCall","src":"7146:13:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7165:1:30","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7161:3:30"},"nodeType":"YulFunctionCall","src":"7161:6:30"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"7117:28:30"},"nodeType":"YulFunctionCall","src":"7117:51:30"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7113:3:30"},"nodeType":"YulFunctionCall","src":"7113:56:30"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7105:4:30","type":""}]},{"nodeType":"YulAssignment","src":"7178:25:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7192:4:30"},{"name":"mask","nodeType":"YulIdentifier","src":"7198:4:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7188:3:30"},"nodeType":"YulFunctionCall","src":"7188:15:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7178:6:30"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7068:4:30","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"7074:5:30","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7084:6:30","type":""}],"src":"7040:169:30"},{"body":{"nodeType":"YulBlock","src":"7295:214:30","statements":[{"nodeType":"YulAssignment","src":"7428:37:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7455:4:30"},{"name":"len","nodeType":"YulIdentifier","src":"7461:3:30"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7436:18:30"},"nodeType":"YulFunctionCall","src":"7436:29:30"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7428:4:30"}]},{"nodeType":"YulAssignment","src":"7474:29:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7485:4:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7495:1:30","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7498:3:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7491:3:30"},"nodeType":"YulFunctionCall","src":"7491:11:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7482:2:30"},"nodeType":"YulFunctionCall","src":"7482:21:30"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7474:4:30"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7276:4:30","type":""},{"name":"len","nodeType":"YulTypedName","src":"7282:3:30","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"7290:4:30","type":""}],"src":"7214:295:30"},{"body":{"nodeType":"YulBlock","src":"7606:1303:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7617:51:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7664:3:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7631:32:30"},"nodeType":"YulFunctionCall","src":"7631:37:30"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7621:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7753:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7755:16:30"},"nodeType":"YulFunctionCall","src":"7755:18:30"},"nodeType":"YulExpressionStatement","src":"7755:18:30"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7725:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"7733:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7722:2:30"},"nodeType":"YulFunctionCall","src":"7722:30:30"},"nodeType":"YulIf","src":"7719:56:30"},{"nodeType":"YulVariableDeclaration","src":"7785:52:30","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7831:4:30"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7825:5:30"},"nodeType":"YulFunctionCall","src":"7825:11:30"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7799:25:30"},"nodeType":"YulFunctionCall","src":"7799:38:30"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7789:6:30","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7930:4:30"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7936:6:30"},{"name":"newLen","nodeType":"YulIdentifier","src":"7944:6:30"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7884:45:30"},"nodeType":"YulFunctionCall","src":"7884:67:30"},"nodeType":"YulExpressionStatement","src":"7884:67:30"},{"nodeType":"YulVariableDeclaration","src":"7961:18:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7978:1:30","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7965:9:30","type":""}]},{"nodeType":"YulAssignment","src":"7989:17:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8002:4:30","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7989:9:30"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"8053:611:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8067:37:30","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8086:6:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8098:4:30","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8094:3:30"},"nodeType":"YulFunctionCall","src":"8094:9:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8082:3:30"},"nodeType":"YulFunctionCall","src":"8082:22:30"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"8071:7:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8118:51:30","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8164:4:30"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8132:31:30"},"nodeType":"YulFunctionCall","src":"8132:37:30"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"8122:6:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8182:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8191:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8186:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"8250:163:30","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8275:6:30"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8293:3:30"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8298:9:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8289:3:30"},"nodeType":"YulFunctionCall","src":"8289:19:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8283:5:30"},"nodeType":"YulFunctionCall","src":"8283:26:30"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8268:6:30"},"nodeType":"YulFunctionCall","src":"8268:42:30"},"nodeType":"YulExpressionStatement","src":"8268:42:30"},{"nodeType":"YulAssignment","src":"8327:24:30","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8341:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8349:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8337:3:30"},"nodeType":"YulFunctionCall","src":"8337:14:30"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8327:6:30"}]},{"nodeType":"YulAssignment","src":"8368:31:30","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8385:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8396:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8381:3:30"},"nodeType":"YulFunctionCall","src":"8381:18:30"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8368:9:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8216:1:30"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"8219:7:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8213:2:30"},"nodeType":"YulFunctionCall","src":"8213:14:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8228:21:30","statements":[{"nodeType":"YulAssignment","src":"8230:17:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8239:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"8242:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8235:3:30"},"nodeType":"YulFunctionCall","src":"8235:12:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8230:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"8209:3:30","statements":[]},"src":"8205:208:30"},{"body":{"nodeType":"YulBlock","src":"8449:156:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8467:43:30","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8494:3:30"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8499:9:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8490:3:30"},"nodeType":"YulFunctionCall","src":"8490:19:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8484:5:30"},"nodeType":"YulFunctionCall","src":"8484:26:30"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8471:9:30","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8534:6:30"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8561:9:30"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8576:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8584:4:30","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8572:3:30"},"nodeType":"YulFunctionCall","src":"8572:17:30"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8542:18:30"},"nodeType":"YulFunctionCall","src":"8542:48:30"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8527:6:30"},"nodeType":"YulFunctionCall","src":"8527:64:30"},"nodeType":"YulExpressionStatement","src":"8527:64:30"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8432:7:30"},{"name":"newLen","nodeType":"YulIdentifier","src":"8441:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8429:2:30"},"nodeType":"YulFunctionCall","src":"8429:19:30"},"nodeType":"YulIf","src":"8426:179:30"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8625:4:30"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8639:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8647:1:30","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8635:3:30"},"nodeType":"YulFunctionCall","src":"8635:14:30"},{"kind":"number","nodeType":"YulLiteral","src":"8651:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8631:3:30"},"nodeType":"YulFunctionCall","src":"8631:22:30"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8618:6:30"},"nodeType":"YulFunctionCall","src":"8618:36:30"},"nodeType":"YulExpressionStatement","src":"8618:36:30"}]},"nodeType":"YulCase","src":"8046:618:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8051:1:30","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8681:222:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8695:14:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8708:1:30","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8699:5:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"8732:67:30","statements":[{"nodeType":"YulAssignment","src":"8750:35:30","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8769:3:30"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8774:9:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8765:3:30"},"nodeType":"YulFunctionCall","src":"8765:19:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8759:5:30"},"nodeType":"YulFunctionCall","src":"8759:26:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8750:5:30"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8725:6:30"},"nodeType":"YulIf","src":"8722:77:30"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8819:4:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8878:5:30"},{"name":"newLen","nodeType":"YulIdentifier","src":"8885:6:30"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8825:52:30"},"nodeType":"YulFunctionCall","src":"8825:67:30"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8812:6:30"},"nodeType":"YulFunctionCall","src":"8812:81:30"},"nodeType":"YulExpressionStatement","src":"8812:81:30"}]},"nodeType":"YulCase","src":"8673:230:30","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8026:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8034:2:30","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8023:2:30"},"nodeType":"YulFunctionCall","src":"8023:14:30"},"nodeType":"YulSwitch","src":"8016:887:30"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7595:4:30","type":""},{"name":"src","nodeType":"YulTypedName","src":"7601:3:30","type":""}],"src":"7514:1395:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001c9b38038062001c9b83398181016040528101906200003791906200028b565b81806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600190816200008a91906200053c565b50505062000623565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d482620000a7565b9050919050565b620000e681620000c7565b8114620000f257600080fd5b50565b6000815190506200010681620000db565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001618262000116565b810181811067ffffffffffffffff8211171562000183576200018262000127565b5b80604052505050565b60006200019862000093565b9050620001a6828262000156565b919050565b600067ffffffffffffffff821115620001c957620001c862000127565b5b620001d48262000116565b9050602081019050919050565b60005b8381101562000201578082015181840152602081019050620001e4565b60008484015250505050565b6000620002246200021e84620001ab565b6200018c565b90508281526020810184848401111562000243576200024262000111565b5b62000250848285620001e1565b509392505050565b600082601f83011262000270576200026f6200010c565b5b8151620002828482602086016200020d565b91505092915050565b60008060408385031215620002a557620002a46200009d565b5b6000620002b585828601620000f5565b925050602083015167ffffffffffffffff811115620002d957620002d8620000a2565b5b620002e78582860162000258565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200034457607f821691505b6020821081036200035a5762000359620002fc565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003c47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000385565b620003d0868362000385565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200041d620004176200041184620003e8565b620003f2565b620003e8565b9050919050565b6000819050919050565b6200043983620003fc565b62000451620004488262000424565b84845462000392565b825550505050565b600090565b6200046862000459565b620004758184846200042e565b505050565b5b818110156200049d57620004916000826200045e565b6001810190506200047b565b5050565b601f821115620004ec57620004b68162000360565b620004c18462000375565b81016020851015620004d1578190505b620004e9620004e08562000375565b8301826200047a565b50505b505050565b600082821c905092915050565b60006200051160001984600802620004f1565b1980831691505092915050565b60006200052c8383620004fe565b9150826002028217905092915050565b6200054782620002f1565b67ffffffffffffffff81111562000563576200056262000127565b5b6200056f82546200032b565b6200057c828285620004a1565b600060209050601f831160018114620005b457600084156200059f578287015190505b620005ab85826200051e565b8655506200061b565b601f198416620005c48662000360565b60005b82811015620005ee57848901518255600182019150602085019450602081019050620005c7565b868310156200060e57848901516200060a601f891682620004fe565b8355505b6001600288020188555050505b505050505050565b61166880620006336000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063461a447811610071578063461a4478146101655780634651d91e146101955780638da5cb5b146101b15780639507d39a146101cf578063b298e36b146101ff578063ccf8f9691461021b576100b4565b8063167fd681146100b95780631f7b6d32146100d55780632015276c146100f357806329061de21461010f578063299ca4781461012b5780633d16057214610149575b600080fd5b6100d360048036038101906100ce9190610d10565b610239565b005b6100dd610353565b6040516100ea9190610d5f565b60405180910390f35b61010d60048036038101906101089190610db0565b61036b565b005b61012960048036038101906101249190610df0565b610485565b005b61013361059c565b6040516101409190610e9c565b60405180910390f35b610163600480360381019061015e91906110af565b6105c0565b005b61017f600480360381019061017a9190611199565b6105d2565b60405161018c9190611203565b60405180910390f35b6101af60048036038101906101aa919061121e565b610676565b005b6101b961078d565b6040516101c691906112ca565b60405180910390f35b6101e960048036038101906101e4919061121e565b61081b565b6040516101f691906112fb565b60405180910390f35b61021960048036038101906102149190611316565b610827565b005b61022361093e565b6040516102309190611352565b60405180910390f35b6102cc600180546102499061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546102759061139c565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610339576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103309061143f565b60405180910390fd5b61034f8282600261094f9092919063ffffffff16565b5050565b600061035f60026109ff565b64ffffffffff16905090565b6103fe6001805461037b9061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546103a79061139c565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104629061143f565b60405180910390fd5b61048182826002610a1a9092919063ffffffff16565b5050565b610518600180546104959061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546104c19061139c565b801561050e5780601f106104e35761010080835404028352916020019161050e565b820191906000526020600020905b8154815290600101906020018083116104f157829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c9061143f565b60405180910390fd5b610599816002610aa590919063ffffffff16565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105c981610ae6565b60048190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bf40fac1836040518263ffffffff1660e01b815260040161062e91906112ca565b602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f919061148b565b9050919050565b610709600180546106869061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061139c565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d9061143f565b60405180910390fd5b61078a816002610b2c90919063ffffffff16565b50565b6001805461079a9061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546107c69061139c565b80156108135780601f106107e857610100808354040283529160200191610813565b820191906000526020600020905b8154815290600101906020018083116107f657829003601f168201915b505050505081565b60006004549050919050565b6108ba600180546108379061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546108639061139c565b80156108b05780601f10610885576101008083540402835291602001916108b0565b820191906000526020600020905b81548152906001019060200180831161089357829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e9061143f565b60405180910390fd5b61093b816002610b5790919063ffffffff16565b50565b600061094a6002610b82565b905090565b600061095a84610b9d565b9050806000015164ffffffffff168364ffffffffff16106109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611504565b60405180910390fd5b82816000019064ffffffffff16908164ffffffffff168152505081816020019064ffffffffff1916908164ffffffffff1916815250506109f98185610c0e90919063ffffffff16565b50505050565b600080610a0b83610b9d565b90508060000151915050919050565b6000610a2584610b9d565b905082846001016000836000015164ffffffffff16815260200190815260200160002081905550806000018051809190610a5e90611564565b64ffffffffff1664ffffffffff168152505081816020019064ffffffffff1916908164ffffffffff191681525050610a9f8185610c0e90919063ffffffff16565b50505050565b6000610ab083610b9d565b905081816020019064ffffffffff1916908164ffffffffff191681525050610ae18184610c0e90919063ffffffff16565b505050565b60008160200151826040015183606001518460800151604051602001610b0f94939291906115e6565b604051602081830303815290604052805190602001209050919050565b6000610b3783610b9d565b9050610b528282602001518561094f9092919063ffffffff16565b505050565b6000610b6283610b9d565b9050610b7d82826020015185610a1a9092919063ffffffff16565b505050565b600080610b8e83610b9d565b90508060200151915050919050565b610ba5610c45565b60008260000154905060008064ffffffffff831691507fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000008316905060405180604001604052808364ffffffffff1681526020018264ffffffffff19168152509350505050919050565b60008082600001519050600083602001519050819250808317925082856000015414610c3e578285600001819055505b5050505050565b6040518060400160405280600064ffffffffff168152602001600064ffffffffff191681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610c9581610c82565b8114610ca057600080fd5b50565b600081359050610cb281610c8c565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000082169050919050565b610ced81610cb8565b8114610cf857600080fd5b50565b600081359050610d0a81610ce4565b92915050565b60008060408385031215610d2757610d26610c78565b5b6000610d3585828601610ca3565b9250506020610d4685828601610cfb565b9150509250929050565b610d5981610c82565b82525050565b6000602082019050610d746000830184610d50565b92915050565b6000819050919050565b610d8d81610d7a565b8114610d9857600080fd5b50565b600081359050610daa81610d84565b92915050565b60008060408385031215610dc757610dc6610c78565b5b6000610dd585828601610d9b565b9250506020610de685828601610cfb565b9150509250929050565b600060208284031215610e0657610e05610c78565b5b6000610e1484828501610cfb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e62610e5d610e5884610e1d565b610e3d565b610e1d565b9050919050565b6000610e7482610e47565b9050919050565b6000610e8682610e69565b9050919050565b610e9681610e7b565b82525050565b6000602082019050610eb16000830184610e8d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f0582610ebc565b810181811067ffffffffffffffff82111715610f2457610f23610ecd565b5b80604052505050565b6000610f37610c6e565b9050610f438282610efc565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610f7257610f71610ecd565b5b610f7b82610ebc565b9050602081019050919050565b82818337600083830152505050565b6000610faa610fa584610f57565b610f2d565b905082815260208101848484011115610fc657610fc5610f52565b5b610fd1848285610f88565b509392505050565b600082601f830112610fee57610fed610f4d565b5b8135610ffe848260208601610f97565b91505092915050565b600060a0828403121561101d5761101c610eb7565b5b61102760a0610f2d565b9050600061103784828501610ca3565b600083015250602061104b84828501610d9b565b602083015250604061105f84828501610ca3565b604083015250606061107384828501610ca3565b606083015250608082013567ffffffffffffffff81111561109757611096610f48565b5b6110a384828501610fd9565b60808301525092915050565b6000602082840312156110c5576110c4610c78565b5b600082013567ffffffffffffffff8111156110e3576110e2610c7d565b5b6110ef84828501611007565b91505092915050565b600067ffffffffffffffff82111561111357611112610ecd565b5b61111c82610ebc565b9050602081019050919050565b600061113c611137846110f8565b610f2d565b90508281526020810184848401111561115857611157610f52565b5b611163848285610f88565b509392505050565b600082601f8301126111805761117f610f4d565b5b8135611190848260208601611129565b91505092915050565b6000602082840312156111af576111ae610c78565b5b600082013567ffffffffffffffff8111156111cd576111cc610c7d565b5b6111d98482850161116b565b91505092915050565b60006111ed82610e1d565b9050919050565b6111fd816111e2565b82525050565b600060208201905061121860008301846111f4565b92915050565b60006020828403121561123457611233610c78565b5b600061124284828501610ca3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561128557808201518184015260208101905061126a565b60008484015250505050565b600061129c8261124b565b6112a68185611256565b93506112b6818560208601611267565b6112bf81610ebc565b840191505092915050565b600060208201905081810360008301526112e48184611291565b905092915050565b6112f581610d7a565b82525050565b600060208201905061131060008301846112ec565b92915050565b60006020828403121561132c5761132b610c78565b5b600061133a84828501610d9b565b91505092915050565b61134c81610cb8565b82525050565b60006020820190506113676000830184611343565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113b457607f821691505b6020821081036113c7576113c661136d565b5b50919050565b7f436861696e53746f72616765436f6e7461696e65723a2046756e6374696f6e2060008201527f63616e206f6e6c792062652063616c6c656420627920746865206f776e65722e602082015250565b6000611429604083611256565b9150611434826113cd565b604082019050919050565b600060208201905081810360008301526114588161141c565b9050919050565b611468816111e2565b811461147357600080fd5b50565b6000815190506114858161145f565b92915050565b6000602082840312156114a1576114a0610c78565b5b60006114af84828501611476565b91505092915050565b7f496e646578206f7574206f6620626f756e64732e000000000000000000000000600082015250565b60006114ee601483611256565b91506114f9826114b8565b602082019050919050565b6000602082019050818103600083015261151d816114e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600064ffffffffff82169050919050565b600061156f82611553565b915064ffffffffff820361158657611585611524565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60006115b882611591565b6115c2818561159c565b93506115d2818560208601611267565b6115db81610ebc565b840191505092915050565b60006080820190506115fb60008301876112ec565b6116086020830186610d50565b6116156040830185610d50565b818103606083015261162781846115ad565b90509594505050505056fea26469706673582212205779a823144bb5710996351f7cf1bf5f4f879ef91edfc2e713d41489948a3de464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C9B CODESIZE SUB DUP1 PUSH3 0x1C9B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x28B JUMP JUMPDEST DUP2 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x8A SWAP2 SWAP1 PUSH3 0x53C JUMP JUMPDEST POP POP POP PUSH3 0x623 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xD4 DUP3 PUSH3 0xA7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xE6 DUP2 PUSH3 0xC7 JUMP JUMPDEST DUP2 EQ PUSH3 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x106 DUP2 PUSH3 0xDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x161 DUP3 PUSH3 0x116 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x183 JUMPI PUSH3 0x182 PUSH3 0x127 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x198 PUSH3 0x93 JUMP JUMPDEST SWAP1 POP PUSH3 0x1A6 DUP3 DUP3 PUSH3 0x156 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1C9 JUMPI PUSH3 0x1C8 PUSH3 0x127 JUMP JUMPDEST JUMPDEST PUSH3 0x1D4 DUP3 PUSH3 0x116 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x201 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x1E4 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x224 PUSH3 0x21E DUP5 PUSH3 0x1AB JUMP JUMPDEST PUSH3 0x18C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x243 JUMPI PUSH3 0x242 PUSH3 0x111 JUMP JUMPDEST JUMPDEST PUSH3 0x250 DUP5 DUP3 DUP6 PUSH3 0x1E1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x270 JUMPI PUSH3 0x26F PUSH3 0x10C JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x282 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x20D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2A5 JUMPI PUSH3 0x2A4 PUSH3 0x9D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x2B5 DUP6 DUP3 DUP7 ADD PUSH3 0xF5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2D9 JUMPI PUSH3 0x2D8 PUSH3 0xA2 JUMP JUMPDEST JUMPDEST PUSH3 0x2E7 DUP6 DUP3 DUP7 ADD PUSH3 0x258 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x344 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x35A JUMPI PUSH3 0x359 PUSH3 0x2FC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x3C4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x385 JUMP JUMPDEST PUSH3 0x3D0 DUP7 DUP4 PUSH3 0x385 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x41D PUSH3 0x417 PUSH3 0x411 DUP5 PUSH3 0x3E8 JUMP JUMPDEST PUSH3 0x3F2 JUMP JUMPDEST PUSH3 0x3E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x439 DUP4 PUSH3 0x3FC JUMP JUMPDEST PUSH3 0x451 PUSH3 0x448 DUP3 PUSH3 0x424 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x392 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x468 PUSH3 0x459 JUMP JUMPDEST PUSH3 0x475 DUP2 DUP5 DUP5 PUSH3 0x42E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x49D JUMPI PUSH3 0x491 PUSH1 0x0 DUP3 PUSH3 0x45E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x47B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4EC JUMPI PUSH3 0x4B6 DUP2 PUSH3 0x360 JUMP JUMPDEST PUSH3 0x4C1 DUP5 PUSH3 0x375 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4D1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4E9 PUSH3 0x4E0 DUP6 PUSH3 0x375 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x47A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x511 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4F1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x52C DUP4 DUP4 PUSH3 0x4FE JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x547 DUP3 PUSH3 0x2F1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x563 JUMPI PUSH3 0x562 PUSH3 0x127 JUMP JUMPDEST JUMPDEST PUSH3 0x56F DUP3 SLOAD PUSH3 0x32B JUMP JUMPDEST PUSH3 0x57C DUP3 DUP3 DUP6 PUSH3 0x4A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x5B4 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x59F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x5AB DUP6 DUP3 PUSH3 0x51E JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x61B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x5C4 DUP7 PUSH3 0x360 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5EE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5C7 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x60E JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x60A PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4FE JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1668 DUP1 PUSH3 0x633 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x461A4478 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x461A4478 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x4651D91E EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x9507D39A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xB298E36B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCCF8F969 EQ PUSH2 0x21B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x167FD681 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2015276C EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x29061DE2 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x299CA478 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x3D160572 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x1 DUP1 SLOAD PUSH2 0x249 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x275 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x297 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x330 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP3 DUP3 PUSH1 0x2 PUSH2 0x94F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F PUSH1 0x2 PUSH2 0x9FF JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3FE PUSH1 0x1 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A7 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x481 DUP3 DUP3 PUSH1 0x2 PUSH2 0xA1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x518 PUSH1 0x1 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C1 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57C SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x599 DUP2 PUSH1 0x2 PUSH2 0xAA5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5C9 DUP2 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBF40FAC1 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x148B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x709 PUSH1 0x1 DUP1 SLOAD PUSH2 0x686 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A DUP2 PUSH1 0x2 PUSH2 0xB2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C6 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x813 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x813 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BA PUSH1 0x1 DUP1 SLOAD PUSH2 0x837 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x863 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x885 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x893 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91E SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93B DUP2 PUSH1 0x2 PUSH2 0xB57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94A PUSH1 0x2 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95A DUP5 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH5 0xFFFFFFFFFF AND DUP4 PUSH5 0xFFFFFFFFFF AND LT PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD SWAP1 PUSH5 0xFFFFFFFFFF AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH5 0xFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP POP PUSH2 0x9F9 DUP2 DUP6 PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0B DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA25 DUP5 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0xA5E SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH5 0xFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP POP PUSH2 0xA9F DUP2 DUP6 PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH5 0xFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP POP PUSH2 0xAE1 DUP2 DUP5 PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP PUSH2 0xB52 DUP3 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x94F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP PUSH2 0xB7D DUP3 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0xA1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB8E DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH5 0xFFFFFFFFFF DUP4 AND SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000 DUP4 AND SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 SWAP3 POP DUP1 DUP4 OR SWAP3 POP DUP3 DUP6 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xC3E JUMPI DUP3 DUP6 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC95 DUP2 PUSH2 0xC82 JUMP JUMPDEST DUP2 EQ PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCB2 DUP2 PUSH2 0xC8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCED DUP2 PUSH2 0xCB8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0A DUP2 PUSH2 0xCE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD27 JUMPI PUSH2 0xD26 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP6 DUP3 DUP7 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD46 DUP6 DUP3 DUP7 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD59 DUP2 PUSH2 0xC82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH2 0xD7A JUMP JUMPDEST DUP2 EQ PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDAA DUP2 PUSH2 0xD84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC7 JUMPI PUSH2 0xDC6 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD5 DUP6 DUP3 DUP7 ADD PUSH2 0xD9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE6 DUP6 DUP3 DUP7 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE06 JUMPI PUSH2 0xE05 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE14 DUP5 DUP3 DUP6 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE62 PUSH2 0xE5D PUSH2 0xE58 DUP5 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE74 DUP3 PUSH2 0xE47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 DUP3 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF05 DUP3 PUSH2 0xEBC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0xECD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF37 PUSH2 0xC6E JUMP JUMPDEST SWAP1 POP PUSH2 0xF43 DUP3 DUP3 PUSH2 0xEFC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF72 JUMPI PUSH2 0xF71 PUSH2 0xECD JUMP JUMPDEST JUMPDEST PUSH2 0xF7B DUP3 PUSH2 0xEBC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA PUSH2 0xFA5 DUP5 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFC6 JUMPI PUSH2 0xFC5 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH2 0xFD1 DUP5 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFEE JUMPI PUSH2 0xFED PUSH2 0xF4D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101C PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH2 0x1027 PUSH1 0xA0 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1037 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x104B DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x105F DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1073 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1097 JUMPI PUSH2 0x1096 PUSH2 0xF48 JUMP JUMPDEST JUMPDEST PUSH2 0x10A3 DUP5 DUP3 DUP6 ADD PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH2 0x10EF DUP5 DUP3 DUP6 ADD PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1113 JUMPI PUSH2 0x1112 PUSH2 0xECD JUMP JUMPDEST JUMPDEST PUSH2 0x111C DUP3 PUSH2 0xEBC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113C PUSH2 0x1137 DUP5 PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH2 0x1163 DUP5 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1180 JUMPI PUSH2 0x117F PUSH2 0xF4D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1190 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11AF JUMPI PUSH2 0x11AE PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH2 0x11D9 DUP5 DUP3 DUP6 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11ED DUP3 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FD DUP2 PUSH2 0x11E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1218 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129C DUP3 PUSH2 0x124B JUMP JUMPDEST PUSH2 0x12A6 DUP2 DUP6 PUSH2 0x1256 JUMP JUMPDEST SWAP4 POP PUSH2 0x12B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x12BF DUP2 PUSH2 0xEBC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E4 DUP2 DUP5 PUSH2 0x1291 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F5 DUP2 PUSH2 0xD7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132C JUMPI PUSH2 0x132B PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133A DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134C DUP2 PUSH2 0xCB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1367 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x136D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436861696E53746F72616765436F6E7461696E65723A2046756E6374696F6E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63616E206F6E6C792062652063616C6C656420627920746865206F776E65722E PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1429 PUSH1 0x40 DUP4 PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP PUSH2 0x1434 DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1458 DUP2 PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x11E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1485 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A1 JUMPI PUSH2 0x14A0 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14AF DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E64732E000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EE PUSH1 0x14 DUP4 PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F9 DUP3 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151D DUP2 PUSH2 0x14E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156F DUP3 PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP PUSH5 0xFFFFFFFFFF DUP3 SUB PUSH2 0x1586 JUMPI PUSH2 0x1585 PUSH2 0x1524 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B8 DUP3 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x15C2 DUP2 DUP6 PUSH2 0x159C JUMP JUMPDEST SWAP4 POP PUSH2 0x15D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0xEBC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1608 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x1615 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1627 DUP2 DUP5 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI PUSH26 0xA823144BB5710996351F7CF1BF5F4F879EF91EDFC2E713D41489 SWAP5 DUP11 RETURNDATASIZE 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"488:3141:11:-:0;;;1069:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1159:18;572::3;533:17;;:58;;;;;;;;;;;;;;;;;;483:115;1201:6:11::1;1193:5;:14;;;;;;:::i;:::-;;1069:145:::0;;488:3141;;7:75:30;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:246::-;2202:1;2212:113;2226:6;2223:1;2220:13;2212:113;;;2311:1;2306:3;2302:11;2296:18;2292:1;2287:3;2283:11;2276:39;2248:2;2245:1;2241:10;2236:15;;2212:113;;;2359:1;2350:6;2345:3;2341:16;2334:27;2183:184;2121:246;;;:::o;2373:434::-;2462:5;2487:66;2503:49;2545:6;2503:49;:::i;:::-;2487:66;:::i;:::-;2478:75;;2576:6;2569:5;2562:21;2614:4;2607:5;2603:16;2652:3;2643:6;2638:3;2634:16;2631:25;2628:112;;;2659:79;;:::i;:::-;2628:112;2749:52;2794:6;2789:3;2784;2749:52;:::i;:::-;2468:339;2373:434;;;;;:::o;2827:355::-;2894:5;2943:3;2936:4;2928:6;2924:17;2920:27;2910:122;;2951:79;;:::i;:::-;2910:122;3061:6;3055:13;3086:90;3172:3;3164:6;3157:4;3149:6;3145:17;3086:90;:::i;:::-;3077:99;;2900:282;2827:355;;;;:::o;3188:680::-;3277:6;3285;3334:2;3322:9;3313:7;3309:23;3305:32;3302:119;;;3340:79;;:::i;:::-;3302:119;3460:1;3485:64;3541:7;3532:6;3521:9;3517:22;3485:64;:::i;:::-;3475:74;;3431:128;3619:2;3608:9;3604:18;3598:25;3650:18;3642:6;3639:30;3636:117;;;3672:79;;:::i;:::-;3636:117;3777:74;3843:7;3834:6;3823:9;3819:22;3777:74;:::i;:::-;3767:84;;3569:292;3188:680;;;;;:::o;3874:99::-;3926:6;3960:5;3954:12;3944:22;;3874:99;;;:::o;3979:180::-;4027:77;4024:1;4017:88;4124:4;4121:1;4114:15;4148:4;4145:1;4138:15;4165:320;4209:6;4246:1;4240:4;4236:12;4226:22;;4293:1;4287:4;4283:12;4314:18;4304:81;;4370:4;4362:6;4358:17;4348:27;;4304:81;4432:2;4424:6;4421:14;4401:18;4398:38;4395:84;;4451:18;;:::i;:::-;4395:84;4216:269;4165:320;;;:::o;4491:141::-;4540:4;4563:3;4555:11;;4586:3;4583:1;4576:14;4620:4;4617:1;4607:18;4599:26;;4491:141;;;:::o;4638:93::-;4675:6;4722:2;4717;4710:5;4706:14;4702:23;4692:33;;4638:93;;;:::o;4737:107::-;4781:8;4831:5;4825:4;4821:16;4800:37;;4737:107;;;;:::o;4850:393::-;4919:6;4969:1;4957:10;4953:18;4992:97;5022:66;5011:9;4992:97;:::i;:::-;5110:39;5140:8;5129:9;5110:39;:::i;:::-;5098:51;;5182:4;5178:9;5171:5;5167:21;5158:30;;5231:4;5221:8;5217:19;5210:5;5207:30;5197:40;;4926:317;;4850:393;;;;;:::o;5249:77::-;5286:7;5315:5;5304:16;;5249:77;;;:::o;5332:60::-;5360:3;5381:5;5374:12;;5332:60;;;:::o;5398:142::-;5448:9;5481:53;5499:34;5508:24;5526:5;5508:24;:::i;:::-;5499:34;:::i;:::-;5481:53;:::i;:::-;5468:66;;5398:142;;;:::o;5546:75::-;5589:3;5610:5;5603:12;;5546:75;;;:::o;5627:269::-;5737:39;5768:7;5737:39;:::i;:::-;5798:91;5847:41;5871:16;5847:41;:::i;:::-;5839:6;5832:4;5826:11;5798:91;:::i;:::-;5792:4;5785:105;5703:193;5627:269;;;:::o;5902:73::-;5947:3;5902:73;:::o;5981:189::-;6058:32;;:::i;:::-;6099:65;6157:6;6149;6143:4;6099:65;:::i;:::-;6034:136;5981:189;;:::o;6176:186::-;6236:120;6253:3;6246:5;6243:14;6236:120;;;6307:39;6344:1;6337:5;6307:39;:::i;:::-;6280:1;6273:5;6269:13;6260:22;;6236:120;;;6176:186;;:::o;6368:543::-;6469:2;6464:3;6461:11;6458:446;;;6503:38;6535:5;6503:38;:::i;:::-;6587:29;6605:10;6587:29;:::i;:::-;6577:8;6573:44;6770:2;6758:10;6755:18;6752:49;;;6791:8;6776:23;;6752:49;6814:80;6870:22;6888:3;6870:22;:::i;:::-;6860:8;6856:37;6843:11;6814:80;:::i;:::-;6473:431;;6458:446;6368:543;;;:::o;6917:117::-;6971:8;7021:5;7015:4;7011:16;6990:37;;6917:117;;;;:::o;7040:169::-;7084:6;7117:51;7165:1;7161:6;7153:5;7150:1;7146:13;7117:51;:::i;:::-;7113:56;7198:4;7192;7188:15;7178:25;;7091:118;7040:169;;;;:::o;7214:295::-;7290:4;7436:29;7461:3;7455:4;7436:29;:::i;:::-;7428:37;;7498:3;7495:1;7491:11;7485:4;7482:21;7474:29;;7214:295;;;;:::o;7514:1395::-;7631:37;7664:3;7631:37;:::i;:::-;7733:18;7725:6;7722:30;7719:56;;;7755:18;;:::i;:::-;7719:56;7799:38;7831:4;7825:11;7799:38;:::i;:::-;7884:67;7944:6;7936;7930:4;7884:67;:::i;:::-;7978:1;8002:4;7989:17;;8034:2;8026:6;8023:14;8051:1;8046:618;;;;8708:1;8725:6;8722:77;;;8774:9;8769:3;8765:19;8759:26;8750:35;;8722:77;8825:67;8885:6;8878:5;8825:67;:::i;:::-;8819:4;8812:81;8681:222;8016:887;;8046:618;8098:4;8094:9;8086:6;8082:22;8132:37;8164:4;8132:37;:::i;:::-;8191:1;8205:208;8219:7;8216:1;8213:14;8205:208;;;8298:9;8293:3;8289:19;8283:26;8275:6;8268:42;8349:1;8341:6;8337:14;8327:24;;8396:2;8385:9;8381:18;8368:31;;8242:4;8239:1;8235:12;8230:17;;8205:208;;;8441:6;8432:7;8429:19;8426:179;;;8499:9;8494:3;8490:19;8484:26;8542:48;8584:4;8576:6;8572:17;8561:9;8542:48;:::i;:::-;8534:6;8527:64;8449:156;8426:179;8651:1;8647;8639:6;8635:14;8631:22;8625:4;8618:36;8053:611;;;8016:887;;7606:1303;;;7514:1395;;:::o;488:3141:11:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@deleteElementsAfterInclusive_1777":{"entryPoint":2383,"id":1777,"parameterSlots":3,"returnSlots":0},"@deleteElementsAfterInclusive_1802":{"entryPoint":2860,"id":1802,"parameterSlots":2,"returnSlots":0},"@deleteElementsAfterInclusive_2566":{"entryPoint":1654,"id":2566,"parameterSlots":1,"returnSlots":0},"@deleteElementsAfterInclusive_2587":{"entryPoint":569,"id":2587,"parameterSlots":2,"returnSlots":0},"@getContext_1936":{"entryPoint":2973,"id":1936,"parameterSlots":1,"returnSlots":1},"@getExtraData_1871":{"entryPoint":2946,"id":1871,"parameterSlots":1,"returnSlots":1},"@getGlobalMetadata_2490":{"entryPoint":2366,"id":2490,"parameterSlots":0,"returnSlots":1},"@getLength_1822":{"entryPoint":2559,"id":1822,"parameterSlots":1,"returnSlots":1},"@get_2548":{"entryPoint":2075,"id":2548,"parameterSlots":1,"returnSlots":1},"@hashBatchHeader_247":{"entryPoint":2790,"id":247,"parameterSlots":1,"returnSlots":1},"@length_2504":{"entryPoint":851,"id":2504,"parameterSlots":0,"returnSlots":1},"@libAddressManager_342":{"entryPoint":1436,"id":342,"parameterSlots":0,"returnSlots":0},"@owner_2430":{"entryPoint":1933,"id":2430,"parameterSlots":0,"returnSlots":0},"@push_1675":{"entryPoint":2586,"id":1675,"parameterSlots":3,"returnSlots":0},"@push_1700":{"entryPoint":2903,"id":1700,"parameterSlots":2,"returnSlots":0},"@push_2519":{"entryPoint":2087,"id":2519,"parameterSlots":1,"returnSlots":0},"@push_2537":{"entryPoint":875,"id":2537,"parameterSlots":2,"returnSlots":0},"@resolve_369":{"entryPoint":1490,"id":369,"parameterSlots":1,"returnSlots":1},"@setContext_1908":{"entryPoint":3086,"id":1908,"parameterSlots":2,"returnSlots":0},"@setExtraData_1851":{"entryPoint":2725,"id":1851,"parameterSlots":2,"returnSlots":0},"@setGlobalMetadata_2479":{"entryPoint":1157,"id":2479,"parameterSlots":1,"returnSlots":0},"@setSavedHash_2601":{"entryPoint":1472,"id":2601,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":3991,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":4393,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":5238,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes27":{"entryPoint":3323,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":3483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":4459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_ChainBatchHeader_$91_memory_ptr":{"entryPoint":4103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3235,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes27":{"entryPoint":3568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":4886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes27":{"entryPoint":3504,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":4505,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_ChainBatchHeader_$91_memory_ptr":{"entryPoint":4271,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes27":{"entryPoint":3344,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4596,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes27_to_t_bytes27_fromStack":{"entryPoint":4931,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4844,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":5549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_Lib_AddressManager_$334_to_t_address_fromStack":{"entryPoint":3725,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":4753,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5_to_t_string_memory_ptr_fromStack":{"entryPoint":5148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8_to_t_string_memory_ptr_fromStack":{"entryPoint":5345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3408,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes27__to_t_bytes27__fromStack_reversed":{"entryPoint":4946,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":4859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5606,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_Lib_AddressManager_$334__to_t_address__fromStack_reversed":{"entryPoint":3740,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4810,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5380,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3423,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3885,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3182,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":3927,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":4344,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":5521,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4683,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":5532,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4694,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":4578,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes27":{"entryPoint":3256,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":3450,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3613,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":3202,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint40":{"entryPoint":5459,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_Lib_AddressManager_$334_to_t_address":{"entryPoint":3707,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":3689,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":3655,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3976,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4711,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5020,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":3836,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":3645,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint40":{"entryPoint":5476,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5412,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4973,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3789,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3917,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":3767,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":3912,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3922,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3197,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3192,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3772,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5":{"entryPoint":5069,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8":{"entryPoint":5304,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5215,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes27":{"entryPoint":3300,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":3460,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3212,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:18188:30","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:30","statements":[{"nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:30"},"nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:30"},"nodeType":"YulFunctionCall","src":"187:12:30"},"nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:30"},"nodeType":"YulFunctionCall","src":"310:12:30"},"nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nodeType":"YulBlock","src":"379:32:30","statements":[{"nodeType":"YulAssignment","src":"389:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:30"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:30","type":""}],"src":"334:77:30"},{"body":{"nodeType":"YulBlock","src":"460:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:30"},"nodeType":"YulFunctionCall","src":"519:12:30"},"nodeType":"YulExpressionStatement","src":"519:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:30"},"nodeType":"YulFunctionCall","src":"490:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:30"},"nodeType":"YulFunctionCall","src":"480:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:30"},"nodeType":"YulFunctionCall","src":"473:43:30"},"nodeType":"YulIf","src":"470:63:30"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:30","type":""}],"src":"417:122:30"},{"body":{"nodeType":"YulBlock","src":"597:87:30","statements":[{"nodeType":"YulAssignment","src":"607:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:30"},"nodeType":"YulFunctionCall","src":"616:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"645:26:30"},"nodeType":"YulFunctionCall","src":"645:33:30"},"nodeType":"YulExpressionStatement","src":"645:33:30"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:30","type":""}],"src":"545:139:30"},{"body":{"nodeType":"YulBlock","src":"735:105:30","statements":[{"nodeType":"YulAssignment","src":"745:89:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"760:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"767:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"756:3:30"},"nodeType":"YulFunctionCall","src":"756:78:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"745:7:30"}]}]},"name":"cleanup_t_bytes27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"717:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"727:7:30","type":""}],"src":"690:150:30"},{"body":{"nodeType":"YulBlock","src":"889:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"946:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"955:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"958:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"948:6:30"},"nodeType":"YulFunctionCall","src":"948:12:30"},"nodeType":"YulExpressionStatement","src":"948:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"912:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:30"}],"functionName":{"name":"cleanup_t_bytes27","nodeType":"YulIdentifier","src":"919:17:30"},"nodeType":"YulFunctionCall","src":"919:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"909:2:30"},"nodeType":"YulFunctionCall","src":"909:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"902:6:30"},"nodeType":"YulFunctionCall","src":"902:43:30"},"nodeType":"YulIf","src":"899:63:30"}]},"name":"validator_revert_t_bytes27","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"882:5:30","type":""}],"src":"846:122:30"},{"body":{"nodeType":"YulBlock","src":"1026:87:30","statements":[{"nodeType":"YulAssignment","src":"1036:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1058:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1045:12:30"},"nodeType":"YulFunctionCall","src":"1045:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1036:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1101:5:30"}],"functionName":{"name":"validator_revert_t_bytes27","nodeType":"YulIdentifier","src":"1074:26:30"},"nodeType":"YulFunctionCall","src":"1074:33:30"},"nodeType":"YulExpressionStatement","src":"1074:33:30"}]},"name":"abi_decode_t_bytes27","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1004:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"1012:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1020:5:30","type":""}],"src":"974:139:30"},{"body":{"nodeType":"YulBlock","src":"1202:391:30","statements":[{"body":{"nodeType":"YulBlock","src":"1248:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1250:77:30"},"nodeType":"YulFunctionCall","src":"1250:79:30"},"nodeType":"YulExpressionStatement","src":"1250:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1223:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1232:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1219:3:30"},"nodeType":"YulFunctionCall","src":"1219:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1244:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1215:3:30"},"nodeType":"YulFunctionCall","src":"1215:32:30"},"nodeType":"YulIf","src":"1212:119:30"},{"nodeType":"YulBlock","src":"1341:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1356:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"1370:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1360:6:30","type":""}]},{"nodeType":"YulAssignment","src":"1385:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1431:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:30"},"nodeType":"YulFunctionCall","src":"1416:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1440:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1395:20:30"},"nodeType":"YulFunctionCall","src":"1395:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1385:6:30"}]}]},{"nodeType":"YulBlock","src":"1468:118:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1483:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"1497:2:30","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1487:6:30","type":""}]},{"nodeType":"YulAssignment","src":"1513:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1548:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1559:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1544:3:30"},"nodeType":"YulFunctionCall","src":"1544:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1568:7:30"}],"functionName":{"name":"abi_decode_t_bytes27","nodeType":"YulIdentifier","src":"1523:20:30"},"nodeType":"YulFunctionCall","src":"1523:53:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1513:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1164:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1175:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1187:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1195:6:30","type":""}],"src":"1119:474:30"},{"body":{"nodeType":"YulBlock","src":"1664:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1681:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1704:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1686:17:30"},"nodeType":"YulFunctionCall","src":"1686:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1674:6:30"},"nodeType":"YulFunctionCall","src":"1674:37:30"},"nodeType":"YulExpressionStatement","src":"1674:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1652:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1659:3:30","type":""}],"src":"1599:118:30"},{"body":{"nodeType":"YulBlock","src":"1821:124:30","statements":[{"nodeType":"YulAssignment","src":"1831:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1843:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1854:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1839:3:30"},"nodeType":"YulFunctionCall","src":"1839:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1831:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1911:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1924:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1935:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1920:3:30"},"nodeType":"YulFunctionCall","src":"1920:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1867:43:30"},"nodeType":"YulFunctionCall","src":"1867:71:30"},"nodeType":"YulExpressionStatement","src":"1867:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1793:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1805:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1816:4:30","type":""}],"src":"1723:222:30"},{"body":{"nodeType":"YulBlock","src":"1996:32:30","statements":[{"nodeType":"YulAssignment","src":"2006:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"2017:5:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2006:7:30"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1978:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1988:7:30","type":""}],"src":"1951:77:30"},{"body":{"nodeType":"YulBlock","src":"2077:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"2134:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2143:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2146:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2136:6:30"},"nodeType":"YulFunctionCall","src":"2136:12:30"},"nodeType":"YulExpressionStatement","src":"2136:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2125:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2107:17:30"},"nodeType":"YulFunctionCall","src":"2107:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2097:2:30"},"nodeType":"YulFunctionCall","src":"2097:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2090:6:30"},"nodeType":"YulFunctionCall","src":"2090:43:30"},"nodeType":"YulIf","src":"2087:63:30"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2070:5:30","type":""}],"src":"2034:122:30"},{"body":{"nodeType":"YulBlock","src":"2214:87:30","statements":[{"nodeType":"YulAssignment","src":"2224:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2246:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2233:12:30"},"nodeType":"YulFunctionCall","src":"2233:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2224:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2289:5:30"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"2262:26:30"},"nodeType":"YulFunctionCall","src":"2262:33:30"},"nodeType":"YulExpressionStatement","src":"2262:33:30"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2192:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"2200:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2208:5:30","type":""}],"src":"2162:139:30"},{"body":{"nodeType":"YulBlock","src":"2390:391:30","statements":[{"body":{"nodeType":"YulBlock","src":"2436:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2438:77:30"},"nodeType":"YulFunctionCall","src":"2438:79:30"},"nodeType":"YulExpressionStatement","src":"2438:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2411:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2420:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2407:3:30"},"nodeType":"YulFunctionCall","src":"2407:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2432:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2403:3:30"},"nodeType":"YulFunctionCall","src":"2403:32:30"},"nodeType":"YulIf","src":"2400:119:30"},{"nodeType":"YulBlock","src":"2529:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2544:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2558:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2548:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2573:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2608:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2619:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2604:3:30"},"nodeType":"YulFunctionCall","src":"2604:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2628:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2583:20:30"},"nodeType":"YulFunctionCall","src":"2583:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2573:6:30"}]}]},{"nodeType":"YulBlock","src":"2656:118:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2671:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2685:2:30","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2675:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2701:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2736:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2747:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2732:3:30"},"nodeType":"YulFunctionCall","src":"2732:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2756:7:30"}],"functionName":{"name":"abi_decode_t_bytes27","nodeType":"YulIdentifier","src":"2711:20:30"},"nodeType":"YulFunctionCall","src":"2711:53:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2701:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2352:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2363:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2375:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2383:6:30","type":""}],"src":"2307:474:30"},{"body":{"nodeType":"YulBlock","src":"2853:263:30","statements":[{"body":{"nodeType":"YulBlock","src":"2899:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2901:77:30"},"nodeType":"YulFunctionCall","src":"2901:79:30"},"nodeType":"YulExpressionStatement","src":"2901:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2874:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"2883:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2870:3:30"},"nodeType":"YulFunctionCall","src":"2870:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"2895:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2866:3:30"},"nodeType":"YulFunctionCall","src":"2866:32:30"},"nodeType":"YulIf","src":"2863:119:30"},{"nodeType":"YulBlock","src":"2992:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"3007:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"3021:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3011:6:30","type":""}]},{"nodeType":"YulAssignment","src":"3036:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3071:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"3082:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3067:3:30"},"nodeType":"YulFunctionCall","src":"3067:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3091:7:30"}],"functionName":{"name":"abi_decode_t_bytes27","nodeType":"YulIdentifier","src":"3046:20:30"},"nodeType":"YulFunctionCall","src":"3046:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3036:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes27","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2823:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2834:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2846:6:30","type":""}],"src":"2787:329:30"},{"body":{"nodeType":"YulBlock","src":"3167:81:30","statements":[{"nodeType":"YulAssignment","src":"3177:65:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3192:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3199:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3188:3:30"},"nodeType":"YulFunctionCall","src":"3188:54:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3177:7:30"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3149:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3159:7:30","type":""}],"src":"3122:126:30"},{"body":{"nodeType":"YulBlock","src":"3286:28:30","statements":[{"nodeType":"YulAssignment","src":"3296:12:30","value":{"name":"value","nodeType":"YulIdentifier","src":"3303:5:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3296:3:30"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3272:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"3282:3:30","type":""}],"src":"3254:60:30"},{"body":{"nodeType":"YulBlock","src":"3380:82:30","statements":[{"nodeType":"YulAssignment","src":"3390:66:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3448:5:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3430:17:30"},"nodeType":"YulFunctionCall","src":"3430:24:30"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"3421:8:30"},"nodeType":"YulFunctionCall","src":"3421:34:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3403:17:30"},"nodeType":"YulFunctionCall","src":"3403:53:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3390:9:30"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3360:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3370:9:30","type":""}],"src":"3320:142:30"},{"body":{"nodeType":"YulBlock","src":"3528:66:30","statements":[{"nodeType":"YulAssignment","src":"3538:50:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3582:5:30"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"3551:30:30"},"nodeType":"YulFunctionCall","src":"3551:37:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3538:9:30"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3508:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3518:9:30","type":""}],"src":"3468:126:30"},{"body":{"nodeType":"YulBlock","src":"3686:66:30","statements":[{"nodeType":"YulAssignment","src":"3696:50:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3740:5:30"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"3709:30:30"},"nodeType":"YulFunctionCall","src":"3709:37:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"3696:9:30"}]}]},"name":"convert_t_contract$_Lib_AddressManager_$334_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3666:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"3676:9:30","type":""}],"src":"3600:152:30"},{"body":{"nodeType":"YulBlock","src":"3849:92:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3866:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3928:5:30"}],"functionName":{"name":"convert_t_contract$_Lib_AddressManager_$334_to_t_address","nodeType":"YulIdentifier","src":"3871:56:30"},"nodeType":"YulFunctionCall","src":"3871:63:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:30"},"nodeType":"YulFunctionCall","src":"3859:76:30"},"nodeType":"YulExpressionStatement","src":"3859:76:30"}]},"name":"abi_encode_t_contract$_Lib_AddressManager_$334_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3837:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3844:3:30","type":""}],"src":"3758:183:30"},{"body":{"nodeType":"YulBlock","src":"4071:150:30","statements":[{"nodeType":"YulAssignment","src":"4081:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4093:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4104:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4089:3:30"},"nodeType":"YulFunctionCall","src":"4089:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4081:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4187:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4211:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:30"},"nodeType":"YulFunctionCall","src":"4196:17:30"}],"functionName":{"name":"abi_encode_t_contract$_Lib_AddressManager_$334_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4117:69:30"},"nodeType":"YulFunctionCall","src":"4117:97:30"},"nodeType":"YulExpressionStatement","src":"4117:97:30"}]},"name":"abi_encode_tuple_t_contract$_Lib_AddressManager_$334__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4043:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4055:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4066:4:30","type":""}],"src":"3947:274:30"},{"body":{"nodeType":"YulBlock","src":"4316:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4333:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4336:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4326:6:30"},"nodeType":"YulFunctionCall","src":"4326:12:30"},"nodeType":"YulExpressionStatement","src":"4326:12:30"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"4227:117:30"},{"body":{"nodeType":"YulBlock","src":"4398:54:30","statements":[{"nodeType":"YulAssignment","src":"4408:38:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4426:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"4433:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4422:3:30"},"nodeType":"YulFunctionCall","src":"4422:14:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4442:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4438:3:30"},"nodeType":"YulFunctionCall","src":"4438:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4418:3:30"},"nodeType":"YulFunctionCall","src":"4418:28:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4408:6:30"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4381:5:30","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4391:6:30","type":""}],"src":"4350:102:30"},{"body":{"nodeType":"YulBlock","src":"4486:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4503:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4506:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4496:6:30"},"nodeType":"YulFunctionCall","src":"4496:88:30"},"nodeType":"YulExpressionStatement","src":"4496:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4600:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4603:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4593:6:30"},"nodeType":"YulFunctionCall","src":"4593:15:30"},"nodeType":"YulExpressionStatement","src":"4593:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4624:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4627:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4617:6:30"},"nodeType":"YulFunctionCall","src":"4617:15:30"},"nodeType":"YulExpressionStatement","src":"4617:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4458:180:30"},{"body":{"nodeType":"YulBlock","src":"4687:238:30","statements":[{"nodeType":"YulVariableDeclaration","src":"4697:58:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4719:6:30"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4749:4:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4727:21:30"},"nodeType":"YulFunctionCall","src":"4727:27:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4715:3:30"},"nodeType":"YulFunctionCall","src":"4715:40:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"4701:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4866:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4868:16:30"},"nodeType":"YulFunctionCall","src":"4868:18:30"},"nodeType":"YulExpressionStatement","src":"4868:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4809:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"4821:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4806:2:30"},"nodeType":"YulFunctionCall","src":"4806:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4845:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"4857:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4842:2:30"},"nodeType":"YulFunctionCall","src":"4842:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4803:2:30"},"nodeType":"YulFunctionCall","src":"4803:62:30"},"nodeType":"YulIf","src":"4800:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4904:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"4908:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4897:6:30"},"nodeType":"YulFunctionCall","src":"4897:22:30"},"nodeType":"YulExpressionStatement","src":"4897:22:30"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4673:6:30","type":""},{"name":"size","nodeType":"YulTypedName","src":"4681:4:30","type":""}],"src":"4644:281:30"},{"body":{"nodeType":"YulBlock","src":"4972:88:30","statements":[{"nodeType":"YulAssignment","src":"4982:30:30","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"4992:18:30"},"nodeType":"YulFunctionCall","src":"4992:20:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4982:6:30"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5041:6:30"},{"name":"size","nodeType":"YulIdentifier","src":"5049:4:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5021:19:30"},"nodeType":"YulFunctionCall","src":"5021:33:30"},"nodeType":"YulExpressionStatement","src":"5021:33:30"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"4956:4:30","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"4965:6:30","type":""}],"src":"4931:129:30"},{"body":{"nodeType":"YulBlock","src":"5155:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5172:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5175:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5165:6:30"},"nodeType":"YulFunctionCall","src":"5165:12:30"},"nodeType":"YulExpressionStatement","src":"5165:12:30"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"5066:117:30"},{"body":{"nodeType":"YulBlock","src":"5278:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5295:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5298:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5288:6:30"},"nodeType":"YulFunctionCall","src":"5288:12:30"},"nodeType":"YulExpressionStatement","src":"5288:12:30"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5189:117:30"},{"body":{"nodeType":"YulBlock","src":"5401:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5418:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5421:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5411:6:30"},"nodeType":"YulFunctionCall","src":"5411:12:30"},"nodeType":"YulExpressionStatement","src":"5411:12:30"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5312:117:30"},{"body":{"nodeType":"YulBlock","src":"5501:241:30","statements":[{"body":{"nodeType":"YulBlock","src":"5606:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5608:16:30"},"nodeType":"YulFunctionCall","src":"5608:18:30"},"nodeType":"YulExpressionStatement","src":"5608:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5578:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"5586:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5575:2:30"},"nodeType":"YulFunctionCall","src":"5575:30:30"},"nodeType":"YulIf","src":"5572:56:30"},{"nodeType":"YulAssignment","src":"5638:37:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5668:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5646:21:30"},"nodeType":"YulFunctionCall","src":"5646:29:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5638:4:30"}]},{"nodeType":"YulAssignment","src":"5712:23:30","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5724:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"5730:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5720:3:30"},"nodeType":"YulFunctionCall","src":"5720:15:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5712:4:30"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5485:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5496:4:30","type":""}],"src":"5435:307:30"},{"body":{"nodeType":"YulBlock","src":"5812:82:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5835:3:30"},{"name":"src","nodeType":"YulIdentifier","src":"5840:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"5845:6:30"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"5822:12:30"},"nodeType":"YulFunctionCall","src":"5822:30:30"},"nodeType":"YulExpressionStatement","src":"5822:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5872:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"5877:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5868:3:30"},"nodeType":"YulFunctionCall","src":"5868:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"5886:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5861:6:30"},"nodeType":"YulFunctionCall","src":"5861:27:30"},"nodeType":"YulExpressionStatement","src":"5861:27:30"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5794:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"5799:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"5804:6:30","type":""}],"src":"5748:146:30"},{"body":{"nodeType":"YulBlock","src":"5983:340:30","statements":[{"nodeType":"YulAssignment","src":"5993:74:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6059:6:30"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6018:40:30"},"nodeType":"YulFunctionCall","src":"6018:48:30"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6002:15:30"},"nodeType":"YulFunctionCall","src":"6002:65:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5993:5:30"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6083:5:30"},{"name":"length","nodeType":"YulIdentifier","src":"6090:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6076:6:30"},"nodeType":"YulFunctionCall","src":"6076:21:30"},"nodeType":"YulExpressionStatement","src":"6076:21:30"},{"nodeType":"YulVariableDeclaration","src":"6106:27:30","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6121:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"6128:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6117:3:30"},"nodeType":"YulFunctionCall","src":"6117:16:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6110:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"6171:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"6173:77:30"},"nodeType":"YulFunctionCall","src":"6173:79:30"},"nodeType":"YulExpressionStatement","src":"6173:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6152:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"6157:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6148:3:30"},"nodeType":"YulFunctionCall","src":"6148:16:30"},{"name":"end","nodeType":"YulIdentifier","src":"6166:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6145:2:30"},"nodeType":"YulFunctionCall","src":"6145:25:30"},"nodeType":"YulIf","src":"6142:112:30"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6300:3:30"},{"name":"dst","nodeType":"YulIdentifier","src":"6305:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"6310:6:30"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"6263:36:30"},"nodeType":"YulFunctionCall","src":"6263:54:30"},"nodeType":"YulExpressionStatement","src":"6263:54:30"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"5956:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"5961:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"5969:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5977:5:30","type":""}],"src":"5900:423:30"},{"body":{"nodeType":"YulBlock","src":"6403:277:30","statements":[{"body":{"nodeType":"YulBlock","src":"6452:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6454:77:30"},"nodeType":"YulFunctionCall","src":"6454:79:30"},"nodeType":"YulExpressionStatement","src":"6454:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6431:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"6439:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6427:3:30"},"nodeType":"YulFunctionCall","src":"6427:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"6446:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6423:3:30"},"nodeType":"YulFunctionCall","src":"6423:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6416:6:30"},"nodeType":"YulFunctionCall","src":"6416:35:30"},"nodeType":"YulIf","src":"6413:122:30"},{"nodeType":"YulVariableDeclaration","src":"6544:34:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6571:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6558:12:30"},"nodeType":"YulFunctionCall","src":"6558:20:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6548:6:30","type":""}]},{"nodeType":"YulAssignment","src":"6587:87:30","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6647:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"6655:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6643:3:30"},"nodeType":"YulFunctionCall","src":"6643:17:30"},{"name":"length","nodeType":"YulIdentifier","src":"6662:6:30"},{"name":"end","nodeType":"YulIdentifier","src":"6670:3:30"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"6596:46:30"},"nodeType":"YulFunctionCall","src":"6596:78:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6587:5:30"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6381:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"6389:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6397:5:30","type":""}],"src":"6342:338:30"},{"body":{"nodeType":"YulBlock","src":"6817:1181:30","statements":[{"body":{"nodeType":"YulBlock","src":"6861:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"6863:77:30"},"nodeType":"YulFunctionCall","src":"6863:79:30"},"nodeType":"YulExpressionStatement","src":"6863:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"6838:3:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"6843:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6834:3:30"},"nodeType":"YulFunctionCall","src":"6834:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"6855:4:30","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6830:3:30"},"nodeType":"YulFunctionCall","src":"6830:30:30"},"nodeType":"YulIf","src":"6827:117:30"},{"nodeType":"YulAssignment","src":"6953:30:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6978:4:30","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6962:15:30"},"nodeType":"YulFunctionCall","src":"6962:21:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6953:5:30"}]},{"nodeType":"YulBlock","src":"6993:156:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7034:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7048:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7038:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7074:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"7081:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7070:3:30"},"nodeType":"YulFunctionCall","src":"7070:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7113:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"7124:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7109:3:30"},"nodeType":"YulFunctionCall","src":"7109:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"7133:3:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7088:20:30"},"nodeType":"YulFunctionCall","src":"7088:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7063:6:30"},"nodeType":"YulFunctionCall","src":"7063:75:30"},"nodeType":"YulExpressionStatement","src":"7063:75:30"}]},{"nodeType":"YulBlock","src":"7159:156:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7199:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7213:2:30","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7203:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7240:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"7247:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7236:3:30"},"nodeType":"YulFunctionCall","src":"7236:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7279:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"7290:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7275:3:30"},"nodeType":"YulFunctionCall","src":"7275:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"7299:3:30"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7254:20:30"},"nodeType":"YulFunctionCall","src":"7254:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7229:6:30"},"nodeType":"YulFunctionCall","src":"7229:75:30"},"nodeType":"YulExpressionStatement","src":"7229:75:30"}]},{"nodeType":"YulBlock","src":"7325:156:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7365:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7379:2:30","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7369:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7406:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"7413:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7402:3:30"},"nodeType":"YulFunctionCall","src":"7402:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7445:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"7456:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7441:3:30"},"nodeType":"YulFunctionCall","src":"7441:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"7465:3:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7420:20:30"},"nodeType":"YulFunctionCall","src":"7420:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7395:6:30"},"nodeType":"YulFunctionCall","src":"7395:75:30"},"nodeType":"YulExpressionStatement","src":"7395:75:30"}]},{"nodeType":"YulBlock","src":"7491:164:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7539:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"7553:2:30","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7543:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7580:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"7587:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:30"},"nodeType":"YulFunctionCall","src":"7576:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7619:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"7630:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7615:3:30"},"nodeType":"YulFunctionCall","src":"7615:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"7639:3:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7594:20:30"},"nodeType":"YulFunctionCall","src":"7594:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7569:6:30"},"nodeType":"YulFunctionCall","src":"7569:75:30"},"nodeType":"YulExpressionStatement","src":"7569:75:30"}]},{"nodeType":"YulBlock","src":"7665:326:30","statements":[{"nodeType":"YulVariableDeclaration","src":"7705:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7736:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"7747:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7732:3:30"},"nodeType":"YulFunctionCall","src":"7732:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7719:12:30"},"nodeType":"YulFunctionCall","src":"7719:33:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7709:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"7799:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"7801:77:30"},"nodeType":"YulFunctionCall","src":"7801:79:30"},"nodeType":"YulExpressionStatement","src":"7801:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7771:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"7779:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7768:2:30"},"nodeType":"YulFunctionCall","src":"7768:30:30"},"nodeType":"YulIf","src":"7765:117:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7907:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"7914:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7903:3:30"},"nodeType":"YulFunctionCall","src":"7903:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7955:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"7966:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:30"},"nodeType":"YulFunctionCall","src":"7951:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"7975:3:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7921:29:30"},"nodeType":"YulFunctionCall","src":"7921:58:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7896:6:30"},"nodeType":"YulFunctionCall","src":"7896:84:30"},"nodeType":"YulExpressionStatement","src":"7896:84:30"}]}]},"name":"abi_decode_t_struct$_ChainBatchHeader_$91_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6792:9:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"6803:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6811:5:30","type":""}],"src":"6730:1268:30"},{"body":{"nodeType":"YulBlock","src":"8102:455:30","statements":[{"body":{"nodeType":"YulBlock","src":"8148:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8150:77:30"},"nodeType":"YulFunctionCall","src":"8150:79:30"},"nodeType":"YulExpressionStatement","src":"8150:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8123:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"8132:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8119:3:30"},"nodeType":"YulFunctionCall","src":"8119:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"8144:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8115:3:30"},"nodeType":"YulFunctionCall","src":"8115:32:30"},"nodeType":"YulIf","src":"8112:119:30"},{"nodeType":"YulBlock","src":"8241:309:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8256:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8287:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8283:3:30"},"nodeType":"YulFunctionCall","src":"8283:17:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8270:12:30"},"nodeType":"YulFunctionCall","src":"8270:31:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8260:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"8348:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8350:77:30"},"nodeType":"YulFunctionCall","src":"8350:79:30"},"nodeType":"YulExpressionStatement","src":"8350:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8320:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8328:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8317:2:30"},"nodeType":"YulFunctionCall","src":"8317:30:30"},"nodeType":"YulIf","src":"8314:117:30"},{"nodeType":"YulAssignment","src":"8445:95:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8512:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"8523:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8508:3:30"},"nodeType":"YulFunctionCall","src":"8508:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8532:7:30"}],"functionName":{"name":"abi_decode_t_struct$_ChainBatchHeader_$91_memory_ptr","nodeType":"YulIdentifier","src":"8455:52:30"},"nodeType":"YulFunctionCall","src":"8455:85:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8445:6:30"}]}]}]},"name":"abi_decode_tuple_t_struct$_ChainBatchHeader_$91_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8072:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8083:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8095:6:30","type":""}],"src":"8004:553:30"},{"body":{"nodeType":"YulBlock","src":"8630:241:30","statements":[{"body":{"nodeType":"YulBlock","src":"8735:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8737:16:30"},"nodeType":"YulFunctionCall","src":"8737:18:30"},"nodeType":"YulExpressionStatement","src":"8737:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8707:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8715:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8704:2:30"},"nodeType":"YulFunctionCall","src":"8704:30:30"},"nodeType":"YulIf","src":"8701:56:30"},{"nodeType":"YulAssignment","src":"8767:37:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8797:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8775:21:30"},"nodeType":"YulFunctionCall","src":"8775:29:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8767:4:30"}]},{"nodeType":"YulAssignment","src":"8841:23:30","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8853:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"8859:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8849:3:30"},"nodeType":"YulFunctionCall","src":"8849:15:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8841:4:30"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8614:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8625:4:30","type":""}],"src":"8563:308:30"},{"body":{"nodeType":"YulBlock","src":"8961:341:30","statements":[{"nodeType":"YulAssignment","src":"8971:75:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9038:6:30"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8996:41:30"},"nodeType":"YulFunctionCall","src":"8996:49:30"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8980:15:30"},"nodeType":"YulFunctionCall","src":"8980:66:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8971:5:30"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9062:5:30"},{"name":"length","nodeType":"YulIdentifier","src":"9069:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9055:6:30"},"nodeType":"YulFunctionCall","src":"9055:21:30"},"nodeType":"YulExpressionStatement","src":"9055:21:30"},{"nodeType":"YulVariableDeclaration","src":"9085:27:30","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9100:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"9107:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9096:3:30"},"nodeType":"YulFunctionCall","src":"9096:16:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9089:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"9150:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"9152:77:30"},"nodeType":"YulFunctionCall","src":"9152:79:30"},"nodeType":"YulExpressionStatement","src":"9152:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9131:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"9136:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9127:3:30"},"nodeType":"YulFunctionCall","src":"9127:16:30"},{"name":"end","nodeType":"YulIdentifier","src":"9145:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9124:2:30"},"nodeType":"YulFunctionCall","src":"9124:25:30"},"nodeType":"YulIf","src":"9121:112:30"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9279:3:30"},{"name":"dst","nodeType":"YulIdentifier","src":"9284:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"9289:6:30"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9242:36:30"},"nodeType":"YulFunctionCall","src":"9242:54:30"},"nodeType":"YulExpressionStatement","src":"9242:54:30"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8934:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"8939:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"8947:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8955:5:30","type":""}],"src":"8877:425:30"},{"body":{"nodeType":"YulBlock","src":"9384:278:30","statements":[{"body":{"nodeType":"YulBlock","src":"9433:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9435:77:30"},"nodeType":"YulFunctionCall","src":"9435:79:30"},"nodeType":"YulExpressionStatement","src":"9435:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9412:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"9420:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9408:3:30"},"nodeType":"YulFunctionCall","src":"9408:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"9427:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9404:3:30"},"nodeType":"YulFunctionCall","src":"9404:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9397:6:30"},"nodeType":"YulFunctionCall","src":"9397:35:30"},"nodeType":"YulIf","src":"9394:122:30"},{"nodeType":"YulVariableDeclaration","src":"9525:34:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9552:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9539:12:30"},"nodeType":"YulFunctionCall","src":"9539:20:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9529:6:30","type":""}]},{"nodeType":"YulAssignment","src":"9568:88:30","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9629:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"9637:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9625:3:30"},"nodeType":"YulFunctionCall","src":"9625:17:30"},{"name":"length","nodeType":"YulIdentifier","src":"9644:6:30"},{"name":"end","nodeType":"YulIdentifier","src":"9652:3:30"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9577:47:30"},"nodeType":"YulFunctionCall","src":"9577:79:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9568:5:30"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9362:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"9370:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9378:5:30","type":""}],"src":"9322:340:30"},{"body":{"nodeType":"YulBlock","src":"9744:433:30","statements":[{"body":{"nodeType":"YulBlock","src":"9790:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9792:77:30"},"nodeType":"YulFunctionCall","src":"9792:79:30"},"nodeType":"YulExpressionStatement","src":"9792:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9765:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"9774:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9761:3:30"},"nodeType":"YulFunctionCall","src":"9761:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"9786:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9757:3:30"},"nodeType":"YulFunctionCall","src":"9757:32:30"},"nodeType":"YulIf","src":"9754:119:30"},{"nodeType":"YulBlock","src":"9883:287:30","statements":[{"nodeType":"YulVariableDeclaration","src":"9898:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9929:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"9940:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9925:3:30"},"nodeType":"YulFunctionCall","src":"9925:17:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9912:12:30"},"nodeType":"YulFunctionCall","src":"9912:31:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9902:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"9990:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9992:77:30"},"nodeType":"YulFunctionCall","src":"9992:79:30"},"nodeType":"YulExpressionStatement","src":"9992:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9962:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"9970:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9959:2:30"},"nodeType":"YulFunctionCall","src":"9959:30:30"},"nodeType":"YulIf","src":"9956:117:30"},{"nodeType":"YulAssignment","src":"10087:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10132:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"10143:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10128:3:30"},"nodeType":"YulFunctionCall","src":"10128:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10152:7:30"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10097:30:30"},"nodeType":"YulFunctionCall","src":"10097:63:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10087:6:30"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9714:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9725:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9737:6:30","type":""}],"src":"9668:509:30"},{"body":{"nodeType":"YulBlock","src":"10228:51:30","statements":[{"nodeType":"YulAssignment","src":"10238:35:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10267:5:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"10249:17:30"},"nodeType":"YulFunctionCall","src":"10249:24:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10238:7:30"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10210:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10220:7:30","type":""}],"src":"10183:96:30"},{"body":{"nodeType":"YulBlock","src":"10350:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10367:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10390:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"10372:17:30"},"nodeType":"YulFunctionCall","src":"10372:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10360:6:30"},"nodeType":"YulFunctionCall","src":"10360:37:30"},"nodeType":"YulExpressionStatement","src":"10360:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10338:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10345:3:30","type":""}],"src":"10285:118:30"},{"body":{"nodeType":"YulBlock","src":"10507:124:30","statements":[{"nodeType":"YulAssignment","src":"10517:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10529:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10540:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10525:3:30"},"nodeType":"YulFunctionCall","src":"10525:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10517:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10597:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10610:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"10621:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10606:3:30"},"nodeType":"YulFunctionCall","src":"10606:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"10553:43:30"},"nodeType":"YulFunctionCall","src":"10553:71:30"},"nodeType":"YulExpressionStatement","src":"10553:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10479:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10491:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10502:4:30","type":""}],"src":"10409:222:30"},{"body":{"nodeType":"YulBlock","src":"10703:263:30","statements":[{"body":{"nodeType":"YulBlock","src":"10749:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10751:77:30"},"nodeType":"YulFunctionCall","src":"10751:79:30"},"nodeType":"YulExpressionStatement","src":"10751:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10724:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"10733:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10720:3:30"},"nodeType":"YulFunctionCall","src":"10720:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"10745:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10716:3:30"},"nodeType":"YulFunctionCall","src":"10716:32:30"},"nodeType":"YulIf","src":"10713:119:30"},{"nodeType":"YulBlock","src":"10842:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"10857:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"10871:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10861:6:30","type":""}]},{"nodeType":"YulAssignment","src":"10886:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10921:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"10932:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10917:3:30"},"nodeType":"YulFunctionCall","src":"10917:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10941:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10896:20:30"},"nodeType":"YulFunctionCall","src":"10896:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10886:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10673:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10684:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10696:6:30","type":""}],"src":"10637:329:30"},{"body":{"nodeType":"YulBlock","src":"11031:40:30","statements":[{"nodeType":"YulAssignment","src":"11042:22:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11058:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11052:5:30"},"nodeType":"YulFunctionCall","src":"11052:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"11042:6:30"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11014:5:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"11024:6:30","type":""}],"src":"10972:99:30"},{"body":{"nodeType":"YulBlock","src":"11173:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11190:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"11195:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11183:6:30"},"nodeType":"YulFunctionCall","src":"11183:19:30"},"nodeType":"YulExpressionStatement","src":"11183:19:30"},{"nodeType":"YulAssignment","src":"11211:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11230:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"11235:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11226:3:30"},"nodeType":"YulFunctionCall","src":"11226:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"11211:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11145:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"11150:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"11161:11:30","type":""}],"src":"11077:169:30"},{"body":{"nodeType":"YulBlock","src":"11314:184:30","statements":[{"nodeType":"YulVariableDeclaration","src":"11324:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"11333:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11328:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"11393:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11418:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"11423:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11414:3:30"},"nodeType":"YulFunctionCall","src":"11414:11:30"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11437:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"11442:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11433:3:30"},"nodeType":"YulFunctionCall","src":"11433:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11427:5:30"},"nodeType":"YulFunctionCall","src":"11427:18:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11407:6:30"},"nodeType":"YulFunctionCall","src":"11407:39:30"},"nodeType":"YulExpressionStatement","src":"11407:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11354:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"11357:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11351:2:30"},"nodeType":"YulFunctionCall","src":"11351:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11365:19:30","statements":[{"nodeType":"YulAssignment","src":"11367:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11376:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"11379:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11372:3:30"},"nodeType":"YulFunctionCall","src":"11372:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11367:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"11347:3:30","statements":[]},"src":"11343:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11476:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"11481:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11472:3:30"},"nodeType":"YulFunctionCall","src":"11472:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"11490:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11465:6:30"},"nodeType":"YulFunctionCall","src":"11465:27:30"},"nodeType":"YulExpressionStatement","src":"11465:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11296:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11301:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"11306:6:30","type":""}],"src":"11252:246:30"},{"body":{"nodeType":"YulBlock","src":"11596:285:30","statements":[{"nodeType":"YulVariableDeclaration","src":"11606:53:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11653:5:30"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11620:32:30"},"nodeType":"YulFunctionCall","src":"11620:39:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11610:6:30","type":""}]},{"nodeType":"YulAssignment","src":"11668:78:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11734:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"11739:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11675:58:30"},"nodeType":"YulFunctionCall","src":"11675:71:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11668:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11794:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"11801:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11790:3:30"},"nodeType":"YulFunctionCall","src":"11790:16:30"},{"name":"pos","nodeType":"YulIdentifier","src":"11808:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"11813:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"11755:34:30"},"nodeType":"YulFunctionCall","src":"11755:65:30"},"nodeType":"YulExpressionStatement","src":"11755:65:30"},{"nodeType":"YulAssignment","src":"11829:46:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11840:3:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11867:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11845:21:30"},"nodeType":"YulFunctionCall","src":"11845:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11836:3:30"},"nodeType":"YulFunctionCall","src":"11836:39:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11829:3:30"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11577:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11584:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11592:3:30","type":""}],"src":"11504:377:30"},{"body":{"nodeType":"YulBlock","src":"12005:195:30","statements":[{"nodeType":"YulAssignment","src":"12015:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12027:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12038:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12023:3:30"},"nodeType":"YulFunctionCall","src":"12023:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12015:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12062:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12073:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12058:3:30"},"nodeType":"YulFunctionCall","src":"12058:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12081:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"12087:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12077:3:30"},"nodeType":"YulFunctionCall","src":"12077:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12051:6:30"},"nodeType":"YulFunctionCall","src":"12051:47:30"},"nodeType":"YulExpressionStatement","src":"12051:47:30"},{"nodeType":"YulAssignment","src":"12107:86:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12179:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"12188:4:30"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12115:63:30"},"nodeType":"YulFunctionCall","src":"12115:78:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12107:4:30"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11977:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11989:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12000:4:30","type":""}],"src":"11887:313:30"},{"body":{"nodeType":"YulBlock","src":"12271:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12288:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12311:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"12293:17:30"},"nodeType":"YulFunctionCall","src":"12293:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12281:6:30"},"nodeType":"YulFunctionCall","src":"12281:37:30"},"nodeType":"YulExpressionStatement","src":"12281:37:30"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12259:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12266:3:30","type":""}],"src":"12206:118:30"},{"body":{"nodeType":"YulBlock","src":"12428:124:30","statements":[{"nodeType":"YulAssignment","src":"12438:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12450:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12461:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12446:3:30"},"nodeType":"YulFunctionCall","src":"12446:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12438:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12518:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12531:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12542:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12527:3:30"},"nodeType":"YulFunctionCall","src":"12527:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12474:43:30"},"nodeType":"YulFunctionCall","src":"12474:71:30"},"nodeType":"YulExpressionStatement","src":"12474:71:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12412:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12423:4:30","type":""}],"src":"12330:222:30"},{"body":{"nodeType":"YulBlock","src":"12624:263:30","statements":[{"body":{"nodeType":"YulBlock","src":"12670:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12672:77:30"},"nodeType":"YulFunctionCall","src":"12672:79:30"},"nodeType":"YulExpressionStatement","src":"12672:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12645:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"12654:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12641:3:30"},"nodeType":"YulFunctionCall","src":"12641:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"12666:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12637:3:30"},"nodeType":"YulFunctionCall","src":"12637:32:30"},"nodeType":"YulIf","src":"12634:119:30"},{"nodeType":"YulBlock","src":"12763:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"12778:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"12792:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12782:6:30","type":""}]},{"nodeType":"YulAssignment","src":"12807:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12842:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"12853:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12838:3:30"},"nodeType":"YulFunctionCall","src":"12838:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12862:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"12817:20:30"},"nodeType":"YulFunctionCall","src":"12817:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12807:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12594:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12605:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12617:6:30","type":""}],"src":"12558:329:30"},{"body":{"nodeType":"YulBlock","src":"12958:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12975:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12998:5:30"}],"functionName":{"name":"cleanup_t_bytes27","nodeType":"YulIdentifier","src":"12980:17:30"},"nodeType":"YulFunctionCall","src":"12980:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12968:6:30"},"nodeType":"YulFunctionCall","src":"12968:37:30"},"nodeType":"YulExpressionStatement","src":"12968:37:30"}]},"name":"abi_encode_t_bytes27_to_t_bytes27_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12946:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12953:3:30","type":""}],"src":"12893:118:30"},{"body":{"nodeType":"YulBlock","src":"13115:124:30","statements":[{"nodeType":"YulAssignment","src":"13125:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13137:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13148:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13133:3:30"},"nodeType":"YulFunctionCall","src":"13133:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13125:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13205:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13218:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13229:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13214:3:30"},"nodeType":"YulFunctionCall","src":"13214:17:30"}],"functionName":{"name":"abi_encode_t_bytes27_to_t_bytes27_fromStack","nodeType":"YulIdentifier","src":"13161:43:30"},"nodeType":"YulFunctionCall","src":"13161:71:30"},"nodeType":"YulExpressionStatement","src":"13161:71:30"}]},"name":"abi_encode_tuple_t_bytes27__to_t_bytes27__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13087:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13099:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13110:4:30","type":""}],"src":"13017:222:30"},{"body":{"nodeType":"YulBlock","src":"13273:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13290:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13293:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13283:6:30"},"nodeType":"YulFunctionCall","src":"13283:88:30"},"nodeType":"YulExpressionStatement","src":"13283:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13387:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13390:4:30","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13380:6:30"},"nodeType":"YulFunctionCall","src":"13380:15:30"},"nodeType":"YulExpressionStatement","src":"13380:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13411:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13414:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13404:6:30"},"nodeType":"YulFunctionCall","src":"13404:15:30"},"nodeType":"YulExpressionStatement","src":"13404:15:30"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13245:180:30"},{"body":{"nodeType":"YulBlock","src":"13482:269:30","statements":[{"nodeType":"YulAssignment","src":"13492:22:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13506:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"13512:1:30","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13502:3:30"},"nodeType":"YulFunctionCall","src":"13502:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13492:6:30"}]},{"nodeType":"YulVariableDeclaration","src":"13523:38:30","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13553:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"13559:1:30","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13549:3:30"},"nodeType":"YulFunctionCall","src":"13549:12:30"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13527:18:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"13600:51:30","statements":[{"nodeType":"YulAssignment","src":"13614:27:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13628:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"13636:4:30","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13624:3:30"},"nodeType":"YulFunctionCall","src":"13624:17:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13614:6:30"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13580:18:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13573:6:30"},"nodeType":"YulFunctionCall","src":"13573:26:30"},"nodeType":"YulIf","src":"13570:81:30"},{"body":{"nodeType":"YulBlock","src":"13703:42:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13717:16:30"},"nodeType":"YulFunctionCall","src":"13717:18:30"},"nodeType":"YulExpressionStatement","src":"13717:18:30"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13667:18:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13690:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"13698:2:30","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13687:2:30"},"nodeType":"YulFunctionCall","src":"13687:14:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13664:2:30"},"nodeType":"YulFunctionCall","src":"13664:38:30"},"nodeType":"YulIf","src":"13661:84:30"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13466:4:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13475:6:30","type":""}],"src":"13431:320:30"},{"body":{"nodeType":"YulBlock","src":"13863:145:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13885:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"13893:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13881:3:30"},"nodeType":"YulFunctionCall","src":"13881:14:30"},{"hexValue":"436861696e53746f72616765436f6e7461696e65723a2046756e6374696f6e20","kind":"string","nodeType":"YulLiteral","src":"13897:34:30","type":"","value":"ChainStorageContainer: Function "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13874:6:30"},"nodeType":"YulFunctionCall","src":"13874:58:30"},"nodeType":"YulExpressionStatement","src":"13874:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13953:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"13961:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13949:3:30"},"nodeType":"YulFunctionCall","src":"13949:15:30"},{"hexValue":"63616e206f6e6c792062652063616c6c656420627920746865206f776e65722e","kind":"string","nodeType":"YulLiteral","src":"13966:34:30","type":"","value":"can only be called by the owner."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13942:6:30"},"nodeType":"YulFunctionCall","src":"13942:59:30"},"nodeType":"YulExpressionStatement","src":"13942:59:30"}]},"name":"store_literal_in_memory_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13855:6:30","type":""}],"src":"13757:251:30"},{"body":{"nodeType":"YulBlock","src":"14160:220:30","statements":[{"nodeType":"YulAssignment","src":"14170:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14236:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"14241:2:30","type":"","value":"64"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14177:58:30"},"nodeType":"YulFunctionCall","src":"14177:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14170:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14342:3:30"}],"functionName":{"name":"store_literal_in_memory_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5","nodeType":"YulIdentifier","src":"14253:88:30"},"nodeType":"YulFunctionCall","src":"14253:93:30"},"nodeType":"YulExpressionStatement","src":"14253:93:30"},{"nodeType":"YulAssignment","src":"14355:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14366:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"14371:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14362:3:30"},"nodeType":"YulFunctionCall","src":"14362:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14355:3:30"}]}]},"name":"abi_encode_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14148:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14156:3:30","type":""}],"src":"14014:366:30"},{"body":{"nodeType":"YulBlock","src":"14557:248:30","statements":[{"nodeType":"YulAssignment","src":"14567:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14579:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14590:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14575:3:30"},"nodeType":"YulFunctionCall","src":"14575:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14567:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14614:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14625:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14610:3:30"},"nodeType":"YulFunctionCall","src":"14610:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14633:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"14639:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14629:3:30"},"nodeType":"YulFunctionCall","src":"14629:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14603:6:30"},"nodeType":"YulFunctionCall","src":"14603:47:30"},"nodeType":"YulExpressionStatement","src":"14603:47:30"},{"nodeType":"YulAssignment","src":"14659:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14793:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14667:124:30"},"nodeType":"YulFunctionCall","src":"14667:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14659:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14537:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14552:4:30","type":""}],"src":"14386:419:30"},{"body":{"nodeType":"YulBlock","src":"14854:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"14911:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14920:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14923:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14913:6:30"},"nodeType":"YulFunctionCall","src":"14913:12:30"},"nodeType":"YulExpressionStatement","src":"14913:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14877:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14902:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14884:17:30"},"nodeType":"YulFunctionCall","src":"14884:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"14874:2:30"},"nodeType":"YulFunctionCall","src":"14874:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"14867:6:30"},"nodeType":"YulFunctionCall","src":"14867:43:30"},"nodeType":"YulIf","src":"14864:63:30"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14847:5:30","type":""}],"src":"14811:122:30"},{"body":{"nodeType":"YulBlock","src":"15002:80:30","statements":[{"nodeType":"YulAssignment","src":"15012:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15027:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15021:5:30"},"nodeType":"YulFunctionCall","src":"15021:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15012:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15070:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"15043:26:30"},"nodeType":"YulFunctionCall","src":"15043:33:30"},"nodeType":"YulExpressionStatement","src":"15043:33:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"14980:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"14988:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"14996:5:30","type":""}],"src":"14939:143:30"},{"body":{"nodeType":"YulBlock","src":"15165:274:30","statements":[{"body":{"nodeType":"YulBlock","src":"15211:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15213:77:30"},"nodeType":"YulFunctionCall","src":"15213:79:30"},"nodeType":"YulExpressionStatement","src":"15213:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15186:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"15195:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15182:3:30"},"nodeType":"YulFunctionCall","src":"15182:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"15207:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15178:3:30"},"nodeType":"YulFunctionCall","src":"15178:32:30"},"nodeType":"YulIf","src":"15175:119:30"},{"nodeType":"YulBlock","src":"15304:128:30","statements":[{"nodeType":"YulVariableDeclaration","src":"15319:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"15333:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15323:6:30","type":""}]},{"nodeType":"YulAssignment","src":"15348:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15394:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"15405:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15390:3:30"},"nodeType":"YulFunctionCall","src":"15390:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15414:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"15358:31:30"},"nodeType":"YulFunctionCall","src":"15358:64:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15348:6:30"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15135:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15146:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15158:6:30","type":""}],"src":"15088:351:30"},{"body":{"nodeType":"YulBlock","src":"15551:64:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15573:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"15581:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15569:3:30"},"nodeType":"YulFunctionCall","src":"15569:14:30"},{"hexValue":"496e646578206f7574206f6620626f756e64732e","kind":"string","nodeType":"YulLiteral","src":"15585:22:30","type":"","value":"Index out of bounds."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15562:6:30"},"nodeType":"YulFunctionCall","src":"15562:46:30"},"nodeType":"YulExpressionStatement","src":"15562:46:30"}]},"name":"store_literal_in_memory_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15543:6:30","type":""}],"src":"15445:170:30"},{"body":{"nodeType":"YulBlock","src":"15767:220:30","statements":[{"nodeType":"YulAssignment","src":"15777:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15843:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"15848:2:30","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15784:58:30"},"nodeType":"YulFunctionCall","src":"15784:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15777:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15949:3:30"}],"functionName":{"name":"store_literal_in_memory_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8","nodeType":"YulIdentifier","src":"15860:88:30"},"nodeType":"YulFunctionCall","src":"15860:93:30"},"nodeType":"YulExpressionStatement","src":"15860:93:30"},{"nodeType":"YulAssignment","src":"15962:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15973:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"15978:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15969:3:30"},"nodeType":"YulFunctionCall","src":"15969:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15962:3:30"}]}]},"name":"abi_encode_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15755:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15763:3:30","type":""}],"src":"15621:366:30"},{"body":{"nodeType":"YulBlock","src":"16164:248:30","statements":[{"nodeType":"YulAssignment","src":"16174:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16186:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16197:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16182:3:30"},"nodeType":"YulFunctionCall","src":"16182:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16174:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16221:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16232:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16217:3:30"},"nodeType":"YulFunctionCall","src":"16217:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16240:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"16246:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16236:3:30"},"nodeType":"YulFunctionCall","src":"16236:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16210:6:30"},"nodeType":"YulFunctionCall","src":"16210:47:30"},"nodeType":"YulExpressionStatement","src":"16210:47:30"},{"nodeType":"YulAssignment","src":"16266:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16400:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16274:124:30"},"nodeType":"YulFunctionCall","src":"16274:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16266:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16144:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16159:4:30","type":""}],"src":"15993:419:30"},{"body":{"nodeType":"YulBlock","src":"16446:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16463:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16466:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16456:6:30"},"nodeType":"YulFunctionCall","src":"16456:88:30"},"nodeType":"YulExpressionStatement","src":"16456:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16560:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16563:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16553:6:30"},"nodeType":"YulFunctionCall","src":"16553:15:30"},"nodeType":"YulExpressionStatement","src":"16553:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16584:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16587:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16577:6:30"},"nodeType":"YulFunctionCall","src":"16577:15:30"},"nodeType":"YulExpressionStatement","src":"16577:15:30"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16418:180:30"},{"body":{"nodeType":"YulBlock","src":"16648:51:30","statements":[{"nodeType":"YulAssignment","src":"16658:35:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16673:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"16680:12:30","type":"","value":"0xffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16669:3:30"},"nodeType":"YulFunctionCall","src":"16669:24:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"16658:7:30"}]}]},"name":"cleanup_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16630:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"16640:7:30","type":""}],"src":"16604:95:30"},{"body":{"nodeType":"YulBlock","src":"16747:135:30","statements":[{"nodeType":"YulAssignment","src":"16757:32:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16783:5:30"}],"functionName":{"name":"cleanup_t_uint40","nodeType":"YulIdentifier","src":"16766:16:30"},"nodeType":"YulFunctionCall","src":"16766:23:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16757:5:30"}]},{"body":{"nodeType":"YulBlock","src":"16825:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16827:16:30"},"nodeType":"YulFunctionCall","src":"16827:18:30"},"nodeType":"YulExpressionStatement","src":"16827:18:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16804:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"16811:12:30","type":"","value":"0xffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16801:2:30"},"nodeType":"YulFunctionCall","src":"16801:23:30"},"nodeType":"YulIf","src":"16798:49:30"},{"nodeType":"YulAssignment","src":"16856:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16867:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"16874:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16863:3:30"},"nodeType":"YulFunctionCall","src":"16863:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"16856:3:30"}]}]},"name":"increment_t_uint40","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16733:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"16743:3:30","type":""}],"src":"16705:177:30"},{"body":{"nodeType":"YulBlock","src":"16946:40:30","statements":[{"nodeType":"YulAssignment","src":"16957:22:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16973:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16967:5:30"},"nodeType":"YulFunctionCall","src":"16967:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"16957:6:30"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16929:5:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"16939:6:30","type":""}],"src":"16888:98:30"},{"body":{"nodeType":"YulBlock","src":"17087:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17104:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"17109:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17097:6:30"},"nodeType":"YulFunctionCall","src":"17097:19:30"},"nodeType":"YulExpressionStatement","src":"17097:19:30"},{"nodeType":"YulAssignment","src":"17125:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17144:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"17149:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17140:3:30"},"nodeType":"YulFunctionCall","src":"17140:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17125:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17059:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"17064:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17075:11:30","type":""}],"src":"16992:168:30"},{"body":{"nodeType":"YulBlock","src":"17256:283:30","statements":[{"nodeType":"YulVariableDeclaration","src":"17266:52:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17312:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17280:31:30"},"nodeType":"YulFunctionCall","src":"17280:38:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17270:6:30","type":""}]},{"nodeType":"YulAssignment","src":"17327:77:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17392:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"17397:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17334:57:30"},"nodeType":"YulFunctionCall","src":"17334:70:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17327:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17452:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"17459:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17448:3:30"},"nodeType":"YulFunctionCall","src":"17448:16:30"},{"name":"pos","nodeType":"YulIdentifier","src":"17466:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"17471:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17413:34:30"},"nodeType":"YulFunctionCall","src":"17413:65:30"},"nodeType":"YulExpressionStatement","src":"17413:65:30"},{"nodeType":"YulAssignment","src":"17487:46:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17498:3:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17525:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17503:21:30"},"nodeType":"YulFunctionCall","src":"17503:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17494:3:30"},"nodeType":"YulFunctionCall","src":"17494:39:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17487:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17237:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17244:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17252:3:30","type":""}],"src":"17166:373:30"},{"body":{"nodeType":"YulBlock","src":"17745:440:30","statements":[{"nodeType":"YulAssignment","src":"17755:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17767:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17778:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17763:3:30"},"nodeType":"YulFunctionCall","src":"17763:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17755:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17836:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17849:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17860:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17845:3:30"},"nodeType":"YulFunctionCall","src":"17845:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"17792:43:30"},"nodeType":"YulFunctionCall","src":"17792:71:30"},"nodeType":"YulExpressionStatement","src":"17792:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17917:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17930:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"17941:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17926:3:30"},"nodeType":"YulFunctionCall","src":"17926:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17873:43:30"},"nodeType":"YulFunctionCall","src":"17873:72:30"},"nodeType":"YulExpressionStatement","src":"17873:72:30"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17999:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18012:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18023:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18008:3:30"},"nodeType":"YulFunctionCall","src":"18008:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17955:43:30"},"nodeType":"YulFunctionCall","src":"17955:72:30"},"nodeType":"YulExpressionStatement","src":"17955:72:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18048:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18059:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18044:3:30"},"nodeType":"YulFunctionCall","src":"18044:18:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18068:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"18074:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18064:3:30"},"nodeType":"YulFunctionCall","src":"18064:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18037:6:30"},"nodeType":"YulFunctionCall","src":"18037:48:30"},"nodeType":"YulExpressionStatement","src":"18037:48:30"},{"nodeType":"YulAssignment","src":"18094:84:30","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"18164:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"18173:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18102:61:30"},"nodeType":"YulFunctionCall","src":"18102:76:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18094:4:30"}]}]},"name":"abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17693:9:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17705:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17713:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17721:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17729:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17740:4:30","type":""}],"src":"17545:640:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes27(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000)\n    }\n\n    function validator_revert_t_bytes27(value) {\n        if iszero(eq(value, cleanup_t_bytes27(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes27(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes27(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes27(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes27(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes27(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes27(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes27(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes27(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Lib_AddressManager_$334_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Lib_AddressManager_$334_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Lib_AddressManager_$334_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Lib_AddressManager_$334__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Lib_AddressManager_$334_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct Lib_OVMCodec.ChainBatchHeader\n    function abi_decode_t_struct$_ChainBatchHeader_$91_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // batchIndex\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // batchRoot\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // batchSize\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // prevTotalElements\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // extraData\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x80), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_ChainBatchHeader_$91_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_struct$_ChainBatchHeader_$91_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes27_to_t_bytes27_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes27(value))\n    }\n\n    function abi_encode_tuple_t_bytes27__to_t_bytes27__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes27_to_t_bytes27_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"ChainStorageContainer: Function \")\n\n        mstore(add(memPtr, 32), \"can only be called by the owner.\")\n\n    }\n\n    function abi_encode_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_143cf364958987156b6741652451092dcf9a89a975ee67246c378a63b18871c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Index out of bounds.\")\n\n    }\n\n    function abi_encode_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_566cb80bd1eccf9c1c669aefc3700c326fa85115d56a7f073b4a813f46f088f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint40(value) -> cleaned {\n        cleaned := and(value, 0xffffffffff)\n    }\n\n    function increment_t_uint40(value) -> ret {\n        value := cleanup_t_uint40(value)\n        if eq(value, 0xffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_bytes32_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100b45760003560e01c8063461a447811610071578063461a4478146101655780634651d91e146101955780638da5cb5b146101b15780639507d39a146101cf578063b298e36b146101ff578063ccf8f9691461021b576100b4565b8063167fd681146100b95780631f7b6d32146100d55780632015276c146100f357806329061de21461010f578063299ca4781461012b5780633d16057214610149575b600080fd5b6100d360048036038101906100ce9190610d10565b610239565b005b6100dd610353565b6040516100ea9190610d5f565b60405180910390f35b61010d60048036038101906101089190610db0565b61036b565b005b61012960048036038101906101249190610df0565b610485565b005b61013361059c565b6040516101409190610e9c565b60405180910390f35b610163600480360381019061015e91906110af565b6105c0565b005b61017f600480360381019061017a9190611199565b6105d2565b60405161018c9190611203565b60405180910390f35b6101af60048036038101906101aa919061121e565b610676565b005b6101b961078d565b6040516101c691906112ca565b60405180910390f35b6101e960048036038101906101e4919061121e565b61081b565b6040516101f691906112fb565b60405180910390f35b61021960048036038101906102149190611316565b610827565b005b61022361093e565b6040516102309190611352565b60405180910390f35b6102cc600180546102499061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546102759061139c565b80156102c25780601f10610297576101008083540402835291602001916102c2565b820191906000526020600020905b8154815290600101906020018083116102a557829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610339576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103309061143f565b60405180910390fd5b61034f8282600261094f9092919063ffffffff16565b5050565b600061035f60026109ff565b64ffffffffff16905090565b6103fe6001805461037b9061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546103a79061139c565b80156103f45780601f106103c9576101008083540402835291602001916103f4565b820191906000526020600020905b8154815290600101906020018083116103d757829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461046b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104629061143f565b60405180910390fd5b61048182826002610a1a9092919063ffffffff16565b5050565b610518600180546104959061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546104c19061139c565b801561050e5780601f106104e35761010080835404028352916020019161050e565b820191906000526020600020905b8154815290600101906020018083116104f157829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c9061143f565b60405180910390fd5b610599816002610aa590919063ffffffff16565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105c981610ae6565b60048190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bf40fac1836040518263ffffffff1660e01b815260040161062e91906112ca565b602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f919061148b565b9050919050565b610709600180546106869061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061139c565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d9061143f565b60405180910390fd5b61078a816002610b2c90919063ffffffff16565b50565b6001805461079a9061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546107c69061139c565b80156108135780601f106107e857610100808354040283529160200191610813565b820191906000526020600020905b8154815290600101906020018083116107f657829003601f168201915b505050505081565b60006004549050919050565b6108ba600180546108379061139c565b80601f01602080910402602001604051908101604052809291908181526020018280546108639061139c565b80156108b05780601f10610885576101008083540402835291602001916108b0565b820191906000526020600020905b81548152906001019060200180831161089357829003601f168201915b50505050506105d2565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e9061143f565b60405180910390fd5b61093b816002610b5790919063ffffffff16565b50565b600061094a6002610b82565b905090565b600061095a84610b9d565b9050806000015164ffffffffff168364ffffffffff16106109b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a790611504565b60405180910390fd5b82816000019064ffffffffff16908164ffffffffff168152505081816020019064ffffffffff1916908164ffffffffff1916815250506109f98185610c0e90919063ffffffff16565b50505050565b600080610a0b83610b9d565b90508060000151915050919050565b6000610a2584610b9d565b905082846001016000836000015164ffffffffff16815260200190815260200160002081905550806000018051809190610a5e90611564565b64ffffffffff1664ffffffffff168152505081816020019064ffffffffff1916908164ffffffffff191681525050610a9f8185610c0e90919063ffffffff16565b50505050565b6000610ab083610b9d565b905081816020019064ffffffffff1916908164ffffffffff191681525050610ae18184610c0e90919063ffffffff16565b505050565b60008160200151826040015183606001518460800151604051602001610b0f94939291906115e6565b604051602081830303815290604052805190602001209050919050565b6000610b3783610b9d565b9050610b528282602001518561094f9092919063ffffffff16565b505050565b6000610b6283610b9d565b9050610b7d82826020015185610a1a9092919063ffffffff16565b505050565b600080610b8e83610b9d565b90508060200151915050919050565b610ba5610c45565b60008260000154905060008064ffffffffff831691507fffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000008316905060405180604001604052808364ffffffffff1681526020018264ffffffffff19168152509350505050919050565b60008082600001519050600083602001519050819250808317925082856000015414610c3e578285600001819055505b5050505050565b6040518060400160405280600064ffffffffff168152602001600064ffffffffff191681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610c9581610c82565b8114610ca057600080fd5b50565b600081359050610cb281610c8c565b92915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000082169050919050565b610ced81610cb8565b8114610cf857600080fd5b50565b600081359050610d0a81610ce4565b92915050565b60008060408385031215610d2757610d26610c78565b5b6000610d3585828601610ca3565b9250506020610d4685828601610cfb565b9150509250929050565b610d5981610c82565b82525050565b6000602082019050610d746000830184610d50565b92915050565b6000819050919050565b610d8d81610d7a565b8114610d9857600080fd5b50565b600081359050610daa81610d84565b92915050565b60008060408385031215610dc757610dc6610c78565b5b6000610dd585828601610d9b565b9250506020610de685828601610cfb565b9150509250929050565b600060208284031215610e0657610e05610c78565b5b6000610e1484828501610cfb565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e62610e5d610e5884610e1d565b610e3d565b610e1d565b9050919050565b6000610e7482610e47565b9050919050565b6000610e8682610e69565b9050919050565b610e9681610e7b565b82525050565b6000602082019050610eb16000830184610e8d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f0582610ebc565b810181811067ffffffffffffffff82111715610f2457610f23610ecd565b5b80604052505050565b6000610f37610c6e565b9050610f438282610efc565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610f7257610f71610ecd565b5b610f7b82610ebc565b9050602081019050919050565b82818337600083830152505050565b6000610faa610fa584610f57565b610f2d565b905082815260208101848484011115610fc657610fc5610f52565b5b610fd1848285610f88565b509392505050565b600082601f830112610fee57610fed610f4d565b5b8135610ffe848260208601610f97565b91505092915050565b600060a0828403121561101d5761101c610eb7565b5b61102760a0610f2d565b9050600061103784828501610ca3565b600083015250602061104b84828501610d9b565b602083015250604061105f84828501610ca3565b604083015250606061107384828501610ca3565b606083015250608082013567ffffffffffffffff81111561109757611096610f48565b5b6110a384828501610fd9565b60808301525092915050565b6000602082840312156110c5576110c4610c78565b5b600082013567ffffffffffffffff8111156110e3576110e2610c7d565b5b6110ef84828501611007565b91505092915050565b600067ffffffffffffffff82111561111357611112610ecd565b5b61111c82610ebc565b9050602081019050919050565b600061113c611137846110f8565b610f2d565b90508281526020810184848401111561115857611157610f52565b5b611163848285610f88565b509392505050565b600082601f8301126111805761117f610f4d565b5b8135611190848260208601611129565b91505092915050565b6000602082840312156111af576111ae610c78565b5b600082013567ffffffffffffffff8111156111cd576111cc610c7d565b5b6111d98482850161116b565b91505092915050565b60006111ed82610e1d565b9050919050565b6111fd816111e2565b82525050565b600060208201905061121860008301846111f4565b92915050565b60006020828403121561123457611233610c78565b5b600061124284828501610ca3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561128557808201518184015260208101905061126a565b60008484015250505050565b600061129c8261124b565b6112a68185611256565b93506112b6818560208601611267565b6112bf81610ebc565b840191505092915050565b600060208201905081810360008301526112e48184611291565b905092915050565b6112f581610d7a565b82525050565b600060208201905061131060008301846112ec565b92915050565b60006020828403121561132c5761132b610c78565b5b600061133a84828501610d9b565b91505092915050565b61134c81610cb8565b82525050565b60006020820190506113676000830184611343565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113b457607f821691505b6020821081036113c7576113c661136d565b5b50919050565b7f436861696e53746f72616765436f6e7461696e65723a2046756e6374696f6e2060008201527f63616e206f6e6c792062652063616c6c656420627920746865206f776e65722e602082015250565b6000611429604083611256565b9150611434826113cd565b604082019050919050565b600060208201905081810360008301526114588161141c565b9050919050565b611468816111e2565b811461147357600080fd5b50565b6000815190506114858161145f565b92915050565b6000602082840312156114a1576114a0610c78565b5b60006114af84828501611476565b91505092915050565b7f496e646578206f7574206f6620626f756e64732e000000000000000000000000600082015250565b60006114ee601483611256565b91506114f9826114b8565b602082019050919050565b6000602082019050818103600083015261151d816114e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600064ffffffffff82169050919050565b600061156f82611553565b915064ffffffffff820361158657611585611524565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60006115b882611591565b6115c2818561159c565b93506115d2818560208601611267565b6115db81610ebc565b840191505092915050565b60006080820190506115fb60008301876112ec565b6116086020830186610d50565b6116156040830185610d50565b818103606083015261162781846115ad565b90509594505050505056fea26469706673582212205779a823144bb5710996351f7cf1bf5f4f879ef91edfc2e713d41489948a3de464736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x461A4478 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x461A4478 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x4651D91E EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x9507D39A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xB298E36B EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0xCCF8F969 EQ PUSH2 0x21B JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x167FD681 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1F7B6D32 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2015276C EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x29061DE2 EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x299CA478 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x3D160572 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xD10 JUMP JUMPDEST PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xD5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x108 SWAP2 SWAP1 PUSH2 0xDB0 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x59C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x5C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x230 SWAP2 SWAP1 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x1 DUP1 SLOAD PUSH2 0x249 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x275 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x297 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x330 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34F DUP3 DUP3 PUSH1 0x2 PUSH2 0x94F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F PUSH1 0x2 PUSH2 0x9FF JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3FE PUSH1 0x1 DUP1 SLOAD PUSH2 0x37B SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A7 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3F4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x481 DUP3 DUP3 PUSH1 0x2 PUSH2 0xA1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x518 PUSH1 0x1 DUP1 SLOAD PUSH2 0x495 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C1 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57C SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x599 DUP2 PUSH1 0x2 PUSH2 0xAA5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5C9 DUP2 PUSH2 0xAE6 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBF40FAC1 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x148B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x709 PUSH1 0x1 DUP1 SLOAD PUSH2 0x686 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6B2 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6FF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6D4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6FF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76D SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x78A DUP2 PUSH1 0x2 PUSH2 0xB2C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x79A SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7C6 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x813 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x813 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8BA PUSH1 0x1 DUP1 SLOAD PUSH2 0x837 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x863 SWAP1 PUSH2 0x139C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B0 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x885 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B0 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x893 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x5D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91E SWAP1 PUSH2 0x143F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93B DUP2 PUSH1 0x2 PUSH2 0xB57 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94A PUSH1 0x2 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95A DUP5 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH5 0xFFFFFFFFFF AND DUP4 PUSH5 0xFFFFFFFFFF AND LT PUSH2 0x9B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A7 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x0 ADD SWAP1 PUSH5 0xFFFFFFFFFF AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH5 0xFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP POP PUSH2 0x9F9 DUP2 DUP6 PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0B DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA25 DUP5 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 PUSH1 0x1 ADD PUSH1 0x0 DUP4 PUSH1 0x0 ADD MLOAD PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0xA5E SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH5 0xFFFFFFFFFF AND PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH5 0xFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP POP PUSH2 0xA9F DUP2 DUP6 PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x20 ADD SWAP1 PUSH5 0xFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP POP PUSH2 0xAE1 DUP2 DUP5 PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xB0F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP PUSH2 0xB52 DUP3 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0x94F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP PUSH2 0xB7D DUP3 DUP3 PUSH1 0x20 ADD MLOAD DUP6 PUSH2 0xA1A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB8E DUP4 PUSH2 0xB9D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA5 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH5 0xFFFFFFFFFF DUP4 AND SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000 DUP4 AND SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP DUP2 SWAP3 POP DUP1 DUP4 OR SWAP3 POP DUP3 DUP6 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xC3E JUMPI DUP3 DUP6 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH5 0xFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH5 0xFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC95 DUP2 PUSH2 0xC82 JUMP JUMPDEST DUP2 EQ PUSH2 0xCA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCB2 DUP2 PUSH2 0xC8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCED DUP2 PUSH2 0xCB8 JUMP JUMPDEST DUP2 EQ PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD0A DUP2 PUSH2 0xCE4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD27 JUMPI PUSH2 0xD26 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD35 DUP6 DUP3 DUP7 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD46 DUP6 DUP3 DUP7 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD59 DUP2 PUSH2 0xC82 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8D DUP2 PUSH2 0xD7A JUMP JUMPDEST DUP2 EQ PUSH2 0xD98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDAA DUP2 PUSH2 0xD84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDC7 JUMPI PUSH2 0xDC6 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDD5 DUP6 DUP3 DUP7 ADD PUSH2 0xD9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDE6 DUP6 DUP3 DUP7 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE06 JUMPI PUSH2 0xE05 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE14 DUP5 DUP3 DUP6 ADD PUSH2 0xCFB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE62 PUSH2 0xE5D PUSH2 0xE58 DUP5 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE74 DUP3 PUSH2 0xE47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE86 DUP3 PUSH2 0xE69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE96 DUP2 PUSH2 0xE7B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xF05 DUP3 PUSH2 0xEBC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0xECD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF37 PUSH2 0xC6E JUMP JUMPDEST SWAP1 POP PUSH2 0xF43 DUP3 DUP3 PUSH2 0xEFC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF72 JUMPI PUSH2 0xF71 PUSH2 0xECD JUMP JUMPDEST JUMPDEST PUSH2 0xF7B DUP3 PUSH2 0xEBC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFAA PUSH2 0xFA5 DUP5 PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFC6 JUMPI PUSH2 0xFC5 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH2 0xFD1 DUP5 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFEE JUMPI PUSH2 0xFED PUSH2 0xF4D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101C PUSH2 0xEB7 JUMP JUMPDEST JUMPDEST PUSH2 0x1027 PUSH1 0xA0 PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1037 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x104B DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x105F DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x1073 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1097 JUMPI PUSH2 0x1096 PUSH2 0xF48 JUMP JUMPDEST JUMPDEST PUSH2 0x10A3 DUP5 DUP3 DUP6 ADD PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C5 JUMPI PUSH2 0x10C4 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10E3 JUMPI PUSH2 0x10E2 PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH2 0x10EF DUP5 DUP3 DUP6 ADD PUSH2 0x1007 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1113 JUMPI PUSH2 0x1112 PUSH2 0xECD JUMP JUMPDEST JUMPDEST PUSH2 0x111C DUP3 PUSH2 0xEBC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113C PUSH2 0x1137 DUP5 PUSH2 0x10F8 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1158 JUMPI PUSH2 0x1157 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH2 0x1163 DUP5 DUP3 DUP6 PUSH2 0xF88 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1180 JUMPI PUSH2 0x117F PUSH2 0xF4D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1190 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1129 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11AF JUMPI PUSH2 0x11AE PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0xC7D JUMP JUMPDEST JUMPDEST PUSH2 0x11D9 DUP5 DUP3 DUP6 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11ED DUP3 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11FD DUP2 PUSH2 0x11E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1218 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1234 JUMPI PUSH2 0x1233 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1242 DUP5 DUP3 DUP6 ADD PUSH2 0xCA3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1285 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129C DUP3 PUSH2 0x124B JUMP JUMPDEST PUSH2 0x12A6 DUP2 DUP6 PUSH2 0x1256 JUMP JUMPDEST SWAP4 POP PUSH2 0x12B6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x12BF DUP2 PUSH2 0xEBC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12E4 DUP2 DUP5 PUSH2 0x1291 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12F5 DUP2 PUSH2 0xD7A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1310 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132C JUMPI PUSH2 0x132B PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x133A DUP5 DUP3 DUP6 ADD PUSH2 0xD9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x134C DUP2 PUSH2 0xCB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1367 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13B4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13C7 JUMPI PUSH2 0x13C6 PUSH2 0x136D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436861696E53746F72616765436F6E7461696E65723A2046756E6374696F6E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63616E206F6E6C792062652063616C6C656420627920746865206F776E65722E PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1429 PUSH1 0x40 DUP4 PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP PUSH2 0x1434 DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1458 DUP2 PUSH2 0x141C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1468 DUP2 PUSH2 0x11E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1485 DUP2 PUSH2 0x145F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A1 JUMPI PUSH2 0x14A0 PUSH2 0xC78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14AF DUP5 DUP3 DUP6 ADD PUSH2 0x1476 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E646578206F7574206F6620626F756E64732E000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14EE PUSH1 0x14 DUP4 PUSH2 0x1256 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F9 DUP3 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151D DUP2 PUSH2 0x14E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH5 0xFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x156F DUP3 PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP PUSH5 0xFFFFFFFFFF DUP3 SUB PUSH2 0x1586 JUMPI PUSH2 0x1585 PUSH2 0x1524 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B8 DUP3 PUSH2 0x1591 JUMP JUMPDEST PUSH2 0x15C2 DUP2 DUP6 PUSH2 0x159C JUMP JUMPDEST SWAP4 POP PUSH2 0x15D2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1267 JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0xEBC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1608 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD50 JUMP JUMPDEST PUSH2 0x1615 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD50 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1627 DUP2 DUP5 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI PUSH26 0xA823144BB5710996351F7CF1BF5F4F879EF91EDFC2E713D41489 SWAP5 DUP11 RETURNDATASIZE 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"488:3141:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3269:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2152:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2566:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1689:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;284:43:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3476:151:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;865:127:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3015:139:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;741:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2808:92;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2366:85;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1933:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3269:201;1372:14;1380:5;1372:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:14::i;:::-;1358:28;;:10;:28;;;1337:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;3395:68:::1;3438:6;3447:15;3395:6;:35;;:68;;;;;:::i;:::-;3269:201:::0;;:::o;2152:99::-;2191:7;2225:18;:6;:16;:18::i;:::-;2217:27;;2210:34;;2152:99;:::o;2566:127::-;1372:14;1380:5;1372:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:14::i;:::-;1358:28;;:10;:28;;;1337:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;2649:37:::1;2661:7;2670:15;2649:6;:11;;:37;;;;;:::i;:::-;2566:127:::0;;:::o;1689:129::-;1372:14;1380:5;1372:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:14::i;:::-;1358:28;;:10;:28;;;1337:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;1775:36:::1;1795:15;1775:6;:19;;:36;;;;:::i;:::-;1689:129:::0;:::o;284:43:3:-;;;;;;;;;;;;:::o;3476:151:11:-;3578:42;3607:12;3578:28;:42::i;:::-;3566:9;:54;;;;3476:151;:::o;865:127:3:-;924:7;950:17;;;;;;;;;;;:28;;;979:5;950:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;943:42;;865:127;;;:::o;3015:139:11:-;1372:14;1380:5;1372:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:14::i;:::-;1358:28;;:10;:28;;;1337:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;3096:51:::1;3139:6;3096;:35;;:51;;;;:::i;:::-;3015:139:::0;:::o;741:19::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2808:92::-;2858:7;2884:9;;2877:16;;2808:92;;;:::o;2366:85::-;1372:14;1380:5;1372:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:14::i;:::-;1358:28;;:10;:28;;;1337:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;2424:20:::1;2436:7;2424:6;:11;;:20;;;;:::i;:::-;2366:85:::0;:::o;1933:104::-;1983:7;2009:21;:6;:19;:21::i;:::-;2002:28;;1933:104;:::o;2732:416:6:-;2876:24;2903:18;:5;:16;:18::i;:::-;2876:45;;2949:3;:10;;;2940:19;;:6;:19;;;2932:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3068:6;3055:3;:10;;:19;;;;;;;;;;;3100:10;3084:3;:13;;:26;;;;;;;;;;;;;3120:21;3137:3;3120:5;:16;;:21;;;;:::i;:::-;2866:282;2732:416;;;:::o;3696:161::-;3760:6;3778:24;3805:18;:5;:16;:18::i;:::-;3778:45;;3840:3;:10;;;3833:17;;;3696:161;;;:::o;1322:387::-;1443:24;1470:18;:5;:16;:18::i;:::-;1443:45;;1523:6;1499:5;:9;;:21;1509:3;:10;;;1499:21;;;;;;;;;;;;;:30;;;;1623:3;:10;;:12;;;;;;;;:::i;:::-;;;;;;;;;1661:10;1645:3;:13;;:26;;;;;;;;;;;;;1681:21;1698:3;1681:5;:16;;:21;;;;:::i;:::-;1433:276;1322:387;;;:::o;4007:202::-;4090:24;4117:18;:5;:16;:18::i;:::-;4090:45;;4161:10;4145:3;:13;;:26;;;;;;;;;;;;;4181:21;4198:3;4181:5;:16;;:21;;;;:::i;:::-;4080:129;4007:202;;:::o;3441:425:1:-;3564:7;3665:12;:22;;;3709:12;:22;;;3753:12;:30;;;3805:12;:22;;;3633:212;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3606:253;;;;;;3587:272;;3441:425;;;:::o;3343:213:6:-;3437:24;3464:18;:5;:16;:18::i;:::-;3437:45;;3492:57;3527:6;3535:3;:13;;;3492:5;:34;;:57;;;;;:::i;:::-;3427:129;3343:213;;:::o;1865:167::-;1936:24;1963:18;:5;:16;:18::i;:::-;1936:45;;1992:33;2003:6;2011:3;:13;;;1992:5;:10;;:33;;;;;:::i;:::-;1926:106;1865:167;;:::o;4359:168::-;4426:7;4445:24;4472:18;:5;:16;:18::i;:::-;4445:45;;4507:3;:13;;;4500:20;;;4359:168;;;:::o;5198:588::-;5263:20;;:::i;:::-;5295:15;5313:5;:13;;;5295:31;;5336:13;5359:17;5465:66;5440:7;5419:126;5409:136;;5617:66;5592:7;5571:126;5558:139;;5724:55;;;;;;;;5748:6;5724:55;;;;;;5767:9;5724:55;;;;;;5717:62;;;;;5198:588;;;:::o;4670:384::-;4758:15;4783:13;4799:4;:11;;;4783:27;;4820:17;4840:4;:14;;;4820:34;;4898:6;4887:17;;4940:9;4931:7;4928:22;4917:33;;4991:7;4974:5;:13;;;:24;4970:78;;5030:7;5014:5;:13;;:23;;;;4970:78;4748:306;;;4670:384;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:30:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:150::-;727:7;767:66;760:5;756:78;745:89;;690:150;;;:::o;846:122::-;919:24;937:5;919:24;:::i;:::-;912:5;909:35;899:63;;958:1;955;948:12;899:63;846:122;:::o;974:139::-;1020:5;1058:6;1045:20;1036:29;;1074:33;1101:5;1074:33;:::i;:::-;974:139;;;;:::o;1119:474::-;1187:6;1195;1244:2;1232:9;1223:7;1219:23;1215:32;1212:119;;;1250:79;;:::i;:::-;1212:119;1370:1;1395:53;1440:7;1431:6;1420:9;1416:22;1395:53;:::i;:::-;1385:63;;1341:117;1497:2;1523:53;1568:7;1559:6;1548:9;1544:22;1523:53;:::i;:::-;1513:63;;1468:118;1119:474;;;;;:::o;1599:118::-;1686:24;1704:5;1686:24;:::i;:::-;1681:3;1674:37;1599:118;;:::o;1723:222::-;1816:4;1854:2;1843:9;1839:18;1831:26;;1867:71;1935:1;1924:9;1920:17;1911:6;1867:71;:::i;:::-;1723:222;;;;:::o;1951:77::-;1988:7;2017:5;2006:16;;1951:77;;;:::o;2034:122::-;2107:24;2125:5;2107:24;:::i;:::-;2100:5;2097:35;2087:63;;2146:1;2143;2136:12;2087:63;2034:122;:::o;2162:139::-;2208:5;2246:6;2233:20;2224:29;;2262:33;2289:5;2262:33;:::i;:::-;2162:139;;;;:::o;2307:474::-;2375:6;2383;2432:2;2420:9;2411:7;2407:23;2403:32;2400:119;;;2438:79;;:::i;:::-;2400:119;2558:1;2583:53;2628:7;2619:6;2608:9;2604:22;2583:53;:::i;:::-;2573:63;;2529:117;2685:2;2711:53;2756:7;2747:6;2736:9;2732:22;2711:53;:::i;:::-;2701:63;;2656:118;2307:474;;;;;:::o;2787:329::-;2846:6;2895:2;2883:9;2874:7;2870:23;2866:32;2863:119;;;2901:79;;:::i;:::-;2863:119;3021:1;3046:53;3091:7;3082:6;3071:9;3067:22;3046:53;:::i;:::-;3036:63;;2992:117;2787:329;;;;:::o;3122:126::-;3159:7;3199:42;3192:5;3188:54;3177:65;;3122:126;;;:::o;3254:60::-;3282:3;3303:5;3296:12;;3254:60;;;:::o;3320:142::-;3370:9;3403:53;3421:34;3430:24;3448:5;3430:24;:::i;:::-;3421:34;:::i;:::-;3403:53;:::i;:::-;3390:66;;3320:142;;;:::o;3468:126::-;3518:9;3551:37;3582:5;3551:37;:::i;:::-;3538:50;;3468:126;;;:::o;3600:152::-;3676:9;3709:37;3740:5;3709:37;:::i;:::-;3696:50;;3600:152;;;:::o;3758:183::-;3871:63;3928:5;3871:63;:::i;:::-;3866:3;3859:76;3758:183;;:::o;3947:274::-;4066:4;4104:2;4093:9;4089:18;4081:26;;4117:97;4211:1;4200:9;4196:17;4187:6;4117:97;:::i;:::-;3947:274;;;;:::o;4227:117::-;4336:1;4333;4326:12;4350:102;4391:6;4442:2;4438:7;4433:2;4426:5;4422:14;4418:28;4408:38;;4350:102;;;:::o;4458:180::-;4506:77;4503:1;4496:88;4603:4;4600:1;4593:15;4627:4;4624:1;4617:15;4644:281;4727:27;4749:4;4727:27;:::i;:::-;4719:6;4715:40;4857:6;4845:10;4842:22;4821:18;4809:10;4806:34;4803:62;4800:88;;;4868:18;;:::i;:::-;4800:88;4908:10;4904:2;4897:22;4687:238;4644:281;;:::o;4931:129::-;4965:6;4992:20;;:::i;:::-;4982:30;;5021:33;5049:4;5041:6;5021:33;:::i;:::-;4931:129;;;:::o;5066:117::-;5175:1;5172;5165:12;5189:117;5298:1;5295;5288:12;5312:117;5421:1;5418;5411:12;5435:307;5496:4;5586:18;5578:6;5575:30;5572:56;;;5608:18;;:::i;:::-;5572:56;5646:29;5668:6;5646:29;:::i;:::-;5638:37;;5730:4;5724;5720:15;5712:23;;5435:307;;;:::o;5748:146::-;5845:6;5840:3;5835;5822:30;5886:1;5877:6;5872:3;5868:16;5861:27;5748:146;;;:::o;5900:423::-;5977:5;6002:65;6018:48;6059:6;6018:48;:::i;:::-;6002:65;:::i;:::-;5993:74;;6090:6;6083:5;6076:21;6128:4;6121:5;6117:16;6166:3;6157:6;6152:3;6148:16;6145:25;6142:112;;;6173:79;;:::i;:::-;6142:112;6263:54;6310:6;6305:3;6300;6263:54;:::i;:::-;5983:340;5900:423;;;;;:::o;6342:338::-;6397:5;6446:3;6439:4;6431:6;6427:17;6423:27;6413:122;;6454:79;;:::i;:::-;6413:122;6571:6;6558:20;6596:78;6670:3;6662:6;6655:4;6647:6;6643:17;6596:78;:::i;:::-;6587:87;;6403:277;6342:338;;;;:::o;6730:1268::-;6811:5;6855:4;6843:9;6838:3;6834:19;6830:30;6827:117;;;6863:79;;:::i;:::-;6827:117;6962:21;6978:4;6962:21;:::i;:::-;6953:30;;7048:1;7088:49;7133:3;7124:6;7113:9;7109:22;7088:49;:::i;:::-;7081:4;7074:5;7070:16;7063:75;6993:156;7213:2;7254:49;7299:3;7290:6;7279:9;7275:22;7254:49;:::i;:::-;7247:4;7240:5;7236:16;7229:75;7159:156;7379:2;7420:49;7465:3;7456:6;7445:9;7441:22;7420:49;:::i;:::-;7413:4;7406:5;7402:16;7395:75;7325:156;7553:2;7594:49;7639:3;7630:6;7619:9;7615:22;7594:49;:::i;:::-;7587:4;7580:5;7576:16;7569:75;7491:164;7747:3;7736:9;7732:19;7719:33;7779:18;7771:6;7768:30;7765:117;;;7801:79;;:::i;:::-;7765:117;7921:58;7975:3;7966:6;7955:9;7951:22;7921:58;:::i;:::-;7914:4;7907:5;7903:16;7896:84;7665:326;6730:1268;;;;:::o;8004:553::-;8095:6;8144:2;8132:9;8123:7;8119:23;8115:32;8112:119;;;8150:79;;:::i;:::-;8112:119;8298:1;8287:9;8283:17;8270:31;8328:18;8320:6;8317:30;8314:117;;;8350:79;;:::i;:::-;8314:117;8455:85;8532:7;8523:6;8512:9;8508:22;8455:85;:::i;:::-;8445:95;;8241:309;8004:553;;;;:::o;8563:308::-;8625:4;8715:18;8707:6;8704:30;8701:56;;;8737:18;;:::i;:::-;8701:56;8775:29;8797:6;8775:29;:::i;:::-;8767:37;;8859:4;8853;8849:15;8841:23;;8563:308;;;:::o;8877:425::-;8955:5;8980:66;8996:49;9038:6;8996:49;:::i;:::-;8980:66;:::i;:::-;8971:75;;9069:6;9062:5;9055:21;9107:4;9100:5;9096:16;9145:3;9136:6;9131:3;9127:16;9124:25;9121:112;;;9152:79;;:::i;:::-;9121:112;9242:54;9289:6;9284:3;9279;9242:54;:::i;:::-;8961:341;8877:425;;;;;:::o;9322:340::-;9378:5;9427:3;9420:4;9412:6;9408:17;9404:27;9394:122;;9435:79;;:::i;:::-;9394:122;9552:6;9539:20;9577:79;9652:3;9644:6;9637:4;9629:6;9625:17;9577:79;:::i;:::-;9568:88;;9384:278;9322:340;;;;:::o;9668:509::-;9737:6;9786:2;9774:9;9765:7;9761:23;9757:32;9754:119;;;9792:79;;:::i;:::-;9754:119;9940:1;9929:9;9925:17;9912:31;9970:18;9962:6;9959:30;9956:117;;;9992:79;;:::i;:::-;9956:117;10097:63;10152:7;10143:6;10132:9;10128:22;10097:63;:::i;:::-;10087:73;;9883:287;9668:509;;;;:::o;10183:96::-;10220:7;10249:24;10267:5;10249:24;:::i;:::-;10238:35;;10183:96;;;:::o;10285:118::-;10372:24;10390:5;10372:24;:::i;:::-;10367:3;10360:37;10285:118;;:::o;10409:222::-;10502:4;10540:2;10529:9;10525:18;10517:26;;10553:71;10621:1;10610:9;10606:17;10597:6;10553:71;:::i;:::-;10409:222;;;;:::o;10637:329::-;10696:6;10745:2;10733:9;10724:7;10720:23;10716:32;10713:119;;;10751:79;;:::i;:::-;10713:119;10871:1;10896:53;10941:7;10932:6;10921:9;10917:22;10896:53;:::i;:::-;10886:63;;10842:117;10637:329;;;;:::o;10972:99::-;11024:6;11058:5;11052:12;11042:22;;10972:99;;;:::o;11077:169::-;11161:11;11195:6;11190:3;11183:19;11235:4;11230:3;11226:14;11211:29;;11077:169;;;;:::o;11252:246::-;11333:1;11343:113;11357:6;11354:1;11351:13;11343:113;;;11442:1;11437:3;11433:11;11427:18;11423:1;11418:3;11414:11;11407:39;11379:2;11376:1;11372:10;11367:15;;11343:113;;;11490:1;11481:6;11476:3;11472:16;11465:27;11314:184;11252:246;;;:::o;11504:377::-;11592:3;11620:39;11653:5;11620:39;:::i;:::-;11675:71;11739:6;11734:3;11675:71;:::i;:::-;11668:78;;11755:65;11813:6;11808:3;11801:4;11794:5;11790:16;11755:65;:::i;:::-;11845:29;11867:6;11845:29;:::i;:::-;11840:3;11836:39;11829:46;;11596:285;11504:377;;;;:::o;11887:313::-;12000:4;12038:2;12027:9;12023:18;12015:26;;12087:9;12081:4;12077:20;12073:1;12062:9;12058:17;12051:47;12115:78;12188:4;12179:6;12115:78;:::i;:::-;12107:86;;11887:313;;;;:::o;12206:118::-;12293:24;12311:5;12293:24;:::i;:::-;12288:3;12281:37;12206:118;;:::o;12330:222::-;12423:4;12461:2;12450:9;12446:18;12438:26;;12474:71;12542:1;12531:9;12527:17;12518:6;12474:71;:::i;:::-;12330:222;;;;:::o;12558:329::-;12617:6;12666:2;12654:9;12645:7;12641:23;12637:32;12634:119;;;12672:79;;:::i;:::-;12634:119;12792:1;12817:53;12862:7;12853:6;12842:9;12838:22;12817:53;:::i;:::-;12807:63;;12763:117;12558:329;;;;:::o;12893:118::-;12980:24;12998:5;12980:24;:::i;:::-;12975:3;12968:37;12893:118;;:::o;13017:222::-;13110:4;13148:2;13137:9;13133:18;13125:26;;13161:71;13229:1;13218:9;13214:17;13205:6;13161:71;:::i;:::-;13017:222;;;;:::o;13245:180::-;13293:77;13290:1;13283:88;13390:4;13387:1;13380:15;13414:4;13411:1;13404:15;13431:320;13475:6;13512:1;13506:4;13502:12;13492:22;;13559:1;13553:4;13549:12;13580:18;13570:81;;13636:4;13628:6;13624:17;13614:27;;13570:81;13698:2;13690:6;13687:14;13667:18;13664:38;13661:84;;13717:18;;:::i;:::-;13661:84;13482:269;13431:320;;;:::o;13757:251::-;13897:34;13893:1;13885:6;13881:14;13874:58;13966:34;13961:2;13953:6;13949:15;13942:59;13757:251;:::o;14014:366::-;14156:3;14177:67;14241:2;14236:3;14177:67;:::i;:::-;14170:74;;14253:93;14342:3;14253:93;:::i;:::-;14371:2;14366:3;14362:12;14355:19;;14014:366;;;:::o;14386:419::-;14552:4;14590:2;14579:9;14575:18;14567:26;;14639:9;14633:4;14629:20;14625:1;14614:9;14610:17;14603:47;14667:131;14793:4;14667:131;:::i;:::-;14659:139;;14386:419;;;:::o;14811:122::-;14884:24;14902:5;14884:24;:::i;:::-;14877:5;14874:35;14864:63;;14923:1;14920;14913:12;14864:63;14811:122;:::o;14939:143::-;14996:5;15027:6;15021:13;15012:22;;15043:33;15070:5;15043:33;:::i;:::-;14939:143;;;;:::o;15088:351::-;15158:6;15207:2;15195:9;15186:7;15182:23;15178:32;15175:119;;;15213:79;;:::i;:::-;15175:119;15333:1;15358:64;15414:7;15405:6;15394:9;15390:22;15358:64;:::i;:::-;15348:74;;15304:128;15088:351;;;;:::o;15445:170::-;15585:22;15581:1;15573:6;15569:14;15562:46;15445:170;:::o;15621:366::-;15763:3;15784:67;15848:2;15843:3;15784:67;:::i;:::-;15777:74;;15860:93;15949:3;15860:93;:::i;:::-;15978:2;15973:3;15969:12;15962:19;;15621:366;;;:::o;15993:419::-;16159:4;16197:2;16186:9;16182:18;16174:26;;16246:9;16240:4;16236:20;16232:1;16221:9;16217:17;16210:47;16274:131;16400:4;16274:131;:::i;:::-;16266:139;;15993:419;;;:::o;16418:180::-;16466:77;16463:1;16456:88;16563:4;16560:1;16553:15;16587:4;16584:1;16577:15;16604:95;16640:7;16680:12;16673:5;16669:24;16658:35;;16604:95;;;:::o;16705:177::-;16743:3;16766:23;16783:5;16766:23;:::i;:::-;16757:32;;16811:12;16804:5;16801:23;16798:49;;16827:18;;:::i;:::-;16798:49;16874:1;16867:5;16863:13;16856:20;;16705:177;;;:::o;16888:98::-;16939:6;16973:5;16967:12;16957:22;;16888:98;;;:::o;16992:168::-;17075:11;17109:6;17104:3;17097:19;17149:4;17144:3;17140:14;17125:29;;16992:168;;;;:::o;17166:373::-;17252:3;17280:38;17312:5;17280:38;:::i;:::-;17334:70;17397:6;17392:3;17334:70;:::i;:::-;17327:77;;17413:65;17471:6;17466:3;17459:4;17452:5;17448:16;17413:65;:::i;:::-;17503:29;17525:6;17503:29;:::i;:::-;17498:3;17494:39;17487:46;;17256:283;17166:373;;;;:::o;17545:640::-;17740:4;17778:3;17767:9;17763:19;17755:27;;17792:71;17860:1;17849:9;17845:17;17836:6;17792:71;:::i;:::-;17873:72;17941:2;17930:9;17926:18;17917:6;17873:72;:::i;:::-;17955;18023:2;18012:9;18008:18;17999:6;17955:72;:::i;:::-;18074:9;18068:4;18064:20;18059:2;18048:9;18044:18;18037:48;18102:76;18173:4;18164:6;18102:76;:::i;:::-;18094:84;;17545:640;;;;;;;:::o"},"methodIdentifiers":{"deleteElementsAfterInclusive(uint256)":"4651d91e","deleteElementsAfterInclusive(uint256,bytes27)":"167fd681","get(uint256)":"9507d39a","getGlobalMetadata()":"ccf8f969","length()":"1f7b6d32","libAddressManager()":"299ca478","owner()":"8da5cb5b","push(bytes32)":"b298e36b","push(bytes32,bytes27)":"2015276c","resolve(string)":"461a4478","setGlobalMetadata(bytes27)":"29061de2","setSavedHash((uint256,bytes32,uint256,uint256,bytes))":"3d160572"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_libAddressManager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_owner\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bytes27\",\"name\":\"_globalMetadata\",\"type\":\"bytes27\"}],\"name\":\"deleteElementsAfterInclusive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"deleteElementsAfterInclusive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGlobalMetadata\",\"outputs\":[{\"internalType\":\"bytes27\",\"name\":\"\",\"type\":\"bytes27\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"libAddressManager\",\"outputs\":[{\"internalType\":\"contract Lib_AddressManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_object\",\"type\":\"bytes32\"},{\"internalType\":\"bytes27\",\"name\":\"_globalMetadata\",\"type\":\"bytes27\"}],\"name\":\"push\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_object\",\"type\":\"bytes32\"}],\"name\":\"push\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"resolve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes27\",\"name\":\"_globalMetadata\",\"type\":\"bytes27\"}],\"name\":\"setGlobalMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct Lib_OVMCodec.ChainBatchHeader\",\"name\":\"_batchHeader\",\"type\":\"tuple\"}],\"name\":\"setSavedHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_libAddressManager\":\"Address of the Address Manager.\",\"_owner\":\"Name of the contract that owns this container (will be resolved later).\"}},\"deleteElementsAfterInclusive(uint256)\":{\"params\":{\"_index\":\"Object index to delete from.\"}},\"deleteElementsAfterInclusive(uint256,bytes27)\":{\"params\":{\"_globalMetadata\":\"New global metadata for the container.\",\"_index\":\"Object index to delete from.\"}},\"get(uint256)\":{\"params\":{\"_index\":\"Index of the particular object to access.\"},\"returns\":{\"_0\":\"32 byte object value.\"}},\"getGlobalMetadata()\":{\"returns\":{\"_0\":\"Container global metadata field.\"}},\"length()\":{\"returns\":{\"_0\":\"Number of objects in the container.\"}},\"push(bytes32)\":{\"params\":{\"_object\":\"A 32 byte value to insert into the container.\"}},\"push(bytes32,bytes27)\":{\"params\":{\"_globalMetadata\":\"New global metadata for the container.\",\"_object\":\"A 32 byte value to insert into the container.\"}},\"resolve(string)\":{\"params\":{\"_name\":\"Name to resolve an address for.\"},\"returns\":{\"_0\":\"Address associated with the given name.\"}},\"setGlobalMetadata(bytes27)\":{\"params\":{\"_globalMetadata\":\"New global metadata to set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deleteElementsAfterInclusive(uint256)\":{\"notice\":\"Removes all objects after and including a given index.\"},\"deleteElementsAfterInclusive(uint256,bytes27)\":{\"notice\":\"Removes all objects after and including a given index. Also allows setting the global metadata field.\"},\"get(uint256)\":{\"notice\":\"Retrieves an object from the container.\"},\"getGlobalMetadata()\":{\"notice\":\"Retrieves the container's global metadata field.\"},\"length()\":{\"notice\":\"Retrieves the number of objects stored in the container.\"},\"push(bytes32)\":{\"notice\":\"Pushes an object into the container.\"},\"push(bytes32,bytes27)\":{\"notice\":\"Pushes an object into the container. Function allows setting the global metadata since we'll need to touch the \\\"length\\\" storage slot anyway, which also contains the global metadata (it's an optimization).\"},\"resolve(string)\":{\"notice\":\"Resolves the address associated with a given name.\"},\"setGlobalMetadata(bytes27)\":{\"notice\":\"Sets the container's global metadata field. We're using `bytes27` here because we use five bytes to maintain the length of the underlying data structure, meaning we have an extra 27 bytes to store arbitrary data.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/HelperChainStorageContainer.sol\":\"HelperChainStorageContainer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@eth-optimism/contracts/L1/rollup/IChainStorageContainer.sol\":{\"keccak256\":\"0xe55ad72572ec47dc09a02228d0c5a438571c76a41d16d92b35add057811977ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fbaa5e33249a772f1e1f40065f5346a85a2a019b5fbefd24be600e1a6547992\",\"dweb:/ipfs/Qmf92XDpqVFukyZcXiXGNkexNMYJYCVYkySo1SZBbcx7PX\"]},\"@eth-optimism/contracts/libraries/codec/Lib_OVMCodec.sol\":{\"keccak256\":\"0xb5009ac1e0617e0b3b2fb917f08f8e8a7ae706034cc3a675258bc3d91978525e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://776f8407a5c3bcd0991801a922ea69a9665b14e85e6ac925ef9ec5dc5d0de87c\",\"dweb:/ipfs/QmRE5yQd69rDDmPPo2TcFDoCzXtbodHgicQNoXiRCTsBJb\"]},\"@eth-optimism/contracts/libraries/resolver/Lib_AddressManager.sol\":{\"keccak256\":\"0xcde9b29429d512c549f7c1b8a033f161fa71c18cda08b241748663854196ae14\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fbd748ce0173bd14166174c68a43e108ec27d8f90cf3dc3703cda120b641e0b\",\"dweb:/ipfs/QmT818AKJieRAndixSms9L7gmC7b1cvD4BGycUPtFpbWaM\"]},\"@eth-optimism/contracts/libraries/resolver/Lib_AddressResolver.sol\":{\"keccak256\":\"0x515c4db671a28e2fe180201f6d11c0208c05f582ca3489fb6b8e81c27659bc62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c92c08efa7be210e9447267517c77ca39372b5bd33d121539ef1f59fac149fa\",\"dweb:/ipfs/QmZ8V2Kaw7XqGhCCe2CAPMCPkHgcMGr92enXfXqGpBYw23\"]},\"@eth-optimism/contracts/libraries/rlp/Lib_RLPReader.sol\":{\"keccak256\":\"0xd794d1b32c6e31d40e2526b5e519de1b4e8d14d6933889f9b916e69c5d1848c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76a6d82cce64bf143f77249c49de3d93687a2b3e69b020f2f74fad503806b52b\",\"dweb:/ipfs/QmUHF33h4Tn4Q4cVHwk82eMMer8YTDTk1u3e4MCfrSYt3J\"]},\"@eth-optimism/contracts/libraries/rlp/Lib_RLPWriter.sol\":{\"keccak256\":\"0x215b90672ce126effc3f2df61ca0cdf52d2b1cc9be602877e637829b0bf229fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7418707a22a792e838759becfa4ceb60774171a0a219cdd39452351225ec31a6\",\"dweb:/ipfs/QmZWxL4DNv8EVZoJbLSf4euzQwhzyRduSia5cVFJo4Bxh2\"]},\"@eth-optimism/contracts/libraries/utils/Lib_Buffer.sol\":{\"keccak256\":\"0x38917b618db448e356c76c999ce9aaca094541eb1f9bc65b06b8d4d84308f056\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06bfafb4235e56fd6371939e90b4b6cbb4ccbe18ff0bc8af5fa457ec111d4bc5\",\"dweb:/ipfs/QmTsjSFRLdpRfGhLGLR7QghrSbkHpYN4qHaMGYzWyznYYS\"]},\"@eth-optimism/contracts/libraries/utils/Lib_Bytes32Utils.sol\":{\"keccak256\":\"0xf2d1a526f2529e51fc2fffccf093c1691e291cbbb6de8a3da7d7f80024a9a234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3e0ff635f68c17f1b1a9b094a9da670dd1170241e67d8e87b00be2157f28ad6\",\"dweb:/ipfs/QmS9fK2TZ123NE2iXAbUxfaasSPGbui5EG6HP9uz6gveiN\"]},\"@eth-optimism/contracts/libraries/utils/Lib_BytesUtils.sol\":{\"keccak256\":\"0xc39ee13f97e4ccfbc72a5aac571deb3c1aff882fca2dd18be794d43ac5de0a30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c5761b5cf7287ac94404f54481d88ee0122bc031f1c2e0b4b2cc4c384e1b018\",\"dweb:/ipfs/QmbBTssPvH5ABa3e8MNRoHMkGGaoRXqneWhJzrDx7FsD1R\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/HelperChainStorageContainer.sol\":{\"keccak256\":\"0x926189133d1a846e11c19137536bf3f6f381f4302abb9bc66638fad1ed0b6b00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c221241360d90a91ce0c392de6db756841720be4ed7b0f7d3f1068c4a543397b\",\"dweb:/ipfs/QmVVWRPDTcXSCCk7VHD6y82bY6XB9nqyvJBm4YLUaT5LVA\"]}},\"version\":1}"}},"contracts/messaging/connectors/Connector.sol":{"Connector":{"abi":[{"inputs":[],"name":"Connector__processMessage_notUsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previous","type":"address"},{"indexed":false,"internalType":"address","name":"current","type":"address"}],"name":"MirrorConnectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"mirrorDomain","type":"uint32"},{"indexed":false,"internalType":"address","name":"amb","type":"address"},{"indexed":false,"internalType":"address","name":"rootManager","type":"address"},{"indexed":false,"internalType":"address","name":"mirrorConnector","type":"address"}],"name":"NewConnector","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"AMB","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIRROR_DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mirrorConnector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_mirrorConnector","type":"address"}],"name":"setMirrorConnector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"AMB()":"d69f9d61","DOMAIN()":"52a9674b","MIRROR_DOMAIN()":"14168416","ROOT_MANAGER()":"5f61e3ec","acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","mirrorConnector()":"cc394283","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","setMirrorConnector(address)":"5bd11efc","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Connector__processMessage_notUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"MirrorConnectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"mirrorDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"amb\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rootManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mirrorConnector\",\"type\":\"address\"}],\"name\":\"NewConnector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIRROR_DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mirrorConnector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"}],\"name\":\"setMirrorConnector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Connext Labs, Inc.\",\"details\":\"This contract stores information about mirror connectors, but can be used as a base for contracts that do not have a mirror (i.e. the connector handling messaging on mainnet). In this case, the `mirrorConnector` and `MIRROR_DOMAIN` will be emptyIf ownership is renounced, this contract will be unable to update its `mirrorConnector` or `mirrorGas`\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The connectors are deployed such that there is one on each side of an AMB (i.e. for optimism, there is one connector on optimism and one connector on mainnet)\",\"params\":{\"_amb\":\"The address of the amb on the domain this connector lives on\",\"_domain\":\"The domain this connector lives on\",\"_mirrorConnector\":\"The address of the spoke connector\",\"_mirrorDomain\":\"The spoke domain\",\"_rootManager\":\"The address of the RootManager on mainnet\"}},\"processMessage(bytes)\":{\"details\":\"This is called by AMBs to process messages originating from mirror connector\"}},\"title\":\"Connector\",\"version\":1},\"userdoc\":{\"events\":{\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"AMB()\":{\"notice\":\"Address of the AMB on this domain.\"},\"DOMAIN()\":{\"notice\":\"The domain of this Messaging (i.e. Connector) contract.\"},\"MIRROR_DOMAIN()\":{\"notice\":\"The domain of the corresponding messaging (i.e. Connector) contract.\"},\"ROOT_MANAGER()\":{\"notice\":\"RootManager contract address.\"},\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"constructor\":{\"notice\":\"Creates a new HubConnector instance\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"mirrorConnector()\":{\"notice\":\"Connector on L2 for L1 connectors, and vice versa.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"processMessage(bytes)\":{\"notice\":\"Processes a message received by an AMB\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"},\"setMirrorConnector(address)\":{\"notice\":\"Sets the address of the l2Connector for this domain\"},\"verifySender(address)\":{\"notice\":\"Checks the cross domain sender for a given address\"}},\"notice\":\"This contract has the messaging interface functions used by all connectors.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/Connector.sol\":\"Connector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/Connector.sol\":{\"keccak256\":\"0x08d4077a1b5caf9f46491206064bb24bee467dd741b42fed3d30a608eea83368\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://457a269ab150779b4605bc9612676076152857069beb0428d62f44408ac84be4\",\"dweb:/ipfs/QmeSkwvuyUEqUnQgtJe9kr9B7ukRG2zGeKDJ9Xe7JJMbNr\"]},\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/GasCap.sol":{"GasCap":{"abi":[{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_previous","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_updated","type":"uint256"}],"name":"GasCapUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"name":"setGasCap","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","setGasCap(uint256)":"7850b020"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updated\",\"type\":\"uint256\"}],\"name\":\"GasCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"name\":\"setGasCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"params\":{\"_previous\":\"The starting value\",\"_updated\":\"The final value\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"notice\":\"Emitted when admin updates the gas cap\"}},\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/GasCap.sol\":\"GasCap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/GasCap.sol\":{\"keccak256\":\"0xb8b52a3372f08490c918d1f490ad80764d54bd62d1638e4d17a5b552efe6587d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6bb20af8d934307c6fa183bc20e11bad0767174a3a305013d2a61d71443f47a5\",\"dweb:/ipfs/QmQMDihNR1ZLK1jX4Ev5NZttBoYhah8ZaZxGZdREZaWEkK\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/HubConnector.sol":{"HubConnector":{"abi":[{"inputs":[],"name":"Connector__processMessage_notUsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previous","type":"address"},{"indexed":false,"internalType":"address","name":"current","type":"address"}],"name":"MirrorConnectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"mirrorDomain","type":"uint32"},{"indexed":false,"internalType":"address","name":"amb","type":"address"},{"indexed":false,"internalType":"address","name":"rootManager","type":"address"},{"indexed":false,"internalType":"address","name":"mirrorConnector","type":"address"}],"name":"NewConnector","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"AMB","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIRROR_DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mirrorConnector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_encodedData","type":"bytes"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_mirrorConnector","type":"address"}],"name":"setMirrorConnector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"AMB()":"d69f9d61","DOMAIN()":"52a9674b","MIRROR_DOMAIN()":"14168416","ROOT_MANAGER()":"5f61e3ec","acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","mirrorConnector()":"cc394283","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","sendMessage(bytes,bytes)":"48e6fa23","setMirrorConnector(address)":"5bd11efc","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Connector__processMessage_notUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"MirrorConnectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"mirrorDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"amb\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rootManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mirrorConnector\",\"type\":\"address\"}],\"name\":\"NewConnector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIRROR_DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mirrorConnector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_encodedData\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"}],\"name\":\"setMirrorConnector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Connext Labs, Inc.\",\"details\":\"This contract should be deployed on the hub-side of an AMB (i.e. on L1), and contracts which extend this should implement the virtual functions defined in the BaseConnector class\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The connectors are deployed such that there is one on each side of an AMB (i.e. for optimism, there is one connector on optimism and one connector on mainnet)\",\"params\":{\"_amb\":\"The address of the amb on the domain this connector lives on\",\"_domain\":\"The domain this connector lives on\",\"_mirrorConnector\":\"The address of the spoke connector\",\"_mirrorDomain\":\"The spoke domain\",\"_rootManager\":\"The address of the RootManager on mainnet\"}},\"processMessage(bytes)\":{\"details\":\"This is called by AMBs to process messages originating from mirror connector\"},\"sendMessage(bytes,bytes)\":{\"details\":\"This is called by the root manager *only* on mainnet to propagate the aggregate root\"}},\"title\":\"HubConnector\",\"version\":1},\"userdoc\":{\"events\":{\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"AMB()\":{\"notice\":\"Address of the AMB on this domain.\"},\"DOMAIN()\":{\"notice\":\"The domain of this Messaging (i.e. Connector) contract.\"},\"MIRROR_DOMAIN()\":{\"notice\":\"The domain of the corresponding messaging (i.e. Connector) contract.\"},\"ROOT_MANAGER()\":{\"notice\":\"RootManager contract address.\"},\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"constructor\":{\"notice\":\"Creates a new HubConnector instance\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"mirrorConnector()\":{\"notice\":\"Connector on L2 for L1 connectors, and vice versa.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"processMessage(bytes)\":{\"notice\":\"Processes a message received by an AMB\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"},\"sendMessage(bytes,bytes)\":{\"notice\":\"Sends a message over the amb\"},\"setMirrorConnector(address)\":{\"notice\":\"Sets the address of the l2Connector for this domain\"},\"verifySender(address)\":{\"notice\":\"Checks the cross domain sender for a given address\"}},\"notice\":\"This contract implements the messaging functions needed on the hub-side of a given AMB. The HubConnector has a limited set of functionality compared to the SpokeConnector, namely that it contains no logic to store or prove messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/HubConnector.sol\":\"HubConnector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/Connector.sol\":{\"keccak256\":\"0x08d4077a1b5caf9f46491206064bb24bee467dd741b42fed3d30a608eea83368\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://457a269ab150779b4605bc9612676076152857069beb0428d62f44408ac84be4\",\"dweb:/ipfs/QmeSkwvuyUEqUnQgtJe9kr9B7ukRG2zGeKDJ9Xe7JJMbNr\"]},\"contracts/messaging/connectors/HubConnector.sol\":{\"keccak256\":\"0xc35621419ca872ed0550b0943a577b39942f3d2c9b54de008fee382d5ad290e4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b999c13a2d438bb5cb81a3e4e308e8fa0c1c7f3505ac48415552e6df66cafa78\",\"dweb:/ipfs/QmSY4h4sQCXgxbmJp6msrmm9KsHZHeLBg8NrHzWsD2dMiq\"]},\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/BaseOptimism.sol":{"BaseOptimism":{"abi":[{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_previous","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_updated","type":"uint256"}],"name":"GasCapUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"name":"setGasCap","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","setGasCap(uint256)":"7850b020"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updated\",\"type\":\"uint256\"}],\"name\":\"GasCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"name\":\"setGasCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"notice\":\"Emitted when admin updates the gas cap\"}},\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/BaseOptimism.sol\":\"BaseOptimism\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/GasCap.sol\":{\"keccak256\":\"0xb8b52a3372f08490c918d1f490ad80764d54bd62d1638e4d17a5b552efe6587d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6bb20af8d934307c6fa183bc20e11bad0767174a3a305013d2a61d71443f47a5\",\"dweb:/ipfs/QmQMDihNR1ZLK1jX4Ev5NZttBoYhah8ZaZxGZdREZaWEkK\"]},\"contracts/messaging/connectors/optimism/BaseOptimism.sol\":{\"keccak256\":\"0x87034df88ba7e4d767c451ff2d0180f8eee25f502682153af7a018e280eab8e3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3e8e4944ea00bc2f6276ec6d6cb8329c85b42cb44b3ece45ebec35d16d37676f\",\"dweb:/ipfs/QmV1uDysbrcXKUWHbVZT36YE5tSR6NjvbSdsHfnNFj7Hj3\"]},\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":{\"keccak256\":\"0xbce6aaa568441bd8ad60f2b5f1ad8d9e3c61cbc91ce4405d7a390980920f66f3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7cdea925bfc43e25eab526074b1b5454b0a44676e88cb7834707e8b273aff820\",\"dweb:/ipfs/Qmd2WyxCPaguNGKfm7sNxfQgxEU8o7vvR6Fe4pK7GZoUUe\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/OptimismHubConnector.sol":{"OptimismHubConnector":{"abi":[{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"},{"internalType":"uint32","name":"_mirrorDomain","type":"uint32"},{"internalType":"address","name":"_amb","type":"address"},{"internalType":"address","name":"_rootManager","type":"address"},{"internalType":"address","name":"_mirrorConnector","type":"address"},{"internalType":"address","name":"_stateCommitmentChain","type":"address"},{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Connector__processMessage_notUsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"inputs":[],"name":"TypedMemView__index_indexMoreThan32Bytes","type":"error"},{"inputs":[{"internalType":"uint256","name":"loc","type":"uint256"},{"internalType":"uint256","name":"len","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"slice","type":"uint256"}],"name":"TypedMemView__index_overrun","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_previous","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_updated","type":"uint256"}],"name":"GasCapUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previous","type":"address"},{"indexed":false,"internalType":"address","name":"current","type":"address"}],"name":"MirrorConnectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"mirrorDomain","type":"uint32"},{"indexed":false,"internalType":"address","name":"amb","type":"address"},{"indexed":false,"internalType":"address","name":"rootManager","type":"address"},{"indexed":false,"internalType":"address","name":"mirrorConnector","type":"address"}],"name":"NewConnector","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"AMB","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIRROR_DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mirrorConnector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint256","name":"_messageNonce","type":"uint256"},{"components":[{"internalType":"bytes32","name":"stateRoot","type":"bytes32"},{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"stateRootBatchHeader","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"siblings","type":"bytes32[]"}],"internalType":"struct ChainInclusionProof","name":"stateRootProof","type":"tuple"},{"internalType":"bytes","name":"stateTrieWitness","type":"bytes"},{"internalType":"bytes","name":"storageTrieWitness","type":"bytes"}],"internalType":"struct L2MessageInclusionProof","name":"_proof","type":"tuple"}],"name":"processMessageFromRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"processed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_encodedData","type":"bytes"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"name":"setGasCap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_mirrorConnector","type":"address"}],"name":"setMirrorConnector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stateCommitmentChain","outputs":[{"internalType":"contract IStateCommitmentChain","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_2749":{"entryPoint":null,"id":2749,"parameterSlots":5,"returnSlots":0},"@_2867":{"entryPoint":null,"id":2867,"parameterSlots":1,"returnSlots":0},"@_2945":{"entryPoint":null,"id":2945,"parameterSlots":5,"returnSlots":0},"@_2986":{"entryPoint":null,"id":2986,"parameterSlots":1,"returnSlots":0},"@_3116":{"entryPoint":null,"id":3116,"parameterSlots":7,"returnSlots":0},"@_setGasCap_2895":{"entryPoint":1053,"id":2895,"parameterSlots":1,"returnSlots":0},"@_setMirrorConnector_2840":{"entryPoint":892,"id":2840,"parameterSlots":1,"returnSlots":0},"@_setOwner_5695":{"entryPoint":660,"id":5695,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_uint32t_addresst_addresst_addresst_addresst_uint256_fromMemory":{"entryPoint":1354,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1778,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack":{"entryPoint":1705,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack":{"entryPoint":1591,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":1856,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":1795,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":1918,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1533,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1226,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1194,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1295,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1129,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1124,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1":{"entryPoint":1664,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04":{"entryPoint":1550,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1246,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1305,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6349:30","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:30","statements":[{"nodeType":"YulAssignment","src":"57:19:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:30"},"nodeType":"YulFunctionCall","src":"67:9:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:30"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:30","type":""}],"src":"7:75:30"},{"body":{"nodeType":"YulBlock","src":"177:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:30"},"nodeType":"YulFunctionCall","src":"187:12:30"},"nodeType":"YulExpressionStatement","src":"187:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:30"},{"body":{"nodeType":"YulBlock","src":"300:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:30"},"nodeType":"YulFunctionCall","src":"310:12:30"},"nodeType":"YulExpressionStatement","src":"310:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:30"},{"body":{"nodeType":"YulBlock","src":"378:49:30","statements":[{"nodeType":"YulAssignment","src":"388:33:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:30","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:30"},"nodeType":"YulFunctionCall","src":"399:22:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:30"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:30","type":""}],"src":"334:93:30"},{"body":{"nodeType":"YulBlock","src":"475:78:30","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:30"},"nodeType":"YulFunctionCall","src":"533:12:30"},"nodeType":"YulExpressionStatement","src":"533:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:30"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:30"},"nodeType":"YulFunctionCall","src":"505:23:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:30"},"nodeType":"YulFunctionCall","src":"495:34:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:30"},"nodeType":"YulFunctionCall","src":"488:42:30"},"nodeType":"YulIf","src":"485:62:30"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:30","type":""}],"src":"433:120:30"},{"body":{"nodeType":"YulBlock","src":"621:79:30","statements":[{"nodeType":"YulAssignment","src":"631:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"646:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"640:5:30"},"nodeType":"YulFunctionCall","src":"640:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"631:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:30"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"662:25:30"},"nodeType":"YulFunctionCall","src":"662:32:30"},"nodeType":"YulExpressionStatement","src":"662:32:30"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"599:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"607:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"615:5:30","type":""}],"src":"559:141:30"},{"body":{"nodeType":"YulBlock","src":"751:81:30","statements":[{"nodeType":"YulAssignment","src":"761:65:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"776:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"783:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"772:3:30"},"nodeType":"YulFunctionCall","src":"772:54:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"761:7:30"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"733:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"743:7:30","type":""}],"src":"706:126:30"},{"body":{"nodeType":"YulBlock","src":"883:51:30","statements":[{"nodeType":"YulAssignment","src":"893:35:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"904:17:30"},"nodeType":"YulFunctionCall","src":"904:24:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"893:7:30"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"865:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"875:7:30","type":""}],"src":"838:96:30"},{"body":{"nodeType":"YulBlock","src":"983:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"1040:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1049:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1052:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1042:6:30"},"nodeType":"YulFunctionCall","src":"1042:12:30"},"nodeType":"YulExpressionStatement","src":"1042:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1006:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1031:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1013:17:30"},"nodeType":"YulFunctionCall","src":"1013:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1003:2:30"},"nodeType":"YulFunctionCall","src":"1003:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"996:6:30"},"nodeType":"YulFunctionCall","src":"996:43:30"},"nodeType":"YulIf","src":"993:63:30"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"976:5:30","type":""}],"src":"940:122:30"},{"body":{"nodeType":"YulBlock","src":"1131:80:30","statements":[{"nodeType":"YulAssignment","src":"1141:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1156:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1150:5:30"},"nodeType":"YulFunctionCall","src":"1150:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1141:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1199:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1172:26:30"},"nodeType":"YulFunctionCall","src":"1172:33:30"},"nodeType":"YulExpressionStatement","src":"1172:33:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"1117:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1125:5:30","type":""}],"src":"1068:143:30"},{"body":{"nodeType":"YulBlock","src":"1262:32:30","statements":[{"nodeType":"YulAssignment","src":"1272:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"1283:5:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1272:7:30"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1244:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1254:7:30","type":""}],"src":"1217:77:30"},{"body":{"nodeType":"YulBlock","src":"1343:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"1400:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1409:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1412:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1402:6:30"},"nodeType":"YulFunctionCall","src":"1402:12:30"},"nodeType":"YulExpressionStatement","src":"1402:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1366:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1391:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1373:17:30"},"nodeType":"YulFunctionCall","src":"1373:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1363:2:30"},"nodeType":"YulFunctionCall","src":"1363:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1356:6:30"},"nodeType":"YulFunctionCall","src":"1356:43:30"},"nodeType":"YulIf","src":"1353:63:30"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1336:5:30","type":""}],"src":"1300:122:30"},{"body":{"nodeType":"YulBlock","src":"1491:80:30","statements":[{"nodeType":"YulAssignment","src":"1501:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1516:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1510:5:30"},"nodeType":"YulFunctionCall","src":"1510:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1501:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1559:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1532:26:30"},"nodeType":"YulFunctionCall","src":"1532:33:30"},"nodeType":"YulExpressionStatement","src":"1532:33:30"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1469:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"1477:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1485:5:30","type":""}],"src":"1428:143:30"},{"body":{"nodeType":"YulBlock","src":"1754:1110:30","statements":[{"body":{"nodeType":"YulBlock","src":"1801:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1803:77:30"},"nodeType":"YulFunctionCall","src":"1803:79:30"},"nodeType":"YulExpressionStatement","src":"1803:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1775:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1771:3:30"},"nodeType":"YulFunctionCall","src":"1771:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"1796:3:30","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1767:3:30"},"nodeType":"YulFunctionCall","src":"1767:33:30"},"nodeType":"YulIf","src":"1764:120:30"},{"nodeType":"YulBlock","src":"1894:127:30","statements":[{"nodeType":"YulVariableDeclaration","src":"1909:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"1923:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1913:6:30","type":""}]},{"nodeType":"YulAssignment","src":"1938:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1983:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"1994:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:30"},"nodeType":"YulFunctionCall","src":"1979:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:30"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"1948:30:30"},"nodeType":"YulFunctionCall","src":"1948:63:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1938:6:30"}]}]},{"nodeType":"YulBlock","src":"2031:128:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2046:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2060:2:30","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2050:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2076:73:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2121:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2132:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:30"},"nodeType":"YulFunctionCall","src":"2117:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2141:7:30"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"2086:30:30"},"nodeType":"YulFunctionCall","src":"2086:63:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2076:6:30"}]}]},{"nodeType":"YulBlock","src":"2169:129:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2184:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2198:2:30","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2188:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2214:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2260:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2271:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2256:3:30"},"nodeType":"YulFunctionCall","src":"2256:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2280:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2224:31:30"},"nodeType":"YulFunctionCall","src":"2224:64:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2214:6:30"}]}]},{"nodeType":"YulBlock","src":"2308:129:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2323:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2337:2:30","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2327:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2353:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2410:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:30"},"nodeType":"YulFunctionCall","src":"2395:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2419:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2363:31:30"},"nodeType":"YulFunctionCall","src":"2363:64:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2353:6:30"}]}]},{"nodeType":"YulBlock","src":"2447:130:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2462:17:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2476:3:30","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2466:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2493:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2539:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:30"},"nodeType":"YulFunctionCall","src":"2535:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2559:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2503:31:30"},"nodeType":"YulFunctionCall","src":"2503:64:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2493:6:30"}]}]},{"nodeType":"YulBlock","src":"2587:130:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2602:17:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2616:3:30","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2606:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2633:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2679:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2690:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2675:3:30"},"nodeType":"YulFunctionCall","src":"2675:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2699:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2643:31:30"},"nodeType":"YulFunctionCall","src":"2643:64:30"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2633:6:30"}]}]},{"nodeType":"YulBlock","src":"2727:130:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2742:17:30","value":{"kind":"number","nodeType":"YulLiteral","src":"2756:3:30","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2746:6:30","type":""}]},{"nodeType":"YulAssignment","src":"2773:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2819:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2815:3:30"},"nodeType":"YulFunctionCall","src":"2815:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2839:7:30"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2783:31:30"},"nodeType":"YulFunctionCall","src":"2783:64:30"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2773:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint32t_uint32t_addresst_addresst_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1676:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1687:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1699:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1707:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1715:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1723:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1731:6:30","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1739:6:30","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1747:6:30","type":""}],"src":"1577:1287:30"},{"body":{"nodeType":"YulBlock","src":"2966:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2983:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"2988:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2976:6:30"},"nodeType":"YulFunctionCall","src":"2976:19:30"},"nodeType":"YulExpressionStatement","src":"2976:19:30"},{"nodeType":"YulAssignment","src":"3004:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3023:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3028:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3019:3:30"},"nodeType":"YulFunctionCall","src":"3019:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3004:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2938:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"2943:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2954:11:30","type":""}],"src":"2870:169:30"},{"body":{"nodeType":"YulBlock","src":"3151:56:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3173:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3181:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3169:3:30"},"nodeType":"YulFunctionCall","src":"3169:14:30"},{"hexValue":"656d70747920646f6d61696e","kind":"string","nodeType":"YulLiteral","src":"3185:14:30","type":"","value":"empty domain"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:30"},"nodeType":"YulFunctionCall","src":"3162:38:30"},"nodeType":"YulExpressionStatement","src":"3162:38:30"}]},"name":"store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3143:6:30","type":""}],"src":"3045:162:30"},{"body":{"nodeType":"YulBlock","src":"3359:220:30","statements":[{"nodeType":"YulAssignment","src":"3369:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3435:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3440:2:30","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3376:58:30"},"nodeType":"YulFunctionCall","src":"3376:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3369:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3541:3:30"}],"functionName":{"name":"store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","nodeType":"YulIdentifier","src":"3452:88:30"},"nodeType":"YulFunctionCall","src":"3452:93:30"},"nodeType":"YulExpressionStatement","src":"3452:93:30"},{"nodeType":"YulAssignment","src":"3554:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3565:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"3570:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3561:3:30"},"nodeType":"YulFunctionCall","src":"3561:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3554:3:30"}]}]},"name":"abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3347:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3355:3:30","type":""}],"src":"3213:366:30"},{"body":{"nodeType":"YulBlock","src":"3756:248:30","statements":[{"nodeType":"YulAssignment","src":"3766:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3778:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3789:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3774:3:30"},"nodeType":"YulFunctionCall","src":"3774:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3766:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3813:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"3824:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3809:3:30"},"nodeType":"YulFunctionCall","src":"3809:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3832:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"3838:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3828:3:30"},"nodeType":"YulFunctionCall","src":"3828:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3802:6:30"},"nodeType":"YulFunctionCall","src":"3802:47:30"},"nodeType":"YulExpressionStatement","src":"3802:47:30"},{"nodeType":"YulAssignment","src":"3858:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3992:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3866:124:30"},"nodeType":"YulFunctionCall","src":"3866:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3858:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3736:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3751:4:30","type":""}],"src":"3585:419:30"},{"body":{"nodeType":"YulBlock","src":"4116:61:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4138:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4146:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4134:3:30"},"nodeType":"YulFunctionCall","src":"4134:14:30"},{"hexValue":"656d70747920726f6f744d616e61676572","kind":"string","nodeType":"YulLiteral","src":"4150:19:30","type":"","value":"empty rootManager"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4127:6:30"},"nodeType":"YulFunctionCall","src":"4127:43:30"},"nodeType":"YulExpressionStatement","src":"4127:43:30"}]},"name":"store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4108:6:30","type":""}],"src":"4010:167:30"},{"body":{"nodeType":"YulBlock","src":"4329:220:30","statements":[{"nodeType":"YulAssignment","src":"4339:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4405:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:30","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4346:58:30"},"nodeType":"YulFunctionCall","src":"4346:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4339:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4511:3:30"}],"functionName":{"name":"store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","nodeType":"YulIdentifier","src":"4422:88:30"},"nodeType":"YulFunctionCall","src":"4422:93:30"},"nodeType":"YulExpressionStatement","src":"4422:93:30"},{"nodeType":"YulAssignment","src":"4524:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4535:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"4540:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4531:3:30"},"nodeType":"YulFunctionCall","src":"4531:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4524:3:30"}]}]},"name":"abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4317:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4325:3:30","type":""}],"src":"4183:366:30"},{"body":{"nodeType":"YulBlock","src":"4726:248:30","statements":[{"nodeType":"YulAssignment","src":"4736:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4748:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4759:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:30"},"nodeType":"YulFunctionCall","src":"4744:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4736:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4794:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4779:3:30"},"nodeType":"YulFunctionCall","src":"4779:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4802:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"4808:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4798:3:30"},"nodeType":"YulFunctionCall","src":"4798:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4772:6:30"},"nodeType":"YulFunctionCall","src":"4772:47:30"},"nodeType":"YulExpressionStatement","src":"4772:47:30"},{"nodeType":"YulAssignment","src":"4828:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4962:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4836:124:30"},"nodeType":"YulFunctionCall","src":"4836:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4828:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4706:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4721:4:30","type":""}],"src":"4555:419:30"},{"body":{"nodeType":"YulBlock","src":"5045:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5062:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5085:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5067:17:30"},"nodeType":"YulFunctionCall","src":"5067:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5055:6:30"},"nodeType":"YulFunctionCall","src":"5055:37:30"},"nodeType":"YulExpressionStatement","src":"5055:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5033:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5040:3:30","type":""}],"src":"4980:118:30"},{"body":{"nodeType":"YulBlock","src":"5258:288:30","statements":[{"nodeType":"YulAssignment","src":"5268:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5280:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5291:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5276:3:30"},"nodeType":"YulFunctionCall","src":"5276:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5268:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5348:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5361:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5372:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5357:3:30"},"nodeType":"YulFunctionCall","src":"5357:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5304:43:30"},"nodeType":"YulFunctionCall","src":"5304:71:30"},"nodeType":"YulExpressionStatement","src":"5304:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5429:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5453:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5438:3:30"},"nodeType":"YulFunctionCall","src":"5438:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5385:43:30"},"nodeType":"YulFunctionCall","src":"5385:72:30"},"nodeType":"YulExpressionStatement","src":"5385:72:30"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5511:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5524:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5535:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5520:3:30"},"nodeType":"YulFunctionCall","src":"5520:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5467:43:30"},"nodeType":"YulFunctionCall","src":"5467:72:30"},"nodeType":"YulExpressionStatement","src":"5467:72:30"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5214:9:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5226:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5234:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5242:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5253:4:30","type":""}],"src":"5104:442:30"},{"body":{"nodeType":"YulBlock","src":"5678:206:30","statements":[{"nodeType":"YulAssignment","src":"5688:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5700:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5711:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5696:3:30"},"nodeType":"YulFunctionCall","src":"5696:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5688:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5768:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5781:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5792:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5777:3:30"},"nodeType":"YulFunctionCall","src":"5777:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5724:43:30"},"nodeType":"YulFunctionCall","src":"5724:71:30"},"nodeType":"YulExpressionStatement","src":"5724:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5849:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5862:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5873:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5858:3:30"},"nodeType":"YulFunctionCall","src":"5858:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5805:43:30"},"nodeType":"YulFunctionCall","src":"5805:72:30"},"nodeType":"YulExpressionStatement","src":"5805:72:30"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5642:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5654:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5662:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5673:4:30","type":""}],"src":"5552:332:30"},{"body":{"nodeType":"YulBlock","src":"5955:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5972:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5995:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5977:17:30"},"nodeType":"YulFunctionCall","src":"5977:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5965:6:30"},"nodeType":"YulFunctionCall","src":"5965:37:30"},"nodeType":"YulExpressionStatement","src":"5965:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5943:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5950:3:30","type":""}],"src":"5890:118:30"},{"body":{"nodeType":"YulBlock","src":"6140:206:30","statements":[{"nodeType":"YulAssignment","src":"6150:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6162:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6173:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6158:3:30"},"nodeType":"YulFunctionCall","src":"6158:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6150:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6230:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6243:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6254:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6239:3:30"},"nodeType":"YulFunctionCall","src":"6239:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6186:43:30"},"nodeType":"YulFunctionCall","src":"6186:71:30"},"nodeType":"YulExpressionStatement","src":"6186:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6311:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6324:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6335:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6320:3:30"},"nodeType":"YulFunctionCall","src":"6320:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6267:43:30"},"nodeType":"YulFunctionCall","src":"6267:72:30"},"nodeType":"YulExpressionStatement","src":"6267:72:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6104:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6116:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6124:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6135:4:30","type":""}],"src":"6014:332:30"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_uint32t_addresst_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04(memPtr) {\n\n        mstore(add(memPtr, 0), \"empty domain\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"empty rootManager\")\n\n    }\n\n    function abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x57E6 CODESIZE SUB DUP1 PUSH3 0x57E6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x54A JUMP JUMPDEST DUP1 DUP1 DUP9 DUP9 DUP9 DUP9 DUP9 DUP5 DUP5 DUP5 DUP5 DUP5 PUSH3 0x55 CALLER PUSH3 0x294 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND SUB PUSH3 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x98 SWAP1 PUSH3 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10A SWAP1 PUSH3 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0x80 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1EA JUMPI PUSH3 0x1E9 DUP2 PUSH3 0x37C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH32 0x4F9C27C2FE3F84576EA469D367D044DA53C45E951617E8389F2B5ED8DB9D25F0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x22D SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP PUSH3 0x250 DUP2 PUSH3 0x41D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP POP POP PUSH3 0x7AB JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0xC77BEC288FC88F168427F2F7DA682EADB26CAC89D8D591AF6E443DA98DFF2BBC PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH3 0x3D1 SWAP3 SWAP2 SWAP1 PUSH3 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x877A02CB809DA0364D23ADCA3CD50C451B53F279D3DF632E1FC11EB66335BCE5 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH3 0x452 SWAP3 SWAP2 SWAP1 PUSH3 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x484 DUP2 PUSH3 0x469 JUMP JUMPDEST DUP2 EQ PUSH3 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4A4 DUP2 PUSH3 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D7 DUP3 PUSH3 0x4AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4E9 DUP2 PUSH3 0x4CA JUMP JUMPDEST DUP2 EQ PUSH3 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x509 DUP2 PUSH3 0x4DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x524 DUP2 PUSH3 0x50F JUMP JUMPDEST DUP2 EQ PUSH3 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x544 DUP2 PUSH3 0x519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x56C JUMPI PUSH3 0x56B PUSH3 0x464 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x57C DUP11 DUP3 DUP12 ADD PUSH3 0x493 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x58F DUP11 DUP3 DUP12 ADD PUSH3 0x493 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x5A2 DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x5B5 DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x5C8 DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x5DB DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x5EE DUP11 DUP3 DUP12 ADD PUSH3 0x533 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x656D70747920646F6D61696E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x646 PUSH1 0xC DUP4 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH3 0x653 DUP3 PUSH3 0x60E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x679 DUP2 PUSH3 0x637 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x656D70747920726F6F744D616E61676572000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6B8 PUSH1 0x11 DUP4 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH3 0x6C5 DUP3 PUSH3 0x680 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x6EB DUP2 PUSH3 0x6A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6FD DUP2 PUSH3 0x4CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x71A PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x6F2 JUMP JUMPDEST PUSH3 0x729 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x6F2 JUMP JUMPDEST PUSH3 0x738 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x6F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x757 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x6F2 JUMP JUMPDEST PUSH3 0x766 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x6F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x778 DUP2 PUSH3 0x50F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x795 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x76D JUMP JUMPDEST PUSH3 0x7A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x76D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x4FC5 PUSH3 0x821 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4A6 ADD MSTORE PUSH2 0x16FD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4CA ADD MSTORE PUSH2 0x9CA ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4F8 ADD MSTORE DUP2 DUP2 PUSH2 0x757 ADD MSTORE PUSH2 0x98E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x5CF ADD MSTORE DUP2 DUP2 PUSH2 0x1066 ADD MSTORE DUP2 DUP2 PUSH2 0x115A ADD MSTORE PUSH2 0x16CD ADD MSTORE PUSH1 0x0 PUSH2 0x6A2 ADD MSTORE PUSH2 0x4FC5 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC5B350DF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC5B350DF EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xCC394283 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD1851C92 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xD232C220 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD69F9D61 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDB1B7659 EQ PUSH2 0x467 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7850B020 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xB1F8100D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xC1F0808A EQ PUSH2 0x367 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x52A9674B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x52A9674B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x5BD11EFC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x5F61E3EC EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x6A42B8F8 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6E2EDB4E EQ PUSH2 0x2AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0xF329EF8 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x14168416 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x3CF52FFB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x48E6FA23 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4FF746F6 EQ PUSH2 0x1D7 JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x3164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x3347 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x33BF JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x3446 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x37E1 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH2 0xA9C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x3894 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x3446 JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x38C1 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xEC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x3446 JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0x3981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58E DUP3 DUP3 PUSH2 0x109A JUMP JUMPDEST PUSH32 0xDCAA37A042A0087DE79018C629BBD29CEE82CA80BD9BE394E1696BF9E9355077 DUP3 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0x3AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x695 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x1242 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x3B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x3BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x890 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP PUSH2 0x89C DUP2 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x3C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH1 0x0 DUP7 PUSH2 0x13A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x939 PUSH1 0x20 PUSH2 0x909 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA92 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E7D93FA PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP3 SWAP2 SWAP1 PUSH2 0x3CDB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x3D04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE CALLER PUSH1 0x40 MLOAD PUSH2 0xA89 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST GT PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x392CC0FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295EF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC38 PUSH1 0x0 PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x15F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDD9 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23780CCA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x945F6E7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x1638 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x234FE4E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST GT PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1093 DUP3 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D5 SWAP1 PUSH2 0x3D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x4FF746F6 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x3DBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1207 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0BF6D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xC77BEC288FC88F168427F2F7DA682EADB26CAC89D8D591AF6E443DA98DFF2BBC PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12FA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCBD4ECE900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138C DUP3 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI POP PUSH2 0x139D DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP1 POP PUSH2 0x13C7 DUP5 PUSH5 0xFFFFFFFFFF AND DUP3 DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x18 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 SHL SWAP1 POP PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x1411 DUP5 PUSH2 0x13D1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0xFF AND DUP5 PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST GT ISZERO PUSH2 0x148A JUMPI PUSH2 0x143D DUP5 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x1446 DUP6 PUSH2 0x13D1 JUMP JUMPDEST DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0x78218D2900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1481 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x45DF3F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL SWAP1 POP PUSH1 0x0 PUSH2 0x14DB DUP7 PUSH2 0x197E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x14F6 DUP4 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP4 ADD MLOAD AND SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x877A02CB809DA0364D23ADCA3CD50C451B53F279D3DF632E1FC11EB66335BCE5 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP3 SWAP2 SWAP1 PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AB4D119F23076E8AD491BC65CE85F017FB0591DCE08755BA8591059CC51737A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F2 PUSH32 0x0 DUP4 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D69EE57 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x41A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0x4200000000000000000000000000000000000007 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17D6 SWAP3 SWAP2 SWAP1 PUSH2 0x4253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17FF SWAP3 SWAP2 SWAP1 PUSH2 0x42BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1860 PUSH20 0x4200000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1842 SWAP2 SWAP1 PUSH2 0x42E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x1AE2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A2 SWAP1 PUSH2 0x439C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B6 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP PUSH2 0x190B DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18CC SWAP2 SWAP1 PUSH2 0x43BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18ED SWAP2 SWAP1 PUSH2 0x441A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP9 PUSH1 0x80 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1BD5 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1926 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x1937 JUMPI PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x1968 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 SWAP2 POP POP PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x1973 DUP6 DUP6 DUP6 PUSH2 0x1BFA JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x78 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 DUP4 SUB SAR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A34 SWAP1 PUSH2 0x4481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC3 SWAP2 SWAP1 PUSH2 0x44B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1AF1 DUP7 PUSH2 0x1C98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AFE DUP2 DUP7 DUP7 PUSH2 0x1CC8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B13 PUSH2 0x3083 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP4 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1B4F DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B42 JUMPI PUSH2 0x1B41 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DBB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B78 DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B6B JUMPI PUSH2 0x1B6A PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DBB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA1 DUP4 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BCA DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BE1 DUP7 PUSH2 0x1C98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEF DUP2 DUP7 DUP7 DUP7 PUSH2 0x1ED1 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 SWAP1 POP PUSH1 0x0 PUSH1 0x18 SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP DUP6 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1C3B JUMPI POP DUP7 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1C7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C71 SWAP1 PUSH2 0x455E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 SHL SWAP5 POP DUP1 DUP6 OR DUP5 SHL SWAP5 POP DUP2 DUP6 OR DUP4 SHL SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CB2 SWAP2 SWAP1 PUSH2 0x43BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CD7 DUP6 PUSH2 0x1F04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1CE9 DUP5 DUP11 DUP10 PUSH2 0x1FF7 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 DUP4 MLOAD EQ SWAP1 POP DUP1 DUP1 PUSH2 0x1D00 JUMPI POP DUP2 JUMPDEST PUSH2 0x1D3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D36 SWAP1 PUSH2 0x45CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D5B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D8B JUMP JUMPDEST PUSH2 0x1D8A DUP7 PUSH1 0x1 DUP8 PUSH2 0x1D6C SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245F JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DB4 PUSH2 0x1DAF DUP4 PUSH2 0x24A0 JUMP JUMPDEST PUSH2 0x24CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC6 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 PUSH1 0x0 ADD MLOAD LT PUSH2 0x1E19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E10 SWAP1 PUSH2 0x4636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E27 DUP6 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E41 JUMPI PUSH2 0x1E40 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1E53 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1E94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8B SWAP1 PUSH2 0x4636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1EA6 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x20 DUP5 LT ISZERO PUSH2 0x1EC4 JUMPI DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP DUP2 DIV SWAP1 POP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EE1 DUP8 DUP7 DUP7 PUSH2 0x1CC8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1EF8 JUMPI POP PUSH2 0x1EF7 DUP7 DUP3 PUSH2 0x29E2 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F11 DUP4 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F69 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1F56 PUSH2 0x30B1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F4E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FEB JUMPI PUSH1 0x0 PUSH2 0x1FA2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F95 JUMPI PUSH2 0x1F94 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FBE DUP4 PUSH2 0x1DA1 JUMP JUMPDEST DUP2 MSTORE POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FD4 JUMPI PUSH2 0x1FD3 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F75 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x200D DUP8 PUSH2 0x2A93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x201F PUSH2 0x30B1 JUMP JUMPDEST PUSH1 0x0 DUP13 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x240E JUMPI DUP14 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP DUP4 DUP6 PUSH2 0x2059 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP9 PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP8 POP PUSH1 0x0 DUP6 SUB PUSH2 0x20C4 JUMPI DUP6 DUP4 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x20BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B6 SWAP1 PUSH2 0x46D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1F DUP4 PUSH1 0x0 ADD MLOAD MLOAD GT ISZERO PUSH2 0x2124 JUMPI DUP6 DUP4 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x211F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2116 SWAP1 PUSH2 0x473D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2173 JUMP JUMPDEST DUP6 PUSH2 0x2132 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2C36 JUMP JUMPDEST EQ PUSH2 0x2172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2169 SWAP1 PUSH2 0x47A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x10 PUSH2 0x2188 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x21FD JUMPI DUP7 MLOAD DUP6 SUB ISZERO PUSH2 0x240E JUMPI PUSH1 0x0 DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x21F0 DUP2 PUSH2 0x2C70 JUMP JUMPDEST SWAP8 POP PUSH1 0x1 SWAP6 POP POP POP PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x23CE JUMPI PUSH1 0x0 PUSH2 0x2215 DUP5 PUSH2 0x2CAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x222D JUMPI PUSH2 0x222C PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0x224C SWAP2 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2258 SWAP2 SWAP1 PUSH2 0x4829 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2269 DUP5 DUP4 PUSH1 0xFF AND PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2277 DUP13 DUP12 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2285 DUP4 DUP4 PUSH2 0x2D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x22A2 JUMPI POP PUSH1 0x3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x22FF JUMPI DUP1 DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x22B7 JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST ISZERO PUSH2 0x22CB JUMPI DUP1 DUP12 PUSH2 0x22C8 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP11 POP JUMPDEST PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x240E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x231A JUMPI POP PUSH1 0x1 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x2393 JUMPI DUP3 MLOAD DUP2 EQ PUSH2 0x235B JUMPI PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x240E JUMP JUMPDEST PUSH2 0x2383 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2376 JUMPI PUSH2 0x2375 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C70 JUMP JUMPDEST SWAP12 POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C5 SWAP1 PUSH2 0x48D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2400 SWAP1 PUSH2 0x493C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2028 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP7 EQ SWAP1 POP DUP8 PUSH2 0x2447 DUP9 DUP8 PUSH2 0x2CE7 JUMP JUMPDEST DUP3 SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2499 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD MLOAD PUSH2 0x247B SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x248C JUMPI PUSH2 0x248B PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A8 PUSH2 0x30CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x24DC DUP5 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2507 JUMPI PUSH2 0x2506 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253E SWAP1 PUSH2 0x49A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2564 JUMPI PUSH2 0x2563 PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x259D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x258A PUSH2 0x30CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2582 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP5 SWAP1 POP JUMPDEST DUP7 PUSH1 0x0 ADD MLOAD DUP2 LT ISZERO PUSH2 0x26B5 JUMPI PUSH1 0x20 DUP3 LT PUSH2 0x25F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25ED SWAP1 PUSH2 0x4A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2634 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP13 PUSH1 0x20 ADD MLOAD PUSH2 0x262C SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MSTORE POP PUSH2 0x26C5 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 PUSH2 0x2650 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP12 PUSH1 0x20 ADD MLOAD PUSH2 0x2665 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MSTORE POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x267B JUMPI PUSH2 0x267A PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP5 PUSH2 0x2693 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP4 POP DUP1 DUP3 PUSH2 0x26A1 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP4 PUSH2 0x26AC SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x25A7 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP3 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2707 SWAP1 PUSH2 0x4AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x273E JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xB8 DUP2 LT ISZERO PUSH2 0x27B1 JUMPI PUSH1 0x0 PUSH1 0x80 DUP3 PUSH2 0x2756 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x279E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2795 SWAP1 PUSH2 0x4B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2893 JUMPI PUSH1 0x0 PUSH1 0xB7 DUP3 PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2811 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2808 SWAP1 PUSH2 0x4B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x282F SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286B SWAP1 PUSH2 0x4BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x2881 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xF8 DUP2 LT ISZERO PUSH2 0x2906 JUMPI PUSH1 0x0 PUSH1 0xC0 DUP3 PUSH2 0x28AB SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x28F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28EA SWAP1 PUSH2 0x4C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF7 DUP3 PUSH2 0x2915 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x295D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2954 SWAP1 PUSH2 0x4CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x297B SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x29C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B7 SWAP1 PUSH2 0x4D2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x29CD SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2A0D DUP6 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A3A JUMPI PUSH2 0x2A39 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A71 SWAP1 PUSH2 0x4D9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A89 DUP6 PUSH1 0x20 ADD MLOAD DUP5 DUP5 PUSH2 0x2DEB JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 MLOAD PUSH2 0x2AA5 SWAP2 SWAP1 PUSH2 0x4DBA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ABE JUMPI PUSH2 0x2ABD PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AF0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C2B JUMPI PUSH1 0x4 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B19 JUMPI PUSH2 0x2B18 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR DUP4 PUSH1 0x2 DUP4 PUSH2 0x2B56 SWAP2 SWAP1 PUSH2 0x4DBA JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2B67 JUMPI PUSH2 0x2B66 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BAB JUMPI PUSH2 0x2BAA PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x2BC3 SWAP2 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST PUSH1 0xF8 SHL DUP4 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x2BD6 SWAP2 SWAP1 PUSH2 0x4DBA JUMP JUMPDEST PUSH2 0x2BE0 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BF1 JUMPI PUSH2 0x2BF0 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2AFC JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD LT ISZERO PUSH2 0x2C54 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x2C6B JUMP JUMPDEST DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2C68 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x20 DUP4 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x2C91 JUMPI PUSH2 0x2C8A DUP4 PUSH2 0x2EE8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x2C9A DUP4 PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2CA6 DUP2 PUSH2 0x2C36 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2CE0 PUSH2 0x2CDB DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CCE JUMPI PUSH2 0x2CCD PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29FD JUMP JUMPDEST PUSH2 0x2A93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD DUP3 LT PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2D22 JUMP JUMPDEST PUSH2 0x2D1F DUP4 DUP4 DUP5 DUP7 MLOAD PUSH2 0x2D1A SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST PUSH2 0x2EFA JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP1 DUP5 MLOAD GT DUP1 ISZERO PUSH2 0x2D40 JUMPI POP DUP1 DUP4 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x2DC9 JUMPI POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D5A JUMPI PUSH2 0x2D59 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D9A JUMPI PUSH2 0x2D99 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x2DE1 JUMPI DUP1 DUP1 PUSH2 0x2DD9 SWAP1 PUSH2 0x4E3E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D30 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E09 JUMPI PUSH2 0x2E08 PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E3B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2E50 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2EE1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 PUSH2 0x2E5E SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2E78 SWAP2 SWAP1 PUSH2 0x4E86 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2EAC JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 PUSH2 0x2E90 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 PUSH2 0x2E9F SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2E6B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x20 DUP8 DUP2 PUSH2 0x2EC2 JUMPI PUSH2 0x2EC1 PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST MOD PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 DUP3 MLOAD AND DUP2 NOT DUP5 MLOAD AND OR DUP3 MSTORE DUP4 SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EF3 DUP3 PUSH2 0x3066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1F DUP4 PUSH2 0x2F0A SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST LT ISZERO PUSH2 0x2F4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F42 SWAP1 PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 DUP5 PUSH2 0x2F58 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST LT ISZERO PUSH2 0x2F99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F90 SWAP1 PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x2FA5 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x2FE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FDF SWAP1 PUSH2 0x4F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ISZERO PUSH1 0x0 DUP2 EQ PUSH2 0x3009 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x305A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3047 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x302A JUMP JUMPDEST POP DUP7 DUP6 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND PUSH1 0x40 MSTORE POP POP POP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x307C DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2DEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312A PUSH2 0x3125 PUSH2 0x3120 DUP5 PUSH2 0x30E5 JUMP JUMPDEST PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313C DUP3 PUSH2 0x310F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314E DUP3 PUSH2 0x3131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x315E DUP2 PUSH2 0x3143 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3198 DUP2 PUSH2 0x317F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x318F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31CC DUP2 PUSH2 0x31B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3254 DUP3 PUSH2 0x320B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3273 JUMPI PUSH2 0x3272 PUSH2 0x321C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3286 PUSH2 0x31ED JUMP JUMPDEST SWAP1 POP PUSH2 0x3292 DUP3 DUP3 PUSH2 0x324B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32B1 PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH2 0x32BB DUP3 PUSH2 0x320B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32EA PUSH2 0x32E5 DUP5 PUSH2 0x3297 JUMP JUMPDEST PUSH2 0x327C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3306 JUMPI PUSH2 0x3305 PUSH2 0x3206 JUMP JUMPDEST JUMPDEST PUSH2 0x3311 DUP5 DUP3 DUP6 PUSH2 0x32C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x332E JUMPI PUSH2 0x332D PUSH2 0x3201 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x333E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x32D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x335E JUMPI PUSH2 0x335D PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x337C JUMPI PUSH2 0x337B PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x3388 DUP6 DUP3 DUP7 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A9 JUMPI PUSH2 0x33A8 PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x33B5 DUP6 DUP3 DUP7 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D5 JUMPI PUSH2 0x33D4 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33F3 JUMPI PUSH2 0x33F2 PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x33FF DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3413 DUP3 PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3423 DUP2 PUSH2 0x3408 JUMP JUMPDEST DUP2 EQ PUSH2 0x342E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3440 DUP2 PUSH2 0x341A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x345C JUMPI PUSH2 0x345B PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x346A DUP5 DUP3 DUP6 ADD PUSH2 0x3431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x347C DUP2 PUSH2 0x3408 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3497 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34A6 DUP2 PUSH2 0x31B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x34B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34C3 DUP2 PUSH2 0x349D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E6 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3503 DUP2 PUSH2 0x34DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x351F JUMPI PUSH2 0x351E PUSH2 0x34C9 JUMP JUMPDEST JUMPDEST PUSH2 0x3529 PUSH1 0xA0 PUSH2 0x327C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3539 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x354D DUP5 DUP3 DUP6 ADD PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3561 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x3575 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3599 JUMPI PUSH2 0x3598 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x35A5 DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35CC JUMPI PUSH2 0x35CB PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35F5 PUSH2 0x35F0 DUP5 PUSH2 0x35B1 JUMP JUMPDEST PUSH2 0x327C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3618 JUMPI PUSH2 0x3617 PUSH2 0x35DD JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3641 JUMPI DUP1 PUSH2 0x362D DUP9 DUP3 PUSH2 0x34F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x361A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3660 JUMPI PUSH2 0x365F PUSH2 0x3201 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3670 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x368F JUMPI PUSH2 0x368E PUSH2 0x34C9 JUMP JUMPDEST JUMPDEST PUSH2 0x3699 PUSH1 0x40 PUSH2 0x327C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36A9 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36CD JUMPI PUSH2 0x36CC PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x36D9 DUP5 DUP3 DUP6 ADD PUSH2 0x364B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36FB JUMPI PUSH2 0x36FA PUSH2 0x34C9 JUMP JUMPDEST JUMPDEST PUSH2 0x3705 PUSH1 0xA0 PUSH2 0x327C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3715 DUP5 DUP3 DUP6 ADD PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3739 JUMPI PUSH2 0x3738 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x3745 DUP5 DUP3 DUP6 ADD PUSH2 0x3509 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3769 JUMPI PUSH2 0x3768 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x3775 DUP5 DUP3 DUP6 ADD PUSH2 0x3679 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3799 JUMPI PUSH2 0x3798 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x37A5 DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37C9 JUMPI PUSH2 0x37C8 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x37D5 DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37FD JUMPI PUSH2 0x37FC PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x380B DUP9 DUP3 DUP10 ADD PUSH2 0x3431 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x381C DUP9 DUP3 DUP10 ADD PUSH2 0x3431 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383D JUMPI PUSH2 0x383C PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x3849 DUP9 DUP3 DUP10 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x385A DUP9 DUP3 DUP10 ADD PUSH2 0x34B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x387B JUMPI PUSH2 0x387A PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x3887 DUP9 DUP3 DUP10 ADD PUSH2 0x36E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38AA JUMPI PUSH2 0x38A9 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38B8 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38D7 JUMPI PUSH2 0x38D6 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E5 DUP5 DUP3 DUP6 ADD PUSH2 0x34F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3903 DUP2 PUSH2 0x38EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x391E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x21726F6F744D616E616765720000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396B PUSH1 0xC DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3976 DUP3 PUSH2 0x3935 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399A DUP2 PUSH2 0x395E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39C0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F2 DUP3 PUSH2 0x39A1 JUMP JUMPDEST PUSH2 0x39FC DUP2 DUP6 PUSH2 0x39AC JUMP JUMPDEST SWAP4 POP PUSH2 0x3A0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST PUSH2 0x3A15 DUP2 PUSH2 0x320B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3A DUP2 DUP7 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3A4E DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x21414D4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9B PUSH1 0x4 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA6 DUP3 PUSH2 0x3A65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACA DUP2 PUSH2 0x3A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AEB DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AFA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x216D6972726F72436F6E6E6563746F7200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B37 PUSH1 0x10 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B42 DUP3 PUSH2 0x3B01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B66 DUP2 PUSH2 0x3B2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2174686973000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA3 PUSH1 0x5 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BAE DUP3 PUSH2 0x3B6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BD2 DUP2 PUSH2 0x3B96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2170726F6F660000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0F PUSH1 0x6 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C1A DUP3 PUSH2 0x3BD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C3E DUP2 PUSH2 0x3C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C97 DUP3 PUSH2 0x3C45 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA2 DUP4 PUSH2 0x3C45 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CC6 JUMPI PUSH2 0x3CC5 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CD5 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CF0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x318F JUMP JUMPDEST PUSH2 0x3CFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3CCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2A DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D35 DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3D4D JUMPI PUSH2 0x3D4C PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x216C656E67746800000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D89 PUSH1 0x7 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D94 DUP3 PUSH2 0x3D53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DB8 DUP2 PUSH2 0x3D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD9 DUP2 DUP5 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3DF6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3473 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3E08 DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E17 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x318F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E34 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3473 JUMP JUMPDEST PUSH2 0x3E41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E5D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3473 JUMP JUMPDEST PUSH2 0x3E6A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3473 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E7C DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E9F DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EAA DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3EC2 JUMPI PUSH2 0x3EC1 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE3 PUSH2 0x3EDE PUSH2 0x3ED9 DUP5 PUSH2 0x3C45 JUMP JUMPDEST PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x31B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EF3 DUP2 PUSH2 0x3EC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F0E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EEA JUMP JUMPDEST PUSH2 0x3F1B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3EEA JUMP JUMPDEST PUSH2 0x3F28 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x3F35 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x3F60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3F70 DUP2 PUSH2 0x31B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3F7F DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA1 DUP3 PUSH2 0x39A1 JUMP JUMPDEST PUSH2 0x3FAB DUP2 DUP6 PUSH2 0x3F85 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FBB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST PUSH2 0x3FC4 DUP2 PUSH2 0x320B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3FE7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3FFA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x3F76 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x400D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4020 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x4038 DUP3 DUP3 PUSH2 0x3F96 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407D DUP4 DUP4 PUSH2 0x3F76 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A1 DUP3 PUSH2 0x4045 JUMP JUMPDEST PUSH2 0x40AB DUP2 DUP6 PUSH2 0x4050 JUMP JUMPDEST SWAP4 POP PUSH2 0x40B6 DUP4 PUSH2 0x4061 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40E7 JUMPI DUP2 MLOAD PUSH2 0x40CE DUP9 DUP3 PUSH2 0x4071 JUMP JUMPDEST SWAP8 POP PUSH2 0x40D9 DUP4 PUSH2 0x4089 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x40BA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x410C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x4124 DUP3 DUP3 PUSH2 0x4096 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4146 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3CCC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4158 DUP2 DUP6 PUSH2 0x3FCF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x416C DUP2 DUP5 PUSH2 0x40F4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x417F DUP2 PUSH2 0x38EE JUMP JUMPDEST DUP2 EQ PUSH2 0x418A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x419C DUP2 PUSH2 0x4176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41B8 JUMPI PUSH2 0x41B7 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41C6 DUP5 DUP3 DUP6 ADD PUSH2 0x418D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E5 DUP3 PUSH2 0x39A1 JUMP JUMPDEST PUSH2 0x41EF DUP2 DUP6 PUSH2 0x41CF JUMP JUMPDEST SWAP4 POP PUSH2 0x41FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4223 DUP3 PUSH2 0x420B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4235 DUP3 PUSH2 0x4218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424D PUSH2 0x4248 DUP3 PUSH2 0x3408 JUMP JUMPDEST PUSH2 0x422A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425F DUP3 DUP6 PUSH2 0x41DA JUMP JUMPDEST SWAP2 POP PUSH2 0x426B DUP3 DUP5 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4296 PUSH2 0x4291 DUP3 PUSH2 0x34D3 JUMP JUMPDEST PUSH2 0x427B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42B7 PUSH2 0x42B2 DUP3 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x429C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C9 DUP3 DUP6 PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x42D9 DUP3 DUP5 PUSH2 0x42A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F5 DUP3 DUP5 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6573736167652070617373696E67207072656465706C6F7920686173206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206265656E20696E697469616C697A6564206F7220696E76616C6964207072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F662070726F76696465642E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4386 PUSH1 0x4D DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4391 DUP3 PUSH2 0x4304 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43B5 DUP2 PUSH2 0x4379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C8 DUP3 DUP5 PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43FC DUP3 PUSH2 0x43E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4414 PUSH2 0x440F DUP3 PUSH2 0x43D7 JUMP JUMPDEST PUSH2 0x43F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4426 DUP3 DUP5 PUSH2 0x4403 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2162726964676500000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446B PUSH1 0x7 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4476 DUP3 PUSH2 0x4435 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x449A DUP2 PUSH2 0x445E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x44B0 DUP2 PUSH2 0x341A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44CC JUMPI PUSH2 0x44CB PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44DA DUP5 DUP3 DUP6 ADD PUSH2 0x44A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x217472756E636174656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4548 PUSH1 0xA DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4553 DUP3 PUSH2 0x4512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4577 DUP2 PUSH2 0x453B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F76696465642070726F6F6620697320696E76616C69642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B4 PUSH1 0x1A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x45BF DUP3 PUSH2 0x457E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45E3 DUP2 PUSH2 0x45A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C5020627974657333322076616C75652E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4620 PUSH1 0x1A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x462B DUP3 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x464F DUP2 PUSH2 0x4613 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420726F6F742068617368000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46BB PUSH1 0x11 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x46C6 DUP3 PUSH2 0x4685 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46EA DUP2 PUSH2 0x46AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206C6172676520696E7465726E616C20686173680000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4727 PUSH1 0x1B DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4732 DUP3 PUSH2 0x46F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4756 DUP2 PUSH2 0x471A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E7465726E616C206E6F64652068617368000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4793 PUSH1 0x1A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x479E DUP3 PUSH2 0x475D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47C2 DUP2 PUSH2 0x4786 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4803 DUP3 PUSH2 0x43D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x480E DUP4 PUSH2 0x43D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x481E JUMPI PUSH2 0x481D PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4834 DUP3 PUSH2 0x43D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x483F DUP4 PUSH2 0x43D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x4858 JUMPI PUSH2 0x4857 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656365697665642061206E6F6465207769746820616E20756E6B6E6F776E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7072656669780000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48BA PUSH1 0x26 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x48C5 DUP3 PUSH2 0x485E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48E9 DUP2 PUSH2 0x48AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563656976656420616E20756E706172736561626C65206E6F64652E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4926 PUSH1 0x1D DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4931 DUP3 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4955 DUP2 PUSH2 0x4919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6973742076616C75652E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4992 PUSH1 0x17 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x499D DUP3 PUSH2 0x495C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49C1 DUP2 PUSH2 0x4985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F766964656420524C50206C6973742065786365656473206D6178206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374206C656E6774682E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A24 PUSH1 0x2A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2F DUP3 PUSH2 0x49C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A53 DUP2 PUSH2 0x4A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x524C50206974656D2063616E6E6F74206265206E756C6C2E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A90 PUSH1 0x18 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9B DUP3 PUSH2 0x4A5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ABF DUP2 PUSH2 0x4A83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F727420737472696E672E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AFC PUSH1 0x19 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B07 DUP3 PUSH2 0x4AC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B2B DUP2 PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E67206C656E6774682E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B68 PUSH1 0x1F DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B73 DUP3 PUSH2 0x4B32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B97 DUP2 PUSH2 0x4B5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E672E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD4 PUSH1 0x18 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BDF DUP3 PUSH2 0x4B9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C03 DUP2 PUSH2 0x4BC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F7274206C6973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C40 PUSH1 0x17 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C4B DUP3 PUSH2 0x4C0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C6F DUP2 PUSH2 0x4C33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C697374206C656E6774682E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CAC PUSH1 0x1D DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CB7 DUP3 PUSH2 0x4C76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CDB DUP2 PUSH2 0x4C9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C6973742E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D18 PUSH1 0x16 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D23 DUP3 PUSH2 0x4CE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D47 DUP2 PUSH2 0x4D0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502062797465732076616C75652E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D84 PUSH1 0x18 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D8F DUP3 PUSH2 0x4D4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DB3 DUP2 PUSH2 0x4D77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC5 DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DD0 DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4DDE DUP2 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4DF5 JUMPI PUSH2 0x4DF4 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E0B DUP2 PUSH2 0x34DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E27 JUMPI PUSH2 0x4E26 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E35 DUP5 DUP3 DUP6 ADD PUSH2 0x4DFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E49 DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4E7B JUMPI PUSH2 0x4E7A PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E91 DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E9C DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4EAC JUMPI PUSH2 0x4EAB PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EED PUSH1 0xE DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF8 DUP3 PUSH2 0x4EB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F1C DUP2 PUSH2 0x4EE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736C6963655F6F75744F66426F756E6473000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F59 PUSH1 0x11 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F64 DUP3 PUSH2 0x4F23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F88 DUP2 PUSH2 0x4F4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY MSTORE DIV LOG1 PUSH23 0xABC249879A60C42D0B8CAAFA442BA0AA4B4F949EF5149 DIV PUSH5 0x6C7264736F PUSH13 0x63430008110033000000000000 ","sourceMap":"724:7347:16:-:0;;;1476:367;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1756:7;311::15;1681::16;1690:13;1705:4;1711:12;1725:16;1355:7:14;1364:13;1379:4;1385:12;1399:16;3038:21:12::1;3048:10;3038:9;;;:21;;:::i;:::-;3116:1;3105:7;:12;;::::0;3097:37:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3172:1;3148:26;;:12;:26;;::::0;3140:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3317:7;3308:16;;;;;;;;::::0;::::1;3336:4;3330:10;;;;;;;;::::0;::::1;3361:12;3346:27;;;;;;;;::::0;::::1;3395:13;3379:29;;;;;;;;::::0;::::1;3477:1;3449:30;;:16;:30;;;3445:88;;3489:37;3509:16;3489:19;;;:37;;:::i;:::-;3445:88;3566:13;3544:74;;3557:7;3544:74;;;3581:4;3587:12;3601:16;3544:74;;;;;;;;:::i;:::-;;;;;;;;2857:766:::0;;;;;1209:210:14;;;;;791:19:13;802:7;791:10;;;:19;;:::i;:::-;756:59;275:47:15;1816:21:16::2;1771:67;;;;;;;;::::0;::::2;1476:367:::0;;;;;;;724:7347;;4981:185:27;5067:8;5038:38;;5059:6;;;;;;;;;;5038:38;;;;;;;;;;;;5091:8;5082:6;;:17;;;;;;;;;;;;;;;;;;5112:27;5105:34;;;5152:9;;5145:16;;;;;;;;;;;4981:185;:::o;5838::12:-;5921:57;5944:15;;;;;;;;;;;5961:16;5921:57;;;;;;;:::i;:::-;;;;;;;;6002:16;5984:15;;:34;;;;;;;;;;;;;;;;;;5838:185;:::o;1089:114:13:-;1146:30;1160:6;;1168:7;1146:30;;;;;;;:::i;:::-;;;;;;;;1191:7;1182:6;:16;;;;1089:114;:::o;88:117:30:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:141::-;615:5;646:6;640:13;631:22;;662:32;688:5;662:32;:::i;:::-;559:141;;;;:::o;706:126::-;743:7;783:42;776:5;772:54;761:65;;706:126;;;:::o;838:96::-;875:7;904:24;922:5;904:24;:::i;:::-;893:35;;838:96;;;:::o;940:122::-;1013:24;1031:5;1013:24;:::i;:::-;1006:5;1003:35;993:63;;1052:1;1049;1042:12;993:63;940:122;:::o;1068:143::-;1125:5;1156:6;1150:13;1141:22;;1172:33;1199:5;1172:33;:::i;:::-;1068:143;;;;:::o;1217:77::-;1254:7;1283:5;1272:16;;1217:77;;;:::o;1300:122::-;1373:24;1391:5;1373:24;:::i;:::-;1366:5;1363:35;1353:63;;1412:1;1409;1402:12;1353:63;1300:122;:::o;1428:143::-;1485:5;1516:6;1510:13;1501:22;;1532:33;1559:5;1532:33;:::i;:::-;1428:143;;;;:::o;1577:1287::-;1699:6;1707;1715;1723;1731;1739;1747;1796:3;1784:9;1775:7;1771:23;1767:33;1764:120;;;1803:79;;:::i;:::-;1764:120;1923:1;1948:63;2003:7;1994:6;1983:9;1979:22;1948:63;:::i;:::-;1938:73;;1894:127;2060:2;2086:63;2141:7;2132:6;2121:9;2117:22;2086:63;:::i;:::-;2076:73;;2031:128;2198:2;2224:64;2280:7;2271:6;2260:9;2256:22;2224:64;:::i;:::-;2214:74;;2169:129;2337:2;2363:64;2419:7;2410:6;2399:9;2395:22;2363:64;:::i;:::-;2353:74;;2308:129;2476:3;2503:64;2559:7;2550:6;2539:9;2535:22;2503:64;:::i;:::-;2493:74;;2447:130;2616:3;2643:64;2699:7;2690:6;2679:9;2675:22;2643:64;:::i;:::-;2633:74;;2587:130;2756:3;2783:64;2839:7;2830:6;2819:9;2815:22;2783:64;:::i;:::-;2773:74;;2727:130;1577:1287;;;;;;;;;;:::o;2870:169::-;2954:11;2988:6;2983:3;2976:19;3028:4;3023:3;3019:14;3004:29;;2870:169;;;;:::o;3045:162::-;3185:14;3181:1;3173:6;3169:14;3162:38;3045:162;:::o;3213:366::-;3355:3;3376:67;3440:2;3435:3;3376:67;:::i;:::-;3369:74;;3452:93;3541:3;3452:93;:::i;:::-;3570:2;3565:3;3561:12;3554:19;;3213:366;;;:::o;3585:419::-;3751:4;3789:2;3778:9;3774:18;3766:26;;3838:9;3832:4;3828:20;3824:1;3813:9;3809:17;3802:47;3866:131;3992:4;3866:131;:::i;:::-;3858:139;;3585:419;;;:::o;4010:167::-;4150:19;4146:1;4138:6;4134:14;4127:43;4010:167;:::o;4183:366::-;4325:3;4346:67;4410:2;4405:3;4346:67;:::i;:::-;4339:74;;4422:93;4511:3;4422:93;:::i;:::-;4540:2;4535:3;4531:12;4524:19;;4183:366;;;:::o;4555:419::-;4721:4;4759:2;4748:9;4744:18;4736:26;;4808:9;4802:4;4798:20;4794:1;4783:9;4779:17;4772:47;4836:131;4962:4;4836:131;:::i;:::-;4828:139;;4555:419;;;:::o;4980:118::-;5067:24;5085:5;5067:24;:::i;:::-;5062:3;5055:37;4980:118;;:::o;5104:442::-;5253:4;5291:2;5280:9;5276:18;5268:26;;5304:71;5372:1;5361:9;5357:17;5348:6;5304:71;:::i;:::-;5385:72;5453:2;5442:9;5438:18;5429:6;5385:72;:::i;:::-;5467;5535:2;5524:9;5520:18;5511:6;5467:72;:::i;:::-;5104:442;;;;;;:::o;5552:332::-;5673:4;5711:2;5700:9;5696:18;5688:26;;5724:71;5792:1;5781:9;5777:17;5768:6;5724:71;:::i;:::-;5805:72;5873:2;5862:9;5858:18;5849:6;5805:72;:::i;:::-;5552:332;;;;;:::o;5890:118::-;5977:24;5995:5;5977:24;:::i;:::-;5972:3;5965:37;5890:118;;:::o;6014:332::-;6135:4;6173:2;6162:9;6158:18;6150:26;;6186:71;6254:1;6243:9;6239:17;6230:6;6186:71;:::i;:::-;6267:72;6335:2;6324:9;6320:18;6311:6;6267:72;:::i;:::-;6014:332;;;;;:::o;724:7347:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@AMB_2639":{"entryPoint":4196,"id":2639,"parameterSlots":0,"returnSlots":0},"@DOMAIN_2636":{"entryPoint":1696,"id":2636,"parameterSlots":0,"returnSlots":0},"@MIRROR_DOMAIN_2645":{"entryPoint":1224,"id":2645,"parameterSlots":0,"returnSlots":0},"@ROOT_MANAGER_2642":{"entryPoint":1877,"id":2642,"parameterSlots":0,"returnSlots":0},"@_2754":{"entryPoint":null,"id":2754,"parameterSlots":0,"returnSlots":0},"@_copy_5190":{"entryPoint":11755,"id":5190,"parameterSlots":3,"returnSlots":1},"@_copy_5208":{"entryPoint":12390,"id":5208,"parameterSlots":1,"returnSlots":1},"@_decodeLength_5107":{"entryPoint":9925,"id":5107,"parameterSlots":1,"returnSlots":3},"@_encodeXDomainCalldata_3419":{"entryPoint":4833,"id":3419,"parameterSlots":4,"returnSlots":1},"@_getNodeID_4278":{"entryPoint":11376,"id":4278,"parameterSlots":1,"returnSlots":1},"@_getNodePath_4299":{"entryPoint":11438,"id":4299,"parameterSlots":1,"returnSlots":1},"@_getNodeValue_4321":{"entryPoint":9311,"id":4321,"parameterSlots":1,"returnSlots":1},"@_getSecureKey_5287":{"entryPoint":7320,"id":5287,"parameterSlots":1,"returnSlots":1},"@_getSharedNibbleLength_4360":{"entryPoint":11560,"id":4360,"parameterSlots":2,"returnSlots":1},"@_parseProof_4239":{"entryPoint":7940,"id":4239,"parameterSlots":1,"returnSlots":1},"@_processMessage_2817":{"entryPoint":4624,"id":2817,"parameterSlots":1,"returnSlots":0},"@_sendMessage_3170":{"entryPoint":4250,"id":3170,"parameterSlots":2,"returnSlots":0},"@_setGasCap_2895":{"entryPoint":5619,"id":2895,"parameterSlots":1,"returnSlots":0},"@_setMirrorConnector_2840":{"entryPoint":4674,"id":2840,"parameterSlots":1,"returnSlots":0},"@_setOwner_5695":{"entryPoint":5387,"id":5695,"parameterSlots":1,"returnSlots":0},"@_setProposed_5714":{"entryPoint":5688,"id":5714,"parameterSlots":1,"returnSlots":0},"@_verifySender_3012":{"entryPoint":6605,"id":3012,"parameterSlots":2,"returnSlots":1},"@_verifySender_3130":{"entryPoint":5830,"id":3130,"parameterSlots":1,"returnSlots":1},"@_verifyStateRootProof_3310":{"entryPoint":5881,"id":3310,"parameterSlots":1,"returnSlots":1},"@_verifyStorageProof_3395":{"entryPoint":6060,"id":3395,"parameterSlots":2,"returnSlots":1},"@_verifyXDomainMessage_3290":{"entryPoint":4993,"id":3290,"parameterSlots":2,"returnSlots":1},"@_walkNodePath_4163":{"entryPoint":8183,"id":4163,"parameterSlots":3,"returnSlots":3},"@acceptProposedOwner_5674":{"entryPoint":3777,"id":5674,"parameterSlots":0,"returnSlots":0},"@build_6130":{"entryPoint":6423,"id":6130,"parameterSlots":3,"returnSlots":1},"@decodeEVMAccount_4423":{"entryPoint":6923,"id":4423,"parameterSlots":1,"returnSlots":1},"@delay_5541":{"entryPoint":1913,"id":5541,"parameterSlots":0,"returnSlots":1},"@equal_3690":{"entryPoint":10722,"id":3690,"parameterSlots":2,"returnSlots":1},"@get_3842":{"entryPoint":7368,"id":3842,"parameterSlots":3,"returnSlots":2},"@get_5271":{"entryPoint":6882,"id":5271,"parameterSlots":3,"returnSlots":2},"@index_6417":{"entryPoint":5105,"id":6417,"parameterSlots":3,"returnSlots":1},"@leftMask_5907":{"entryPoint":6558,"id":5907,"parameterSlots":1,"returnSlots":1},"@len_6230":{"entryPoint":5073,"id":6230,"parameterSlots":1,"returnSlots":1},"@loc_6180":{"entryPoint":6526,"id":6180,"parameterSlots":1,"returnSlots":1},"@mirrorConnector_2648":{"entryPoint":4030,"id":2648,"parameterSlots":0,"returnSlots":0},"@owner_5514":{"entryPoint":3275,"id":5514,"parameterSlots":0,"returnSlots":1},"@processMessageFromRoot_3268":{"entryPoint":1924,"id":3268,"parameterSlots":5,"returnSlots":0},"@processMessage_2786":{"entryPoint":1485,"id":2786,"parameterSlots":1,"returnSlots":0},"@processed_3082":{"entryPoint":3745,"id":3082,"parameterSlots":0,"returnSlots":0},"@proposeNewOwner_5628":{"entryPoint":3316,"id":5628,"parameterSlots":1,"returnSlots":0},"@proposedTimestamp_5532":{"entryPoint":1260,"id":5532,"parameterSlots":0,"returnSlots":1},"@proposed_5523":{"entryPoint":4068,"id":5523,"parameterSlots":0,"returnSlots":1},"@readBytes32_4756":{"entryPoint":7632,"id":4756,"parameterSlots":1,"returnSlots":1},"@readBytes_4657":{"entryPoint":10749,"id":4657,"parameterSlots":1,"returnSlots":1},"@readList_4604":{"entryPoint":9422,"id":4604,"parameterSlots":1,"returnSlots":1},"@readList_4621":{"entryPoint":7585,"id":4621,"parameterSlots":1,"returnSlots":1},"@readRawBytes_4928":{"entryPoint":12008,"id":4928,"parameterSlots":1,"returnSlots":1},"@readUint256_4788":{"entryPoint":7611,"id":4788,"parameterSlots":1,"returnSlots":1},"@ref_6156":{"entryPoint":5030,"id":6156,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_5661":{"entryPoint":2716,"id":5661,"parameterSlots":0,"returnSlots":0},"@renounced_5597":{"entryPoint":4110,"id":5597,"parameterSlots":0,"returnSlots":1},"@sendMessage_2968":{"entryPoint":1270,"id":2968,"parameterSlots":2,"returnSlots":0},"@setGasCap_2879":{"entryPoint":3130,"id":2879,"parameterSlots":1,"returnSlots":0},"@setMirrorConnector_2767":{"entryPoint":1732,"id":2767,"parameterSlots":1,"returnSlots":0},"@slice_3469":{"entryPoint":12026,"id":3469,"parameterSlots":3,"returnSlots":1},"@slice_3499":{"entryPoint":11495,"id":3499,"parameterSlots":2,"returnSlots":1},"@stateCommitmentChain_3078":{"entryPoint":1188,"id":3078,"parameterSlots":0,"returnSlots":0},"@toBytes32_3527":{"entryPoint":11318,"id":3527,"parameterSlots":1,"returnSlots":1},"@toNibbles_3612":{"entryPoint":10899,"id":3612,"parameterSlots":1,"returnSlots":1},"@toRLPItem_4498":{"entryPoint":9376,"id":4498,"parameterSlots":1,"returnSlots":1},"@unsafeBuildUnchecked_6095":{"entryPoint":7162,"id":6095,"parameterSlots":3,"returnSlots":1},"@verifyInclusionProof_3772":{"entryPoint":7889,"id":3772,"parameterSlots":4,"returnSlots":1},"@verifyInclusionProof_5243":{"entryPoint":7125,"id":5243,"parameterSlots":4,"returnSlots":1},"@verifySender_2799":{"entryPoint":4232,"id":2799,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":13794,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":13015,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":17569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":13899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":16781,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":13556,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":19964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":13081,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_ChainBatchHeader_$5361_memory_ptr":{"entryPoint":13577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_ChainInclusionProof_$5367_memory_ptr":{"entryPoint":13945,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_L2MessageInclusionProof_$5380_memory_ptr":{"entryPoint":14053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13492,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13382,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":17590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptrt_uint256t_struct$_L2MessageInclusionProof_$5380_memory_ptr":{"entryPoint":14305,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":16802,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":14529,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":19985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":13247,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":13127,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":14484,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":16497,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13427,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":16956,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16534,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14586,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":16246,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":15564,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":17029,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":16278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16858,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IStateCommitmentChain_$5457_to_t_address_fromStack":{"entryPoint":12629,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec_to_t_string_memory_ptr_fromStack":{"entryPoint":18202,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack":{"entryPoint":15254,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack":{"entryPoint":19615,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack":{"entryPoint":17831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack":{"entryPoint":19723,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack":{"entryPoint":17273,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack":{"entryPoint":18713,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack":{"entryPoint":19291,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack":{"entryPoint":18967,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack":{"entryPoint":17502,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack":{"entryPoint":17723,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack":{"entryPoint":20192,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack":{"entryPoint":15362,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack":{"entryPoint":17939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack":{"entryPoint":15146,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack":{"entryPoint":18821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack":{"entryPoint":19183,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack":{"entryPoint":18605,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack":{"entryPoint":14990,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack":{"entryPoint":19075,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack":{"entryPoint":20300,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack":{"entryPoint":15740,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack":{"entryPoint":19399,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack":{"entryPoint":18310,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack":{"entryPoint":19831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack":{"entryPoint":14686,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack":{"entryPoint":18094,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack":{"entryPoint":19507,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_ChainBatchHeader_$5361_memory_ptr_to_t_struct$_ChainBatchHeader_$5361_memory_ptr_fromStack":{"entryPoint":16335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_ChainInclusionProof_$5367_memory_ptr_to_t_struct$_ChainInclusionProof_$5367_memory_ptr_fromStack":{"entryPoint":16628,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":16231,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12739,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":17062,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12687,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack":{"entryPoint":17411,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":16106,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":17129,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":17340,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":17085,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":16979,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint8__to_t_uint8__nonPadded_inplace_fromStack_reversed":{"entryPoint":17434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13442,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":15903,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15944,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed":{"entryPoint":15841,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14601,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":15620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_struct$_ChainBatchHeader_$5361_memory_ptr_t_struct$_ChainInclusionProof_$5367_memory_ptr__to_t_bytes32_t_struct$_ChainBatchHeader_$5361_memory_ptr_t_struct$_ChainInclusionProof_$5367_memory_ptr__fromStack_reversed":{"entryPoint":16689,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed":{"entryPoint":15057,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed":{"entryPoint":14880,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_IStateCommitmentChain_$5457__to_t_address__fromStack_reversed":{"entryPoint":12644,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18237,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19650,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17308,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18748,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19326,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19002,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17537,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20227,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15397,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17974,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19218,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18640,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15025,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19110,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20335,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15775,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19434,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14721,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18129,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19542,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12754,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16190,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":12702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed":{"entryPoint":15579,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16121,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":12924,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12781,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":13745,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12951,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16481,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16453,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14753,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16521,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16464,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":16261,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14764,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16847,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14628,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":16020,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":20102,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":19898,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15647,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":18473,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":15500,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13320,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14574,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13523,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12517,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12729,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":12671,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":17367,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":15429,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IStateCommitmentChain_$5457_to_t_address":{"entryPoint":12611,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":12593,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":12559,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":16072,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13000,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14781,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":12875,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":12549,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":20030,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":16938,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":17019,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":16920,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":17052,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint8":{"entryPoint":17393,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint8":{"entryPoint":18424,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15453,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":18377,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":18006,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17635,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12828,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12801,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":13513,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":13518,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13789,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":12806,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12796,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12791,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12811,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":17380,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":16907,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec":{"entryPoint":18161,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033":{"entryPoint":15213,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da":{"entryPoint":19574,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403":{"entryPoint":17790,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a":{"entryPoint":19682,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492":{"entryPoint":17156,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40":{"entryPoint":18672,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67":{"entryPoint":19250,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1":{"entryPoint":18888,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c":{"entryPoint":17461,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728":{"entryPoint":17682,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e":{"entryPoint":20151,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec":{"entryPoint":15321,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5":{"entryPoint":17898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d":{"entryPoint":15105,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a":{"entryPoint":18780,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975":{"entryPoint":19142,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc":{"entryPoint":18526,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e":{"entryPoint":14949,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29":{"entryPoint":19034,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0":{"entryPoint":20259,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1":{"entryPoint":15699,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b":{"entryPoint":19358,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b":{"entryPoint":18269,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554":{"entryPoint":19790,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2":{"entryPoint":14645,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c":{"entryPoint":18053,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1":{"entryPoint":19466,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13338,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":16758,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":13533,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13469,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:62073:30","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:30","statements":[{"nodeType":"YulAssignment","src":"62:65:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:30"},"nodeType":"YulFunctionCall","src":"73:54:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:30"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:30","type":""}],"src":"7:126:30"},{"body":{"nodeType":"YulBlock","src":"171:28:30","statements":[{"nodeType":"YulAssignment","src":"181:12:30","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:30"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:30","type":""}],"src":"139:60:30"},{"body":{"nodeType":"YulBlock","src":"265:82:30","statements":[{"nodeType":"YulAssignment","src":"275:66:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:30"},"nodeType":"YulFunctionCall","src":"315:24:30"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:30"},"nodeType":"YulFunctionCall","src":"306:34:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:30"},"nodeType":"YulFunctionCall","src":"288:53:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:30"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:30","type":""}],"src":"205:142:30"},{"body":{"nodeType":"YulBlock","src":"413:66:30","statements":[{"nodeType":"YulAssignment","src":"423:50:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"467:5:30"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"436:30:30"},"nodeType":"YulFunctionCall","src":"436:37:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"423:9:30"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"393:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"403:9:30","type":""}],"src":"353:126:30"},{"body":{"nodeType":"YulBlock","src":"575:66:30","statements":[{"nodeType":"YulAssignment","src":"585:50:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"629:5:30"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"598:30:30"},"nodeType":"YulFunctionCall","src":"598:37:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"585:9:30"}]}]},"name":"convert_t_contract$_IStateCommitmentChain_$5457_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"555:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"565:9:30","type":""}],"src":"485:156:30"},{"body":{"nodeType":"YulBlock","src":"742:96:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"759:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"825:5:30"}],"functionName":{"name":"convert_t_contract$_IStateCommitmentChain_$5457_to_t_address","nodeType":"YulIdentifier","src":"764:60:30"},"nodeType":"YulFunctionCall","src":"764:67:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"752:6:30"},"nodeType":"YulFunctionCall","src":"752:80:30"},"nodeType":"YulExpressionStatement","src":"752:80:30"}]},"name":"abi_encode_t_contract$_IStateCommitmentChain_$5457_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"730:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"737:3:30","type":""}],"src":"647:191:30"},{"body":{"nodeType":"YulBlock","src":"972:154:30","statements":[{"nodeType":"YulAssignment","src":"982:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"990:3:30"},"nodeType":"YulFunctionCall","src":"990:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"982:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1092:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1105:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1116:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1101:3:30"},"nodeType":"YulFunctionCall","src":"1101:17:30"}],"functionName":{"name":"abi_encode_t_contract$_IStateCommitmentChain_$5457_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1018:73:30"},"nodeType":"YulFunctionCall","src":"1018:101:30"},"nodeType":"YulExpressionStatement","src":"1018:101:30"}]},"name":"abi_encode_tuple_t_contract$_IStateCommitmentChain_$5457__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"944:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"956:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"967:4:30","type":""}],"src":"844:282:30"},{"body":{"nodeType":"YulBlock","src":"1176:49:30","statements":[{"nodeType":"YulAssignment","src":"1186:33:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1201:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"1208:10:30","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1197:3:30"},"nodeType":"YulFunctionCall","src":"1197:22:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1186:7:30"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1158:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1168:7:30","type":""}],"src":"1132:93:30"},{"body":{"nodeType":"YulBlock","src":"1294:52:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1311:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1333:5:30"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1316:16:30"},"nodeType":"YulFunctionCall","src":"1316:23:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1304:6:30"},"nodeType":"YulFunctionCall","src":"1304:36:30"},"nodeType":"YulExpressionStatement","src":"1304:36:30"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1282:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1289:3:30","type":""}],"src":"1231:115:30"},{"body":{"nodeType":"YulBlock","src":"1448:122:30","statements":[{"nodeType":"YulAssignment","src":"1458:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1470:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1481:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1466:3:30"},"nodeType":"YulFunctionCall","src":"1466:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1458:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1536:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1549:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1560:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1545:3:30"},"nodeType":"YulFunctionCall","src":"1545:17:30"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1494:41:30"},"nodeType":"YulFunctionCall","src":"1494:69:30"},"nodeType":"YulExpressionStatement","src":"1494:69:30"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1420:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1432:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1443:4:30","type":""}],"src":"1352:218:30"},{"body":{"nodeType":"YulBlock","src":"1621:32:30","statements":[{"nodeType":"YulAssignment","src":"1631:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"1642:5:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1631:7:30"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1603:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1613:7:30","type":""}],"src":"1576:77:30"},{"body":{"nodeType":"YulBlock","src":"1724:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1741:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1764:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1746:17:30"},"nodeType":"YulFunctionCall","src":"1746:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1734:6:30"},"nodeType":"YulFunctionCall","src":"1734:37:30"},"nodeType":"YulExpressionStatement","src":"1734:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1712:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1719:3:30","type":""}],"src":"1659:118:30"},{"body":{"nodeType":"YulBlock","src":"1881:124:30","statements":[{"nodeType":"YulAssignment","src":"1891:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1903:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1899:3:30"},"nodeType":"YulFunctionCall","src":"1899:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1891:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1971:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1984:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"1995:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1980:3:30"},"nodeType":"YulFunctionCall","src":"1980:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1927:43:30"},"nodeType":"YulFunctionCall","src":"1927:71:30"},"nodeType":"YulExpressionStatement","src":"1927:71:30"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1853:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1865:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1876:4:30","type":""}],"src":"1783:222:30"},{"body":{"nodeType":"YulBlock","src":"2051:35:30","statements":[{"nodeType":"YulAssignment","src":"2061:19:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2077:2:30","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2071:5:30"},"nodeType":"YulFunctionCall","src":"2071:9:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2061:6:30"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2044:6:30","type":""}],"src":"2011:75:30"},{"body":{"nodeType":"YulBlock","src":"2181:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2198:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2201:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2191:6:30"},"nodeType":"YulFunctionCall","src":"2191:12:30"},"nodeType":"YulExpressionStatement","src":"2191:12:30"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2092:117:30"},{"body":{"nodeType":"YulBlock","src":"2304:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2321:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2324:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2314:6:30"},"nodeType":"YulFunctionCall","src":"2314:12:30"},"nodeType":"YulExpressionStatement","src":"2314:12:30"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2215:117:30"},{"body":{"nodeType":"YulBlock","src":"2427:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2444:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2447:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2437:6:30"},"nodeType":"YulFunctionCall","src":"2437:12:30"},"nodeType":"YulExpressionStatement","src":"2437:12:30"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2338:117:30"},{"body":{"nodeType":"YulBlock","src":"2550:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2567:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2570:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2560:6:30"},"nodeType":"YulFunctionCall","src":"2560:12:30"},"nodeType":"YulExpressionStatement","src":"2560:12:30"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2461:117:30"},{"body":{"nodeType":"YulBlock","src":"2632:54:30","statements":[{"nodeType":"YulAssignment","src":"2642:38:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2660:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"2667:2:30","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:30"},"nodeType":"YulFunctionCall","src":"2656:14:30"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2676:2:30","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2672:3:30"},"nodeType":"YulFunctionCall","src":"2672:7:30"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2652:3:30"},"nodeType":"YulFunctionCall","src":"2652:28:30"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2642:6:30"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2615:5:30","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2625:6:30","type":""}],"src":"2584:102:30"},{"body":{"nodeType":"YulBlock","src":"2720:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2737:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2740:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2730:6:30"},"nodeType":"YulFunctionCall","src":"2730:88:30"},"nodeType":"YulExpressionStatement","src":"2730:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2837:4:30","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:30"},"nodeType":"YulFunctionCall","src":"2827:15:30"},"nodeType":"YulExpressionStatement","src":"2827:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2858:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2861:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2851:6:30"},"nodeType":"YulFunctionCall","src":"2851:15:30"},"nodeType":"YulExpressionStatement","src":"2851:15:30"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2692:180:30"},{"body":{"nodeType":"YulBlock","src":"2921:238:30","statements":[{"nodeType":"YulVariableDeclaration","src":"2931:58:30","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2953:6:30"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2983:4:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2961:21:30"},"nodeType":"YulFunctionCall","src":"2961:27:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2949:3:30"},"nodeType":"YulFunctionCall","src":"2949:40:30"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2935:10:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"3100:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3102:16:30"},"nodeType":"YulFunctionCall","src":"3102:18:30"},"nodeType":"YulExpressionStatement","src":"3102:18:30"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3043:10:30"},{"kind":"number","nodeType":"YulLiteral","src":"3055:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3040:2:30"},"nodeType":"YulFunctionCall","src":"3040:34:30"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3079:10:30"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3091:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3076:2:30"},"nodeType":"YulFunctionCall","src":"3076:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3037:2:30"},"nodeType":"YulFunctionCall","src":"3037:62:30"},"nodeType":"YulIf","src":"3034:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3138:2:30","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3142:10:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3131:6:30"},"nodeType":"YulFunctionCall","src":"3131:22:30"},"nodeType":"YulExpressionStatement","src":"3131:22:30"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2907:6:30","type":""},{"name":"size","nodeType":"YulTypedName","src":"2915:4:30","type":""}],"src":"2878:281:30"},{"body":{"nodeType":"YulBlock","src":"3206:88:30","statements":[{"nodeType":"YulAssignment","src":"3216:30:30","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3226:18:30"},"nodeType":"YulFunctionCall","src":"3226:20:30"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3216:6:30"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3275:6:30"},{"name":"size","nodeType":"YulIdentifier","src":"3283:4:30"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3255:19:30"},"nodeType":"YulFunctionCall","src":"3255:33:30"},"nodeType":"YulExpressionStatement","src":"3255:33:30"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3190:4:30","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3199:6:30","type":""}],"src":"3165:129:30"},{"body":{"nodeType":"YulBlock","src":"3366:241:30","statements":[{"body":{"nodeType":"YulBlock","src":"3471:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3473:16:30"},"nodeType":"YulFunctionCall","src":"3473:18:30"},"nodeType":"YulExpressionStatement","src":"3473:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3443:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"3451:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3440:2:30"},"nodeType":"YulFunctionCall","src":"3440:30:30"},"nodeType":"YulIf","src":"3437:56:30"},{"nodeType":"YulAssignment","src":"3503:37:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3533:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3511:21:30"},"nodeType":"YulFunctionCall","src":"3511:29:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3503:4:30"}]},{"nodeType":"YulAssignment","src":"3577:23:30","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3589:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"3595:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3585:3:30"},"nodeType":"YulFunctionCall","src":"3585:15:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3577:4:30"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3350:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3361:4:30","type":""}],"src":"3300:307:30"},{"body":{"nodeType":"YulBlock","src":"3677:82:30","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3700:3:30"},{"name":"src","nodeType":"YulIdentifier","src":"3705:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"3710:6:30"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3687:12:30"},"nodeType":"YulFunctionCall","src":"3687:30:30"},"nodeType":"YulExpressionStatement","src":"3687:30:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3737:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"3742:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:30"},"nodeType":"YulFunctionCall","src":"3733:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"3751:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3726:6:30"},"nodeType":"YulFunctionCall","src":"3726:27:30"},"nodeType":"YulExpressionStatement","src":"3726:27:30"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3659:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3664:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"3669:6:30","type":""}],"src":"3613:146:30"},{"body":{"nodeType":"YulBlock","src":"3848:340:30","statements":[{"nodeType":"YulAssignment","src":"3858:74:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3924:6:30"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3883:40:30"},"nodeType":"YulFunctionCall","src":"3883:48:30"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3867:15:30"},"nodeType":"YulFunctionCall","src":"3867:65:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3858:5:30"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3948:5:30"},{"name":"length","nodeType":"YulIdentifier","src":"3955:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3941:6:30"},"nodeType":"YulFunctionCall","src":"3941:21:30"},"nodeType":"YulExpressionStatement","src":"3941:21:30"},{"nodeType":"YulVariableDeclaration","src":"3971:27:30","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3986:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"3993:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3982:3:30"},"nodeType":"YulFunctionCall","src":"3982:16:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3975:3:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4036:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4038:77:30"},"nodeType":"YulFunctionCall","src":"4038:79:30"},"nodeType":"YulExpressionStatement","src":"4038:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4017:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"4022:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4013:3:30"},"nodeType":"YulFunctionCall","src":"4013:16:30"},{"name":"end","nodeType":"YulIdentifier","src":"4031:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4010:2:30"},"nodeType":"YulFunctionCall","src":"4010:25:30"},"nodeType":"YulIf","src":"4007:112:30"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4165:3:30"},{"name":"dst","nodeType":"YulIdentifier","src":"4170:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"4175:6:30"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4128:36:30"},"nodeType":"YulFunctionCall","src":"4128:54:30"},"nodeType":"YulExpressionStatement","src":"4128:54:30"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3821:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"3826:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"3834:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3842:5:30","type":""}],"src":"3765:423:30"},{"body":{"nodeType":"YulBlock","src":"4268:277:30","statements":[{"body":{"nodeType":"YulBlock","src":"4317:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4319:77:30"},"nodeType":"YulFunctionCall","src":"4319:79:30"},"nodeType":"YulExpressionStatement","src":"4319:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4296:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4304:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4292:3:30"},"nodeType":"YulFunctionCall","src":"4292:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"4311:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4288:3:30"},"nodeType":"YulFunctionCall","src":"4288:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4281:6:30"},"nodeType":"YulFunctionCall","src":"4281:35:30"},"nodeType":"YulIf","src":"4278:122:30"},{"nodeType":"YulVariableDeclaration","src":"4409:34:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4436:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4423:12:30"},"nodeType":"YulFunctionCall","src":"4423:20:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4413:6:30","type":""}]},{"nodeType":"YulAssignment","src":"4452:87:30","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4512:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4520:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4508:3:30"},"nodeType":"YulFunctionCall","src":"4508:17:30"},{"name":"length","nodeType":"YulIdentifier","src":"4527:6:30"},{"name":"end","nodeType":"YulIdentifier","src":"4535:3:30"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4461:46:30"},"nodeType":"YulFunctionCall","src":"4461:78:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4452:5:30"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4246:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"4254:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4262:5:30","type":""}],"src":"4207:338:30"},{"body":{"nodeType":"YulBlock","src":"4652:729:30","statements":[{"body":{"nodeType":"YulBlock","src":"4698:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4700:77:30"},"nodeType":"YulFunctionCall","src":"4700:79:30"},"nodeType":"YulExpressionStatement","src":"4700:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4673:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"4682:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4669:3:30"},"nodeType":"YulFunctionCall","src":"4669:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"4694:2:30","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4665:3:30"},"nodeType":"YulFunctionCall","src":"4665:32:30"},"nodeType":"YulIf","src":"4662:119:30"},{"nodeType":"YulBlock","src":"4791:286:30","statements":[{"nodeType":"YulVariableDeclaration","src":"4806:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4837:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"4848:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4833:3:30"},"nodeType":"YulFunctionCall","src":"4833:17:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4820:12:30"},"nodeType":"YulFunctionCall","src":"4820:31:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4810:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"4898:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4900:77:30"},"nodeType":"YulFunctionCall","src":"4900:79:30"},"nodeType":"YulExpressionStatement","src":"4900:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4870:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"4878:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4867:2:30"},"nodeType":"YulFunctionCall","src":"4867:30:30"},"nodeType":"YulIf","src":"4864:117:30"},{"nodeType":"YulAssignment","src":"4995:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5039:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"5050:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:30"},"nodeType":"YulFunctionCall","src":"5035:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5005:29:30"},"nodeType":"YulFunctionCall","src":"5005:62:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4995:6:30"}]}]},{"nodeType":"YulBlock","src":"5087:287:30","statements":[{"nodeType":"YulVariableDeclaration","src":"5102:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5133:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5144:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5129:3:30"},"nodeType":"YulFunctionCall","src":"5129:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5116:12:30"},"nodeType":"YulFunctionCall","src":"5116:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5106:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5195:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5197:77:30"},"nodeType":"YulFunctionCall","src":"5197:79:30"},"nodeType":"YulExpressionStatement","src":"5197:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5167:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"5175:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5164:2:30"},"nodeType":"YulFunctionCall","src":"5164:30:30"},"nodeType":"YulIf","src":"5161:117:30"},{"nodeType":"YulAssignment","src":"5292:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:30"},"nodeType":"YulFunctionCall","src":"5332:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5302:29:30"},"nodeType":"YulFunctionCall","src":"5302:62:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5292:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4614:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4625:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4637:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4645:6:30","type":""}],"src":"4551:830:30"},{"body":{"nodeType":"YulBlock","src":"5462:432:30","statements":[{"body":{"nodeType":"YulBlock","src":"5508:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5510:77:30"},"nodeType":"YulFunctionCall","src":"5510:79:30"},"nodeType":"YulExpressionStatement","src":"5510:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5483:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"5492:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5479:3:30"},"nodeType":"YulFunctionCall","src":"5479:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"5504:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5475:3:30"},"nodeType":"YulFunctionCall","src":"5475:32:30"},"nodeType":"YulIf","src":"5472:119:30"},{"nodeType":"YulBlock","src":"5601:286:30","statements":[{"nodeType":"YulVariableDeclaration","src":"5616:45:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5647:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"5658:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5643:3:30"},"nodeType":"YulFunctionCall","src":"5643:17:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5630:12:30"},"nodeType":"YulFunctionCall","src":"5630:31:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5620:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"5708:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5710:77:30"},"nodeType":"YulFunctionCall","src":"5710:79:30"},"nodeType":"YulExpressionStatement","src":"5710:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5680:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"5688:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5677:2:30"},"nodeType":"YulFunctionCall","src":"5677:30:30"},"nodeType":"YulIf","src":"5674:117:30"},{"nodeType":"YulAssignment","src":"5805:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5849:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"5860:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5845:3:30"},"nodeType":"YulFunctionCall","src":"5845:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5869:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5815:29:30"},"nodeType":"YulFunctionCall","src":"5815:62:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5805:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5432:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5443:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5455:6:30","type":""}],"src":"5387:507:30"},{"body":{"nodeType":"YulBlock","src":"5945:51:30","statements":[{"nodeType":"YulAssignment","src":"5955:35:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5984:5:30"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5966:17:30"},"nodeType":"YulFunctionCall","src":"5966:24:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5955:7:30"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5927:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5937:7:30","type":""}],"src":"5900:96:30"},{"body":{"nodeType":"YulBlock","src":"6045:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"6102:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6111:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6114:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6104:6:30"},"nodeType":"YulFunctionCall","src":"6104:12:30"},"nodeType":"YulExpressionStatement","src":"6104:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6068:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6093:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6075:17:30"},"nodeType":"YulFunctionCall","src":"6075:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6065:2:30"},"nodeType":"YulFunctionCall","src":"6065:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6058:6:30"},"nodeType":"YulFunctionCall","src":"6058:43:30"},"nodeType":"YulIf","src":"6055:63:30"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6038:5:30","type":""}],"src":"6002:122:30"},{"body":{"nodeType":"YulBlock","src":"6182:87:30","statements":[{"nodeType":"YulAssignment","src":"6192:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6214:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6201:12:30"},"nodeType":"YulFunctionCall","src":"6201:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6192:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6257:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6230:26:30"},"nodeType":"YulFunctionCall","src":"6230:33:30"},"nodeType":"YulExpressionStatement","src":"6230:33:30"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6160:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"6168:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6176:5:30","type":""}],"src":"6130:139:30"},{"body":{"nodeType":"YulBlock","src":"6341:263:30","statements":[{"body":{"nodeType":"YulBlock","src":"6387:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6389:77:30"},"nodeType":"YulFunctionCall","src":"6389:79:30"},"nodeType":"YulExpressionStatement","src":"6389:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6362:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"6371:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6358:3:30"},"nodeType":"YulFunctionCall","src":"6358:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"6383:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6354:3:30"},"nodeType":"YulFunctionCall","src":"6354:32:30"},"nodeType":"YulIf","src":"6351:119:30"},{"nodeType":"YulBlock","src":"6480:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"6495:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"6509:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6499:6:30","type":""}]},{"nodeType":"YulAssignment","src":"6524:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6559:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"6570:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6555:3:30"},"nodeType":"YulFunctionCall","src":"6555:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6579:7:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6534:20:30"},"nodeType":"YulFunctionCall","src":"6534:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6524:6:30"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6311:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6322:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6334:6:30","type":""}],"src":"6275:329:30"},{"body":{"nodeType":"YulBlock","src":"6675:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6692:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6715:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6697:17:30"},"nodeType":"YulFunctionCall","src":"6697:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6685:6:30"},"nodeType":"YulFunctionCall","src":"6685:37:30"},"nodeType":"YulExpressionStatement","src":"6685:37:30"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6663:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6670:3:30","type":""}],"src":"6610:118:30"},{"body":{"nodeType":"YulBlock","src":"6832:124:30","statements":[{"nodeType":"YulAssignment","src":"6842:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6854:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6865:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6850:3:30"},"nodeType":"YulFunctionCall","src":"6850:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6842:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6922:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6935:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"6946:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6931:3:30"},"nodeType":"YulFunctionCall","src":"6931:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6878:43:30"},"nodeType":"YulFunctionCall","src":"6878:71:30"},"nodeType":"YulExpressionStatement","src":"6878:71:30"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6804:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6816:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6827:4:30","type":""}],"src":"6734:222:30"},{"body":{"nodeType":"YulBlock","src":"7005:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"7062:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7071:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7074:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7064:6:30"},"nodeType":"YulFunctionCall","src":"7064:12:30"},"nodeType":"YulExpressionStatement","src":"7064:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7028:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7053:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7035:17:30"},"nodeType":"YulFunctionCall","src":"7035:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7025:2:30"},"nodeType":"YulFunctionCall","src":"7025:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7018:6:30"},"nodeType":"YulFunctionCall","src":"7018:43:30"},"nodeType":"YulIf","src":"7015:63:30"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6998:5:30","type":""}],"src":"6962:122:30"},{"body":{"nodeType":"YulBlock","src":"7142:87:30","statements":[{"nodeType":"YulAssignment","src":"7152:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7174:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7161:12:30"},"nodeType":"YulFunctionCall","src":"7161:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7152:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7217:5:30"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7190:26:30"},"nodeType":"YulFunctionCall","src":"7190:33:30"},"nodeType":"YulExpressionStatement","src":"7190:33:30"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7120:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"7128:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7136:5:30","type":""}],"src":"7090:139:30"},{"body":{"nodeType":"YulBlock","src":"7324:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7341:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7344:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7334:6:30"},"nodeType":"YulFunctionCall","src":"7334:12:30"},"nodeType":"YulExpressionStatement","src":"7334:12:30"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"7235:117:30"},{"body":{"nodeType":"YulBlock","src":"7447:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7464:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7467:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7457:6:30"},"nodeType":"YulFunctionCall","src":"7457:12:30"},"nodeType":"YulExpressionStatement","src":"7457:12:30"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"7358:117:30"},{"body":{"nodeType":"YulBlock","src":"7526:32:30","statements":[{"nodeType":"YulAssignment","src":"7536:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"7547:5:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7536:7:30"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7508:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7518:7:30","type":""}],"src":"7481:77:30"},{"body":{"nodeType":"YulBlock","src":"7607:79:30","statements":[{"body":{"nodeType":"YulBlock","src":"7664:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7673:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7676:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7666:6:30"},"nodeType":"YulFunctionCall","src":"7666:12:30"},"nodeType":"YulExpressionStatement","src":"7666:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7630:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7655:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7637:17:30"},"nodeType":"YulFunctionCall","src":"7637:24:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7627:2:30"},"nodeType":"YulFunctionCall","src":"7627:35:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7620:6:30"},"nodeType":"YulFunctionCall","src":"7620:43:30"},"nodeType":"YulIf","src":"7617:63:30"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7600:5:30","type":""}],"src":"7564:122:30"},{"body":{"nodeType":"YulBlock","src":"7744:87:30","statements":[{"nodeType":"YulAssignment","src":"7754:29:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7776:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7763:12:30"},"nodeType":"YulFunctionCall","src":"7763:20:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7754:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7819:5:30"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"7792:26:30"},"nodeType":"YulFunctionCall","src":"7792:33:30"},"nodeType":"YulExpressionStatement","src":"7792:33:30"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7722:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"7730:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7738:5:30","type":""}],"src":"7692:139:30"},{"body":{"nodeType":"YulBlock","src":"7957:1181:30","statements":[{"body":{"nodeType":"YulBlock","src":"8001:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"8003:77:30"},"nodeType":"YulFunctionCall","src":"8003:79:30"},"nodeType":"YulExpressionStatement","src":"8003:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"7978:3:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"7983:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7974:3:30"},"nodeType":"YulFunctionCall","src":"7974:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"7995:4:30","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7970:3:30"},"nodeType":"YulFunctionCall","src":"7970:30:30"},"nodeType":"YulIf","src":"7967:117:30"},{"nodeType":"YulAssignment","src":"8093:30:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8118:4:30","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8102:15:30"},"nodeType":"YulFunctionCall","src":"8102:21:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8093:5:30"}]},{"nodeType":"YulBlock","src":"8133:156:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8174:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8188:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8178:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8214:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"8221:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8210:3:30"},"nodeType":"YulFunctionCall","src":"8210:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8253:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"8264:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8249:3:30"},"nodeType":"YulFunctionCall","src":"8249:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"8273:3:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8228:20:30"},"nodeType":"YulFunctionCall","src":"8228:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8203:6:30"},"nodeType":"YulFunctionCall","src":"8203:75:30"},"nodeType":"YulExpressionStatement","src":"8203:75:30"}]},{"nodeType":"YulBlock","src":"8299:156:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8339:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8353:2:30","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8343:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8380:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"8387:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8376:3:30"},"nodeType":"YulFunctionCall","src":"8376:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"8430:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:30"},"nodeType":"YulFunctionCall","src":"8415:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"8439:3:30"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8394:20:30"},"nodeType":"YulFunctionCall","src":"8394:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8369:6:30"},"nodeType":"YulFunctionCall","src":"8369:75:30"},"nodeType":"YulExpressionStatement","src":"8369:75:30"}]},{"nodeType":"YulBlock","src":"8465:156:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8505:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8519:2:30","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8509:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8546:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"8553:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:30"},"nodeType":"YulFunctionCall","src":"8542:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8585:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"8596:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8581:3:30"},"nodeType":"YulFunctionCall","src":"8581:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"8605:3:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8560:20:30"},"nodeType":"YulFunctionCall","src":"8560:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8535:6:30"},"nodeType":"YulFunctionCall","src":"8535:75:30"},"nodeType":"YulExpressionStatement","src":"8535:75:30"}]},{"nodeType":"YulBlock","src":"8631:164:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8679:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"8693:2:30","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8683:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8720:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"8727:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8716:3:30"},"nodeType":"YulFunctionCall","src":"8716:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8759:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"8770:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8755:3:30"},"nodeType":"YulFunctionCall","src":"8755:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"8779:3:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8734:20:30"},"nodeType":"YulFunctionCall","src":"8734:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8709:6:30"},"nodeType":"YulFunctionCall","src":"8709:75:30"},"nodeType":"YulExpressionStatement","src":"8709:75:30"}]},{"nodeType":"YulBlock","src":"8805:326:30","statements":[{"nodeType":"YulVariableDeclaration","src":"8845:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8876:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"8887:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8872:3:30"},"nodeType":"YulFunctionCall","src":"8872:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8859:12:30"},"nodeType":"YulFunctionCall","src":"8859:33:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8849:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"8939:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"8941:77:30"},"nodeType":"YulFunctionCall","src":"8941:79:30"},"nodeType":"YulExpressionStatement","src":"8941:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8911:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"8919:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8908:2:30"},"nodeType":"YulFunctionCall","src":"8908:30:30"},"nodeType":"YulIf","src":"8905:117:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9047:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9043:3:30"},"nodeType":"YulFunctionCall","src":"9043:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9095:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"9106:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9091:3:30"},"nodeType":"YulFunctionCall","src":"9091:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"9115:3:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9061:29:30"},"nodeType":"YulFunctionCall","src":"9061:58:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9036:6:30"},"nodeType":"YulFunctionCall","src":"9036:84:30"},"nodeType":"YulExpressionStatement","src":"9036:84:30"}]}]},"name":"abi_decode_t_struct$_ChainBatchHeader_$5361_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7932:9:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"7943:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7951:5:30","type":""}],"src":"7868:1270:30"},{"body":{"nodeType":"YulBlock","src":"9226:229:30","statements":[{"body":{"nodeType":"YulBlock","src":"9331:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9333:16:30"},"nodeType":"YulFunctionCall","src":"9333:18:30"},"nodeType":"YulExpressionStatement","src":"9333:18:30"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9303:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"9311:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9300:2:30"},"nodeType":"YulFunctionCall","src":"9300:30:30"},"nodeType":"YulIf","src":"9297:56:30"},{"nodeType":"YulAssignment","src":"9363:25:30","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9375:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"9383:4:30","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9371:3:30"},"nodeType":"YulFunctionCall","src":"9371:17:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9363:4:30"}]},{"nodeType":"YulAssignment","src":"9425:23:30","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9437:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"9443:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9433:3:30"},"nodeType":"YulFunctionCall","src":"9433:15:30"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9425:4:30"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9210:6:30","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9221:4:30","type":""}],"src":"9144:311:30"},{"body":{"nodeType":"YulBlock","src":"9550:28:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9567:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9570:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9560:6:30"},"nodeType":"YulFunctionCall","src":"9560:12:30"},"nodeType":"YulExpressionStatement","src":"9560:12:30"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"9461:117:30"},{"body":{"nodeType":"YulBlock","src":"9703:608:30","statements":[{"nodeType":"YulAssignment","src":"9713:90:30","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9795:6:30"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9738:56:30"},"nodeType":"YulFunctionCall","src":"9738:64:30"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9722:15:30"},"nodeType":"YulFunctionCall","src":"9722:81:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9713:5:30"}]},{"nodeType":"YulVariableDeclaration","src":"9812:16:30","value":{"name":"array","nodeType":"YulIdentifier","src":"9823:5:30"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9816:3:30","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9845:5:30"},{"name":"length","nodeType":"YulIdentifier","src":"9852:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9838:6:30"},"nodeType":"YulFunctionCall","src":"9838:21:30"},"nodeType":"YulExpressionStatement","src":"9838:21:30"},{"nodeType":"YulAssignment","src":"9868:23:30","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9879:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"9886:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9875:3:30"},"nodeType":"YulFunctionCall","src":"9875:16:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9868:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"9901:44:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9919:6:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9931:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"9939:4:30","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9927:3:30"},"nodeType":"YulFunctionCall","src":"9927:17:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9915:3:30"},"nodeType":"YulFunctionCall","src":"9915:30:30"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9905:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"9973:103:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9987:77:30"},"nodeType":"YulFunctionCall","src":"9987:79:30"},"nodeType":"YulExpressionStatement","src":"9987:79:30"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9960:6:30"},{"name":"end","nodeType":"YulIdentifier","src":"9968:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9957:2:30"},"nodeType":"YulFunctionCall","src":"9957:15:30"},"nodeType":"YulIf","src":"9954:122:30"},{"body":{"nodeType":"YulBlock","src":"10161:144:30","statements":[{"nodeType":"YulVariableDeclaration","src":"10176:21:30","value":{"name":"src","nodeType":"YulIdentifier","src":"10194:3:30"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"10180:10:30","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10218:3:30"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"10244:10:30"},{"name":"end","nodeType":"YulIdentifier","src":"10256:3:30"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10223:20:30"},"nodeType":"YulFunctionCall","src":"10223:37:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10211:6:30"},"nodeType":"YulFunctionCall","src":"10211:50:30"},"nodeType":"YulExpressionStatement","src":"10211:50:30"},{"nodeType":"YulAssignment","src":"10274:21:30","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10285:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"10290:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10281:3:30"},"nodeType":"YulFunctionCall","src":"10281:14:30"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"10274:3:30"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10114:3:30"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"10119:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10111:2:30"},"nodeType":"YulFunctionCall","src":"10111:15:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10127:25:30","statements":[{"nodeType":"YulAssignment","src":"10129:21:30","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10140:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"10145:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10136:3:30"},"nodeType":"YulFunctionCall","src":"10136:14:30"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"10129:3:30"}]}]},"pre":{"nodeType":"YulBlock","src":"10089:21:30","statements":[{"nodeType":"YulVariableDeclaration","src":"10091:17:30","value":{"name":"offset","nodeType":"YulIdentifier","src":"10102:6:30"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"10095:3:30","type":""}]}]},"src":"10085:220:30"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9673:6:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"9681:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"9689:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9697:5:30","type":""}],"src":"9601:710:30"},{"body":{"nodeType":"YulBlock","src":"10411:293:30","statements":[{"body":{"nodeType":"YulBlock","src":"10460:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10462:77:30"},"nodeType":"YulFunctionCall","src":"10462:79:30"},"nodeType":"YulExpressionStatement","src":"10462:79:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10439:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"10447:4:30","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10435:3:30"},"nodeType":"YulFunctionCall","src":"10435:17:30"},{"name":"end","nodeType":"YulIdentifier","src":"10454:3:30"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10431:3:30"},"nodeType":"YulFunctionCall","src":"10431:27:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10424:6:30"},"nodeType":"YulFunctionCall","src":"10424:35:30"},"nodeType":"YulIf","src":"10421:122:30"},{"nodeType":"YulVariableDeclaration","src":"10552:34:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10579:6:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10566:12:30"},"nodeType":"YulFunctionCall","src":"10566:20:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10556:6:30","type":""}]},{"nodeType":"YulAssignment","src":"10595:103:30","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10671:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"10679:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10667:3:30"},"nodeType":"YulFunctionCall","src":"10667:17:30"},{"name":"length","nodeType":"YulIdentifier","src":"10686:6:30"},{"name":"end","nodeType":"YulIdentifier","src":"10694:3:30"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10604:62:30"},"nodeType":"YulFunctionCall","src":"10604:94:30"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10595:5:30"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10389:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"10397:3:30","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10405:5:30","type":""}],"src":"10334:370:30"},{"body":{"nodeType":"YulBlock","src":"10836:684:30","statements":[{"body":{"nodeType":"YulBlock","src":"10880:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"10882:77:30"},"nodeType":"YulFunctionCall","src":"10882:79:30"},"nodeType":"YulExpressionStatement","src":"10882:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"10857:3:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"10862:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10853:3:30"},"nodeType":"YulFunctionCall","src":"10853:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"10874:4:30","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10849:3:30"},"nodeType":"YulFunctionCall","src":"10849:30:30"},"nodeType":"YulIf","src":"10846:117:30"},{"nodeType":"YulAssignment","src":"10972:30:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10997:4:30","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10981:15:30"},"nodeType":"YulFunctionCall","src":"10981:21:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10972:5:30"}]},{"nodeType":"YulBlock","src":"11012:151:30","statements":[{"nodeType":"YulVariableDeclaration","src":"11048:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"11062:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11052:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11088:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"11095:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11084:3:30"},"nodeType":"YulFunctionCall","src":"11084:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11127:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"11138:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11123:3:30"},"nodeType":"YulFunctionCall","src":"11123:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"11147:3:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11102:20:30"},"nodeType":"YulFunctionCall","src":"11102:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11077:6:30"},"nodeType":"YulFunctionCall","src":"11077:75:30"},"nodeType":"YulExpressionStatement","src":"11077:75:30"}]},{"nodeType":"YulBlock","src":"11173:340:30","statements":[{"nodeType":"YulVariableDeclaration","src":"11212:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11243:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"11254:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11239:3:30"},"nodeType":"YulFunctionCall","src":"11239:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11226:12:30"},"nodeType":"YulFunctionCall","src":"11226:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11216:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"11305:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"11307:77:30"},"nodeType":"YulFunctionCall","src":"11307:79:30"},"nodeType":"YulExpressionStatement","src":"11307:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11277:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"11285:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11274:2:30"},"nodeType":"YulFunctionCall","src":"11274:30:30"},"nodeType":"YulIf","src":"11271:117:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11413:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"11420:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11409:3:30"},"nodeType":"YulFunctionCall","src":"11409:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"11488:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11473:3:30"},"nodeType":"YulFunctionCall","src":"11473:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"11497:3:30"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11427:45:30"},"nodeType":"YulFunctionCall","src":"11427:74:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11402:6:30"},"nodeType":"YulFunctionCall","src":"11402:100:30"},"nodeType":"YulExpressionStatement","src":"11402:100:30"}]}]},"name":"abi_decode_t_struct$_ChainInclusionProof_$5367_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10811:9:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"10822:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10830:5:30","type":""}],"src":"10744:776:30"},{"body":{"nodeType":"YulBlock","src":"11660:1764:30","statements":[{"body":{"nodeType":"YulBlock","src":"11704:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"11706:77:30"},"nodeType":"YulFunctionCall","src":"11706:79:30"},"nodeType":"YulExpressionStatement","src":"11706:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"11681:3:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"11686:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11677:3:30"},"nodeType":"YulFunctionCall","src":"11677:19:30"},{"kind":"number","nodeType":"YulLiteral","src":"11698:4:30","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11673:3:30"},"nodeType":"YulFunctionCall","src":"11673:30:30"},"nodeType":"YulIf","src":"11670:117:30"},{"nodeType":"YulAssignment","src":"11796:30:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11821:4:30","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11805:15:30"},"nodeType":"YulFunctionCall","src":"11805:21:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11796:5:30"}]},{"nodeType":"YulBlock","src":"11836:155:30","statements":[{"nodeType":"YulVariableDeclaration","src":"11876:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"11890:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11880:6:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11916:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"11923:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11912:3:30"},"nodeType":"YulFunctionCall","src":"11912:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11955:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"11966:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11951:3:30"},"nodeType":"YulFunctionCall","src":"11951:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"11975:3:30"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11930:20:30"},"nodeType":"YulFunctionCall","src":"11930:49:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11905:6:30"},"nodeType":"YulFunctionCall","src":"11905:75:30"},"nodeType":"YulExpressionStatement","src":"11905:75:30"}]},{"nodeType":"YulBlock","src":"12001:361:30","statements":[{"nodeType":"YulVariableDeclaration","src":"12052:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12094:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:30"},"nodeType":"YulFunctionCall","src":"12079:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12066:12:30"},"nodeType":"YulFunctionCall","src":"12066:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12056:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"12145:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"12147:77:30"},"nodeType":"YulFunctionCall","src":"12147:79:30"},"nodeType":"YulExpressionStatement","src":"12147:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12117:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"12125:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12114:2:30"},"nodeType":"YulFunctionCall","src":"12114:30:30"},"nodeType":"YulIf","src":"12111:117:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12253:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"12260:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12249:3:30"},"nodeType":"YulFunctionCall","src":"12249:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12326:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"12337:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12322:3:30"},"nodeType":"YulFunctionCall","src":"12322:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"12346:3:30"}],"functionName":{"name":"abi_decode_t_struct$_ChainBatchHeader_$5361_memory_ptr","nodeType":"YulIdentifier","src":"12267:54:30"},"nodeType":"YulFunctionCall","src":"12267:83:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12242:6:30"},"nodeType":"YulFunctionCall","src":"12242:109:30"},"nodeType":"YulExpressionStatement","src":"12242:109:30"}]},{"nodeType":"YulBlock","src":"12372:358:30","statements":[{"nodeType":"YulVariableDeclaration","src":"12417:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12448:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12459:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12444:3:30"},"nodeType":"YulFunctionCall","src":"12444:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12431:12:30"},"nodeType":"YulFunctionCall","src":"12431:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12421:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"12510:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"12512:77:30"},"nodeType":"YulFunctionCall","src":"12512:79:30"},"nodeType":"YulExpressionStatement","src":"12512:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12482:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"12490:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12479:2:30"},"nodeType":"YulFunctionCall","src":"12479:30:30"},"nodeType":"YulIf","src":"12476:117:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12618:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"12625:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12614:3:30"},"nodeType":"YulFunctionCall","src":"12614:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12694:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"12705:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12690:3:30"},"nodeType":"YulFunctionCall","src":"12690:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"12714:3:30"}],"functionName":{"name":"abi_decode_t_struct$_ChainInclusionProof_$5367_memory_ptr","nodeType":"YulIdentifier","src":"12632:57:30"},"nodeType":"YulFunctionCall","src":"12632:86:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12607:6:30"},"nodeType":"YulFunctionCall","src":"12607:112:30"},"nodeType":"YulExpressionStatement","src":"12607:112:30"}]},{"nodeType":"YulBlock","src":"12740:332:30","statements":[{"nodeType":"YulVariableDeclaration","src":"12787:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12818:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"12829:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12814:3:30"},"nodeType":"YulFunctionCall","src":"12814:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12801:12:30"},"nodeType":"YulFunctionCall","src":"12801:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12791:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"12880:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"12882:77:30"},"nodeType":"YulFunctionCall","src":"12882:79:30"},"nodeType":"YulExpressionStatement","src":"12882:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12852:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"12860:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12849:2:30"},"nodeType":"YulFunctionCall","src":"12849:30:30"},"nodeType":"YulIf","src":"12846:117:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12988:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"12995:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12984:3:30"},"nodeType":"YulFunctionCall","src":"12984:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13036:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"13047:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13032:3:30"},"nodeType":"YulFunctionCall","src":"13032:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"13056:3:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13002:29:30"},"nodeType":"YulFunctionCall","src":"13002:58:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12977:6:30"},"nodeType":"YulFunctionCall","src":"12977:84:30"},"nodeType":"YulExpressionStatement","src":"12977:84:30"}]},{"nodeType":"YulBlock","src":"13082:335:30","statements":[{"nodeType":"YulVariableDeclaration","src":"13131:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13162:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"13173:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13158:3:30"},"nodeType":"YulFunctionCall","src":"13158:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13145:12:30"},"nodeType":"YulFunctionCall","src":"13145:33:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13135:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"13225:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"13227:77:30"},"nodeType":"YulFunctionCall","src":"13227:79:30"},"nodeType":"YulExpressionStatement","src":"13227:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13197:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"13205:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13194:2:30"},"nodeType":"YulFunctionCall","src":"13194:30:30"},"nodeType":"YulIf","src":"13191:117:30"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13333:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"13340:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13329:3:30"},"nodeType":"YulFunctionCall","src":"13329:16:30"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13381:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"13392:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13377:3:30"},"nodeType":"YulFunctionCall","src":"13377:22:30"},{"name":"end","nodeType":"YulIdentifier","src":"13401:3:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13347:29:30"},"nodeType":"YulFunctionCall","src":"13347:58:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13322:6:30"},"nodeType":"YulFunctionCall","src":"13322:84:30"},"nodeType":"YulExpressionStatement","src":"13322:84:30"}]}]},"name":"abi_decode_t_struct$_L2MessageInclusionProof_$5380_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11635:9:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"11646:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11654:5:30","type":""}],"src":"11564:1860:30"},{"body":{"nodeType":"YulBlock","src":"13614:1147:30","statements":[{"body":{"nodeType":"YulBlock","src":"13661:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13663:77:30"},"nodeType":"YulFunctionCall","src":"13663:79:30"},"nodeType":"YulExpressionStatement","src":"13663:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13635:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"13644:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13631:3:30"},"nodeType":"YulFunctionCall","src":"13631:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"13656:3:30","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13627:3:30"},"nodeType":"YulFunctionCall","src":"13627:33:30"},"nodeType":"YulIf","src":"13624:120:30"},{"nodeType":"YulBlock","src":"13754:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"13769:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"13783:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13773:6:30","type":""}]},{"nodeType":"YulAssignment","src":"13798:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13833:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"13844:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13829:3:30"},"nodeType":"YulFunctionCall","src":"13829:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13853:7:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13808:20:30"},"nodeType":"YulFunctionCall","src":"13808:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13798:6:30"}]}]},{"nodeType":"YulBlock","src":"13881:118:30","statements":[{"nodeType":"YulVariableDeclaration","src":"13896:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"13910:2:30","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13900:6:30","type":""}]},{"nodeType":"YulAssignment","src":"13926:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13961:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"13972:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13957:3:30"},"nodeType":"YulFunctionCall","src":"13957:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13981:7:30"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13936:20:30"},"nodeType":"YulFunctionCall","src":"13936:53:30"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13926:6:30"}]}]},{"nodeType":"YulBlock","src":"14009:287:30","statements":[{"nodeType":"YulVariableDeclaration","src":"14024:46:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14055:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14066:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14051:3:30"},"nodeType":"YulFunctionCall","src":"14051:18:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14038:12:30"},"nodeType":"YulFunctionCall","src":"14038:32:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14028:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"14117:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14119:77:30"},"nodeType":"YulFunctionCall","src":"14119:79:30"},"nodeType":"YulExpressionStatement","src":"14119:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14089:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"14097:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14086:2:30"},"nodeType":"YulFunctionCall","src":"14086:30:30"},"nodeType":"YulIf","src":"14083:117:30"},{"nodeType":"YulAssignment","src":"14214:72:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14258:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"14269:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14254:3:30"},"nodeType":"YulFunctionCall","src":"14254:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14278:7:30"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14224:29:30"},"nodeType":"YulFunctionCall","src":"14224:62:30"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14214:6:30"}]}]},{"nodeType":"YulBlock","src":"14306:118:30","statements":[{"nodeType":"YulVariableDeclaration","src":"14321:16:30","value":{"kind":"number","nodeType":"YulLiteral","src":"14335:2:30","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14325:6:30","type":""}]},{"nodeType":"YulAssignment","src":"14351:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14386:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"14397:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14382:3:30"},"nodeType":"YulFunctionCall","src":"14382:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14406:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14361:20:30"},"nodeType":"YulFunctionCall","src":"14361:53:30"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14351:6:30"}]}]},{"nodeType":"YulBlock","src":"14434:320:30","statements":[{"nodeType":"YulVariableDeclaration","src":"14449:47:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14480:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"14491:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14476:3:30"},"nodeType":"YulFunctionCall","src":"14476:19:30"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14463:12:30"},"nodeType":"YulFunctionCall","src":"14463:33:30"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14453:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"14543:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14545:77:30"},"nodeType":"YulFunctionCall","src":"14545:79:30"},"nodeType":"YulExpressionStatement","src":"14545:79:30"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14515:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"14523:18:30","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14512:2:30"},"nodeType":"YulFunctionCall","src":"14512:30:30"},"nodeType":"YulIf","src":"14509:117:30"},{"nodeType":"YulAssignment","src":"14640:104:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14716:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"14727:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14712:3:30"},"nodeType":"YulFunctionCall","src":"14712:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14736:7:30"}],"functionName":{"name":"abi_decode_t_struct$_L2MessageInclusionProof_$5380_memory_ptr","nodeType":"YulIdentifier","src":"14650:61:30"},"nodeType":"YulFunctionCall","src":"14650:94:30"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14640:6:30"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptrt_uint256t_struct$_L2MessageInclusionProof_$5380_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13552:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13563:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13575:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13583:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13591:6:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13599:6:30","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13607:6:30","type":""}],"src":"13430:1331:30"},{"body":{"nodeType":"YulBlock","src":"14833:263:30","statements":[{"body":{"nodeType":"YulBlock","src":"14879:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14881:77:30"},"nodeType":"YulFunctionCall","src":"14881:79:30"},"nodeType":"YulExpressionStatement","src":"14881:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14854:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"14863:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14850:3:30"},"nodeType":"YulFunctionCall","src":"14850:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"14875:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14846:3:30"},"nodeType":"YulFunctionCall","src":"14846:32:30"},"nodeType":"YulIf","src":"14843:119:30"},{"nodeType":"YulBlock","src":"14972:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"14987:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"15001:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14991:6:30","type":""}]},{"nodeType":"YulAssignment","src":"15016:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15051:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"15062:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15047:3:30"},"nodeType":"YulFunctionCall","src":"15047:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15071:7:30"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15026:20:30"},"nodeType":"YulFunctionCall","src":"15026:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15016:6:30"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14803:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14814:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14826:6:30","type":""}],"src":"14767:329:30"},{"body":{"nodeType":"YulBlock","src":"15168:263:30","statements":[{"body":{"nodeType":"YulBlock","src":"15214:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15216:77:30"},"nodeType":"YulFunctionCall","src":"15216:79:30"},"nodeType":"YulExpressionStatement","src":"15216:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15189:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"15198:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15185:3:30"},"nodeType":"YulFunctionCall","src":"15185:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"15210:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15181:3:30"},"nodeType":"YulFunctionCall","src":"15181:32:30"},"nodeType":"YulIf","src":"15178:119:30"},{"nodeType":"YulBlock","src":"15307:117:30","statements":[{"nodeType":"YulVariableDeclaration","src":"15322:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"15336:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15326:6:30","type":""}]},{"nodeType":"YulAssignment","src":"15351:63:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15386:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"15397:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15382:3:30"},"nodeType":"YulFunctionCall","src":"15382:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15406:7:30"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"15361:20:30"},"nodeType":"YulFunctionCall","src":"15361:53:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15351:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15138:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15149:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15161:6:30","type":""}],"src":"15102:329:30"},{"body":{"nodeType":"YulBlock","src":"15479:48:30","statements":[{"nodeType":"YulAssignment","src":"15489:32:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15514:5:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15507:6:30"},"nodeType":"YulFunctionCall","src":"15507:13:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15500:6:30"},"nodeType":"YulFunctionCall","src":"15500:21:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15489:7:30"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15461:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15471:7:30","type":""}],"src":"15437:90:30"},{"body":{"nodeType":"YulBlock","src":"15592:50:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15609:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15629:5:30"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15614:14:30"},"nodeType":"YulFunctionCall","src":"15614:21:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15602:6:30"},"nodeType":"YulFunctionCall","src":"15602:34:30"},"nodeType":"YulExpressionStatement","src":"15602:34:30"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15580:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15587:3:30","type":""}],"src":"15533:109:30"},{"body":{"nodeType":"YulBlock","src":"15740:118:30","statements":[{"nodeType":"YulAssignment","src":"15750:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15762:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15773:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:30"},"nodeType":"YulFunctionCall","src":"15758:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15750:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15824:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15837:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"15848:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15833:3:30"},"nodeType":"YulFunctionCall","src":"15833:17:30"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"15786:37:30"},"nodeType":"YulFunctionCall","src":"15786:65:30"},"nodeType":"YulExpressionStatement","src":"15786:65:30"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15712:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15724:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15735:4:30","type":""}],"src":"15648:210:30"},{"body":{"nodeType":"YulBlock","src":"15960:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15977:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"15982:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15970:6:30"},"nodeType":"YulFunctionCall","src":"15970:19:30"},"nodeType":"YulExpressionStatement","src":"15970:19:30"},{"nodeType":"YulAssignment","src":"15998:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16017:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"16022:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16013:3:30"},"nodeType":"YulFunctionCall","src":"16013:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15998:11:30"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15932:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"15937:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15948:11:30","type":""}],"src":"15864:169:30"},{"body":{"nodeType":"YulBlock","src":"16145:56:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16167:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"16175:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16163:3:30"},"nodeType":"YulFunctionCall","src":"16163:14:30"},{"hexValue":"21726f6f744d616e61676572","kind":"string","nodeType":"YulLiteral","src":"16179:14:30","type":"","value":"!rootManager"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16156:6:30"},"nodeType":"YulFunctionCall","src":"16156:38:30"},"nodeType":"YulExpressionStatement","src":"16156:38:30"}]},"name":"store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16137:6:30","type":""}],"src":"16039:162:30"},{"body":{"nodeType":"YulBlock","src":"16353:220:30","statements":[{"nodeType":"YulAssignment","src":"16363:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16429:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"16434:2:30","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16370:58:30"},"nodeType":"YulFunctionCall","src":"16370:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16363:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16535:3:30"}],"functionName":{"name":"store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","nodeType":"YulIdentifier","src":"16446:88:30"},"nodeType":"YulFunctionCall","src":"16446:93:30"},"nodeType":"YulExpressionStatement","src":"16446:93:30"},{"nodeType":"YulAssignment","src":"16548:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16559:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"16564:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16555:3:30"},"nodeType":"YulFunctionCall","src":"16555:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16548:3:30"}]}]},"name":"abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16341:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16349:3:30","type":""}],"src":"16207:366:30"},{"body":{"nodeType":"YulBlock","src":"16750:248:30","statements":[{"nodeType":"YulAssignment","src":"16760:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16772:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16783:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16768:3:30"},"nodeType":"YulFunctionCall","src":"16768:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16760:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16807:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"16818:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16803:3:30"},"nodeType":"YulFunctionCall","src":"16803:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16826:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"16832:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16822:3:30"},"nodeType":"YulFunctionCall","src":"16822:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16796:6:30"},"nodeType":"YulFunctionCall","src":"16796:47:30"},"nodeType":"YulExpressionStatement","src":"16796:47:30"},{"nodeType":"YulAssignment","src":"16852:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16986:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16860:124:30"},"nodeType":"YulFunctionCall","src":"16860:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16852:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16730:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16745:4:30","type":""}],"src":"16579:419:30"},{"body":{"nodeType":"YulBlock","src":"17062:40:30","statements":[{"nodeType":"YulAssignment","src":"17073:22:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17089:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17083:5:30"},"nodeType":"YulFunctionCall","src":"17083:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17073:6:30"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17045:5:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17055:6:30","type":""}],"src":"17004:98:30"},{"body":{"nodeType":"YulBlock","src":"17203:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17220:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"17225:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17213:6:30"},"nodeType":"YulFunctionCall","src":"17213:19:30"},"nodeType":"YulExpressionStatement","src":"17213:19:30"},{"nodeType":"YulAssignment","src":"17241:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17260:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"17265:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17256:3:30"},"nodeType":"YulFunctionCall","src":"17256:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17241:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17175:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"17180:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17191:11:30","type":""}],"src":"17108:168:30"},{"body":{"nodeType":"YulBlock","src":"17344:184:30","statements":[{"nodeType":"YulVariableDeclaration","src":"17354:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"17363:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17358:1:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"17423:63:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17448:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"17453:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17444:3:30"},"nodeType":"YulFunctionCall","src":"17444:11:30"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17467:3:30"},{"name":"i","nodeType":"YulIdentifier","src":"17472:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17463:3:30"},"nodeType":"YulFunctionCall","src":"17463:11:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17457:5:30"},"nodeType":"YulFunctionCall","src":"17457:18:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17437:6:30"},"nodeType":"YulFunctionCall","src":"17437:39:30"},"nodeType":"YulExpressionStatement","src":"17437:39:30"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17384:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"17387:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17381:2:30"},"nodeType":"YulFunctionCall","src":"17381:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17395:19:30","statements":[{"nodeType":"YulAssignment","src":"17397:15:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17406:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"17409:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17402:3:30"},"nodeType":"YulFunctionCall","src":"17402:10:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17397:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"17377:3:30","statements":[]},"src":"17373:113:30"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17506:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"17511:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17502:3:30"},"nodeType":"YulFunctionCall","src":"17502:16:30"},{"kind":"number","nodeType":"YulLiteral","src":"17520:1:30","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17495:6:30"},"nodeType":"YulFunctionCall","src":"17495:27:30"},"nodeType":"YulExpressionStatement","src":"17495:27:30"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17326:3:30","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17331:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"17336:6:30","type":""}],"src":"17282:246:30"},{"body":{"nodeType":"YulBlock","src":"17624:283:30","statements":[{"nodeType":"YulVariableDeclaration","src":"17634:52:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17680:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17648:31:30"},"nodeType":"YulFunctionCall","src":"17648:38:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17638:6:30","type":""}]},{"nodeType":"YulAssignment","src":"17695:77:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17760:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"17765:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17702:57:30"},"nodeType":"YulFunctionCall","src":"17702:70:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17695:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17820:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"17827:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17816:3:30"},"nodeType":"YulFunctionCall","src":"17816:16:30"},{"name":"pos","nodeType":"YulIdentifier","src":"17834:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"17839:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17781:34:30"},"nodeType":"YulFunctionCall","src":"17781:65:30"},"nodeType":"YulExpressionStatement","src":"17781:65:30"},{"nodeType":"YulAssignment","src":"17855:46:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17866:3:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17893:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17871:21:30"},"nodeType":"YulFunctionCall","src":"17871:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17862:3:30"},"nodeType":"YulFunctionCall","src":"17862:39:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17855:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17605:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17612:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17620:3:30","type":""}],"src":"17534:373:30"},{"body":{"nodeType":"YulBlock","src":"18103:426:30","statements":[{"nodeType":"YulAssignment","src":"18113:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18125:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18136:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18121:3:30"},"nodeType":"YulFunctionCall","src":"18121:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18113:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18160:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18171:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18156:3:30"},"nodeType":"YulFunctionCall","src":"18156:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18179:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"18185:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18175:3:30"},"nodeType":"YulFunctionCall","src":"18175:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18149:6:30"},"nodeType":"YulFunctionCall","src":"18149:47:30"},"nodeType":"YulExpressionStatement","src":"18149:47:30"},{"nodeType":"YulAssignment","src":"18205:84:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18275:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"18284:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18213:61:30"},"nodeType":"YulFunctionCall","src":"18213:76:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18205:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18310:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18321:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18306:3:30"},"nodeType":"YulFunctionCall","src":"18306:18:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18330:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"18336:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18326:3:30"},"nodeType":"YulFunctionCall","src":"18326:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18299:6:30"},"nodeType":"YulFunctionCall","src":"18299:48:30"},"nodeType":"YulExpressionStatement","src":"18299:48:30"},{"nodeType":"YulAssignment","src":"18356:84:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18426:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"18435:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18364:61:30"},"nodeType":"YulFunctionCall","src":"18364:76:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18356:4:30"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18494:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18507:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"18518:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18503:3:30"},"nodeType":"YulFunctionCall","src":"18503:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18450:43:30"},"nodeType":"YulFunctionCall","src":"18450:72:30"},"nodeType":"YulExpressionStatement","src":"18450:72:30"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18059:9:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18071:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18079:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18087:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18098:4:30","type":""}],"src":"17913:616:30"},{"body":{"nodeType":"YulBlock","src":"18641:48:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18663:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"18671:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18659:3:30"},"nodeType":"YulFunctionCall","src":"18659:14:30"},{"hexValue":"21414d42","kind":"string","nodeType":"YulLiteral","src":"18675:6:30","type":"","value":"!AMB"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18652:6:30"},"nodeType":"YulFunctionCall","src":"18652:30:30"},"nodeType":"YulExpressionStatement","src":"18652:30:30"}]},"name":"store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18633:6:30","type":""}],"src":"18535:154:30"},{"body":{"nodeType":"YulBlock","src":"18841:219:30","statements":[{"nodeType":"YulAssignment","src":"18851:73:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18917:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"18922:1:30","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18858:58:30"},"nodeType":"YulFunctionCall","src":"18858:66:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18851:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19022:3:30"}],"functionName":{"name":"store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","nodeType":"YulIdentifier","src":"18933:88:30"},"nodeType":"YulFunctionCall","src":"18933:93:30"},"nodeType":"YulExpressionStatement","src":"18933:93:30"},{"nodeType":"YulAssignment","src":"19035:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19046:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"19051:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19042:3:30"},"nodeType":"YulFunctionCall","src":"19042:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19035:3:30"}]}]},"name":"abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18829:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18837:3:30","type":""}],"src":"18695:365:30"},{"body":{"nodeType":"YulBlock","src":"19237:248:30","statements":[{"nodeType":"YulAssignment","src":"19247:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19259:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19270:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19255:3:30"},"nodeType":"YulFunctionCall","src":"19255:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19247:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19294:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19305:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19290:3:30"},"nodeType":"YulFunctionCall","src":"19290:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19313:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"19319:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19309:3:30"},"nodeType":"YulFunctionCall","src":"19309:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19283:6:30"},"nodeType":"YulFunctionCall","src":"19283:47:30"},"nodeType":"YulExpressionStatement","src":"19283:47:30"},{"nodeType":"YulAssignment","src":"19339:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19473:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19347:124:30"},"nodeType":"YulFunctionCall","src":"19347:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19339:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19217:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19232:4:30","type":""}],"src":"19066:419:30"},{"body":{"nodeType":"YulBlock","src":"19635:275:30","statements":[{"nodeType":"YulAssignment","src":"19645:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19657:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19668:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19653:3:30"},"nodeType":"YulFunctionCall","src":"19653:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19645:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19692:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19703:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19688:3:30"},"nodeType":"YulFunctionCall","src":"19688:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19711:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"19717:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19707:3:30"},"nodeType":"YulFunctionCall","src":"19707:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19681:6:30"},"nodeType":"YulFunctionCall","src":"19681:47:30"},"nodeType":"YulExpressionStatement","src":"19681:47:30"},{"nodeType":"YulAssignment","src":"19737:84:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19807:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"19816:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19745:61:30"},"nodeType":"YulFunctionCall","src":"19745:76:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19737:4:30"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19875:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19888:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"19899:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19884:3:30"},"nodeType":"YulFunctionCall","src":"19884:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19831:43:30"},"nodeType":"YulFunctionCall","src":"19831:72:30"},"nodeType":"YulExpressionStatement","src":"19831:72:30"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19599:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19611:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19619:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19630:4:30","type":""}],"src":"19491:419:30"},{"body":{"nodeType":"YulBlock","src":"20022:60:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20044:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"20052:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20040:3:30"},"nodeType":"YulFunctionCall","src":"20040:14:30"},{"hexValue":"216d6972726f72436f6e6e6563746f72","kind":"string","nodeType":"YulLiteral","src":"20056:18:30","type":"","value":"!mirrorConnector"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20033:6:30"},"nodeType":"YulFunctionCall","src":"20033:42:30"},"nodeType":"YulExpressionStatement","src":"20033:42:30"}]},"name":"store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20014:6:30","type":""}],"src":"19916:166:30"},{"body":{"nodeType":"YulBlock","src":"20234:220:30","statements":[{"nodeType":"YulAssignment","src":"20244:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20310:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"20315:2:30","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20251:58:30"},"nodeType":"YulFunctionCall","src":"20251:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20244:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20416:3:30"}],"functionName":{"name":"store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","nodeType":"YulIdentifier","src":"20327:88:30"},"nodeType":"YulFunctionCall","src":"20327:93:30"},"nodeType":"YulExpressionStatement","src":"20327:93:30"},{"nodeType":"YulAssignment","src":"20429:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20440:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"20445:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20436:3:30"},"nodeType":"YulFunctionCall","src":"20436:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20429:3:30"}]}]},"name":"abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20222:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20230:3:30","type":""}],"src":"20088:366:30"},{"body":{"nodeType":"YulBlock","src":"20631:248:30","statements":[{"nodeType":"YulAssignment","src":"20641:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20653:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20664:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20649:3:30"},"nodeType":"YulFunctionCall","src":"20649:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20641:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20688:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"20699:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20684:3:30"},"nodeType":"YulFunctionCall","src":"20684:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20707:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"20713:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20703:3:30"},"nodeType":"YulFunctionCall","src":"20703:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20677:6:30"},"nodeType":"YulFunctionCall","src":"20677:47:30"},"nodeType":"YulExpressionStatement","src":"20677:47:30"},{"nodeType":"YulAssignment","src":"20733:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20867:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20741:124:30"},"nodeType":"YulFunctionCall","src":"20741:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20733:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20611:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20626:4:30","type":""}],"src":"20460:419:30"},{"body":{"nodeType":"YulBlock","src":"20991:49:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21013:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"21021:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21009:3:30"},"nodeType":"YulFunctionCall","src":"21009:14:30"},{"hexValue":"2174686973","kind":"string","nodeType":"YulLiteral","src":"21025:7:30","type":"","value":"!this"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21002:6:30"},"nodeType":"YulFunctionCall","src":"21002:31:30"},"nodeType":"YulExpressionStatement","src":"21002:31:30"}]},"name":"store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20983:6:30","type":""}],"src":"20885:155:30"},{"body":{"nodeType":"YulBlock","src":"21192:219:30","statements":[{"nodeType":"YulAssignment","src":"21202:73:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21268:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"21273:1:30","type":"","value":"5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21209:58:30"},"nodeType":"YulFunctionCall","src":"21209:66:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21202:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21373:3:30"}],"functionName":{"name":"store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","nodeType":"YulIdentifier","src":"21284:88:30"},"nodeType":"YulFunctionCall","src":"21284:93:30"},"nodeType":"YulExpressionStatement","src":"21284:93:30"},{"nodeType":"YulAssignment","src":"21386:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21397:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"21402:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21393:3:30"},"nodeType":"YulFunctionCall","src":"21393:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21386:3:30"}]}]},"name":"abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21180:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21188:3:30","type":""}],"src":"21046:365:30"},{"body":{"nodeType":"YulBlock","src":"21588:248:30","statements":[{"nodeType":"YulAssignment","src":"21598:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21610:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21621:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21606:3:30"},"nodeType":"YulFunctionCall","src":"21606:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21598:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21645:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"21656:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21641:3:30"},"nodeType":"YulFunctionCall","src":"21641:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21664:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"21670:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21660:3:30"},"nodeType":"YulFunctionCall","src":"21660:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21634:6:30"},"nodeType":"YulFunctionCall","src":"21634:47:30"},"nodeType":"YulExpressionStatement","src":"21634:47:30"},{"nodeType":"YulAssignment","src":"21690:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21824:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21698:124:30"},"nodeType":"YulFunctionCall","src":"21698:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21690:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21568:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21583:4:30","type":""}],"src":"21417:419:30"},{"body":{"nodeType":"YulBlock","src":"21948:50:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21970:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"21978:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21966:3:30"},"nodeType":"YulFunctionCall","src":"21966:14:30"},{"hexValue":"2170726f6f66","kind":"string","nodeType":"YulLiteral","src":"21982:8:30","type":"","value":"!proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21959:6:30"},"nodeType":"YulFunctionCall","src":"21959:32:30"},"nodeType":"YulExpressionStatement","src":"21959:32:30"}]},"name":"store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21940:6:30","type":""}],"src":"21842:156:30"},{"body":{"nodeType":"YulBlock","src":"22150:219:30","statements":[{"nodeType":"YulAssignment","src":"22160:73:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22226:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"22231:1:30","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22167:58:30"},"nodeType":"YulFunctionCall","src":"22167:66:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22160:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22331:3:30"}],"functionName":{"name":"store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","nodeType":"YulIdentifier","src":"22242:88:30"},"nodeType":"YulFunctionCall","src":"22242:93:30"},"nodeType":"YulExpressionStatement","src":"22242:93:30"},{"nodeType":"YulAssignment","src":"22344:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22355:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"22360:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22351:3:30"},"nodeType":"YulFunctionCall","src":"22351:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22344:3:30"}]}]},"name":"abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22138:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22146:3:30","type":""}],"src":"22004:365:30"},{"body":{"nodeType":"YulBlock","src":"22546:248:30","statements":[{"nodeType":"YulAssignment","src":"22556:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22568:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"22579:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22564:3:30"},"nodeType":"YulFunctionCall","src":"22564:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22556:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22603:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"22614:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22599:3:30"},"nodeType":"YulFunctionCall","src":"22599:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22622:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"22628:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22618:3:30"},"nodeType":"YulFunctionCall","src":"22618:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22592:6:30"},"nodeType":"YulFunctionCall","src":"22592:47:30"},"nodeType":"YulExpressionStatement","src":"22592:47:30"},{"nodeType":"YulAssignment","src":"22648:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22782:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22656:124:30"},"nodeType":"YulFunctionCall","src":"22656:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22648:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22526:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22541:4:30","type":""}],"src":"22375:419:30"},{"body":{"nodeType":"YulBlock","src":"22844:65:30","statements":[{"nodeType":"YulAssignment","src":"22854:49:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22869:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"22876:26:30","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22865:3:30"},"nodeType":"YulFunctionCall","src":"22865:38:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22854:7:30"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22826:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22836:7:30","type":""}],"src":"22800:109:30"},{"body":{"nodeType":"YulBlock","src":"22943:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22960:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22963:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22953:6:30"},"nodeType":"YulFunctionCall","src":"22953:88:30"},"nodeType":"YulExpressionStatement","src":"22953:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23057:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23060:4:30","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23050:6:30"},"nodeType":"YulFunctionCall","src":"23050:15:30"},"nodeType":"YulExpressionStatement","src":"23050:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23081:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23084:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23074:6:30"},"nodeType":"YulFunctionCall","src":"23074:15:30"},"nodeType":"YulExpressionStatement","src":"23074:15:30"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22915:180:30"},{"body":{"nodeType":"YulBlock","src":"23145:172:30","statements":[{"nodeType":"YulAssignment","src":"23155:24:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23177:1:30"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"23160:16:30"},"nodeType":"YulFunctionCall","src":"23160:19:30"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23155:1:30"}]},{"nodeType":"YulAssignment","src":"23188:24:30","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23210:1:30"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"23193:16:30"},"nodeType":"YulFunctionCall","src":"23193:19:30"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23188:1:30"}]},{"nodeType":"YulAssignment","src":"23221:17:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23233:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"23236:1:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23229:3:30"},"nodeType":"YulFunctionCall","src":"23229:9:30"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23221:4:30"}]},{"body":{"nodeType":"YulBlock","src":"23288:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23290:16:30"},"nodeType":"YulFunctionCall","src":"23290:18:30"},"nodeType":"YulExpressionStatement","src":"23290:18:30"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23254:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"23260:26:30","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23251:2:30"},"nodeType":"YulFunctionCall","src":"23251:36:30"},"nodeType":"YulIf","src":"23248:62:30"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23131:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"23134:1:30","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23140:4:30","type":""}],"src":"23101:216:30"},{"body":{"nodeType":"YulBlock","src":"23388:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23405:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23428:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23410:17:30"},"nodeType":"YulFunctionCall","src":"23410:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23398:6:30"},"nodeType":"YulFunctionCall","src":"23398:37:30"},"nodeType":"YulExpressionStatement","src":"23398:37:30"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23376:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23383:3:30","type":""}],"src":"23323:118:30"},{"body":{"nodeType":"YulBlock","src":"23571:204:30","statements":[{"nodeType":"YulAssignment","src":"23581:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23593:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"23604:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23589:3:30"},"nodeType":"YulFunctionCall","src":"23589:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23581:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23659:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23672:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"23683:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23668:3:30"},"nodeType":"YulFunctionCall","src":"23668:17:30"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"23617:41:30"},"nodeType":"YulFunctionCall","src":"23617:69:30"},"nodeType":"YulExpressionStatement","src":"23617:69:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23740:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23753:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"23764:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23749:3:30"},"nodeType":"YulFunctionCall","src":"23749:18:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23696:43:30"},"nodeType":"YulFunctionCall","src":"23696:72:30"},"nodeType":"YulExpressionStatement","src":"23696:72:30"}]},"name":"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23535:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23547:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23555:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23566:4:30","type":""}],"src":"23447:328:30"},{"body":{"nodeType":"YulBlock","src":"23879:124:30","statements":[{"nodeType":"YulAssignment","src":"23889:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23901:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"23912:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23897:3:30"},"nodeType":"YulFunctionCall","src":"23897:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23889:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23969:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23982:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"23993:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23978:3:30"},"nodeType":"YulFunctionCall","src":"23978:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23925:43:30"},"nodeType":"YulFunctionCall","src":"23925:71:30"},"nodeType":"YulExpressionStatement","src":"23925:71:30"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23851:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23863:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23874:4:30","type":""}],"src":"23781:222:30"},{"body":{"nodeType":"YulBlock","src":"24054:149:30","statements":[{"nodeType":"YulAssignment","src":"24064:25:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24087:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24069:17:30"},"nodeType":"YulFunctionCall","src":"24069:20:30"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24064:1:30"}]},{"nodeType":"YulAssignment","src":"24098:25:30","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24121:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24103:17:30"},"nodeType":"YulFunctionCall","src":"24103:20:30"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24098:1:30"}]},{"nodeType":"YulAssignment","src":"24132:17:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24144:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"24147:1:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24140:3:30"},"nodeType":"YulFunctionCall","src":"24140:9:30"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24132:4:30"}]},{"body":{"nodeType":"YulBlock","src":"24174:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24176:16:30"},"nodeType":"YulFunctionCall","src":"24176:18:30"},"nodeType":"YulExpressionStatement","src":"24176:18:30"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"24165:4:30"},{"name":"x","nodeType":"YulIdentifier","src":"24171:1:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24162:2:30"},"nodeType":"YulFunctionCall","src":"24162:11:30"},"nodeType":"YulIf","src":"24159:37:30"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24040:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"24043:1:30","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24049:4:30","type":""}],"src":"24009:194:30"},{"body":{"nodeType":"YulBlock","src":"24315:51:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24337:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"24345:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24333:3:30"},"nodeType":"YulFunctionCall","src":"24333:14:30"},{"hexValue":"216c656e677468","kind":"string","nodeType":"YulLiteral","src":"24349:9:30","type":"","value":"!length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24326:6:30"},"nodeType":"YulFunctionCall","src":"24326:33:30"},"nodeType":"YulExpressionStatement","src":"24326:33:30"}]},"name":"store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24307:6:30","type":""}],"src":"24209:157:30"},{"body":{"nodeType":"YulBlock","src":"24518:219:30","statements":[{"nodeType":"YulAssignment","src":"24528:73:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24594:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"24599:1:30","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24535:58:30"},"nodeType":"YulFunctionCall","src":"24535:66:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24528:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24699:3:30"}],"functionName":{"name":"store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","nodeType":"YulIdentifier","src":"24610:88:30"},"nodeType":"YulFunctionCall","src":"24610:93:30"},"nodeType":"YulExpressionStatement","src":"24610:93:30"},{"nodeType":"YulAssignment","src":"24712:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24723:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"24728:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24719:3:30"},"nodeType":"YulFunctionCall","src":"24719:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24712:3:30"}]}]},"name":"abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24506:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24514:3:30","type":""}],"src":"24372:365:30"},{"body":{"nodeType":"YulBlock","src":"24914:248:30","statements":[{"nodeType":"YulAssignment","src":"24924:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24936:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"24947:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24932:3:30"},"nodeType":"YulFunctionCall","src":"24932:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24924:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24971:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"24982:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24967:3:30"},"nodeType":"YulFunctionCall","src":"24967:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24990:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"24996:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24986:3:30"},"nodeType":"YulFunctionCall","src":"24986:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24960:6:30"},"nodeType":"YulFunctionCall","src":"24960:47:30"},"nodeType":"YulExpressionStatement","src":"24960:47:30"},{"nodeType":"YulAssignment","src":"25016:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25150:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25024:124:30"},"nodeType":"YulFunctionCall","src":"25024:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25016:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24894:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24909:4:30","type":""}],"src":"24743:419:30"},{"body":{"nodeType":"YulBlock","src":"25284:193:30","statements":[{"nodeType":"YulAssignment","src":"25294:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25306:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"25317:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25302:3:30"},"nodeType":"YulFunctionCall","src":"25302:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25294:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25341:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"25352:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25337:3:30"},"nodeType":"YulFunctionCall","src":"25337:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25360:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"25366:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25356:3:30"},"nodeType":"YulFunctionCall","src":"25356:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25330:6:30"},"nodeType":"YulFunctionCall","src":"25330:47:30"},"nodeType":"YulExpressionStatement","src":"25330:47:30"},{"nodeType":"YulAssignment","src":"25386:84:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25456:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"25465:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25394:61:30"},"nodeType":"YulFunctionCall","src":"25394:76:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25386:4:30"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25256:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25268:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25279:4:30","type":""}],"src":"25168:309:30"},{"body":{"nodeType":"YulBlock","src":"25653:355:30","statements":[{"nodeType":"YulAssignment","src":"25663:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25675:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"25686:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25671:3:30"},"nodeType":"YulFunctionCall","src":"25671:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25663:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25743:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25756:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"25767:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25752:3:30"},"nodeType":"YulFunctionCall","src":"25752:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25699:43:30"},"nodeType":"YulFunctionCall","src":"25699:71:30"},"nodeType":"YulExpressionStatement","src":"25699:71:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25791:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"25802:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25787:3:30"},"nodeType":"YulFunctionCall","src":"25787:18:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25811:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"25817:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25807:3:30"},"nodeType":"YulFunctionCall","src":"25807:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25780:6:30"},"nodeType":"YulFunctionCall","src":"25780:48:30"},"nodeType":"YulExpressionStatement","src":"25780:48:30"},{"nodeType":"YulAssignment","src":"25837:84:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25907:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"25916:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25845:61:30"},"nodeType":"YulFunctionCall","src":"25845:76:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25837:4:30"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25973:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25986:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"25997:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25982:3:30"},"nodeType":"YulFunctionCall","src":"25982:18:30"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"25931:41:30"},"nodeType":"YulFunctionCall","src":"25931:70:30"},"nodeType":"YulExpressionStatement","src":"25931:70:30"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25609:9:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25621:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25629:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25637:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25648:4:30","type":""}],"src":"25483:525:30"},{"body":{"nodeType":"YulBlock","src":"26140:206:30","statements":[{"nodeType":"YulAssignment","src":"26150:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26162:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26173:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26158:3:30"},"nodeType":"YulFunctionCall","src":"26158:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26150:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26230:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26243:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26254:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26239:3:30"},"nodeType":"YulFunctionCall","src":"26239:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26186:43:30"},"nodeType":"YulFunctionCall","src":"26186:71:30"},"nodeType":"YulExpressionStatement","src":"26186:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26311:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26324:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26335:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26320:3:30"},"nodeType":"YulFunctionCall","src":"26320:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26267:43:30"},"nodeType":"YulFunctionCall","src":"26267:72:30"},"nodeType":"YulExpressionStatement","src":"26267:72:30"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26104:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26116:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26124:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26135:4:30","type":""}],"src":"26014:332:30"},{"body":{"nodeType":"YulBlock","src":"26552:440:30","statements":[{"nodeType":"YulAssignment","src":"26562:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26574:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26585:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26570:3:30"},"nodeType":"YulFunctionCall","src":"26570:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26562:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26643:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26656:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26667:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26652:3:30"},"nodeType":"YulFunctionCall","src":"26652:17:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26599:43:30"},"nodeType":"YulFunctionCall","src":"26599:71:30"},"nodeType":"YulExpressionStatement","src":"26599:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26724:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26737:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26748:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26733:3:30"},"nodeType":"YulFunctionCall","src":"26733:18:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26680:43:30"},"nodeType":"YulFunctionCall","src":"26680:72:30"},"nodeType":"YulExpressionStatement","src":"26680:72:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26773:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26784:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26769:3:30"},"nodeType":"YulFunctionCall","src":"26769:18:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26793:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"26799:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26789:3:30"},"nodeType":"YulFunctionCall","src":"26789:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26762:6:30"},"nodeType":"YulFunctionCall","src":"26762:48:30"},"nodeType":"YulExpressionStatement","src":"26762:48:30"},{"nodeType":"YulAssignment","src":"26819:84:30","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26889:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"26898:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26827:61:30"},"nodeType":"YulFunctionCall","src":"26827:76:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26819:4:30"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26957:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26970:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"26981:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26966:3:30"},"nodeType":"YulFunctionCall","src":"26966:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26913:43:30"},"nodeType":"YulFunctionCall","src":"26913:72:30"},"nodeType":"YulExpressionStatement","src":"26913:72:30"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26500:9:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26512:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26520:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26528:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26536:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26547:4:30","type":""}],"src":"26352:640:30"},{"body":{"nodeType":"YulBlock","src":"27042:147:30","statements":[{"nodeType":"YulAssignment","src":"27052:25:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27075:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27057:17:30"},"nodeType":"YulFunctionCall","src":"27057:20:30"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27052:1:30"}]},{"nodeType":"YulAssignment","src":"27086:25:30","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27109:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27091:17:30"},"nodeType":"YulFunctionCall","src":"27091:20:30"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27086:1:30"}]},{"nodeType":"YulAssignment","src":"27120:16:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27131:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"27134:1:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27127:3:30"},"nodeType":"YulFunctionCall","src":"27127:9:30"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"27120:3:30"}]},{"body":{"nodeType":"YulBlock","src":"27160:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27162:16:30"},"nodeType":"YulFunctionCall","src":"27162:18:30"},"nodeType":"YulExpressionStatement","src":"27162:18:30"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27152:1:30"},{"name":"sum","nodeType":"YulIdentifier","src":"27155:3:30"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27149:2:30"},"nodeType":"YulFunctionCall","src":"27149:10:30"},"nodeType":"YulIf","src":"27146:36:30"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27029:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"27032:1:30","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"27038:3:30","type":""}],"src":"26998:191:30"},{"body":{"nodeType":"YulBlock","src":"27254:81:30","statements":[{"nodeType":"YulAssignment","src":"27264:65:30","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27321:5:30"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27304:16:30"},"nodeType":"YulFunctionCall","src":"27304:23:30"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27295:8:30"},"nodeType":"YulFunctionCall","src":"27295:33:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27277:17:30"},"nodeType":"YulFunctionCall","src":"27277:52:30"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27264:9:30"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27234:5:30","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27244:9:30","type":""}],"src":"27195:140:30"},{"body":{"nodeType":"YulBlock","src":"27405:65:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27422:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27457:5:30"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"27427:29:30"},"nodeType":"YulFunctionCall","src":"27427:36:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27415:6:30"},"nodeType":"YulFunctionCall","src":"27415:49:30"},"nodeType":"YulExpressionStatement","src":"27415:49:30"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27393:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27400:3:30","type":""}],"src":"27341:129:30"},{"body":{"nodeType":"YulBlock","src":"27656:369:30","statements":[{"nodeType":"YulAssignment","src":"27666:27:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27678:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"27689:3:30","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27674:3:30"},"nodeType":"YulFunctionCall","src":"27674:19:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27666:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27746:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27759:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"27770:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27755:3:30"},"nodeType":"YulFunctionCall","src":"27755:17:30"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27703:42:30"},"nodeType":"YulFunctionCall","src":"27703:70:30"},"nodeType":"YulExpressionStatement","src":"27703:70:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27826:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27839:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"27850:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27835:3:30"},"nodeType":"YulFunctionCall","src":"27835:18:30"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27783:42:30"},"nodeType":"YulFunctionCall","src":"27783:71:30"},"nodeType":"YulExpressionStatement","src":"27783:71:30"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27908:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27921:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"27932:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27917:3:30"},"nodeType":"YulFunctionCall","src":"27917:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27864:43:30"},"nodeType":"YulFunctionCall","src":"27864:72:30"},"nodeType":"YulExpressionStatement","src":"27864:72:30"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27990:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28003:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"28014:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27999:3:30"},"nodeType":"YulFunctionCall","src":"27999:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27946:43:30"},"nodeType":"YulFunctionCall","src":"27946:72:30"},"nodeType":"YulExpressionStatement","src":"27946:72:30"}]},"name":"abi_encode_tuple_t_uint96_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27604:9:30","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27616:6:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27624:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27632:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27640:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27651:4:30","type":""}],"src":"27476:549:30"},{"body":{"nodeType":"YulBlock","src":"28157:206:30","statements":[{"nodeType":"YulAssignment","src":"28167:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28179:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"28190:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28175:3:30"},"nodeType":"YulFunctionCall","src":"28175:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28167:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28247:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28260:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"28271:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28256:3:30"},"nodeType":"YulFunctionCall","src":"28256:17:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28203:43:30"},"nodeType":"YulFunctionCall","src":"28203:71:30"},"nodeType":"YulExpressionStatement","src":"28203:71:30"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28328:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28341:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"28352:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28337:3:30"},"nodeType":"YulFunctionCall","src":"28337:18:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28284:43:30"},"nodeType":"YulFunctionCall","src":"28284:72:30"},"nodeType":"YulExpressionStatement","src":"28284:72:30"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28121:9:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28133:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28141:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28152:4:30","type":""}],"src":"28031:332:30"},{"body":{"nodeType":"YulBlock","src":"28424:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28441:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28464:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28446:17:30"},"nodeType":"YulFunctionCall","src":"28446:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28434:6:30"},"nodeType":"YulFunctionCall","src":"28434:37:30"},"nodeType":"YulExpressionStatement","src":"28434:37:30"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28412:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28419:3:30","type":""}],"src":"28369:108:30"},{"body":{"nodeType":"YulBlock","src":"28538:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28555:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28578:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"28560:17:30"},"nodeType":"YulFunctionCall","src":"28560:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28548:6:30"},"nodeType":"YulFunctionCall","src":"28548:37:30"},"nodeType":"YulExpressionStatement","src":"28548:37:30"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28526:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28533:3:30","type":""}],"src":"28483:108:30"},{"body":{"nodeType":"YulBlock","src":"28682:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28699:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"28704:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28692:6:30"},"nodeType":"YulFunctionCall","src":"28692:19:30"},"nodeType":"YulExpressionStatement","src":"28692:19:30"},{"nodeType":"YulAssignment","src":"28720:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28739:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"28744:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28735:3:30"},"nodeType":"YulFunctionCall","src":"28735:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28720:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28654:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"28659:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28670:11:30","type":""}],"src":"28597:158:30"},{"body":{"nodeType":"YulBlock","src":"28841:273:30","statements":[{"nodeType":"YulVariableDeclaration","src":"28851:52:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28897:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"28865:31:30"},"nodeType":"YulFunctionCall","src":"28865:38:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28855:6:30","type":""}]},{"nodeType":"YulAssignment","src":"28912:67:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28967:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"28972:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"28919:47:30"},"nodeType":"YulFunctionCall","src":"28919:60:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28912:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29027:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"29034:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29023:3:30"},"nodeType":"YulFunctionCall","src":"29023:16:30"},{"name":"pos","nodeType":"YulIdentifier","src":"29041:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"29046:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"28988:34:30"},"nodeType":"YulFunctionCall","src":"28988:65:30"},"nodeType":"YulExpressionStatement","src":"28988:65:30"},{"nodeType":"YulAssignment","src":"29062:46:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29073:3:30"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29100:6:30"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"29078:21:30"},"nodeType":"YulFunctionCall","src":"29078:29:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29069:3:30"},"nodeType":"YulFunctionCall","src":"29069:39:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29062:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28822:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28829:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28837:3:30","type":""}],"src":"28761:353:30"},{"body":{"nodeType":"YulBlock","src":"29320:1036:30","statements":[{"nodeType":"YulVariableDeclaration","src":"29330:26:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29346:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"29351:4:30","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29342:3:30"},"nodeType":"YulFunctionCall","src":"29342:14:30"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"29334:4:30","type":""}]},{"nodeType":"YulBlock","src":"29366:170:30","statements":[{"nodeType":"YulVariableDeclaration","src":"29407:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29437:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"29444:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29433:3:30"},"nodeType":"YulFunctionCall","src":"29433:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29427:5:30"},"nodeType":"YulFunctionCall","src":"29427:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29411:12:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"29497:12:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29515:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"29520:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29511:3:30"},"nodeType":"YulFunctionCall","src":"29511:14:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29463:33:30"},"nodeType":"YulFunctionCall","src":"29463:63:30"},"nodeType":"YulExpressionStatement","src":"29463:63:30"}]},{"nodeType":"YulBlock","src":"29546:169:30","statements":[{"nodeType":"YulVariableDeclaration","src":"29586:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29616:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"29623:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29612:3:30"},"nodeType":"YulFunctionCall","src":"29612:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29606:5:30"},"nodeType":"YulFunctionCall","src":"29606:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29590:12:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"29676:12:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29694:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"29699:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29690:3:30"},"nodeType":"YulFunctionCall","src":"29690:14:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"29642:33:30"},"nodeType":"YulFunctionCall","src":"29642:63:30"},"nodeType":"YulExpressionStatement","src":"29642:63:30"}]},{"nodeType":"YulBlock","src":"29725:169:30","statements":[{"nodeType":"YulVariableDeclaration","src":"29765:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29795:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"29802:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29791:3:30"},"nodeType":"YulFunctionCall","src":"29791:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29785:5:30"},"nodeType":"YulFunctionCall","src":"29785:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29769:12:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"29855:12:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29873:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"29878:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29869:3:30"},"nodeType":"YulFunctionCall","src":"29869:14:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29821:33:30"},"nodeType":"YulFunctionCall","src":"29821:63:30"},"nodeType":"YulExpressionStatement","src":"29821:63:30"}]},{"nodeType":"YulBlock","src":"29904:177:30","statements":[{"nodeType":"YulVariableDeclaration","src":"29952:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29982:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"29989:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29978:3:30"},"nodeType":"YulFunctionCall","src":"29978:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29972:5:30"},"nodeType":"YulFunctionCall","src":"29972:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29956:12:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"30042:12:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30060:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"30065:4:30","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30056:3:30"},"nodeType":"YulFunctionCall","src":"30056:14:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30008:33:30"},"nodeType":"YulFunctionCall","src":"30008:63:30"},"nodeType":"YulExpressionStatement","src":"30008:63:30"}]},{"nodeType":"YulBlock","src":"30091:238:30","statements":[{"nodeType":"YulVariableDeclaration","src":"30131:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30161:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"30168:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30157:3:30"},"nodeType":"YulFunctionCall","src":"30157:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30151:5:30"},"nodeType":"YulFunctionCall","src":"30151:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"30135:12:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30199:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"30204:4:30","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30195:3:30"},"nodeType":"YulFunctionCall","src":"30195:14:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30215:4:30"},{"name":"pos","nodeType":"YulIdentifier","src":"30221:3:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30211:3:30"},"nodeType":"YulFunctionCall","src":"30211:14:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30188:6:30"},"nodeType":"YulFunctionCall","src":"30188:38:30"},"nodeType":"YulExpressionStatement","src":"30188:38:30"},{"nodeType":"YulAssignment","src":"30239:79:30","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"30299:12:30"},{"name":"tail","nodeType":"YulIdentifier","src":"30313:4:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30247:51:30"},"nodeType":"YulFunctionCall","src":"30247:71:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30239:4:30"}]}]},{"nodeType":"YulAssignment","src":"30339:11:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"30346:4:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30339:3:30"}]}]},"name":"abi_encode_t_struct$_ChainBatchHeader_$5361_memory_ptr_to_t_struct$_ChainBatchHeader_$5361_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29299:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29306:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29315:3:30","type":""}],"src":"29178:1178:30"},{"body":{"nodeType":"YulBlock","src":"30436:40:30","statements":[{"nodeType":"YulAssignment","src":"30447:22:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30463:5:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30457:5:30"},"nodeType":"YulFunctionCall","src":"30457:12:30"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30447:6:30"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30419:5:30","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"30429:6:30","type":""}],"src":"30362:114:30"},{"body":{"nodeType":"YulBlock","src":"30583:73:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30600:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"30605:6:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30593:6:30"},"nodeType":"YulFunctionCall","src":"30593:19:30"},"nodeType":"YulExpressionStatement","src":"30593:19:30"},{"nodeType":"YulAssignment","src":"30621:29:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30640:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"30645:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30636:3:30"},"nodeType":"YulFunctionCall","src":"30636:14:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30621:11:30"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30555:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"30560:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30571:11:30","type":""}],"src":"30482:174:30"},{"body":{"nodeType":"YulBlock","src":"30734:60:30","statements":[{"nodeType":"YulAssignment","src":"30744:11:30","value":{"name":"ptr","nodeType":"YulIdentifier","src":"30752:3:30"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30744:4:30"}]},{"nodeType":"YulAssignment","src":"30765:22:30","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"30777:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"30782:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30773:3:30"},"nodeType":"YulFunctionCall","src":"30773:14:30"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30765:4:30"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30721:3:30","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"30729:4:30","type":""}],"src":"30662:132:30"},{"body":{"nodeType":"YulBlock","src":"30880:99:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30924:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"30932:3:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"30890:33:30"},"nodeType":"YulFunctionCall","src":"30890:46:30"},"nodeType":"YulExpressionStatement","src":"30890:46:30"},{"nodeType":"YulAssignment","src":"30945:28:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30963:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"30968:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30959:3:30"},"nodeType":"YulFunctionCall","src":"30959:14:30"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"30945:10:30"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"30853:6:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30861:3:30","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"30869:10:30","type":""}],"src":"30800:179:30"},{"body":{"nodeType":"YulBlock","src":"31060:38:30","statements":[{"nodeType":"YulAssignment","src":"31070:22:30","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31082:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"31087:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31078:3:30"},"nodeType":"YulFunctionCall","src":"31078:14:30"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"31070:4:30"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31047:3:30","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"31055:4:30","type":""}],"src":"30985:113:30"},{"body":{"nodeType":"YulBlock","src":"31248:598:30","statements":[{"nodeType":"YulVariableDeclaration","src":"31258:68:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31320:5:30"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31272:47:30"},"nodeType":"YulFunctionCall","src":"31272:54:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31262:6:30","type":""}]},{"nodeType":"YulAssignment","src":"31335:83:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31406:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"31411:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31342:63:30"},"nodeType":"YulFunctionCall","src":"31342:76:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31335:3:30"}]},{"nodeType":"YulVariableDeclaration","src":"31427:71:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31492:5:30"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31442:49:30"},"nodeType":"YulFunctionCall","src":"31442:56:30"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"31431:7:30","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31507:21:30","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"31521:7:30"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"31511:6:30","type":""}]},{"body":{"nodeType":"YulBlock","src":"31597:224:30","statements":[{"nodeType":"YulVariableDeclaration","src":"31611:34:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31638:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31632:5:30"},"nodeType":"YulFunctionCall","src":"31632:13:30"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"31615:13:30","type":""}]},{"nodeType":"YulAssignment","src":"31658:70:30","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"31709:13:30"},{"name":"pos","nodeType":"YulIdentifier","src":"31724:3:30"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"31665:43:30"},"nodeType":"YulFunctionCall","src":"31665:63:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31658:3:30"}]},{"nodeType":"YulAssignment","src":"31741:70:30","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31804:6:30"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31751:52:30"},"nodeType":"YulFunctionCall","src":"31751:60:30"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31741:6:30"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31559:1:30"},{"name":"length","nodeType":"YulIdentifier","src":"31562:6:30"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31556:2:30"},"nodeType":"YulFunctionCall","src":"31556:13:30"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31570:18:30","statements":[{"nodeType":"YulAssignment","src":"31572:14:30","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31581:1:30"},{"kind":"number","nodeType":"YulLiteral","src":"31584:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31577:3:30"},"nodeType":"YulFunctionCall","src":"31577:9:30"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31572:1:30"}]}]},"pre":{"nodeType":"YulBlock","src":"31541:14:30","statements":[{"nodeType":"YulVariableDeclaration","src":"31543:10:30","value":{"kind":"number","nodeType":"YulLiteral","src":"31552:1:30","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31547:1:30","type":""}]}]},"src":"31537:284:30"},{"nodeType":"YulAssignment","src":"31830:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"31837:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31830:3:30"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31227:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31234:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31243:3:30","type":""}],"src":"31134:712:30"},{"body":{"nodeType":"YulBlock","src":"32064:517:30","statements":[{"nodeType":"YulVariableDeclaration","src":"32074:26:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32090:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"32095:4:30","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32086:3:30"},"nodeType":"YulFunctionCall","src":"32086:14:30"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"32078:4:30","type":""}]},{"nodeType":"YulBlock","src":"32110:165:30","statements":[{"nodeType":"YulVariableDeclaration","src":"32146:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32176:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"32183:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32172:3:30"},"nodeType":"YulFunctionCall","src":"32172:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32166:5:30"},"nodeType":"YulFunctionCall","src":"32166:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32150:12:30","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32236:12:30"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32254:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"32259:4:30","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32250:3:30"},"nodeType":"YulFunctionCall","src":"32250:14:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32202:33:30"},"nodeType":"YulFunctionCall","src":"32202:63:30"},"nodeType":"YulExpressionStatement","src":"32202:63:30"}]},{"nodeType":"YulBlock","src":"32285:269:30","statements":[{"nodeType":"YulVariableDeclaration","src":"32324:43:30","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32354:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"32361:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32350:3:30"},"nodeType":"YulFunctionCall","src":"32350:16:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32344:5:30"},"nodeType":"YulFunctionCall","src":"32344:23:30"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32328:12:30","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32392:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"32397:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32388:3:30"},"nodeType":"YulFunctionCall","src":"32388:14:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32408:4:30"},{"name":"pos","nodeType":"YulIdentifier","src":"32414:3:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32404:3:30"},"nodeType":"YulFunctionCall","src":"32404:14:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32381:6:30"},"nodeType":"YulFunctionCall","src":"32381:38:30"},"nodeType":"YulExpressionStatement","src":"32381:38:30"},{"nodeType":"YulAssignment","src":"32432:111:30","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32524:12:30"},{"name":"tail","nodeType":"YulIdentifier","src":"32538:4:30"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32440:83:30"},"nodeType":"YulFunctionCall","src":"32440:103:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32432:4:30"}]}]},{"nodeType":"YulAssignment","src":"32564:11:30","value":{"name":"tail","nodeType":"YulIdentifier","src":"32571:4:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32564:3:30"}]}]},"name":"abi_encode_t_struct$_ChainInclusionProof_$5367_memory_ptr_to_t_struct$_ChainInclusionProof_$5367_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32043:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32050:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32059:3:30","type":""}],"src":"31916:665:30"},{"body":{"nodeType":"YulBlock","src":"32883:532:30","statements":[{"nodeType":"YulAssignment","src":"32893:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32905:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"32916:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32901:3:30"},"nodeType":"YulFunctionCall","src":"32901:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32893:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32973:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32986:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"32997:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32982:3:30"},"nodeType":"YulFunctionCall","src":"32982:17:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32929:43:30"},"nodeType":"YulFunctionCall","src":"32929:71:30"},"nodeType":"YulExpressionStatement","src":"32929:71:30"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33021:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"33032:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33017:3:30"},"nodeType":"YulFunctionCall","src":"33017:18:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33041:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"33047:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33037:3:30"},"nodeType":"YulFunctionCall","src":"33037:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33010:6:30"},"nodeType":"YulFunctionCall","src":"33010:48:30"},"nodeType":"YulExpressionStatement","src":"33010:48:30"},{"nodeType":"YulAssignment","src":"33067:134:30","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33187:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"33196:4:30"}],"functionName":{"name":"abi_encode_t_struct$_ChainBatchHeader_$5361_memory_ptr_to_t_struct$_ChainBatchHeader_$5361_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33075:111:30"},"nodeType":"YulFunctionCall","src":"33075:126:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33067:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33222:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"33233:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33218:3:30"},"nodeType":"YulFunctionCall","src":"33218:18:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33242:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"33248:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33238:3:30"},"nodeType":"YulFunctionCall","src":"33238:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33211:6:30"},"nodeType":"YulFunctionCall","src":"33211:48:30"},"nodeType":"YulExpressionStatement","src":"33211:48:30"},{"nodeType":"YulAssignment","src":"33268:140:30","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33394:6:30"},{"name":"tail","nodeType":"YulIdentifier","src":"33403:4:30"}],"functionName":{"name":"abi_encode_t_struct$_ChainInclusionProof_$5367_memory_ptr_to_t_struct$_ChainInclusionProof_$5367_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33276:117:30"},"nodeType":"YulFunctionCall","src":"33276:132:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33268:4:30"}]}]},"name":"abi_encode_tuple_t_bytes32_t_struct$_ChainBatchHeader_$5361_memory_ptr_t_struct$_ChainInclusionProof_$5367_memory_ptr__to_t_bytes32_t_struct$_ChainBatchHeader_$5361_memory_ptr_t_struct$_ChainInclusionProof_$5367_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32839:9:30","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32851:6:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32859:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32867:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32878:4:30","type":""}],"src":"32587:828:30"},{"body":{"nodeType":"YulBlock","src":"33461:76:30","statements":[{"body":{"nodeType":"YulBlock","src":"33515:16:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33524:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33527:1:30","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33517:6:30"},"nodeType":"YulFunctionCall","src":"33517:12:30"},"nodeType":"YulExpressionStatement","src":"33517:12:30"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33484:5:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33506:5:30"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"33491:14:30"},"nodeType":"YulFunctionCall","src":"33491:21:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33481:2:30"},"nodeType":"YulFunctionCall","src":"33481:32:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33474:6:30"},"nodeType":"YulFunctionCall","src":"33474:40:30"},"nodeType":"YulIf","src":"33471:60:30"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33454:5:30","type":""}],"src":"33421:116:30"},{"body":{"nodeType":"YulBlock","src":"33603:77:30","statements":[{"nodeType":"YulAssignment","src":"33613:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33628:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33622:5:30"},"nodeType":"YulFunctionCall","src":"33622:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33613:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33668:5:30"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"33644:23:30"},"nodeType":"YulFunctionCall","src":"33644:30:30"},"nodeType":"YulExpressionStatement","src":"33644:30:30"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"33581:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"33589:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"33597:5:30","type":""}],"src":"33543:137:30"},{"body":{"nodeType":"YulBlock","src":"33760:271:30","statements":[{"body":{"nodeType":"YulBlock","src":"33806:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33808:77:30"},"nodeType":"YulFunctionCall","src":"33808:79:30"},"nodeType":"YulExpressionStatement","src":"33808:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33781:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"33790:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33777:3:30"},"nodeType":"YulFunctionCall","src":"33777:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"33802:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33773:3:30"},"nodeType":"YulFunctionCall","src":"33773:32:30"},"nodeType":"YulIf","src":"33770:119:30"},{"nodeType":"YulBlock","src":"33899:125:30","statements":[{"nodeType":"YulVariableDeclaration","src":"33914:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"33928:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33918:6:30","type":""}]},{"nodeType":"YulAssignment","src":"33943:71:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33986:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"33997:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33982:3:30"},"nodeType":"YulFunctionCall","src":"33982:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34006:7:30"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"33953:28:30"},"nodeType":"YulFunctionCall","src":"33953:61:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33943:6:30"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33730:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33741:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33753:6:30","type":""}],"src":"33686:345:30"},{"body":{"nodeType":"YulBlock","src":"34150:34:30","statements":[{"nodeType":"YulAssignment","src":"34160:18:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"34175:3:30"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34160:11:30"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34122:3:30","type":""},{"name":"length","nodeType":"YulTypedName","src":"34127:6:30","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34138:11:30","type":""}],"src":"34037:147:30"},{"body":{"nodeType":"YulBlock","src":"34298:278:30","statements":[{"nodeType":"YulVariableDeclaration","src":"34308:52:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34354:5:30"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34322:31:30"},"nodeType":"YulFunctionCall","src":"34322:38:30"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34312:6:30","type":""}]},{"nodeType":"YulAssignment","src":"34369:95:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34452:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"34457:6:30"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34376:75:30"},"nodeType":"YulFunctionCall","src":"34376:88:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34369:3:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34512:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"34519:4:30","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34508:3:30"},"nodeType":"YulFunctionCall","src":"34508:16:30"},{"name":"pos","nodeType":"YulIdentifier","src":"34526:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"34531:6:30"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"34473:34:30"},"nodeType":"YulFunctionCall","src":"34473:65:30"},"nodeType":"YulExpressionStatement","src":"34473:65:30"},{"nodeType":"YulAssignment","src":"34547:23:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34558:3:30"},{"name":"length","nodeType":"YulIdentifier","src":"34563:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34554:3:30"},"nodeType":"YulFunctionCall","src":"34554:16:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34547:3:30"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34279:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34286:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34294:3:30","type":""}],"src":"34190:386:30"},{"body":{"nodeType":"YulBlock","src":"34624:52:30","statements":[{"nodeType":"YulAssignment","src":"34634:35:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34659:2:30","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"34663:5:30"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34655:3:30"},"nodeType":"YulFunctionCall","src":"34655:14:30"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34634:8:30"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34605:5:30","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34615:8:30","type":""}],"src":"34582:94:30"},{"body":{"nodeType":"YulBlock","src":"34729:47:30","statements":[{"nodeType":"YulAssignment","src":"34739:31:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34764:5:30"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"34750:13:30"},"nodeType":"YulFunctionCall","src":"34750:20:30"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"34739:7:30"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34711:5:30","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"34721:7:30","type":""}],"src":"34682:94:30"},{"body":{"nodeType":"YulBlock","src":"34829:53:30","statements":[{"nodeType":"YulAssignment","src":"34839:37:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34870:5:30"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"34850:19:30"},"nodeType":"YulFunctionCall","src":"34850:26:30"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"34839:7:30"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34811:5:30","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"34821:7:30","type":""}],"src":"34782:100:30"},{"body":{"nodeType":"YulBlock","src":"34971:74:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34988:3:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35031:5:30"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"35013:17:30"},"nodeType":"YulFunctionCall","src":"35013:24:30"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"34993:19:30"},"nodeType":"YulFunctionCall","src":"34993:45:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34981:6:30"},"nodeType":"YulFunctionCall","src":"34981:58:30"},"nodeType":"YulExpressionStatement","src":"34981:58:30"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34959:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34966:3:30","type":""}],"src":"34888:157:30"},{"body":{"nodeType":"YulBlock","src":"35213:250:30","statements":[{"nodeType":"YulAssignment","src":"35224:100:30","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35311:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"35320:3:30"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35231:79:30"},"nodeType":"YulFunctionCall","src":"35231:93:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35224:3:30"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35396:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"35405:3:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35334:61:30"},"nodeType":"YulFunctionCall","src":"35334:75:30"},"nodeType":"YulExpressionStatement","src":"35334:75:30"},{"nodeType":"YulAssignment","src":"35418:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35429:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"35434:2:30","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35425:3:30"},"nodeType":"YulFunctionCall","src":"35425:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35418:3:30"}]},{"nodeType":"YulAssignment","src":"35447:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"35454:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35447:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35184:3:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35190:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35198:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35209:3:30","type":""}],"src":"35051:412:30"},{"body":{"nodeType":"YulBlock","src":"35516:32:30","statements":[{"nodeType":"YulAssignment","src":"35526:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"35537:5:30"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35526:7:30"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35498:5:30","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35508:7:30","type":""}],"src":"35469:79:30"},{"body":{"nodeType":"YulBlock","src":"35637:74:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35654:3:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35697:5:30"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"35679:17:30"},"nodeType":"YulFunctionCall","src":"35679:24:30"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"35659:19:30"},"nodeType":"YulFunctionCall","src":"35659:45:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35647:6:30"},"nodeType":"YulFunctionCall","src":"35647:58:30"},"nodeType":"YulExpressionStatement","src":"35647:58:30"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35625:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35632:3:30","type":""}],"src":"35554:157:30"},{"body":{"nodeType":"YulBlock","src":"35764:32:30","statements":[{"nodeType":"YulAssignment","src":"35774:16:30","value":{"name":"value","nodeType":"YulIdentifier","src":"35785:5:30"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35774:7:30"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35746:5:30","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35756:7:30","type":""}],"src":"35717:79:30"},{"body":{"nodeType":"YulBlock","src":"35885:74:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35902:3:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35945:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35927:17:30"},"nodeType":"YulFunctionCall","src":"35927:24:30"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"35907:19:30"},"nodeType":"YulFunctionCall","src":"35907:45:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35895:6:30"},"nodeType":"YulFunctionCall","src":"35895:58:30"},"nodeType":"YulExpressionStatement","src":"35895:58:30"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35873:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35880:3:30","type":""}],"src":"35802:157:30"},{"body":{"nodeType":"YulBlock","src":"36109:253:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36182:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"36191:3:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36120:61:30"},"nodeType":"YulFunctionCall","src":"36120:75:30"},"nodeType":"YulExpressionStatement","src":"36120:75:30"},{"nodeType":"YulAssignment","src":"36204:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36215:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"36220:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36211:3:30"},"nodeType":"YulFunctionCall","src":"36211:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36204:3:30"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36295:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"36304:3:30"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36233:61:30"},"nodeType":"YulFunctionCall","src":"36233:75:30"},"nodeType":"YulExpressionStatement","src":"36233:75:30"},{"nodeType":"YulAssignment","src":"36317:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36328:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"36333:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36324:3:30"},"nodeType":"YulFunctionCall","src":"36324:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36317:3:30"}]},{"nodeType":"YulAssignment","src":"36346:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"36353:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36346:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36080:3:30","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36086:6:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36094:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36105:3:30","type":""}],"src":"35965:397:30"},{"body":{"nodeType":"YulBlock","src":"36484:140:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36557:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"36566:3:30"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36495:61:30"},"nodeType":"YulFunctionCall","src":"36495:75:30"},"nodeType":"YulExpressionStatement","src":"36495:75:30"},{"nodeType":"YulAssignment","src":"36579:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36590:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"36595:2:30","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36586:3:30"},"nodeType":"YulFunctionCall","src":"36586:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36579:3:30"}]},{"nodeType":"YulAssignment","src":"36608:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"36615:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36608:3:30"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36463:3:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36469:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36480:3:30","type":""}],"src":"36368:256:30"},{"body":{"nodeType":"YulBlock","src":"36736:195:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36758:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"36766:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36754:3:30"},"nodeType":"YulFunctionCall","src":"36754:14:30"},{"hexValue":"4d6573736167652070617373696e67207072656465706c6f7920686173206e6f","kind":"string","nodeType":"YulLiteral","src":"36770:34:30","type":"","value":"Message passing predeploy has no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36747:6:30"},"nodeType":"YulFunctionCall","src":"36747:58:30"},"nodeType":"YulExpressionStatement","src":"36747:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36826:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"36834:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36822:3:30"},"nodeType":"YulFunctionCall","src":"36822:15:30"},{"hexValue":"74206265656e20696e697469616c697a6564206f7220696e76616c6964207072","kind":"string","nodeType":"YulLiteral","src":"36839:34:30","type":"","value":"t been initialized or invalid pr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36815:6:30"},"nodeType":"YulFunctionCall","src":"36815:59:30"},"nodeType":"YulExpressionStatement","src":"36815:59:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36895:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"36903:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36891:3:30"},"nodeType":"YulFunctionCall","src":"36891:15:30"},{"hexValue":"6f6f662070726f76696465642e","kind":"string","nodeType":"YulLiteral","src":"36908:15:30","type":"","value":"oof provided."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36884:6:30"},"nodeType":"YulFunctionCall","src":"36884:40:30"},"nodeType":"YulExpressionStatement","src":"36884:40:30"}]},"name":"store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36728:6:30","type":""}],"src":"36630:301:30"},{"body":{"nodeType":"YulBlock","src":"37083:220:30","statements":[{"nodeType":"YulAssignment","src":"37093:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37159:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"37164:2:30","type":"","value":"77"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37100:58:30"},"nodeType":"YulFunctionCall","src":"37100:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37093:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37265:3:30"}],"functionName":{"name":"store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","nodeType":"YulIdentifier","src":"37176:88:30"},"nodeType":"YulFunctionCall","src":"37176:93:30"},"nodeType":"YulExpressionStatement","src":"37176:93:30"},{"nodeType":"YulAssignment","src":"37278:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37289:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"37294:2:30","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37285:3:30"},"nodeType":"YulFunctionCall","src":"37285:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37278:3:30"}]}]},"name":"abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37071:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37079:3:30","type":""}],"src":"36937:366:30"},{"body":{"nodeType":"YulBlock","src":"37480:248:30","statements":[{"nodeType":"YulAssignment","src":"37490:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37502:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"37513:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37498:3:30"},"nodeType":"YulFunctionCall","src":"37498:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37490:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37537:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"37548:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37533:3:30"},"nodeType":"YulFunctionCall","src":"37533:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37556:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"37562:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37552:3:30"},"nodeType":"YulFunctionCall","src":"37552:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37526:6:30"},"nodeType":"YulFunctionCall","src":"37526:47:30"},"nodeType":"YulExpressionStatement","src":"37526:47:30"},{"nodeType":"YulAssignment","src":"37582:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37716:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37590:124:30"},"nodeType":"YulFunctionCall","src":"37590:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37582:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37460:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37475:4:30","type":""}],"src":"37309:419:30"},{"body":{"nodeType":"YulBlock","src":"37850:140:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37923:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"37932:3:30"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37861:61:30"},"nodeType":"YulFunctionCall","src":"37861:75:30"},"nodeType":"YulExpressionStatement","src":"37861:75:30"},{"nodeType":"YulAssignment","src":"37945:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37956:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"37961:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37952:3:30"},"nodeType":"YulFunctionCall","src":"37952:12:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37945:3:30"}]},{"nodeType":"YulAssignment","src":"37974:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"37981:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37974:3:30"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37829:3:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37835:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37846:3:30","type":""}],"src":"37734:256:30"},{"body":{"nodeType":"YulBlock","src":"38039:43:30","statements":[{"nodeType":"YulAssignment","src":"38049:27:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38064:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"38071:4:30","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38060:3:30"},"nodeType":"YulFunctionCall","src":"38060:16:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38049:7:30"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38021:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38031:7:30","type":""}],"src":"37996:86:30"},{"body":{"nodeType":"YulBlock","src":"38131:53:30","statements":[{"nodeType":"YulAssignment","src":"38141:36:30","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38166:3:30","type":"","value":"248"},{"name":"value","nodeType":"YulIdentifier","src":"38171:5:30"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"38162:3:30"},"nodeType":"YulFunctionCall","src":"38162:15:30"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"38141:8:30"}]}]},"name":"shift_left_248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38112:5:30","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"38122:8:30","type":""}],"src":"38088:96:30"},{"body":{"nodeType":"YulBlock","src":"38235:48:30","statements":[{"nodeType":"YulAssignment","src":"38245:32:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38271:5:30"}],"functionName":{"name":"shift_left_248","nodeType":"YulIdentifier","src":"38256:14:30"},"nodeType":"YulFunctionCall","src":"38256:21:30"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38245:7:30"}]}]},"name":"leftAlign_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38217:5:30","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38227:7:30","type":""}],"src":"38190:93:30"},{"body":{"nodeType":"YulBlock","src":"38368:70:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38385:3:30"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38424:5:30"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"38408:15:30"},"nodeType":"YulFunctionCall","src":"38408:22:30"}],"functionName":{"name":"leftAlign_t_uint8","nodeType":"YulIdentifier","src":"38390:17:30"},"nodeType":"YulFunctionCall","src":"38390:41:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38378:6:30"},"nodeType":"YulFunctionCall","src":"38378:54:30"},"nodeType":"YulExpressionStatement","src":"38378:54:30"}]},"name":"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38356:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38363:3:30","type":""}],"src":"38289:149:30"},{"body":{"nodeType":"YulBlock","src":"38556:135:30","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38625:6:30"},{"name":"pos","nodeType":"YulIdentifier","src":"38634:3:30"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38567:57:30"},"nodeType":"YulFunctionCall","src":"38567:71:30"},"nodeType":"YulExpressionStatement","src":"38567:71:30"},{"nodeType":"YulAssignment","src":"38647:18:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38658:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"38663:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38654:3:30"},"nodeType":"YulFunctionCall","src":"38654:11:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38647:3:30"}]},{"nodeType":"YulAssignment","src":"38675:10:30","value":{"name":"pos","nodeType":"YulIdentifier","src":"38682:3:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38675:3:30"}]}]},"name":"abi_encode_tuple_packed_t_uint8__to_t_uint8__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38535:3:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38541:6:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38552:3:30","type":""}],"src":"38444:247:30"},{"body":{"nodeType":"YulBlock","src":"38803:51:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38825:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"38833:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38821:3:30"},"nodeType":"YulFunctionCall","src":"38821:14:30"},{"hexValue":"21627269646765","kind":"string","nodeType":"YulLiteral","src":"38837:9:30","type":"","value":"!bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38814:6:30"},"nodeType":"YulFunctionCall","src":"38814:33:30"},"nodeType":"YulExpressionStatement","src":"38814:33:30"}]},"name":"store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38795:6:30","type":""}],"src":"38697:157:30"},{"body":{"nodeType":"YulBlock","src":"39006:219:30","statements":[{"nodeType":"YulAssignment","src":"39016:73:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39082:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"39087:1:30","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39023:58:30"},"nodeType":"YulFunctionCall","src":"39023:66:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39016:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39187:3:30"}],"functionName":{"name":"store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","nodeType":"YulIdentifier","src":"39098:88:30"},"nodeType":"YulFunctionCall","src":"39098:93:30"},"nodeType":"YulExpressionStatement","src":"39098:93:30"},{"nodeType":"YulAssignment","src":"39200:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39211:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"39216:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39207:3:30"},"nodeType":"YulFunctionCall","src":"39207:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39200:3:30"}]}]},"name":"abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38994:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39002:3:30","type":""}],"src":"38860:365:30"},{"body":{"nodeType":"YulBlock","src":"39402:248:30","statements":[{"nodeType":"YulAssignment","src":"39412:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39424:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"39435:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39420:3:30"},"nodeType":"YulFunctionCall","src":"39420:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39412:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39459:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"39470:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39455:3:30"},"nodeType":"YulFunctionCall","src":"39455:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39478:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"39484:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39474:3:30"},"nodeType":"YulFunctionCall","src":"39474:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39448:6:30"},"nodeType":"YulFunctionCall","src":"39448:47:30"},"nodeType":"YulExpressionStatement","src":"39448:47:30"},{"nodeType":"YulAssignment","src":"39504:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39638:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39512:124:30"},"nodeType":"YulFunctionCall","src":"39512:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39504:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39382:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39397:4:30","type":""}],"src":"39231:419:30"},{"body":{"nodeType":"YulBlock","src":"39719:80:30","statements":[{"nodeType":"YulAssignment","src":"39729:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"39744:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39738:5:30"},"nodeType":"YulFunctionCall","src":"39738:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39729:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39787:5:30"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"39760:26:30"},"nodeType":"YulFunctionCall","src":"39760:33:30"},"nodeType":"YulExpressionStatement","src":"39760:33:30"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"39697:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"39705:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"39713:5:30","type":""}],"src":"39656:143:30"},{"body":{"nodeType":"YulBlock","src":"39882:274:30","statements":[{"body":{"nodeType":"YulBlock","src":"39928:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"39930:77:30"},"nodeType":"YulFunctionCall","src":"39930:79:30"},"nodeType":"YulExpressionStatement","src":"39930:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"39903:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"39912:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39899:3:30"},"nodeType":"YulFunctionCall","src":"39899:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"39924:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"39895:3:30"},"nodeType":"YulFunctionCall","src":"39895:32:30"},"nodeType":"YulIf","src":"39892:119:30"},{"nodeType":"YulBlock","src":"40021:128:30","statements":[{"nodeType":"YulVariableDeclaration","src":"40036:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"40050:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"40040:6:30","type":""}]},{"nodeType":"YulAssignment","src":"40065:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40111:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"40122:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40107:3:30"},"nodeType":"YulFunctionCall","src":"40107:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"40131:7:30"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"40075:31:30"},"nodeType":"YulFunctionCall","src":"40075:64:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"40065:6:30"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39852:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"39863:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"39875:6:30","type":""}],"src":"39805:351:30"},{"body":{"nodeType":"YulBlock","src":"40190:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40207:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40210:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40200:6:30"},"nodeType":"YulFunctionCall","src":"40200:88:30"},"nodeType":"YulExpressionStatement","src":"40200:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40304:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40307:4:30","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40297:6:30"},"nodeType":"YulFunctionCall","src":"40297:15:30"},"nodeType":"YulExpressionStatement","src":"40297:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40328:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40331:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40321:6:30"},"nodeType":"YulFunctionCall","src":"40321:15:30"},"nodeType":"YulExpressionStatement","src":"40321:15:30"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"40162:180:30"},{"body":{"nodeType":"YulBlock","src":"40454:54:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40476:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"40484:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40472:3:30"},"nodeType":"YulFunctionCall","src":"40472:14:30"},{"hexValue":"217472756e6361746564","kind":"string","nodeType":"YulLiteral","src":"40488:12:30","type":"","value":"!truncated"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40465:6:30"},"nodeType":"YulFunctionCall","src":"40465:36:30"},"nodeType":"YulExpressionStatement","src":"40465:36:30"}]},"name":"store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40446:6:30","type":""}],"src":"40348:160:30"},{"body":{"nodeType":"YulBlock","src":"40660:220:30","statements":[{"nodeType":"YulAssignment","src":"40670:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40736:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"40741:2:30","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40677:58:30"},"nodeType":"YulFunctionCall","src":"40677:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40670:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40842:3:30"}],"functionName":{"name":"store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","nodeType":"YulIdentifier","src":"40753:88:30"},"nodeType":"YulFunctionCall","src":"40753:93:30"},"nodeType":"YulExpressionStatement","src":"40753:93:30"},{"nodeType":"YulAssignment","src":"40855:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40866:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"40871:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40862:3:30"},"nodeType":"YulFunctionCall","src":"40862:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40855:3:30"}]}]},"name":"abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40648:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40656:3:30","type":""}],"src":"40514:366:30"},{"body":{"nodeType":"YulBlock","src":"41057:248:30","statements":[{"nodeType":"YulAssignment","src":"41067:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41079:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"41090:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41075:3:30"},"nodeType":"YulFunctionCall","src":"41075:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41067:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41114:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"41125:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41110:3:30"},"nodeType":"YulFunctionCall","src":"41110:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41133:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"41139:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41129:3:30"},"nodeType":"YulFunctionCall","src":"41129:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41103:6:30"},"nodeType":"YulFunctionCall","src":"41103:47:30"},"nodeType":"YulExpressionStatement","src":"41103:47:30"},{"nodeType":"YulAssignment","src":"41159:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41293:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41167:124:30"},"nodeType":"YulFunctionCall","src":"41167:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41159:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41037:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41052:4:30","type":""}],"src":"40886:419:30"},{"body":{"nodeType":"YulBlock","src":"41417:70:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41439:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"41447:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41435:3:30"},"nodeType":"YulFunctionCall","src":"41435:14:30"},{"hexValue":"50726f76696465642070726f6f6620697320696e76616c69642e","kind":"string","nodeType":"YulLiteral","src":"41451:28:30","type":"","value":"Provided proof is invalid."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41428:6:30"},"nodeType":"YulFunctionCall","src":"41428:52:30"},"nodeType":"YulExpressionStatement","src":"41428:52:30"}]},"name":"store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41409:6:30","type":""}],"src":"41311:176:30"},{"body":{"nodeType":"YulBlock","src":"41639:220:30","statements":[{"nodeType":"YulAssignment","src":"41649:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41715:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"41720:2:30","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41656:58:30"},"nodeType":"YulFunctionCall","src":"41656:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41649:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41821:3:30"}],"functionName":{"name":"store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","nodeType":"YulIdentifier","src":"41732:88:30"},"nodeType":"YulFunctionCall","src":"41732:93:30"},"nodeType":"YulExpressionStatement","src":"41732:93:30"},{"nodeType":"YulAssignment","src":"41834:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41845:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"41850:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41841:3:30"},"nodeType":"YulFunctionCall","src":"41841:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41834:3:30"}]}]},"name":"abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41627:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41635:3:30","type":""}],"src":"41493:366:30"},{"body":{"nodeType":"YulBlock","src":"42036:248:30","statements":[{"nodeType":"YulAssignment","src":"42046:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42058:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"42069:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42054:3:30"},"nodeType":"YulFunctionCall","src":"42054:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42046:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42093:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"42104:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42089:3:30"},"nodeType":"YulFunctionCall","src":"42089:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42112:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"42118:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42108:3:30"},"nodeType":"YulFunctionCall","src":"42108:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42082:6:30"},"nodeType":"YulFunctionCall","src":"42082:47:30"},"nodeType":"YulExpressionStatement","src":"42082:47:30"},{"nodeType":"YulAssignment","src":"42138:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42272:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42146:124:30"},"nodeType":"YulFunctionCall","src":"42146:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42138:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42016:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42031:4:30","type":""}],"src":"41865:419:30"},{"body":{"nodeType":"YulBlock","src":"42396:70:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42418:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"42426:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42414:3:30"},"nodeType":"YulFunctionCall","src":"42414:14:30"},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","kind":"string","nodeType":"YulLiteral","src":"42430:28:30","type":"","value":"Invalid RLP bytes32 value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42407:6:30"},"nodeType":"YulFunctionCall","src":"42407:52:30"},"nodeType":"YulExpressionStatement","src":"42407:52:30"}]},"name":"store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42388:6:30","type":""}],"src":"42290:176:30"},{"body":{"nodeType":"YulBlock","src":"42618:220:30","statements":[{"nodeType":"YulAssignment","src":"42628:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42694:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"42699:2:30","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42635:58:30"},"nodeType":"YulFunctionCall","src":"42635:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42628:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42800:3:30"}],"functionName":{"name":"store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","nodeType":"YulIdentifier","src":"42711:88:30"},"nodeType":"YulFunctionCall","src":"42711:93:30"},"nodeType":"YulExpressionStatement","src":"42711:93:30"},{"nodeType":"YulAssignment","src":"42813:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42824:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"42829:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42820:3:30"},"nodeType":"YulFunctionCall","src":"42820:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42813:3:30"}]}]},"name":"abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42606:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42614:3:30","type":""}],"src":"42472:366:30"},{"body":{"nodeType":"YulBlock","src":"43015:248:30","statements":[{"nodeType":"YulAssignment","src":"43025:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43037:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"43048:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43033:3:30"},"nodeType":"YulFunctionCall","src":"43033:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43025:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43072:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"43083:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43068:3:30"},"nodeType":"YulFunctionCall","src":"43068:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43091:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"43097:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43087:3:30"},"nodeType":"YulFunctionCall","src":"43087:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43061:6:30"},"nodeType":"YulFunctionCall","src":"43061:47:30"},"nodeType":"YulExpressionStatement","src":"43061:47:30"},{"nodeType":"YulAssignment","src":"43117:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43251:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43125:124:30"},"nodeType":"YulFunctionCall","src":"43125:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43117:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42995:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43010:4:30","type":""}],"src":"42844:419:30"},{"body":{"nodeType":"YulBlock","src":"43297:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43314:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43317:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43307:6:30"},"nodeType":"YulFunctionCall","src":"43307:88:30"},"nodeType":"YulExpressionStatement","src":"43307:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43411:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43414:4:30","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43404:6:30"},"nodeType":"YulFunctionCall","src":"43404:15:30"},"nodeType":"YulExpressionStatement","src":"43404:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43435:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43438:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43428:6:30"},"nodeType":"YulFunctionCall","src":"43428:15:30"},"nodeType":"YulExpressionStatement","src":"43428:15:30"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"43269:180:30"},{"body":{"nodeType":"YulBlock","src":"43561:61:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43583:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"43591:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43579:3:30"},"nodeType":"YulFunctionCall","src":"43579:14:30"},{"hexValue":"496e76616c696420726f6f742068617368","kind":"string","nodeType":"YulLiteral","src":"43595:19:30","type":"","value":"Invalid root hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43572:6:30"},"nodeType":"YulFunctionCall","src":"43572:43:30"},"nodeType":"YulExpressionStatement","src":"43572:43:30"}]},"name":"store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43553:6:30","type":""}],"src":"43455:167:30"},{"body":{"nodeType":"YulBlock","src":"43774:220:30","statements":[{"nodeType":"YulAssignment","src":"43784:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43850:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"43855:2:30","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43791:58:30"},"nodeType":"YulFunctionCall","src":"43791:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43784:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43956:3:30"}],"functionName":{"name":"store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","nodeType":"YulIdentifier","src":"43867:88:30"},"nodeType":"YulFunctionCall","src":"43867:93:30"},"nodeType":"YulExpressionStatement","src":"43867:93:30"},{"nodeType":"YulAssignment","src":"43969:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43980:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"43985:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43976:3:30"},"nodeType":"YulFunctionCall","src":"43976:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43969:3:30"}]}]},"name":"abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43762:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43770:3:30","type":""}],"src":"43628:366:30"},{"body":{"nodeType":"YulBlock","src":"44171:248:30","statements":[{"nodeType":"YulAssignment","src":"44181:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44193:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"44204:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44189:3:30"},"nodeType":"YulFunctionCall","src":"44189:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44181:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44228:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"44239:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44224:3:30"},"nodeType":"YulFunctionCall","src":"44224:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44247:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"44253:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44243:3:30"},"nodeType":"YulFunctionCall","src":"44243:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44217:6:30"},"nodeType":"YulFunctionCall","src":"44217:47:30"},"nodeType":"YulExpressionStatement","src":"44217:47:30"},{"nodeType":"YulAssignment","src":"44273:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44407:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44281:124:30"},"nodeType":"YulFunctionCall","src":"44281:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44273:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44151:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44166:4:30","type":""}],"src":"44000:419:30"},{"body":{"nodeType":"YulBlock","src":"44531:71:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44553:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"44561:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44549:3:30"},"nodeType":"YulFunctionCall","src":"44549:14:30"},{"hexValue":"496e76616c6964206c6172676520696e7465726e616c2068617368","kind":"string","nodeType":"YulLiteral","src":"44565:29:30","type":"","value":"Invalid large internal hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44542:6:30"},"nodeType":"YulFunctionCall","src":"44542:53:30"},"nodeType":"YulExpressionStatement","src":"44542:53:30"}]},"name":"store_literal_in_memory_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44523:6:30","type":""}],"src":"44425:177:30"},{"body":{"nodeType":"YulBlock","src":"44754:220:30","statements":[{"nodeType":"YulAssignment","src":"44764:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44830:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"44835:2:30","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44771:58:30"},"nodeType":"YulFunctionCall","src":"44771:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44764:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44936:3:30"}],"functionName":{"name":"store_literal_in_memory_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec","nodeType":"YulIdentifier","src":"44847:88:30"},"nodeType":"YulFunctionCall","src":"44847:93:30"},"nodeType":"YulExpressionStatement","src":"44847:93:30"},{"nodeType":"YulAssignment","src":"44949:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44960:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"44965:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44956:3:30"},"nodeType":"YulFunctionCall","src":"44956:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44949:3:30"}]}]},"name":"abi_encode_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44742:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44750:3:30","type":""}],"src":"44608:366:30"},{"body":{"nodeType":"YulBlock","src":"45151:248:30","statements":[{"nodeType":"YulAssignment","src":"45161:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45173:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"45184:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45169:3:30"},"nodeType":"YulFunctionCall","src":"45169:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45161:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45208:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"45219:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45204:3:30"},"nodeType":"YulFunctionCall","src":"45204:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45227:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"45233:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45223:3:30"},"nodeType":"YulFunctionCall","src":"45223:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45197:6:30"},"nodeType":"YulFunctionCall","src":"45197:47:30"},"nodeType":"YulExpressionStatement","src":"45197:47:30"},{"nodeType":"YulAssignment","src":"45253:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45387:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45261:124:30"},"nodeType":"YulFunctionCall","src":"45261:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45253:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45131:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45146:4:30","type":""}],"src":"44980:419:30"},{"body":{"nodeType":"YulBlock","src":"45511:70:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45533:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"45541:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45529:3:30"},"nodeType":"YulFunctionCall","src":"45529:14:30"},{"hexValue":"496e76616c696420696e7465726e616c206e6f64652068617368","kind":"string","nodeType":"YulLiteral","src":"45545:28:30","type":"","value":"Invalid internal node hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45522:6:30"},"nodeType":"YulFunctionCall","src":"45522:52:30"},"nodeType":"YulExpressionStatement","src":"45522:52:30"}]},"name":"store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45503:6:30","type":""}],"src":"45405:176:30"},{"body":{"nodeType":"YulBlock","src":"45733:220:30","statements":[{"nodeType":"YulAssignment","src":"45743:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45809:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"45814:2:30","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45750:58:30"},"nodeType":"YulFunctionCall","src":"45750:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45743:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45915:3:30"}],"functionName":{"name":"store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","nodeType":"YulIdentifier","src":"45826:88:30"},"nodeType":"YulFunctionCall","src":"45826:93:30"},"nodeType":"YulExpressionStatement","src":"45826:93:30"},{"nodeType":"YulAssignment","src":"45928:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45939:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"45944:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45935:3:30"},"nodeType":"YulFunctionCall","src":"45935:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45928:3:30"}]}]},"name":"abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45721:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45729:3:30","type":""}],"src":"45587:366:30"},{"body":{"nodeType":"YulBlock","src":"46130:248:30","statements":[{"nodeType":"YulAssignment","src":"46140:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46152:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"46163:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46148:3:30"},"nodeType":"YulFunctionCall","src":"46148:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46140:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46187:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"46198:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46183:3:30"},"nodeType":"YulFunctionCall","src":"46183:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46206:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"46212:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46202:3:30"},"nodeType":"YulFunctionCall","src":"46202:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46176:6:30"},"nodeType":"YulFunctionCall","src":"46176:47:30"},"nodeType":"YulExpressionStatement","src":"46176:47:30"},{"nodeType":"YulAssignment","src":"46232:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46366:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46240:124:30"},"nodeType":"YulFunctionCall","src":"46240:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46232:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46110:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46125:4:30","type":""}],"src":"45959:419:30"},{"body":{"nodeType":"YulBlock","src":"46412:152:30","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46429:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46432:77:30","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46422:6:30"},"nodeType":"YulFunctionCall","src":"46422:88:30"},"nodeType":"YulExpressionStatement","src":"46422:88:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46526:1:30","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"46529:4:30","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46519:6:30"},"nodeType":"YulFunctionCall","src":"46519:15:30"},"nodeType":"YulExpressionStatement","src":"46519:15:30"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"46550:1:30","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"46553:4:30","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"46543:6:30"},"nodeType":"YulFunctionCall","src":"46543:15:30"},"nodeType":"YulExpressionStatement","src":"46543:15:30"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"46384:180:30"},{"body":{"nodeType":"YulBlock","src":"46602:138:30","statements":[{"nodeType":"YulAssignment","src":"46612:23:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"46633:1:30"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"46617:15:30"},"nodeType":"YulFunctionCall","src":"46617:18:30"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"46612:1:30"}]},{"nodeType":"YulAssignment","src":"46644:23:30","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"46665:1:30"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"46649:15:30"},"nodeType":"YulFunctionCall","src":"46649:18:30"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"46644:1:30"}]},{"body":{"nodeType":"YulBlock","src":"46689:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"46691:16:30"},"nodeType":"YulFunctionCall","src":"46691:18:30"},"nodeType":"YulExpressionStatement","src":"46691:18:30"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"46686:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"46679:6:30"},"nodeType":"YulFunctionCall","src":"46679:9:30"},"nodeType":"YulIf","src":"46676:35:30"},{"nodeType":"YulAssignment","src":"46720:14:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"46729:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"46732:1:30"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"46725:3:30"},"nodeType":"YulFunctionCall","src":"46725:9:30"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"46720:1:30"}]}]},"name":"mod_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"46591:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"46594:1:30","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"46600:1:30","type":""}],"src":"46570:170:30"},{"body":{"nodeType":"YulBlock","src":"46789:148:30","statements":[{"nodeType":"YulAssignment","src":"46799:23:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"46820:1:30"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"46804:15:30"},"nodeType":"YulFunctionCall","src":"46804:18:30"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"46799:1:30"}]},{"nodeType":"YulAssignment","src":"46831:23:30","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"46852:1:30"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"46836:15:30"},"nodeType":"YulFunctionCall","src":"46836:18:30"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"46831:1:30"}]},{"nodeType":"YulAssignment","src":"46863:17:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"46875:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"46878:1:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46871:3:30"},"nodeType":"YulFunctionCall","src":"46871:9:30"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"46863:4:30"}]},{"body":{"nodeType":"YulBlock","src":"46908:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"46910:16:30"},"nodeType":"YulFunctionCall","src":"46910:18:30"},"nodeType":"YulExpressionStatement","src":"46910:18:30"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"46896:4:30"},{"kind":"number","nodeType":"YulLiteral","src":"46902:4:30","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"46893:2:30"},"nodeType":"YulFunctionCall","src":"46893:14:30"},"nodeType":"YulIf","src":"46890:40:30"}]},"name":"checked_sub_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"46775:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"46778:1:30","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"46784:4:30","type":""}],"src":"46746:191:30"},{"body":{"nodeType":"YulBlock","src":"47049:119:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47071:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"47079:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47067:3:30"},"nodeType":"YulFunctionCall","src":"47067:14:30"},{"hexValue":"52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e20","kind":"string","nodeType":"YulLiteral","src":"47083:34:30","type":"","value":"Received a node with an unknown "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47060:6:30"},"nodeType":"YulFunctionCall","src":"47060:58:30"},"nodeType":"YulExpressionStatement","src":"47060:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47139:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"47147:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47135:3:30"},"nodeType":"YulFunctionCall","src":"47135:15:30"},{"hexValue":"707265666978","kind":"string","nodeType":"YulLiteral","src":"47152:8:30","type":"","value":"prefix"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47128:6:30"},"nodeType":"YulFunctionCall","src":"47128:33:30"},"nodeType":"YulExpressionStatement","src":"47128:33:30"}]},"name":"store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47041:6:30","type":""}],"src":"46943:225:30"},{"body":{"nodeType":"YulBlock","src":"47320:220:30","statements":[{"nodeType":"YulAssignment","src":"47330:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47396:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"47401:2:30","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47337:58:30"},"nodeType":"YulFunctionCall","src":"47337:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47330:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47502:3:30"}],"functionName":{"name":"store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","nodeType":"YulIdentifier","src":"47413:88:30"},"nodeType":"YulFunctionCall","src":"47413:93:30"},"nodeType":"YulExpressionStatement","src":"47413:93:30"},{"nodeType":"YulAssignment","src":"47515:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47526:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"47531:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47522:3:30"},"nodeType":"YulFunctionCall","src":"47522:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47515:3:30"}]}]},"name":"abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47308:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47316:3:30","type":""}],"src":"47174:366:30"},{"body":{"nodeType":"YulBlock","src":"47717:248:30","statements":[{"nodeType":"YulAssignment","src":"47727:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47739:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"47750:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47735:3:30"},"nodeType":"YulFunctionCall","src":"47735:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47727:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47774:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"47785:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47770:3:30"},"nodeType":"YulFunctionCall","src":"47770:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47793:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"47799:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47789:3:30"},"nodeType":"YulFunctionCall","src":"47789:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47763:6:30"},"nodeType":"YulFunctionCall","src":"47763:47:30"},"nodeType":"YulExpressionStatement","src":"47763:47:30"},{"nodeType":"YulAssignment","src":"47819:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47953:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47827:124:30"},"nodeType":"YulFunctionCall","src":"47827:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47819:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47697:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47712:4:30","type":""}],"src":"47546:419:30"},{"body":{"nodeType":"YulBlock","src":"48077:73:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48099:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"48107:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48095:3:30"},"nodeType":"YulFunctionCall","src":"48095:14:30"},{"hexValue":"526563656976656420616e20756e706172736561626c65206e6f64652e","kind":"string","nodeType":"YulLiteral","src":"48111:31:30","type":"","value":"Received an unparseable node."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48088:6:30"},"nodeType":"YulFunctionCall","src":"48088:55:30"},"nodeType":"YulExpressionStatement","src":"48088:55:30"}]},"name":"store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48069:6:30","type":""}],"src":"47971:179:30"},{"body":{"nodeType":"YulBlock","src":"48302:220:30","statements":[{"nodeType":"YulAssignment","src":"48312:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48378:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"48383:2:30","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48319:58:30"},"nodeType":"YulFunctionCall","src":"48319:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48312:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48484:3:30"}],"functionName":{"name":"store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","nodeType":"YulIdentifier","src":"48395:88:30"},"nodeType":"YulFunctionCall","src":"48395:93:30"},"nodeType":"YulExpressionStatement","src":"48395:93:30"},{"nodeType":"YulAssignment","src":"48497:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48508:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"48513:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48504:3:30"},"nodeType":"YulFunctionCall","src":"48504:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48497:3:30"}]}]},"name":"abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48290:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48298:3:30","type":""}],"src":"48156:366:30"},{"body":{"nodeType":"YulBlock","src":"48699:248:30","statements":[{"nodeType":"YulAssignment","src":"48709:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48721:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"48732:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48717:3:30"},"nodeType":"YulFunctionCall","src":"48717:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48709:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48756:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"48767:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48752:3:30"},"nodeType":"YulFunctionCall","src":"48752:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48775:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"48781:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48771:3:30"},"nodeType":"YulFunctionCall","src":"48771:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48745:6:30"},"nodeType":"YulFunctionCall","src":"48745:47:30"},"nodeType":"YulExpressionStatement","src":"48745:47:30"},{"nodeType":"YulAssignment","src":"48801:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48935:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48809:124:30"},"nodeType":"YulFunctionCall","src":"48809:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48801:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48679:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48694:4:30","type":""}],"src":"48528:419:30"},{"body":{"nodeType":"YulBlock","src":"49059:67:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49081:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"49089:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49077:3:30"},"nodeType":"YulFunctionCall","src":"49077:14:30"},{"hexValue":"496e76616c696420524c50206c6973742076616c75652e","kind":"string","nodeType":"YulLiteral","src":"49093:25:30","type":"","value":"Invalid RLP list value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49070:6:30"},"nodeType":"YulFunctionCall","src":"49070:49:30"},"nodeType":"YulExpressionStatement","src":"49070:49:30"}]},"name":"store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49051:6:30","type":""}],"src":"48953:173:30"},{"body":{"nodeType":"YulBlock","src":"49278:220:30","statements":[{"nodeType":"YulAssignment","src":"49288:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49354:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"49359:2:30","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49295:58:30"},"nodeType":"YulFunctionCall","src":"49295:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49288:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49460:3:30"}],"functionName":{"name":"store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","nodeType":"YulIdentifier","src":"49371:88:30"},"nodeType":"YulFunctionCall","src":"49371:93:30"},"nodeType":"YulExpressionStatement","src":"49371:93:30"},{"nodeType":"YulAssignment","src":"49473:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49484:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"49489:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49480:3:30"},"nodeType":"YulFunctionCall","src":"49480:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49473:3:30"}]}]},"name":"abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49266:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49274:3:30","type":""}],"src":"49132:366:30"},{"body":{"nodeType":"YulBlock","src":"49675:248:30","statements":[{"nodeType":"YulAssignment","src":"49685:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49697:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"49708:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49693:3:30"},"nodeType":"YulFunctionCall","src":"49693:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49685:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49732:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"49743:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49728:3:30"},"nodeType":"YulFunctionCall","src":"49728:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49751:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"49757:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49747:3:30"},"nodeType":"YulFunctionCall","src":"49747:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49721:6:30"},"nodeType":"YulFunctionCall","src":"49721:47:30"},"nodeType":"YulExpressionStatement","src":"49721:47:30"},{"nodeType":"YulAssignment","src":"49777:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49911:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49785:124:30"},"nodeType":"YulFunctionCall","src":"49785:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49777:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49655:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49670:4:30","type":""}],"src":"49504:419:30"},{"body":{"nodeType":"YulBlock","src":"50035:123:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50057:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"50065:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50053:3:30"},"nodeType":"YulFunctionCall","src":"50053:14:30"},{"hexValue":"50726f766964656420524c50206c6973742065786365656473206d6178206c69","kind":"string","nodeType":"YulLiteral","src":"50069:34:30","type":"","value":"Provided RLP list exceeds max li"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50046:6:30"},"nodeType":"YulFunctionCall","src":"50046:58:30"},"nodeType":"YulExpressionStatement","src":"50046:58:30"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50125:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"50133:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50121:3:30"},"nodeType":"YulFunctionCall","src":"50121:15:30"},{"hexValue":"7374206c656e6774682e","kind":"string","nodeType":"YulLiteral","src":"50138:12:30","type":"","value":"st length."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50114:6:30"},"nodeType":"YulFunctionCall","src":"50114:37:30"},"nodeType":"YulExpressionStatement","src":"50114:37:30"}]},"name":"store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50027:6:30","type":""}],"src":"49929:229:30"},{"body":{"nodeType":"YulBlock","src":"50310:220:30","statements":[{"nodeType":"YulAssignment","src":"50320:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50386:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"50391:2:30","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50327:58:30"},"nodeType":"YulFunctionCall","src":"50327:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50320:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50492:3:30"}],"functionName":{"name":"store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","nodeType":"YulIdentifier","src":"50403:88:30"},"nodeType":"YulFunctionCall","src":"50403:93:30"},"nodeType":"YulExpressionStatement","src":"50403:93:30"},{"nodeType":"YulAssignment","src":"50505:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50516:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"50521:2:30","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50512:3:30"},"nodeType":"YulFunctionCall","src":"50512:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50505:3:30"}]}]},"name":"abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50298:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50306:3:30","type":""}],"src":"50164:366:30"},{"body":{"nodeType":"YulBlock","src":"50707:248:30","statements":[{"nodeType":"YulAssignment","src":"50717:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50729:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"50740:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50725:3:30"},"nodeType":"YulFunctionCall","src":"50725:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50717:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50764:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"50775:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50760:3:30"},"nodeType":"YulFunctionCall","src":"50760:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50783:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"50789:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50779:3:30"},"nodeType":"YulFunctionCall","src":"50779:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50753:6:30"},"nodeType":"YulFunctionCall","src":"50753:47:30"},"nodeType":"YulExpressionStatement","src":"50753:47:30"},{"nodeType":"YulAssignment","src":"50809:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50943:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50817:124:30"},"nodeType":"YulFunctionCall","src":"50817:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50809:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50687:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50702:4:30","type":""}],"src":"50536:419:30"},{"body":{"nodeType":"YulBlock","src":"51067:68:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51089:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"51097:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51085:3:30"},"nodeType":"YulFunctionCall","src":"51085:14:30"},{"hexValue":"524c50206974656d2063616e6e6f74206265206e756c6c2e","kind":"string","nodeType":"YulLiteral","src":"51101:26:30","type":"","value":"RLP item cannot be null."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51078:6:30"},"nodeType":"YulFunctionCall","src":"51078:50:30"},"nodeType":"YulExpressionStatement","src":"51078:50:30"}]},"name":"store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51059:6:30","type":""}],"src":"50961:174:30"},{"body":{"nodeType":"YulBlock","src":"51287:220:30","statements":[{"nodeType":"YulAssignment","src":"51297:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51363:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"51368:2:30","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51304:58:30"},"nodeType":"YulFunctionCall","src":"51304:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51297:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51469:3:30"}],"functionName":{"name":"store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","nodeType":"YulIdentifier","src":"51380:88:30"},"nodeType":"YulFunctionCall","src":"51380:93:30"},"nodeType":"YulExpressionStatement","src":"51380:93:30"},{"nodeType":"YulAssignment","src":"51482:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51493:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"51498:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51489:3:30"},"nodeType":"YulFunctionCall","src":"51489:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51482:3:30"}]}]},"name":"abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51275:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51283:3:30","type":""}],"src":"51141:366:30"},{"body":{"nodeType":"YulBlock","src":"51684:248:30","statements":[{"nodeType":"YulAssignment","src":"51694:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51706:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"51717:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51702:3:30"},"nodeType":"YulFunctionCall","src":"51702:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51694:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51741:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"51752:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51737:3:30"},"nodeType":"YulFunctionCall","src":"51737:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51760:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"51766:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51756:3:30"},"nodeType":"YulFunctionCall","src":"51756:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51730:6:30"},"nodeType":"YulFunctionCall","src":"51730:47:30"},"nodeType":"YulExpressionStatement","src":"51730:47:30"},{"nodeType":"YulAssignment","src":"51786:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51920:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51794:124:30"},"nodeType":"YulFunctionCall","src":"51794:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51786:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51664:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51679:4:30","type":""}],"src":"51513:419:30"},{"body":{"nodeType":"YulBlock","src":"52044:69:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52066:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"52074:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52062:3:30"},"nodeType":"YulFunctionCall","src":"52062:14:30"},{"hexValue":"496e76616c696420524c502073686f727420737472696e672e","kind":"string","nodeType":"YulLiteral","src":"52078:27:30","type":"","value":"Invalid RLP short string."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52055:6:30"},"nodeType":"YulFunctionCall","src":"52055:51:30"},"nodeType":"YulExpressionStatement","src":"52055:51:30"}]},"name":"store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52036:6:30","type":""}],"src":"51938:175:30"},{"body":{"nodeType":"YulBlock","src":"52265:220:30","statements":[{"nodeType":"YulAssignment","src":"52275:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52341:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"52346:2:30","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52282:58:30"},"nodeType":"YulFunctionCall","src":"52282:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52275:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52447:3:30"}],"functionName":{"name":"store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","nodeType":"YulIdentifier","src":"52358:88:30"},"nodeType":"YulFunctionCall","src":"52358:93:30"},"nodeType":"YulExpressionStatement","src":"52358:93:30"},{"nodeType":"YulAssignment","src":"52460:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52471:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"52476:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52467:3:30"},"nodeType":"YulFunctionCall","src":"52467:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52460:3:30"}]}]},"name":"abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52253:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52261:3:30","type":""}],"src":"52119:366:30"},{"body":{"nodeType":"YulBlock","src":"52662:248:30","statements":[{"nodeType":"YulAssignment","src":"52672:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52684:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"52695:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52680:3:30"},"nodeType":"YulFunctionCall","src":"52680:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52672:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52719:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"52730:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52715:3:30"},"nodeType":"YulFunctionCall","src":"52715:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52738:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"52744:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52734:3:30"},"nodeType":"YulFunctionCall","src":"52734:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52708:6:30"},"nodeType":"YulFunctionCall","src":"52708:47:30"},"nodeType":"YulExpressionStatement","src":"52708:47:30"},{"nodeType":"YulAssignment","src":"52764:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52898:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52772:124:30"},"nodeType":"YulFunctionCall","src":"52772:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52764:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52642:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52657:4:30","type":""}],"src":"52491:419:30"},{"body":{"nodeType":"YulBlock","src":"53022:75:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53044:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"53052:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53040:3:30"},"nodeType":"YulFunctionCall","src":"53040:14:30"},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e","kind":"string","nodeType":"YulLiteral","src":"53056:33:30","type":"","value":"Invalid RLP long string length."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53033:6:30"},"nodeType":"YulFunctionCall","src":"53033:57:30"},"nodeType":"YulExpressionStatement","src":"53033:57:30"}]},"name":"store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53014:6:30","type":""}],"src":"52916:181:30"},{"body":{"nodeType":"YulBlock","src":"53249:220:30","statements":[{"nodeType":"YulAssignment","src":"53259:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53325:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"53330:2:30","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53266:58:30"},"nodeType":"YulFunctionCall","src":"53266:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53259:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53431:3:30"}],"functionName":{"name":"store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","nodeType":"YulIdentifier","src":"53342:88:30"},"nodeType":"YulFunctionCall","src":"53342:93:30"},"nodeType":"YulExpressionStatement","src":"53342:93:30"},{"nodeType":"YulAssignment","src":"53444:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53455:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"53460:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53451:3:30"},"nodeType":"YulFunctionCall","src":"53451:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53444:3:30"}]}]},"name":"abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53237:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53245:3:30","type":""}],"src":"53103:366:30"},{"body":{"nodeType":"YulBlock","src":"53646:248:30","statements":[{"nodeType":"YulAssignment","src":"53656:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53668:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"53679:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53664:3:30"},"nodeType":"YulFunctionCall","src":"53664:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53656:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53703:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"53714:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53699:3:30"},"nodeType":"YulFunctionCall","src":"53699:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53722:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"53728:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53718:3:30"},"nodeType":"YulFunctionCall","src":"53718:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53692:6:30"},"nodeType":"YulFunctionCall","src":"53692:47:30"},"nodeType":"YulExpressionStatement","src":"53692:47:30"},{"nodeType":"YulAssignment","src":"53748:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53882:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53756:124:30"},"nodeType":"YulFunctionCall","src":"53756:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53748:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53626:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53641:4:30","type":""}],"src":"53475:419:30"},{"body":{"nodeType":"YulBlock","src":"54006:68:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54028:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"54036:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54024:3:30"},"nodeType":"YulFunctionCall","src":"54024:14:30"},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e672e","kind":"string","nodeType":"YulLiteral","src":"54040:26:30","type":"","value":"Invalid RLP long string."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54017:6:30"},"nodeType":"YulFunctionCall","src":"54017:50:30"},"nodeType":"YulExpressionStatement","src":"54017:50:30"}]},"name":"store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53998:6:30","type":""}],"src":"53900:174:30"},{"body":{"nodeType":"YulBlock","src":"54226:220:30","statements":[{"nodeType":"YulAssignment","src":"54236:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54302:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"54307:2:30","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54243:58:30"},"nodeType":"YulFunctionCall","src":"54243:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54236:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54408:3:30"}],"functionName":{"name":"store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","nodeType":"YulIdentifier","src":"54319:88:30"},"nodeType":"YulFunctionCall","src":"54319:93:30"},"nodeType":"YulExpressionStatement","src":"54319:93:30"},{"nodeType":"YulAssignment","src":"54421:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54432:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"54437:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54428:3:30"},"nodeType":"YulFunctionCall","src":"54428:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54421:3:30"}]}]},"name":"abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54214:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54222:3:30","type":""}],"src":"54080:366:30"},{"body":{"nodeType":"YulBlock","src":"54623:248:30","statements":[{"nodeType":"YulAssignment","src":"54633:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54645:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"54656:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54641:3:30"},"nodeType":"YulFunctionCall","src":"54641:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54633:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54680:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"54691:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54676:3:30"},"nodeType":"YulFunctionCall","src":"54676:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54699:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"54705:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54695:3:30"},"nodeType":"YulFunctionCall","src":"54695:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54669:6:30"},"nodeType":"YulFunctionCall","src":"54669:47:30"},"nodeType":"YulExpressionStatement","src":"54669:47:30"},{"nodeType":"YulAssignment","src":"54725:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54859:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54733:124:30"},"nodeType":"YulFunctionCall","src":"54733:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54725:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54603:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54618:4:30","type":""}],"src":"54452:419:30"},{"body":{"nodeType":"YulBlock","src":"54983:67:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55005:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"55013:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55001:3:30"},"nodeType":"YulFunctionCall","src":"55001:14:30"},{"hexValue":"496e76616c696420524c502073686f7274206c6973742e","kind":"string","nodeType":"YulLiteral","src":"55017:25:30","type":"","value":"Invalid RLP short list."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54994:6:30"},"nodeType":"YulFunctionCall","src":"54994:49:30"},"nodeType":"YulExpressionStatement","src":"54994:49:30"}]},"name":"store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54975:6:30","type":""}],"src":"54877:173:30"},{"body":{"nodeType":"YulBlock","src":"55202:220:30","statements":[{"nodeType":"YulAssignment","src":"55212:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55278:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"55283:2:30","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55219:58:30"},"nodeType":"YulFunctionCall","src":"55219:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55212:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55384:3:30"}],"functionName":{"name":"store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","nodeType":"YulIdentifier","src":"55295:88:30"},"nodeType":"YulFunctionCall","src":"55295:93:30"},"nodeType":"YulExpressionStatement","src":"55295:93:30"},{"nodeType":"YulAssignment","src":"55397:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55408:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"55413:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55404:3:30"},"nodeType":"YulFunctionCall","src":"55404:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55397:3:30"}]}]},"name":"abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55190:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55198:3:30","type":""}],"src":"55056:366:30"},{"body":{"nodeType":"YulBlock","src":"55599:248:30","statements":[{"nodeType":"YulAssignment","src":"55609:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55621:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"55632:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55617:3:30"},"nodeType":"YulFunctionCall","src":"55617:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55609:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55656:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"55667:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55652:3:30"},"nodeType":"YulFunctionCall","src":"55652:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55675:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"55681:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55671:3:30"},"nodeType":"YulFunctionCall","src":"55671:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55645:6:30"},"nodeType":"YulFunctionCall","src":"55645:47:30"},"nodeType":"YulExpressionStatement","src":"55645:47:30"},{"nodeType":"YulAssignment","src":"55701:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55835:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55709:124:30"},"nodeType":"YulFunctionCall","src":"55709:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55701:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55579:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55594:4:30","type":""}],"src":"55428:419:30"},{"body":{"nodeType":"YulBlock","src":"55959:73:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55981:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"55989:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55977:3:30"},"nodeType":"YulFunctionCall","src":"55977:14:30"},{"hexValue":"496e76616c696420524c50206c6f6e67206c697374206c656e6774682e","kind":"string","nodeType":"YulLiteral","src":"55993:31:30","type":"","value":"Invalid RLP long list length."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55970:6:30"},"nodeType":"YulFunctionCall","src":"55970:55:30"},"nodeType":"YulExpressionStatement","src":"55970:55:30"}]},"name":"store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55951:6:30","type":""}],"src":"55853:179:30"},{"body":{"nodeType":"YulBlock","src":"56184:220:30","statements":[{"nodeType":"YulAssignment","src":"56194:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56260:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"56265:2:30","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56201:58:30"},"nodeType":"YulFunctionCall","src":"56201:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56194:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56366:3:30"}],"functionName":{"name":"store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","nodeType":"YulIdentifier","src":"56277:88:30"},"nodeType":"YulFunctionCall","src":"56277:93:30"},"nodeType":"YulExpressionStatement","src":"56277:93:30"},{"nodeType":"YulAssignment","src":"56379:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56390:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"56395:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56386:3:30"},"nodeType":"YulFunctionCall","src":"56386:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56379:3:30"}]}]},"name":"abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"56172:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56180:3:30","type":""}],"src":"56038:366:30"},{"body":{"nodeType":"YulBlock","src":"56581:248:30","statements":[{"nodeType":"YulAssignment","src":"56591:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56603:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"56614:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56599:3:30"},"nodeType":"YulFunctionCall","src":"56599:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56591:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56638:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"56649:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56634:3:30"},"nodeType":"YulFunctionCall","src":"56634:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56657:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"56663:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56653:3:30"},"nodeType":"YulFunctionCall","src":"56653:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56627:6:30"},"nodeType":"YulFunctionCall","src":"56627:47:30"},"nodeType":"YulExpressionStatement","src":"56627:47:30"},{"nodeType":"YulAssignment","src":"56683:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56817:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56691:124:30"},"nodeType":"YulFunctionCall","src":"56691:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56683:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56561:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56576:4:30","type":""}],"src":"56410:419:30"},{"body":{"nodeType":"YulBlock","src":"56941:66:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56963:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"56971:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56959:3:30"},"nodeType":"YulFunctionCall","src":"56959:14:30"},{"hexValue":"496e76616c696420524c50206c6f6e67206c6973742e","kind":"string","nodeType":"YulLiteral","src":"56975:24:30","type":"","value":"Invalid RLP long list."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56952:6:30"},"nodeType":"YulFunctionCall","src":"56952:48:30"},"nodeType":"YulExpressionStatement","src":"56952:48:30"}]},"name":"store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"56933:6:30","type":""}],"src":"56835:172:30"},{"body":{"nodeType":"YulBlock","src":"57159:220:30","statements":[{"nodeType":"YulAssignment","src":"57169:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57235:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"57240:2:30","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57176:58:30"},"nodeType":"YulFunctionCall","src":"57176:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"57169:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57341:3:30"}],"functionName":{"name":"store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","nodeType":"YulIdentifier","src":"57252:88:30"},"nodeType":"YulFunctionCall","src":"57252:93:30"},"nodeType":"YulExpressionStatement","src":"57252:93:30"},{"nodeType":"YulAssignment","src":"57354:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57365:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"57370:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57361:3:30"},"nodeType":"YulFunctionCall","src":"57361:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"57354:3:30"}]}]},"name":"abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"57147:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"57155:3:30","type":""}],"src":"57013:366:30"},{"body":{"nodeType":"YulBlock","src":"57556:248:30","statements":[{"nodeType":"YulAssignment","src":"57566:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57578:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"57589:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57574:3:30"},"nodeType":"YulFunctionCall","src":"57574:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57566:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57613:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"57624:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57609:3:30"},"nodeType":"YulFunctionCall","src":"57609:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57632:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"57638:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57628:3:30"},"nodeType":"YulFunctionCall","src":"57628:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57602:6:30"},"nodeType":"YulFunctionCall","src":"57602:47:30"},"nodeType":"YulExpressionStatement","src":"57602:47:30"},{"nodeType":"YulAssignment","src":"57658:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57792:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57666:124:30"},"nodeType":"YulFunctionCall","src":"57666:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57658:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57536:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57551:4:30","type":""}],"src":"57385:419:30"},{"body":{"nodeType":"YulBlock","src":"57916:68:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57938:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"57946:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57934:3:30"},"nodeType":"YulFunctionCall","src":"57934:14:30"},{"hexValue":"496e76616c696420524c502062797465732076616c75652e","kind":"string","nodeType":"YulLiteral","src":"57950:26:30","type":"","value":"Invalid RLP bytes value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57927:6:30"},"nodeType":"YulFunctionCall","src":"57927:50:30"},"nodeType":"YulExpressionStatement","src":"57927:50:30"}]},"name":"store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"57908:6:30","type":""}],"src":"57810:174:30"},{"body":{"nodeType":"YulBlock","src":"58136:220:30","statements":[{"nodeType":"YulAssignment","src":"58146:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58212:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"58217:2:30","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58153:58:30"},"nodeType":"YulFunctionCall","src":"58153:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"58146:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58318:3:30"}],"functionName":{"name":"store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","nodeType":"YulIdentifier","src":"58229:88:30"},"nodeType":"YulFunctionCall","src":"58229:93:30"},"nodeType":"YulExpressionStatement","src":"58229:93:30"},{"nodeType":"YulAssignment","src":"58331:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58342:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"58347:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58338:3:30"},"nodeType":"YulFunctionCall","src":"58338:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"58331:3:30"}]}]},"name":"abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"58124:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"58132:3:30","type":""}],"src":"57990:366:30"},{"body":{"nodeType":"YulBlock","src":"58533:248:30","statements":[{"nodeType":"YulAssignment","src":"58543:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58555:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"58566:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58551:3:30"},"nodeType":"YulFunctionCall","src":"58551:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58543:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58590:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"58601:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58586:3:30"},"nodeType":"YulFunctionCall","src":"58586:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58609:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"58615:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58605:3:30"},"nodeType":"YulFunctionCall","src":"58605:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58579:6:30"},"nodeType":"YulFunctionCall","src":"58579:47:30"},"nodeType":"YulExpressionStatement","src":"58579:47:30"},{"nodeType":"YulAssignment","src":"58635:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"58769:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58643:124:30"},"nodeType":"YulFunctionCall","src":"58643:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58635:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58513:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58528:4:30","type":""}],"src":"58362:419:30"},{"body":{"nodeType":"YulBlock","src":"58835:362:30","statements":[{"nodeType":"YulAssignment","src":"58845:25:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58868:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58850:17:30"},"nodeType":"YulFunctionCall","src":"58850:20:30"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"58845:1:30"}]},{"nodeType":"YulAssignment","src":"58879:25:30","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"58902:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58884:17:30"},"nodeType":"YulFunctionCall","src":"58884:20:30"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"58879:1:30"}]},{"nodeType":"YulVariableDeclaration","src":"58913:28:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58936:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"58939:1:30"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"58932:3:30"},"nodeType":"YulFunctionCall","src":"58932:9:30"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"58917:11:30","type":""}]},{"nodeType":"YulAssignment","src":"58950:41:30","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"58979:11:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58961:17:30"},"nodeType":"YulFunctionCall","src":"58961:30:30"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"58950:7:30"}]},{"body":{"nodeType":"YulBlock","src":"59168:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"59170:16:30"},"nodeType":"YulFunctionCall","src":"59170:18:30"},"nodeType":"YulExpressionStatement","src":"59170:18:30"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59101:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"59094:6:30"},"nodeType":"YulFunctionCall","src":"59094:9:30"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"59124:1:30"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"59131:7:30"},{"name":"x","nodeType":"YulIdentifier","src":"59140:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"59127:3:30"},"nodeType":"YulFunctionCall","src":"59127:15:30"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"59121:2:30"},"nodeType":"YulFunctionCall","src":"59121:22:30"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"59074:2:30"},"nodeType":"YulFunctionCall","src":"59074:83:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"59054:6:30"},"nodeType":"YulFunctionCall","src":"59054:113:30"},"nodeType":"YulIf","src":"59051:139:30"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"58818:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"58821:1:30","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"58827:7:30","type":""}],"src":"58787:410:30"},{"body":{"nodeType":"YulBlock","src":"59266:80:30","statements":[{"nodeType":"YulAssignment","src":"59276:22:30","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"59291:6:30"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"59285:5:30"},"nodeType":"YulFunctionCall","src":"59285:13:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"59276:5:30"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"59334:5:30"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"59307:26:30"},"nodeType":"YulFunctionCall","src":"59307:33:30"},"nodeType":"YulExpressionStatement","src":"59307:33:30"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"59244:6:30","type":""},{"name":"end","nodeType":"YulTypedName","src":"59252:3:30","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"59260:5:30","type":""}],"src":"59203:143:30"},{"body":{"nodeType":"YulBlock","src":"59429:274:30","statements":[{"body":{"nodeType":"YulBlock","src":"59475:83:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"59477:77:30"},"nodeType":"YulFunctionCall","src":"59477:79:30"},"nodeType":"YulExpressionStatement","src":"59477:79:30"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"59450:7:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"59459:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59446:3:30"},"nodeType":"YulFunctionCall","src":"59446:23:30"},{"kind":"number","nodeType":"YulLiteral","src":"59471:2:30","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"59442:3:30"},"nodeType":"YulFunctionCall","src":"59442:32:30"},"nodeType":"YulIf","src":"59439:119:30"},{"nodeType":"YulBlock","src":"59568:128:30","statements":[{"nodeType":"YulVariableDeclaration","src":"59583:15:30","value":{"kind":"number","nodeType":"YulLiteral","src":"59597:1:30","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"59587:6:30","type":""}]},{"nodeType":"YulAssignment","src":"59612:74:30","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59658:9:30"},{"name":"offset","nodeType":"YulIdentifier","src":"59669:6:30"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59654:3:30"},"nodeType":"YulFunctionCall","src":"59654:22:30"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"59678:7:30"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"59622:31:30"},"nodeType":"YulFunctionCall","src":"59622:64:30"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"59612:6:30"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59399:9:30","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"59410:7:30","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"59422:6:30","type":""}],"src":"59352:351:30"},{"body":{"nodeType":"YulBlock","src":"59752:190:30","statements":[{"nodeType":"YulAssignment","src":"59762:33:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"59789:5:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"59771:17:30"},"nodeType":"YulFunctionCall","src":"59771:24:30"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"59762:5:30"}]},{"body":{"nodeType":"YulBlock","src":"59885:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"59887:16:30"},"nodeType":"YulFunctionCall","src":"59887:18:30"},"nodeType":"YulExpressionStatement","src":"59887:18:30"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"59810:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"59817:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"59807:2:30"},"nodeType":"YulFunctionCall","src":"59807:77:30"},"nodeType":"YulIf","src":"59804:103:30"},{"nodeType":"YulAssignment","src":"59916:20:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"59927:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"59934:1:30","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59923:3:30"},"nodeType":"YulFunctionCall","src":"59923:13:30"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"59916:3:30"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"59738:5:30","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"59748:3:30","type":""}],"src":"59709:233:30"},{"body":{"nodeType":"YulBlock","src":"59990:143:30","statements":[{"nodeType":"YulAssignment","src":"60000:25:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"60023:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"60005:17:30"},"nodeType":"YulFunctionCall","src":"60005:20:30"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"60000:1:30"}]},{"nodeType":"YulAssignment","src":"60034:25:30","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"60057:1:30"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"60039:17:30"},"nodeType":"YulFunctionCall","src":"60039:20:30"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"60034:1:30"}]},{"body":{"nodeType":"YulBlock","src":"60081:22:30","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"60083:16:30"},"nodeType":"YulFunctionCall","src":"60083:18:30"},"nodeType":"YulExpressionStatement","src":"60083:18:30"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"60078:1:30"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"60071:6:30"},"nodeType":"YulFunctionCall","src":"60071:9:30"},"nodeType":"YulIf","src":"60068:35:30"},{"nodeType":"YulAssignment","src":"60113:14:30","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"60122:1:30"},{"name":"y","nodeType":"YulIdentifier","src":"60125:1:30"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"60118:3:30"},"nodeType":"YulFunctionCall","src":"60118:9:30"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"60113:1:30"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"59979:1:30","type":""},{"name":"y","nodeType":"YulTypedName","src":"59982:1:30","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"59988:1:30","type":""}],"src":"59948:185:30"},{"body":{"nodeType":"YulBlock","src":"60245:58:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"60267:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"60275:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60263:3:30"},"nodeType":"YulFunctionCall","src":"60263:14:30"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"60279:16:30","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60256:6:30"},"nodeType":"YulFunctionCall","src":"60256:40:30"},"nodeType":"YulExpressionStatement","src":"60256:40:30"}]},"name":"store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"60237:6:30","type":""}],"src":"60139:164:30"},{"body":{"nodeType":"YulBlock","src":"60455:220:30","statements":[{"nodeType":"YulAssignment","src":"60465:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60531:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"60536:2:30","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60472:58:30"},"nodeType":"YulFunctionCall","src":"60472:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60465:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60637:3:30"}],"functionName":{"name":"store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","nodeType":"YulIdentifier","src":"60548:88:30"},"nodeType":"YulFunctionCall","src":"60548:93:30"},"nodeType":"YulExpressionStatement","src":"60548:93:30"},{"nodeType":"YulAssignment","src":"60650:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60661:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"60666:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60657:3:30"},"nodeType":"YulFunctionCall","src":"60657:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60650:3:30"}]}]},"name":"abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"60443:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60451:3:30","type":""}],"src":"60309:366:30"},{"body":{"nodeType":"YulBlock","src":"60852:248:30","statements":[{"nodeType":"YulAssignment","src":"60862:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60874:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"60885:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60870:3:30"},"nodeType":"YulFunctionCall","src":"60870:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60862:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60909:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"60920:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60905:3:30"},"nodeType":"YulFunctionCall","src":"60905:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60928:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"60934:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60924:3:30"},"nodeType":"YulFunctionCall","src":"60924:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60898:6:30"},"nodeType":"YulFunctionCall","src":"60898:47:30"},"nodeType":"YulExpressionStatement","src":"60898:47:30"},{"nodeType":"YulAssignment","src":"60954:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61088:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60962:124:30"},"nodeType":"YulFunctionCall","src":"60962:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60954:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60832:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60847:4:30","type":""}],"src":"60681:419:30"},{"body":{"nodeType":"YulBlock","src":"61212:61:30","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"61234:6:30"},{"kind":"number","nodeType":"YulLiteral","src":"61242:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61230:3:30"},"nodeType":"YulFunctionCall","src":"61230:14:30"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"61246:19:30","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61223:6:30"},"nodeType":"YulFunctionCall","src":"61223:43:30"},"nodeType":"YulExpressionStatement","src":"61223:43:30"}]},"name":"store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"61204:6:30","type":""}],"src":"61106:167:30"},{"body":{"nodeType":"YulBlock","src":"61425:220:30","statements":[{"nodeType":"YulAssignment","src":"61435:74:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61501:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"61506:2:30","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61442:58:30"},"nodeType":"YulFunctionCall","src":"61442:67:30"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"61435:3:30"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61607:3:30"}],"functionName":{"name":"store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","nodeType":"YulIdentifier","src":"61518:88:30"},"nodeType":"YulFunctionCall","src":"61518:93:30"},"nodeType":"YulExpressionStatement","src":"61518:93:30"},{"nodeType":"YulAssignment","src":"61620:19:30","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"61631:3:30"},{"kind":"number","nodeType":"YulLiteral","src":"61636:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61627:3:30"},"nodeType":"YulFunctionCall","src":"61627:12:30"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"61620:3:30"}]}]},"name":"abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"61413:3:30","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"61421:3:30","type":""}],"src":"61279:366:30"},{"body":{"nodeType":"YulBlock","src":"61822:248:30","statements":[{"nodeType":"YulAssignment","src":"61832:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61844:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"61855:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61840:3:30"},"nodeType":"YulFunctionCall","src":"61840:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61832:4:30"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"61879:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"61890:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"61875:3:30"},"nodeType":"YulFunctionCall","src":"61875:17:30"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61898:4:30"},{"name":"headStart","nodeType":"YulIdentifier","src":"61904:9:30"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"61894:3:30"},"nodeType":"YulFunctionCall","src":"61894:20:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"61868:6:30"},"nodeType":"YulFunctionCall","src":"61868:47:30"},"nodeType":"YulExpressionStatement","src":"61868:47:30"},{"nodeType":"YulAssignment","src":"61924:139:30","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"62058:4:30"}],"functionName":{"name":"abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"61932:124:30"},"nodeType":"YulFunctionCall","src":"61932:131:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"61924:4:30"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61802:9:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"61817:4:30","type":""}],"src":"61651:419:30"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IStateCommitmentChain_$5457_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IStateCommitmentChain_$5457_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IStateCommitmentChain_$5457_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IStateCommitmentChain_$5457__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IStateCommitmentChain_$5457_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // struct ChainBatchHeader\n    function abi_decode_t_struct$_ChainBatchHeader_$5361_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // batchIndex\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // batchRoot\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // batchSize\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // prevTotalElements\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // extraData\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x80), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct ChainInclusionProof\n    function abi_decode_t_struct$_ChainInclusionProof_$5367_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // index\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // siblings\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x20), abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct L2MessageInclusionProof\n    function abi_decode_t_struct$_L2MessageInclusionProof_$5380_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // stateRoot\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // stateRootBatchHeader\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x20), abi_decode_t_struct$_ChainBatchHeader_$5361_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // stateRootProof\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x40), abi_decode_t_struct$_ChainInclusionProof_$5367_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // stateTrieWitness\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x60), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // storageTrieWitness\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x80), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptrt_uint256t_struct$_L2MessageInclusionProof_$5380_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_struct$_L2MessageInclusionProof_$5380_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2(memPtr) {\n\n        mstore(add(memPtr, 0), \"!rootManager\")\n\n    }\n\n    function abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e(memPtr) {\n\n        mstore(add(memPtr, 0), \"!AMB\")\n\n    }\n\n    function abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d(memPtr) {\n\n        mstore(add(memPtr, 0), \"!mirrorConnector\")\n\n    }\n\n    function abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033(memPtr) {\n\n        mstore(add(memPtr, 0), \"!this\")\n\n    }\n\n    function abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec(memPtr) {\n\n        mstore(add(memPtr, 0), \"!proof\")\n\n    }\n\n    function abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1(memPtr) {\n\n        mstore(add(memPtr, 0), \"!length\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct ChainBatchHeader -> struct ChainBatchHeader\n    function abi_encode_t_struct$_ChainBatchHeader_$5361_memory_ptr_to_t_struct$_ChainBatchHeader_$5361_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // batchIndex\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // batchRoot\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // batchSize\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // prevTotalElements\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // extraData\n\n            let memberValue0 := mload(add(value, 0x80))\n\n            mstore(add(pos, 0x80), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct ChainInclusionProof -> struct ChainInclusionProof\n    function abi_encode_t_struct$_ChainInclusionProof_$5367_memory_ptr_to_t_struct$_ChainInclusionProof_$5367_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // index\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // siblings\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_bytes32_t_struct$_ChainBatchHeader_$5361_memory_ptr_t_struct$_ChainInclusionProof_$5367_memory_ptr__to_t_bytes32_t_struct$_ChainBatchHeader_$5361_memory_ptr_t_struct$_ChainInclusionProof_$5367_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ChainBatchHeader_$5361_memory_ptr_to_t_struct$_ChainBatchHeader_$5361_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ChainInclusionProof_$5367_memory_ptr_to_t_struct$_ChainInclusionProof_$5367_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492(memPtr) {\n\n        mstore(add(memPtr, 0), \"Message passing predeploy has no\")\n\n        mstore(add(memPtr, 32), \"t been initialized or invalid pr\")\n\n        mstore(add(memPtr, 64), \"oof provided.\")\n\n    }\n\n    function abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 77)\n        store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(cleanup_t_uint8(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint8__to_t_uint8__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c(memPtr) {\n\n        mstore(add(memPtr, 0), \"!bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728(memPtr) {\n\n        mstore(add(memPtr, 0), \"!truncated\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403(memPtr) {\n\n        mstore(add(memPtr, 0), \"Provided proof is invalid.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP bytes32 value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid root hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid large internal hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_17a91ad79ff0ffb523ce6bd4cec4c7a194c9236c41f13271d5e41d6bee8604ec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid internal node hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Received a node with an unknown \")\n\n        mstore(add(memPtr, 32), \"prefix\")\n\n    }\n\n    function abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40(memPtr) {\n\n        mstore(add(memPtr, 0), \"Received an unparseable node.\")\n\n    }\n\n    function abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP list value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Provided RLP list exceeds max li\")\n\n        mstore(add(memPtr, 32), \"st length.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29(memPtr) {\n\n        mstore(add(memPtr, 0), \"RLP item cannot be null.\")\n\n    }\n\n    function abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP short string.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long string length.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long string.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP short list.\")\n\n    }\n\n    function abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long list length.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long list.\")\n\n    }\n\n    function abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP bytes value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e(memPtr) {\n\n        mstore(add(memPtr, 0), \"slice_overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"slice_outOfBounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2636":[{"length":32,"start":1698}],"2639":[{"length":32,"start":1487},{"length":32,"start":4198},{"length":32,"start":4442},{"length":32,"start":5837}],"2642":[{"length":32,"start":1272},{"length":32,"start":1879},{"length":32,"start":2446}],"2645":[{"length":32,"start":1226},{"length":32,"start":2506}],"3078":[{"length":32,"start":1190},{"length":32,"start":5885}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC5B350DF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC5B350DF EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xCC394283 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD1851C92 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xD232C220 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD69F9D61 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDB1B7659 EQ PUSH2 0x467 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7850B020 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xB1F8100D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xC1F0808A EQ PUSH2 0x367 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x52A9674B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x52A9674B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x5BD11EFC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x5F61E3EC EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x6A42B8F8 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6E2EDB4E EQ PUSH2 0x2AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0xF329EF8 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x14168416 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x3CF52FFB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x48E6FA23 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4FF746F6 EQ PUSH2 0x1D7 JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x3164 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x3347 JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x33BF JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x319E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x3446 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x37E1 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH2 0xA9C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x3894 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x3446 JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x38C1 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xEC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x3482 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x3446 JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x3909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0x3981 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58E DUP3 DUP3 PUSH2 0x109A JUMP JUMPDEST PUSH32 0xDCAA37A042A0087DE79018C629BBD29CEE82CA80BD9BE394E1696BF9E9355077 DUP3 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3A20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0x3AB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x695 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x1242 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x3B4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x3BB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x890 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP PUSH2 0x89C DUP2 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x3C25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH1 0x0 DUP7 PUSH2 0x13A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x939 PUSH1 0x20 PUSH2 0x909 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA92 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E7D93FA PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP3 SWAP2 SWAP1 PUSH2 0x3CDB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x3D04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE CALLER PUSH1 0x40 MLOAD PUSH2 0xA89 SWAP3 SWAP2 SWAP1 PUSH2 0x3AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST GT PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x392CC0FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295EF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC38 PUSH1 0x0 PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x15F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDD9 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23780CCA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x945F6E7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x1638 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x234FE4E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST GT PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1093 DUP3 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D5 SWAP1 PUSH2 0x3D9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x4FF746F6 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x3DBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1207 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0BF6D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xC77BEC288FC88F168427F2F7DA682EADB26CAC89D8D591AF6E443DA98DFF2BBC PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x3E1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12FA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCBD4ECE900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138C DUP3 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI POP PUSH2 0x139D DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP1 POP PUSH2 0x13C7 DUP5 PUSH5 0xFFFFFFFFFF AND DUP3 DUP5 PUSH2 0x1917 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x18 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 SHL SWAP1 POP PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x1411 DUP5 PUSH2 0x13D1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0xFF AND DUP5 PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST GT ISZERO PUSH2 0x148A JUMPI PUSH2 0x143D DUP5 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x1446 DUP6 PUSH2 0x13D1 JUMP JUMPDEST DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0x78218D2900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1481 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x45DF3F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL SWAP1 POP PUSH1 0x0 PUSH2 0x14DB DUP7 PUSH2 0x197E JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x14F6 DUP4 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP4 ADD MLOAD AND SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x877A02CB809DA0364D23ADCA3CD50C451B53F279D3DF632E1FC11EB66335BCE5 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP3 SWAP2 SWAP1 PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AB4D119F23076E8AD491BC65CE85F017FB0591DCE08755BA8591059CC51737A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F2 PUSH32 0x0 DUP4 PUSH2 0x19CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D69EE57 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4131 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x41A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0x4200000000000000000000000000000000000007 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17D6 SWAP3 SWAP2 SWAP1 PUSH2 0x4253 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17FF SWAP3 SWAP2 SWAP1 PUSH2 0x42BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1860 PUSH20 0x4200000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1842 SWAP2 SWAP1 PUSH2 0x42E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x1AE2 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A2 SWAP1 PUSH2 0x439C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B6 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP PUSH2 0x190B DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18CC SWAP2 SWAP1 PUSH2 0x43BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18ED SWAP2 SWAP1 PUSH2 0x441A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP9 PUSH1 0x80 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1BD5 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x1926 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x1937 JUMPI PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x1968 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 SWAP2 POP POP PUSH2 0x1977 JUMP JUMPDEST PUSH2 0x1973 DUP6 DUP6 DUP6 PUSH2 0x1BFA JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x78 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 DUP4 SUB SAR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A34 SWAP1 PUSH2 0x4481 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AC3 SWAP2 SWAP1 PUSH2 0x44B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1AF1 DUP7 PUSH2 0x1C98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1AFE DUP2 DUP7 DUP7 PUSH2 0x1CC8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B13 PUSH2 0x3083 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B1E DUP4 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1B4F DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B42 JUMPI PUSH2 0x1B41 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DBB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B78 DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B6B JUMPI PUSH2 0x1B6A PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DBB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA1 DUP4 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1B94 JUMPI PUSH2 0x1B93 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BCA DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1BBD JUMPI PUSH2 0x1BBC PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BE1 DUP7 PUSH2 0x1C98 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BEF DUP2 DUP7 DUP7 DUP7 PUSH2 0x1ED1 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 SWAP1 POP PUSH1 0x0 PUSH1 0x18 SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP DUP6 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1C3B JUMPI POP DUP7 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1C7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C71 SWAP1 PUSH2 0x455E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 SHL SWAP5 POP DUP1 DUP6 OR DUP5 SHL SWAP5 POP DUP2 DUP6 OR DUP4 SHL SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CB2 SWAP2 SWAP1 PUSH2 0x43BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CD7 DUP6 PUSH2 0x1F04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1CE9 DUP5 DUP11 DUP10 PUSH2 0x1FF7 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 DUP4 MLOAD EQ SWAP1 POP DUP1 DUP1 PUSH2 0x1D00 JUMPI POP DUP2 JUMPDEST PUSH2 0x1D3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D36 SWAP1 PUSH2 0x45CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D5B JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D8B JUMP JUMPDEST PUSH2 0x1D8A DUP7 PUSH1 0x1 DUP8 PUSH2 0x1D6C SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x245F JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DB4 PUSH2 0x1DAF DUP4 PUSH2 0x24A0 JUMP JUMPDEST PUSH2 0x24CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC6 DUP3 PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 PUSH1 0x0 ADD MLOAD LT PUSH2 0x1E19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E10 SWAP1 PUSH2 0x4636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E27 DUP6 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E41 JUMPI PUSH2 0x1E40 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1E53 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1E94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E8B SWAP1 PUSH2 0x4636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1EA6 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x20 DUP5 LT ISZERO PUSH2 0x1EC4 JUMPI DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP DUP2 DIV SWAP1 POP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EE1 DUP8 DUP7 DUP7 PUSH2 0x1CC8 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1EF8 JUMPI POP PUSH2 0x1EF7 DUP7 DUP3 PUSH2 0x29E2 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F11 DUP4 PUSH2 0x1DA1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F69 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1F56 PUSH2 0x30B1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F4E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FEB JUMPI PUSH1 0x0 PUSH2 0x1FA2 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F95 JUMPI PUSH2 0x1F94 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FBE DUP4 PUSH2 0x1DA1 JUMP JUMPDEST DUP2 MSTORE POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FD4 JUMPI PUSH2 0x1FD3 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F75 JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x200D DUP8 PUSH2 0x2A93 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x201F PUSH2 0x30B1 JUMP JUMPDEST PUSH1 0x0 DUP13 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x240E JUMPI DUP14 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP DUP4 DUP6 PUSH2 0x2059 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP9 PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP8 POP PUSH1 0x0 DUP6 SUB PUSH2 0x20C4 JUMPI DUP6 DUP4 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x20BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B6 SWAP1 PUSH2 0x46D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2174 JUMP JUMPDEST PUSH1 0x1F DUP4 PUSH1 0x0 ADD MLOAD MLOAD GT ISZERO PUSH2 0x2124 JUMPI DUP6 DUP4 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x211F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2116 SWAP1 PUSH2 0x473D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2173 JUMP JUMPDEST DUP6 PUSH2 0x2132 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2C36 JUMP JUMPDEST EQ PUSH2 0x2172 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2169 SWAP1 PUSH2 0x47A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x10 PUSH2 0x2188 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x21FD JUMPI DUP7 MLOAD DUP6 SUB ISZERO PUSH2 0x240E JUMPI PUSH1 0x0 DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x21B1 JUMPI PUSH2 0x21B0 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x21F0 DUP2 PUSH2 0x2C70 JUMP JUMPDEST SWAP8 POP PUSH1 0x1 SWAP6 POP POP POP PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x23CE JUMPI PUSH1 0x0 PUSH2 0x2215 DUP5 PUSH2 0x2CAE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x222D JUMPI PUSH2 0x222C PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0x224C SWAP2 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2258 SWAP2 SWAP1 PUSH2 0x4829 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2269 DUP5 DUP4 PUSH1 0xFF AND PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2277 DUP13 DUP12 PUSH2 0x2CE7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2285 DUP4 DUP4 PUSH2 0x2D28 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x22A2 JUMPI POP PUSH1 0x3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x22FF JUMPI DUP1 DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x22B7 JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST ISZERO PUSH2 0x22CB JUMPI DUP1 DUP12 PUSH2 0x22C8 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP11 POP JUMPDEST PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x240E JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x231A JUMPI POP PUSH1 0x1 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x2393 JUMPI DUP3 MLOAD DUP2 EQ PUSH2 0x235B JUMPI PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x240E JUMP JUMPDEST PUSH2 0x2383 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2376 JUMPI PUSH2 0x2375 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C70 JUMP JUMPDEST SWAP12 POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x2409 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C5 SWAP1 PUSH2 0x48D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2400 SWAP1 PUSH2 0x493C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2028 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP7 EQ SWAP1 POP DUP8 PUSH2 0x2447 DUP9 DUP8 PUSH2 0x2CE7 JUMP JUMPDEST DUP3 SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2499 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD MLOAD PUSH2 0x247B SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x248C JUMPI PUSH2 0x248B PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A8 PUSH2 0x30CB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x24DC DUP5 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2507 JUMPI PUSH2 0x2506 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2547 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253E SWAP1 PUSH2 0x49A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2564 JUMPI PUSH2 0x2563 PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x259D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x258A PUSH2 0x30CB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2582 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP5 SWAP1 POP JUMPDEST DUP7 PUSH1 0x0 ADD MLOAD DUP2 LT ISZERO PUSH2 0x26B5 JUMPI PUSH1 0x20 DUP3 LT PUSH2 0x25F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25ED SWAP1 PUSH2 0x4A3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2634 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0x2617 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP13 PUSH1 0x20 ADD MLOAD PUSH2 0x262C SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MSTORE POP PUSH2 0x26C5 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 PUSH2 0x2650 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP12 PUSH1 0x20 ADD MLOAD PUSH2 0x2665 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MSTORE POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x267B JUMPI PUSH2 0x267A PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP5 PUSH2 0x2693 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP4 POP DUP1 DUP3 PUSH2 0x26A1 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP4 PUSH2 0x26AC SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x25A7 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP3 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2710 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2707 SWAP1 PUSH2 0x4AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x273E JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xB8 DUP2 LT ISZERO PUSH2 0x27B1 JUMPI PUSH1 0x0 PUSH1 0x80 DUP3 PUSH2 0x2756 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x279E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2795 SWAP1 PUSH2 0x4B12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2893 JUMPI PUSH1 0x0 PUSH1 0xB7 DUP3 PUSH2 0x27C9 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2811 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2808 SWAP1 PUSH2 0x4B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x282F SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2874 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286B SWAP1 PUSH2 0x4BEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x2881 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xF8 DUP2 LT ISZERO PUSH2 0x2906 JUMPI PUSH1 0x0 PUSH1 0xC0 DUP3 PUSH2 0x28AB SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x28F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28EA SWAP1 PUSH2 0x4C56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF7 DUP3 PUSH2 0x2915 SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x295D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2954 SWAP1 PUSH2 0x4CC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x297B SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x29C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B7 SWAP1 PUSH2 0x4D2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x29CD SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x2A0D DUP6 PUSH2 0x26C5 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2A3A JUMPI PUSH2 0x2A39 PUSH2 0x4656 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2A7A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A71 SWAP1 PUSH2 0x4D9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A89 DUP6 PUSH1 0x20 ADD MLOAD DUP5 DUP5 PUSH2 0x2DEB JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 MLOAD PUSH2 0x2AA5 SWAP2 SWAP1 PUSH2 0x4DBA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ABE JUMPI PUSH2 0x2ABD PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AF0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C2B JUMPI PUSH1 0x4 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B19 JUMPI PUSH2 0x2B18 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR DUP4 PUSH1 0x2 DUP4 PUSH2 0x2B56 SWAP2 SWAP1 PUSH2 0x4DBA JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2B67 JUMPI PUSH2 0x2B66 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BAB JUMPI PUSH2 0x2BAA PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x2BC3 SWAP2 SWAP1 PUSH2 0x47F8 JUMP JUMPDEST PUSH1 0xF8 SHL DUP4 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x2BD6 SWAP2 SWAP1 PUSH2 0x4DBA JUMP JUMPDEST PUSH2 0x2BE0 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BF1 JUMPI PUSH2 0x2BF0 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2AFC JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD LT ISZERO PUSH2 0x2C54 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x2C6B JUMP JUMPDEST DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2C68 SWAP2 SWAP1 PUSH2 0x4E11 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x20 DUP4 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x2C91 JUMPI PUSH2 0x2C8A DUP4 PUSH2 0x2EE8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2C9D JUMP JUMPDEST PUSH2 0x2C9A DUP4 PUSH2 0x29FD JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2CA6 DUP2 PUSH2 0x2C36 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2CE0 PUSH2 0x2CDB DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2CCE JUMPI PUSH2 0x2CCD PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29FD JUMP JUMPDEST PUSH2 0x2A93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD DUP3 LT PUSH2 0x2D08 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2D22 JUMP JUMPDEST PUSH2 0x2D1F DUP4 DUP4 DUP5 DUP7 MLOAD PUSH2 0x2D1A SWAP2 SWAP1 PUSH2 0x3D1F JUMP JUMPDEST PUSH2 0x2EFA JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP1 DUP5 MLOAD GT DUP1 ISZERO PUSH2 0x2D40 JUMPI POP DUP1 DUP4 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x2DC9 JUMPI POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D5A JUMPI PUSH2 0x2D59 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D9A JUMPI PUSH2 0x2D99 PUSH2 0x44E3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x2DE1 JUMPI DUP1 DUP1 PUSH2 0x2DD9 SWAP1 PUSH2 0x4E3E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2D30 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E09 JUMPI PUSH2 0x2E08 PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2E3B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2E50 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2EE1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 PUSH2 0x2E5E SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2E78 SWAP2 SWAP1 PUSH2 0x4E86 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2EAC JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 PUSH2 0x2E90 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 PUSH2 0x2E9F SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2E6B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x20 DUP8 DUP2 PUSH2 0x2EC2 JUMPI PUSH2 0x2EC1 PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST MOD PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 DUP3 MLOAD AND DUP2 NOT DUP5 MLOAD AND OR DUP3 MSTORE DUP4 SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EF3 DUP3 PUSH2 0x3066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1F DUP4 PUSH2 0x2F0A SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST LT ISZERO PUSH2 0x2F4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F42 SWAP1 PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 DUP5 PUSH2 0x2F58 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST LT ISZERO PUSH2 0x2F99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F90 SWAP1 PUSH2 0x4F03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x2FA5 SWAP2 SWAP1 PUSH2 0x3E94 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x2FE8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FDF SWAP1 PUSH2 0x4F6F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ISZERO PUSH1 0x0 DUP2 EQ PUSH2 0x3009 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x305A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x3047 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x302A JUMP JUMPDEST POP DUP7 DUP6 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND PUSH1 0x40 MSTORE POP POP POP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x307C DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2DEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x312A PUSH2 0x3125 PUSH2 0x3120 DUP5 PUSH2 0x30E5 JUMP JUMPDEST PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313C DUP3 PUSH2 0x310F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314E DUP3 PUSH2 0x3131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x315E DUP2 PUSH2 0x3143 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3179 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3155 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3198 DUP2 PUSH2 0x317F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31B3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x318F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31CC DUP2 PUSH2 0x31B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x31E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3254 DUP3 PUSH2 0x320B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3273 JUMPI PUSH2 0x3272 PUSH2 0x321C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3286 PUSH2 0x31ED JUMP JUMPDEST SWAP1 POP PUSH2 0x3292 DUP3 DUP3 PUSH2 0x324B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x32B2 JUMPI PUSH2 0x32B1 PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH2 0x32BB DUP3 PUSH2 0x320B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32EA PUSH2 0x32E5 DUP5 PUSH2 0x3297 JUMP JUMPDEST PUSH2 0x327C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3306 JUMPI PUSH2 0x3305 PUSH2 0x3206 JUMP JUMPDEST JUMPDEST PUSH2 0x3311 DUP5 DUP3 DUP6 PUSH2 0x32C8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x332E JUMPI PUSH2 0x332D PUSH2 0x3201 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x333E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x32D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x335E JUMPI PUSH2 0x335D PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x337C JUMPI PUSH2 0x337B PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x3388 DUP6 DUP3 DUP7 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A9 JUMPI PUSH2 0x33A8 PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x33B5 DUP6 DUP3 DUP7 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33D5 JUMPI PUSH2 0x33D4 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33F3 JUMPI PUSH2 0x33F2 PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x33FF DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3413 DUP3 PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3423 DUP2 PUSH2 0x3408 JUMP JUMPDEST DUP2 EQ PUSH2 0x342E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3440 DUP2 PUSH2 0x341A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x345C JUMPI PUSH2 0x345B PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x346A DUP5 DUP3 DUP6 ADD PUSH2 0x3431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x347C DUP2 PUSH2 0x3408 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3497 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x34A6 DUP2 PUSH2 0x31B9 JUMP JUMPDEST DUP2 EQ PUSH2 0x34B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34C3 DUP2 PUSH2 0x349D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E6 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x34F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3503 DUP2 PUSH2 0x34DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x351F JUMPI PUSH2 0x351E PUSH2 0x34C9 JUMP JUMPDEST JUMPDEST PUSH2 0x3529 PUSH1 0xA0 PUSH2 0x327C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3539 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x354D DUP5 DUP3 DUP6 ADD PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3561 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x3575 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3599 JUMPI PUSH2 0x3598 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x35A5 DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x35CC JUMPI PUSH2 0x35CB PUSH2 0x321C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35F5 PUSH2 0x35F0 DUP5 PUSH2 0x35B1 JUMP JUMPDEST PUSH2 0x327C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x3618 JUMPI PUSH2 0x3617 PUSH2 0x35DD JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3641 JUMPI DUP1 PUSH2 0x362D DUP9 DUP3 PUSH2 0x34F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x361A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3660 JUMPI PUSH2 0x365F PUSH2 0x3201 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3670 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x35E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x368F JUMPI PUSH2 0x368E PUSH2 0x34C9 JUMP JUMPDEST JUMPDEST PUSH2 0x3699 PUSH1 0x40 PUSH2 0x327C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36A9 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36CD JUMPI PUSH2 0x36CC PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x36D9 DUP5 DUP3 DUP6 ADD PUSH2 0x364B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36FB JUMPI PUSH2 0x36FA PUSH2 0x34C9 JUMP JUMPDEST JUMPDEST PUSH2 0x3705 PUSH1 0xA0 PUSH2 0x327C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3715 DUP5 DUP3 DUP6 ADD PUSH2 0x34F4 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3739 JUMPI PUSH2 0x3738 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x3745 DUP5 DUP3 DUP6 ADD PUSH2 0x3509 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3769 JUMPI PUSH2 0x3768 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x3775 DUP5 DUP3 DUP6 ADD PUSH2 0x3679 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3799 JUMPI PUSH2 0x3798 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x37A5 DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37C9 JUMPI PUSH2 0x37C8 PUSH2 0x34CE JUMP JUMPDEST JUMPDEST PUSH2 0x37D5 DUP5 DUP3 DUP6 ADD PUSH2 0x3319 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37FD JUMPI PUSH2 0x37FC PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x380B DUP9 DUP3 DUP10 ADD PUSH2 0x3431 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x381C DUP9 DUP3 DUP10 ADD PUSH2 0x3431 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383D JUMPI PUSH2 0x383C PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x3849 DUP9 DUP3 DUP10 ADD PUSH2 0x3319 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x385A DUP9 DUP3 DUP10 ADD PUSH2 0x34B4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x387B JUMPI PUSH2 0x387A PUSH2 0x31FC JUMP JUMPDEST JUMPDEST PUSH2 0x3887 DUP9 DUP3 DUP10 ADD PUSH2 0x36E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38AA JUMPI PUSH2 0x38A9 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38B8 DUP5 DUP3 DUP6 ADD PUSH2 0x34B4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38D7 JUMPI PUSH2 0x38D6 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38E5 DUP5 DUP3 DUP6 ADD PUSH2 0x34F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3903 DUP2 PUSH2 0x38EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x391E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x21726F6F744D616E616765720000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x396B PUSH1 0xC DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3976 DUP3 PUSH2 0x3935 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x399A DUP2 PUSH2 0x395E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x39C0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39F2 DUP3 PUSH2 0x39A1 JUMP JUMPDEST PUSH2 0x39FC DUP2 DUP6 PUSH2 0x39AC JUMP JUMPDEST SWAP4 POP PUSH2 0x3A0C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST PUSH2 0x3A15 DUP2 PUSH2 0x320B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3A DUP2 DUP7 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3A4E DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A5D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x21414D4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A9B PUSH1 0x4 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AA6 DUP3 PUSH2 0x3A65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3ACA DUP2 PUSH2 0x3A8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3AEB DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AFA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x216D6972726F72436F6E6E6563746F7200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B37 PUSH1 0x10 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B42 DUP3 PUSH2 0x3B01 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B66 DUP2 PUSH2 0x3B2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2174686973000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BA3 PUSH1 0x5 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BAE DUP3 PUSH2 0x3B6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BD2 DUP2 PUSH2 0x3B96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2170726F6F660000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0F PUSH1 0x6 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C1A DUP3 PUSH2 0x3BD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C3E DUP2 PUSH2 0x3C02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C97 DUP3 PUSH2 0x3C45 JUMP JUMPDEST SWAP2 POP PUSH2 0x3CA2 DUP4 PUSH2 0x3C45 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CC6 JUMPI PUSH2 0x3CC5 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3CD5 DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CF0 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x318F JUMP JUMPDEST PUSH2 0x3CFD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3CCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3D19 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3CCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D2A DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D35 DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3D4D JUMPI PUSH2 0x3D4C PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x216C656E67746800000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D89 PUSH1 0x7 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D94 DUP3 PUSH2 0x3D53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DB8 DUP2 PUSH2 0x3D7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD9 DUP2 DUP5 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3DF6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3473 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3E08 DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E17 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x318F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3E34 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3473 JUMP JUMPDEST PUSH2 0x3E41 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3473 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E5D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3473 JUMP JUMPDEST PUSH2 0x3E6A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3473 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E7C DUP2 DUP6 PUSH2 0x39E7 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E8B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E9F DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3EAA DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3EC2 JUMPI PUSH2 0x3EC1 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EE3 PUSH2 0x3EDE PUSH2 0x3ED9 DUP5 PUSH2 0x3C45 JUMP JUMPDEST PUSH2 0x3105 JUMP JUMPDEST PUSH2 0x31B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EF3 DUP2 PUSH2 0x3EC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3F0E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3EEA JUMP JUMPDEST PUSH2 0x3F1B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3EEA JUMP JUMPDEST PUSH2 0x3F28 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x3F35 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F53 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x31C3 JUMP JUMPDEST PUSH2 0x3F60 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x31C3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3F70 DUP2 PUSH2 0x31B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3F7F DUP2 PUSH2 0x34D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FA1 DUP3 PUSH2 0x39A1 JUMP JUMPDEST PUSH2 0x3FAB DUP2 DUP6 PUSH2 0x3F85 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FBB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST PUSH2 0x3FC4 DUP2 PUSH2 0x320B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3FE7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3FFA PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x3F76 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x400D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x4020 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x4038 DUP3 DUP3 PUSH2 0x3F96 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x407D DUP4 DUP4 PUSH2 0x3F76 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x40A1 DUP3 PUSH2 0x4045 JUMP JUMPDEST PUSH2 0x40AB DUP2 DUP6 PUSH2 0x4050 JUMP JUMPDEST SWAP4 POP PUSH2 0x40B6 DUP4 PUSH2 0x4061 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40E7 JUMPI DUP2 MLOAD PUSH2 0x40CE DUP9 DUP3 PUSH2 0x4071 JUMP JUMPDEST SWAP8 POP PUSH2 0x40D9 DUP4 PUSH2 0x4089 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x40BA JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x410C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F67 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x4124 DUP3 DUP3 PUSH2 0x4096 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x4146 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3CCC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4158 DUP2 DUP6 PUSH2 0x3FCF JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x416C DUP2 DUP5 PUSH2 0x40F4 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x417F DUP2 PUSH2 0x38EE JUMP JUMPDEST DUP2 EQ PUSH2 0x418A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x419C DUP2 PUSH2 0x4176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x41B8 JUMPI PUSH2 0x41B7 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x41C6 DUP5 DUP3 DUP6 ADD PUSH2 0x418D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E5 DUP3 PUSH2 0x39A1 JUMP JUMPDEST PUSH2 0x41EF DUP2 DUP6 PUSH2 0x41CF JUMP JUMPDEST SWAP4 POP PUSH2 0x41FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x39BD JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4223 DUP3 PUSH2 0x420B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4235 DUP3 PUSH2 0x4218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424D PUSH2 0x4248 DUP3 PUSH2 0x3408 JUMP JUMPDEST PUSH2 0x422A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x425F DUP3 DUP6 PUSH2 0x41DA JUMP JUMPDEST SWAP2 POP PUSH2 0x426B DUP3 DUP5 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4296 PUSH2 0x4291 DUP3 PUSH2 0x34D3 JUMP JUMPDEST PUSH2 0x427B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x42B7 PUSH2 0x42B2 DUP3 PUSH2 0x31B9 JUMP JUMPDEST PUSH2 0x429C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42C9 DUP3 DUP6 PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x42D9 DUP3 DUP5 PUSH2 0x42A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F5 DUP3 DUP5 PUSH2 0x423C JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6573736167652070617373696E67207072656465706C6F7920686173206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206265656E20696E697469616C697A6564206F7220696E76616C6964207072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F662070726F76696465642E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4386 PUSH1 0x4D DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4391 DUP3 PUSH2 0x4304 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x43B5 DUP2 PUSH2 0x4379 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43C8 DUP3 DUP5 PUSH2 0x4285 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43FC DUP3 PUSH2 0x43E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4414 PUSH2 0x440F DUP3 PUSH2 0x43D7 JUMP JUMPDEST PUSH2 0x43F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4426 DUP3 DUP5 PUSH2 0x4403 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2162726964676500000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x446B PUSH1 0x7 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4476 DUP3 PUSH2 0x4435 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x449A DUP2 PUSH2 0x445E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x44B0 DUP2 PUSH2 0x341A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x44CC JUMPI PUSH2 0x44CB PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x44DA DUP5 DUP3 DUP6 ADD PUSH2 0x44A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x217472756E636174656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4548 PUSH1 0xA DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4553 DUP3 PUSH2 0x4512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4577 DUP2 PUSH2 0x453B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F76696465642070726F6F6620697320696E76616C69642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45B4 PUSH1 0x1A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x45BF DUP3 PUSH2 0x457E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x45E3 DUP2 PUSH2 0x45A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C5020627974657333322076616C75652E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4620 PUSH1 0x1A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x462B DUP3 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x464F DUP2 PUSH2 0x4613 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420726F6F742068617368000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46BB PUSH1 0x11 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x46C6 DUP3 PUSH2 0x4685 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46EA DUP2 PUSH2 0x46AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206C6172676520696E7465726E616C20686173680000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4727 PUSH1 0x1B DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4732 DUP3 PUSH2 0x46F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4756 DUP2 PUSH2 0x471A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E7465726E616C206E6F64652068617368000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4793 PUSH1 0x1A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x479E DUP3 PUSH2 0x475D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x47C2 DUP2 PUSH2 0x4786 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4803 DUP3 PUSH2 0x43D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x480E DUP4 PUSH2 0x43D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x481E JUMPI PUSH2 0x481D PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4834 DUP3 PUSH2 0x43D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x483F DUP4 PUSH2 0x43D7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x4858 JUMPI PUSH2 0x4857 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656365697665642061206E6F6465207769746820616E20756E6B6E6F776E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7072656669780000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48BA PUSH1 0x26 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x48C5 DUP3 PUSH2 0x485E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x48E9 DUP2 PUSH2 0x48AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563656976656420616E20756E706172736561626C65206E6F64652E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4926 PUSH1 0x1D DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4931 DUP3 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4955 DUP2 PUSH2 0x4919 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6973742076616C75652E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4992 PUSH1 0x17 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x499D DUP3 PUSH2 0x495C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49C1 DUP2 PUSH2 0x4985 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F766964656420524C50206C6973742065786365656473206D6178206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374206C656E6774682E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A24 PUSH1 0x2A DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A2F DUP3 PUSH2 0x49C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A53 DUP2 PUSH2 0x4A17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x524C50206974656D2063616E6E6F74206265206E756C6C2E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A90 PUSH1 0x18 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A9B DUP3 PUSH2 0x4A5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ABF DUP2 PUSH2 0x4A83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F727420737472696E672E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AFC PUSH1 0x19 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B07 DUP3 PUSH2 0x4AC6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B2B DUP2 PUSH2 0x4AEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E67206C656E6774682E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B68 PUSH1 0x1F DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B73 DUP3 PUSH2 0x4B32 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B97 DUP2 PUSH2 0x4B5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E672E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BD4 PUSH1 0x18 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BDF DUP3 PUSH2 0x4B9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C03 DUP2 PUSH2 0x4BC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F7274206C6973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C40 PUSH1 0x17 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C4B DUP3 PUSH2 0x4C0A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C6F DUP2 PUSH2 0x4C33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C697374206C656E6774682E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CAC PUSH1 0x1D DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CB7 DUP3 PUSH2 0x4C76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CDB DUP2 PUSH2 0x4C9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C6973742E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D18 PUSH1 0x16 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D23 DUP3 PUSH2 0x4CE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D47 DUP2 PUSH2 0x4D0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502062797465732076616C75652E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D84 PUSH1 0x18 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D8F DUP3 PUSH2 0x4D4E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DB3 DUP2 PUSH2 0x4D77 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC5 DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DD0 DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4DDE DUP2 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4DF5 JUMPI PUSH2 0x4DF4 PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4E0B DUP2 PUSH2 0x34DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E27 JUMPI PUSH2 0x4E26 PUSH2 0x31F7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E35 DUP5 DUP3 DUP6 ADD PUSH2 0x4DFC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E49 DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4E7B JUMPI PUSH2 0x4E7A PUSH2 0x3C5D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E91 DUP3 PUSH2 0x31B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E9C DUP4 PUSH2 0x31B9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4EAC JUMPI PUSH2 0x4EAB PUSH2 0x47C9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EED PUSH1 0xE DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EF8 DUP3 PUSH2 0x4EB7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F1C DUP2 PUSH2 0x4EE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736C6963655F6F75744F66426F756E6473000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F59 PUSH1 0x11 DUP4 PUSH2 0x3924 JUMP JUMPDEST SWAP2 POP PUSH2 0x4F64 DUP3 PUSH2 0x4F23 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4F88 DUP2 PUSH2 0x4F4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY MSTORE DIV LOG1 PUSH23 0xABC249879A60C42D0B8CAAFA442BA0AA4B4F949EF5149 DIV PUSH5 0x6C7264736F PUSH13 0x63430008110033000000000000 ","sourceMap":"724:7347:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:59;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1587:37:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1949:112:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:200:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4262:148:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1268:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3939:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1451:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2151:79:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2843:1751:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3820:442:27;;;;;;;;;;;;;:::i;:::-;;860:83:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1641:79:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3321:420;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1387:41:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4404:539:27;;;;;;;;;;;;;:::i;:::-;;1705:30:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1792:85:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3055:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1363:28:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4490:107;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;935:59:16;;;:::o;1587:37:12:-;;;:::o;1949:112:27:-;2007:7;2029:27;;2022:34;;1949:112;:::o;1614:200:14:-;2226:12:12;2212:26;;:10;:26;;;2204:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1721:33:14::1;1734:5;1741:12;1721;:33::i;:::-;1765:44;1777:5;1784:12;1798:10;1765:44;;;;;;;;:::i;:::-;;;;;;;;1614:200:::0;;:::o;4262:148:12:-;1905:3;1891:17;;:10;:17;;;1883:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;4337:22:::1;4353:5;4337:15;:22::i;:::-;4370:35;4387:5;4394:10;4370:35;;;;;;;:::i;:::-;;;;;;;;4262:148:::0;:::o;1268:30::-;;;:::o;3939:119::-;2354:10:27;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;4016:37:12::1;4036:16;4016:19;:37::i;:::-;3939:119:::0;:::o;1451:37::-;;;:::o;2151:79:27:-;2197:7;1530:6;2212:13;;2151:79;:::o;2843:1751:16:-;3096:15;;;;;;;;;;;3085:26;;:7;:26;;;3077:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3208:4;3189:24;;:7;:24;;;3181:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3258:24;3285:65;3308:7;3317;3326:8;3336:13;3285:22;:65::i;:::-;3258:92;;3365:42;3387:11;3400:6;3365:21;:42::i;:::-;3357:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4187:13;4203:15;4216:1;4203:8;:12;;:15;;;;:::i;:::-;4187:31;;4224:12;4239:33;4265:2;4251:11;:5;:9;;;;:11::i;:::-;:16;;;;:::i;:::-;4239:33;;4269:2;4239:5;:11;;;;;:33;;;;;:::i;:::-;4224:48;;4284:9;:15;4294:4;4284:15;;;;;;;;;;;;;;;;;;;;;4279:260;;4358:4;4340:9;:15;4350:4;4340:15;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;4428:12;4415:36;;;4452:13;4467:4;4415:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:46;4514:4;4503:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;4521:10;4486:46;;;;;;;:::i;:::-;;;;;;;;4279:260;3027:1567;;;2843:1751;;;;;:::o;3820:442:27:-;2354:10;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;1530:6:::1;2809:27;;2791:15;:45;;;;:::i;:::-;2790:57;2786:132;;2862:56;;;;;;;;;;;;;;2786:132;3991:1:::2;3960:27;;:32:::0;3956:92:::2;;4001:47;;;;;;;;;;;;;;3956:92;4116:1;4095:23;;:9;;;;;;;;;;;:23;;;4091:88;;4127:52;;;;;;;;;;;;;;4091:88;4236:21;4254:1;4236:9;:21::i;:::-;3820:442::o:0;860:83:13:-;2354:10:27;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;919:19:13::1;930:7;919:10;:19::i;:::-;860:83:::0;:::o;1641:79:27:-;1687:7;1709:6;;;;;;;;;;;1702:13;;1641:79;:::o;3321:420::-;2354:10;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;3452:13:::1;3439:26;;:9;;;;;;;;;;;:26;;;:62;;;;;3500:1;3469:27;;:32;;3439:62;3435:131;;;3516:50;;;;;;;;;;;;;;3435:131;3628:13;3618:23;;:6;::::0;::::1;;;;;;;;:23;;::::0;3614:88:::1;;3650:52;;;;;;;;;;;;;;3614:88;3709:27;3722:13;3709:12;:27::i;:::-;3321:420:::0;:::o;1387:41:16:-;;;;;;;;;;;;;;;;;;;;;;:::o;4404:539:27:-;2561:10;2548:23;;:9;;;;;;;;;;;:23;;;2544:84;;2580:48;;;;;;;;;;;;;;2544:84;1530:6:::1;2809:27;;2791:15;:45;;;;:::i;:::-;2790:57;2786:132;;2862:56;;;;;;;;;;;;;;2786:132;4918:20:::2;4928:9;;;;;;;;;;;4918;:20::i;:::-;4404:539::o:0;1705:30:12:-;;;;;;;;;;;;;:::o;1792:85:27:-;1841:7;1863:9;;;;;;;;;;;1856:16;;1792:85;:::o;3055:86::-;3097:4;3134:1;3116:20;;:6;;;;;;;;;;:20;;;3109:27;;3055:86;:::o;1363:28:12:-;;;:::o;4490:107::-;4549:4;4568:24;4582:9;4568:13;:24::i;:::-;4561:31;;4490:107;;;:::o;2085:412:16:-;2257:2;2241:5;:12;:18;2233:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2301:22;2349:33;;;2384:5;2326:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:89;;2432:3;2420:28;;;2449:15;;;;;;;;;;;2466:9;2484:6;;2420:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:325;2085:412;;:::o;5220:267:12:-;5447:35;;;;;;;;;;;;;;5838:185;5921:57;5944:15;;;;;;;;;;;5961:16;5921:57;;;;;;;:::i;:::-;;;;;;;;6002:16;5984:15;;:34;;;;;;;;;;;;;;;;;;5838:185;:::o;7763:306:16:-;7918:12;8022:7;8031;8040:8;8050:13;7951:113;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7938:126;;7763:306;;;;;;:::o;5013:242::-;5149:4;5171:29;5193:6;5171:21;:29::i;:::-;:78;;;;;5204:45;5224:16;5242:6;5204:19;:45::i;:::-;5171:78;5163:87;;5013:242;;;;:::o;10748:325:29:-;10818:7;10833:12;10848:3;:10;10833:25;;10865:12;10975:4;10970:3;10966:14;10958:22;;11042:26;11048:7;11042:26;;11057:4;11063;11042:5;:26::i;:::-;11035:33;;;;10748:325;;;;:::o;12782:256::-;12835:11;12854:13;2607:26;12854:27;;13022:5;13012:7;13008:2;13004:16;13000:28;12992:36;;12926:108;12782:256;;;:::o;15274:815::-;15375:14;15411:1;15401:6;:11;;;15397:49;;15437:1;15429:10;;15422:17;;;;15397:49;15473:12;15477:7;15473:3;:12::i;:::-;15455:30;;15464:6;15455:15;;:6;:15;;;;:::i;:::-;:30;15451:282;;;15674:12;15678:7;15674:3;:12::i;:::-;15688;15692:7;15688:3;:12::i;:::-;15702:6;15718;15710:15;;15646:80;;;;;;;;;;;;;;:::i;:::-;;;;;;;;15451:282;15751:2;15742:6;:11;;;15738:66;;;15762:42;;;;;;;;;;;;;;15738:66;15811:15;15871:1;15862:6;:10;15850:22;;15884:12;15899;15903:7;15899:3;:12::i;:::-;15884:27;;;;15917:13;15933:19;15942:9;15933:8;:19::i;:::-;15917:35;;16073:5;16063:6;16057:4;16053:17;16047:24;16043:36;16033:46;;15967:118;;;15274:815;;;;;;:::o;4981:185:27:-;5067:8;5038:38;;5059:6;;;;;;;;;;5038:38;;;;;;;;;;;;5091:8;5082:6;;:17;;;;;;;;;;;;;;;;;;5112:27;5105:34;;;5152:9;;5145:16;;;;;;;;;;;4981:185;:::o;1089:114:13:-;1146:30;1160:6;;1168:7;1146:30;;;;;;;:::i;:::-;;;;;;;;1191:7;1182:6;:16;;;;1089:114;:::o;5170:183:27:-;5259:15;5229:27;:45;;;;5292:13;5280:9;;:25;;;;;;;;;;;;;;;;;;5334:13;5316:32;;;;;;;;;;;;5170:183;:::o;1891:127:16:-;1965:4;1984:29;1998:3;2003:9;1984:13;:29::i;:::-;1977:36;;1891:127;;;:::o;5638:235::-;5731:4;5756:20;:42;;;5799:6;:16;;;5817:6;:27;;;5846:6;:21;;;5756:112;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5743:125;;5638:235;;;:::o;6314:970::-;6448:4;6462:18;6553:16;736:42:20;6536:80:16;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6526:91;;;;;;6635:1;6500:145;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6483:168;;;;;;6462:189;;6659:11;6672:41;6717:149;352:42:20;6745:60:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;6813:6;:23;;;6844:6;:16;;;6717:20;:149::i;:::-;6658:208;;;;6891:4;6881:14;;:6;:14;;;6873:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;6984:34;7021:55;7047:28;7021:25;:55::i;:::-;6984:92;;7096:183;7160:10;7143:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;7204:1;7181:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;7217:6;:25;;;7252:7;:19;;;7096:37;:183::i;:::-;7083:196;;;;;;6314:970;;;;:::o;9979:390:29:-;10076:15;10099:12;10121:4;10114;:11;;;;:::i;:::-;10099:26;;10224:4;10218:11;10212:4;10209:21;10206:52;;;10249:1;10241:9;;10206:52;10281:1;10273:4;:9;10269:41;;10299:4;10292:11;;;;;10269:41;10325:39;10346:5;10353:4;10359;10325:20;:39::i;:::-;10315:49;;10093:276;9979:390;;;;;;:::o;11675:332::-;11728:11;11747:13;2607:26;11747:27;;11991:5;11981:7;11976:3;11972:17;11968:29;11960:37;;11819:184;11675:332;;;:::o;4836:286::-;4888:12;5045:66;5041:1;5035:4;5031:12;5027:85;5019:93;;4836:286;;;:::o;370:200:15:-;449:4;483;469:18;;:10;:18;;;461:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;556:9;512:53;;524:4;512:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;505:60;;370:200;;;;:::o;1737:238:22:-;1844:12;1858:19;1885:16;1904:19;1918:4;1904:13;:19::i;:::-;1885:38;;1936:34;1951:3;1956:6;1964:5;1936:14;:34::i;:::-;1929:41;;;;;1737:238;;;;;;:::o;660:443:19:-;732:17;;:::i;:::-;757:39;799:28;818:8;799:18;:28::i;:::-;757:70;;847:251;;;;;;;;875:38;897:12;910:1;897:15;;;;;;;;:::i;:::-;;;;;;;;875:21;:38::i;:::-;847:251;;;;932:38;954:12;967:1;954:15;;;;;;;;:::i;:::-;;;;;;;;932:21;:38::i;:::-;847:251;;;;993:38;1015:12;1028:1;1015:15;;;;;;;;:::i;:::-;;;;;;;;993:21;:38::i;:::-;847:251;;;;1051:38;1073:12;1086:1;1073:15;;;;;;;;:::i;:::-;;;;;;;;1051:21;:38::i;:::-;847:251;;;834:264;;;660:443;;;:::o;1111:286:22:-;1260:14;1282:16;1301:19;1315:4;1301:13;:19::i;:::-;1282:38;;1333:59;1365:3;1370:6;1378;1386:5;1333:31;:59::i;:::-;1326:66;;;1111:286;;;;;;:::o;8805:657:29:-;8916:15;8939:19;8961:2;8939:24;;8969:18;8990:2;8969:23;;9055:11;9076:4;9055:26;;9087:11;9108:4;9087:26;;9135:4;9127;:12;;;:28;;;;;9151:4;9143;:12;;;9127:28;9119:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;9288:5;9275:11;9271:23;9260:34;;9356:4;9347:7;9344:17;9331:11;9327:35;9316:46;;9422:4;9413:7;9410:17;9398:10;9394:34;9383:45;;9186:272;;;;8805:657;;;;;:::o;2213:140:22:-;2277:23;2342:4;2332:15;;;;;;2315:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;2308:40;;2213:140;;;:::o;3091:531:18:-;3198:12;3212:19;3239:23;3265:19;3277:6;3265:11;:19::i;:::-;3239:45;;3291:18;3311:25;3338:16;3358:33;3372:5;3379:4;3385:5;3358:13;:33::i;:::-;3290:101;;;;;;3398:11;3435:1;3412:12;:19;:24;3398:38;;3451:6;:21;;;;3461:11;3451:21;3443:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3510:18;3531:6;:57;;3579:9;;;;;;;;;;;;3531:57;;;3540:36;3554:5;3573:1;3560:10;:14;;;;:::i;:::-;3554:21;;;;;;;;:::i;:::-;;;;;;;;3540:13;:36::i;:::-;3531:57;3510:78;;3603:6;3611:5;3595:22;;;;;;;;;;3091:531;;;;;;:::o;2576:119:21:-;2635:16;2666:24;2675:14;2685:3;2675:9;:14::i;:::-;2666:8;:24::i;:::-;2659:31;;2576:119;;;:::o;4943:116::-;5007:7;5037:16;5049:3;5037:11;:16::i;:::-;5029:25;;5022:32;;4943:116;;;:::o;3966:603::-;4030:7;4090:6;4077:3;:10;;;:19;4069:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4135:18;4155;4175:20;4199:18;4213:3;4199:13;:18::i;:::-;4134:83;;;;;;4244:21;4232:33;;;;;;;;:::i;:::-;;:8;:33;;;;;;;;:::i;:::-;;;4224:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;4303:11;4327:10;4317:3;:7;;;:20;;;;:::i;:::-;4303:34;;4343:11;4390:3;4384:10;4377:17;;4474:2;4462:10;4459:18;4456:86;;;4521:10;4517:2;4513:19;4508:3;4504:29;4499:3;4495:39;4488:46;;4456:86;4561:3;4554:10;;;;;;;3966:603;;;:::o;2458:293:18:-;2607:14;2630:11;2643:18;2665:24;2669:4;2675:6;2683:5;2665:3;:24::i;:::-;2629:60;;;;2704:6;:41;;;;;2714:31;2731:6;2739:5;2714:16;:31::i;:::-;2704:41;2696:50;;;;2458:293;;;;;;:::o;8400:503::-;8464:25;8497:32;8532:26;8551:6;8532:18;:26::i;:::-;8497:61;;8564:23;8605:5;:12;8590:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8564:54;;8625:11;8639:5;:12;8625:26;;8662:9;8657:223;8681:3;8677:1;:7;8657:223;;;8696:20;8719:29;8739:5;8745:1;8739:8;;;;;;;;:::i;:::-;;;;;;;;8719:19;:29::i;:::-;8696:52;;8767:66;;;;;;;;8786:7;8767:66;;;;8804:27;8823:7;8804:18;:27::i;:::-;8767:66;;;8756:5;8762:1;8756:8;;;;;;;;:::i;:::-;;;;;;;:77;;;;8862:3;;;;;8688:192;8657:223;;;;8893:5;8886:12;;;;;8400:503;;;:::o;4093:4109::-;4233:19;4260:26;4294:17;4326:18;4347:1;4326:22;;4354:16;4373:26;4394:4;4373:20;:26::i;:::-;4354:45;;4406:21;4430:5;4406:29;;4441:23;4474:27;4511;;:::i;:::-;4612:11;4626:6;:13;4612:27;;4650:9;4645:3358;4669:3;4665:1;:7;4645:3358;;;4698:6;4705:1;4698:9;;;;;;;;:::i;:::-;;;;;;;;4684:23;;4734:19;4715:38;;;;;:::i;:::-;;;4912:1;4898:15;;;;;:::i;:::-;;;4945:1;4926:15;:20;4922:575;;5056:13;5032:11;:19;;;5022:30;;;;;;:47;5014:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4922:575;;;5139:6;5110:11;:19;;;:26;:35;5106:391;;;5267:13;5243:11;:19;;;5233:30;;;;;;:47;5225:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;5106:391;;;5444:13;5399:41;5420:11;:19;;;5399:20;:41::i;:::-;:58;5391:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5106:391;4922:575;5593:3;;;;;911:1;778:2;898:14;;;;:::i;:::-;5617:11;:19;;;:26;:48;5613:2384;;5700:3;:10;5681:15;:29;5677:546;5832:5;5677:546;5986:15;6010:3;6014:15;6010:20;;;;;;;;:::i;:::-;;;;;;;;;;6004:27;;5986:45;;6043:33;6079:11;:19;;;6099:9;6079:30;;;;;;;;;;:::i;:::-;;;;;;;;6043:66;;6137:20;6148:8;6137:10;:20::i;:::-;6121:36;;6191:1;6169:23;;6204:8;;;;5613:2384;1051:1;6241:11;:19;;;:26;:59;6237:1760;;6312:17;6332:25;6345:11;6332:12;:25::i;:::-;6312:45;;6367:12;6388:4;6393:1;6388:7;;;;;;;;:::i;:::-;;;;;;;;;;6382:14;;6367:29;;6406:12;6435:1;6426:6;:10;;;;:::i;:::-;6421:1;:16;;;;:::i;:::-;6406:31;;6447:26;6476:30;6493:4;6499:6;6476:30;;:16;:30::i;:::-;6447:59;;6516:25;6544:38;6561:3;6566:15;6544:16;:38::i;:::-;6516:66;;6592:26;6621:51;6644:13;6659:12;6621:22;:51::i;:::-;6592:80;;1555:1;6687:26;;:6;:26;;;:55;;;;1593:1;6717:25;;:6;:25;;;6687:55;6683:1242;;;6784:18;6760:13;:20;:42;:87;;;;;6829:18;6806:12;:19;:41;6760:87;6756:299;;;7024:18;7005:37;;;;;:::i;:::-;;;6756:299;1694:4;1687:12;;7152:17;;;7136:33;;7181:5;;;;;;;;6683:1242;1473:1;7207:31;;:6;:31;;;:65;;;;1516:1;7242:30;;:6;:30;;;7207:65;7203:722;;;7312:13;:20;7290:18;:42;7286:552;;1694:4;1687:12;;7538:17;;;7522:33;;7569:5;;;;;;;;7286:552;7715:34;7726:11;:19;;;7746:1;7726:22;;;;;;;;:::i;:::-;;;;;;;;7715:10;:34::i;:::-;7699:50;;7785:18;7763:40;;7817:8;;;;;;;;7203:722;7866:48;;;;;;;;;;:::i;:::-;;;;;;;;6237:1760;7949:39;;;;;;;;;;:::i;:::-;;;;;;;;4645:3358;;;;;8066:16;1694:4;1687:12;;8102:17;;;8085:13;:34;8066:53;;8133:10;8145:38;8162:3;8167:15;8145:16;:38::i;:::-;8185:11;8125:72;;;;;;;;;;;;;;4093:4109;;;;;;;:::o;10087:167::-;10155:19;10189:60;10209:5;:13;;;10246:1;10223:5;:13;;;:20;:24;;;;:::i;:::-;10209:39;;;;;;;;:::i;:::-;;;;;;;;10189:19;:60::i;:::-;10182:67;;10087:167;;;:::o;808:198:21:-;868:14;;:::i;:::-;890:11;940:2;935:3;931:12;924:19;;962:39;;;;;;;;979:3;:10;962:39;;;;996:3;962:39;;;955:46;;;808:198;;;:::o;1146:1290::-;1207:16;1232:18;1254:20;1278:18;1292:3;1278:13;:18::i;:::-;1231:65;;;;;1323:21;1311:33;;;;;;;;:::i;:::-;;:8;:33;;;;;;;;:::i;:::-;;;1303:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1755:20;361:2;1778:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1755:53;;1815:17;1842:14;1859:10;1842:27;;1875:426;1891:3;:10;;;1882:6;:19;1875:426;;;361:2;1919:9;:27;1911:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2003:18;2023;2047:92;2070:61;;;;;;;;2100:6;2087:3;:10;;;:19;;;;:::i;:::-;2070:61;;;;2123:6;2113:3;:7;;;:16;;;;:::i;:::-;2070:61;;;2047:13;:92::i;:::-;2002:137;;;;;2165:65;;;;;;;;2195:10;2182;:23;;;;:::i;:::-;2165:65;;;;2222:6;2212:3;:7;;;:16;;;;:::i;:::-;2165:65;;;2148:3;2152:9;2148:14;;;;;;;;:::i;:::-;;;;;;;:82;;;;2252:1;2239:14;;;;;:::i;:::-;;;2284:10;2271;:23;;;;:::i;:::-;2261:33;;;;;:::i;:::-;;;1903:398;;1875:426;;;2399:9;2394:3;2387:22;2428:3;2421:10;;;;;;;1146:1290;;;:::o;7144:1872::-;7228:7;7243;7258:11;7305:1;7292:3;:10;;;:14;7284:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;7342:11;7356:3;:7;;;7342:21;;7369:14;7430:3;7424:10;7421:1;7416:19;7406:29;;7460:8;7451:6;:17;7447:1565;;;7509:1;7512;7515:21;7501:36;;;;;;;;;;7447:1565;7563:8;7554:6;:17;7550:1462;;;7655:14;7681:4;7672:6;:13;;;;:::i;:::-;7655:30;;7715:6;7702:3;:10;;;:19;7694:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;7768:1;7771:6;7779:21;7760:41;;;;;;;;;;;7550:1462;7827:8;7818:6;:17;7814:1198;;;7867:19;7898:4;7889:6;:13;;;;:::i;:::-;7867:35;;7932:11;7919:3;:10;;;:24;7911:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7988:14;8119:11;8115:2;8111:20;8106:3;8102:30;8097:1;8092:3;8088:11;8082:18;8078:55;8068:65;;8184:6;8170:11;:20;;;;:::i;:::-;8157:3;:10;;;:33;8149:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8240:11;8236:1;:15;;;;:::i;:::-;8253:6;8261:21;8228:55;;;;;;;;;;;;7814:1198;8309:8;8300:6;:17;8296:716;;;8398:15;8425:4;8416:6;:13;;;;:::i;:::-;8398:31;;8459:7;8446:3;:10;;;:20;8438:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;8511:1;8514:7;8523:21;8503:42;;;;;;;;;;;8296:716;8586:20;8618:4;8609:6;:13;;;;:::i;:::-;8586:36;;8652:12;8639:3;:10;;;:25;8631:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8707:15;8838:12;8834:2;8830:21;8825:3;8821:31;8816:1;8811:3;8807:11;8801:18;8797:56;8786:67;;8905:7;8890:12;:22;;;;:::i;:::-;8877:3;:10;;;:35;8869:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8960:12;8956:1;:16;;;;:::i;:::-;8974:7;8983:21;8948:57;;;;;;;;;;7144:1872;;;;;;:::o;4163:142:17:-;4243:4;4293:6;4283:17;;;;;;4272:6;4262:17;;;;;;:38;4255:45;;4163:142;;;;:::o;2814:299:21:-;2876:12;2897:18;2917;2937:20;2961:18;2975:3;2961:13;:18::i;:::-;2896:83;;;;;;3006:21;2994:33;;;;;;;;:::i;:::-;;:8;:33;;;;;;;;:::i;:::-;;;2986:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3070:38;3076:3;:7;;;3085:10;3097;3070:5;:38::i;:::-;3063:45;;;;;2814:299;;;:::o;3454:374:17:-;3517:12;3537:20;3586:1;3570:6;:13;:17;;;;:::i;:::-;3560:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3537:51;;3595:11;3609:6;:13;3595:27;;3633:9;3628:175;3652:3;3648:1;:7;3628:175;;;3697:1;3684:6;3691:1;3684:9;;;;;;;;:::i;:::-;;;;;;;;;;:14;;;;;3667:7;3679:1;3675;:5;;;;:::i;:::-;3667:14;;;;;;;;:::i;:::-;;;;;:31;;;;;;;;;;;3753:2;3740:6;3747:1;3740:9;;;;;;;;:::i;:::-;;;;;;;;;;3734:16;;:21;;;;:::i;:::-;3727:29;;3706:7;3722:1;3718;3714;:5;;;;:::i;:::-;:9;;;;:::i;:::-;3706:18;;;;;;;;:::i;:::-;;;;;:50;;;;;;;;;;;3785:3;;;;;3628:175;;;;3816:7;3809:14;;;;3454:374;;;:::o;3030:300::-;3093:7;3128:2;3112:6;:13;:18;3108:131;;;3140:11;3203:2;3195:6;3191:15;3185:22;3178:29;;3229:3;3222:10;;;;;3108:131;3263:6;3252:29;;;;;;;;;;;;:::i;:::-;3245:36;;3030:300;;;;:::o;9199:401:18:-;9273:15;9296:19;9341:2;9326:5;:12;;;:17;9322:232;;;9416:29;9439:5;9416:22;:29::i;:::-;9407:38;;9322:232;;;9521:26;9541:5;9521:19;:26::i;:::-;9512:35;;9322:232;9567:28;9588:6;9567:20;:28::i;:::-;9560:35;;;9199:401;;;:::o;9779:164::-;9846:18;9879:59;9900:37;9920:5;:13;;;9934:1;9920:16;;;;;;;;:::i;:::-;;;;;;;;9900:19;:37::i;:::-;9879:20;:59::i;:::-;9872:66;;9779:164;;;:::o;2808:218:17:-;2883:12;2917:6;:13;2907:6;:23;2903:60;;2947:9;;;;;;;;;;;;2940:16;;;;2903:60;2976:45;2982:6;2990;3014;2998;:13;:22;;;;:::i;:::-;2976:5;:45::i;:::-;2969:52;;2808:218;;;;;:::o;10482:223:18:-;10570:15;10593:9;10605:1;10593:13;;10612:75;10631:1;10619:2;:9;:13;:30;;;;;10648:1;10636:2;:9;:13;10619:30;:48;;;;;10662:2;10665:1;10662:5;;;;;;;;:::i;:::-;;;;;;;;;;10653:14;;;:2;10656:1;10653:5;;;;;;;;:::i;:::-;;;;;;;;;;:14;;;;10619:48;10612:75;;;10677:3;;;;;:::i;:::-;;;;10612:75;;;10699:1;10692:8;;;10482:223;;;;:::o;9255:789:21:-;9356:12;9376:16;9405:7;9395:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9376:37;;9437:1;9423:3;:10;:15;9419:46;;9455:3;9448:10;;;;;9419:46;9471:11;9492:7;9485:4;:14;;;;:::i;:::-;9471:28;;9505:12;9557:2;9552:3;9548:12;9540:20;;9628:9;9623:181;9657:2;9647:7;:12;;;;:::i;:::-;9643:1;:16;9623:181;;;9709:3;9703:10;9697:4;9690:24;9737:2;9730:9;;;;;:::i;:::-;;;9755:2;9747:10;;;;;:::i;:::-;;;9786:3;;;;;9623:181;;;;9847:12;9919:1;9912:2;9902:7;:12;;;;;:::i;:::-;;;9896:2;:19;9890:3;:26;:30;9883:37;;10011:4;10004;9998:11;9994:22;9986:4;9982:9;9976:3;9970:10;9966:26;9963:54;9957:4;9950:68;10036:3;10029:10;;;;;;9255:789;;;;;;:::o;6733:107::-;6798:12;6825:10;6831:3;6825:5;:10::i;:::-;6818:17;;6733:107;;;:::o;352:2452:17:-;460:12;504:7;498:2;488:7;:12;;;;:::i;:::-;:23;;480:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;564:6;553:7;544:6;:16;;;;:::i;:::-;:26;;536:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;629:7;620:6;:16;;;;:::i;:::-;603:6;:13;:33;;595:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;665:22;725:7;718:15;745:1;740:1693;;;;2554:4;2548:11;2535:24;;2717:1;2706:9;2699:20;2757:4;2746:9;2742:20;2736:4;2729:34;711:2060;;740:1693;898:4;892:11;879:24;;1485:2;1476:7;1472:16;1827:9;1820:17;1814:4;1810:28;1798:9;1787;1783:25;1779:60;1867:7;1863:2;1859:16;2081:6;2067:9;2060:17;2054:4;2050:28;2038:9;2030:6;2026:22;2022:57;2018:70;1885:341;2106:3;2102:2;2099:11;1885:341;;;2212:2;2206:9;2202:2;2195:21;2137:4;2133:2;2129:13;2123:19;;2167:4;2163:2;2159:13;2153:19;;1885:341;;;1889:209;2254:7;2243:9;2236:26;2420:2;2416:7;2411:2;2407;2403:11;2399:25;2393:4;2386:39;747:1686;;;711:2060;;2790:9;2783:16;;;352:2452;;;;;:::o;10157:118:21:-;10214:12;10241:29;10247:3;:7;;;10256:1;10259:3;:10;;;10241:5;:29::i;:::-;10234:36;;10157:118;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;7:126:30:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:156::-;565:9;598:37;629:5;598:37;:::i;:::-;585:50;;485:156;;;:::o;647:191::-;764:67;825:5;764:67;:::i;:::-;759:3;752:80;647:191;;:::o;844:282::-;967:4;1005:2;994:9;990:18;982:26;;1018:101;1116:1;1105:9;1101:17;1092:6;1018:101;:::i;:::-;844:282;;;;:::o;1132:93::-;1168:7;1208:10;1201:5;1197:22;1186:33;;1132:93;;;:::o;1231:115::-;1316:23;1333:5;1316:23;:::i;:::-;1311:3;1304:36;1231:115;;:::o;1352:218::-;1443:4;1481:2;1470:9;1466:18;1458:26;;1494:69;1560:1;1549:9;1545:17;1536:6;1494:69;:::i;:::-;1352:218;;;;:::o;1576:77::-;1613:7;1642:5;1631:16;;1576:77;;;:::o;1659:118::-;1746:24;1764:5;1746:24;:::i;:::-;1741:3;1734:37;1659:118;;:::o;1783:222::-;1876:4;1914:2;1903:9;1899:18;1891:26;;1927:71;1995:1;1984:9;1980:17;1971:6;1927:71;:::i;:::-;1783:222;;;;:::o;2011:75::-;2044:6;2077:2;2071:9;2061:19;;2011:75;:::o;2092:117::-;2201:1;2198;2191:12;2215:117;2324:1;2321;2314:12;2338:117;2447:1;2444;2437:12;2461:117;2570:1;2567;2560:12;2584:102;2625:6;2676:2;2672:7;2667:2;2660:5;2656:14;2652:28;2642:38;;2584:102;;;:::o;2692:180::-;2740:77;2737:1;2730:88;2837:4;2834:1;2827:15;2861:4;2858:1;2851:15;2878:281;2961:27;2983:4;2961:27;:::i;:::-;2953:6;2949:40;3091:6;3079:10;3076:22;3055:18;3043:10;3040:34;3037:62;3034:88;;;3102:18;;:::i;:::-;3034:88;3142:10;3138:2;3131:22;2921:238;2878:281;;:::o;3165:129::-;3199:6;3226:20;;:::i;:::-;3216:30;;3255:33;3283:4;3275:6;3255:33;:::i;:::-;3165:129;;;:::o;3300:307::-;3361:4;3451:18;3443:6;3440:30;3437:56;;;3473:18;;:::i;:::-;3437:56;3511:29;3533:6;3511:29;:::i;:::-;3503:37;;3595:4;3589;3585:15;3577:23;;3300:307;;;:::o;3613:146::-;3710:6;3705:3;3700;3687:30;3751:1;3742:6;3737:3;3733:16;3726:27;3613:146;;;:::o;3765:423::-;3842:5;3867:65;3883:48;3924:6;3883:48;:::i;:::-;3867:65;:::i;:::-;3858:74;;3955:6;3948:5;3941:21;3993:4;3986:5;3982:16;4031:3;4022:6;4017:3;4013:16;4010:25;4007:112;;;4038:79;;:::i;:::-;4007:112;4128:54;4175:6;4170:3;4165;4128:54;:::i;:::-;3848:340;3765:423;;;;;:::o;4207:338::-;4262:5;4311:3;4304:4;4296:6;4292:17;4288:27;4278:122;;4319:79;;:::i;:::-;4278:122;4436:6;4423:20;4461:78;4535:3;4527:6;4520:4;4512:6;4508:17;4461:78;:::i;:::-;4452:87;;4268:277;4207:338;;;;:::o;4551:830::-;4637:6;4645;4694:2;4682:9;4673:7;4669:23;4665:32;4662:119;;;4700:79;;:::i;:::-;4662:119;4848:1;4837:9;4833:17;4820:31;4878:18;4870:6;4867:30;4864:117;;;4900:79;;:::i;:::-;4864:117;5005:62;5059:7;5050:6;5039:9;5035:22;5005:62;:::i;:::-;4995:72;;4791:286;5144:2;5133:9;5129:18;5116:32;5175:18;5167:6;5164:30;5161:117;;;5197:79;;:::i;:::-;5161:117;5302:62;5356:7;5347:6;5336:9;5332:22;5302:62;:::i;:::-;5292:72;;5087:287;4551:830;;;;;:::o;5387:507::-;5455:6;5504:2;5492:9;5483:7;5479:23;5475:32;5472:119;;;5510:79;;:::i;:::-;5472:119;5658:1;5647:9;5643:17;5630:31;5688:18;5680:6;5677:30;5674:117;;;5710:79;;:::i;:::-;5674:117;5815:62;5869:7;5860:6;5849:9;5845:22;5815:62;:::i;:::-;5805:72;;5601:286;5387:507;;;;:::o;5900:96::-;5937:7;5966:24;5984:5;5966:24;:::i;:::-;5955:35;;5900:96;;;:::o;6002:122::-;6075:24;6093:5;6075:24;:::i;:::-;6068:5;6065:35;6055:63;;6114:1;6111;6104:12;6055:63;6002:122;:::o;6130:139::-;6176:5;6214:6;6201:20;6192:29;;6230:33;6257:5;6230:33;:::i;:::-;6130:139;;;;:::o;6275:329::-;6334:6;6383:2;6371:9;6362:7;6358:23;6354:32;6351:119;;;6389:79;;:::i;:::-;6351:119;6509:1;6534:53;6579:7;6570:6;6559:9;6555:22;6534:53;:::i;:::-;6524:63;;6480:117;6275:329;;;;:::o;6610:118::-;6697:24;6715:5;6697:24;:::i;:::-;6692:3;6685:37;6610:118;;:::o;6734:222::-;6827:4;6865:2;6854:9;6850:18;6842:26;;6878:71;6946:1;6935:9;6931:17;6922:6;6878:71;:::i;:::-;6734:222;;;;:::o;6962:122::-;7035:24;7053:5;7035:24;:::i;:::-;7028:5;7025:35;7015:63;;7074:1;7071;7064:12;7015:63;6962:122;:::o;7090:139::-;7136:5;7174:6;7161:20;7152:29;;7190:33;7217:5;7190:33;:::i;:::-;7090:139;;;;:::o;7235:117::-;7344:1;7341;7334:12;7358:117;7467:1;7464;7457:12;7481:77;7518:7;7547:5;7536:16;;7481:77;;;:::o;7564:122::-;7637:24;7655:5;7637:24;:::i;:::-;7630:5;7627:35;7617:63;;7676:1;7673;7666:12;7617:63;7564:122;:::o;7692:139::-;7738:5;7776:6;7763:20;7754:29;;7792:33;7819:5;7792:33;:::i;:::-;7692:139;;;;:::o;7868:1270::-;7951:5;7995:4;7983:9;7978:3;7974:19;7970:30;7967:117;;;8003:79;;:::i;:::-;7967:117;8102:21;8118:4;8102:21;:::i;:::-;8093:30;;8188:1;8228:49;8273:3;8264:6;8253:9;8249:22;8228:49;:::i;:::-;8221:4;8214:5;8210:16;8203:75;8133:156;8353:2;8394:49;8439:3;8430:6;8419:9;8415:22;8394:49;:::i;:::-;8387:4;8380:5;8376:16;8369:75;8299:156;8519:2;8560:49;8605:3;8596:6;8585:9;8581:22;8560:49;:::i;:::-;8553:4;8546:5;8542:16;8535:75;8465:156;8693:2;8734:49;8779:3;8770:6;8759:9;8755:22;8734:49;:::i;:::-;8727:4;8720:5;8716:16;8709:75;8631:164;8887:3;8876:9;8872:19;8859:33;8919:18;8911:6;8908:30;8905:117;;;8941:79;;:::i;:::-;8905:117;9061:58;9115:3;9106:6;9095:9;9091:22;9061:58;:::i;:::-;9054:4;9047:5;9043:16;9036:84;8805:326;7868:1270;;;;:::o;9144:311::-;9221:4;9311:18;9303:6;9300:30;9297:56;;;9333:18;;:::i;:::-;9297:56;9383:4;9375:6;9371:17;9363:25;;9443:4;9437;9433:15;9425:23;;9144:311;;;:::o;9461:117::-;9570:1;9567;9560:12;9601:710;9697:5;9722:81;9738:64;9795:6;9738:64;:::i;:::-;9722:81;:::i;:::-;9713:90;;9823:5;9852:6;9845:5;9838:21;9886:4;9879:5;9875:16;9868:23;;9939:4;9931:6;9927:17;9919:6;9915:30;9968:3;9960:6;9957:15;9954:122;;;9987:79;;:::i;:::-;9954:122;10102:6;10085:220;10119:6;10114:3;10111:15;10085:220;;;10194:3;10223:37;10256:3;10244:10;10223:37;:::i;:::-;10218:3;10211:50;10290:4;10285:3;10281:14;10274:21;;10161:144;10145:4;10140:3;10136:14;10129:21;;10085:220;;;10089:21;9703:608;;9601:710;;;;;:::o;10334:370::-;10405:5;10454:3;10447:4;10439:6;10435:17;10431:27;10421:122;;10462:79;;:::i;:::-;10421:122;10579:6;10566:20;10604:94;10694:3;10686:6;10679:4;10671:6;10667:17;10604:94;:::i;:::-;10595:103;;10411:293;10334:370;;;;:::o;10744:776::-;10830:5;10874:4;10862:9;10857:3;10853:19;10849:30;10846:117;;;10882:79;;:::i;:::-;10846:117;10981:21;10997:4;10981:21;:::i;:::-;10972:30;;11062:1;11102:49;11147:3;11138:6;11127:9;11123:22;11102:49;:::i;:::-;11095:4;11088:5;11084:16;11077:75;11012:151;11254:2;11243:9;11239:18;11226:32;11285:18;11277:6;11274:30;11271:117;;;11307:79;;:::i;:::-;11271:117;11427:74;11497:3;11488:6;11477:9;11473:22;11427:74;:::i;:::-;11420:4;11413:5;11409:16;11402:100;11173:340;10744:776;;;;:::o;11564:1860::-;11654:5;11698:4;11686:9;11681:3;11677:19;11673:30;11670:117;;;11706:79;;:::i;:::-;11670:117;11805:21;11821:4;11805:21;:::i;:::-;11796:30;;11890:1;11930:49;11975:3;11966:6;11955:9;11951:22;11930:49;:::i;:::-;11923:4;11916:5;11912:16;11905:75;11836:155;12094:2;12083:9;12079:18;12066:32;12125:18;12117:6;12114:30;12111:117;;;12147:79;;:::i;:::-;12111:117;12267:83;12346:3;12337:6;12326:9;12322:22;12267:83;:::i;:::-;12260:4;12253:5;12249:16;12242:109;12001:361;12459:2;12448:9;12444:18;12431:32;12490:18;12482:6;12479:30;12476:117;;;12512:79;;:::i;:::-;12476:117;12632:86;12714:3;12705:6;12694:9;12690:22;12632:86;:::i;:::-;12625:4;12618:5;12614:16;12607:112;12372:358;12829:2;12818:9;12814:18;12801:32;12860:18;12852:6;12849:30;12846:117;;;12882:79;;:::i;:::-;12846:117;13002:58;13056:3;13047:6;13036:9;13032:22;13002:58;:::i;:::-;12995:4;12988:5;12984:16;12977:84;12740:332;13173:3;13162:9;13158:19;13145:33;13205:18;13197:6;13194:30;13191:117;;;13227:79;;:::i;:::-;13191:117;13347:58;13401:3;13392:6;13381:9;13377:22;13347:58;:::i;:::-;13340:4;13333:5;13329:16;13322:84;13082:335;11564:1860;;;;:::o;13430:1331::-;13575:6;13583;13591;13599;13607;13656:3;13644:9;13635:7;13631:23;13627:33;13624:120;;;13663:79;;:::i;:::-;13624:120;13783:1;13808:53;13853:7;13844:6;13833:9;13829:22;13808:53;:::i;:::-;13798:63;;13754:117;13910:2;13936:53;13981:7;13972:6;13961:9;13957:22;13936:53;:::i;:::-;13926:63;;13881:118;14066:2;14055:9;14051:18;14038:32;14097:18;14089:6;14086:30;14083:117;;;14119:79;;:::i;:::-;14083:117;14224:62;14278:7;14269:6;14258:9;14254:22;14224:62;:::i;:::-;14214:72;;14009:287;14335:2;14361:53;14406:7;14397:6;14386:9;14382:22;14361:53;:::i;:::-;14351:63;;14306:118;14491:3;14480:9;14476:19;14463:33;14523:18;14515:6;14512:30;14509:117;;;14545:79;;:::i;:::-;14509:117;14650:94;14736:7;14727:6;14716:9;14712:22;14650:94;:::i;:::-;14640:104;;14434:320;13430:1331;;;;;;;;:::o;14767:329::-;14826:6;14875:2;14863:9;14854:7;14850:23;14846:32;14843:119;;;14881:79;;:::i;:::-;14843:119;15001:1;15026:53;15071:7;15062:6;15051:9;15047:22;15026:53;:::i;:::-;15016:63;;14972:117;14767:329;;;;:::o;15102:::-;15161:6;15210:2;15198:9;15189:7;15185:23;15181:32;15178:119;;;15216:79;;:::i;:::-;15178:119;15336:1;15361:53;15406:7;15397:6;15386:9;15382:22;15361:53;:::i;:::-;15351:63;;15307:117;15102:329;;;;:::o;15437:90::-;15471:7;15514:5;15507:13;15500:21;15489:32;;15437:90;;;:::o;15533:109::-;15614:21;15629:5;15614:21;:::i;:::-;15609:3;15602:34;15533:109;;:::o;15648:210::-;15735:4;15773:2;15762:9;15758:18;15750:26;;15786:65;15848:1;15837:9;15833:17;15824:6;15786:65;:::i;:::-;15648:210;;;;:::o;15864:169::-;15948:11;15982:6;15977:3;15970:19;16022:4;16017:3;16013:14;15998:29;;15864:169;;;;:::o;16039:162::-;16179:14;16175:1;16167:6;16163:14;16156:38;16039:162;:::o;16207:366::-;16349:3;16370:67;16434:2;16429:3;16370:67;:::i;:::-;16363:74;;16446:93;16535:3;16446:93;:::i;:::-;16564:2;16559:3;16555:12;16548:19;;16207:366;;;:::o;16579:419::-;16745:4;16783:2;16772:9;16768:18;16760:26;;16832:9;16826:4;16822:20;16818:1;16807:9;16803:17;16796:47;16860:131;16986:4;16860:131;:::i;:::-;16852:139;;16579:419;;;:::o;17004:98::-;17055:6;17089:5;17083:12;17073:22;;17004:98;;;:::o;17108:168::-;17191:11;17225:6;17220:3;17213:19;17265:4;17260:3;17256:14;17241:29;;17108:168;;;;:::o;17282:246::-;17363:1;17373:113;17387:6;17384:1;17381:13;17373:113;;;17472:1;17467:3;17463:11;17457:18;17453:1;17448:3;17444:11;17437:39;17409:2;17406:1;17402:10;17397:15;;17373:113;;;17520:1;17511:6;17506:3;17502:16;17495:27;17344:184;17282:246;;;:::o;17534:373::-;17620:3;17648:38;17680:5;17648:38;:::i;:::-;17702:70;17765:6;17760:3;17702:70;:::i;:::-;17695:77;;17781:65;17839:6;17834:3;17827:4;17820:5;17816:16;17781:65;:::i;:::-;17871:29;17893:6;17871:29;:::i;:::-;17866:3;17862:39;17855:46;;17624:283;17534:373;;;;:::o;17913:616::-;18098:4;18136:2;18125:9;18121:18;18113:26;;18185:9;18179:4;18175:20;18171:1;18160:9;18156:17;18149:47;18213:76;18284:4;18275:6;18213:76;:::i;:::-;18205:84;;18336:9;18330:4;18326:20;18321:2;18310:9;18306:18;18299:48;18364:76;18435:4;18426:6;18364:76;:::i;:::-;18356:84;;18450:72;18518:2;18507:9;18503:18;18494:6;18450:72;:::i;:::-;17913:616;;;;;;:::o;18535:154::-;18675:6;18671:1;18663:6;18659:14;18652:30;18535:154;:::o;18695:365::-;18837:3;18858:66;18922:1;18917:3;18858:66;:::i;:::-;18851:73;;18933:93;19022:3;18933:93;:::i;:::-;19051:2;19046:3;19042:12;19035:19;;18695:365;;;:::o;19066:419::-;19232:4;19270:2;19259:9;19255:18;19247:26;;19319:9;19313:4;19309:20;19305:1;19294:9;19290:17;19283:47;19347:131;19473:4;19347:131;:::i;:::-;19339:139;;19066:419;;;:::o;19491:::-;19630:4;19668:2;19657:9;19653:18;19645:26;;19717:9;19711:4;19707:20;19703:1;19692:9;19688:17;19681:47;19745:76;19816:4;19807:6;19745:76;:::i;:::-;19737:84;;19831:72;19899:2;19888:9;19884:18;19875:6;19831:72;:::i;:::-;19491:419;;;;;:::o;19916:166::-;20056:18;20052:1;20044:6;20040:14;20033:42;19916:166;:::o;20088:366::-;20230:3;20251:67;20315:2;20310:3;20251:67;:::i;:::-;20244:74;;20327:93;20416:3;20327:93;:::i;:::-;20445:2;20440:3;20436:12;20429:19;;20088:366;;;:::o;20460:419::-;20626:4;20664:2;20653:9;20649:18;20641:26;;20713:9;20707:4;20703:20;20699:1;20688:9;20684:17;20677:47;20741:131;20867:4;20741:131;:::i;:::-;20733:139;;20460:419;;;:::o;20885:155::-;21025:7;21021:1;21013:6;21009:14;21002:31;20885:155;:::o;21046:365::-;21188:3;21209:66;21273:1;21268:3;21209:66;:::i;:::-;21202:73;;21284:93;21373:3;21284:93;:::i;:::-;21402:2;21397:3;21393:12;21386:19;;21046:365;;;:::o;21417:419::-;21583:4;21621:2;21610:9;21606:18;21598:26;;21670:9;21664:4;21660:20;21656:1;21645:9;21641:17;21634:47;21698:131;21824:4;21698:131;:::i;:::-;21690:139;;21417:419;;;:::o;21842:156::-;21982:8;21978:1;21970:6;21966:14;21959:32;21842:156;:::o;22004:365::-;22146:3;22167:66;22231:1;22226:3;22167:66;:::i;:::-;22160:73;;22242:93;22331:3;22242:93;:::i;:::-;22360:2;22355:3;22351:12;22344:19;;22004:365;;;:::o;22375:419::-;22541:4;22579:2;22568:9;22564:18;22556:26;;22628:9;22622:4;22618:20;22614:1;22603:9;22599:17;22592:47;22656:131;22782:4;22656:131;:::i;:::-;22648:139;;22375:419;;;:::o;22800:109::-;22836:7;22876:26;22869:5;22865:38;22854:49;;22800:109;;;:::o;22915:180::-;22963:77;22960:1;22953:88;23060:4;23057:1;23050:15;23084:4;23081:1;23074:15;23101:216;23140:4;23160:19;23177:1;23160:19;:::i;:::-;23155:24;;23193:19;23210:1;23193:19;:::i;:::-;23188:24;;23236:1;23233;23229:9;23221:17;;23260:26;23254:4;23251:36;23248:62;;;23290:18;;:::i;:::-;23248:62;23101:216;;;;:::o;23323:118::-;23410:24;23428:5;23410:24;:::i;:::-;23405:3;23398:37;23323:118;;:::o;23447:328::-;23566:4;23604:2;23593:9;23589:18;23581:26;;23617:69;23683:1;23672:9;23668:17;23659:6;23617:69;:::i;:::-;23696:72;23764:2;23753:9;23749:18;23740:6;23696:72;:::i;:::-;23447:328;;;;;:::o;23781:222::-;23874:4;23912:2;23901:9;23897:18;23889:26;;23925:71;23993:1;23982:9;23978:17;23969:6;23925:71;:::i;:::-;23781:222;;;;:::o;24009:194::-;24049:4;24069:20;24087:1;24069:20;:::i;:::-;24064:25;;24103:20;24121:1;24103:20;:::i;:::-;24098:25;;24147:1;24144;24140:9;24132:17;;24171:1;24165:4;24162:11;24159:37;;;24176:18;;:::i;:::-;24159:37;24009:194;;;;:::o;24209:157::-;24349:9;24345:1;24337:6;24333:14;24326:33;24209:157;:::o;24372:365::-;24514:3;24535:66;24599:1;24594:3;24535:66;:::i;:::-;24528:73;;24610:93;24699:3;24610:93;:::i;:::-;24728:2;24723:3;24719:12;24712:19;;24372:365;;;:::o;24743:419::-;24909:4;24947:2;24936:9;24932:18;24924:26;;24996:9;24990:4;24986:20;24982:1;24971:9;24967:17;24960:47;25024:131;25150:4;25024:131;:::i;:::-;25016:139;;24743:419;;;:::o;25168:309::-;25279:4;25317:2;25306:9;25302:18;25294:26;;25366:9;25360:4;25356:20;25352:1;25341:9;25337:17;25330:47;25394:76;25465:4;25456:6;25394:76;:::i;:::-;25386:84;;25168:309;;;;:::o;25483:525::-;25648:4;25686:2;25675:9;25671:18;25663:26;;25699:71;25767:1;25756:9;25752:17;25743:6;25699:71;:::i;:::-;25817:9;25811:4;25807:20;25802:2;25791:9;25787:18;25780:48;25845:76;25916:4;25907:6;25845:76;:::i;:::-;25837:84;;25931:70;25997:2;25986:9;25982:18;25973:6;25931:70;:::i;:::-;25483:525;;;;;;:::o;26014:332::-;26135:4;26173:2;26162:9;26158:18;26150:26;;26186:71;26254:1;26243:9;26239:17;26230:6;26186:71;:::i;:::-;26267:72;26335:2;26324:9;26320:18;26311:6;26267:72;:::i;:::-;26014:332;;;;;:::o;26352:640::-;26547:4;26585:3;26574:9;26570:19;26562:27;;26599:71;26667:1;26656:9;26652:17;26643:6;26599:71;:::i;:::-;26680:72;26748:2;26737:9;26733:18;26724:6;26680:72;:::i;:::-;26799:9;26793:4;26789:20;26784:2;26773:9;26769:18;26762:48;26827:76;26898:4;26889:6;26827:76;:::i;:::-;26819:84;;26913:72;26981:2;26970:9;26966:18;26957:6;26913:72;:::i;:::-;26352:640;;;;;;;:::o;26998:191::-;27038:3;27057:20;27075:1;27057:20;:::i;:::-;27052:25;;27091:20;27109:1;27091:20;:::i;:::-;27086:25;;27134:1;27131;27127:9;27120:16;;27155:3;27152:1;27149:10;27146:36;;;27162:18;;:::i;:::-;27146:36;26998:191;;;;:::o;27195:140::-;27244:9;27277:52;27295:33;27304:23;27321:5;27304:23;:::i;:::-;27295:33;:::i;:::-;27277:52;:::i;:::-;27264:65;;27195:140;;;:::o;27341:129::-;27427:36;27457:5;27427:36;:::i;:::-;27422:3;27415:49;27341:129;;:::o;27476:549::-;27651:4;27689:3;27678:9;27674:19;27666:27;;27703:70;27770:1;27759:9;27755:17;27746:6;27703:70;:::i;:::-;27783:71;27850:2;27839:9;27835:18;27826:6;27783:71;:::i;:::-;27864:72;27932:2;27921:9;27917:18;27908:6;27864:72;:::i;:::-;27946;28014:2;28003:9;27999:18;27990:6;27946:72;:::i;:::-;27476:549;;;;;;;:::o;28031:332::-;28152:4;28190:2;28179:9;28175:18;28167:26;;28203:71;28271:1;28260:9;28256:17;28247:6;28203:71;:::i;:::-;28284:72;28352:2;28341:9;28337:18;28328:6;28284:72;:::i;:::-;28031:332;;;;;:::o;28369:108::-;28446:24;28464:5;28446:24;:::i;:::-;28441:3;28434:37;28369:108;;:::o;28483:::-;28560:24;28578:5;28560:24;:::i;:::-;28555:3;28548:37;28483:108;;:::o;28597:158::-;28670:11;28704:6;28699:3;28692:19;28744:4;28739:3;28735:14;28720:29;;28597:158;;;;:::o;28761:353::-;28837:3;28865:38;28897:5;28865:38;:::i;:::-;28919:60;28972:6;28967:3;28919:60;:::i;:::-;28912:67;;28988:65;29046:6;29041:3;29034:4;29027:5;29023:16;28988:65;:::i;:::-;29078:29;29100:6;29078:29;:::i;:::-;29073:3;29069:39;29062:46;;28841:273;28761:353;;;;:::o;29178:1178::-;29315:3;29351:4;29346:3;29342:14;29444:4;29437:5;29433:16;29427:23;29463:63;29520:4;29515:3;29511:14;29497:12;29463:63;:::i;:::-;29366:170;29623:4;29616:5;29612:16;29606:23;29642:63;29699:4;29694:3;29690:14;29676:12;29642:63;:::i;:::-;29546:169;29802:4;29795:5;29791:16;29785:23;29821:63;29878:4;29873:3;29869:14;29855:12;29821:63;:::i;:::-;29725:169;29989:4;29982:5;29978:16;29972:23;30008:63;30065:4;30060:3;30056:14;30042:12;30008:63;:::i;:::-;29904:177;30168:4;30161:5;30157:16;30151:23;30221:3;30215:4;30211:14;30204:4;30199:3;30195:14;30188:38;30247:71;30313:4;30299:12;30247:71;:::i;:::-;30239:79;;30091:238;30346:4;30339:11;;29320:1036;29178:1178;;;;:::o;30362:114::-;30429:6;30463:5;30457:12;30447:22;;30362:114;;;:::o;30482:174::-;30571:11;30605:6;30600:3;30593:19;30645:4;30640:3;30636:14;30621:29;;30482:174;;;;:::o;30662:132::-;30729:4;30752:3;30744:11;;30782:4;30777:3;30773:14;30765:22;;30662:132;;;:::o;30800:179::-;30869:10;30890:46;30932:3;30924:6;30890:46;:::i;:::-;30968:4;30963:3;30959:14;30945:28;;30800:179;;;;:::o;30985:113::-;31055:4;31087;31082:3;31078:14;31070:22;;30985:113;;;:::o;31134:712::-;31243:3;31272:54;31320:5;31272:54;:::i;:::-;31342:76;31411:6;31406:3;31342:76;:::i;:::-;31335:83;;31442:56;31492:5;31442:56;:::i;:::-;31521:7;31552:1;31537:284;31562:6;31559:1;31556:13;31537:284;;;31638:6;31632:13;31665:63;31724:3;31709:13;31665:63;:::i;:::-;31658:70;;31751:60;31804:6;31751:60;:::i;:::-;31741:70;;31597:224;31584:1;31581;31577:9;31572:14;;31537:284;;;31541:14;31837:3;31830:10;;31248:598;;;31134:712;;;;:::o;31916:665::-;32059:3;32095:4;32090:3;32086:14;32183:4;32176:5;32172:16;32166:23;32202:63;32259:4;32254:3;32250:14;32236:12;32202:63;:::i;:::-;32110:165;32361:4;32354:5;32350:16;32344:23;32414:3;32408:4;32404:14;32397:4;32392:3;32388:14;32381:38;32440:103;32538:4;32524:12;32440:103;:::i;:::-;32432:111;;32285:269;32571:4;32564:11;;32064:517;31916:665;;;;:::o;32587:828::-;32878:4;32916:2;32905:9;32901:18;32893:26;;32929:71;32997:1;32986:9;32982:17;32973:6;32929:71;:::i;:::-;33047:9;33041:4;33037:20;33032:2;33021:9;33017:18;33010:48;33075:126;33196:4;33187:6;33075:126;:::i;:::-;33067:134;;33248:9;33242:4;33238:20;33233:2;33222:9;33218:18;33211:48;33276:132;33403:4;33394:6;33276:132;:::i;:::-;33268:140;;32587:828;;;;;;:::o;33421:116::-;33491:21;33506:5;33491:21;:::i;:::-;33484:5;33481:32;33471:60;;33527:1;33524;33517:12;33471:60;33421:116;:::o;33543:137::-;33597:5;33628:6;33622:13;33613:22;;33644:30;33668:5;33644:30;:::i;:::-;33543:137;;;;:::o;33686:345::-;33753:6;33802:2;33790:9;33781:7;33777:23;33773:32;33770:119;;;33808:79;;:::i;:::-;33770:119;33928:1;33953:61;34006:7;33997:6;33986:9;33982:22;33953:61;:::i;:::-;33943:71;;33899:125;33686:345;;;;:::o;34037:147::-;34138:11;34175:3;34160:18;;34037:147;;;;:::o;34190:386::-;34294:3;34322:38;34354:5;34322:38;:::i;:::-;34376:88;34457:6;34452:3;34376:88;:::i;:::-;34369:95;;34473:65;34531:6;34526:3;34519:4;34512:5;34508:16;34473:65;:::i;:::-;34563:6;34558:3;34554:16;34547:23;;34298:278;34190:386;;;;:::o;34582:94::-;34615:8;34663:5;34659:2;34655:14;34634:35;;34582:94;;;:::o;34682:::-;34721:7;34750:20;34764:5;34750:20;:::i;:::-;34739:31;;34682:94;;;:::o;34782:100::-;34821:7;34850:26;34870:5;34850:26;:::i;:::-;34839:37;;34782:100;;;:::o;34888:157::-;34993:45;35013:24;35031:5;35013:24;:::i;:::-;34993:45;:::i;:::-;34988:3;34981:58;34888:157;;:::o;35051:412::-;35209:3;35231:93;35320:3;35311:6;35231:93;:::i;:::-;35224:100;;35334:75;35405:3;35396:6;35334:75;:::i;:::-;35434:2;35429:3;35425:12;35418:19;;35454:3;35447:10;;35051:412;;;;;:::o;35469:79::-;35508:7;35537:5;35526:16;;35469:79;;;:::o;35554:157::-;35659:45;35679:24;35697:5;35679:24;:::i;:::-;35659:45;:::i;:::-;35654:3;35647:58;35554:157;;:::o;35717:79::-;35756:7;35785:5;35774:16;;35717:79;;;:::o;35802:157::-;35907:45;35927:24;35945:5;35927:24;:::i;:::-;35907:45;:::i;:::-;35902:3;35895:58;35802:157;;:::o;35965:397::-;36105:3;36120:75;36191:3;36182:6;36120:75;:::i;:::-;36220:2;36215:3;36211:12;36204:19;;36233:75;36304:3;36295:6;36233:75;:::i;:::-;36333:2;36328:3;36324:12;36317:19;;36353:3;36346:10;;35965:397;;;;;:::o;36368:256::-;36480:3;36495:75;36566:3;36557:6;36495:75;:::i;:::-;36595:2;36590:3;36586:12;36579:19;;36615:3;36608:10;;36368:256;;;;:::o;36630:301::-;36770:34;36766:1;36758:6;36754:14;36747:58;36839:34;36834:2;36826:6;36822:15;36815:59;36908:15;36903:2;36895:6;36891:15;36884:40;36630:301;:::o;36937:366::-;37079:3;37100:67;37164:2;37159:3;37100:67;:::i;:::-;37093:74;;37176:93;37265:3;37176:93;:::i;:::-;37294:2;37289:3;37285:12;37278:19;;36937:366;;;:::o;37309:419::-;37475:4;37513:2;37502:9;37498:18;37490:26;;37562:9;37556:4;37552:20;37548:1;37537:9;37533:17;37526:47;37590:131;37716:4;37590:131;:::i;:::-;37582:139;;37309:419;;;:::o;37734:256::-;37846:3;37861:75;37932:3;37923:6;37861:75;:::i;:::-;37961:2;37956:3;37952:12;37945:19;;37981:3;37974:10;;37734:256;;;;:::o;37996:86::-;38031:7;38071:4;38064:5;38060:16;38049:27;;37996:86;;;:::o;38088:96::-;38122:8;38171:5;38166:3;38162:15;38141:36;;38088:96;;;:::o;38190:93::-;38227:7;38256:21;38271:5;38256:21;:::i;:::-;38245:32;;38190:93;;;:::o;38289:149::-;38390:41;38408:22;38424:5;38408:22;:::i;:::-;38390:41;:::i;:::-;38385:3;38378:54;38289:149;;:::o;38444:247::-;38552:3;38567:71;38634:3;38625:6;38567:71;:::i;:::-;38663:1;38658:3;38654:11;38647:18;;38682:3;38675:10;;38444:247;;;;:::o;38697:157::-;38837:9;38833:1;38825:6;38821:14;38814:33;38697:157;:::o;38860:365::-;39002:3;39023:66;39087:1;39082:3;39023:66;:::i;:::-;39016:73;;39098:93;39187:3;39098:93;:::i;:::-;39216:2;39211:3;39207:12;39200:19;;38860:365;;;:::o;39231:419::-;39397:4;39435:2;39424:9;39420:18;39412:26;;39484:9;39478:4;39474:20;39470:1;39459:9;39455:17;39448:47;39512:131;39638:4;39512:131;:::i;:::-;39504:139;;39231:419;;;:::o;39656:143::-;39713:5;39744:6;39738:13;39729:22;;39760:33;39787:5;39760:33;:::i;:::-;39656:143;;;;:::o;39805:351::-;39875:6;39924:2;39912:9;39903:7;39899:23;39895:32;39892:119;;;39930:79;;:::i;:::-;39892:119;40050:1;40075:64;40131:7;40122:6;40111:9;40107:22;40075:64;:::i;:::-;40065:74;;40021:128;39805:351;;;;:::o;40162:180::-;40210:77;40207:1;40200:88;40307:4;40304:1;40297:15;40331:4;40328:1;40321:15;40348:160;40488:12;40484:1;40476:6;40472:14;40465:36;40348:160;:::o;40514:366::-;40656:3;40677:67;40741:2;40736:3;40677:67;:::i;:::-;40670:74;;40753:93;40842:3;40753:93;:::i;:::-;40871:2;40866:3;40862:12;40855:19;;40514:366;;;:::o;40886:419::-;41052:4;41090:2;41079:9;41075:18;41067:26;;41139:9;41133:4;41129:20;41125:1;41114:9;41110:17;41103:47;41167:131;41293:4;41167:131;:::i;:::-;41159:139;;40886:419;;;:::o;41311:176::-;41451:28;41447:1;41439:6;41435:14;41428:52;41311:176;:::o;41493:366::-;41635:3;41656:67;41720:2;41715:3;41656:67;:::i;:::-;41649:74;;41732:93;41821:3;41732:93;:::i;:::-;41850:2;41845:3;41841:12;41834:19;;41493:366;;;:::o;41865:419::-;42031:4;42069:2;42058:9;42054:18;42046:26;;42118:9;42112:4;42108:20;42104:1;42093:9;42089:17;42082:47;42146:131;42272:4;42146:131;:::i;:::-;42138:139;;41865:419;;;:::o;42290:176::-;42430:28;42426:1;42418:6;42414:14;42407:52;42290:176;:::o;42472:366::-;42614:3;42635:67;42699:2;42694:3;42635:67;:::i;:::-;42628:74;;42711:93;42800:3;42711:93;:::i;:::-;42829:2;42824:3;42820:12;42813:19;;42472:366;;;:::o;42844:419::-;43010:4;43048:2;43037:9;43033:18;43025:26;;43097:9;43091:4;43087:20;43083:1;43072:9;43068:17;43061:47;43125:131;43251:4;43125:131;:::i;:::-;43117:139;;42844:419;;;:::o;43269:180::-;43317:77;43314:1;43307:88;43414:4;43411:1;43404:15;43438:4;43435:1;43428:15;43455:167;43595:19;43591:1;43583:6;43579:14;43572:43;43455:167;:::o;43628:366::-;43770:3;43791:67;43855:2;43850:3;43791:67;:::i;:::-;43784:74;;43867:93;43956:3;43867:93;:::i;:::-;43985:2;43980:3;43976:12;43969:19;;43628:366;;;:::o;44000:419::-;44166:4;44204:2;44193:9;44189:18;44181:26;;44253:9;44247:4;44243:20;44239:1;44228:9;44224:17;44217:47;44281:131;44407:4;44281:131;:::i;:::-;44273:139;;44000:419;;;:::o;44425:177::-;44565:29;44561:1;44553:6;44549:14;44542:53;44425:177;:::o;44608:366::-;44750:3;44771:67;44835:2;44830:3;44771:67;:::i;:::-;44764:74;;44847:93;44936:3;44847:93;:::i;:::-;44965:2;44960:3;44956:12;44949:19;;44608:366;;;:::o;44980:419::-;45146:4;45184:2;45173:9;45169:18;45161:26;;45233:9;45227:4;45223:20;45219:1;45208:9;45204:17;45197:47;45261:131;45387:4;45261:131;:::i;:::-;45253:139;;44980:419;;;:::o;45405:176::-;45545:28;45541:1;45533:6;45529:14;45522:52;45405:176;:::o;45587:366::-;45729:3;45750:67;45814:2;45809:3;45750:67;:::i;:::-;45743:74;;45826:93;45915:3;45826:93;:::i;:::-;45944:2;45939:3;45935:12;45928:19;;45587:366;;;:::o;45959:419::-;46125:4;46163:2;46152:9;46148:18;46140:26;;46212:9;46206:4;46202:20;46198:1;46187:9;46183:17;46176:47;46240:131;46366:4;46240:131;:::i;:::-;46232:139;;45959:419;;;:::o;46384:180::-;46432:77;46429:1;46422:88;46529:4;46526:1;46519:15;46553:4;46550:1;46543:15;46570:170;46600:1;46617:18;46633:1;46617:18;:::i;:::-;46612:23;;46649:18;46665:1;46649:18;:::i;:::-;46644:23;;46686:1;46676:35;;46691:18;;:::i;:::-;46676:35;46732:1;46729;46725:9;46720:14;;46570:170;;;;:::o;46746:191::-;46784:4;46804:18;46820:1;46804:18;:::i;:::-;46799:23;;46836:18;46852:1;46836:18;:::i;:::-;46831:23;;46878:1;46875;46871:9;46863:17;;46902:4;46896;46893:14;46890:40;;;46910:18;;:::i;:::-;46890:40;46746:191;;;;:::o;46943:225::-;47083:34;47079:1;47071:6;47067:14;47060:58;47152:8;47147:2;47139:6;47135:15;47128:33;46943:225;:::o;47174:366::-;47316:3;47337:67;47401:2;47396:3;47337:67;:::i;:::-;47330:74;;47413:93;47502:3;47413:93;:::i;:::-;47531:2;47526:3;47522:12;47515:19;;47174:366;;;:::o;47546:419::-;47712:4;47750:2;47739:9;47735:18;47727:26;;47799:9;47793:4;47789:20;47785:1;47774:9;47770:17;47763:47;47827:131;47953:4;47827:131;:::i;:::-;47819:139;;47546:419;;;:::o;47971:179::-;48111:31;48107:1;48099:6;48095:14;48088:55;47971:179;:::o;48156:366::-;48298:3;48319:67;48383:2;48378:3;48319:67;:::i;:::-;48312:74;;48395:93;48484:3;48395:93;:::i;:::-;48513:2;48508:3;48504:12;48497:19;;48156:366;;;:::o;48528:419::-;48694:4;48732:2;48721:9;48717:18;48709:26;;48781:9;48775:4;48771:20;48767:1;48756:9;48752:17;48745:47;48809:131;48935:4;48809:131;:::i;:::-;48801:139;;48528:419;;;:::o;48953:173::-;49093:25;49089:1;49081:6;49077:14;49070:49;48953:173;:::o;49132:366::-;49274:3;49295:67;49359:2;49354:3;49295:67;:::i;:::-;49288:74;;49371:93;49460:3;49371:93;:::i;:::-;49489:2;49484:3;49480:12;49473:19;;49132:366;;;:::o;49504:419::-;49670:4;49708:2;49697:9;49693:18;49685:26;;49757:9;49751:4;49747:20;49743:1;49732:9;49728:17;49721:47;49785:131;49911:4;49785:131;:::i;:::-;49777:139;;49504:419;;;:::o;49929:229::-;50069:34;50065:1;50057:6;50053:14;50046:58;50138:12;50133:2;50125:6;50121:15;50114:37;49929:229;:::o;50164:366::-;50306:3;50327:67;50391:2;50386:3;50327:67;:::i;:::-;50320:74;;50403:93;50492:3;50403:93;:::i;:::-;50521:2;50516:3;50512:12;50505:19;;50164:366;;;:::o;50536:419::-;50702:4;50740:2;50729:9;50725:18;50717:26;;50789:9;50783:4;50779:20;50775:1;50764:9;50760:17;50753:47;50817:131;50943:4;50817:131;:::i;:::-;50809:139;;50536:419;;;:::o;50961:174::-;51101:26;51097:1;51089:6;51085:14;51078:50;50961:174;:::o;51141:366::-;51283:3;51304:67;51368:2;51363:3;51304:67;:::i;:::-;51297:74;;51380:93;51469:3;51380:93;:::i;:::-;51498:2;51493:3;51489:12;51482:19;;51141:366;;;:::o;51513:419::-;51679:4;51717:2;51706:9;51702:18;51694:26;;51766:9;51760:4;51756:20;51752:1;51741:9;51737:17;51730:47;51794:131;51920:4;51794:131;:::i;:::-;51786:139;;51513:419;;;:::o;51938:175::-;52078:27;52074:1;52066:6;52062:14;52055:51;51938:175;:::o;52119:366::-;52261:3;52282:67;52346:2;52341:3;52282:67;:::i;:::-;52275:74;;52358:93;52447:3;52358:93;:::i;:::-;52476:2;52471:3;52467:12;52460:19;;52119:366;;;:::o;52491:419::-;52657:4;52695:2;52684:9;52680:18;52672:26;;52744:9;52738:4;52734:20;52730:1;52719:9;52715:17;52708:47;52772:131;52898:4;52772:131;:::i;:::-;52764:139;;52491:419;;;:::o;52916:181::-;53056:33;53052:1;53044:6;53040:14;53033:57;52916:181;:::o;53103:366::-;53245:3;53266:67;53330:2;53325:3;53266:67;:::i;:::-;53259:74;;53342:93;53431:3;53342:93;:::i;:::-;53460:2;53455:3;53451:12;53444:19;;53103:366;;;:::o;53475:419::-;53641:4;53679:2;53668:9;53664:18;53656:26;;53728:9;53722:4;53718:20;53714:1;53703:9;53699:17;53692:47;53756:131;53882:4;53756:131;:::i;:::-;53748:139;;53475:419;;;:::o;53900:174::-;54040:26;54036:1;54028:6;54024:14;54017:50;53900:174;:::o;54080:366::-;54222:3;54243:67;54307:2;54302:3;54243:67;:::i;:::-;54236:74;;54319:93;54408:3;54319:93;:::i;:::-;54437:2;54432:3;54428:12;54421:19;;54080:366;;;:::o;54452:419::-;54618:4;54656:2;54645:9;54641:18;54633:26;;54705:9;54699:4;54695:20;54691:1;54680:9;54676:17;54669:47;54733:131;54859:4;54733:131;:::i;:::-;54725:139;;54452:419;;;:::o;54877:173::-;55017:25;55013:1;55005:6;55001:14;54994:49;54877:173;:::o;55056:366::-;55198:3;55219:67;55283:2;55278:3;55219:67;:::i;:::-;55212:74;;55295:93;55384:3;55295:93;:::i;:::-;55413:2;55408:3;55404:12;55397:19;;55056:366;;;:::o;55428:419::-;55594:4;55632:2;55621:9;55617:18;55609:26;;55681:9;55675:4;55671:20;55667:1;55656:9;55652:17;55645:47;55709:131;55835:4;55709:131;:::i;:::-;55701:139;;55428:419;;;:::o;55853:179::-;55993:31;55989:1;55981:6;55977:14;55970:55;55853:179;:::o;56038:366::-;56180:3;56201:67;56265:2;56260:3;56201:67;:::i;:::-;56194:74;;56277:93;56366:3;56277:93;:::i;:::-;56395:2;56390:3;56386:12;56379:19;;56038:366;;;:::o;56410:419::-;56576:4;56614:2;56603:9;56599:18;56591:26;;56663:9;56657:4;56653:20;56649:1;56638:9;56634:17;56627:47;56691:131;56817:4;56691:131;:::i;:::-;56683:139;;56410:419;;;:::o;56835:172::-;56975:24;56971:1;56963:6;56959:14;56952:48;56835:172;:::o;57013:366::-;57155:3;57176:67;57240:2;57235:3;57176:67;:::i;:::-;57169:74;;57252:93;57341:3;57252:93;:::i;:::-;57370:2;57365:3;57361:12;57354:19;;57013:366;;;:::o;57385:419::-;57551:4;57589:2;57578:9;57574:18;57566:26;;57638:9;57632:4;57628:20;57624:1;57613:9;57609:17;57602:47;57666:131;57792:4;57666:131;:::i;:::-;57658:139;;57385:419;;;:::o;57810:174::-;57950:26;57946:1;57938:6;57934:14;57927:50;57810:174;:::o;57990:366::-;58132:3;58153:67;58217:2;58212:3;58153:67;:::i;:::-;58146:74;;58229:93;58318:3;58229:93;:::i;:::-;58347:2;58342:3;58338:12;58331:19;;57990:366;;;:::o;58362:419::-;58528:4;58566:2;58555:9;58551:18;58543:26;;58615:9;58609:4;58605:20;58601:1;58590:9;58586:17;58579:47;58643:131;58769:4;58643:131;:::i;:::-;58635:139;;58362:419;;;:::o;58787:410::-;58827:7;58850:20;58868:1;58850:20;:::i;:::-;58845:25;;58884:20;58902:1;58884:20;:::i;:::-;58879:25;;58939:1;58936;58932:9;58961:30;58979:11;58961:30;:::i;:::-;58950:41;;59140:1;59131:7;59127:15;59124:1;59121:22;59101:1;59094:9;59074:83;59051:139;;59170:18;;:::i;:::-;59051:139;58835:362;58787:410;;;;:::o;59203:143::-;59260:5;59291:6;59285:13;59276:22;;59307:33;59334:5;59307:33;:::i;:::-;59203:143;;;;:::o;59352:351::-;59422:6;59471:2;59459:9;59450:7;59446:23;59442:32;59439:119;;;59477:79;;:::i;:::-;59439:119;59597:1;59622:64;59678:7;59669:6;59658:9;59654:22;59622:64;:::i;:::-;59612:74;;59568:128;59352:351;;;;:::o;59709:233::-;59748:3;59771:24;59789:5;59771:24;:::i;:::-;59762:33;;59817:66;59810:5;59807:77;59804:103;;59887:18;;:::i;:::-;59804:103;59934:1;59927:5;59923:13;59916:20;;59709:233;;;:::o;59948:185::-;59988:1;60005:20;60023:1;60005:20;:::i;:::-;60000:25;;60039:20;60057:1;60039:20;:::i;:::-;60034:25;;60078:1;60068:35;;60083:18;;:::i;:::-;60068:35;60125:1;60122;60118:9;60113:14;;59948:185;;;;:::o;60139:164::-;60279:16;60275:1;60267:6;60263:14;60256:40;60139:164;:::o;60309:366::-;60451:3;60472:67;60536:2;60531:3;60472:67;:::i;:::-;60465:74;;60548:93;60637:3;60548:93;:::i;:::-;60666:2;60661:3;60657:12;60650:19;;60309:366;;;:::o;60681:419::-;60847:4;60885:2;60874:9;60870:18;60862:26;;60934:9;60928:4;60924:20;60920:1;60909:9;60905:17;60898:47;60962:131;61088:4;60962:131;:::i;:::-;60954:139;;60681:419;;;:::o;61106:167::-;61246:19;61242:1;61234:6;61230:14;61223:43;61106:167;:::o;61279:366::-;61421:3;61442:67;61506:2;61501:3;61442:67;:::i;:::-;61435:74;;61518:93;61607:3;61518:93;:::i;:::-;61636:2;61631:3;61627:12;61620:19;;61279:366;;;:::o;61651:419::-;61817:4;61855:2;61844:9;61840:18;61832:26;;61904:9;61898:4;61894:20;61890:1;61879:9;61875:17;61868:47;61932:131;62058:4;61932:131;:::i;:::-;61924:139;;61651:419;;;:::o"},"methodIdentifiers":{"AMB()":"d69f9d61","DOMAIN()":"52a9674b","MIRROR_DOMAIN()":"14168416","ROOT_MANAGER()":"5f61e3ec","acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","mirrorConnector()":"cc394283","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","processMessageFromRoot(address,address,bytes,uint256,(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]),bytes,bytes))":"6e2edb4e","processed(bytes32)":"c1f0808a","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","sendMessage(bytes,bytes)":"48e6fa23","setGasCap(uint256)":"7850b020","setMirrorConnector(address)":"5bd11efc","stateCommitmentChain()":"0f329ef8","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_mirrorDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_amb\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rootManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stateCommitmentChain\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Connector__processMessage_notUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__index_indexMoreThan32Bytes\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slice\",\"type\":\"uint256\"}],\"name\":\"TypedMemView__index_overrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updated\",\"type\":\"uint256\"}],\"name\":\"GasCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"MirrorConnectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"mirrorDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"amb\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rootManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mirrorConnector\",\"type\":\"address\"}],\"name\":\"NewConnector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIRROR_DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mirrorConnector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_messageNonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"stateRootBatchHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct ChainInclusionProof\",\"name\":\"stateRootProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"stateTrieWitness\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"storageTrieWitness\",\"type\":\"bytes\"}],\"internalType\":\"struct L2MessageInclusionProof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"processMessageFromRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"processed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_encodedData\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"name\":\"setGasCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"}],\"name\":\"setMirrorConnector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stateCommitmentChain\",\"outputs\":[{\"internalType\":\"contract IStateCommitmentChain\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"processMessage(bytes)\":{\"details\":\"This is called by AMBs to process messages originating from mirror connector\"},\"processMessageFromRoot(address,address,bytes,uint256,(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]),bytes,bytes))\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L165\"},\"sendMessage(bytes,bytes)\":{\"details\":\"This is called by the root manager *only* on mainnet to propagate the aggregate root\"}},\"version\":1},\"userdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"notice\":\"Emitted when admin updates the gas cap\"},\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"AMB()\":{\"notice\":\"Address of the AMB on this domain.\"},\"DOMAIN()\":{\"notice\":\"The domain of this Messaging (i.e. Connector) contract.\"},\"MIRROR_DOMAIN()\":{\"notice\":\"The domain of the corresponding messaging (i.e. Connector) contract.\"},\"ROOT_MANAGER()\":{\"notice\":\"RootManager contract address.\"},\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"mirrorConnector()\":{\"notice\":\"Connector on L2 for L1 connectors, and vice versa.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"processMessage(bytes)\":{\"notice\":\"Processes a message received by an AMB\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"},\"sendMessage(bytes,bytes)\":{\"notice\":\"Sends a message over the amb\"},\"setMirrorConnector(address)\":{\"notice\":\"Sets the address of the l2Connector for this domain\"},\"verifySender(address)\":{\"notice\":\"Checks the cross domain sender for a given address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/OptimismHubConnector.sol\":\"OptimismHubConnector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/Connector.sol\":{\"keccak256\":\"0x08d4077a1b5caf9f46491206064bb24bee467dd741b42fed3d30a608eea83368\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://457a269ab150779b4605bc9612676076152857069beb0428d62f44408ac84be4\",\"dweb:/ipfs/QmeSkwvuyUEqUnQgtJe9kr9B7ukRG2zGeKDJ9Xe7JJMbNr\"]},\"contracts/messaging/connectors/GasCap.sol\":{\"keccak256\":\"0xb8b52a3372f08490c918d1f490ad80764d54bd62d1638e4d17a5b552efe6587d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6bb20af8d934307c6fa183bc20e11bad0767174a3a305013d2a61d71443f47a5\",\"dweb:/ipfs/QmQMDihNR1ZLK1jX4Ev5NZttBoYhah8ZaZxGZdREZaWEkK\"]},\"contracts/messaging/connectors/HubConnector.sol\":{\"keccak256\":\"0xc35621419ca872ed0550b0943a577b39942f3d2c9b54de008fee382d5ad290e4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b999c13a2d438bb5cb81a3e4e308e8fa0c1c7f3505ac48415552e6df66cafa78\",\"dweb:/ipfs/QmSY4h4sQCXgxbmJp6msrmm9KsHZHeLBg8NrHzWsD2dMiq\"]},\"contracts/messaging/connectors/optimism/BaseOptimism.sol\":{\"keccak256\":\"0x87034df88ba7e4d767c451ff2d0180f8eee25f502682153af7a018e280eab8e3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3e8e4944ea00bc2f6276ec6d6cb8329c85b42cb44b3ece45ebec35d16d37676f\",\"dweb:/ipfs/QmV1uDysbrcXKUWHbVZT36YE5tSR6NjvbSdsHfnNFj7Hj3\"]},\"contracts/messaging/connectors/optimism/OptimismHubConnector.sol\":{\"keccak256\":\"0xb18457d946271fda78aadfe30804e73e0eda62d596a63259595922e9186de6d6\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://cb0bbbd2720108bde0b6b7000dd44d6eb71c047042d084f118f0857e91e8b3b9\",\"dweb:/ipfs/QmeNkogy61BSvzBciAUYVpVAJqckk6GnysQAZi3bPF8Vzn\"]},\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]},\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":{\"keccak256\":\"0xead186b4bbb39d904ec1ecdc418893465831dba9a1ed088c17e673df6df9198a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://14dc9e9574835fa89215611fb15748e7b473f3387460dea27aa9989f75c6387a\",\"dweb:/ipfs/Qman27AK3QYajEC4t4vko3MDXeTxW6hkMTPQCsYtt7iRvA\"]},\"contracts/messaging/connectors/optimism/lib/OVMCodec.sol\":{\"keccak256\":\"0x777f550172e00112a8fcdde5a759c6d86ef71ca46d78a7850d6cac217a156b2b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://376a6ca2701939dffa697702958163f53b1812a133adab6411a87f9a72f83fbe\",\"dweb:/ipfs/Qmdh8XUjsma2tRkouK2JUgEx7dZdLusdpyjaVwryCZ8rmA\"]},\"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol\":{\"keccak256\":\"0xec0c20ed39e122e0f97a551b28ff9c845e012901bee3eef8d2cebb486007de03\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://234feae5659dea777b5fedaa4c44f878cf8aa3f16cd05f363fb7cb329b8f4fcd\",\"dweb:/ipfs/QmW2184MuxZRuuUYpomB5LX5qAVtJR5ovWRC7ydKGNGRxj\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]},\"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol\":{\"keccak256\":\"0x83dec50ac7d2349f24462c9f2d1928f3a42503ea7e8463757b843d497ea64959\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af423de7526168c1772b50272033bab2b8f7a6070c25406bd5f975645647b6fd\",\"dweb:/ipfs/QmbZ4vGum5pw1yhjXDcyV9gM6yXPJmtPuhi7JATu9UAoMF\"]},\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/messaging/interfaces/IRootManager.sol\":{\"keccak256\":\"0xa895dfaa4baad37a636e7e7e7da72a0a4badfd2d3d8256f975e5101cd5a98236\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://28e302637247d37c821454f4238c9b4896d9637fdda08a3393ac625d80e97e44\",\"dweb:/ipfs/QmPvYJZUq1dWQLLRRkH6abBLpaw2rG14qYvAegx6f5jN8B\"]},\"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol\":{\"keccak256\":\"0x76577b06af1692d10b9a41bd0beb4edf11f3a00cfb2895df416aaf872781788c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7e6a08ed3ed65cb8dd5225e5810fc05161bfc02619110cb7207e44f90b83300d\",\"dweb:/ipfs/QmSHXhgkXt1dDGrNpnyFC1Y8ZhKWZ2kmfpmx53ZVeAiY75\"]},\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":{\"keccak256\":\"0xbce6aaa568441bd8ad60f2b5f1ad8d9e3c61cbc91ce4405d7a390980920f66f3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7cdea925bfc43e25eab526074b1b5454b0a44676e88cb7834707e8b273aff820\",\"dweb:/ipfs/Qmd2WyxCPaguNGKfm7sNxfQgxEU8o7vvR6Fe4pK7GZoUUe\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]},\"contracts/shared/libraries/TypedMemView.sol\":{\"keccak256\":\"0x17e335daf53b9cd26f13d480b2f1e4f6babf202e39a14089d97b23b1d5d737ff\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://694cae783e2f6e85edbc1fff9bd6a47d9cf7023cc5f69754cdd0c85953a762c3\",\"dweb:/ipfs/QmUc41N4NTs4Tvhzy6ULkp7DSH8b7D5CcadNEBKBHgPPBc\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/BytesUtils.sol":{"BytesUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220481471e18dd1d8248fcf41397e7d17c8338cbc3b6ebdfafe4eb6789e7db14ccf64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE EQ PUSH18 0xE18DD1D8248FCF41397E7D17C8338CBC3B6E 0xBD STATICCALL INVALID 0x4E 0xB6 PUSH25 0x9E7DB14CCF64736F6C63430008110033000000000000000000 ","sourceMap":"249:4058:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220481471e18dd1d8248fcf41397e7d17c8338cbc3b6ebdfafe4eb6789e7db14ccf64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE EQ PUSH18 0xE18DD1D8248FCF41397E7D17C8338CBC3B6E 0xBD STATICCALL INVALID 0x4E 0xB6 PUSH25 0x9E7DB14CCF64736F6C63430008110033000000000000000000 ","sourceMap":"249:4058:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/utils/Lib_BytesUtils.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BytesUtils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":\"BytesUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol":{"MerkleTrie":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ea10ec20b79eeb56b234c54a04b2daab0299cc5a916347b174c4c9e18179c5164736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 LOG1 0xE 0xC2 SIGNEXTEND PUSH26 0xEEB56B234C54A04B2DAAB0299CC5A916347B174C4C9E18179C51 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"359:10348:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208ea10ec20b79eeb56b234c54a04b2daab0299cc5a916347b174c4c9e18179c5164736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 LOG1 0xE 0xC2 SIGNEXTEND PUSH26 0xEEB56B234C54A04B2DAAB0299CC5A916347B174C4C9E18179C51 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"359:10348:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_MerkleTrie.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MerkleTrie\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":\"MerkleTrie\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]},\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":{\"keccak256\":\"0xead186b4bbb39d904ec1ecdc418893465831dba9a1ed088c17e673df6df9198a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://14dc9e9574835fa89215611fb15748e7b473f3387460dea27aa9989f75c6387a\",\"dweb:/ipfs/Qman27AK3QYajEC4t4vko3MDXeTxW6hkMTPQCsYtt7iRvA\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/OVMCodec.sol":{"OVMCodec":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203299f61da9006677cfc8a5a4371845b0de1ce5e16153cb14fa48d9ab2e4adbe764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP10 0xF6 SAR 0xA9 STOP PUSH7 0x77CFC8A5A43718 GASLIMIT 0xB0 0xDE SHR 0xE5 0xE1 PUSH2 0x53CB EQ STATICCALL BASEFEE 0xD9 0xAB 0x2E 0x4A 0xDB 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"311:794:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203299f61da9006677cfc8a5a4371845b0de1ce5e16153cb14fa48d9ab2e4adbe764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP10 0xF6 SAR 0xA9 STOP PUSH7 0x77CFC8A5A43718 GASLIMIT 0xB0 0xDE SHR 0xE5 0xE1 PUSH2 0x53CB EQ STATICCALL BASEFEE 0xD9 0xAB 0x2E 0x4A 0xDB 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"311:794:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"OVMCodec\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/OVMCodec.sol\":\"OVMCodec\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/OVMCodec.sol\":{\"keccak256\":\"0x777f550172e00112a8fcdde5a759c6d86ef71ca46d78a7850d6cac217a156b2b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://376a6ca2701939dffa697702958163f53b1812a133adab6411a87f9a72f83fbe\",\"dweb:/ipfs/Qmdh8XUjsma2tRkouK2JUgEx7dZdLusdpyjaVwryCZ8rmA\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol":{"PredeployAddresses":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffe4a8c7b0569d552816f1d4b7028c0d94d5335c852333778a4d6c8374427ce264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE4 0xA8 0xC7 0xB0 JUMP SWAP14 SSTORE 0x28 AND CALL 0xD4 0xB7 MUL DUP13 0xD SWAP5 0xD5 CALLER 0x5C DUP6 0x23 CALLER PUSH24 0x8A4D6C8374427CE264736F6C634300081100330000000000 ","sourceMap":"269:1068:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffe4a8c7b0569d552816f1d4b7028c0d94d5335c852333778a4d6c8374427ce264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE4 0xA8 0xC7 0xB0 JUMP SWAP14 SSTORE 0x28 AND CALL 0xD4 0xB7 MUL DUP13 0xD SWAP5 0xD5 CALLER 0x5C DUP6 0x23 CALLER PUSH24 0x8A4D6C8374427CE264736F6C634300081100330000000000 ","sourceMap":"269:1068:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PredeployAddresses\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol\":\"PredeployAddresses\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol\":{\"keccak256\":\"0xec0c20ed39e122e0f97a551b28ff9c845e012901bee3eef8d2cebb486007de03\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://234feae5659dea777b5fedaa4c44f878cf8aa3f16cd05f363fb7cb329b8f4fcd\",\"dweb:/ipfs/QmW2184MuxZRuuUYpomB5LX5qAVtJR5ovWRC7ydKGNGRxj\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/RLPReader.sol":{"RLPReader":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af4091143e29251b2721ab34e9e0ae3c6273ac7b42d5f745c7c8441721a2776f64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF BLOCKHASH SWAP2 EQ RETURNDATACOPY 0x29 0x25 SHL 0x27 0x21 0xAB CALLVALUE 0xE9 0xE0 0xAE EXTCODECOPY PUSH3 0x73AC7B TIMESTAMP 0xD5 0xF7 GASLIMIT 0xC7 0xC8 DIFFICULTY OR 0x21 LOG2 PUSH24 0x6F64736F6C63430008110033000000000000000000000000 ","sourceMap":"242:10035:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af4091143e29251b2721ab34e9e0ae3c6273ac7b42d5f745c7c8441721a2776f64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF BLOCKHASH SWAP2 EQ RETURNDATACOPY 0x29 0x25 SHL 0x27 0x21 0xAB CALLVALUE 0xE9 0xE0 0xAE EXTCODECOPY PUSH3 0x73AC7B TIMESTAMP 0xD5 0xF7 GASLIMIT 0xC7 0xC8 DIFFICULTY OR 0x21 LOG2 PUSH24 0x6F64736F6C63430008110033000000000000000000000000 ","sourceMap":"242:10035:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/rlp/Lib_RLPReader.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"RLPReader\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":\"RLPReader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol":{"SecureMerkleTrie":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1e471e2f0bebd6494b0fc359386521c75ef1e10a857639ca874d0d1f574a3f064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE4 PUSH18 0xE2F0BEBD6494B0FC359386521C75EF1E10A8 JUMPI PUSH4 0x9CA874D0 0xD1 CREATE2 PUSH21 0xA3F064736F6C634300081100330000000000000000 ","sourceMap":"328:2027:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1e471e2f0bebd6494b0fc359386521c75ef1e10a857639ca874d0d1f574a3f064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xE4 PUSH18 0xE2F0BEBD6494B0FC359386521C75EF1E10A8 JUMPI PUSH4 0x9CA874D0 0xD1 CREATE2 PUSH21 0xA3F064736F6C634300081100330000000000000000 ","sourceMap":"328:2027:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_SecureMerkleTrie.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SecureMerkleTrie\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol\":\"SecureMerkleTrie\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]},\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":{\"keccak256\":\"0xead186b4bbb39d904ec1ecdc418893465831dba9a1ed088c17e673df6df9198a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://14dc9e9574835fa89215611fb15748e7b473f3387460dea27aa9989f75c6387a\",\"dweb:/ipfs/Qman27AK3QYajEC4t4vko3MDXeTxW6hkMTPQCsYtt7iRvA\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]},\"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol\":{\"keccak256\":\"0x83dec50ac7d2349f24462c9f2d1928f3a42503ea7e8463757b843d497ea64959\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af423de7526168c1772b50272033bab2b8f7a6070c25406bd5f975645647b6fd\",\"dweb:/ipfs/QmbZ4vGum5pw1yhjXDcyV9gM6yXPJmtPuhi7JATu9UAoMF\"]}},\"version\":1}"}},"contracts/messaging/interfaces/IConnector.sol":{"IConnector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"proposed_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposed_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This uses the nomad format to ensure nomad can be added in as it comes back online. Flow from transfer from polygon to optimism: 1. User calls `xcall` with destination specified 2. This will swap in to the bridge assets 3. The swapped assets will get burned 4. The Connext contract will call `dispatch` on the messaging contract to add the transfer    to the root 5. [At some time interval] Relayers call `send` to send the current root from polygon to    mainnet. This is done on all \\\"spoke\\\" domains. 6. [At some time interval] Relayers call `propagate` [better name] on mainnet, this generates a new merkle    root from all of the AMBs    - This function must be able to read root data from all AMBs and aggregate them into a single merkle      tree root    - Will send the mixed root from all chains back through the respective AMBs to all other chains 7. AMB will call `update` to update the latest root on the messaging contract on spoke domains 8. [At any point] Relayers can call `proveAndProcess` to prove inclusion of dispatched message, and call    process on the `Connext` contract 9. Takes minted bridge tokens and credits the LP AMB requirements: - Access `msg.sender` both from mainnet -> spoke and vice versa - Ability to read *our root* from the AMB AMBs: - PoS bridge from polygon - arbitrum bridge - optimism bridge - gnosis chain - bsc (use multichain for messaging)\",\"events\":{\"MessageProcessed(bytes,address)\":{\"params\":{\"caller\":\"Who called the function\",\"data\":\"The contents of the message\"}},\"MessageSent(bytes,bytes,address)\":{\"params\":{\"caller\":\"Who called the function (sent the message)\",\"data\":\"The contents of the message\",\"encodedData\":\"Data used to send the message; specific to connector\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"owner_\":\"The address of the owner.\"}},\"proposeNewOwner(address)\":{\"params\":{\"newlyProposed\":\"The proposed new owner of the contract\"}},\"proposed()\":{\"returns\":{\"proposed_\":\"The address of the proposed.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"owner()\":{\"notice\":\"Get the address of the owner\"},\"proposeNewOwner(address)\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"proposed()\":{\"notice\":\"Get the address of the proposed owner\"}},\"notice\":\"This interface is what the Connext contract will send and receive messages through. The messaging layer should conform to this interface, and should be interchangeable (i.e. could be Nomad or a generic AMB under the hood).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/IConnector.sol\":\"IConnector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/interfaces/IRootManager.sol":{"IRootManager":{"abi":[{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"},{"internalType":"bytes32","name":"_outbound","type":"bytes32"}],"name":"aggregate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_connectors","type":"address[]"},{"internalType":"uint256[]","name":"_fees","type":"uint256[]"},{"internalType":"bytes[]","name":"_encodedData","type":"bytes[]"}],"name":"propagate","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregate(uint32,bytes32)":"8e7d93fa","propagate(address[],uint256[],bytes[])":"412e12db"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_domain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_outbound\",\"type\":\"bytes32\"}],\"name\":\"aggregate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_connectors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_fees\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_encodedData\",\"type\":\"bytes[]\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregate(uint32,bytes32)\":{\"details\":\"This must read information for the root from the registered AMBs\"},\"propagate(address[],uint256[],bytes[])\":{\"details\":\"This must read information for the root from the registered AMBs.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregate(uint32,bytes32)\":{\"notice\":\"Called by the connectors for various domains on the hub to aggregate their latest inbound root.\"},\"propagate(address[],uint256[],bytes[])\":{\"notice\":\"This is called by relayers to generate + send the mixed root from mainnet via AMB to spoke domains.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/IRootManager.sol\":\"IRootManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/IRootManager.sol\":{\"keccak256\":\"0xa895dfaa4baad37a636e7e7e7da72a0a4badfd2d3d8256f975e5101cd5a98236\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://28e302637247d37c821454f4238c9b4896d9637fdda08a3393ac625d80e97e44\",\"dweb:/ipfs/QmPvYJZUq1dWQLLRRkH6abBLpaw2rG14qYvAegx6f5jN8B\"]}},\"version\":1}"}},"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol":{"IStateCommitmentChain":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_batchIndex","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"_batchRoot","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"_batchSize","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_prevTotalElements","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"StateBatchAppended","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_batchIndex","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"_batchRoot","type":"bytes32"}],"name":"StateBatchDeleted","type":"event"},{"inputs":[{"internalType":"bytes32[]","name":"_batch","type":"bytes32[]"},{"internalType":"uint256","name":"_shouldStartAtElement","type":"uint256"}],"name":"appendStateBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"_batchHeader","type":"tuple"}],"name":"deleteStateBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getLastSequencerTimestamp","outputs":[{"internalType":"uint256","name":"_lastSequencerTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalBatches","outputs":[{"internalType":"uint256","name":"_totalBatches","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalElements","outputs":[{"internalType":"uint256","name":"_totalElements","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"_batchHeader","type":"tuple"}],"name":"insideFraudProofWindow","outputs":[{"internalType":"bool","name":"_inside","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_element","type":"bytes32"},{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"_batchHeader","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"siblings","type":"bytes32[]"}],"internalType":"struct ChainInclusionProof","name":"_proof","type":"tuple"}],"name":"verifyStateCommitment","outputs":[{"internalType":"bool","name":"_verified","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"appendStateBatch(bytes32[],uint256)":"8ca5cbb9","deleteStateBatch((uint256,bytes32,uint256,uint256,bytes))":"b8e189ac","getLastSequencerTimestamp()":"7ad168a0","getTotalBatches()":"e561dddc","getTotalElements()":"7aa63a86","insideFraudProofWindow((uint256,bytes32,uint256,uint256,bytes))":"9418bddd","verifyStateCommitment(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]))":"4d69ee57"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_batchIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_batchRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_batchSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prevTotalElements\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"StateBatchAppended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_batchIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_batchRoot\",\"type\":\"bytes32\"}],\"name\":\"StateBatchDeleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_batch\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_shouldStartAtElement\",\"type\":\"uint256\"}],\"name\":\"appendStateBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"_batchHeader\",\"type\":\"tuple\"}],\"name\":\"deleteStateBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastSequencerTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastSequencerTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBatches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalBatches\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalElements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalElements\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"_batchHeader\",\"type\":\"tuple\"}],\"name\":\"insideFraudProofWindow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_inside\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_element\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"_batchHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct ChainInclusionProof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"verifyStateCommitment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/IStateCommitmentChain.sol\",\"kind\":\"dev\",\"methods\":{\"appendStateBatch(bytes32[],uint256)\":{\"params\":{\"_batch\":\"Batch of state roots.\",\"_shouldStartAtElement\":\"Index of the element at which this batch should start.\"}},\"deleteStateBatch((uint256,bytes32,uint256,uint256,bytes))\":{\"params\":{\"_batchHeader\":\"Header of the batch to start deleting from.\"}},\"getLastSequencerTimestamp()\":{\"returns\":{\"_lastSequencerTimestamp\":\"Last sequencer batch timestamp.\"}},\"getTotalBatches()\":{\"returns\":{\"_totalBatches\":\"Total submitted batches.\"}},\"getTotalElements()\":{\"returns\":{\"_totalElements\":\"Total submitted elements.\"}},\"insideFraudProofWindow((uint256,bytes32,uint256,uint256,bytes))\":{\"params\":{\"_batchHeader\":\"Header of the batch to check.\"},\"returns\":{\"_inside\":\"Whether or not the batch is inside the fraud proof window.\"}},\"verifyStateCommitment(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]))\":{\"params\":{\"_batchHeader\":\"Header of the batch in which the element was included.\",\"_element\":\"Hash of the element to verify a proof for.\",\"_proof\":\"Merkle inclusion proof for the element.\"}}},\"title\":\"IStateCommitmentChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"appendStateBatch(bytes32[],uint256)\":{\"notice\":\"Appends a batch of state roots to the chain.\"},\"deleteStateBatch((uint256,bytes32,uint256,uint256,bytes))\":{\"notice\":\"Deletes all state roots after (and including) a given batch.\"},\"getLastSequencerTimestamp()\":{\"notice\":\"Retrieves the timestamp of the last batch submitted by the sequencer.\"},\"getTotalBatches()\":{\"notice\":\"Retrieves the total number of batches submitted.\"},\"getTotalElements()\":{\"notice\":\"Retrieves the total number of elements submitted.\"},\"insideFraudProofWindow((uint256,bytes32,uint256,uint256,bytes))\":{\"notice\":\"Checks whether a given batch is still inside its fraud proof window.\"},\"verifyStateCommitment(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]))\":{\"notice\":\"Verifies a batch inclusion proof.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol\":\"IStateCommitmentChain\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol\":{\"keccak256\":\"0x76577b06af1692d10b9a41bd0beb4edf11f3a00cfb2895df416aaf872781788c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7e6a08ed3ed65cb8dd5225e5810fc05161bfc02619110cb7207e44f90b83300d\",\"dweb:/ipfs/QmSHXhgkXt1dDGrNpnyFC1Y8ZhKWZ2kmfpmx53ZVeAiY75\"]}},\"version\":1}"}},"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol":{"OptimismAmb":{"abi":[{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"}],"name":"sendMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"xDomainMessageSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"sendMessage(address,bytes,uint32)":"3dbb202b","xDomainMessageSender()":"6e296e45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The optimism bridge shares both of these functions, but it is important to note that when going from L2 -> L1, the message cannot be processed by the AMB until the challenge period elapses. HOWEVER, before the challenge elapses, you can read the state of the L2 as it is placed on mainnet. By processing data from the L2 state, we are able to \\\"circumvent\\\" this delay to a reasonable degree. This means that for messages going L1 -> L2, you can call \\\"processMessage\\\" and expect the call to be executed to pass up the aggregate root. When going from L2 -> L1, you must read the root from the L2 state L2 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol L1 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":\"OptimismAmb\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":{\"keccak256\":\"0xbce6aaa568441bd8ad60f2b5f1ad8d9e3c61cbc91ce4405d7a390980920f66f3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7cdea925bfc43e25eab526074b1b5454b0a44676e88cb7834707e8b273aff820\",\"dweb:/ipfs/Qmd2WyxCPaguNGKfm7sNxfQgxEU8o7vvR6Fe4pK7GZoUUe\"]}},\"version\":1}"}},"contracts/shared/ProposedOwnable.sol":{"ProposedOwnable":{"abi":[{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.The majority of this code was taken from the openzeppelin Ownable contract\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProposedOwnable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"}},\"notice\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed via a two step process: 1. Call `proposeOwner` 2. Wait out the delay period 3. Call `acceptOwner`\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shared/ProposedOwnable.sol\":\"ProposedOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/shared/interfaces/IProposedOwnable.sol":{"IProposedOwnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"proposed_","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposed_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipProposed(address)\":{\"details\":\"This emits when change in ownership of a contract is proposed.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"owner_\":\"The address of the owner.\"}},\"proposeNewOwner(address)\":{\"params\":{\"newlyProposed\":\"The proposed new owner of the contract\"}},\"proposed()\":{\"returns\":{\"proposed_\":\"The address of the proposed.\"}}},\"title\":\"IProposedOwnable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"owner()\":{\"notice\":\"Get the address of the owner\"},\"proposeNewOwner(address)\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"proposed()\":{\"notice\":\"Get the address of the proposed owner\"}},\"notice\":\"Defines a minimal interface for ownership with a two step proposal and acceptance process\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shared/interfaces/IProposedOwnable.sol\":\"IProposedOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/shared/libraries/TypedMemView.sol":{"TypedMemView":{"abi":[{"inputs":[{"internalType":"uint256","name":"actual","type":"uint256"},{"internalType":"uint256","name":"expected","type":"uint256"}],"name":"TypedMemView__assertType_typeAssertionFailed","type":"error"},{"inputs":[],"name":"TypedMemView__assertValid_validityAssertionFailed","type":"error"},{"inputs":[],"name":"TypedMemView__index_indexMoreThan32Bytes","type":"error"},{"inputs":[{"internalType":"uint256","name":"loc","type":"uint256"},{"internalType":"uint256","name":"len","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"slice","type":"uint256"}],"name":"TypedMemView__index_overrun","type":"error"},{"inputs":[],"name":"TypedMemView__unsafeCopyTo_identityOOG","type":"error"},{"inputs":[],"name":"TypedMemView__unsafeCopyTo_invalidPointer","type":"error"},{"inputs":[],"name":"TypedMemView__unsafeCopyTo_nullPointer","type":"error"},{"inputs":[],"name":"NULL","outputs":[{"internalType":"bytes29","name":"","type":"bytes29"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60fe610052600b82828239805160001a607314610045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f26be3fc146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000081565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220b2e89d1df112d56200dd4e96697bc8e5c043ca68b20faf9e83528bdfa28ccf5464736f6c63430008110033","opcodes":"PUSH1 0xFE PUSH2 0x52 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x45 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF26BE3FC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE8 SWAP14 SAR CALL SLT 0xD5 PUSH3 0xDD4E SWAP7 PUSH10 0x7BC8E5C043CA68B20FAF SWAP15 DUP4 MSTORE DUP12 0xDF LOG2 DUP13 0xCF SLOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"71:24417:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@NULL_5758":{"entryPoint":82,"id":5758,"parameterSlots":0,"returnSlots":0},"abi_encode_t_bytes29_to_t_bytes29_fromStack_library":{"entryPoint":162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes29__to_t_bytes29__fromStack_library_reversed":{"entryPoint":175,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bytes29":{"entryPoint":118,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:536:30","statements":[{"body":{"nodeType":"YulBlock","src":"52:105:30","statements":[{"nodeType":"YulAssignment","src":"62:89:30","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:30"},{"kind":"number","nodeType":"YulLiteral","src":"84:66:30","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:30"},"nodeType":"YulFunctionCall","src":"73:78:30"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:30"}]}]},"name":"cleanup_t_bytes29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:30","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:30","type":""}],"src":"7:150:30"},{"body":{"nodeType":"YulBlock","src":"236:53:30","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"253:3:30"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"276:5:30"}],"functionName":{"name":"cleanup_t_bytes29","nodeType":"YulIdentifier","src":"258:17:30"},"nodeType":"YulFunctionCall","src":"258:24:30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"246:6:30"},"nodeType":"YulFunctionCall","src":"246:37:30"},"nodeType":"YulExpressionStatement","src":"246:37:30"}]},"name":"abi_encode_t_bytes29_to_t_bytes29_fromStack_library","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"224:5:30","type":""},{"name":"pos","nodeType":"YulTypedName","src":"231:3:30","type":""}],"src":"163:126:30"},{"body":{"nodeType":"YulBlock","src":"401:132:30","statements":[{"nodeType":"YulAssignment","src":"411:26:30","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"423:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"434:2:30","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"419:3:30"},"nodeType":"YulFunctionCall","src":"419:18:30"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"411:4:30"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"499:6:30"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"512:9:30"},{"kind":"number","nodeType":"YulLiteral","src":"523:1:30","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"508:3:30"},"nodeType":"YulFunctionCall","src":"508:17:30"}],"functionName":{"name":"abi_encode_t_bytes29_to_t_bytes29_fromStack_library","nodeType":"YulIdentifier","src":"447:51:30"},"nodeType":"YulFunctionCall","src":"447:79:30"},"nodeType":"YulExpressionStatement","src":"447:79:30"}]},"name":"abi_encode_tuple_t_bytes29__to_t_bytes29__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"373:9:30","type":""},{"name":"value0","nodeType":"YulTypedName","src":"385:6:30","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"396:4:30","type":""}],"src":"295:238:30"}]},"contents":"{\n\n    function cleanup_t_bytes29(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000)\n    }\n\n    function abi_encode_t_bytes29_to_t_bytes29_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes29(value))\n    }\n\n    function abi_encode_tuple_t_bytes29__to_t_bytes29__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes29_to_t_bytes29_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":30,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f26be3fc146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000081565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220b2e89d1df112d56200dd4e96697bc8e5c043ca68b20faf9e83528bdfa28ccf5464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF26BE3FC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE8 SWAP14 SAR CALL SLT 0xD5 PUSH3 0xDD4E SWAP7 PUSH10 0x7BC8E5C043CA68B20FAF SWAP15 DUP4 MSTORE DUP12 0xDF LOG2 DUP13 0xCF SLOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"71:24417:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;2478:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;7:150:30:-;44:7;84:66;77:5;73:78;62:89;;7:150;;;:::o;163:126::-;258:24;276:5;258:24;:::i;:::-;253:3;246:37;163:126;;:::o;295:238::-;396:4;434:2;423:9;419:18;411:26;;447:79;523:1;512:9;508:17;499:6;447:79;:::i;:::-;295:238;;;;:::o"},"methodIdentifiers":{"NULL()":"f26be3fc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"TypedMemView__assertType_typeAssertionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__assertValid_validityAssertionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__index_indexMoreThan32Bytes\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slice\",\"type\":\"uint256\"}],\"name\":\"TypedMemView__index_overrun\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__unsafeCopyTo_identityOOG\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__unsafeCopyTo_invalidPointer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__unsafeCopyTo_nullPointer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL\",\"outputs\":[{\"internalType\":\"bytes29\",\"name\":\"\",\"type\":\"bytes29\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shared/libraries/TypedMemView.sol\":\"TypedMemView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shared/libraries/TypedMemView.sol\":{\"keccak256\":\"0x17e335daf53b9cd26f13d480b2f1e4f6babf202e39a14089d97b23b1d5d737ff\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://694cae783e2f6e85edbc1fff9bd6a47d9cf7023cc5f69754cdd0c85953a762c3\",\"dweb:/ipfs/QmUc41N4NTs4Tvhzy6ULkp7DSH8b7D5CcadNEBKBHgPPBc\"]}},\"version\":1}"}}}}}