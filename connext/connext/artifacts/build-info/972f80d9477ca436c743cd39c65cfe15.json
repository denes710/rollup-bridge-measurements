{"id":"972f80d9477ca436c743cd39c65cfe15","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"contracts/messaging/connectors/Connector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {ProposedOwnable} from \"../../shared/ProposedOwnable.sol\";\nimport {IConnector} from \"../interfaces/IConnector.sol\";\n\n/**\n * @title Connector\n * @author Connext Labs, Inc.\n * @notice This contract has the messaging interface functions used by all connectors.\n *\n * @dev This contract stores information about mirror connectors, but can be used as a\n * base for contracts that do not have a mirror (i.e. the connector handling messaging on\n * mainnet). In this case, the `mirrorConnector` and `MIRROR_DOMAIN`\n * will be empty\n *\n * @dev If ownership is renounced, this contract will be unable to update its `mirrorConnector`\n * or `mirrorGas`\n */\nabstract contract Connector is ProposedOwnable, IConnector {\n  // ========== Custom Errors ===========\n\n  error Connector__processMessage_notUsed();\n\n  // ============ Events ============\n\n  event NewConnector(\n    uint32 indexed domain,\n    uint32 indexed mirrorDomain,\n    address amb,\n    address rootManager,\n    address mirrorConnector\n  );\n\n  event MirrorConnectorUpdated(address previous, address current);\n\n  // ============ Public Storage ============\n\n  /**\n   * @notice The domain of this Messaging (i.e. Connector) contract.\n   */\n  uint32 public immutable DOMAIN;\n\n  /**\n   * @notice Address of the AMB on this domain.\n   */\n  address public immutable AMB;\n\n  /**\n   * @notice RootManager contract address.\n   */\n  address public immutable ROOT_MANAGER;\n\n  /**\n   * @notice The domain of the corresponding messaging (i.e. Connector) contract.\n   */\n  uint32 public immutable MIRROR_DOMAIN;\n\n  /**\n   * @notice Connector on L2 for L1 connectors, and vice versa.\n   */\n  address public mirrorConnector;\n\n  // ============ Modifiers ============\n\n  /**\n   * @notice Errors if the msg.sender is not the registered AMB\n   */\n  modifier onlyAMB() {\n    require(msg.sender == AMB, \"!AMB\");\n    _;\n  }\n\n  /**\n   * @notice Errors if the msg.sender is not the registered ROOT_MANAGER\n   */\n  modifier onlyRootManager() {\n    // NOTE: RootManager will be zero address for spoke connectors.\n    // Only root manager can dispatch a message to spokes/L2s via the hub connector.\n    require(msg.sender == ROOT_MANAGER, \"!rootManager\");\n    _;\n  }\n\n  // ============ Constructor ============\n\n  /**\n   * @notice Creates a new HubConnector instance\n   * @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n   * for optimism, there is one connector on optimism and one connector on mainnet)\n   * @param _domain The domain this connector lives on\n   * @param _mirrorDomain The spoke domain\n   * @param _amb The address of the amb on the domain this connector lives on\n   * @param _rootManager The address of the RootManager on mainnet\n   * @param _mirrorConnector The address of the spoke connector\n   */\n  constructor(\n    uint32 _domain,\n    uint32 _mirrorDomain,\n    address _amb,\n    address _rootManager,\n    address _mirrorConnector\n  ) ProposedOwnable() {\n    // set the owner\n    _setOwner(msg.sender);\n\n    // sanity checks on values\n    require(_domain != 0, \"empty domain\");\n    require(_rootManager != address(0), \"empty rootManager\");\n    // see note at top of contract on why the mirror values are not sanity checked\n\n    // set immutables\n    DOMAIN = _domain;\n    AMB = _amb;\n    ROOT_MANAGER = _rootManager;\n    MIRROR_DOMAIN = _mirrorDomain;\n    // set mutables if defined\n    if (_mirrorConnector != address(0)) {\n      _setMirrorConnector(_mirrorConnector);\n    }\n\n    emit NewConnector(_domain, _mirrorDomain, _amb, _rootManager, _mirrorConnector);\n  }\n\n  // ============ Receivable ============\n  /**\n   * @notice Connectors may need to receive native asset to handle fees when sending a\n   * message\n   */\n  receive() external payable {}\n\n  // ============ Admin Functions ============\n\n  /**\n   * @notice Sets the address of the l2Connector for this domain\n   */\n  function setMirrorConnector(address _mirrorConnector) public onlyOwner {\n    _setMirrorConnector(_mirrorConnector);\n  }\n\n  // ============ Public Functions ============\n\n  /**\n   * @notice Processes a message received by an AMB\n   * @dev This is called by AMBs to process messages originating from mirror connector\n   */\n  function processMessage(bytes memory _data) external virtual onlyAMB {\n    _processMessage(_data);\n    emit MessageProcessed(_data, msg.sender);\n  }\n\n  /**\n   * @notice Checks the cross domain sender for a given address\n   */\n  function verifySender(address _expected) external returns (bool) {\n    return _verifySender(_expected);\n  }\n\n  // ============ Virtual Functions ============\n\n  /**\n   * @notice This function is used by the Connext contract on the l2 domain to send a message to the\n   * l1 domain (i.e. called by Connext on optimism to send a message to mainnet with roots)\n   * @param _data The contents of the message\n   * @param _encodedData Data used to send the message; specific to connector\n   */\n  function _sendMessage(bytes memory _data, bytes memory _encodedData) internal virtual;\n\n  /**\n   * @notice This function is used by the AMBs to handle incoming messages. Should store the latest\n   * root generated on the l2 domain.\n   */\n  function _processMessage(\n    bytes memory /* _data */\n  ) internal virtual {\n    // By default, reverts. This is to ensure the call path is not used unless this function is\n    // overridden by the inheriting class\n    revert Connector__processMessage_notUsed();\n  }\n\n  /**\n   * @notice Verify that the msg.sender is the correct AMB contract, and that the message's origin sender\n   * is the expected address.\n   * @dev Should be overridden by the implementing Connector contract.\n   */\n  function _verifySender(address _expected) internal virtual returns (bool);\n\n  // ============ Private Functions ============\n\n  function _setMirrorConnector(address _mirrorConnector) internal virtual {\n    emit MirrorConnectorUpdated(mirrorConnector, _mirrorConnector);\n    mirrorConnector = _mirrorConnector;\n  }\n}\n"},"contracts/messaging/connectors/GasCap.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {ProposedOwnable} from \"../../shared/ProposedOwnable.sol\";\n\nabstract contract GasCap is ProposedOwnable {\n  // ============ Storage ============\n  /**\n   * @notice The gnosis amb requires destination gas to be specified on the origin.\n   * The gas used will be passed in by the relayer to allow for real-time estimates,\n   * but will be capped at the admin-set cap.\n   */\n  uint256 gasCap;\n\n  // ============ Events ============\n\n  /**\n   * @notice Emitted when admin updates the gas cap\n   * @param _previous The starting value\n   * @param _updated The final value\n   */\n  event GasCapUpdated(uint256 _previous, uint256 _updated);\n\n  // ============ Constructor ============\n  constructor(uint256 _gasCap) {\n    _setGasCap(_gasCap);\n  }\n\n  // ============ Admin Fns ============\n  function setGasCap(uint256 _gasCap) public onlyOwner {\n    _setGasCap(_gasCap);\n  }\n\n  // ============ Internal Fns ============\n\n  /**\n   * @notice Used (by admin) to update the gas cap\n   * @param _gasCap The new value\n   */\n  function _setGasCap(uint256 _gasCap) internal {\n    emit GasCapUpdated(gasCap, _gasCap);\n    gasCap = _gasCap;\n  }\n\n  /**\n   * @notice Used to get the gas to use. Will be the original value IFF it\n   * is less than the cap\n   * @param _gas The proposed gas value\n   */\n  function _getGas(uint256 _gas) internal view returns (uint256) {\n    if (_gas > gasCap) {\n      _gas = gasCap;\n    }\n    return _gas;\n  }\n}\n"},"contracts/messaging/connectors/HubConnector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {Connector} from \"./Connector.sol\";\n\n/**\n * @title HubConnector\n * @author Connext Labs, Inc.\n * @notice This contract implements the messaging functions needed on the hub-side of a given AMB.\n * The HubConnector has a limited set of functionality compared to the SpokeConnector, namely that\n * it contains no logic to store or prove messages.\n *\n * @dev This contract should be deployed on the hub-side of an AMB (i.e. on L1), and contracts\n * which extend this should implement the virtual functions defined in the BaseConnector class\n */\nabstract contract HubConnector is Connector {\n  /**\n   * @notice Creates a new HubConnector instance\n   * @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n   * for optimism, there is one connector on optimism and one connector on mainnet)\n   * @param _domain The domain this connector lives on\n   * @param _mirrorDomain The spoke domain\n   * @param _amb The address of the amb on the domain this connector lives on\n   * @param _rootManager The address of the RootManager on mainnet\n   * @param _mirrorConnector The address of the spoke connector\n   */\n  constructor(\n    uint32 _domain,\n    uint32 _mirrorDomain,\n    address _amb,\n    address _rootManager,\n    address _mirrorConnector\n  ) Connector(_domain, _mirrorDomain, _amb, _rootManager, _mirrorConnector) {}\n\n  // ============ Public fns ============\n  /**\n   * @notice Sends a message over the amb\n   * @dev This is called by the root manager *only* on mainnet to propagate the aggregate root\n   */\n  function sendMessage(bytes memory _data, bytes memory _encodedData) external payable onlyRootManager {\n    _sendMessage(_data, _encodedData);\n    emit MessageSent(_data, _encodedData, msg.sender);\n  }\n}\n"},"contracts/messaging/connectors/optimism/BaseOptimism.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {OptimismAmb} from \"../../interfaces/ambs/optimism/OptimismAmb.sol\";\n\nimport {GasCap} from \"../GasCap.sol\";\n\nabstract contract BaseOptimism is GasCap {\n  // ============ Constructor ============\n  constructor(uint256 _gasCap) GasCap(_gasCap) {}\n\n  // ============ Override Fns ============\n  function _verifySender(address _amb, address _expected) internal view returns (bool) {\n    require(msg.sender == _amb, \"!bridge\");\n    return OptimismAmb(_amb).xDomainMessageSender() == _expected;\n  }\n\n  /**\n   * @notice Using Optimism AMB, the gas is provided to `sendMessage` as an encoded uint\n   */\n  function _getGasFromEncoded(bytes memory _encodedData) internal view returns (uint256 _gas) {\n    // Should include gas info in specialized calldata\n    require(_encodedData.length == 32, \"!data length\");\n\n    // Get the gas, if it is more than the cap use the cap\n    _gas = _getGas(abi.decode(_encodedData, (uint256)));\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/BytesUtils.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @title BytesUtils\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/utils/Lib_BytesUtils.sol\n */\nlibrary BytesUtils {\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  function slice(\n    bytes memory _bytes,\n    uint256 _start,\n    uint256 _length\n  ) internal pure returns (bytes memory) {\n    require(_length + 31 >= _length, \"slice_overflow\");\n    require(_start + _length >= _start, \"slice_overflow\");\n    require(_bytes.length >= _start + _length, \"slice_outOfBounds\");\n\n    bytes memory tempBytes;\n\n    assembly {\n      switch iszero(_length)\n      case 0 {\n        // Get a location of some free memory and store it in tempBytes as\n        // Solidity does for memory variables.\n        tempBytes := mload(0x40)\n\n        // The first word of the slice result is potentially a partial\n        // word read from the original array. To read it, we calculate\n        // the length of that partial word and start copying that many\n        // bytes into the array. The first word we copy will start with\n        // data we don't care about, but the last `lengthmod` bytes will\n        // land at the beginning of the contents of the new array. When\n        // we're done copying, we overwrite the full first word with\n        // the actual length of the slice.\n        let lengthmod := and(_length, 31)\n\n        // The multiplication in the next line is necessary\n        // because when slicing multiples of 32 bytes (lengthmod == 0)\n        // the following copy loop was copying the origin's length\n        // and then ending prematurely not copying everything it should.\n        let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n        let end := add(mc, _length)\n\n        for {\n          // The multiplication in the next line has the same exact purpose\n          // as the one above.\n          let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n        } lt(mc, end) {\n          mc := add(mc, 0x20)\n          cc := add(cc, 0x20)\n        } {\n          mstore(mc, mload(cc))\n        }\n\n        mstore(tempBytes, _length)\n\n        //update free-memory pointer\n        //allocating the array padded to 32 bytes like the compiler does now\n        mstore(0x40, and(add(mc, 31), not(31)))\n      }\n      //if we want a zero-length slice let's just return a zero-length array\n      default {\n        tempBytes := mload(0x40)\n\n        //zero out the 32 bytes slice we are about to return\n        //we need to do it because Solidity does not garbage collect\n        mstore(tempBytes, 0)\n\n        mstore(0x40, add(tempBytes, 0x20))\n      }\n    }\n\n    return tempBytes;\n  }\n\n  function slice(bytes memory _bytes, uint256 _start) internal pure returns (bytes memory) {\n    if (_start >= _bytes.length) {\n      return bytes(\"\");\n    }\n\n    return slice(_bytes, _start, _bytes.length - _start);\n  }\n\n  function toBytes32(bytes memory _bytes) internal pure returns (bytes32) {\n    if (_bytes.length < 32) {\n      bytes32 ret;\n      assembly {\n        ret := mload(add(_bytes, 32))\n      }\n      return ret;\n    }\n\n    return abi.decode(_bytes, (bytes32)); // will truncate if input length > 32 bytes\n  }\n\n  function toUint256(bytes memory _bytes) internal pure returns (uint256) {\n    return uint256(toBytes32(_bytes));\n  }\n\n  function toNibbles(bytes memory _bytes) internal pure returns (bytes memory) {\n    bytes memory nibbles = new bytes(_bytes.length * 2);\n\n    uint256 len = _bytes.length;\n    for (uint256 i = 0; i < len; ) {\n      nibbles[i * 2] = _bytes[i] >> 4;\n      nibbles[i * 2 + 1] = bytes1(uint8(_bytes[i]) % 16);\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    return nibbles;\n  }\n\n  function fromNibbles(bytes memory _bytes) internal pure returns (bytes memory) {\n    bytes memory ret = new bytes(_bytes.length / 2);\n\n    uint256 len = ret.length;\n    for (uint256 i = 0; i < len; ) {\n      ret[i] = (_bytes[i * 2] << 4) | (_bytes[i * 2 + 1]);\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    return ret;\n  }\n\n  function equal(bytes memory _bytes, bytes memory _other) internal pure returns (bool) {\n    return keccak256(_bytes) == keccak256(_other);\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/* Library Imports */\nimport {BytesUtils} from \"./BytesUtils.sol\";\nimport {RLPReader} from \"./RLPReader.sol\";\n\n/**\n * @title MerkleTrie\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_MerkleTrie.sol\n */\nlibrary MerkleTrie {\n  /*******************\n   * Data Structures *\n   *******************/\n\n  enum NodeType {\n    BranchNode,\n    ExtensionNode,\n    LeafNode\n  }\n\n  struct TrieNode {\n    bytes encoded;\n    RLPReader.RLPItem[] decoded;\n  }\n\n  /**********************\n   * Contract Constants *\n   **********************/\n\n  // TREE_RADIX determines the number of elements per branch node.\n  uint256 constant TREE_RADIX = 16;\n  // Branch nodes have TREE_RADIX elements plus an additional `value` slot.\n  uint256 constant BRANCH_NODE_LENGTH = TREE_RADIX + 1;\n  // Leaf nodes and extension nodes always have two elements, a `path` and a `value`.\n  uint256 constant LEAF_OR_EXTENSION_NODE_LENGTH = 2;\n\n  // Prefixes are prepended to the `path` within a leaf or extension node and\n  // allow us to differentiate between the two node types. `ODD` or `EVEN` is\n  // determined by the number of nibbles within the unprefixed `path`. If the\n  // number of nibbles if even, we need to insert an extra padding nibble so\n  // the resulting prefixed `path` has an even number of nibbles.\n  uint8 constant PREFIX_EXTENSION_EVEN = 0;\n  uint8 constant PREFIX_EXTENSION_ODD = 1;\n  uint8 constant PREFIX_LEAF_EVEN = 2;\n  uint8 constant PREFIX_LEAF_ODD = 3;\n\n  // Just a utility constant. RLP represents `NULL` as 0x80.\n  bytes1 constant RLP_NULL = bytes1(0x80);\n\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  /**\n   * @notice Verifies a proof that a given key/value pair is present in the\n   * Merkle trie.\n   * @param _key Key of the node to search for, as a hex string.\n   * @param _value Value of the node to search for, as a hex string.\n   * @param _proof Merkle trie inclusion proof for the desired node. Unlike\n   * traditional Merkle trees, this proof is executed top-down and consists\n   * of a list of RLP-encoded nodes that make a path down to the target node.\n   * @param _root Known root of the Merkle trie. Used to verify that the\n   * included proof is correctly constructed.\n   * @return _verified `true` if the k/v pair exists in the trie, `false` otherwise.\n   */\n  function verifyInclusionProof(\n    bytes memory _key,\n    bytes memory _value,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _verified) {\n    (bool exists, bytes memory value) = get(_key, _proof, _root);\n\n    return (exists && BytesUtils.equal(_value, value));\n  }\n\n  /**\n   * @notice Retrieves the value associated with a given key.\n   * @param _key Key to search for, as hex bytes.\n   * @param _proof Merkle trie inclusion proof for the key.\n   * @param _root Known root of the Merkle trie.\n   * @return _exists Whether or not the key exists.\n   * @return _value Value of the key if it exists.\n   */\n  function get(\n    bytes memory _key,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _exists, bytes memory _value) {\n    TrieNode[] memory proof = _parseProof(_proof);\n    (uint256 pathLength, bytes memory keyRemainder, bool isFinalNode) = _walkNodePath(proof, _key, _root);\n\n    bool exists = keyRemainder.length == 0;\n\n    require(exists || isFinalNode, \"Provided proof is invalid.\");\n\n    bytes memory value = exists ? _getNodeValue(proof[pathLength - 1]) : bytes(\"\");\n\n    return (exists, value);\n  }\n\n  /*********************\n   * Private Functions *\n   *********************/\n\n  /**\n   * @notice Walks through a proof using a provided key.\n   * @param _proof Inclusion proof to walk through.\n   * @param _key Key to use for the walk.\n   * @param _root Known root of the trie.\n   * @return _pathLength Length of the final path\n   * @return _keyRemainder Portion of the key remaining after the walk.\n   * @return _isFinalNode Whether or not we've hit a dead end.\n   */\n  function _walkNodePath(\n    TrieNode[] memory _proof,\n    bytes memory _key,\n    bytes32 _root\n  )\n    private\n    pure\n    returns (\n      uint256 _pathLength,\n      bytes memory _keyRemainder,\n      bool _isFinalNode\n    )\n  {\n    uint256 pathLength = 0;\n    bytes memory key = BytesUtils.toNibbles(_key);\n\n    bytes32 currentNodeID = _root;\n    uint256 currentKeyIndex = 0;\n    uint256 currentKeyIncrement = 0;\n    TrieNode memory currentNode;\n\n    // Proof is top-down, so we start at the first element (root).\n    uint256 len = _proof.length;\n    for (uint256 i = 0; i < len; ) {\n      currentNode = _proof[i];\n      currentKeyIndex += currentKeyIncrement;\n\n      // Keep track of the proof elements we actually need.\n      // It's expensive to resize arrays, so this simply reduces gas costs.\n      pathLength += 1;\n\n      if (currentKeyIndex == 0) {\n        // First proof element is always the root node.\n        require(keccak256(currentNode.encoded) == currentNodeID, \"Invalid root hash\");\n      } else if (currentNode.encoded.length > 32 - 1) {\n        // Nodes 32 bytes or larger are hashed inside branch nodes.\n        // require(keccak256(currentNode.encoded) == currentNodeID, \"Invalid large internal hash\");\n      } else {\n        // Nodes smaller than 31 bytes aren't hashed.\n        require(BytesUtils.toBytes32(currentNode.encoded) == currentNodeID, \"Invalid internal node hash\");\n      }\n\n      // unreachable code if it's below the if statement under this\n      unchecked {\n        ++i;\n      }\n\n      if (currentNode.decoded.length == BRANCH_NODE_LENGTH) {\n        if (currentKeyIndex == key.length) {\n          // We've hit the end of the key\n          // meaning the value should be within this branch node.\n          break;\n        } else {\n          // We're not at the end of the key yet.\n          // Figure out what the next node ID should be and continue.\n          uint8 branchKey = uint8(key[currentKeyIndex]);\n          RLPReader.RLPItem memory nextNode = currentNode.decoded[branchKey];\n          currentNodeID = _getNodeID(nextNode);\n          currentKeyIncrement = 1;\n          continue;\n        }\n      } else if (currentNode.decoded.length == LEAF_OR_EXTENSION_NODE_LENGTH) {\n        bytes memory path = _getNodePath(currentNode);\n        uint8 prefix = uint8(path[0]);\n        uint8 offset = 2 - (prefix % 2);\n        bytes memory pathRemainder = BytesUtils.slice(path, offset);\n        bytes memory keyRemainder = BytesUtils.slice(key, currentKeyIndex);\n        uint256 sharedNibbleLength = _getSharedNibbleLength(pathRemainder, keyRemainder);\n\n        if (prefix == PREFIX_LEAF_EVEN || prefix == PREFIX_LEAF_ODD) {\n          if (pathRemainder.length == sharedNibbleLength && keyRemainder.length == sharedNibbleLength) {\n            // The key within this leaf matches our key exactly.\n            // Increment the key index to reflect that we have no remainder.\n            currentKeyIndex += sharedNibbleLength;\n          }\n\n          // We've hit a leaf node, so our next node should be NULL.\n          currentNodeID = bytes32(RLP_NULL);\n          break;\n        } else if (prefix == PREFIX_EXTENSION_EVEN || prefix == PREFIX_EXTENSION_ODD) {\n          if (sharedNibbleLength != pathRemainder.length) {\n            // Our extension node is not identical to the remainder.\n            // We've hit the end of this path\n            // updates will need to modify this extension.\n            currentNodeID = bytes32(RLP_NULL);\n            break;\n          } else {\n            // Our extension shares some nibbles.\n            // Carry on to the next node.\n            currentNodeID = _getNodeID(currentNode.decoded[1]);\n            currentKeyIncrement = sharedNibbleLength;\n            continue;\n          }\n        } else {\n          revert(\"Received a node with an unknown prefix\");\n        }\n      } else {\n        revert(\"Received an unparseable node.\");\n      }\n    }\n\n    // If our node ID is NULL, then we're at a dead end.\n    bool isFinalNode = currentNodeID == bytes32(RLP_NULL);\n    return (pathLength, BytesUtils.slice(key, currentKeyIndex), isFinalNode);\n  }\n\n  /**\n   * @notice Parses an RLP-encoded proof into something more useful.\n   * @param _proof RLP-encoded proof to parse.\n   * @return _parsed Proof parsed into easily accessible structs.\n   */\n  function _parseProof(bytes memory _proof) private pure returns (TrieNode[] memory _parsed) {\n    RLPReader.RLPItem[] memory nodes = RLPReader.readList(_proof);\n    TrieNode[] memory proof = new TrieNode[](nodes.length);\n\n    uint256 len = nodes.length;\n    for (uint256 i = 0; i < len; ) {\n      bytes memory encoded = RLPReader.readBytes(nodes[i]);\n      proof[i] = TrieNode({encoded: encoded, decoded: RLPReader.readList(encoded)});\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    return proof;\n  }\n\n  /**\n   * @notice Picks out the ID for a node. Node ID is referred to as the\n   * \"hash\" within the specification, but nodes < 32 bytes are not actually\n   * hashed.\n   * @param _node Node to pull an ID for.\n   * @return _nodeID ID for the node, depending on the size of its contents.\n   */\n  function _getNodeID(RLPReader.RLPItem memory _node) private pure returns (bytes32 _nodeID) {\n    bytes memory nodeID;\n\n    if (_node.length < 32) {\n      // Nodes smaller than 32 bytes are RLP encoded.\n      nodeID = RLPReader.readRawBytes(_node);\n    } else {\n      // Nodes 32 bytes or larger are hashed.\n      nodeID = RLPReader.readBytes(_node);\n    }\n\n    return BytesUtils.toBytes32(nodeID);\n  }\n\n  /**\n   * @notice Gets the path for a leaf or extension node.\n   * @param _node Node to get a path for.\n   * @return _path Node path, converted to an array of nibbles.\n   */\n  function _getNodePath(TrieNode memory _node) private pure returns (bytes memory _path) {\n    return BytesUtils.toNibbles(RLPReader.readBytes(_node.decoded[0]));\n  }\n\n  /**\n   * @notice Gets the path for a node.\n   * @param _node Node to get a value for.\n   * @return _value Node value, as hex bytes.\n   */\n  function _getNodeValue(TrieNode memory _node) private pure returns (bytes memory _value) {\n    return RLPReader.readBytes(_node.decoded[_node.decoded.length - 1]);\n  }\n\n  /**\n   * @notice Utility; determines the number of nibbles shared between two\n   * nibble arrays.\n   * @param _a First nibble array.\n   * @param _b Second nibble array.\n   * @return _shared Number of shared nibbles.\n   */\n  function _getSharedNibbleLength(bytes memory _a, bytes memory _b) private pure returns (uint256 _shared) {\n    uint256 i = 0;\n    while (_a.length > i && _b.length > i && _a[i] == _b[i]) {\n      i++;\n    }\n    return i;\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/OVMCodec.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/* Library Imports */\nimport {RLPReader} from \"./RLPReader.sol\";\n\n/**\n * @title OVMCodec\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol\n */\nlibrary OVMCodec {\n  /***********\n   * Structs *\n   ***********/\n\n  struct EVMAccount {\n    uint256 nonce;\n    uint256 balance;\n    bytes32 storageRoot;\n    bytes32 codeHash;\n  }\n\n  /**\n   * @notice Decodes an RLP-encoded account state into a useful struct.\n   * @param _encoded RLP-encoded account state.\n   * @return Account state struct.\n   */\n  function decodeEVMAccount(bytes memory _encoded) internal pure returns (EVMAccount memory) {\n    RLPReader.RLPItem[] memory accountState = RLPReader.readList(_encoded);\n\n    return\n      EVMAccount({\n        nonce: RLPReader.readUint256(accountState[0]),\n        balance: RLPReader.readUint256(accountState[1]),\n        storageRoot: RLPReader.readBytes32(accountState[2]),\n        codeHash: RLPReader.readBytes32(accountState[3])\n      });\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @title PredeployAddresses\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol\n */\nlibrary PredeployAddresses {\n  address internal constant L2_TO_L1_MESSAGE_PASSER = 0x4200000000000000000000000000000000000000;\n  address internal constant L1_MESSAGE_SENDER = 0x4200000000000000000000000000000000000001;\n  address internal constant DEPLOYER_WHITELIST = 0x4200000000000000000000000000000000000002;\n  address payable internal constant OVM_ETH = payable(0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000);\n  address internal constant L2_CROSS_DOMAIN_MESSENGER = 0x4200000000000000000000000000000000000007;\n  address internal constant LIB_ADDRESS_MANAGER = 0x4200000000000000000000000000000000000008;\n  address internal constant PROXY_EOA = 0x4200000000000000000000000000000000000009;\n  address internal constant L2_STANDARD_BRIDGE = 0x4200000000000000000000000000000000000010;\n  address internal constant SEQUENCER_FEE_WALLET = 0x4200000000000000000000000000000000000011;\n  address internal constant L2_STANDARD_TOKEN_FACTORY = 0x4200000000000000000000000000000000000012;\n  address internal constant L1_BLOCK_NUMBER = 0x4200000000000000000000000000000000000013;\n}\n"},"contracts/messaging/connectors/optimism/lib/RLPReader.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @title RLPReader\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/rlp/Lib_RLPReader.sol\n */\nlibrary RLPReader {\n  /*************\n   * Constants *\n   *************/\n\n  uint256 internal constant MAX_LIST_LENGTH = 32;\n\n  /*********\n   * Enums *\n   *********/\n\n  enum RLPItemType {\n    DATA_ITEM,\n    LIST_ITEM\n  }\n\n  /***********\n   * Structs *\n   ***********/\n\n  struct RLPItem {\n    uint256 length;\n    uint256 ptr;\n  }\n\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  /**\n   * Converts bytes to a reference to memory position and length.\n   * @param _in Input bytes to convert.\n   * @return Output memory reference.\n   */\n  function toRLPItem(bytes memory _in) internal pure returns (RLPItem memory) {\n    uint256 ptr;\n    assembly {\n      ptr := add(_in, 32)\n    }\n\n    return RLPItem({length: _in.length, ptr: ptr});\n  }\n\n  /**\n   * Reads an RLP list value into a list of RLP items.\n   * @param _in RLP list value.\n   * @return Decoded RLP list items.\n   */\n  function readList(RLPItem memory _in) internal pure returns (RLPItem[] memory) {\n    (uint256 listOffset, , RLPItemType itemType) = _decodeLength(_in);\n\n    require(itemType == RLPItemType.LIST_ITEM, \"Invalid RLP list value.\");\n\n    // Solidity in-memory arrays can't be increased in size, but *can* be decreased in size by\n    // writing to the length. Since we can't know the number of RLP items without looping over\n    // the entire input, we'd have to loop twice to accurately size this array. It's easier to\n    // simply set a reasonable maximum list length and decrease the size before we finish.\n    RLPItem[] memory out = new RLPItem[](MAX_LIST_LENGTH);\n\n    uint256 itemCount = 0;\n    uint256 offset = listOffset;\n    while (offset < _in.length) {\n      require(itemCount < MAX_LIST_LENGTH, \"Provided RLP list exceeds max list length.\");\n\n      (uint256 itemOffset, uint256 itemLength, ) = _decodeLength(\n        RLPItem({length: _in.length - offset, ptr: _in.ptr + offset})\n      );\n\n      out[itemCount] = RLPItem({length: itemLength + itemOffset, ptr: _in.ptr + offset});\n\n      itemCount += 1;\n      offset += itemOffset + itemLength;\n    }\n\n    // Decrease the array size to match the actual item count.\n    assembly {\n      mstore(out, itemCount)\n    }\n\n    return out;\n  }\n\n  /**\n   * Reads an RLP list value into a list of RLP items.\n   * @param _in RLP list value.\n   * @return Decoded RLP list items.\n   */\n  function readList(bytes memory _in) internal pure returns (RLPItem[] memory) {\n    return readList(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP bytes value into bytes.\n   * @param _in RLP bytes value.\n   * @return Decoded bytes.\n   */\n  function readBytes(RLPItem memory _in) internal pure returns (bytes memory) {\n    (uint256 itemOffset, uint256 itemLength, RLPItemType itemType) = _decodeLength(_in);\n\n    require(itemType == RLPItemType.DATA_ITEM, \"Invalid RLP bytes value.\");\n\n    return _copy(_in.ptr, itemOffset, itemLength);\n  }\n\n  /**\n   * Reads an RLP bytes value into bytes.\n   * @param _in RLP bytes value.\n   * @return Decoded bytes.\n   */\n  function readBytes(bytes memory _in) internal pure returns (bytes memory) {\n    return readBytes(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP string value into a string.\n   * @param _in RLP string value.\n   * @return Decoded string.\n   */\n  function readString(RLPItem memory _in) internal pure returns (string memory) {\n    return string(readBytes(_in));\n  }\n\n  /**\n   * Reads an RLP string value into a string.\n   * @param _in RLP string value.\n   * @return Decoded string.\n   */\n  function readString(bytes memory _in) internal pure returns (string memory) {\n    return readString(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP bytes32 value into a bytes32.\n   * @param _in RLP bytes32 value.\n   * @return Decoded bytes32.\n   */\n  function readBytes32(RLPItem memory _in) internal pure returns (bytes32) {\n    // instead of <= 33\n    require(_in.length < 33 + 1, \"Invalid RLP bytes32 value.\");\n\n    (uint256 itemOffset, uint256 itemLength, RLPItemType itemType) = _decodeLength(_in);\n\n    require(itemType == RLPItemType.DATA_ITEM, \"Invalid RLP bytes32 value.\");\n\n    uint256 ptr = _in.ptr + itemOffset;\n    bytes32 out;\n    assembly {\n      out := mload(ptr)\n\n      // Shift the bytes over to match the item size.\n      if lt(itemLength, 32) {\n        out := div(out, exp(256, sub(32, itemLength)))\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Reads an RLP bytes32 value into a bytes32.\n   * @param _in RLP bytes32 value.\n   * @return Decoded bytes32.\n   */\n  function readBytes32(bytes memory _in) internal pure returns (bytes32) {\n    return readBytes32(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP uint256 value into a uint256.\n   * @param _in RLP uint256 value.\n   * @return Decoded uint256.\n   */\n  function readUint256(RLPItem memory _in) internal pure returns (uint256) {\n    return uint256(readBytes32(_in));\n  }\n\n  /**\n   * Reads an RLP uint256 value into a uint256.\n   * @param _in RLP uint256 value.\n   * @return Decoded uint256.\n   */\n  function readUint256(bytes memory _in) internal pure returns (uint256) {\n    return readUint256(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP bool value into a bool.\n   * @param _in RLP bool value.\n   * @return Decoded bool.\n   */\n  function readBool(RLPItem memory _in) internal pure returns (bool) {\n    require(_in.length == 1, \"Invalid RLP boolean value.\");\n\n    uint256 ptr = _in.ptr;\n    uint256 out;\n    assembly {\n      out := byte(0, mload(ptr))\n    }\n\n    require(out == 0 || out == 1, \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\");\n\n    return out != 0;\n  }\n\n  /**\n   * Reads an RLP bool value into a bool.\n   * @param _in RLP bool value.\n   * @return Decoded bool.\n   */\n  function readBool(bytes memory _in) internal pure returns (bool) {\n    return readBool(toRLPItem(_in));\n  }\n\n  /**\n   * Reads an RLP address value into a address.\n   * @param _in RLP address value.\n   * @return Decoded address.\n   */\n  function readAddress(RLPItem memory _in) internal pure returns (address) {\n    if (_in.length == 1) {\n      return address(0);\n    }\n\n    require(_in.length == 21, \"Invalid RLP address value.\");\n\n    return address(uint160(readUint256(_in)));\n  }\n\n  /**\n   * Reads an RLP address value into a address.\n   * @param _in RLP address value.\n   * @return Decoded address.\n   */\n  function readAddress(bytes memory _in) internal pure returns (address) {\n    return readAddress(toRLPItem(_in));\n  }\n\n  /**\n   * Reads the raw bytes of an RLP item.\n   * @param _in RLP item to read.\n   * @return Raw RLP bytes.\n   */\n  function readRawBytes(RLPItem memory _in) internal pure returns (bytes memory) {\n    return _copy(_in);\n  }\n\n  /*********************\n   * Private Functions *\n   *********************/\n\n  /**\n   * Decodes the length of an RLP item.\n   * @param _in RLP item to decode.\n   * @return Offset of the encoded data.\n   * @return Length of the encoded data.\n   * @return RLP item type (LIST_ITEM or DATA_ITEM).\n   */\n  function _decodeLength(RLPItem memory _in)\n    private\n    pure\n    returns (\n      uint256,\n      uint256,\n      RLPItemType\n    )\n  {\n    require(_in.length > 0, \"RLP item cannot be null.\");\n\n    uint256 ptr = _in.ptr;\n    uint256 prefix;\n    assembly {\n      prefix := byte(0, mload(ptr))\n    }\n\n    if (prefix < 0x7f + 1) {\n      // Single byte.\n\n      return (0, 1, RLPItemType.DATA_ITEM);\n    } else if (prefix < 0xb7 + 1) {\n      // Short string.\n\n      // slither-disable-next-line variable-scope\n      uint256 strLen = prefix - 0x80;\n\n      require(_in.length > strLen, \"Invalid RLP short string.\");\n\n      return (1, strLen, RLPItemType.DATA_ITEM);\n    } else if (prefix < 0xbf + 1) {\n      // Long string.\n      uint256 lenOfStrLen = prefix - 0xb7;\n\n      require(_in.length > lenOfStrLen, \"Invalid RLP long string length.\");\n\n      uint256 strLen;\n      assembly {\n        // Pick out the string length.\n        strLen := div(mload(add(ptr, 1)), exp(256, sub(32, lenOfStrLen)))\n      }\n\n      require(_in.length > lenOfStrLen + strLen, \"Invalid RLP long string.\");\n\n      return (1 + lenOfStrLen, strLen, RLPItemType.DATA_ITEM);\n    } else if (prefix < 0xf7 + 1) {\n      // Short list.\n      // slither-disable-next-line variable-scope\n      uint256 listLen = prefix - 0xc0;\n\n      require(_in.length > listLen, \"Invalid RLP short list.\");\n\n      return (1, listLen, RLPItemType.LIST_ITEM);\n    } else {\n      // Long list.\n      uint256 lenOfListLen = prefix - 0xf7;\n\n      require(_in.length > lenOfListLen, \"Invalid RLP long list length.\");\n\n      uint256 listLen;\n      assembly {\n        // Pick out the list length.\n        listLen := div(mload(add(ptr, 1)), exp(256, sub(32, lenOfListLen)))\n      }\n\n      require(_in.length > lenOfListLen + listLen, \"Invalid RLP long list.\");\n\n      return (1 + lenOfListLen, listLen, RLPItemType.LIST_ITEM);\n    }\n  }\n\n  /**\n   * Copies the bytes from a memory location.\n   * @param _src Pointer to the location to read from.\n   * @param _offset Offset to start reading from.\n   * @param _length Number of bytes to read.\n   * @return Copied bytes.\n   */\n  function _copy(\n    uint256 _src,\n    uint256 _offset,\n    uint256 _length\n  ) private pure returns (bytes memory) {\n    bytes memory out = new bytes(_length);\n    if (out.length == 0) {\n      return out;\n    }\n\n    uint256 src = _src + _offset;\n    uint256 dest;\n    assembly {\n      dest := add(out, 32)\n    }\n\n    // Copy over as many complete words as we can.\n    for (uint256 i = 0; i < _length / 32; ) {\n      assembly {\n        mstore(dest, mload(src))\n      }\n\n      src += 32;\n      dest += 32;\n\n      unchecked {\n        ++i;\n      }\n    }\n\n    // Pick out the remaining bytes.\n    uint256 mask;\n    unchecked {\n      mask = 256**(32 - (_length % 32)) - 1;\n    }\n\n    assembly {\n      mstore(dest, or(and(mload(src), not(mask)), and(mload(dest), mask)))\n    }\n    return out;\n  }\n\n  /**\n   * Copies an RLP item into bytes.\n   * @param _in RLP item to copy.\n   * @return Copied bytes.\n   */\n  function _copy(RLPItem memory _in) private pure returns (bytes memory) {\n    return _copy(_in.ptr, 0, _in.length);\n  }\n}\n"},"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/* Library Imports */\nimport {MerkleTrie} from \"./MerkleTrie.sol\";\n\n/**\n * @title SecureMerkleTrie\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_SecureMerkleTrie.sol\n */\nlibrary SecureMerkleTrie {\n  /**********************\n   * Internal Functions *\n   **********************/\n\n  /**\n   * @notice Verifies a proof that a given key/value pair is present in the\n   * Merkle trie.\n   * @param _key Key of the node to search for, as a hex string.\n   * @param _value Value of the node to search for, as a hex string.\n   * @param _proof Merkle trie inclusion proof for the desired node. Unlike\n   * traditional Merkle trees, this proof is executed top-down and consists\n   * of a list of RLP-encoded nodes that make a path down to the target node.\n   * @param _root Known root of the Merkle trie. Used to verify that the\n   * included proof is correctly constructed.\n   * @return _verified `true` if the k/v pair exists in the trie, `false` otherwise.\n   */\n  function verifyInclusionProof(\n    bytes memory _key,\n    bytes memory _value,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _verified) {\n    bytes memory key = _getSecureKey(_key);\n    return MerkleTrie.verifyInclusionProof(key, _value, _proof, _root);\n  }\n\n  /**\n   * @notice Retrieves the value associated with a given key.\n   * @param _key Key to search for, as hex bytes.\n   * @param _proof Merkle trie inclusion proof for the key.\n   * @param _root Known root of the Merkle trie.\n   * @return _exists Whether or not the key exists.\n   * @return _value Value of the key if it exists.\n   */\n  function get(\n    bytes memory _key,\n    bytes memory _proof,\n    bytes32 _root\n  ) internal pure returns (bool _exists, bytes memory _value) {\n    bytes memory key = _getSecureKey(_key);\n    return MerkleTrie.get(key, _proof, _root);\n  }\n\n  /*********************\n   * Private Functions *\n   *********************/\n\n  /**\n   * Computes the secure counterpart to a key.\n   * @param _key Key to get a secure key from.\n   * @return _secureKey Secure version of the key.\n   */\n  function _getSecureKey(bytes memory _key) private pure returns (bytes memory _secureKey) {\n    return abi.encodePacked(keccak256(_key));\n  }\n}\n"},"contracts/messaging/connectors/optimism/OptimismHubConnector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {IRootManager} from \"../../interfaces/IRootManager.sol\";\nimport {OptimismAmb} from \"../../interfaces/ambs/optimism/OptimismAmb.sol\";\nimport {IStateCommitmentChain, L2MessageInclusionProof} from \"../../interfaces/ambs/optimism/IStateCommitmentChain.sol\";\n\nimport {TypedMemView} from \"../../../shared/libraries/TypedMemView.sol\";\n\nimport {HubConnector} from \"../HubConnector.sol\";\nimport {Connector} from \"../Connector.sol\";\n\nimport {PredeployAddresses} from \"./lib/PredeployAddresses.sol\";\nimport {OVMCodec} from \"./lib/OVMCodec.sol\";\nimport {SecureMerkleTrie} from \"./lib/SecureMerkleTrie.sol\";\n\nimport {BaseOptimism} from \"./BaseOptimism.sol\";\n\ncontract OptimismHubConnector is HubConnector, BaseOptimism {\n  // ============ Libraries ============\n  using TypedMemView for bytes;\n  using TypedMemView for bytes29;\n\n  // ============ Storage ============\n  IStateCommitmentChain public immutable stateCommitmentChain;\n\n  // NOTE: This is needed because we need to track the roots we've\n  // already sent across chains. When sending an optimism message, we send calldata\n  // for Connector.processMessage. At any point these messages could be processed\n  // before the timeout using `processFromRoot` or after the timeout using `process`\n  // we track the roots sent here to ensure we process each root once\n  mapping(bytes32 => bool) public processed;\n\n  // ============ Constructor ============\n  constructor(\n    uint32 _domain,\n    uint32 _mirrorDomain,\n    address _amb,\n    address _rootManager,\n    address _mirrorConnector,\n    address _stateCommitmentChain,\n    uint256 _gasCap\n  ) HubConnector(_domain, _mirrorDomain, _amb, _rootManager, _mirrorConnector) BaseOptimism(_gasCap) {\n    stateCommitmentChain = IStateCommitmentChain(_stateCommitmentChain);\n  }\n\n  // ============ Override Fns ============\n  function _verifySender(address _expected) internal view override returns (bool) {\n    return _verifySender(AMB, _expected);\n  }\n\n  /**\n   * @dev Sends `aggregateRoot` to messaging on l2\n   */\n  function _sendMessage(bytes memory _data, bytes memory _encodedData) internal override {\n    // Should always be dispatching the aggregate root\n    require(_data.length == 32, \"!length\");\n    // Get the calldata\n    bytes memory _calldata = abi.encodeWithSelector(Connector.processMessage.selector, _data);\n    // Dispatch message\n    OptimismAmb(AMB).sendMessage(mirrorConnector, _calldata, uint32(gasCap));\n  }\n\n  // DO NOT override _processMessage, should revert from `Connector` class. All messages must use the\n  // `processMessageFromRoot` flow.\n\n  /**\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L165\n   */\n  function processMessageFromRoot(\n    address _target,\n    address _sender,\n    bytes memory _message,\n    uint256 _messageNonce,\n    L2MessageInclusionProof memory _proof\n  ) external {\n    // verify the sender is the l2 contract\n    require(_sender == mirrorConnector, \"!mirrorConnector\");\n\n    // verify the target is this contract\n    require(_target == address(this), \"!this\");\n\n    // Get the encoded data\n    bytes memory xDomainData = _encodeXDomainCalldata(_target, _sender, _message, _messageNonce);\n\n    require(_verifyXDomainMessage(xDomainData, _proof), \"!proof\");\n\n    // NOTE: optimism seems to pad the calldata sent in to include more than the expected\n    // 36 bytes, i.e. in this transaction:\n    // https://blockscout.com/optimism/goerli/tx/0x440fda036d28eb547394a8689af90c5342a00a8ca2ab5117f2b85f54d1416ddd/logs\n    // the corresponding _message is:\n    // 0x4ff746f60000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002027ae5ba08d7291c96c8cbddcc148bf48a6d68c7974b94356f53754ef6171d757\n    //\n    // this means the length check and byte parsing used in the `ArbitrumHubConnector` would\n    // not work here. Instead, take the back 32 bytes of the string\n\n    // NOTE: TypedMemView only loads 32-byte chunks onto stack, which is fine in this case\n    bytes29 _view = _message.ref(0);\n    bytes32 root = _view.index(_view.len() - 32, 32);\n\n    if (!processed[root]) {\n      // set root to processed\n      processed[root] = true;\n      // update the root on the root manager\n      IRootManager(ROOT_MANAGER).aggregate(MIRROR_DOMAIN, root);\n\n      emit MessageProcessed(abi.encode(root), msg.sender);\n    } // otherwise root was already sent to root manager\n  }\n\n  /**\n   * Verifies that the given message is valid.\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L283-L288\n   * @param _xDomainCalldata Calldata to verify.\n   * @param _proof Inclusion proof for the message.\n   * @return Whether or not the provided message is valid.\n   */\n  function _verifyXDomainMessage(bytes memory _xDomainCalldata, L2MessageInclusionProof memory _proof)\n    internal\n    view\n    returns (bool)\n  {\n    return (_verifyStateRootProof(_proof) && _verifyStorageProof(_xDomainCalldata, _proof));\n  }\n\n  /**\n   * Verifies that the state root within an inclusion proof is valid.\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L295-L311\n   * @param _proof Message inclusion proof.\n   * @return Whether or not the provided proof is valid.\n   */\n  function _verifyStateRootProof(L2MessageInclusionProof memory _proof) internal view returns (bool) {\n    return\n      stateCommitmentChain.verifyStateCommitment(_proof.stateRoot, _proof.stateRootBatchHeader, _proof.stateRootProof);\n  }\n\n  /**\n   * Verifies that the storage proof within an inclusion proof is valid.\n   * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L313-L357\n   * @param _xDomainCalldata Encoded message calldata.\n   * @param _proof Message inclusion proof.\n   * @return Whether or not the provided proof is valid.\n   */\n  function _verifyStorageProof(bytes memory _xDomainCalldata, L2MessageInclusionProof memory _proof)\n    internal\n    pure\n    returns (bool)\n  {\n    bytes32 storageKey = keccak256(\n      abi.encodePacked(\n        keccak256(abi.encodePacked(_xDomainCalldata, PredeployAddresses.L2_CROSS_DOMAIN_MESSENGER)),\n        uint256(0)\n      )\n    );\n\n    (bool exists, bytes memory encodedMessagePassingAccount) = SecureMerkleTrie.get(\n      abi.encodePacked(PredeployAddresses.L2_TO_L1_MESSAGE_PASSER),\n      _proof.stateTrieWitness,\n      _proof.stateRoot\n    );\n\n    require(exists == true, \"Message passing predeploy has not been initialized or invalid proof provided.\");\n\n    OVMCodec.EVMAccount memory account = OVMCodec.decodeEVMAccount(encodedMessagePassingAccount);\n\n    bool ret = SecureMerkleTrie.verifyInclusionProof(\n        abi.encodePacked(storageKey),\n        abi.encodePacked(uint8(1)),\n        _proof.storageTrieWitness,\n        account.storageRoot\n      );\n      return true;\n  }\n\n  /**\n   * Generates the correct cross domain calldata for a message.\n   * @dev taken from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/bridge/Lib_CrossDomainUtils.sol\n   * @param _target Target contract address.\n   * @param _sender Message sender address.\n   * @param _message Message to send to the target.\n   * @param _messageNonce Nonce for the provided message.\n   * @return ABI encoded cross domain calldata.\n   */\n  function _encodeXDomainCalldata(\n    address _target,\n    address _sender,\n    bytes memory _message,\n    uint256 _messageNonce\n  ) internal pure returns (bytes memory) {\n    return\n      abi.encodeWithSignature(\"relayMessage(address,address,bytes,uint256)\", _target, _sender, _message, _messageNonce);\n  }\n}\n"},"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n// modified from: https://github.com/ethereum-optimism/optimism/blob/fcfcf6e7e69801e63904ec53815db01a8d45dcac/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol#L34-L40\nstruct ChainBatchHeader {\n  uint256 batchIndex;\n  bytes32 batchRoot;\n  uint256 batchSize;\n  uint256 prevTotalElements;\n  bytes extraData;\n}\n\n// modified from: https://github.com/ethereum-optimism/optimism/blob/fcfcf6e7e69801e63904ec53815db01a8d45dcac/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol#L42-L45\nstruct ChainInclusionProof {\n  uint256 index;\n  bytes32[] siblings;\n}\n\n// modified from: https://github.com/ethereum-optimism/optimism/blob/fcfcf6e7e69801e63904ec53815db01a8d45dcac/packages/contracts/contracts/L1/messaging/IL1CrossDomainMessenger.sol#L18-L24\nstruct L2MessageInclusionProof {\n  bytes32 stateRoot;\n  ChainBatchHeader stateRootBatchHeader;\n  ChainInclusionProof stateRootProof;\n  bytes stateTrieWitness;\n  bytes storageTrieWitness;\n}\n\n/**\n * @title IStateCommitmentChain\n *\n * @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/IStateCommitmentChain.sol\n */\ninterface IStateCommitmentChain {\n  /**********\n   * Events *\n   **********/\n\n  event StateBatchAppended(\n    uint256 indexed _batchIndex,\n    bytes32 _batchRoot,\n    uint256 _batchSize,\n    uint256 _prevTotalElements,\n    bytes _extraData\n  );\n\n  event StateBatchDeleted(uint256 indexed _batchIndex, bytes32 _batchRoot);\n\n  /********************\n   * Public Functions *\n   ********************/\n\n  /**\n   * Retrieves the total number of elements submitted.\n   * @return _totalElements Total submitted elements.\n   */\n  function getTotalElements() external view returns (uint256 _totalElements);\n\n  /**\n   * Retrieves the total number of batches submitted.\n   * @return _totalBatches Total submitted batches.\n   */\n  function getTotalBatches() external view returns (uint256 _totalBatches);\n\n  /**\n   * Retrieves the timestamp of the last batch submitted by the sequencer.\n   * @return _lastSequencerTimestamp Last sequencer batch timestamp.\n   */\n  function getLastSequencerTimestamp() external view returns (uint256 _lastSequencerTimestamp);\n\n  /**\n   * Appends a batch of state roots to the chain.\n   * @param _batch Batch of state roots.\n   * @param _shouldStartAtElement Index of the element at which this batch should start.\n   */\n  function appendStateBatch(bytes32[] calldata _batch, uint256 _shouldStartAtElement) external;\n\n  /**\n   * Deletes all state roots after (and including) a given batch.\n   * @param _batchHeader Header of the batch to start deleting from.\n   */\n  function deleteStateBatch(ChainBatchHeader memory _batchHeader) external;\n\n  /**\n   * Verifies a batch inclusion proof.\n   * @param _element Hash of the element to verify a proof for.\n   * @param _batchHeader Header of the batch in which the element was included.\n   * @param _proof Merkle inclusion proof for the element.\n   */\n  function verifyStateCommitment(\n    bytes32 _element,\n    ChainBatchHeader memory _batchHeader,\n    ChainInclusionProof memory _proof\n  ) external view returns (bool _verified);\n\n  /**\n   * Checks whether a given batch is still inside its fraud proof window.\n   * @param _batchHeader Header of the batch to check.\n   * @return _inside Whether or not the batch is inside the fraud proof window.\n   */\n  function insideFraudProofWindow(ChainBatchHeader memory _batchHeader) external view returns (bool _inside);\n}\n"},"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\n/**\n * @dev The optimism bridge shares both of these functions, but it is important\n * to note that when going from L2 -> L1, the message cannot be processed by the\n * AMB until the challenge period elapses.\n *\n * HOWEVER, before the challenge elapses, you can read the state of the L2 as it is\n * placed on mainnet. By processing data from the L2 state, we are able to \"circumvent\"\n * this delay to a reasonable degree.\n *\n * This means that for messages going L1 -> L2, you can call \"processMessage\" and expect\n * the call to be executed to pass up the aggregate root. When going from L2 -> L1, you\n * must read the root from the L2 state\n *\n * L2 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol\n * L1 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol\n */\ninterface OptimismAmb {\n  function sendMessage(\n    address _target,\n    bytes memory _message,\n    uint32 _gasLimit\n  ) external;\n\n  function xDomainMessageSender() external view returns (address);\n}\n"},"contracts/messaging/interfaces/IConnector.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nimport {IProposedOwnable} from \"../../shared/interfaces/IProposedOwnable.sol\";\n\n/**\n * @notice This interface is what the Connext contract will send and receive messages through.\n * The messaging layer should conform to this interface, and should be interchangeable (i.e.\n * could be Nomad or a generic AMB under the hood).\n *\n * @dev This uses the nomad format to ensure nomad can be added in as it comes back online.\n *\n * Flow from transfer from polygon to optimism:\n * 1. User calls `xcall` with destination specified\n * 2. This will swap in to the bridge assets\n * 3. The swapped assets will get burned\n * 4. The Connext contract will call `dispatch` on the messaging contract to add the transfer\n *    to the root\n * 5. [At some time interval] Relayers call `send` to send the current root from polygon to\n *    mainnet. This is done on all \"spoke\" domains.\n * 6. [At some time interval] Relayers call `propagate` [better name] on mainnet, this generates a new merkle\n *    root from all of the AMBs\n *    - This function must be able to read root data from all AMBs and aggregate them into a single merkle\n *      tree root\n *    - Will send the mixed root from all chains back through the respective AMBs to all other chains\n * 7. AMB will call `update` to update the latest root on the messaging contract on spoke domains\n * 8. [At any point] Relayers can call `proveAndProcess` to prove inclusion of dispatched message, and call\n *    process on the `Connext` contract\n * 9. Takes minted bridge tokens and credits the LP\n *\n * AMB requirements:\n * - Access `msg.sender` both from mainnet -> spoke and vice versa\n * - Ability to read *our root* from the AMB\n *\n * AMBs:\n * - PoS bridge from polygon\n * - arbitrum bridge\n * - optimism bridge\n * - gnosis chain\n * - bsc (use multichain for messaging)\n */\ninterface IConnector is IProposedOwnable {\n  // ============ Events ============\n  /**\n   * @notice Emitted whenever a message is successfully sent over an AMB\n   * @param data The contents of the message\n   * @param encodedData Data used to send the message; specific to connector\n   * @param caller Who called the function (sent the message)\n   */\n  event MessageSent(bytes data, bytes encodedData, address caller);\n\n  /**\n   * @notice Emitted whenever a message is successfully received over an AMB\n   * @param data The contents of the message\n   * @param caller Who called the function\n   */\n  event MessageProcessed(bytes data, address caller);\n\n  // ============ Public fns ============\n\n  function processMessage(bytes memory _data) external;\n\n  function verifySender(address _expected) external returns (bool);\n}\n"},"contracts/messaging/interfaces/IRootManager.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\ninterface IRootManager {\n  /**\n   * @notice This is called by relayers to generate + send the mixed root from mainnet via AMB to\n   * spoke domains.\n   * @dev This must read information for the root from the registered AMBs.\n   */\n  function propagate(\n    address[] calldata _connectors,\n    uint256[] calldata _fees,\n    bytes[] memory _encodedData\n  ) external payable;\n\n  /**\n   * @notice Called by the connectors for various domains on the hub to aggregate their latest\n   * inbound root.\n   * @dev This must read information for the root from the registered AMBs\n   */\n  function aggregate(uint32 _domain, bytes32 _outbound) external;\n}\n"},"contracts/shared/interfaces/IProposedOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\n/**\n * @title IProposedOwnable\n * @notice Defines a minimal interface for ownership with a two step proposal and acceptance\n * process\n */\ninterface IProposedOwnable {\n  /**\n   * @dev This emits when change in ownership of a contract is proposed.\n   */\n  event OwnershipProposed(address indexed proposedOwner);\n\n  /**\n   * @dev This emits when ownership of a contract changes.\n   */\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @notice Get the address of the owner\n   * @return owner_ The address of the owner.\n   */\n  function owner() external view returns (address owner_);\n\n  /**\n   * @notice Get the address of the proposed owner\n   * @return proposed_ The address of the proposed.\n   */\n  function proposed() external view returns (address proposed_);\n\n  /**\n   * @notice Set the address of the proposed owner of the contract\n   * @param newlyProposed The proposed new owner of the contract\n   */\n  function proposeNewOwner(address newlyProposed) external;\n\n  /**\n   * @notice Set the address of the proposed owner of the contract\n   */\n  function acceptProposedOwner() external;\n}\n"},"contracts/shared/libraries/TypedMemView.sol":{"content":"// SPDX-License-Identifier: MIT OR Apache-2.0\npragma solidity 0.8.17;\n\nlibrary TypedMemView {\n  // Why does this exist?\n  // the solidity `bytes memory` type has a few weaknesses.\n  // 1. You can't index ranges effectively\n  // 2. You can't slice without copying\n  // 3. The underlying data may represent any type\n  // 4. Solidity never deallocates memory, and memory costs grow\n  //    superlinearly\n\n  // By using a memory view instead of a `bytes memory` we get the following\n  // advantages:\n  // 1. Slices are done on the stack, by manipulating the pointer\n  // 2. We can index arbitrary ranges and quickly convert them to stack types\n  // 3. We can insert type info into the pointer, and typecheck at runtime\n\n  // This makes `TypedMemView` a useful tool for efficient zero-copy\n  // algorithms.\n\n  // Why bytes29?\n  // We want to avoid confusion between views, digests, and other common\n  // types so we chose a large and uncommonly used odd number of bytes\n  //\n  // Note that while bytes are left-aligned in a word, integers and addresses\n  // are right-aligned. This means when working in assembly we have to\n  // account for the 3 unused bytes on the righthand side\n  //\n  // First 5 bytes are a type flag.\n  // - ff_ffff_fffe is reserved for unknown type.\n  // - ff_ffff_ffff is reserved for invalid types/errors.\n  // next 12 are memory address\n  // next 12 are len\n  // bottom 3 bytes are empty\n\n  // Assumptions:\n  // - non-modification of memory.\n  // - No Solidity updates\n  // - - wrt free mem point\n  // - - wrt bytes representation in memory\n  // - - wrt memory addressing in general\n\n  // Usage:\n  // - create type constants\n  // - use `assertType` for runtime type assertions\n  // - - unfortunately we can't do this at compile time yet :(\n  // - recommended: implement modifiers that perform type checking\n  // - - e.g.\n  // - - `uint40 constant MY_TYPE = 3;`\n  // - - ` modifer onlyMyType(bytes29 myView) { myView.assertType(MY_TYPE); }`\n  // - instantiate a typed view from a bytearray using `ref`\n  // - use `index` to inspect the contents of the view\n  // - use `slice` to create smaller views into the same memory\n  // - - `slice` can increase the offset\n  // - - `slice can decrease the length`\n  // - - must specify the output type of `slice`\n  // - - `slice` will return a null view if you try to overrun\n  // - - make sure to explicitly check for this with `notNull` or `assertType`\n  // - use `equal` for typed comparisons.\n\n  // The null view\n  bytes29 public constant NULL = hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\n  uint256 constant LOW_12_MASK = 0xffffffffffffffffffffffff;\n  uint256 constant TWENTY_SEVEN_BYTES = 8 * 27;\n  uint256 private constant _27_BYTES_IN_BITS = 8 * 27; // <--- also used this named constant where ever 216 is used.\n  uint256 private constant LOW_27_BYTES_MASK = 0xffffffffffffffffffffffffffffffffffffffffffffffffffffff; // (1 << _27_BYTES_IN_BITS) - 1;\n\n  // ========== Custom Errors ===========\n\n  error TypedMemView__assertType_typeAssertionFailed(uint256 actual, uint256 expected);\n  error TypedMemView__index_overrun(uint256 loc, uint256 len, uint256 index, uint256 slice);\n  error TypedMemView__index_indexMoreThan32Bytes();\n  error TypedMemView__unsafeCopyTo_nullPointer();\n  error TypedMemView__unsafeCopyTo_invalidPointer();\n  error TypedMemView__unsafeCopyTo_identityOOG();\n  error TypedMemView__assertValid_validityAssertionFailed();\n\n  /**\n   * @notice          Changes the endianness of a uint256.\n   * @dev             https://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel\n   * @param _b        The unsigned integer to reverse\n   * @return          v - The reversed value\n   */\n  function reverseUint256(uint256 _b) internal pure returns (uint256 v) {\n    v = _b;\n\n    // swap bytes\n    v =\n      ((v >> 8) & 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF) |\n      ((v & 0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF) << 8);\n    // swap 2-byte long pairs\n    v =\n      ((v >> 16) & 0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) |\n      ((v & 0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF) << 16);\n    // swap 4-byte long pairs\n    v =\n      ((v >> 32) & 0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) |\n      ((v & 0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF) << 32);\n    // swap 8-byte long pairs\n    v =\n      ((v >> 64) & 0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) |\n      ((v & 0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF) << 64);\n    // swap 16-byte long pairs\n    v = (v >> 128) | (v << 128);\n  }\n\n  /**\n   * @notice      Create a mask with the highest `_len` bits set.\n   * @param _len  The length\n   * @return      mask - The mask\n   */\n  function leftMask(uint8 _len) private pure returns (uint256 mask) {\n    // ugly. redo without assembly?\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      mask := sar(sub(_len, 1), 0x8000000000000000000000000000000000000000000000000000000000000000)\n    }\n  }\n\n  /**\n   * @notice      Return the null view.\n   * @return      bytes29 - The null view\n   */\n  function nullView() internal pure returns (bytes29) {\n    return NULL;\n  }\n\n  /**\n   * @notice      Check if the view is null.\n   * @return      bool - True if the view is null\n   */\n  function isNull(bytes29 memView) internal pure returns (bool) {\n    return memView == NULL;\n  }\n\n  /**\n   * @notice      Check if the view is not null.\n   * @return      bool - True if the view is not null\n   */\n  function notNull(bytes29 memView) internal pure returns (bool) {\n    return !isNull(memView);\n  }\n\n  /**\n   * @notice          Check if the view is of a invalid type and points to a valid location\n   *                  in memory.\n   * @dev             We perform this check by examining solidity's unallocated memory\n   *                  pointer and ensuring that the view's upper bound is less than that.\n   * @param memView   The view\n   * @return          ret - True if the view is invalid\n   */\n  function isNotValid(bytes29 memView) internal pure returns (bool ret) {\n    if (typeOf(memView) == 0xffffffffff) {\n      return true;\n    }\n    uint256 _end = end(memView);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ret := gt(_end, mload(0x40))\n    }\n  }\n\n  /**\n   * @notice          Require that a typed memory view be valid.\n   * @dev             Returns the view for easy chaining.\n   * @param memView   The view\n   * @return          bytes29 - The validated view\n   */\n  function assertValid(bytes29 memView) internal pure returns (bytes29) {\n    if (isNotValid(memView)) revert TypedMemView__assertValid_validityAssertionFailed();\n    return memView;\n  }\n\n  /**\n   * @notice          Return true if the memview is of the expected type. Otherwise false.\n   * @param memView   The view\n   * @param _expected The expected type\n   * @return          bool - True if the memview is of the expected type\n   */\n  function isType(bytes29 memView, uint40 _expected) internal pure returns (bool) {\n    return typeOf(memView) == _expected;\n  }\n\n  /**\n   * @notice          Require that a typed memory view has a specific type.\n   * @dev             Returns the view for easy chaining.\n   * @param memView   The view\n   * @param _expected The expected type\n   * @return          bytes29 - The view with validated type\n   */\n  function assertType(bytes29 memView, uint40 _expected) internal pure returns (bytes29) {\n    if (!isType(memView, _expected)) {\n      revert TypedMemView__assertType_typeAssertionFailed(uint256(typeOf(memView)), uint256(_expected));\n    }\n    return memView;\n  }\n\n  /**\n   * @notice          Return an identical view with a different type.\n   * @param memView   The view\n   * @param _newType  The new type\n   * @return          newView - The new view with the specified type\n   */\n  function castTo(bytes29 memView, uint40 _newType) internal pure returns (bytes29 newView) {\n    // then | in the new type\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // shift off the top 5 bytes\n      newView := or(and(memView, LOW_27_BYTES_MASK), shl(_27_BYTES_IN_BITS, _newType))\n    }\n  }\n\n  /**\n   * @notice          Unsafe raw pointer construction. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @dev             Unsafe raw pointer construction. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @param _type     The type\n   * @param _loc      The memory address\n   * @param _len      The length\n   * @return          newView - The new view with the specified type, location and length\n   */\n  function unsafeBuildUnchecked(\n    uint256 _type,\n    uint256 _loc,\n    uint256 _len\n  ) private pure returns (bytes29 newView) {\n    uint256 _uint96Bits = 96;\n    uint256 _emptyBits = 24;\n\n    // Cast params to ensure input is of correct length\n    uint96 len_ = uint96(_len);\n    uint96 loc_ = uint96(_loc);\n    require(len_ == _len && loc_ == _loc, \"!truncated\");\n\n    assembly {\n      // solium-disable-previous-line security/no-inline-assembly\n      newView := shl(_uint96Bits, _type) // insert type\n      newView := shl(_uint96Bits, or(newView, loc_)) // insert loc\n      newView := shl(_emptyBits, or(newView, len_)) // empty bottom 3 bytes\n    }\n  }\n\n  /**\n   * @notice          Instantiate a new memory view. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @dev             Instantiate a new memory view. This should generally not be called\n   *                  directly. Prefer `ref` wherever possible.\n   * @param _type     The type\n   * @param _loc      The memory address\n   * @param _len      The length\n   * @return          newView - The new view with the specified type, location and length\n   */\n  function build(\n    uint256 _type,\n    uint256 _loc,\n    uint256 _len\n  ) internal pure returns (bytes29 newView) {\n    uint256 _end = _loc + _len;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      if gt(_end, mload(0x40)) {\n        _end := 0\n      }\n    }\n    if (_end == 0) {\n      return NULL;\n    }\n    newView = unsafeBuildUnchecked(_type, _loc, _len);\n  }\n\n  /**\n   * @notice          Instantiate a memory view from a byte array.\n   * @dev             Note that due to Solidity memory representation, it is not possible to\n   *                  implement a deref, as the `bytes` type stores its len in memory.\n   * @param arr       The byte array\n   * @param newType   The type\n   * @return          bytes29 - The memory view\n   */\n  function ref(bytes memory arr, uint40 newType) internal pure returns (bytes29) {\n    uint256 _len = arr.length;\n\n    uint256 _loc;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      _loc := add(arr, 0x20) // our view is of the data, not the struct\n    }\n\n    return build(newType, _loc, _len);\n  }\n\n  /**\n   * @notice          Return the associated type information.\n   * @param memView   The memory view\n   * @return          _type - The type associated with the view\n   */\n  function typeOf(bytes29 memView) internal pure returns (uint40 _type) {\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // 216 == 256 - 40\n      _type := shr(_27_BYTES_IN_BITS, memView) // shift out lower 24 bytes\n    }\n  }\n\n  /**\n   * @notice          Return the memory address of the underlying bytes.\n   * @param memView   The view\n   * @return          _loc - The memory address\n   */\n  function loc(bytes29 memView) internal pure returns (uint96 _loc) {\n    uint256 _mask = LOW_12_MASK; // assembly can't use globals\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // 120 bits = 12 bytes (the encoded loc) + 3 bytes (empty low space)\n      _loc := and(shr(120, memView), _mask)\n    }\n  }\n\n  /**\n   * @notice          The number of memory words this memory view occupies, rounded up.\n   * @param memView   The view\n   * @return          uint256 - The number of memory words\n   */\n  function words(bytes29 memView) internal pure returns (uint256) {\n    return (uint256(len(memView)) + 31) / 32;\n  }\n\n  /**\n   * @notice          The in-memory footprint of a fresh copy of the view.\n   * @param memView   The view\n   * @return          uint256 - The in-memory footprint of a fresh copy of the view.\n   */\n  function footprint(bytes29 memView) internal pure returns (uint256) {\n    return words(memView) * 32;\n  }\n\n  /**\n   * @notice          The number of bytes of the view.\n   * @param memView   The view\n   * @return          _len - The length of the view\n   */\n  function len(bytes29 memView) internal pure returns (uint96 _len) {\n    uint256 _mask = LOW_12_MASK; // assembly can't use globals\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      _len := and(shr(24, memView), _mask)\n    }\n  }\n\n  /**\n   * @notice          Returns the endpoint of `memView`.\n   * @param memView   The view\n   * @return          uint256 - The endpoint of `memView`\n   */\n  function end(bytes29 memView) internal pure returns (uint256) {\n    unchecked {\n      return loc(memView) + len(memView);\n    }\n  }\n\n  /**\n   * @notice          Safe slicing without memory modification.\n   * @param memView   The view\n   * @param _index    The start index\n   * @param _len      The length\n   * @param newType   The new type\n   * @return          bytes29 - The new view\n   */\n  function slice(\n    bytes29 memView,\n    uint256 _index,\n    uint256 _len,\n    uint40 newType\n  ) internal pure returns (bytes29) {\n    uint256 _loc = loc(memView);\n\n    // Ensure it doesn't overrun the view\n    if (_loc + _index + _len > end(memView)) {\n      return NULL;\n    }\n\n    _loc = _loc + _index;\n    return build(newType, _loc, _len);\n  }\n\n  /**\n   * @notice          Shortcut to `slice`. Gets a view representing the first `_len` bytes.\n   * @param memView   The view\n   * @param _len      The length\n   * @param newType   The new type\n   * @return          bytes29 - The new view\n   */\n  function prefix(\n    bytes29 memView,\n    uint256 _len,\n    uint40 newType\n  ) internal pure returns (bytes29) {\n    return slice(memView, 0, _len, newType);\n  }\n\n  /**\n   * @notice          Shortcut to `slice`. Gets a view representing the last `_len` byte.\n   * @param memView   The view\n   * @param _len      The length\n   * @param newType   The new type\n   * @return          bytes29 - The new view\n   */\n  function postfix(\n    bytes29 memView,\n    uint256 _len,\n    uint40 newType\n  ) internal pure returns (bytes29) {\n    return slice(memView, uint256(len(memView)) - _len, _len, newType);\n  }\n\n  /**\n   * @notice          Load up to 32 bytes from the view onto the stack.\n   * @dev             Returns a bytes32 with only the `_bytes` highest bytes set.\n   *                  This can be immediately cast to a smaller fixed-length byte array.\n   *                  To automatically cast to an integer, use `indexUint`.\n   * @param memView   The view\n   * @param _index    The index\n   * @param _bytes    The bytes\n   * @return          result - The 32 byte result\n   */\n  function index(\n    bytes29 memView,\n    uint256 _index,\n    uint8 _bytes\n  ) internal pure returns (bytes32 result) {\n    if (_bytes == 0) {\n      return bytes32(0);\n    }\n    if (_index + _bytes > len(memView)) {\n      // \"TypedMemView/index - Overran the view. Slice is at {loc} with length {len}. Attempted to index at offset {index} with length {slice},\n      revert TypedMemView__index_overrun(loc(memView), len(memView), _index, uint256(_bytes));\n    }\n    if (_bytes > 32) revert TypedMemView__index_indexMoreThan32Bytes();\n\n    uint8 bitLength;\n    unchecked {\n      bitLength = _bytes * 8;\n    }\n    uint256 _loc = loc(memView);\n    uint256 _mask = leftMask(bitLength);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      result := and(mload(add(_loc, _index)), _mask)\n    }\n  }\n\n  /**\n   * @notice          Parse an unsigned integer from the view at `_index`.\n   * @dev             Requires that the view have >= `_bytes` bytes following that index.\n   * @param memView   The view\n   * @param _index    The index\n   * @param _bytes    The bytes\n   * @return          result - The unsigned integer\n   */\n  function indexUint(\n    bytes29 memView,\n    uint256 _index,\n    uint8 _bytes\n  ) internal pure returns (uint256 result) {\n    return uint256(index(memView, _index, _bytes)) >> ((32 - _bytes) * 8);\n  }\n\n  /**\n   * @notice          Parse an unsigned integer from LE bytes.\n   * @param memView   The view\n   * @param _index    The index\n   * @param _bytes    The bytes\n   * @return          result - The unsigned integer\n   */\n  function indexLEUint(\n    bytes29 memView,\n    uint256 _index,\n    uint8 _bytes\n  ) internal pure returns (uint256 result) {\n    return reverseUint256(uint256(index(memView, _index, _bytes)));\n  }\n\n  /**\n   * @notice          Parse an address from the view at `_index`. Requires that the view have >= 20 bytes\n   *                  following that index.\n   * @param memView   The view\n   * @param _index    The index\n   * @return          address - The address\n   */\n  function indexAddress(bytes29 memView, uint256 _index) internal pure returns (address) {\n    return address(uint160(indexUint(memView, _index, 20)));\n  }\n\n  /**\n   * @notice          Return the keccak256 hash of the underlying memory\n   * @param memView   The view\n   * @return          digest - The keccak256 hash of the underlying memory\n   */\n  function keccak(bytes29 memView) internal pure returns (bytes32 digest) {\n    uint256 _loc = loc(memView);\n    uint256 _len = len(memView);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      digest := keccak256(_loc, _len)\n    }\n  }\n\n  /**\n   * @notice          Return true if the underlying memory is equal. Else false.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - True if the underlying memory is equal\n   */\n  function untypedEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return (loc(left) == loc(right) && len(left) == len(right)) || keccak(left) == keccak(right);\n  }\n\n  /**\n   * @notice          Return false if the underlying memory is equal. Else true.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - False if the underlying memory is equal\n   */\n  function untypedNotEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return !untypedEqual(left, right);\n  }\n\n  /**\n   * @notice          Compares type equality.\n   * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - True if the types are the same\n   */\n  function equal(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return left == right || (typeOf(left) == typeOf(right) && keccak(left) == keccak(right));\n  }\n\n  /**\n   * @notice          Compares type inequality.\n   * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n   * @param left      The first view\n   * @param right     The second view\n   * @return          bool - True if the types are not the same\n   */\n  function notEqual(bytes29 left, bytes29 right) internal pure returns (bool) {\n    return !equal(left, right);\n  }\n\n  /**\n   * @notice          Copy the view to a location, return an unsafe memory reference\n   * @dev             Super Dangerous direct memory access.\n   *\n   *                  This reference can be overwritten if anything else modifies memory (!!!).\n   *                  As such it MUST be consumed IMMEDIATELY.\n   *                  This function is private to prevent unsafe usage by callers.\n   * @param memView   The view\n   * @param _newLoc   The new location\n   * @return          written - the unsafe memory reference\n   */\n  function unsafeCopyTo(bytes29 memView, uint256 _newLoc) private view returns (bytes29 written) {\n    if (isNull(memView)) revert TypedMemView__unsafeCopyTo_nullPointer();\n    if (isNotValid(memView)) revert TypedMemView__unsafeCopyTo_invalidPointer();\n\n    uint256 _len = len(memView);\n    uint256 _oldLoc = loc(memView);\n\n    uint256 ptr;\n    bool res;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40)\n      // revert if we're writing in occupied memory\n      if gt(ptr, _newLoc) {\n        revert(0x60, 0x20) // empty revert message\n      }\n\n      // use the identity precompile to copy\n      // guaranteed not to fail, so pop the success\n      res := staticcall(gas(), 4, _oldLoc, _len, _newLoc, _len)\n    }\n    if (!res) revert TypedMemView__unsafeCopyTo_identityOOG();\n    written = unsafeBuildUnchecked(typeOf(memView), _newLoc, _len);\n  }\n\n  /**\n   * @notice          Copies the referenced memory to a new loc in memory, returning a `bytes` pointing to\n   *                  the new memory\n   * @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n   * @param memView   The view\n   * @return          ret - The view pointing to the new memory\n   */\n  function clone(bytes29 memView) internal view returns (bytes memory ret) {\n    uint256 ptr;\n    uint256 _len = len(memView);\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40) // load unused memory pointer\n      ret := ptr\n    }\n    unchecked {\n      unsafeCopyTo(memView, ptr + 0x20);\n    }\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      mstore(0x40, add(add(ptr, _len), 0x20)) // write new unused pointer\n      mstore(ptr, _len) // write len of new array (in bytes)\n    }\n  }\n\n  /**\n   * @notice          Join the views in memory, return an unsafe reference to the memory.\n   * @dev             Super Dangerous direct memory access.\n   *\n   *                  This reference can be overwritten if anything else modifies memory (!!!).\n   *                  As such it MUST be consumed IMMEDIATELY.\n   *                  This function is private to prevent unsafe usage by callers.\n   * @param memViews  The views\n   * @return          unsafeView - The conjoined view pointing to the new memory\n   */\n  function unsafeJoin(bytes29[] memory memViews, uint256 _location) private view returns (bytes29 unsafeView) {\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      let ptr := mload(0x40)\n      // revert if we're writing in occupied memory\n      if gt(ptr, _location) {\n        revert(0x60, 0x20) // empty revert message\n      }\n    }\n\n    uint256 _offset = 0;\n    uint256 _len = memViews.length;\n    for (uint256 i = 0; i < _len; ) {\n      bytes29 memView = memViews[i];\n      unchecked {\n        unsafeCopyTo(memView, _location + _offset);\n        _offset += len(memView);\n        ++i;\n      }\n    }\n    unsafeView = unsafeBuildUnchecked(0, _location, _offset);\n  }\n\n  /**\n   * @notice          Produce the keccak256 digest of the concatenated contents of multiple views.\n   * @param memViews  The views\n   * @return          bytes32 - The keccak256 digest\n   */\n  function joinKeccak(bytes29[] memory memViews) internal view returns (bytes32) {\n    uint256 ptr;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40) // load unused memory pointer\n    }\n    return keccak(unsafeJoin(memViews, ptr));\n  }\n\n  /**\n   * @notice          copies all views, joins them into a new bytearray.\n   * @param memViews  The views\n   * @return          ret - The new byte array\n   */\n  function join(bytes29[] memory memViews) internal view returns (bytes memory ret) {\n    uint256 ptr;\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      ptr := mload(0x40) // load unused memory pointer\n    }\n\n    bytes29 _newView;\n    unchecked {\n      _newView = unsafeJoin(memViews, ptr + 0x20);\n    }\n    uint256 _written = len(_newView);\n    uint256 _footprint = footprint(_newView);\n\n    assembly {\n      // solhint-disable-previous-line no-inline-assembly\n      // store the legnth\n      mstore(ptr, _written)\n      // new pointer is old + 0x20 + the footprint of the body\n      mstore(0x40, add(add(ptr, _footprint), 0x20))\n      ret := ptr\n    }\n  }\n}\n"},"contracts/shared/ProposedOwnable.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.8.17;\n\nimport {IProposedOwnable} from \"./interfaces/IProposedOwnable.sol\";\n\n/**\n * @title ProposedOwnable\n * @notice Contract module which provides a basic access control mechanism,\n * where there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed via a two step process:\n * 1. Call `proposeOwner`\n * 2. Wait out the delay period\n * 3. Call `acceptOwner`\n *\n * @dev This module is used through inheritance. It will make available the\n * modifier `onlyOwner`, which can be applied to your functions to restrict\n * their use to the owner.\n *\n * @dev The majority of this code was taken from the openzeppelin Ownable\n * contract\n *\n */\nabstract contract ProposedOwnable is IProposedOwnable {\n  // ========== Custom Errors ===========\n\n  error ProposedOwnable__onlyOwner_notOwner();\n  error ProposedOwnable__onlyProposed_notProposedOwner();\n  error ProposedOwnable__ownershipDelayElapsed_delayNotElapsed();\n  error ProposedOwnable__proposeNewOwner_invalidProposal();\n  error ProposedOwnable__proposeNewOwner_noOwnershipChange();\n  error ProposedOwnable__renounceOwnership_noProposal();\n  error ProposedOwnable__renounceOwnership_invalidProposal();\n\n  // ============ Properties ============\n\n  address private _owner;\n\n  address private _proposed;\n  uint256 private _proposedOwnershipTimestamp;\n\n  uint256 private constant _delay = 7 days;\n\n  // ======== Getters =========\n\n  /**\n   * @notice Returns the address of the current owner.\n   */\n  function owner() public view virtual returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @notice Returns the address of the proposed owner.\n   */\n  function proposed() public view virtual returns (address) {\n    return _proposed;\n  }\n\n  /**\n   * @notice Returns the address of the proposed owner.\n   */\n  function proposedTimestamp() public view virtual returns (uint256) {\n    return _proposedOwnershipTimestamp;\n  }\n\n  /**\n   * @notice Returns the delay period before a new owner can be accepted.\n   */\n  function delay() public view virtual returns (uint256) {\n    return _delay;\n  }\n\n  /**\n   * @notice Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    if (_owner != msg.sender) revert ProposedOwnable__onlyOwner_notOwner();\n    _;\n  }\n\n  /**\n   * @notice Throws if called by any account other than the proposed owner.\n   */\n  modifier onlyProposed() {\n    if (_proposed != msg.sender) revert ProposedOwnable__onlyProposed_notProposedOwner();\n    _;\n  }\n\n  /**\n   * @notice Throws if the ownership delay has not elapsed\n   */\n  modifier ownershipDelayElapsed() {\n    // Ensure delay has elapsed\n    if ((block.timestamp - _proposedOwnershipTimestamp) <= _delay)\n      revert ProposedOwnable__ownershipDelayElapsed_delayNotElapsed();\n    _;\n  }\n\n  /**\n   * @notice Indicates if the ownership has been renounced() by\n   * checking if current owner is address(0)\n   */\n  function renounced() public view returns (bool) {\n    return _owner == address(0);\n  }\n\n  // ======== External =========\n\n  /**\n   * @notice Sets the timestamp for an owner to be proposed, and sets the\n   * newly proposed owner as step 1 in a 2-step process\n   */\n  function proposeNewOwner(address newlyProposed) public virtual onlyOwner {\n    // Contract as source of truth\n    if (_proposed == newlyProposed && _proposedOwnershipTimestamp != 0)\n      revert ProposedOwnable__proposeNewOwner_invalidProposal();\n\n    // Sanity check: reasonable proposal\n    if (_owner == newlyProposed) revert ProposedOwnable__proposeNewOwner_noOwnershipChange();\n\n    _setProposed(newlyProposed);\n  }\n\n  /**\n   * @notice Renounces ownership of the contract after a delay\n   */\n  function renounceOwnership() public virtual onlyOwner ownershipDelayElapsed {\n    // Ensure there has been a proposal cycle started\n    if (_proposedOwnershipTimestamp == 0) revert ProposedOwnable__renounceOwnership_noProposal();\n\n    // Require proposed is set to 0\n    if (_proposed != address(0)) revert ProposedOwnable__renounceOwnership_invalidProposal();\n\n    // Emit event, set new owner, reset timestamp\n    _setOwner(address(0));\n  }\n\n  /**\n   * @notice Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function acceptProposedOwner() public virtual onlyProposed ownershipDelayElapsed {\n    // NOTE: no need to check if _owner == _proposed, because the _proposed\n    // is 0-d out and this check is implicitly enforced by modifier\n\n    // NOTE: no need to check if _proposedOwnershipTimestamp > 0 because\n    // the only time this would happen is if the _proposed was never\n    // set (will fail from modifier) or if the owner == _proposed (checked\n    // above)\n\n    // Emit event, set new owner, reset timestamp\n    _setOwner(_proposed);\n  }\n\n  // ======== Internal =========\n\n  function _setOwner(address newOwner) internal {\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n    delete _proposedOwnershipTimestamp;\n    delete _proposed;\n  }\n\n  function _setProposed(address newlyProposed) private {\n    _proposedOwnershipTimestamp = block.timestamp;\n    _proposed = newlyProposed;\n    emit OwnershipProposed(newlyProposed);\n  }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5740","formattedMessage":"Warning: Unreachable code.\n   --> contracts/messaging/connectors/Connector.sol:148:5:\n    |\n148 |     emit MessageProcessed(_data, msg.sender);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unreachable code.","severity":"warning","sourceLocation":{"end":4405,"file":"contracts/messaging/connectors/Connector.sol","start":4365},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/messaging/connectors/optimism/OptimismHubConnector.sol:55:45:\n   |\n55 |   function _sendMessage(bytes memory _data, bytes memory _encodedData) internal override {\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":2152,"file":"contracts/messaging/connectors/optimism/OptimismHubConnector.sol","start":2127},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"Warning: Unused local variable.\n   --> contracts/messaging/connectors/optimism/OptimismHubConnector.sol:166:5:\n    |\n166 |     bool ret = SecureMerkleTrie.verifyInclusionProof(\n    |     ^^^^^^^^\n\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":7091,"file":"contracts/messaging/connectors/optimism/OptimismHubConnector.sol","start":7083},"type":"Warning"}],"sources":{"contracts/messaging/connectors/Connector.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/Connector.sol","exportedSymbols":{"Connector":[238],"IConnector":[2715],"ProposedOwnable":[3106]},"id":239,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:0"},{"absolutePath":"contracts/shared/ProposedOwnable.sol","file":"../../shared/ProposedOwnable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":239,"sourceUnit":3107,"src":"71:65:0","symbolAliases":[{"foreign":{"id":2,"name":"ProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"79:15:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/interfaces/IConnector.sol","file":"../interfaces/IConnector.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":239,"sourceUnit":2716,"src":"137:56:0","symbolAliases":[{"foreign":{"id":4,"name":"IConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"145:10:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"ProposedOwnable","nameLocations":["754:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"754:15:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"754:15:0"},{"baseName":{"id":9,"name":"IConnector","nameLocations":["771:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":2715,"src":"771:10:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"771:10:0"}],"canonicalName":"Connector","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"195:527:0","text":" @title Connector\n @author Connext Labs, Inc.\n @notice This contract has the messaging interface functions used by all connectors.\n @dev This contract stores information about mirror connectors, but can be used as a\n base for contracts that do not have a mirror (i.e. the connector handling messaging on\n mainnet). In this case, the `mirrorConnector` and `MIRROR_DOMAIN`\n will be empty\n @dev If ownership is renounced, this contract will be unable to update its `mirrorConnector`\n or `mirrorGas`"},"fullyImplemented":false,"id":238,"linearizedBaseContracts":[238,2715,3106,3144],"name":"Connector","nameLocation":"741:9:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"5b0bf6d4","id":12,"name":"Connector__processMessage_notUsed","nameLocation":"835:33:0","nodeType":"ErrorDefinition","parameters":{"id":11,"nodeType":"ParameterList","parameters":[],"src":"868:2:0"},"src":"829:42:0"},{"anonymous":false,"eventSelector":"4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f0","id":24,"name":"NewConnector","nameLocation":"920:12:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":true,"mutability":"mutable","name":"domain","nameLocation":"953:6:0","nodeType":"VariableDeclaration","scope":24,"src":"938:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":13,"name":"uint32","nodeType":"ElementaryTypeName","src":"938:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16,"indexed":true,"mutability":"mutable","name":"mirrorDomain","nameLocation":"980:12:0","nodeType":"VariableDeclaration","scope":24,"src":"965:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15,"name":"uint32","nodeType":"ElementaryTypeName","src":"965:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":18,"indexed":false,"mutability":"mutable","name":"amb","nameLocation":"1006:3:0","nodeType":"VariableDeclaration","scope":24,"src":"998:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"998:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":20,"indexed":false,"mutability":"mutable","name":"rootManager","nameLocation":"1023:11:0","nodeType":"VariableDeclaration","scope":24,"src":"1015:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":false,"mutability":"mutable","name":"mirrorConnector","nameLocation":"1048:15:0","nodeType":"VariableDeclaration","scope":24,"src":"1040:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"932:135:0"},"src":"914:154:0"},{"anonymous":false,"eventSelector":"c77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc","id":30,"name":"MirrorConnectorUpdated","nameLocation":"1078:22:0","nodeType":"EventDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":false,"mutability":"mutable","name":"previous","nameLocation":"1109:8:0","nodeType":"VariableDeclaration","scope":30,"src":"1101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":false,"mutability":"mutable","name":"current","nameLocation":"1127:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1119:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1119:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1100:35:0"},"src":"1072:64:0"},{"constant":false,"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1187:78:0","text":" @notice The domain of this Messaging (i.e. Connector) contract."},"functionSelector":"52a9674b","id":33,"mutability":"immutable","name":"DOMAIN","nameLocation":"1292:6:0","nodeType":"VariableDeclaration","scope":238,"src":"1268:30:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":32,"name":"uint32","nodeType":"ElementaryTypeName","src":"1268:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":34,"nodeType":"StructuredDocumentation","src":"1303:57:0","text":" @notice Address of the AMB on this domain."},"functionSelector":"d69f9d61","id":36,"mutability":"immutable","name":"AMB","nameLocation":"1388:3:0","nodeType":"VariableDeclaration","scope":238,"src":"1363:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"1363:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1396:52:0","text":" @notice RootManager contract address."},"functionSelector":"5f61e3ec","id":39,"mutability":"immutable","name":"ROOT_MANAGER","nameLocation":"1476:12:0","nodeType":"VariableDeclaration","scope":238,"src":"1451:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1451:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"1493:91:0","text":" @notice The domain of the corresponding messaging (i.e. Connector) contract."},"functionSelector":"14168416","id":42,"mutability":"immutable","name":"MIRROR_DOMAIN","nameLocation":"1611:13:0","nodeType":"VariableDeclaration","scope":238,"src":"1587:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":41,"name":"uint32","nodeType":"ElementaryTypeName","src":"1587:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"documentation":{"id":43,"nodeType":"StructuredDocumentation","src":"1629:73:0","text":" @notice Connector on L2 for L1 connectors, and vice versa."},"functionSelector":"cc394283","id":45,"mutability":"mutable","name":"mirrorConnector","nameLocation":"1720:15:0","nodeType":"VariableDeclaration","scope":238,"src":"1705:30:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":44,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":57,"nodeType":"Block","src":"1877:52:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":49,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1891:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1895:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1891:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":51,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1905:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1891:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"21414d42","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1910:6:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","typeString":"literal_string \"!AMB\""},"value":"!AMB"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","typeString":"literal_string \"!AMB\""}],"id":48,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1883:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1883:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1883:34:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1923:1:0"}]},"documentation":{"id":46,"nodeType":"StructuredDocumentation","src":"1782:73:0","text":" @notice Errors if the msg.sender is not the registered AMB"},"id":58,"name":"onlyAMB","nameLocation":"1867:7:0","nodeType":"ModifierDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[],"src":"1874:2:0"},"src":"1858:71:0","virtual":false,"visibility":"internal"},{"body":{"id":70,"nodeType":"Block","src":"2045:222:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":62,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2212:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2216:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2212:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":64,"name":"ROOT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"2226:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2212:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"21726f6f744d616e61676572","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2240:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","typeString":"literal_string \"!rootManager\""},"value":"!rootManager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","typeString":"literal_string \"!rootManager\""}],"id":61,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2204:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2204:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":68,"nodeType":"ExpressionStatement","src":"2204:51:0"},{"id":69,"nodeType":"PlaceholderStatement","src":"2261:1:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1933:82:0","text":" @notice Errors if the msg.sender is not the registered ROOT_MANAGER"},"id":71,"name":"onlyRootManager","nameLocation":"2027:15:0","nodeType":"ModifierDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2042:2:0"},"src":"2018:249:0","virtual":false,"visibility":"internal"},{"body":{"id":145,"nodeType":"Block","src":"3011:612:0","statements":[{"expression":{"arguments":[{"expression":{"id":88,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3048:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3052:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3048:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"3038:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3038:21:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":91,"nodeType":"ExpressionStatement","src":"3038:21:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":93,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3105:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3116:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3105:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656d70747920646f6d61696e","id":96,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3119:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","typeString":"literal_string \"empty domain\""},"value":"empty domain"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","typeString":"literal_string \"empty domain\""}],"id":92,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3097:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3097:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":98,"nodeType":"ExpressionStatement","src":"3097:37:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":100,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3148:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3172:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3164:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"3164:7:0","typeDescriptions":{}}},"id":104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3164:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3148:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"656d70747920726f6f744d616e61676572","id":106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3176:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","typeString":"literal_string \"empty rootManager\""},"value":"empty rootManager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","typeString":"literal_string \"empty rootManager\""}],"id":99,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3140:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3140:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":108,"nodeType":"ExpressionStatement","src":"3140:56:0"},{"expression":{"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":109,"name":"DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"3308:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":110,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3317:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3308:16:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":112,"nodeType":"ExpressionStatement","src":"3308:16:0"},{"expression":{"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":113,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"3330:3:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":114,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"3336:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3330:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":116,"nodeType":"ExpressionStatement","src":"3330:10:0"},{"expression":{"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":117,"name":"ROOT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"3346:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":118,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3361:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3346:27:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":120,"nodeType":"ExpressionStatement","src":"3346:27:0"},{"expression":{"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":121,"name":"MIRROR_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"3379:13:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":122,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"3395:13:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3379:29:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":124,"nodeType":"ExpressionStatement","src":"3379:29:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":125,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3449:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3469:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"3469:7:0","typeDescriptions":{}}},"id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3469:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3449:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":136,"nodeType":"IfStatement","src":"3445:88:0","trueBody":{"id":135,"nodeType":"Block","src":"3481:52:0","statements":[{"expression":{"arguments":[{"id":132,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3509:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":131,"name":"_setMirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"3489:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3489:37:0"}]}},{"eventCall":{"arguments":[{"id":138,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"3557:7:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":139,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"3566:13:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":140,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":78,"src":"3581:4:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":141,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3587:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3601:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":137,"name":"NewConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3544:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint32_$_t_uint32_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint32,uint32,address,address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3544:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3539:79:0"}]},"documentation":{"id":72,"nodeType":"StructuredDocumentation","src":"2315:539:0","text":" @notice Creates a new HubConnector instance\n @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n for optimism, there is one connector on optimism and one connector on mainnet)\n @param _domain The domain this connector lives on\n @param _mirrorDomain The spoke domain\n @param _amb The address of the amb on the domain this connector lives on\n @param _rootManager The address of the RootManager on mainnet\n @param _mirrorConnector The address of the spoke connector"},"id":146,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[],"id":85,"kind":"baseConstructorSpecifier","modifierName":{"id":84,"name":"ProposedOwnable","nameLocations":["2993:15:0"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"2993:15:0"},"nodeType":"ModifierInvocation","src":"2993:17:0"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":74,"mutability":"mutable","name":"_domain","nameLocation":"2881:7:0","nodeType":"VariableDeclaration","scope":146,"src":"2874:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":73,"name":"uint32","nodeType":"ElementaryTypeName","src":"2874:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":76,"mutability":"mutable","name":"_mirrorDomain","nameLocation":"2901:13:0","nodeType":"VariableDeclaration","scope":146,"src":"2894:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":75,"name":"uint32","nodeType":"ElementaryTypeName","src":"2894:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"_amb","nameLocation":"2928:4:0","nodeType":"VariableDeclaration","scope":146,"src":"2920:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"2920:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"_rootManager","nameLocation":"2946:12:0","nodeType":"VariableDeclaration","scope":146,"src":"2938:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":79,"name":"address","nodeType":"ElementaryTypeName","src":"2938:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"2972:16:0","nodeType":"VariableDeclaration","scope":146,"src":"2964:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":81,"name":"address","nodeType":"ElementaryTypeName","src":"2964:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2868:124:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3011:0:0"},"scope":238,"src":"2857:766:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":150,"nodeType":"Block","src":"3808:2:0","statements":[]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"3669:109:0","text":" @notice Connectors may need to receive native asset to handle fees when sending a\n message"},"id":151,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[],"src":"3788:2:0"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"3808:0:0"},"scope":238,"src":"3781:29:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":163,"nodeType":"Block","src":"4010:48:0","statements":[{"expression":{"arguments":[{"id":160,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"4036:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_setMirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"4016:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"4016:37:0"}]},"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"3862:74:0","text":" @notice Sets the address of the l2Connector for this domain"},"functionSelector":"5bd11efc","id":164,"implemented":true,"kind":"function","modifiers":[{"id":157,"kind":"modifierInvocation","modifierName":{"id":156,"name":"onlyOwner","nameLocations":["4000:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":2945,"src":"4000:9:0"},"nodeType":"ModifierInvocation","src":"4000:9:0"}],"name":"setMirrorConnector","nameLocation":"3948:18:0","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"3975:16:0","nodeType":"VariableDeclaration","scope":164,"src":"3967:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"3967:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3966:26:0"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"4010:0:0"},"scope":238,"src":"3939:119:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2707],"body":{"id":182,"nodeType":"Block","src":"4331:79:0","statements":[{"expression":{"arguments":[{"id":173,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4353:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":172,"name":"_processMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"4337:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4337:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"4337:22:0"},{"eventCall":{"arguments":[{"id":177,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4387:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4394:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4398:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4394:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":176,"name":"MessageProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4370:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"EmitStatement","src":"4365:40:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"4111:148:0","text":" @notice Processes a message received by an AMB\n @dev This is called by AMBs to process messages originating from mirror connector"},"functionSelector":"4ff746f6","id":183,"implemented":true,"kind":"function","modifiers":[{"id":170,"kind":"modifierInvocation","modifierName":{"id":169,"name":"onlyAMB","nameLocations":["4323:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"4323:7:0"},"nodeType":"ModifierInvocation","src":"4323:7:0"}],"name":"processMessage","nameLocation":"4271:14:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"_data","nameLocation":"4299:5:0","nodeType":"VariableDeclaration","scope":183,"src":"4286:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":166,"name":"bytes","nodeType":"ElementaryTypeName","src":"4286:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4285:20:0"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[],"src":"4331:0:0"},"scope":238,"src":"4262:148:0","stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"baseFunctions":[2714],"body":{"id":195,"nodeType":"Block","src":"4555:42:0","statements":[{"expression":{"arguments":[{"id":192,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":186,"src":"4582:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":191,"name":"_verifySender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":222,"src":"4568:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_bool_$","typeString":"function (address) returns (bool)"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":190,"id":194,"nodeType":"Return","src":"4561:31:0"}]},"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"4414:73:0","text":" @notice Checks the cross domain sender for a given address"},"functionSelector":"db1b7659","id":196,"implemented":true,"kind":"function","modifiers":[],"name":"verifySender","nameLocation":"4499:12:0","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"_expected","nameLocation":"4520:9:0","nodeType":"VariableDeclaration","scope":196,"src":"4512:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"4512:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4511:19:0"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":196,"src":"4549:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":188,"name":"bool","nodeType":"ElementaryTypeName","src":"4549:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4548:6:0"},"scope":238,"src":"4490:107:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"4651:326:0","text":" @notice This function is used by the Connext contract on the l2 domain to send a message to the\n l1 domain (i.e. called by Connext on optimism to send a message to mainnet with roots)\n @param _data The contents of the message\n @param _encodedData Data used to send the message; specific to connector"},"id":204,"implemented":false,"kind":"function","modifiers":[],"name":"_sendMessage","nameLocation":"4989:12:0","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":199,"mutability":"mutable","name":"_data","nameLocation":"5015:5:0","nodeType":"VariableDeclaration","scope":204,"src":"5002:18:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":198,"name":"bytes","nodeType":"ElementaryTypeName","src":"5002:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"_encodedData","nameLocation":"5035:12:0","nodeType":"VariableDeclaration","scope":204,"src":"5022:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"5022:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5001:47:0"},"returnParameters":{"id":203,"nodeType":"ParameterList","parameters":[],"src":"5065:0:0"},"scope":238,"src":"4980:86:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":213,"nodeType":"Block","src":"5296:191:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":210,"name":"Connector__processMessage_notUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"5447:33:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5447:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":212,"nodeType":"RevertStatement","src":"5440:42:0"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"5070:147:0","text":" @notice This function is used by the AMBs to handle incoming messages. Should store the latest\n root generated on the l2 domain."},"id":214,"implemented":true,"kind":"function","modifiers":[],"name":"_processMessage","nameLocation":"5229:15:0","nodeType":"FunctionDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":214,"src":"5250:12:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":206,"name":"bytes","nodeType":"ElementaryTypeName","src":"5250:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5244:34:0"},"returnParameters":{"id":209,"nodeType":"ParameterList","parameters":[],"src":"5296:0:0"},"scope":238,"src":"5220:267:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"5491:216:0","text":" @notice Verify that the msg.sender is the correct AMB contract, and that the message's origin sender\n is the expected address.\n @dev Should be overridden by the implementing Connector contract."},"id":222,"implemented":false,"kind":"function","modifiers":[],"name":"_verifySender","nameLocation":"5719:13:0","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"_expected","nameLocation":"5741:9:0","nodeType":"VariableDeclaration","scope":222,"src":"5733:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"5733:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5732:19:0"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":222,"src":"5778:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"5778:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5777:6:0"},"scope":238,"src":"5710:74:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":236,"nodeType":"Block","src":"5910:113:0","statements":[{"eventCall":{"arguments":[{"id":228,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"5944:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":229,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5961:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":227,"name":"MirrorConnectorUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"5921:22:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5921:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":231,"nodeType":"EmitStatement","src":"5916:62:0"},{"expression":{"id":234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":232,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"5984:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":233,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"6002:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5984:34:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":235,"nodeType":"ExpressionStatement","src":"5984:34:0"}]},"id":237,"implemented":true,"kind":"function","modifiers":[],"name":"_setMirrorConnector","nameLocation":"5847:19:0","nodeType":"FunctionDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"5875:16:0","nodeType":"VariableDeclaration","scope":237,"src":"5867:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5866:26:0"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[],"src":"5910:0:0"},"scope":238,"src":"5838:185:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":239,"src":"723:5302:0","usedErrors":[12,2875,2877,2879,2881,2883,2885,2887]}],"src":"46:5980:0"},"id":0},"contracts/messaging/connectors/GasCap.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/GasCap.sol","exportedSymbols":{"GasCap":[313],"ProposedOwnable":[3106]},"id":314,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":240,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:1"},{"absolutePath":"contracts/shared/ProposedOwnable.sol","file":"../../shared/ProposedOwnable.sol","id":242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":314,"sourceUnit":3107,"src":"71:65:1","symbolAliases":[{"foreign":{"id":241,"name":"ProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"79:15:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":243,"name":"ProposedOwnable","nameLocations":["166:15:1"],"nodeType":"IdentifierPath","referencedDeclaration":3106,"src":"166:15:1"},"id":244,"nodeType":"InheritanceSpecifier","src":"166:15:1"}],"canonicalName":"GasCap","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":313,"linearizedBaseContracts":[313,3106,3144],"name":"GasCap","nameLocation":"156:6:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"225:224:1","text":" @notice The gnosis amb requires destination gas to be specified on the origin.\n The gas used will be passed in by the relayer to allow for real-time estimates,\n but will be capped at the admin-set cap."},"id":247,"mutability":"mutable","name":"gasCap","nameLocation":"460:6:1","nodeType":"VariableDeclaration","scope":313,"src":"452:14:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"510:139:1","text":" @notice Emitted when admin updates the gas cap\n @param _previous The starting value\n @param _updated The final value"},"eventSelector":"877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5","id":254,"name":"GasCapUpdated","nameLocation":"658:13:1","nodeType":"EventDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"indexed":false,"mutability":"mutable","name":"_previous","nameLocation":"680:9:1","nodeType":"VariableDeclaration","scope":254,"src":"672:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":249,"name":"uint256","nodeType":"ElementaryTypeName","src":"672:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":252,"indexed":false,"mutability":"mutable","name":"_updated","nameLocation":"699:8:1","nodeType":"VariableDeclaration","scope":254,"src":"691:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"671:37:1"},"src":"652:57:1"},{"body":{"id":263,"nodeType":"Block","src":"785:30:1","statements":[{"expression":{"arguments":[{"id":260,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":259,"name":"_setGasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"791:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"791:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":262,"nodeType":"ExpressionStatement","src":"791:19:1"}]},"id":264,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"_gasCap","nameLocation":"776:7:1","nodeType":"VariableDeclaration","scope":264,"src":"768:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:17:1"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"785:0:1"},"scope":313,"src":"756:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":275,"nodeType":"Block","src":"913:30:1","statements":[{"expression":{"arguments":[{"id":272,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"930:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":271,"name":"_setGasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"919:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"919:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":274,"nodeType":"ExpressionStatement","src":"919:19:1"}]},"functionSelector":"7850b020","id":276,"implemented":true,"kind":"function","modifiers":[{"id":269,"kind":"modifierInvocation","modifierName":{"id":268,"name":"onlyOwner","nameLocations":["903:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":2945,"src":"903:9:1"},"nodeType":"ModifierInvocation","src":"903:9:1"}],"name":"setGasCap","nameLocation":"869:9:1","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"_gasCap","nameLocation":"887:7:1","nodeType":"VariableDeclaration","scope":276,"src":"879:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"879:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"878:17:1"},"returnParameters":{"id":270,"nodeType":"ParameterList","parameters":[],"src":"913:0:1"},"scope":313,"src":"860:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":291,"nodeType":"Block","src":"1135:68:1","statements":[{"eventCall":{"arguments":[{"id":283,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1160:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":284,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"1168:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":282,"name":"GasCapUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"1146:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1146:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"1141:35:1"},{"expression":{"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":287,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1182:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":288,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"1191:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1182:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":290,"nodeType":"ExpressionStatement","src":"1182:16:1"}]},"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"992:94:1","text":" @notice Used (by admin) to update the gas cap\n @param _gasCap The new value"},"id":292,"implemented":true,"kind":"function","modifiers":[],"name":"_setGasCap","nameLocation":"1098:10:1","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"_gasCap","nameLocation":"1117:7:1","nodeType":"VariableDeclaration","scope":292,"src":"1109:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"1109:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1108:17:1"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[],"src":"1135:0:1"},"scope":313,"src":"1089:114:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":311,"nodeType":"Block","src":"1423:74:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":300,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1433:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":301,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1440:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1433:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":308,"nodeType":"IfStatement","src":"1429:47:1","trueBody":{"id":307,"nodeType":"Block","src":"1448:28:1","statements":[{"expression":{"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":303,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1456:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":304,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1463:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1456:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":306,"nodeType":"ExpressionStatement","src":"1456:13:1"}]}},{"expression":{"id":309,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"1488:4:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":299,"id":310,"nodeType":"Return","src":"1481:11:1"}]},"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1207:150:1","text":" @notice Used to get the gas to use. Will be the original value IFF it\n is less than the cap\n @param _gas The proposed gas value"},"id":312,"implemented":true,"kind":"function","modifiers":[],"name":"_getGas","nameLocation":"1369:7:1","nodeType":"FunctionDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"_gas","nameLocation":"1385:4:1","nodeType":"VariableDeclaration","scope":312,"src":"1377:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1376:14:1"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":312,"src":"1414:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1413:9:1"},"scope":313,"src":"1360:137:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":314,"src":"138:1361:1","usedErrors":[2875,2877,2879,2881,2883,2885,2887]}],"src":"46:1454:1"},"id":1},"contracts/messaging/connectors/HubConnector.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/HubConnector.sol","exportedSymbols":{"Connector":[238],"HubConnector":[366]},"id":367,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":315,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:2"},{"absolutePath":"contracts/messaging/connectors/Connector.sol","file":"./Connector.sol","id":317,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":367,"sourceUnit":239,"src":"71:42:2","symbolAliases":[{"foreign":{"id":316,"name":"Connector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"79:9:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":319,"name":"Connector","nameLocations":["653:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":238,"src":"653:9:2"},"id":320,"nodeType":"InheritanceSpecifier","src":"653:9:2"}],"canonicalName":"HubConnector","contractDependencies":[],"contractKind":"contract","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"115:503:2","text":" @title HubConnector\n @author Connext Labs, Inc.\n @notice This contract implements the messaging functions needed on the hub-side of a given AMB.\n The HubConnector has a limited set of functionality compared to the SpokeConnector, namely that\n it contains no logic to store or prove messages.\n @dev This contract should be deployed on the hub-side of an AMB (i.e. on L1), and contracts\n which extend this should implement the virtual functions defined in the BaseConnector class"},"fullyImplemented":false,"id":366,"linearizedBaseContracts":[366,238,2715,3106,3144],"name":"HubConnector","nameLocation":"637:12:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":341,"nodeType":"Block","src":"1417:2:2","statements":[]},"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"667:539:2","text":" @notice Creates a new HubConnector instance\n @dev The connectors are deployed such that there is one on each side of an AMB (i.e.\n for optimism, there is one connector on optimism and one connector on mainnet)\n @param _domain The domain this connector lives on\n @param _mirrorDomain The spoke domain\n @param _amb The address of the amb on the domain this connector lives on\n @param _rootManager The address of the RootManager on mainnet\n @param _mirrorConnector The address of the spoke connector"},"id":342,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":334,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"1355:7:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":335,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":325,"src":"1364:13:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":336,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"1379:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":337,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"1385:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":338,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"1399:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":339,"kind":"baseConstructorSpecifier","modifierName":{"id":333,"name":"Connector","nameLocations":["1345:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":238,"src":"1345:9:2"},"nodeType":"ModifierInvocation","src":"1345:71:2"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"_domain","nameLocation":"1233:7:2","nodeType":"VariableDeclaration","scope":342,"src":"1226:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":322,"name":"uint32","nodeType":"ElementaryTypeName","src":"1226:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"_mirrorDomain","nameLocation":"1253:13:2","nodeType":"VariableDeclaration","scope":342,"src":"1246:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":324,"name":"uint32","nodeType":"ElementaryTypeName","src":"1246:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"_amb","nameLocation":"1280:4:2","nodeType":"VariableDeclaration","scope":342,"src":"1272:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"1272:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"_rootManager","nameLocation":"1298:12:2","nodeType":"VariableDeclaration","scope":342,"src":"1290:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1290:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"1324:16:2","nodeType":"VariableDeclaration","scope":342,"src":"1316:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1220:124:2"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[],"src":"1417:0:2"},"scope":366,"src":"1209:210:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":364,"nodeType":"Block","src":"1715:99:2","statements":[{"expression":{"arguments":[{"id":353,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1734:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":354,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1741:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":352,"name":"_sendMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"1721:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory,bytes memory)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1721:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"1721:33:2"},{"eventCall":{"arguments":[{"id":358,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"1777:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":359,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"1784:12:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1798:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1802:6:2","memberName":"sender","nodeType":"MemberAccess","src":"1798:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":357,"name":"MessageSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"1765:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,bytes memory,address)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1765:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"EmitStatement","src":"1760:49:2"}]},"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"1465:146:2","text":" @notice Sends a message over the amb\n @dev This is called by the root manager *only* on mainnet to propagate the aggregate root"},"functionSelector":"48e6fa23","id":365,"implemented":true,"kind":"function","modifiers":[{"id":350,"kind":"modifierInvocation","modifierName":{"id":349,"name":"onlyRootManager","nameLocations":["1699:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":71,"src":"1699:15:2"},"nodeType":"ModifierInvocation","src":"1699:15:2"}],"name":"sendMessage","nameLocation":"1623:11:2","nodeType":"FunctionDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"_data","nameLocation":"1648:5:2","nodeType":"VariableDeclaration","scope":365,"src":"1635:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":344,"name":"bytes","nodeType":"ElementaryTypeName","src":"1635:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"_encodedData","nameLocation":"1668:12:2","nodeType":"VariableDeclaration","scope":365,"src":"1655:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":346,"name":"bytes","nodeType":"ElementaryTypeName","src":"1655:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1634:47:2"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"1715:0:2"},"scope":366,"src":"1614:200:2","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":367,"src":"619:1197:2","usedErrors":[12,2875,2877,2879,2881,2883,2885,2887]}],"src":"46:1771:2"},"id":2},"contracts/messaging/connectors/optimism/BaseOptimism.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/BaseOptimism.sol","exportedSymbols":{"BaseOptimism":[439],"GasCap":[313],"OptimismAmb":[2866]},"id":440,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":368,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:3"},{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol","file":"../../interfaces/ambs/optimism/OptimismAmb.sol","id":370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":440,"sourceUnit":2867,"src":"71:75:3","symbolAliases":[{"foreign":{"id":369,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"79:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/GasCap.sol","file":"../GasCap.sol","id":372,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":440,"sourceUnit":314,"src":"148:37:3","symbolAliases":[{"foreign":{"id":371,"name":"GasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"156:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":373,"name":"GasCap","nameLocations":["221:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"221:6:3"},"id":374,"nodeType":"InheritanceSpecifier","src":"221:6:3"}],"canonicalName":"BaseOptimism","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":439,"linearizedBaseContracts":[439,313,3106,3144],"name":"BaseOptimism","nameLocation":"205:12:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":382,"nodeType":"Block","src":"320:2:3","statements":[]},"id":383,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":379,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"311:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":380,"kind":"baseConstructorSpecifier","modifierName":{"id":378,"name":"GasCap","nameLocations":["304:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":313,"src":"304:6:3"},"nodeType":"ModifierInvocation","src":"304:15:3"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"_gasCap","nameLocation":"295:7:3","nodeType":"VariableDeclaration","scope":383,"src":"287:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"287:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"286:17:3"},"returnParameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"320:0:3"},"scope":439,"src":"275:47:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":408,"nodeType":"Block","src":"455:115:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":393,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"469:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"473:6:3","memberName":"sender","nodeType":"MemberAccess","src":"469:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":395,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"483:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"469:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"21627269646765","id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"489:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","typeString":"literal_string \"!bridge\""},"value":"!bridge"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","typeString":"literal_string \"!bridge\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"461:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"461:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":399,"nodeType":"ExpressionStatement","src":"461:38:3"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":401,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"524:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":400,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"512:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OptimismAmb_$2866_$","typeString":"type(contract OptimismAmb)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"512:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OptimismAmb_$2866","typeString":"contract OptimismAmb"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"530:20:3","memberName":"xDomainMessageSender","nodeType":"MemberAccess","referencedDeclaration":2865,"src":"512:38:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"512:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":405,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"556:9:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"512:53:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":391,"id":407,"nodeType":"Return","src":"505:60:3"}]},"id":409,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySender","nameLocation":"379:13:3","nodeType":"FunctionDefinition","parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"_amb","nameLocation":"401:4:3","nodeType":"VariableDeclaration","scope":409,"src":"393:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"_expected","nameLocation":"415:9:3","nodeType":"VariableDeclaration","scope":409,"src":"407:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"392:33:3"},"returnParameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"449:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":389,"name":"bool","nodeType":"ElementaryTypeName","src":"449:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"448:6:3"},"scope":439,"src":"370:200:3","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"767:233:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":418,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"836:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"849:6:3","memberName":"length","nodeType":"MemberAccess","src":"836:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"859:2:3","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"836:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"2164617461206c656e677468","id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"863:14:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_abfa6fb3ccf047761ac8ce83931004d0ae8b60afbf71730225c4a288d09a2b7b","typeString":"literal_string \"!data length\""},"value":"!data length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_abfa6fb3ccf047761ac8ce83931004d0ae8b60afbf71730225c4a288d09a2b7b","typeString":"literal_string \"!data length\""}],"id":417,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"828:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":424,"nodeType":"ExpressionStatement","src":"828:50:3"},{"expression":{"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":425,"name":"_gas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"944:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":429,"name":"_encodedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"970:12:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"985:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:3","typeDescriptions":{}}}],"id":432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"984:9:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":427,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"959:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"963:6:3","memberName":"decode","nodeType":"MemberAccess","src":"959:10:3","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"959:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":426,"name":"_getGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"951:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"951:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"944:51:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":436,"nodeType":"ExpressionStatement","src":"944:51:3"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"574:98:3","text":" @notice Using Optimism AMB, the gas is provided to `sendMessage` as an encoded uint"},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_getGasFromEncoded","nameLocation":"684:18:3","nodeType":"FunctionDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"_encodedData","nameLocation":"716:12:3","nodeType":"VariableDeclaration","scope":438,"src":"703:25:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":411,"name":"bytes","nodeType":"ElementaryTypeName","src":"703:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"702:27:3"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"_gas","nameLocation":"761:4:3","nodeType":"VariableDeclaration","scope":438,"src":"753:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":414,"name":"uint256","nodeType":"ElementaryTypeName","src":"753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"752:14:3"},"scope":439,"src":"675:325:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":440,"src":"187:815:3","usedErrors":[2875,2877,2879,2881,2883,2885,2887]}],"src":"46:957:3"},"id":3},"contracts/messaging/connectors/optimism/OptimismHubConnector.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/OptimismHubConnector.sol","exportedSymbols":{"BaseOptimism":[439],"Connector":[238],"HubConnector":[366],"IRootManager":[2739],"IStateCommitmentChain":[2848],"L2MessageInclusionProof":[2771],"OVMCodec":[1815],"OptimismAmb":[2866],"OptimismHubConnector":[821],"PredeployAddresses":[1855],"SecureMerkleTrie":[2679],"TypedMemView":[4221]},"id":822,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":441,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:4"},{"absolutePath":"contracts/messaging/interfaces/IRootManager.sol","file":"../../interfaces/IRootManager.sol","id":443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":2740,"src":"71:63:4","symbolAliases":[{"foreign":{"id":442,"name":"IRootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"79:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol","file":"../../interfaces/ambs/optimism/OptimismAmb.sol","id":445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":2867,"src":"135:75:4","symbolAliases":[{"foreign":{"id":444,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"143:11:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol","file":"../../interfaces/ambs/optimism/IStateCommitmentChain.sol","id":448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":2849,"src":"211:120:4","symbolAliases":[{"foreign":{"id":446,"name":"IStateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"219:21:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":447,"name":"L2MessageInclusionProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"242:23:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/shared/libraries/TypedMemView.sol","file":"../../../shared/libraries/TypedMemView.sol","id":450,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":4222,"src":"333:72:4","symbolAliases":[{"foreign":{"id":449,"name":"TypedMemView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"341:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/HubConnector.sol","file":"../HubConnector.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":367,"src":"407:49:4","symbolAliases":[{"foreign":{"id":451,"name":"HubConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"415:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/Connector.sol","file":"../Connector.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":239,"src":"457:43:4","symbolAliases":[{"foreign":{"id":453,"name":"Connector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"465:9:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol","file":"./lib/PredeployAddresses.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":1856,"src":"502:64:4","symbolAliases":[{"foreign":{"id":455,"name":"PredeployAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"510:18:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/OVMCodec.sol","file":"./lib/OVMCodec.sol","id":458,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":1816,"src":"567:44:4","symbolAliases":[{"foreign":{"id":457,"name":"OVMCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"575:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol","file":"./lib/SecureMerkleTrie.sol","id":460,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":2680,"src":"612:60:4","symbolAliases":[{"foreign":{"id":459,"name":"SecureMerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"620:16:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/BaseOptimism.sol","file":"./BaseOptimism.sol","id":462,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":822,"sourceUnit":440,"src":"674:48:4","symbolAliases":[{"foreign":{"id":461,"name":"BaseOptimism","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"682:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":463,"name":"HubConnector","nameLocations":["757:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":366,"src":"757:12:4"},"id":464,"nodeType":"InheritanceSpecifier","src":"757:12:4"},{"baseName":{"id":465,"name":"BaseOptimism","nameLocations":["771:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"771:12:4"},"id":466,"nodeType":"InheritanceSpecifier","src":"771:12:4"}],"canonicalName":"OptimismHubConnector","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":821,"linearizedBaseContracts":[821,439,313,366,238,2715,3106,3144],"name":"OptimismHubConnector","nameLocation":"733:20:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":469,"libraryName":{"id":467,"name":"TypedMemView","nameLocations":["835:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"835:12:4"},"nodeType":"UsingForDirective","src":"829:29:4","typeName":{"id":468,"name":"bytes","nodeType":"ElementaryTypeName","src":"852:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},{"global":false,"id":472,"libraryName":{"id":470,"name":"TypedMemView","nameLocations":["867:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":4221,"src":"867:12:4"},"nodeType":"UsingForDirective","src":"861:31:4","typeName":{"id":471,"name":"bytes29","nodeType":"ElementaryTypeName","src":"884:7:4","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}},{"constant":false,"functionSelector":"0f329ef8","id":475,"mutability":"immutable","name":"stateCommitmentChain","nameLocation":"974:20:4","nodeType":"VariableDeclaration","scope":821,"src":"935:59:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$2848","typeString":"contract IStateCommitmentChain"},"typeName":{"id":474,"nodeType":"UserDefinedTypeName","pathNode":{"id":473,"name":"IStateCommitmentChain","nameLocations":["935:21:4"],"nodeType":"IdentifierPath","referencedDeclaration":2848,"src":"935:21:4"},"referencedDeclaration":2848,"src":"935:21:4","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$2848","typeString":"contract IStateCommitmentChain"}},"visibility":"public"},{"constant":false,"functionSelector":"c1f0808a","id":479,"mutability":"mutable","name":"processed","nameLocation":"1419:9:4","nodeType":"VariableDeclaration","scope":821,"src":"1387:41:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":478,"keyType":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1395:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1387:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueType":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"1406:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":512,"nodeType":"Block","src":"1765:78:4","statements":[{"expression":{"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":506,"name":"stateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"1771:20:4","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$2848","typeString":"contract IStateCommitmentChain"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":508,"name":"_stateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1816:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":507,"name":"IStateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"1794:21:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStateCommitmentChain_$2848_$","typeString":"type(contract IStateCommitmentChain)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1794:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$2848","typeString":"contract IStateCommitmentChain"}},"src":"1771:67:4","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$2848","typeString":"contract IStateCommitmentChain"}},"id":511,"nodeType":"ExpressionStatement","src":"1771:67:4"}]},"id":513,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":496,"name":"_domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"1681:7:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":497,"name":"_mirrorDomain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"1690:13:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":498,"name":"_amb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"1705:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"_rootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1711:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"_mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"1725:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":501,"kind":"baseConstructorSpecifier","modifierName":{"id":495,"name":"HubConnector","nameLocations":["1668:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":366,"src":"1668:12:4"},"nodeType":"ModifierInvocation","src":"1668:74:4"},{"arguments":[{"id":503,"name":"_gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"1756:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":504,"kind":"baseConstructorSpecifier","modifierName":{"id":502,"name":"BaseOptimism","nameLocations":["1743:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"1743:12:4"},"nodeType":"ModifierInvocation","src":"1743:21:4"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"_domain","nameLocation":"1500:7:4","nodeType":"VariableDeclaration","scope":513,"src":"1493:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":480,"name":"uint32","nodeType":"ElementaryTypeName","src":"1493:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"_mirrorDomain","nameLocation":"1520:13:4","nodeType":"VariableDeclaration","scope":513,"src":"1513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":482,"name":"uint32","nodeType":"ElementaryTypeName","src":"1513:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"_amb","nameLocation":"1547:4:4","nodeType":"VariableDeclaration","scope":513,"src":"1539:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"_rootManager","nameLocation":"1565:12:4","nodeType":"VariableDeclaration","scope":513,"src":"1557:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"_mirrorConnector","nameLocation":"1591:16:4","nodeType":"VariableDeclaration","scope":513,"src":"1583:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"_stateCommitmentChain","nameLocation":"1621:21:4","nodeType":"VariableDeclaration","scope":513,"src":"1613:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"1613:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"_gasCap","nameLocation":"1656:7:4","nodeType":"VariableDeclaration","scope":513,"src":"1648:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1487:180:4"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"1765:0:4"},"scope":821,"src":"1476:367:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[222],"body":{"id":526,"nodeType":"Block","src":"1971:47:4","statements":[{"expression":{"arguments":[{"id":522,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1998:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":515,"src":"2003:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":521,"name":"_verifySender","nodeType":"Identifier","overloadedDeclarations":[527,409],"referencedDeclaration":409,"src":"1984:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1984:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":520,"id":525,"nodeType":"Return","src":"1977:36:4"}]},"id":527,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySender","nameLocation":"1900:13:4","nodeType":"FunctionDefinition","overrides":{"id":517,"nodeType":"OverrideSpecifier","overrides":[],"src":"1947:8:4"},"parameters":{"id":516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"mutability":"mutable","name":"_expected","nameLocation":"1922:9:4","nodeType":"VariableDeclaration","scope":527,"src":"1914:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1913:19:4"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":527,"src":"1965:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":518,"name":"bool","nodeType":"ElementaryTypeName","src":"1965:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1964:6:4"},"scope":821,"src":"1891:127:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[204],"body":{"id":566,"nodeType":"Block","src":"2172:325:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":537,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2241:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2247:6:4","memberName":"length","nodeType":"MemberAccess","src":"2241:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3332","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2257:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"2241:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"216c656e677468","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2261:9:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","typeString":"literal_string \"!length\""},"value":"!length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","typeString":"literal_string \"!length\""}],"id":536,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2233:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"2233:38:4"},{"assignments":[545],"declarations":[{"constant":false,"id":545,"mutability":"mutable","name":"_calldata","nameLocation":"2314:9:4","nodeType":"VariableDeclaration","scope":566,"src":"2301:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":544,"name":"bytes","nodeType":"ElementaryTypeName","src":"2301:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":553,"initialValue":{"arguments":[{"expression":{"expression":{"id":548,"name":"Connector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"2349:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Connector_$238_$","typeString":"type(contract Connector)"}},"id":549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2359:14:4","memberName":"processMessage","nodeType":"MemberAccess","referencedDeclaration":183,"src":"2349:24:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_bytes_memory_ptr_$returns$__$","typeString":"function Connector.processMessage(bytes memory)"}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2374:8:4","memberName":"selector","nodeType":"MemberAccess","src":"2349:33:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":551,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"2384:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":546,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2326:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2330:18:4","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2326:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2301:89:4"},{"expression":{"arguments":[{"id":558,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"2449:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"_calldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"2466:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":562,"name":"gasCap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2484:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2477:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":560,"name":"uint32","nodeType":"ElementaryTypeName","src":"2477:6:4","typeDescriptions":{}}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2477:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"arguments":[{"id":555,"name":"AMB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"2432:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":554,"name":"OptimismAmb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2866,"src":"2420:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OptimismAmb_$2866_$","typeString":"type(contract OptimismAmb)"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_OptimismAmb_$2866","typeString":"contract OptimismAmb"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2437:11:4","memberName":"sendMessage","nodeType":"MemberAccess","referencedDeclaration":2860,"src":"2420:28:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$","typeString":"function (address,bytes memory,uint32) external"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2420:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"2420:72:4"}]},"documentation":{"id":528,"nodeType":"StructuredDocumentation","src":"2022:60:4","text":" @dev Sends `aggregateRoot` to messaging on l2"},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_sendMessage","nameLocation":"2094:12:4","nodeType":"FunctionDefinition","overrides":{"id":534,"nodeType":"OverrideSpecifier","overrides":[],"src":"2163:8:4"},"parameters":{"id":533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"_data","nameLocation":"2120:5:4","nodeType":"VariableDeclaration","scope":567,"src":"2107:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":529,"name":"bytes","nodeType":"ElementaryTypeName","src":"2107:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"_encodedData","nameLocation":"2140:12:4","nodeType":"VariableDeclaration","scope":567,"src":"2127:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":531,"name":"bytes","nodeType":"ElementaryTypeName","src":"2127:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2106:47:4"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"2172:0:4"},"scope":821,"src":"2085:412:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"3027:1567:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":583,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3085:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":584,"name":"mirrorConnector","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":45,"src":"3096:15:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3085:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"216d6972726f72436f6e6e6563746f72","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3113:18:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","typeString":"literal_string \"!mirrorConnector\""},"value":"!mirrorConnector"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","typeString":"literal_string \"!mirrorConnector\""}],"id":582,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3077:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"3077:55:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":590,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3189:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":593,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3208:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_OptimismHubConnector_$821","typeString":"contract OptimismHubConnector"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_OptimismHubConnector_$821","typeString":"contract OptimismHubConnector"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3200:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"3200:7:4","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3200:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3189:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"2174686973","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3215:7:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","typeString":"literal_string \"!this\""},"value":"!this"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","typeString":"literal_string \"!this\""}],"id":589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3181:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3181:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":598,"nodeType":"ExpressionStatement","src":"3181:42:4"},{"assignments":[600],"declarations":[{"constant":false,"id":600,"mutability":"mutable","name":"xDomainData","nameLocation":"3271:11:4","nodeType":"VariableDeclaration","scope":664,"src":"3258:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":599,"name":"bytes","nodeType":"ElementaryTypeName","src":"3258:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":607,"initialValue":{"arguments":[{"id":602,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3308:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":603,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"3317:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":604,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"3326:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":605,"name":"_messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3336:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":601,"name":"_encodeXDomainCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"3285:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,address,bytes memory,uint256) pure returns (bytes memory)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3285:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3258:92:4"},{"expression":{"arguments":[{"arguments":[{"id":610,"name":"xDomainData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"3387:11:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":611,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3400:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}],"id":609,"name":"_verifyXDomainMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"3365:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_struct$_L2MessageInclusionProof_$2771_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,struct L2MessageInclusionProof memory) view returns (bool)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"2170726f6f66","id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3409:8:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","typeString":"literal_string \"!proof\""},"value":"!proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","typeString":"literal_string \"!proof\""}],"id":608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3357:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3357:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":615,"nodeType":"ExpressionStatement","src":"3357:61:4"},{"assignments":[617],"declarations":[{"constant":false,"id":617,"mutability":"mutable","name":"_view","nameLocation":"4195:5:4","nodeType":"VariableDeclaration","scope":664,"src":"4187:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":616,"name":"bytes29","nodeType":"ElementaryTypeName","src":"4187:7:4","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":622,"initialValue":{"arguments":[{"hexValue":"30","id":620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4216:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":618,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"4203:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4212:3:4","memberName":"ref","nodeType":"MemberAccess","referencedDeclaration":3547,"src":"4203:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint40_$returns$_t_bytes29_$bound_to$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint40) pure returns (bytes29)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4203:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"4187:31:4"},{"assignments":[624],"declarations":[{"constant":false,"id":624,"mutability":"mutable","name":"root","nameLocation":"4232:4:4","nodeType":"VariableDeclaration","scope":664,"src":"4224:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4224:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":627,"name":"_view","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4251:5:4","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4257:3:4","memberName":"len","nodeType":"MemberAccess","referencedDeclaration":3621,"src":"4251:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$bound_to$_t_bytes29_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4251:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"3332","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4265:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4251:16:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"3332","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4269:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":625,"name":"_view","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"4239:5:4","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4245:5:4","memberName":"index","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"4239:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$bound_to$_t_bytes29_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4239:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4224:48:4"},{"condition":{"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4283:16:4","subExpression":{"baseExpression":{"id":635,"name":"processed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4284:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":637,"indexExpression":{"id":636,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4294:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4284:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":663,"nodeType":"IfStatement","src":"4279:260:4","trueBody":{"id":662,"nodeType":"Block","src":"4301:238:4","statements":[{"expression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":639,"name":"processed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4340:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":641,"indexExpression":{"id":640,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4350:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4340:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4358:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4340:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":644,"nodeType":"ExpressionStatement","src":"4340:22:4"},{"expression":{"arguments":[{"id":649,"name":"MIRROR_DOMAIN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"4452:13:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":650,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4467:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"arguments":[{"id":646,"name":"ROOT_MANAGER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":39,"src":"4428:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":645,"name":"IRootManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"4415:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRootManager_$2739_$","typeString":"type(contract IRootManager)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4415:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRootManager_$2739","typeString":"contract IRootManager"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4442:9:4","memberName":"aggregate","nodeType":"MemberAccess","referencedDeclaration":2738,"src":"4415:36:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint32_$_t_bytes32_$returns$__$","typeString":"function (uint32,bytes32) external"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4415:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"4415:57:4"},{"eventCall":{"arguments":[{"arguments":[{"id":656,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4514:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":654,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4503:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4507:6:4","memberName":"encode","nodeType":"MemberAccess","src":"4503:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4503:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4521:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4525:6:4","memberName":"sender","nodeType":"MemberAccess","src":"4521:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"MessageProcessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"4486:16:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (bytes memory,address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4486:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":661,"nodeType":"EmitStatement","src":"4481:51:4"}]}}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"2640:200:4","text":" @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L165"},"functionSelector":"6e2edb4e","id":665,"implemented":true,"kind":"function","modifiers":[],"name":"processMessageFromRoot","nameLocation":"2852:22:4","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"_target","nameLocation":"2888:7:4","nodeType":"VariableDeclaration","scope":665,"src":"2880:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"2880:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"_sender","nameLocation":"2909:7:4","nodeType":"VariableDeclaration","scope":665,"src":"2901:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"2901:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"_message","nameLocation":"2935:8:4","nodeType":"VariableDeclaration","scope":665,"src":"2922:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":573,"name":"bytes","nodeType":"ElementaryTypeName","src":"2922:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":576,"mutability":"mutable","name":"_messageNonce","nameLocation":"2957:13:4","nodeType":"VariableDeclaration","scope":665,"src":"2949:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2949:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"_proof","nameLocation":"3007:6:4","nodeType":"VariableDeclaration","scope":665,"src":"2976:37:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":578,"nodeType":"UserDefinedTypeName","pathNode":{"id":577,"name":"L2MessageInclusionProof","nameLocations":["2976:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"2976:23:4"},"referencedDeclaration":2771,"src":"2976:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"2874:143:4"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"3027:0:4"},"scope":821,"src":"2843:1751:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":686,"nodeType":"Block","src":"5157:98:4","statements":[{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":677,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5193:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}],"id":676,"name":"_verifyStateRootProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"5171:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_L2MessageInclusionProof_$2771_memory_ptr_$returns$_t_bool_$","typeString":"function (struct L2MessageInclusionProof memory) view returns (bool)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5171:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":680,"name":"_xDomainCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"5224:16:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":681,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5242:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}],"id":679,"name":"_verifyStorageProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"5204:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_struct$_L2MessageInclusionProof_$2771_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,struct L2MessageInclusionProof memory) pure returns (bool)"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5204:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5171:78:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5170:80:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":675,"id":685,"nodeType":"Return","src":"5163:87:4"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"4598:412:4","text":" Verifies that the given message is valid.\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L283-L288\n @param _xDomainCalldata Calldata to verify.\n @param _proof Inclusion proof for the message.\n @return Whether or not the provided message is valid."},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyXDomainMessage","nameLocation":"5022:21:4","nodeType":"FunctionDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"_xDomainCalldata","nameLocation":"5057:16:4","nodeType":"VariableDeclaration","scope":687,"src":"5044:29:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":667,"name":"bytes","nodeType":"ElementaryTypeName","src":"5044:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":671,"mutability":"mutable","name":"_proof","nameLocation":"5106:6:4","nodeType":"VariableDeclaration","scope":687,"src":"5075:37:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":670,"nodeType":"UserDefinedTypeName","pathNode":{"id":669,"name":"L2MessageInclusionProof","nameLocations":["5075:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"5075:23:4"},"referencedDeclaration":2771,"src":"5075:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"5043:70:4"},"returnParameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"5149:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":673,"name":"bool","nodeType":"ElementaryTypeName","src":"5149:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5148:6:4"},"scope":821,"src":"5013:242:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":706,"nodeType":"Block","src":"5737:136:4","statements":[{"expression":{"arguments":[{"expression":{"id":698,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5799:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5806:9:4","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":2760,"src":"5799:16:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":700,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5817:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5824:20:4","memberName":"stateRootBatchHeader","nodeType":"MemberAccess","referencedDeclaration":2763,"src":"5817:27:4","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_memory_ptr","typeString":"struct ChainBatchHeader memory"}},{"expression":{"id":702,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5846:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5853:14:4","memberName":"stateRootProof","nodeType":"MemberAccess","referencedDeclaration":2766,"src":"5846:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$2758_memory_ptr","typeString":"struct ChainInclusionProof memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_memory_ptr","typeString":"struct ChainBatchHeader memory"},{"typeIdentifier":"t_struct$_ChainInclusionProof_$2758_memory_ptr","typeString":"struct ChainInclusionProof memory"}],"expression":{"id":696,"name":"stateCommitmentChain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5756:20:4","typeDescriptions":{"typeIdentifier":"t_contract$_IStateCommitmentChain_$2848","typeString":"contract IStateCommitmentChain"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5777:21:4","memberName":"verifyStateCommitment","nodeType":"MemberAccess","referencedDeclaration":2838,"src":"5756:42:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_struct$_ChainBatchHeader_$2752_memory_ptr_$_t_struct$_ChainInclusionProof_$2758_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes32,struct ChainBatchHeader memory,struct ChainInclusionProof memory) view external returns (bool)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5756:112:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":695,"id":705,"nodeType":"Return","src":"5743:125:4"}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"5259:376:4","text":" Verifies that the state root within an inclusion proof is valid.\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L295-L311\n @param _proof Message inclusion proof.\n @return Whether or not the provided proof is valid."},"id":707,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyStateRootProof","nameLocation":"5647:21:4","nodeType":"FunctionDefinition","parameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"_proof","nameLocation":"5700:6:4","nodeType":"VariableDeclaration","scope":707,"src":"5669:37:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":690,"nodeType":"UserDefinedTypeName","pathNode":{"id":689,"name":"L2MessageInclusionProof","nameLocations":["5669:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"5669:23:4"},"referencedDeclaration":2771,"src":"5669:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"5668:39:4"},"returnParameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":707,"src":"5731:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":693,"name":"bool","nodeType":"ElementaryTypeName","src":"5731:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5730:6:4"},"scope":821,"src":"5638:235:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":795,"nodeType":"Block","src":"6456:845:4","statements":[{"assignments":[719],"declarations":[{"constant":false,"id":719,"mutability":"mutable","name":"storageKey","nameLocation":"6470:10:4","nodeType":"VariableDeclaration","scope":795,"src":"6462:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6462:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":726,"name":"_xDomainCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"6553:16:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":727,"name":"PredeployAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6571:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PredeployAddresses_$1855_$","typeString":"type(library PredeployAddresses)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:25:4","memberName":"L2_CROSS_DOMAIN_MESSENGER","nodeType":"MemberAccess","referencedDeclaration":1836,"src":"6571:44:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":724,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6536:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6540:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"6536:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6536:80:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":723,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6526:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6526:91:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6635:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6627:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"6627:7:4","typeDescriptions":{}}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6627:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":721,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6500:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6504:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"6500:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6500:145:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":720,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6483:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6483:168:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6462:189:4"},{"assignments":[739,741],"declarations":[{"constant":false,"id":739,"mutability":"mutable","name":"exists","nameLocation":"6664:6:4","nodeType":"VariableDeclaration","scope":795,"src":"6659:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":738,"name":"bool","nodeType":"ElementaryTypeName","src":"6659:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"encodedMessagePassingAccount","nameLocation":"6685:28:4","nodeType":"VariableDeclaration","scope":795,"src":"6672:41:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":740,"name":"bytes","nodeType":"ElementaryTypeName","src":"6672:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":754,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":746,"name":"PredeployAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"6762:18:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_PredeployAddresses_$1855_$","typeString":"type(library PredeployAddresses)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6781:23:4","memberName":"L2_TO_L1_MESSAGE_PASSER","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"6762:42:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":744,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6745:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6749:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"6745:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6745:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":749,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"6813:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6820:16:4","memberName":"stateTrieWitness","nodeType":"MemberAccess","referencedDeclaration":2768,"src":"6813:23:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":751,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"6844:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6851:9:4","memberName":"stateRoot","nodeType":"MemberAccess","referencedDeclaration":2760,"src":"6844:16:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":742,"name":"SecureMerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"6717:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecureMerkleTrie_$2679_$","typeString":"type(library SecureMerkleTrie)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6734:3:4","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":2662,"src":"6717:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes32) pure returns (bool,bytes memory)"}},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:149:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6658:208:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":756,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":739,"src":"6881:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6891:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6881:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6573736167652070617373696e67207072656465706c6f7920686173206e6f74206265656e20696e697469616c697a6564206f7220696e76616c69642070726f6f662070726f76696465642e","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6897:79:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","typeString":"literal_string \"Message passing predeploy has not been initialized or invalid proof provided.\""},"value":"Message passing predeploy has not been initialized or invalid proof provided."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","typeString":"literal_string \"Message passing predeploy has not been initialized or invalid proof provided.\""}],"id":755,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6873:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6873:104:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":761,"nodeType":"ExpressionStatement","src":"6873:104:4"},{"assignments":[766],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"account","nameLocation":"7011:7:4","nodeType":"VariableDeclaration","scope":795,"src":"6984:34:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$1766_memory_ptr","typeString":"struct OVMCodec.EVMAccount"},"typeName":{"id":765,"nodeType":"UserDefinedTypeName","pathNode":{"id":764,"name":"OVMCodec.EVMAccount","nameLocations":["6984:8:4","6993:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":1766,"src":"6984:19:4"},"referencedDeclaration":1766,"src":"6984:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$1766_storage_ptr","typeString":"struct OVMCodec.EVMAccount"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[{"id":769,"name":"encodedMessagePassingAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"7047:28:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":767,"name":"OVMCodec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"7021:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_OVMCodec_$1815_$","typeString":"type(library OVMCodec)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7030:16:4","memberName":"decodeEVMAccount","nodeType":"MemberAccess","referencedDeclaration":1814,"src":"7021:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_EVMAccount_$1766_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct OVMCodec.EVMAccount memory)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$1766_memory_ptr","typeString":"struct OVMCodec.EVMAccount memory"}},"nodeType":"VariableDeclarationStatement","src":"6984:92:4"},{"assignments":[773],"declarations":[{"constant":false,"id":773,"mutability":"mutable","name":"ret","nameLocation":"7088:3:4","nodeType":"VariableDeclaration","scope":795,"src":"7083:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":772,"name":"bool","nodeType":"ElementaryTypeName","src":"7083:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":792,"initialValue":{"arguments":[{"arguments":[{"id":778,"name":"storageKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"7158:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":776,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7141:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7145:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"7141:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7141:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"arguments":[{"hexValue":"31","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7202:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7196:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":782,"name":"uint8","nodeType":"ElementaryTypeName","src":"7196:5:4","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7196:8:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":780,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7179:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7183:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"7179:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7179:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":787,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"7215:6:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof memory"}},"id":788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7222:18:4","memberName":"storageTrieWitness","nodeType":"MemberAccess","referencedDeclaration":2770,"src":"7215:25:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":789,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"7250:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$1766_memory_ptr","typeString":"struct OVMCodec.EVMAccount memory"}},"id":790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7258:11:4","memberName":"storageRoot","nodeType":"MemberAccess","referencedDeclaration":1763,"src":"7250:19:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":774,"name":"SecureMerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2679,"src":"7094:16:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SecureMerkleTrie_$2679_$","typeString":"type(library SecureMerkleTrie)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7111:20:4","memberName":"verifyInclusionProof","nodeType":"MemberAccess","referencedDeclaration":2634,"src":"7094:37:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory,bytes memory,bytes32) pure returns (bool)"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:183:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"7083:194:4"},{"expression":{"hexValue":"74727565","id":793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7292:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":717,"id":794,"nodeType":"Return","src":"7285:11:4"}]},"documentation":{"id":708,"nodeType":"StructuredDocumentation","src":"5877:434:4","text":" Verifies that the storage proof within an inclusion proof is valid.\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L313-L357\n @param _xDomainCalldata Encoded message calldata.\n @param _proof Message inclusion proof.\n @return Whether or not the provided proof is valid."},"id":796,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyStorageProof","nameLocation":"6323:19:4","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":710,"mutability":"mutable","name":"_xDomainCalldata","nameLocation":"6356:16:4","nodeType":"VariableDeclaration","scope":796,"src":"6343:29:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":709,"name":"bytes","nodeType":"ElementaryTypeName","src":"6343:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"_proof","nameLocation":"6405:6:4","nodeType":"VariableDeclaration","scope":796,"src":"6374:37:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_memory_ptr","typeString":"struct L2MessageInclusionProof"},"typeName":{"id":712,"nodeType":"UserDefinedTypeName","pathNode":{"id":711,"name":"L2MessageInclusionProof","nameLocations":["6374:23:4"],"nodeType":"IdentifierPath","referencedDeclaration":2771,"src":"6374:23:4"},"referencedDeclaration":2771,"src":"6374:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_L2MessageInclusionProof_$2771_storage_ptr","typeString":"struct L2MessageInclusionProof"}},"visibility":"internal"}],"src":"6342:70:4"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":796,"src":"6448:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":715,"name":"bool","nodeType":"ElementaryTypeName","src":"6448:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6447:6:4"},"scope":821,"src":"6314:987:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"7949:137:4","statements":[{"expression":{"arguments":[{"hexValue":"72656c61794d65737361676528616464726573732c616464726573732c62797465732c75696e7432353629","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7992:45:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},"value":"relayMessage(address,address,bytes,uint256)"},{"id":813,"name":"_target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"8039:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":814,"name":"_sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8048:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"_message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8057:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":816,"name":"_messageNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"8067:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cbd4ece909957cc1dd89405b09b9838fb740ff058af3432bb6de0c5c84b205ce","typeString":"literal_string \"relayMessage(address,address,bytes,uint256)\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":810,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7968:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7972:19:4","memberName":"encodeWithSignature","nodeType":"MemberAccess","src":"7968:23:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (string memory) pure returns (bytes memory)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7968:113:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":809,"id":818,"nodeType":"Return","src":"7955:126:4"}]},"documentation":{"id":797,"nodeType":"StructuredDocumentation","src":"7305:472:4","text":" Generates the correct cross domain calldata for a message.\n @dev taken from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/bridge/Lib_CrossDomainUtils.sol\n @param _target Target contract address.\n @param _sender Message sender address.\n @param _message Message to send to the target.\n @param _messageNonce Nonce for the provided message.\n @return ABI encoded cross domain calldata."},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"_encodeXDomainCalldata","nameLocation":"7789:22:4","nodeType":"FunctionDefinition","parameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"_target","nameLocation":"7825:7:4","nodeType":"VariableDeclaration","scope":820,"src":"7817:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"7817:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"_sender","nameLocation":"7846:7:4","nodeType":"VariableDeclaration","scope":820,"src":"7838:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"7838:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"_message","nameLocation":"7872:8:4","nodeType":"VariableDeclaration","scope":820,"src":"7859:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":802,"name":"bytes","nodeType":"ElementaryTypeName","src":"7859:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":805,"mutability":"mutable","name":"_messageNonce","nameLocation":"7894:13:4","nodeType":"VariableDeclaration","scope":820,"src":"7886:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":804,"name":"uint256","nodeType":"ElementaryTypeName","src":"7886:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7811:100:4"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"7935:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":807,"name":"bytes","nodeType":"ElementaryTypeName","src":"7935:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7934:14:4"},"scope":821,"src":"7780:306:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":822,"src":"724:7364:4","usedErrors":[12,2875,2877,2879,2881,2883,2885,2887,3181,3183]}],"src":"46:8043:4"},"id":4},"contracts/messaging/connectors/optimism/lib/BytesUtils.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/BytesUtils.sol","exportedSymbols":{"BytesUtils":[1092]},"id":1093,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":823,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"BytesUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"71:177:5","text":" @title BytesUtils\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/utils/Lib_BytesUtils.sol"},"fullyImplemented":true,"id":1092,"linearizedBaseContracts":[1092],"name":"BytesUtils","nameLocation":"257:10:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":869,"nodeType":"Block","src":"474:2330:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":836,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"498:2:5","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"488:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":839,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"504:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"488:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"513:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":835,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"480:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"480:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"480:50:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":845,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"544:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":846,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"553:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"544:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":848,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"564:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"544:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f766572666c6f77","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"572:16:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""},"value":"slice_overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","typeString":"literal_string \"slice_overflow\""}],"id":844,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"536:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"536:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":852,"nodeType":"ExpressionStatement","src":"536:53:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":854,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"603:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"610:6:5","memberName":"length","nodeType":"MemberAccess","src":"603:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":856,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"620:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":857,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"620:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"603:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"736c6963655f6f75744f66426f756e6473","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"638:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""},"value":"slice_outOfBounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","typeString":"literal_string \"slice_outOfBounds\""}],"id":853,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"595:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"595:63:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":862,"nodeType":"ExpressionStatement","src":"595:63:5"},{"assignments":[864],"declarations":[{"constant":false,"id":864,"mutability":"mutable","name":"tempBytes","nameLocation":"678:9:5","nodeType":"VariableDeclaration","scope":869,"src":"665:22:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":863,"name":"bytes","nodeType":"ElementaryTypeName","src":"665:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":865,"nodeType":"VariableDeclarationStatement","src":"665:22:5"},{"AST":{"nodeType":"YulBlock","src":"703:2074:5","statements":[{"cases":[{"body":{"nodeType":"YulBlock","src":"747:1686:5","statements":[{"nodeType":"YulAssignment","src":"879:24:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"898:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"892:5:5"},"nodeType":"YulFunctionCall","src":"892:11:5"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"879:9:5"}]},{"nodeType":"YulVariableDeclaration","src":"1455:33:5","value":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"1476:7:5"},{"kind":"number","nodeType":"YulLiteral","src":"1485:2:5","type":"","value":"31"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1472:3:5"},"nodeType":"YulFunctionCall","src":"1472:16:5"},"variables":[{"name":"lengthmod","nodeType":"YulTypedName","src":"1459:9:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1769:70:5","value":{"arguments":[{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"1787:9:5"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"1798:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1783:3:5"},"nodeType":"YulFunctionCall","src":"1783:25:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1814:4:5","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"1827:9:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1820:6:5"},"nodeType":"YulFunctionCall","src":"1820:17:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1810:3:5"},"nodeType":"YulFunctionCall","src":"1810:28:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1779:3:5"},"nodeType":"YulFunctionCall","src":"1779:60:5"},"variables":[{"name":"mc","nodeType":"YulTypedName","src":"1773:2:5","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1848:27:5","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"1863:2:5"},{"name":"_length","nodeType":"YulIdentifier","src":"1867:7:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1859:3:5"},"nodeType":"YulFunctionCall","src":"1859:16:5"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"1852:3:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"2183:43:5","statements":[{"expression":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2202:2:5"},{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2212:2:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2206:5:5"},"nodeType":"YulFunctionCall","src":"2206:9:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2195:6:5"},"nodeType":"YulFunctionCall","src":"2195:21:5"},"nodeType":"YulExpressionStatement","src":"2195:21:5"}]},"condition":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2102:2:5"},{"name":"end","nodeType":"YulIdentifier","src":"2106:3:5"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2099:2:5"},"nodeType":"YulFunctionCall","src":"2099:11:5"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2111:71:5","statements":[{"nodeType":"YulAssignment","src":"2123:19:5","value":{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2133:2:5"},{"kind":"number","nodeType":"YulLiteral","src":"2137:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2129:3:5"},"nodeType":"YulFunctionCall","src":"2129:13:5"},"variableNames":[{"name":"mc","nodeType":"YulIdentifier","src":"2123:2:5"}]},{"nodeType":"YulAssignment","src":"2153:19:5","value":{"arguments":[{"name":"cc","nodeType":"YulIdentifier","src":"2163:2:5"},{"kind":"number","nodeType":"YulLiteral","src":"2167:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:5"},"nodeType":"YulFunctionCall","src":"2159:13:5"},"variableNames":[{"name":"cc","nodeType":"YulIdentifier","src":"2153:2:5"}]}]},"pre":{"nodeType":"YulBlock","src":"1889:209:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2008:80:5","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"2030:6:5"},{"name":"lengthmod","nodeType":"YulIdentifier","src":"2038:9:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2026:3:5"},"nodeType":"YulFunctionCall","src":"2026:22:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2054:4:5","type":"","value":"0x20"},{"arguments":[{"name":"lengthmod","nodeType":"YulIdentifier","src":"2067:9:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2060:6:5"},"nodeType":"YulFunctionCall","src":"2060:17:5"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2050:3:5"},"nodeType":"YulFunctionCall","src":"2050:28:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2022:3:5"},"nodeType":"YulFunctionCall","src":"2022:57:5"},{"name":"_start","nodeType":"YulIdentifier","src":"2081:6:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:5"},"nodeType":"YulFunctionCall","src":"2018:70:5"},"variables":[{"name":"cc","nodeType":"YulTypedName","src":"2012:2:5","type":""}]}]},"src":"1885:341:5"},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2243:9:5"},{"name":"_length","nodeType":"YulIdentifier","src":"2254:7:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2236:6:5"},"nodeType":"YulFunctionCall","src":"2236:26:5"},"nodeType":"YulExpressionStatement","src":"2236:26:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2393:4:5","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"mc","nodeType":"YulIdentifier","src":"2407:2:5"},{"kind":"number","nodeType":"YulLiteral","src":"2411:2:5","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2403:3:5"},"nodeType":"YulFunctionCall","src":"2403:11:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2420:2:5","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2416:3:5"},"nodeType":"YulFunctionCall","src":"2416:7:5"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2399:3:5"},"nodeType":"YulFunctionCall","src":"2399:25:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2386:6:5"},"nodeType":"YulFunctionCall","src":"2386:39:5"},"nodeType":"YulExpressionStatement","src":"2386:39:5"}]},"nodeType":"YulCase","src":"740:1693:5","value":{"kind":"number","nodeType":"YulLiteral","src":"745:1:5","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"2525:246:5","statements":[{"nodeType":"YulAssignment","src":"2535:24:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2554:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2548:5:5"},"nodeType":"YulFunctionCall","src":"2548:11:5"},"variableNames":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2535:9:5"}]},{"expression":{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2706:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2717:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2699:6:5"},"nodeType":"YulFunctionCall","src":"2699:20:5"},"nodeType":"YulExpressionStatement","src":"2699:20:5"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2736:4:5","type":"","value":"0x40"},{"arguments":[{"name":"tempBytes","nodeType":"YulIdentifier","src":"2746:9:5"},{"kind":"number","nodeType":"YulLiteral","src":"2757:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2742:3:5"},"nodeType":"YulFunctionCall","src":"2742:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2729:6:5"},"nodeType":"YulFunctionCall","src":"2729:34:5"},"nodeType":"YulExpressionStatement","src":"2729:34:5"}]},"nodeType":"YulCase","src":"2517:254:5","value":"default"}],"expression":{"arguments":[{"name":"_length","nodeType":"YulIdentifier","src":"725:7:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"718:6:5"},"nodeType":"YulFunctionCall","src":"718:15:5"},"nodeType":"YulSwitch","src":"711:2060:5"}]},"evmVersion":"london","externalReferences":[{"declaration":826,"isOffset":false,"isSlot":false,"src":"2030:6:5","valueSize":1},{"declaration":830,"isOffset":false,"isSlot":false,"src":"1476:7:5","valueSize":1},{"declaration":830,"isOffset":false,"isSlot":false,"src":"1867:7:5","valueSize":1},{"declaration":830,"isOffset":false,"isSlot":false,"src":"2254:7:5","valueSize":1},{"declaration":830,"isOffset":false,"isSlot":false,"src":"725:7:5","valueSize":1},{"declaration":828,"isOffset":false,"isSlot":false,"src":"2081:6:5","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"1787:9:5","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"2243:9:5","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"2535:9:5","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"2706:9:5","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"2746:9:5","valueSize":1},{"declaration":864,"isOffset":false,"isSlot":false,"src":"879:9:5","valueSize":1}],"id":866,"nodeType":"InlineAssembly","src":"694:2083:5"},{"expression":{"id":867,"name":"tempBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"2790:9:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":834,"id":868,"nodeType":"Return","src":"2783:16:5"}]},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"361:5:5","nodeType":"FunctionDefinition","parameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"_bytes","nameLocation":"385:6:5","nodeType":"VariableDeclaration","scope":870,"src":"372:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":825,"name":"bytes","nodeType":"ElementaryTypeName","src":"372:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"_start","nameLocation":"405:6:5","nodeType":"VariableDeclaration","scope":870,"src":"397:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":827,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"_length","nameLocation":"425:7:5","nodeType":"VariableDeclaration","scope":870,"src":"417:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"417:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"366:70:5"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":870,"src":"460:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":832,"name":"bytes","nodeType":"ElementaryTypeName","src":"460:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"459:14:5"},"scope":1092,"src":"352:2452:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":899,"nodeType":"Block","src":"2897:129:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2907:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":880,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2917:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:5","memberName":"length","nodeType":"MemberAccess","src":"2917:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2907:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":889,"nodeType":"IfStatement","src":"2903:60:5","trueBody":{"id":888,"nodeType":"Block","src":"2932:31:5","statements":[{"expression":{"arguments":[{"hexValue":"","id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2953:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2947:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":883,"name":"bytes","nodeType":"ElementaryTypeName","src":"2947:5:5","typeDescriptions":{}}},"id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2947:9:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":878,"id":887,"nodeType":"Return","src":"2940:16:5"}]}},{"expression":{"arguments":[{"id":891,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2982:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":892,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"2990:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":893,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2998:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3005:6:5","memberName":"length","nodeType":"MemberAccess","src":"2998:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":895,"name":"_start","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3014:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2998:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":890,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[870,900],"referencedDeclaration":870,"src":"2976:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256,uint256) pure returns (bytes memory)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2976:45:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":878,"id":898,"nodeType":"Return","src":"2969:52:5"}]},"id":900,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"2817:5:5","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"_bytes","nameLocation":"2836:6:5","nodeType":"VariableDeclaration","scope":900,"src":"2823:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":871,"name":"bytes","nodeType":"ElementaryTypeName","src":"2823:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"_start","nameLocation":"2852:6:5","nodeType":"VariableDeclaration","scope":900,"src":"2844:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2844:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2822:37:5"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":900,"src":"2883:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"2883:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2882:14:5"},"scope":1092,"src":"2808:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":927,"nodeType":"Block","src":"3102:228:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":907,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3112:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3119:6:5","memberName":"length","nodeType":"MemberAccess","src":"3112:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3128:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3112:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":918,"nodeType":"IfStatement","src":"3108:131:5","trueBody":{"id":917,"nodeType":"Block","src":"3132:107:5","statements":[{"assignments":[912],"declarations":[{"constant":false,"id":912,"mutability":"mutable","name":"ret","nameLocation":"3148:3:5","nodeType":"VariableDeclaration","scope":917,"src":"3140:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":911,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3140:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":913,"nodeType":"VariableDeclarationStatement","src":"3140:11:5"},{"AST":{"nodeType":"YulBlock","src":"3168:47:5","statements":[{"nodeType":"YulAssignment","src":"3178:29:5","value":{"arguments":[{"arguments":[{"name":"_bytes","nodeType":"YulIdentifier","src":"3195:6:5"},{"kind":"number","nodeType":"YulLiteral","src":"3203:2:5","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3191:3:5"},"nodeType":"YulFunctionCall","src":"3191:15:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3185:5:5"},"nodeType":"YulFunctionCall","src":"3185:22:5"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"3178:3:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":902,"isOffset":false,"isSlot":false,"src":"3195:6:5","valueSize":1},{"declaration":912,"isOffset":false,"isSlot":false,"src":"3178:3:5","valueSize":1}],"id":914,"nodeType":"InlineAssembly","src":"3159:56:5"},{"expression":{"id":915,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"3229:3:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":906,"id":916,"nodeType":"Return","src":"3222:10:5"}]}},{"expression":{"arguments":[{"id":921,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3263:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3272:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3272:7:5","typeDescriptions":{}}}],"id":924,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3271:9:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"}],"expression":{"id":919,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3252:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3256:6:5","memberName":"decode","nodeType":"MemberAccess","src":"3252:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3252:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":906,"id":926,"nodeType":"Return","src":"3245:36:5"}]},"id":928,"implemented":true,"kind":"function","modifiers":[],"name":"toBytes32","nameLocation":"3039:9:5","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":902,"mutability":"mutable","name":"_bytes","nameLocation":"3062:6:5","nodeType":"VariableDeclaration","scope":928,"src":"3049:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"3049:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3048:21:5"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":928,"src":"3093:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3092:9:5"},"scope":1092,"src":"3030:300:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"3406:44:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":938,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"3437:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":937,"name":"toBytes32","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3427:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3427:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3419:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"3419:7:5","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3419:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":934,"id":941,"nodeType":"Return","src":"3412:33:5"}]},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"3343:9:5","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"_bytes","nameLocation":"3366:6:5","nodeType":"VariableDeclaration","scope":943,"src":"3353:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":929,"name":"bytes","nodeType":"ElementaryTypeName","src":"3353:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3352:21:5"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"3397:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"3397:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3396:9:5"},"scope":1092,"src":"3334:116:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1012,"nodeType":"Block","src":"3531:297:5","statements":[{"assignments":[951],"declarations":[{"constant":false,"id":951,"mutability":"mutable","name":"nibbles","nameLocation":"3550:7:5","nodeType":"VariableDeclaration","scope":1012,"src":"3537:20:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":950,"name":"bytes","nodeType":"ElementaryTypeName","src":"3537:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":959,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":954,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3570:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3577:6:5","memberName":"length","nodeType":"MemberAccess","src":"3570:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3586:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3570:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3560:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":952,"name":"bytes","nodeType":"ElementaryTypeName","src":"3564:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3537:51:5"},{"assignments":[961],"declarations":[{"constant":false,"id":961,"mutability":"mutable","name":"len","nameLocation":"3603:3:5","nodeType":"VariableDeclaration","scope":1012,"src":"3595:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"3595:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":964,"initialValue":{"expression":{"id":962,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3609:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3616:6:5","memberName":"length","nodeType":"MemberAccess","src":"3609:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3595:27:5"},{"body":{"id":1008,"nodeType":"Block","src":"3659:144:5","statements":[{"expression":{"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":972,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3667:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":976,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3675:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3679:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3675:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3667:14:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":977,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3684:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":979,"indexExpression":{"id":978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3691:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3684:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3697:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3684:14:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3667:31:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":983,"nodeType":"ExpressionStatement","src":"3667:31:5"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":984,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3706:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":990,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3714:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3718:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3714:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3714:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3706:18:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":995,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"3740:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":997,"indexExpression":{"id":996,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3747:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3740:9:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3734:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":993,"name":"uint8","nodeType":"ElementaryTypeName","src":"3734:5:5","typeDescriptions":{}}},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3136","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3753:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"3734:21:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3727:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":991,"name":"bytes1","nodeType":"ElementaryTypeName","src":"3727:6:5","typeDescriptions":{}}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3727:29:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"3706:50:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1003,"nodeType":"ExpressionStatement","src":"3706:50:5"},{"id":1007,"nodeType":"UncheckedBlock","src":"3765:32:5","statements":[{"expression":{"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3785:3:5","subExpression":{"id":1004,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3787:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1006,"nodeType":"ExpressionStatement","src":"3785:3:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3648:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":970,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"3652:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3648:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1009,"initializationExpression":{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"i","nameLocation":"3641:1:5","nodeType":"VariableDeclaration","scope":1009,"src":"3633:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"3633:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":968,"initialValue":{"hexValue":"30","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3645:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3633:13:5"},"nodeType":"ForStatement","src":"3628:175:5"},{"expression":{"id":1010,"name":"nibbles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"3816:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":949,"id":1011,"nodeType":"Return","src":"3809:14:5"}]},"id":1013,"implemented":true,"kind":"function","modifiers":[],"name":"toNibbles","nameLocation":"3463:9:5","nodeType":"FunctionDefinition","parameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"_bytes","nameLocation":"3486:6:5","nodeType":"VariableDeclaration","scope":1013,"src":"3473:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":944,"name":"bytes","nodeType":"ElementaryTypeName","src":"3473:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3472:21:5"},"returnParameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1013,"src":"3517:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":947,"name":"bytes","nodeType":"ElementaryTypeName","src":"3517:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3516:14:5"},"scope":1092,"src":"3454:374:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"3911:248:5","statements":[{"assignments":[1021],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"ret","nameLocation":"3930:3:5","nodeType":"VariableDeclaration","scope":1072,"src":"3917:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1020,"name":"bytes","nodeType":"ElementaryTypeName","src":"3917:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1029,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1024,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"3946:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3953:6:5","memberName":"length","nodeType":"MemberAccess","src":"3946:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3962:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3946:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3936:9:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1022,"name":"bytes","nodeType":"ElementaryTypeName","src":"3940:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3936:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3917:47:5"},{"assignments":[1031],"declarations":[{"constant":false,"id":1031,"mutability":"mutable","name":"len","nameLocation":"3979:3:5","nodeType":"VariableDeclaration","scope":1072,"src":"3971:11:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"3971:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1034,"initialValue":{"expression":{"id":1032,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"3985:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:6:5","memberName":"length","nodeType":"MemberAccess","src":"3985:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3971:24:5"},{"body":{"id":1068,"nodeType":"Block","src":"4032:106:5","statements":[{"expression":{"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1042,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4040:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1044,"indexExpression":{"id":1043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4044:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4040:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1045,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"4050:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1049,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1046,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4057:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4057:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4050:13:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4067:1:5","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4050:18:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":1052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4049:20:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"baseExpression":{"id":1053,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"4073:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1059,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4080:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4084:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4080:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4088:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4080:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4073:17:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"id":1060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4072:19:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4049:42:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4040:51:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1063,"nodeType":"ExpressionStatement","src":"4040:51:5"},{"id":1067,"nodeType":"UncheckedBlock","src":"4100:32:5","statements":[{"expression":{"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"4120:3:5","subExpression":{"id":1064,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4122:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1066,"nodeType":"ExpressionStatement","src":"4120:3:5"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"4021:1:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1040,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1031,"src":"4025:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4021:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1069,"initializationExpression":{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"i","nameLocation":"4014:1:5","nodeType":"VariableDeclaration","scope":1069,"src":"4006:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1038,"initialValue":{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4018:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4006:13:5"},"nodeType":"ForStatement","src":"4001:137:5"},{"expression":{"id":1070,"name":"ret","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"4151:3:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1019,"id":1071,"nodeType":"Return","src":"4144:10:5"}]},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"fromNibbles","nameLocation":"3841:11:5","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"_bytes","nameLocation":"3866:6:5","nodeType":"VariableDeclaration","scope":1073,"src":"3853:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1014,"name":"bytes","nodeType":"ElementaryTypeName","src":"3853:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3852:21:5"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"3897:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"3897:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3896:14:5"},"scope":1092,"src":"3832:327:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"4249:56:5","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1083,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1075,"src":"4272:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1082,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4262:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1086,"name":"_other","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4293:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1085,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4283:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4283:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4262:38:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1081,"id":1089,"nodeType":"Return","src":"4255:45:5"}]},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4172:5:5","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1075,"mutability":"mutable","name":"_bytes","nameLocation":"4191:6:5","nodeType":"VariableDeclaration","scope":1091,"src":"4178:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1074,"name":"bytes","nodeType":"ElementaryTypeName","src":"4178:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"_other","nameLocation":"4212:6:5","nodeType":"VariableDeclaration","scope":1091,"src":"4199:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1076,"name":"bytes","nodeType":"ElementaryTypeName","src":"4199:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4177:42:5"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"4243:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"4243:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4242:6:5"},"scope":1092,"src":"4163:142:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1093,"src":"249:4058:5","usedErrors":[]}],"src":"46:4262:5"},"id":5},"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol","exportedSymbols":{"BytesUtils":[1092],"MerkleTrie":[1752],"RLPReader":[2600]},"id":1753,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1094,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:6"},{"absolutePath":"contracts/messaging/connectors/optimism/lib/BytesUtils.sol","file":"./BytesUtils.sol","id":1096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1753,"sourceUnit":1093,"src":"93:44:6","symbolAliases":[{"foreign":{"id":1095,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"101:10:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/messaging/connectors/optimism/lib/RLPReader.sol","file":"./RLPReader.sol","id":1098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1753,"sourceUnit":2601,"src":"138:42:6","symbolAliases":[{"foreign":{"id":1097,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"146:9:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleTrie","contractDependencies":[],"contractKind":"library","documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"182:176:6","text":" @title MerkleTrie\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_MerkleTrie.sol"},"fullyImplemented":true,"id":1752,"linearizedBaseContracts":[1752],"name":"MerkleTrie","nameLocation":"367:10:6","nodeType":"ContractDefinition","nodes":[{"canonicalName":"MerkleTrie.NodeType","id":1103,"members":[{"id":1100,"name":"BranchNode","nameLocation":"473:10:6","nodeType":"EnumValue","src":"473:10:6"},{"id":1101,"name":"ExtensionNode","nameLocation":"489:13:6","nodeType":"EnumValue","src":"489:13:6"},{"id":1102,"name":"LeafNode","nameLocation":"508:8:6","nodeType":"EnumValue","src":"508:8:6"}],"name":"NodeType","nameLocation":"458:8:6","nodeType":"EnumDefinition","src":"453:67:6"},{"canonicalName":"MerkleTrie.TrieNode","id":1110,"members":[{"constant":false,"id":1105,"mutability":"mutable","name":"encoded","nameLocation":"552:7:6","nodeType":"VariableDeclaration","scope":1110,"src":"546:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1104,"name":"bytes","nodeType":"ElementaryTypeName","src":"546:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"decoded","nameLocation":"585:7:6","nodeType":"VariableDeclaration","scope":1110,"src":"565:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":1107,"nodeType":"UserDefinedTypeName","pathNode":{"id":1106,"name":"RLPReader.RLPItem","nameLocations":["565:9:6","575:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"565:17:6"},"referencedDeclaration":1869,"src":"565:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":1108,"nodeType":"ArrayTypeName","src":"565:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"name":"TrieNode","nameLocation":"531:8:6","nodeType":"StructDefinition","scope":1752,"src":"524:73:6","visibility":"public"},{"constant":true,"id":1113,"mutability":"constant","name":"TREE_RADIX","nameLocation":"765:10:6","nodeType":"VariableDeclaration","scope":1752,"src":"748:32:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"778:2:6","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"internal"},{"constant":true,"id":1118,"mutability":"constant","name":"BRANCH_NODE_LENGTH","nameLocation":"877:18:6","nodeType":"VariableDeclaration","scope":1752,"src":"860:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1114,"name":"uint256","nodeType":"ElementaryTypeName","src":"860:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1115,"name":"TREE_RADIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"898:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"911:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"898:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":true,"id":1121,"mutability":"constant","name":"LEAF_OR_EXTENSION_NODE_LENGTH","nameLocation":"1019:29:6","nodeType":"VariableDeclaration","scope":1752,"src":"1002:50:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1051:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1124,"mutability":"constant","name":"PREFIX_EXTENSION_EVEN","nameLocation":"1449:21:6","nodeType":"VariableDeclaration","scope":1752,"src":"1434:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1122,"name":"uint8","nodeType":"ElementaryTypeName","src":"1434:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1473:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"internal"},{"constant":true,"id":1127,"mutability":"constant","name":"PREFIX_EXTENSION_ODD","nameLocation":"1493:20:6","nodeType":"VariableDeclaration","scope":1752,"src":"1478:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1125,"name":"uint8","nodeType":"ElementaryTypeName","src":"1478:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1516:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":true,"id":1130,"mutability":"constant","name":"PREFIX_LEAF_EVEN","nameLocation":"1536:16:6","nodeType":"VariableDeclaration","scope":1752,"src":"1521:35:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1128,"name":"uint8","nodeType":"ElementaryTypeName","src":"1521:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1555:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"constant":true,"id":1133,"mutability":"constant","name":"PREFIX_LEAF_ODD","nameLocation":"1575:15:6","nodeType":"VariableDeclaration","scope":1752,"src":"1560:34:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1131,"name":"uint8","nodeType":"ElementaryTypeName","src":"1560:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1593:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":true,"id":1139,"mutability":"constant","name":"RLP_NULL","nameLocation":"1676:8:6","nodeType":"VariableDeclaration","scope":1752,"src":"1660:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1134,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1660:6:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"value":{"arguments":[{"hexValue":"30783830","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1694:4:6","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1687:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1135,"name":"bytes1","nodeType":"ElementaryTypeName","src":"1687:6:6","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1687:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"body":{"id":1172,"nodeType":"Block","src":"2623:128:6","statements":[{"assignments":[1154,1156],"declarations":[{"constant":false,"id":1154,"mutability":"mutable","name":"exists","nameLocation":"2635:6:6","nodeType":"VariableDeclaration","scope":1172,"src":"2630:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1153,"name":"bool","nodeType":"ElementaryTypeName","src":"2630:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"value","nameLocation":"2656:5:6","nodeType":"VariableDeclaration","scope":1172,"src":"2643:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1155,"name":"bytes","nodeType":"ElementaryTypeName","src":"2643:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1162,"initialValue":{"arguments":[{"id":1158,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"2669:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1159,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1146,"src":"2675:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1160,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"2683:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1157,"name":"get","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"2665:3:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes32) pure returns (bool,bytes memory)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2665:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2629:60:6"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"2704:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":1166,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"2731:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"2739:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1164,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"2714:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2725:5:6","memberName":"equal","nodeType":"MemberAccess","referencedDeclaration":1091,"src":"2714:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory) pure returns (bool)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2714:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2704:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2703:43:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1152,"id":1171,"nodeType":"Return","src":"2696:50:6"}]},"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"1784:671:6","text":" @notice Verifies a proof that a given key/value pair is present in the\n Merkle trie.\n @param _key Key of the node to search for, as a hex string.\n @param _value Value of the node to search for, as a hex string.\n @param _proof Merkle trie inclusion proof for the desired node. Unlike\n traditional Merkle trees, this proof is executed top-down and consists\n of a list of RLP-encoded nodes that make a path down to the target node.\n @param _root Known root of the Merkle trie. Used to verify that the\n included proof is correctly constructed.\n @return _verified `true` if the k/v pair exists in the trie, `false` otherwise."},"id":1173,"implemented":true,"kind":"function","modifiers":[],"name":"verifyInclusionProof","nameLocation":"2467:20:6","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"mutability":"mutable","name":"_key","nameLocation":"2506:4:6","nodeType":"VariableDeclaration","scope":1173,"src":"2493:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1141,"name":"bytes","nodeType":"ElementaryTypeName","src":"2493:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1144,"mutability":"mutable","name":"_value","nameLocation":"2529:6:6","nodeType":"VariableDeclaration","scope":1173,"src":"2516:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1143,"name":"bytes","nodeType":"ElementaryTypeName","src":"2516:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1146,"mutability":"mutable","name":"_proof","nameLocation":"2554:6:6","nodeType":"VariableDeclaration","scope":1173,"src":"2541:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1145,"name":"bytes","nodeType":"ElementaryTypeName","src":"2541:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"_root","nameLocation":"2574:5:6","nodeType":"VariableDeclaration","scope":1173,"src":"2566:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2566:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2487:96:6"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"_verified","nameLocation":"2612:9:6","nodeType":"VariableDeclaration","scope":1173,"src":"2607:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"2607:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2606:16:6"},"scope":1752,"src":"2458:293:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1242,"nodeType":"Block","src":"3233:389:6","statements":[{"assignments":[1191],"declarations":[{"constant":false,"id":1191,"mutability":"mutable","name":"proof","nameLocation":"3257:5:6","nodeType":"VariableDeclaration","scope":1242,"src":"3239:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":1189,"nodeType":"UserDefinedTypeName","pathNode":{"id":1188,"name":"TrieNode","nameLocations":["3239:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"3239:8:6"},"referencedDeclaration":1110,"src":"3239:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":1190,"nodeType":"ArrayTypeName","src":"3239:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"}],"id":1195,"initialValue":{"arguments":[{"id":1193,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"3277:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1192,"name":"_parseProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"3265:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct MerkleTrie.TrieNode memory[] memory)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3239:45:6"},{"assignments":[1197,1199,1201],"declarations":[{"constant":false,"id":1197,"mutability":"mutable","name":"pathLength","nameLocation":"3299:10:6","nodeType":"VariableDeclaration","scope":1242,"src":"3291:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"keyRemainder","nameLocation":"3324:12:6","nodeType":"VariableDeclaration","scope":1242,"src":"3311:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1198,"name":"bytes","nodeType":"ElementaryTypeName","src":"3311:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"isFinalNode","nameLocation":"3343:11:6","nodeType":"VariableDeclaration","scope":1242,"src":"3338:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1200,"name":"bool","nodeType":"ElementaryTypeName","src":"3338:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1207,"initialValue":{"arguments":[{"id":1203,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"3372:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},{"id":1204,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"3379:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1205,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1180,"src":"3385:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1202,"name":"_walkNodePath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"3358:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$","typeString":"function (struct MerkleTrie.TrieNode memory[] memory,bytes memory,bytes32) pure returns (uint256,bytes memory,bool)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3358:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$","typeString":"tuple(uint256,bytes memory,bool)"}},"nodeType":"VariableDeclarationStatement","src":"3290:101:6"},{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"exists","nameLocation":"3403:6:6","nodeType":"VariableDeclaration","scope":1242,"src":"3398:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1208,"name":"bool","nodeType":"ElementaryTypeName","src":"3398:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1214,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1210,"name":"keyRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1199,"src":"3412:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3425:6:6","memberName":"length","nodeType":"MemberAccess","src":"3412:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3435:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3412:24:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"3398:38:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3451:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1217,"name":"isFinalNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"3461:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3451:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f76696465642070726f6f6620697320696e76616c69642e","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3474:28:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","typeString":"literal_string \"Provided proof is invalid.\""},"value":"Provided proof is invalid."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","typeString":"literal_string \"Provided proof is invalid.\""}],"id":1215,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3443:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3443:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1221,"nodeType":"ExpressionStatement","src":"3443:60:6"},{"assignments":[1223],"declarations":[{"constant":false,"id":1223,"mutability":"mutable","name":"value","nameLocation":"3523:5:6","nodeType":"VariableDeclaration","scope":1242,"src":"3510:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1222,"name":"bytes","nodeType":"ElementaryTypeName","src":"3510:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1237,"initialValue":{"condition":{"id":1224,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3531:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"hexValue":"","id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3585:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3579:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1232,"name":"bytes","nodeType":"ElementaryTypeName","src":"3579:5:6","typeDescriptions":{}}},"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3579:9:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3531:57:6","trueExpression":{"arguments":[{"baseExpression":{"id":1226,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"3554:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":1230,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1227,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"3560:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3573:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3560:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3554:21:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}],"id":1225,"name":"_getNodeValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1712,"src":"3540:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TrieNode_$1110_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct MerkleTrie.TrieNode memory) pure returns (bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3540:36:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3510:78:6"},{"expression":{"components":[{"id":1238,"name":"exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"3603:6:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"3611:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3602:15:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1186,"id":1241,"nodeType":"Return","src":"3595:22:6"}]},"documentation":{"id":1174,"nodeType":"StructuredDocumentation","src":"2755:333:6","text":" @notice Retrieves the value associated with a given key.\n @param _key Key to search for, as hex bytes.\n @param _proof Merkle trie inclusion proof for the key.\n @param _root Known root of the Merkle trie.\n @return _exists Whether or not the key exists.\n @return _value Value of the key if it exists."},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"3100:3:6","nodeType":"FunctionDefinition","parameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"_key","nameLocation":"3122:4:6","nodeType":"VariableDeclaration","scope":1243,"src":"3109:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"3109:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"_proof","nameLocation":"3145:6:6","nodeType":"VariableDeclaration","scope":1243,"src":"3132:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1177,"name":"bytes","nodeType":"ElementaryTypeName","src":"3132:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1180,"mutability":"mutable","name":"_root","nameLocation":"3165:5:6","nodeType":"VariableDeclaration","scope":1243,"src":"3157:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3157:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3103:71:6"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1183,"mutability":"mutable","name":"_exists","nameLocation":"3203:7:6","nodeType":"VariableDeclaration","scope":1243,"src":"3198:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1182,"name":"bool","nodeType":"ElementaryTypeName","src":"3198:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"_value","nameLocation":"3225:6:6","nodeType":"VariableDeclaration","scope":1243,"src":"3212:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1184,"name":"bytes","nodeType":"ElementaryTypeName","src":"3212:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3197:35:6"},"scope":1752,"src":"3091:531:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1553,"nodeType":"Block","src":"4320:3885:6","statements":[{"assignments":[1262],"declarations":[{"constant":false,"id":1262,"mutability":"mutable","name":"pathLength","nameLocation":"4334:10:6","nodeType":"VariableDeclaration","scope":1553,"src":"4326:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"4326:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1264,"initialValue":{"hexValue":"30","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4347:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4326:22:6"},{"assignments":[1266],"declarations":[{"constant":false,"id":1266,"mutability":"mutable","name":"key","nameLocation":"4367:3:6","nodeType":"VariableDeclaration","scope":1553,"src":"4354:16:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1265,"name":"bytes","nodeType":"ElementaryTypeName","src":"4354:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1271,"initialValue":{"arguments":[{"id":1269,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1250,"src":"4394:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1267,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"4373:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4384:9:6","memberName":"toNibbles","nodeType":"MemberAccess","referencedDeclaration":1013,"src":"4373:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4373:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4354:45:6"},{"assignments":[1273],"declarations":[{"constant":false,"id":1273,"mutability":"mutable","name":"currentNodeID","nameLocation":"4414:13:6","nodeType":"VariableDeclaration","scope":1553,"src":"4406:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1275,"initialValue":{"id":1274,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"4430:5:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4406:29:6"},{"assignments":[1277],"declarations":[{"constant":false,"id":1277,"mutability":"mutable","name":"currentKeyIndex","nameLocation":"4449:15:6","nodeType":"VariableDeclaration","scope":1553,"src":"4441:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4441:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1279,"initialValue":{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4441:27:6"},{"assignments":[1281],"declarations":[{"constant":false,"id":1281,"mutability":"mutable","name":"currentKeyIncrement","nameLocation":"4482:19:6","nodeType":"VariableDeclaration","scope":1553,"src":"4474:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4474:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1283,"initialValue":{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4504:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4474:31:6"},{"assignments":[1286],"declarations":[{"constant":false,"id":1286,"mutability":"mutable","name":"currentNode","nameLocation":"4527:11:6","nodeType":"VariableDeclaration","scope":1553,"src":"4511:27:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode"},"typeName":{"id":1285,"nodeType":"UserDefinedTypeName","pathNode":{"id":1284,"name":"TrieNode","nameLocations":["4511:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"4511:8:6"},"referencedDeclaration":1110,"src":"4511:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"visibility":"internal"}],"id":1287,"nodeType":"VariableDeclarationStatement","src":"4511:27:6"},{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"len","nameLocation":"4620:3:6","nodeType":"VariableDeclaration","scope":1553,"src":"4612:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"4612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1292,"initialValue":{"expression":{"id":1290,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4626:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4633:6:6","memberName":"length","nodeType":"MemberAccess","src":"4626:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4612:27:6"},{"body":{"id":1533,"nodeType":"Block","src":"4676:3330:6","statements":[{"expression":{"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1300,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"4684:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1301,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4698:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":1303,"indexExpression":{"id":1302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4705:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4698:9:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"src":"4684:23:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1305,"nodeType":"ExpressionStatement","src":"4684:23:6"},{"expression":{"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1306,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4715:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1307,"name":"currentKeyIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4734:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:38:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1309,"nodeType":"ExpressionStatement","src":"4715:38:6"},{"expression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1310,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"4898:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4912:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4898:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1313,"nodeType":"ExpressionStatement","src":"4898:15:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1314,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"4926:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4945:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4926:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1328,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5110:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5122:7:6","memberName":"encoded","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"5110:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5130:6:6","memberName":"length","nodeType":"MemberAccess","src":"5110:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5139:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5144:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5139:6:6","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"}},"src":"5110:35:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1347,"nodeType":"Block","src":"5330:170:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1339,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5423:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5435:7:6","memberName":"encoded","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"5423:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1337,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"5402:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5413:9:6","memberName":"toBytes32","nodeType":"MemberAccess","referencedDeclaration":928,"src":"5402:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5402:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1342,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5447:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5402:58:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e7465726e616c206e6f64652068617368","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5462:28:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","typeString":"literal_string \"Invalid internal node hash\""},"value":"Invalid internal node hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","typeString":"literal_string \"Invalid internal node hash\""}],"id":1336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5394:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5394:97:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1346,"nodeType":"ExpressionStatement","src":"5394:97:6"}]},"id":1348,"nodeType":"IfStatement","src":"5106:394:6","trueBody":{"id":1335,"nodeType":"Block","src":"5147:177:6","statements":[]}},"id":1349,"nodeType":"IfStatement","src":"4922:578:6","trueBody":{"id":1327,"nodeType":"Block","src":"4948:152:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":1319,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5032:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5044:7:6","memberName":"encoded","nodeType":"MemberAccess","referencedDeclaration":1105,"src":"5032:19:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1318,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5022:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5022:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1322,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"5056:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5022:47:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726f6f742068617368","id":1324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5071:19:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","typeString":"literal_string \"Invalid root hash\""},"value":"Invalid root hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","typeString":"literal_string \"Invalid root hash\""}],"id":1317,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5014:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5014:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1326,"nodeType":"ExpressionStatement","src":"5014:77:6"}]}},{"id":1353,"nodeType":"UncheckedBlock","src":"5576:32:6","statements":[{"expression":{"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5596:3:6","subExpression":{"id":1350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"5598:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1352,"nodeType":"ExpressionStatement","src":"5596:3:6"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1354,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"5620:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5632:7:6","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"5620:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5640:6:6","memberName":"length","nodeType":"MemberAccess","src":"5620:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1357,"name":"BRANCH_NODE_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"5650:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5620:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1398,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"6244:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1399,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6256:7:6","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"6244:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6264:6:6","memberName":"length","nodeType":"MemberAccess","src":"6244:26:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1401,"name":"LEAF_OR_EXTENSION_NODE_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6274:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:59:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1530,"nodeType":"Block","src":"7942:58:6","statements":[{"expression":{"arguments":[{"hexValue":"526563656976656420616e20756e706172736561626c65206e6f64652e","id":1527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7959:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","typeString":"literal_string \"Received an unparseable node.\""},"value":"Received an unparseable node."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","typeString":"literal_string \"Received an unparseable node.\""}],"id":1526,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7952:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7952:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1529,"nodeType":"ExpressionStatement","src":"7952:39:6"}]},"id":1531,"nodeType":"IfStatement","src":"6240:1760:6","trueBody":{"id":1525,"nodeType":"Block","src":"6305:1631:6","statements":[{"assignments":[1404],"declarations":[{"constant":false,"id":1404,"mutability":"mutable","name":"path","nameLocation":"6328:4:6","nodeType":"VariableDeclaration","scope":1525,"src":"6315:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1403,"name":"bytes","nodeType":"ElementaryTypeName","src":"6315:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1408,"initialValue":{"arguments":[{"id":1406,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"6348:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}],"id":1405,"name":"_getNodePath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"6335:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_TrieNode_$1110_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct MerkleTrie.TrieNode memory) pure returns (bytes memory)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6335:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6315:45:6"},{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"prefix","nameLocation":"6376:6:6","nodeType":"VariableDeclaration","scope":1525,"src":"6370:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1409,"name":"uint8","nodeType":"ElementaryTypeName","src":"6370:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1417,"initialValue":{"arguments":[{"baseExpression":{"id":1413,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6391:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1415,"indexExpression":{"hexValue":"30","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6391:7:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6385:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1411,"name":"uint8","nodeType":"ElementaryTypeName","src":"6385:5:6","typeDescriptions":{}}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6385:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6370:29:6"},{"assignments":[1419],"declarations":[{"constant":false,"id":1419,"mutability":"mutable","name":"offset","nameLocation":"6415:6:6","nodeType":"VariableDeclaration","scope":1525,"src":"6409:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1418,"name":"uint8","nodeType":"ElementaryTypeName","src":"6409:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1426,"initialValue":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6424:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1421,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"6429:6:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6438:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6429:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6428:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6424:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6409:31:6"},{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"pathRemainder","nameLocation":"6463:13:6","nodeType":"VariableDeclaration","scope":1525,"src":"6450:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1427,"name":"bytes","nodeType":"ElementaryTypeName","src":"6450:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1434,"initialValue":{"arguments":[{"id":1431,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6496:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1432,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"6502:6:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":1429,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6479:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6490:5:6","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":900,"src":"6479:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes memory)"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6479:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6450:59:6"},{"assignments":[1436],"declarations":[{"constant":false,"id":1436,"mutability":"mutable","name":"keyRemainder","nameLocation":"6532:12:6","nodeType":"VariableDeclaration","scope":1525,"src":"6519:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1435,"name":"bytes","nodeType":"ElementaryTypeName","src":"6519:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1442,"initialValue":{"arguments":[{"id":1439,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6564:3:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1440,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"6569:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1437,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"6547:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6558:5:6","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":900,"src":"6547:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes memory)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6547:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6519:66:6"},{"assignments":[1444],"declarations":[{"constant":false,"id":1444,"mutability":"mutable","name":"sharedNibbleLength","nameLocation":"6603:18:6","nodeType":"VariableDeclaration","scope":1525,"src":"6595:26:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1443,"name":"uint256","nodeType":"ElementaryTypeName","src":"6595:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1449,"initialValue":{"arguments":[{"id":1446,"name":"pathRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6647:13:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1447,"name":"keyRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"6662:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1445,"name":"_getSharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"6624:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory,bytes memory) pure returns (uint256)"}},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6624:51:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6595:80:6"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1450,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"6690:6:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1451,"name":"PREFIX_LEAF_EVEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"6700:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6690:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"6720:6:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1454,"name":"PREFIX_LEAF_ODD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6730:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6720:25:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6690:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"7210:6:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1482,"name":"PREFIX_EXTENSION_EVEN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"7220:21:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7210:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"7245:6:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1485,"name":"PREFIX_EXTENSION_ODD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"7255:20:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7245:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7210:65:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1522,"nodeType":"Block","src":"7857:71:6","statements":[{"expression":{"arguments":[{"hexValue":"52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e20707265666978","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7876:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","typeString":"literal_string \"Received a node with an unknown prefix\""},"value":"Received a node with an unknown prefix"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","typeString":"literal_string \"Received a node with an unknown prefix\""}],"id":1518,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7869:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7869:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1521,"nodeType":"ExpressionStatement","src":"7869:48:6"}]},"id":1523,"nodeType":"IfStatement","src":"7206:722:6","trueBody":{"id":1517,"nodeType":"Block","src":"7277:574:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1488,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7293:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1489,"name":"pathRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"7315:13:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7329:6:6","memberName":"length","nodeType":"MemberAccess","src":"7315:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7293:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1515,"nodeType":"Block","src":"7596:245:6","statements":[{"expression":{"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1501,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7702:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"expression":{"id":1503,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"7729:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1504,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7741:7:6","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"7729:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1506,"indexExpression":{"hexValue":"31","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7749:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7729:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":1502,"name":"_getNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"7718:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7718:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7702:50:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1509,"nodeType":"ExpressionStatement","src":"7702:50:6"},{"expression":{"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1510,"name":"currentKeyIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"7766:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1511,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7788:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7766:40:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1513,"nodeType":"ExpressionStatement","src":"7766:40:6"},{"id":1514,"nodeType":"Continue","src":"7820:8:6"}]},"id":1516,"nodeType":"IfStatement","src":"7289:552:6","trueBody":{"id":1500,"nodeType":"Block","src":"7337:253:6","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1492,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7525:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1495,"name":"RLP_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7549:8:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7541:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1493,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7541:7:6","typeDescriptions":{}}},"id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7541:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7525:33:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1498,"nodeType":"ExpressionStatement","src":"7525:33:6"},{"id":1499,"nodeType":"Break","src":"7572:5:6"}]}}]}},"id":1524,"nodeType":"IfStatement","src":"6686:1242:6","trueBody":{"id":1480,"nodeType":"Block","src":"6747:453:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1457,"name":"pathRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"6763:13:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6777:6:6","memberName":"length","nodeType":"MemberAccess","src":"6763:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1459,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6787:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6763:42:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1461,"name":"keyRemainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"6809:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6822:6:6","memberName":"length","nodeType":"MemberAccess","src":"6809:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1463,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"6832:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:41:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6763:87:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1471,"nodeType":"IfStatement","src":"6759:299:6","trueBody":{"id":1470,"nodeType":"Block","src":"6852:206:6","statements":[{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1466,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"7008:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1467,"name":"sharedNibbleLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"7027:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7008:37:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1469,"nodeType":"ExpressionStatement","src":"7008:37:6"}]}},{"expression":{"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1472,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"7139:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1475,"name":"RLP_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"7163:8:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7155:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1473,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7155:7:6","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7155:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7139:33:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1478,"nodeType":"ExpressionStatement","src":"7139:33:6"},{"id":1479,"nodeType":"Break","src":"7184:5:6"}]}}]}},"id":1532,"nodeType":"IfStatement","src":"5616:2384:6","trueBody":{"id":1397,"nodeType":"Block","src":"5670:564:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"5684:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1360,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5703:3:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5707:6:6","memberName":"length","nodeType":"MemberAccess","src":"5703:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5684:29:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1395,"nodeType":"Block","src":"5857:369:6","statements":[{"assignments":[1366],"declarations":[{"constant":false,"id":1366,"mutability":"mutable","name":"branchKey","nameLocation":"5995:9:6","nodeType":"VariableDeclaration","scope":1395,"src":"5989:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1365,"name":"uint8","nodeType":"ElementaryTypeName","src":"5989:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1373,"initialValue":{"arguments":[{"baseExpression":{"id":1369,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"6013:3:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1371,"indexExpression":{"id":1370,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"6017:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6013:20:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6007:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1367,"name":"uint8","nodeType":"ElementaryTypeName","src":"6007:5:6","typeDescriptions":{}}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6007:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5989:45:6"},{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"nextNode","nameLocation":"6071:8:6","nodeType":"VariableDeclaration","scope":1395,"src":"6046:33:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"RLPReader.RLPItem","nameLocations":["6046:9:6","6056:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"6046:17:6"},"referencedDeclaration":1869,"src":"6046:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"id":1383,"initialValue":{"baseExpression":{"expression":{"id":1379,"name":"currentNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"6082:11:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1380,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6094:7:6","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"6082:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1382,"indexExpression":{"id":1381,"name":"branchKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"6102:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6082:30:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"nodeType":"VariableDeclarationStatement","src":"6046:66:6"},{"expression":{"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1384,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"6124:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1386,"name":"nextNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"6151:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":1385,"name":"_getNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"6140:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":1387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6124:36:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1389,"nodeType":"ExpressionStatement","src":"6124:36:6"},{"expression":{"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1390,"name":"currentKeyIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"6172:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6194:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6172:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1393,"nodeType":"ExpressionStatement","src":"6172:23:6"},{"id":1394,"nodeType":"Continue","src":"6207:8:6"}]},"id":1396,"nodeType":"IfStatement","src":"5680:546:6","trueBody":{"id":1364,"nodeType":"Block","src":"5715:136:6","statements":[{"id":1363,"nodeType":"Break","src":"5835:5:6"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"4665:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1298,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4669:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4665:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1534,"initializationExpression":{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"i","nameLocation":"4658:1:6","nodeType":"VariableDeclaration","scope":1534,"src":"4650:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"4650:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1296,"initialValue":{"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4662:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4650:13:6"},"nodeType":"ForStatement","src":"4645:3361:6"},{"assignments":[1536],"declarations":[{"constant":false,"id":1536,"mutability":"mutable","name":"isFinalNode","nameLocation":"8074:11:6","nodeType":"VariableDeclaration","scope":1553,"src":"8069:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"8069:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1543,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"currentNodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8088:13:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":1540,"name":"RLP_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"8113:8:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8105:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8105:7:6","typeDescriptions":{}}},"id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8105:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8088:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"8069:53:6"},{"expression":{"components":[{"id":1544,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"8136:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1547,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8165:3:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1548,"name":"currentKeyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"8170:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1545,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"8148:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8159:5:6","memberName":"slice","nodeType":"MemberAccess","referencedDeclaration":900,"src":"8148:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,uint256) pure returns (bytes memory)"}},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1550,"name":"isFinalNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"8188:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8135:65:6","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes_memory_ptr_$_t_bool_$","typeString":"tuple(uint256,bytes memory,bool)"}},"functionReturnParameters":1260,"id":1552,"nodeType":"Return","src":"8128:72:6"}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"3703:387:6","text":" @notice Walks through a proof using a provided key.\n @param _proof Inclusion proof to walk through.\n @param _key Key to use for the walk.\n @param _root Known root of the trie.\n @return _pathLength Length of the final path\n @return _keyRemainder Portion of the key remaining after the walk.\n @return _isFinalNode Whether or not we've hit a dead end."},"id":1554,"implemented":true,"kind":"function","modifiers":[],"name":"_walkNodePath","nameLocation":"4102:13:6","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"mutability":"mutable","name":"_proof","nameLocation":"4139:6:6","nodeType":"VariableDeclaration","scope":1554,"src":"4121:24:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":1246,"nodeType":"UserDefinedTypeName","pathNode":{"id":1245,"name":"TrieNode","nameLocations":["4121:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"4121:8:6"},"referencedDeclaration":1110,"src":"4121:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":1247,"nodeType":"ArrayTypeName","src":"4121:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"},{"constant":false,"id":1250,"mutability":"mutable","name":"_key","nameLocation":"4164:4:6","nodeType":"VariableDeclaration","scope":1554,"src":"4151:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1249,"name":"bytes","nodeType":"ElementaryTypeName","src":"4151:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1252,"mutability":"mutable","name":"_root","nameLocation":"4182:5:6","nodeType":"VariableDeclaration","scope":1554,"src":"4174:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1251,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4174:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4115:76:6"},"returnParameters":{"id":1260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"_pathLength","nameLocation":"4241:11:6","nodeType":"VariableDeclaration","scope":1554,"src":"4233:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"4233:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"_keyRemainder","nameLocation":"4273:13:6","nodeType":"VariableDeclaration","scope":1554,"src":"4260:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1256,"name":"bytes","nodeType":"ElementaryTypeName","src":"4260:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"_isFinalNode","nameLocation":"4299:12:6","nodeType":"VariableDeclaration","scope":1554,"src":"4294:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1258,"name":"bool","nodeType":"ElementaryTypeName","src":"4294:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4225:92:6"},"scope":1752,"src":"4093:4112:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1629,"nodeType":"Block","src":"8494:412:6","statements":[{"assignments":[1569],"declarations":[{"constant":false,"id":1569,"mutability":"mutable","name":"nodes","nameLocation":"8527:5:6","nodeType":"VariableDeclaration","scope":1629,"src":"8500:32:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":1567,"nodeType":"UserDefinedTypeName","pathNode":{"id":1566,"name":"RLPReader.RLPItem","nameLocations":["8500:9:6","8510:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"8500:17:6"},"referencedDeclaration":1869,"src":"8500:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":1568,"nodeType":"ArrayTypeName","src":"8500:19:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":1574,"initialValue":{"arguments":[{"id":1572,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"8554:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1570,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"8535:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8545:8:6","memberName":"readList","nodeType":"MemberAccess","referencedDeclaration":2012,"src":"8535:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8500:61:6"},{"assignments":[1579],"declarations":[{"constant":false,"id":1579,"mutability":"mutable","name":"proof","nameLocation":"8585:5:6","nodeType":"VariableDeclaration","scope":1629,"src":"8567:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":1577,"nodeType":"UserDefinedTypeName","pathNode":{"id":1576,"name":"TrieNode","nameLocations":["8567:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"8567:8:6"},"referencedDeclaration":1110,"src":"8567:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":1578,"nodeType":"ArrayTypeName","src":"8567:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"}],"id":1587,"initialValue":{"arguments":[{"expression":{"id":1584,"name":"nodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"8608:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8614:6:6","memberName":"length","nodeType":"MemberAccess","src":"8608:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8593:14:6","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct MerkleTrie.TrieNode memory[] memory)"},"typeName":{"baseType":{"id":1581,"nodeType":"UserDefinedTypeName","pathNode":{"id":1580,"name":"TrieNode","nameLocations":["8597:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"8597:8:6"},"referencedDeclaration":1110,"src":"8597:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":1582,"nodeType":"ArrayTypeName","src":"8597:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}}},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8593:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8567:54:6"},{"assignments":[1589],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"len","nameLocation":"8636:3:6","nodeType":"VariableDeclaration","scope":1629,"src":"8628:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1588,"name":"uint256","nodeType":"ElementaryTypeName","src":"8628:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1592,"initialValue":{"expression":{"id":1590,"name":"nodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"8642:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8648:6:6","memberName":"length","nodeType":"MemberAccess","src":"8642:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8628:26:6"},{"body":{"id":1625,"nodeType":"Block","src":"8691:192:6","statements":[{"assignments":[1601],"declarations":[{"constant":false,"id":1601,"mutability":"mutable","name":"encoded","nameLocation":"8712:7:6","nodeType":"VariableDeclaration","scope":1625,"src":"8699:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"8699:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1608,"initialValue":{"arguments":[{"baseExpression":{"id":1604,"name":"nodes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"8742:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1606,"indexExpression":{"id":1605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"8748:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8742:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1602,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"8722:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8732:9:6","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":2048,"src":"8722:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8722:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"8699:52:6"},{"expression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1609,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8759:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"id":1611,"indexExpression":{"id":1610,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"8765:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8759:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1613,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"8789:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"arguments":[{"id":1616,"name":"encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"8826:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1614,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"8807:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8817:8:6","memberName":"readList","nodeType":"MemberAccess","referencedDeclaration":2012,"src":"8807:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8807:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}],"id":1612,"name":"TrieNode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8770:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TrieNode_$1110_storage_ptr_$","typeString":"type(struct MerkleTrie.TrieNode storage pointer)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8780:7:6","8798:7:6"],"names":["encoded","decoded"],"nodeType":"FunctionCall","src":"8770:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"src":"8759:77:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1620,"nodeType":"ExpressionStatement","src":"8759:77:6"},{"id":1624,"nodeType":"UncheckedBlock","src":"8845:32:6","statements":[{"expression":{"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"8865:3:6","subExpression":{"id":1621,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"8867:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1623,"nodeType":"ExpressionStatement","src":"8865:3:6"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"8680:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1598,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"8684:3:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8680:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1626,"initializationExpression":{"assignments":[1594],"declarations":[{"constant":false,"id":1594,"mutability":"mutable","name":"i","nameLocation":"8673:1:6","nodeType":"VariableDeclaration","scope":1626,"src":"8665:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1593,"name":"uint256","nodeType":"ElementaryTypeName","src":"8665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1596,"initialValue":{"hexValue":"30","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8677:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8665:13:6"},"nodeType":"ForStatement","src":"8660:223:6"},{"expression":{"id":1627,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8896:5:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory[] memory"}},"functionReturnParameters":1563,"id":1628,"nodeType":"Return","src":"8889:12:6"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"8209:191:6","text":" @notice Parses an RLP-encoded proof into something more useful.\n @param _proof RLP-encoded proof to parse.\n @return _parsed Proof parsed into easily accessible structs."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_parseProof","nameLocation":"8412:11:6","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"_proof","nameLocation":"8437:6:6","nodeType":"VariableDeclaration","scope":1630,"src":"8424:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1556,"name":"bytes","nodeType":"ElementaryTypeName","src":"8424:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8423:21:6"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"_parsed","nameLocation":"8485:7:6","nodeType":"VariableDeclaration","scope":1630,"src":"8467:25:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_memory_ptr_$dyn_memory_ptr","typeString":"struct MerkleTrie.TrieNode[]"},"typeName":{"baseType":{"id":1560,"nodeType":"UserDefinedTypeName","pathNode":{"id":1559,"name":"TrieNode","nameLocations":["8467:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"8467:8:6"},"referencedDeclaration":1110,"src":"8467:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"id":1561,"nodeType":"ArrayTypeName","src":"8467:10:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TrieNode_$1110_storage_$dyn_storage_ptr","typeString":"struct MerkleTrie.TrieNode[]"}},"visibility":"internal"}],"src":"8466:27:6"},"scope":1752,"src":"8403:503:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1668,"nodeType":"Block","src":"9293:310:6","statements":[{"assignments":[1640],"declarations":[{"constant":false,"id":1640,"mutability":"mutable","name":"nodeID","nameLocation":"9312:6:6","nodeType":"VariableDeclaration","scope":1668,"src":"9299:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1639,"name":"bytes","nodeType":"ElementaryTypeName","src":"9299:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1641,"nodeType":"VariableDeclarationStatement","src":"9299:19:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1642,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"9329:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":1643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9335:6:6","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"9329:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9344:2:6","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9329:17:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1661,"nodeType":"Block","src":"9461:96:6","statements":[{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1654,"name":"nodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9515:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1657,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"9544:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1655,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9524:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9534:9:6","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":2048,"src":"9524:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9524:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"9515:35:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1660,"nodeType":"ExpressionStatement","src":"9515:35:6"}]},"id":1662,"nodeType":"IfStatement","src":"9325:232:6","trueBody":{"id":1653,"nodeType":"Block","src":"9348:107:6","statements":[{"expression":{"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1646,"name":"nodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9410:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1649,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"9442:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1647,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9419:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9429:12:6","memberName":"readRawBytes","nodeType":"MemberAccess","referencedDeclaration":2319,"src":"9419:22:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9419:29:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"9410:38:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1652,"nodeType":"ExpressionStatement","src":"9410:38:6"}]}},{"expression":{"arguments":[{"id":1665,"name":"nodeID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"9591:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1663,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"9570:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9581:9:6","memberName":"toBytes32","nodeType":"MemberAccess","referencedDeclaration":928,"src":"9570:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9570:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1638,"id":1667,"nodeType":"Return","src":"9563:35:6"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"8910:289:6","text":" @notice Picks out the ID for a node. Node ID is referred to as the\n \"hash\" within the specification, but nodes < 32 bytes are not actually\n hashed.\n @param _node Node to pull an ID for.\n @return _nodeID ID for the node, depending on the size of its contents."},"id":1669,"implemented":true,"kind":"function","modifiers":[],"name":"_getNodeID","nameLocation":"9211:10:6","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"_node","nameLocation":"9247:5:6","nodeType":"VariableDeclaration","scope":1669,"src":"9222:30:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":1633,"nodeType":"UserDefinedTypeName","pathNode":{"id":1632,"name":"RLPReader.RLPItem","nameLocations":["9222:9:6","9232:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"9222:17:6"},"referencedDeclaration":1869,"src":"9222:17:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"9221:32:6"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"_nodeID","nameLocation":"9284:7:6","nodeType":"VariableDeclaration","scope":1669,"src":"9276:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9276:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9275:17:6"},"scope":1752,"src":"9202:401:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1689,"nodeType":"Block","src":"9869:77:6","statements":[{"expression":{"arguments":[{"arguments":[{"baseExpression":{"expression":{"id":1682,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"9923:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1683,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9929:7:6","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"9923:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1685,"indexExpression":{"hexValue":"30","id":1684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9937:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9923:16:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1680,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"9903:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9913:9:6","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":2048,"src":"9903:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1678,"name":"BytesUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"9882:10:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BytesUtils_$1092_$","typeString":"type(library BytesUtils)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9893:9:6","memberName":"toNibbles","nodeType":"MemberAccess","referencedDeclaration":1013,"src":"9882:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9882:59:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1677,"id":1688,"nodeType":"Return","src":"9875:66:6"}]},"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"9607:172:6","text":" @notice Gets the path for a leaf or extension node.\n @param _node Node to get a path for.\n @return _path Node path, converted to an array of nibbles."},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"_getNodePath","nameLocation":"9791:12:6","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"_node","nameLocation":"9820:5:6","nodeType":"VariableDeclaration","scope":1690,"src":"9804:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode"},"typeName":{"id":1672,"nodeType":"UserDefinedTypeName","pathNode":{"id":1671,"name":"TrieNode","nameLocations":["9804:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"9804:8:6"},"referencedDeclaration":1110,"src":"9804:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"visibility":"internal"}],"src":"9803:23:6"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"_path","nameLocation":"9862:5:6","nodeType":"VariableDeclaration","scope":1690,"src":"9849:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1675,"name":"bytes","nodeType":"ElementaryTypeName","src":"9849:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9848:20:6"},"scope":1752,"src":"9782:164:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1711,"nodeType":"Block","src":"10179:78:6","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":1701,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"10212:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10218:7:6","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"10212:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1708,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1703,"name":"_node","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1694,"src":"10226:5:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode memory"}},"id":1704,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10232:7:6","memberName":"decoded","nodeType":"MemberAccess","referencedDeclaration":1109,"src":"10226:13:6","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10240:6:6","memberName":"length","nodeType":"MemberAccess","src":"10226:20:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10249:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10226:24:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10212:39:6","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1699,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"10192:9:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10202:9:6","memberName":"readBytes","nodeType":"MemberAccess","referencedDeclaration":2048,"src":"10192:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10192:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1698,"id":1710,"nodeType":"Return","src":"10185:67:6"}]},"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"9950:137:6","text":" @notice Gets the path for a node.\n @param _node Node to get a value for.\n @return _value Node value, as hex bytes."},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"_getNodeValue","nameLocation":"10099:13:6","nodeType":"FunctionDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"_node","nameLocation":"10129:5:6","nodeType":"VariableDeclaration","scope":1712,"src":"10113:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_memory_ptr","typeString":"struct MerkleTrie.TrieNode"},"typeName":{"id":1693,"nodeType":"UserDefinedTypeName","pathNode":{"id":1692,"name":"TrieNode","nameLocations":["10113:8:6"],"nodeType":"IdentifierPath","referencedDeclaration":1110,"src":"10113:8:6"},"referencedDeclaration":1110,"src":"10113:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_TrieNode_$1110_storage_ptr","typeString":"struct MerkleTrie.TrieNode"}},"visibility":"internal"}],"src":"10112:23:6"},"returnParameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"_value","nameLocation":"10171:6:6","nodeType":"VariableDeclaration","scope":1712,"src":"10158:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1696,"name":"bytes","nodeType":"ElementaryTypeName","src":"10158:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10157:21:6"},"scope":1752,"src":"10090:167:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1750,"nodeType":"Block","src":"10590:118:6","statements":[{"assignments":[1723],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"i","nameLocation":"10604:1:6","nodeType":"VariableDeclaration","scope":1750,"src":"10596:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"10596:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1725,"initialValue":{"hexValue":"30","id":1724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10608:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10596:13:6"},{"body":{"id":1746,"nodeType":"Block","src":"10672:18:6","statements":[{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10680:3:6","subExpression":{"id":1743,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10680:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"10680:3:6"}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1726,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10622:2:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10625:6:6","memberName":"length","nodeType":"MemberAccess","src":"10622:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10634:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10622:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1730,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"10639:2:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10642:6:6","memberName":"length","nodeType":"MemberAccess","src":"10639:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10651:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10639:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10622:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1735,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"10656:2:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1737,"indexExpression":{"id":1736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10659:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10656:5:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":1738,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"10665:2:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1740,"indexExpression":{"id":1739,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10668:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10665:5:6","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10656:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10622:48:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1747,"nodeType":"WhileStatement","src":"10615:75:6"},{"expression":{"id":1748,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"10702:1:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1721,"id":1749,"nodeType":"Return","src":"10695:8:6"}]},"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"10261:221:6","text":" @notice Utility; determines the number of nibbles shared between two\n nibble arrays.\n @param _a First nibble array.\n @param _b Second nibble array.\n @return _shared Number of shared nibbles."},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"_getSharedNibbleLength","nameLocation":"10494:22:6","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1715,"mutability":"mutable","name":"_a","nameLocation":"10530:2:6","nodeType":"VariableDeclaration","scope":1751,"src":"10517:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1714,"name":"bytes","nodeType":"ElementaryTypeName","src":"10517:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"_b","nameLocation":"10547:2:6","nodeType":"VariableDeclaration","scope":1751,"src":"10534:15:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1716,"name":"bytes","nodeType":"ElementaryTypeName","src":"10534:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10516:34:6"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"_shared","nameLocation":"10581:7:6","nodeType":"VariableDeclaration","scope":1751,"src":"10573:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"10573:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10572:17:6"},"scope":1752,"src":"10485:223:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1753,"src":"359:10351:6","usedErrors":[]}],"src":"46:10665:6"},"id":6},"contracts/messaging/connectors/optimism/lib/OVMCodec.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/OVMCodec.sol","exportedSymbols":{"OVMCodec":[1815],"RLPReader":[2600]},"id":1816,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1754,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:7"},{"absolutePath":"contracts/messaging/connectors/optimism/lib/RLPReader.sol","file":"./RLPReader.sol","id":1756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1816,"sourceUnit":2601,"src":"93:42:7","symbolAliases":[{"foreign":{"id":1755,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"101:9:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"OVMCodec","contractDependencies":[],"contractKind":"library","documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"137:173:7","text":" @title OVMCodec\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol"},"fullyImplemented":true,"id":1815,"linearizedBaseContracts":[1815],"name":"OVMCodec","nameLocation":"319:8:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OVMCodec.EVMAccount","id":1766,"members":[{"constant":false,"id":1759,"mutability":"mutable","name":"nonce","nameLocation":"411:5:7","nodeType":"VariableDeclaration","scope":1766,"src":"403:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"balance","nameLocation":"430:7:7","nodeType":"VariableDeclaration","scope":1766,"src":"422:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"422:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"storageRoot","nameLocation":"451:11:7","nodeType":"VariableDeclaration","scope":1766,"src":"443:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"443:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"codeHash","nameLocation":"476:8:7","nodeType":"VariableDeclaration","scope":1766,"src":"468:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1764,"name":"bytes32","nodeType":"ElementaryTypeName","src":"468:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"EVMAccount","nameLocation":"386:10:7","nodeType":"StructDefinition","scope":1815,"src":"379:110:7","visibility":"public"},{"body":{"id":1813,"nodeType":"Block","src":"751:352:7","statements":[{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"accountState","nameLocation":"784:12:7","nodeType":"VariableDeclaration","scope":1813,"src":"757:39:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"RLPReader.RLPItem","nameLocations":["757:9:7","767:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"757:17:7"},"referencedDeclaration":1869,"src":"757:17:7","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":1779,"nodeType":"ArrayTypeName","src":"757:19:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":1785,"initialValue":{"arguments":[{"id":1783,"name":"_encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"818:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1781,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"799:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"809:8:7","memberName":"readList","nodeType":"MemberAccess","referencedDeclaration":2012,"src":"799:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"799:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"757:70:7"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":1789,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"897:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1791,"indexExpression":{"hexValue":"30","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"910:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"897:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1787,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"875:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"885:11:7","memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"875:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":1795,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"954:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1797,"indexExpression":{"hexValue":"31","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"954:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1793,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"932:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"942:11:7","memberName":"readUint256","nodeType":"MemberAccess","referencedDeclaration":2179,"src":"932:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"932:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"baseExpression":{"id":1801,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1015:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1803,"indexExpression":{"hexValue":"32","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1028:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1015:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1799,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"993:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1003:11:7","memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":2147,"src":"993:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"baseExpression":{"id":1807,"name":"accountState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1073:12:7","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1809,"indexExpression":{"hexValue":"33","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1086:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1073:15:7","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"expression":{"id":1805,"name":"RLPReader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"1051:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RLPReader_$2600_$","typeString":"type(library RLPReader)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1061:11:7","memberName":"readBytes32","nodeType":"MemberAccess","referencedDeclaration":2147,"src":"1051:21:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1051:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1786,"name":"EVMAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"847:10:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_EVMAccount_$1766_storage_ptr_$","typeString":"type(struct OVMCodec.EVMAccount storage pointer)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["868:5:7","923:7:7","980:11:7","1041:8:7"],"names":["nonce","balance","storageRoot","codeHash"],"nodeType":"FunctionCall","src":"847:251:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$1766_memory_ptr","typeString":"struct OVMCodec.EVMAccount memory"}},"functionReturnParameters":1774,"id":1812,"nodeType":"Return","src":"834:264:7"}]},"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"493:164:7","text":" @notice Decodes an RLP-encoded account state into a useful struct.\n @param _encoded RLP-encoded account state.\n @return Account state struct."},"id":1814,"implemented":true,"kind":"function","modifiers":[],"name":"decodeEVMAccount","nameLocation":"669:16:7","nodeType":"FunctionDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"_encoded","nameLocation":"699:8:7","nodeType":"VariableDeclaration","scope":1814,"src":"686:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1768,"name":"bytes","nodeType":"ElementaryTypeName","src":"686:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"685:23:7"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1814,"src":"732:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$1766_memory_ptr","typeString":"struct OVMCodec.EVMAccount"},"typeName":{"id":1772,"nodeType":"UserDefinedTypeName","pathNode":{"id":1771,"name":"EVMAccount","nameLocations":["732:10:7"],"nodeType":"IdentifierPath","referencedDeclaration":1766,"src":"732:10:7"},"referencedDeclaration":1766,"src":"732:10:7","typeDescriptions":{"typeIdentifier":"t_struct$_EVMAccount_$1766_storage_ptr","typeString":"struct OVMCodec.EVMAccount"}},"visibility":"internal"}],"src":"731:19:7"},"scope":1815,"src":"660:443:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1816,"src":"311:794:7","usedErrors":[]}],"src":"46:1060:7"},"id":7},"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol","exportedSymbols":{"PredeployAddresses":[1855]},"id":1856,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1817,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"PredeployAddresses","contractDependencies":[],"contractKind":"library","documentation":{"id":1818,"nodeType":"StructuredDocumentation","src":"71:197:8","text":" @title PredeployAddresses\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol"},"fullyImplemented":true,"id":1855,"linearizedBaseContracts":[1855],"name":"PredeployAddresses","nameLocation":"277:18:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1821,"mutability":"constant","name":"L2_TO_L1_MESSAGE_PASSER","nameLocation":"326:23:8","nodeType":"VariableDeclaration","scope":1855,"src":"300:94:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1819,"name":"address","nodeType":"ElementaryTypeName","src":"300:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303030","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"352:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000000"},"visibility":"internal"},{"constant":true,"id":1824,"mutability":"constant","name":"L1_MESSAGE_SENDER","nameLocation":"424:17:8","nodeType":"VariableDeclaration","scope":1855,"src":"398:88:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"398:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303031","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"444:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000001"},"visibility":"internal"},{"constant":true,"id":1827,"mutability":"constant","name":"DEPLOYER_WHITELIST","nameLocation":"516:18:8","nodeType":"VariableDeclaration","scope":1855,"src":"490:89:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1825,"name":"address","nodeType":"ElementaryTypeName","src":"490:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303032","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000002"},"visibility":"internal"},{"constant":true,"id":1833,"mutability":"constant","name":"OVM_ETH","nameLocation":"617:7:8","nodeType":"VariableDeclaration","scope":1855,"src":"583:95:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"583:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"value":{"arguments":[{"hexValue":"307844656164446541646465416464454164646561644445614444454164446561444465414430303030","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"635:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"627:8:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"627:8:8","stateMutability":"payable","typeDescriptions":{}}},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":true,"id":1836,"mutability":"constant","name":"L2_CROSS_DOMAIN_MESSENGER","nameLocation":"708:25:8","nodeType":"VariableDeclaration","scope":1855,"src":"682:96:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1834,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303037","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"736:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000007"},"visibility":"internal"},{"constant":true,"id":1839,"mutability":"constant","name":"LIB_ADDRESS_MANAGER","nameLocation":"808:19:8","nodeType":"VariableDeclaration","scope":1855,"src":"782:90:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"782:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303038","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"830:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000008"},"visibility":"internal"},{"constant":true,"id":1842,"mutability":"constant","name":"PROXY_EOA","nameLocation":"902:9:8","nodeType":"VariableDeclaration","scope":1855,"src":"876:80:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1840,"name":"address","nodeType":"ElementaryTypeName","src":"876:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303039","id":1841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000009"},"visibility":"internal"},{"constant":true,"id":1845,"mutability":"constant","name":"L2_STANDARD_BRIDGE","nameLocation":"986:18:8","nodeType":"VariableDeclaration","scope":1855,"src":"960:89:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303130","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1007:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000010"},"visibility":"internal"},{"constant":true,"id":1848,"mutability":"constant","name":"SEQUENCER_FEE_WALLET","nameLocation":"1079:20:8","nodeType":"VariableDeclaration","scope":1855,"src":"1053:91:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1846,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303131","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1102:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000011"},"visibility":"internal"},{"constant":true,"id":1851,"mutability":"constant","name":"L2_STANDARD_TOKEN_FACTORY","nameLocation":"1174:25:8","nodeType":"VariableDeclaration","scope":1855,"src":"1148:96:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"1148:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303132","id":1850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1202:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000012"},"visibility":"internal"},{"constant":true,"id":1854,"mutability":"constant","name":"L1_BLOCK_NUMBER","nameLocation":"1274:15:8","nodeType":"VariableDeclaration","scope":1855,"src":"1248:86:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1852,"name":"address","nodeType":"ElementaryTypeName","src":"1248:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307834323030303030303030303030303030303030303030303030303030303030303030303030303133","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1292:42:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x4200000000000000000000000000000000000013"},"visibility":"internal"}],"scope":1856,"src":"269:1068:8","usedErrors":[]}],"src":"46:1292:8"},"id":8},"contracts/messaging/connectors/optimism/lib/RLPReader.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/RLPReader.sol","exportedSymbols":{"RLPReader":[2600]},"id":2601,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1857,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"RLPReader","contractDependencies":[],"contractKind":"library","documentation":{"id":1858,"nodeType":"StructuredDocumentation","src":"71:170:9","text":" @title RLPReader\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/rlp/Lib_RLPReader.sol"},"fullyImplemented":true,"id":2600,"linearizedBaseContracts":[2600],"name":"RLPReader","nameLocation":"250:9:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1861,"mutability":"constant","name":"MAX_LIST_LENGTH","nameLocation":"343:15:9","nodeType":"VariableDeclaration","scope":2600,"src":"317:46:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3332","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"361:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"visibility":"internal"},{"canonicalName":"RLPReader.RLPItemType","id":1864,"members":[{"id":1862,"name":"DATA_ITEM","nameLocation":"432:9:9","nodeType":"EnumValue","src":"432:9:9"},{"id":1863,"name":"LIST_ITEM","nameLocation":"447:9:9","nodeType":"EnumValue","src":"447:9:9"}],"name":"RLPItemType","nameLocation":"414:11:9","nodeType":"EnumDefinition","src":"409:51:9"},{"canonicalName":"RLPReader.RLPItem","id":1869,"members":[{"constant":false,"id":1866,"mutability":"mutable","name":"length","nameLocation":"540:6:9","nodeType":"VariableDeclaration","scope":1869,"src":"532:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"532:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"ptr","nameLocation":"560:3:9","nodeType":"VariableDeclaration","scope":1869,"src":"552:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"RLPItem","nameLocation":"518:7:9","nodeType":"StructDefinition","scope":2600,"src":"511:57:9","visibility":"public"},{"body":{"id":1888,"nodeType":"Block","src":"884:122:9","statements":[{"assignments":[1879],"declarations":[{"constant":false,"id":1879,"mutability":"mutable","name":"ptr","nameLocation":"898:3:9","nodeType":"VariableDeclaration","scope":1888,"src":"890:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1878,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1880,"nodeType":"VariableDeclarationStatement","src":"890:11:9"},{"AST":{"nodeType":"YulBlock","src":"916:33:9","statements":[{"nodeType":"YulAssignment","src":"924:19:9","value":{"arguments":[{"name":"_in","nodeType":"YulIdentifier","src":"935:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"940:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"931:3:9"},"nodeType":"YulFunctionCall","src":"931:12:9"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"924:3:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1872,"isOffset":false,"isSlot":false,"src":"935:3:9","valueSize":1},{"declaration":1879,"isOffset":false,"isSlot":false,"src":"924:3:9","valueSize":1}],"id":1881,"nodeType":"InlineAssembly","src":"907:42:9"},{"expression":{"arguments":[{"expression":{"id":1883,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"979:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"983:6:9","memberName":"length","nodeType":"MemberAccess","src":"979:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1885,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"996:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"962:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$1869_storage_ptr_$","typeString":"type(struct RLPReader.RLPItem storage pointer)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["971:6:9","991:3:9"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"962:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"functionReturnParameters":1877,"id":1887,"nodeType":"Return","src":"955:46:9"}]},"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"652:153:9","text":" Converts bytes to a reference to memory position and length.\n @param _in Input bytes to convert.\n @return Output memory reference."},"id":1889,"implemented":true,"kind":"function","modifiers":[],"name":"toRLPItem","nameLocation":"817:9:9","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"_in","nameLocation":"840:3:9","nodeType":"VariableDeclaration","scope":1889,"src":"827:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1871,"name":"bytes","nodeType":"ElementaryTypeName","src":"827:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"826:18:9"},"returnParameters":{"id":1877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1889,"src":"868:14:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":1875,"nodeType":"UserDefinedTypeName","pathNode":{"id":1874,"name":"RLPItem","nameLocations":["868:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"868:7:9"},"referencedDeclaration":1869,"src":"868:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"867:16:9"},"scope":2600,"src":"808:198:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1994,"nodeType":"Block","src":"1225:1211:9","statements":[{"assignments":[1901,null,1904],"declarations":[{"constant":false,"id":1901,"mutability":"mutable","name":"listOffset","nameLocation":"1240:10:9","nodeType":"VariableDeclaration","scope":1994,"src":"1232:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1900,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,{"constant":false,"id":1904,"mutability":"mutable","name":"itemType","nameLocation":"1266:8:9","nodeType":"VariableDeclaration","scope":1994,"src":"1254:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":1903,"nodeType":"UserDefinedTypeName","pathNode":{"id":1902,"name":"RLPItemType","nameLocations":["1254:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1864,"src":"1254:11:9"},"referencedDeclaration":1864,"src":"1254:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"id":1908,"initialValue":{"arguments":[{"id":1906,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"1292:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":1905,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"1278:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1278:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"1231:65:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"1311:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1911,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1323:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1335:9:9","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":1863,"src":"1323:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"src":"1311:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6973742076616c75652e","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1346:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","typeString":"literal_string \"Invalid RLP list value.\""},"value":"Invalid RLP list value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","typeString":"literal_string \"Invalid RLP list value.\""}],"id":1909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1303:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1303:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1916,"nodeType":"ExpressionStatement","src":"1303:69:9"},{"assignments":[1921],"declarations":[{"constant":false,"id":1921,"mutability":"mutable","name":"out","nameLocation":"1772:3:9","nodeType":"VariableDeclaration","scope":1994,"src":"1755:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":1919,"nodeType":"UserDefinedTypeName","pathNode":{"id":1918,"name":"RLPItem","nameLocations":["1755:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"1755:7:9"},"referencedDeclaration":1869,"src":"1755:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":1920,"nodeType":"ArrayTypeName","src":"1755:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"id":1928,"initialValue":{"arguments":[{"id":1926,"name":"MAX_LIST_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1792:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1778:13:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct RLPReader.RLPItem memory[] memory)"},"typeName":{"baseType":{"id":1923,"nodeType":"UserDefinedTypeName","pathNode":{"id":1922,"name":"RLPItem","nameLocations":["1782:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"1782:7:9"},"referencedDeclaration":1869,"src":"1782:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":1924,"nodeType":"ArrayTypeName","src":"1782:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}}},"id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1755:53:9"},{"assignments":[1930],"declarations":[{"constant":false,"id":1930,"mutability":"mutable","name":"itemCount","nameLocation":"1823:9:9","nodeType":"VariableDeclaration","scope":1994,"src":"1815:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1929,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1932,"initialValue":{"hexValue":"30","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1835:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1815:21:9"},{"assignments":[1934],"declarations":[{"constant":false,"id":1934,"mutability":"mutable","name":"offset","nameLocation":"1850:6:9","nodeType":"VariableDeclaration","scope":1994,"src":"1842:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"1842:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1936,"initialValue":{"id":1935,"name":"listOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"1859:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1842:27:9"},{"body":{"id":1989,"nodeType":"Block","src":"1903:398:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1919:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1943,"name":"MAX_LIST_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"1931:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1919:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f766964656420524c50206c6973742065786365656473206d6178206c697374206c656e6774682e","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1948:44:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","typeString":"literal_string \"Provided RLP list exceeds max list length.\""},"value":"Provided RLP list exceeds max list length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","typeString":"literal_string \"Provided RLP list exceeds max list length.\""}],"id":1941,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1911:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1911:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1947,"nodeType":"ExpressionStatement","src":"1911:82:9"},{"assignments":[1949,1951,null],"declarations":[{"constant":false,"id":1949,"mutability":"mutable","name":"itemOffset","nameLocation":"2011:10:9","nodeType":"VariableDeclaration","scope":1989,"src":"2003:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2003:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"itemLength","nameLocation":"2031:10:9","nodeType":"VariableDeclaration","scope":1989,"src":"2023:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2023:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":1964,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1954,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2087:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":1955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2091:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"2087:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1956,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2100:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2087:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1958,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2113:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":1959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2117:3:9","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"2113:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1960,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2123:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2070:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$1869_storage_ptr_$","typeString":"type(struct RLPReader.RLPItem storage pointer)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2079:6:9","2108:3:9"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"2070:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":1952,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2047:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:92:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"2002:137:9"},{"expression":{"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1965,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2148:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"id":1967,"indexExpression":{"id":1966,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"2152:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2148:14:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1969,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"2182:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1970,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2195:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2182:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1972,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"2212:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":1973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2216:3:9","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"2212:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1974,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2222:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2212:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1968,"name":"RLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"2165:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RLPItem_$1869_storage_ptr_$","typeString":"type(struct RLPReader.RLPItem storage pointer)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2174:6:9","2207:3:9"],"names":["length","ptr"],"nodeType":"FunctionCall","src":"2165:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"src":"2148:82:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":1978,"nodeType":"ExpressionStatement","src":"2148:82:9"},{"expression":{"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1979,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"2239:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2252:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2239:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1982,"nodeType":"ExpressionStatement","src":"2239:14:9"},{"expression":{"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1983,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"2261:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1984,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2271:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1985,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"2284:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2271:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2261:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ExpressionStatement","src":"2261:33:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1937,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"1882:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1938,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"1891:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":1939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1895:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"1891:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1882:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"WhileStatement","src":"1875:426:9"},{"AST":{"nodeType":"YulBlock","src":"2379:36:9","statements":[{"expression":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"2394:3:9"},{"name":"itemCount","nodeType":"YulIdentifier","src":"2399:9:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2387:6:9"},"nodeType":"YulFunctionCall","src":"2387:22:9"},"nodeType":"YulExpressionStatement","src":"2387:22:9"}]},"evmVersion":"london","externalReferences":[{"declaration":1930,"isOffset":false,"isSlot":false,"src":"2399:9:9","valueSize":1},{"declaration":1921,"isOffset":false,"isSlot":false,"src":"2394:3:9","valueSize":1}],"id":1991,"nodeType":"InlineAssembly","src":"2370:45:9"},{"expression":{"id":1992,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"2428:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"functionReturnParameters":1899,"id":1993,"nodeType":"Return","src":"2421:10:9"}]},"documentation":{"id":1890,"nodeType":"StructuredDocumentation","src":"1010:133:9","text":" Reads an RLP list value into a list of RLP items.\n @param _in RLP list value.\n @return Decoded RLP list items."},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"readList","nameLocation":"1155:8:9","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1893,"mutability":"mutable","name":"_in","nameLocation":"1179:3:9","nodeType":"VariableDeclaration","scope":1995,"src":"1164:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":1892,"nodeType":"UserDefinedTypeName","pathNode":{"id":1891,"name":"RLPItem","nameLocations":["1164:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"1164:7:9"},"referencedDeclaration":1869,"src":"1164:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"1163:20:9"},"returnParameters":{"id":1899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1995,"src":"1207:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":1896,"nodeType":"UserDefinedTypeName","pathNode":{"id":1895,"name":"RLPItem","nameLocations":["1207:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"1207:7:9"},"referencedDeclaration":1869,"src":"1207:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":1897,"nodeType":"ArrayTypeName","src":"1207:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"src":"1206:18:9"},"scope":2600,"src":"1146:1290:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2011,"nodeType":"Block","src":"2653:42:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2007,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"2685:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2006,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"2675:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$1869_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2005,"name":"readList","nodeType":"Identifier","overloadedDeclarations":[1995,2012],"referencedDeclaration":1995,"src":"2666:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (struct RLPReader.RLPItem memory[] memory)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2666:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem memory[] memory"}},"functionReturnParameters":2004,"id":2010,"nodeType":"Return","src":"2659:31:9"}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"2440:133:9","text":" Reads an RLP list value into a list of RLP items.\n @param _in RLP list value.\n @return Decoded RLP list items."},"id":2012,"implemented":true,"kind":"function","modifiers":[],"name":"readList","nameLocation":"2585:8:9","nodeType":"FunctionDefinition","parameters":{"id":1999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"_in","nameLocation":"2607:3:9","nodeType":"VariableDeclaration","scope":2012,"src":"2594:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1997,"name":"bytes","nodeType":"ElementaryTypeName","src":"2594:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2593:18:9"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2012,"src":"2635:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_memory_ptr_$dyn_memory_ptr","typeString":"struct RLPReader.RLPItem[]"},"typeName":{"baseType":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"RLPItem","nameLocations":["2635:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"2635:7:9"},"referencedDeclaration":1869,"src":"2635:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"id":2002,"nodeType":"ArrayTypeName","src":"2635:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RLPItem_$1869_storage_$dyn_storage_ptr","typeString":"struct RLPReader.RLPItem[]"}},"visibility":"internal"}],"src":"2634:18:9"},"scope":2600,"src":"2576:119:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2047,"nodeType":"Block","src":"2890:223:9","statements":[{"assignments":[2022,2024,2027],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"itemOffset","nameLocation":"2905:10:9","nodeType":"VariableDeclaration","scope":2047,"src":"2897:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2024,"mutability":"mutable","name":"itemLength","nameLocation":"2925:10:9","nodeType":"VariableDeclaration","scope":2047,"src":"2917:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2023,"name":"uint256","nodeType":"ElementaryTypeName","src":"2917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"itemType","nameLocation":"2949:8:9","nodeType":"VariableDeclaration","scope":2047,"src":"2937:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":2026,"nodeType":"UserDefinedTypeName","pathNode":{"id":2025,"name":"RLPItemType","nameLocations":["2937:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1864,"src":"2937:11:9"},"referencedDeclaration":1864,"src":"2937:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"id":2031,"initialValue":{"arguments":[{"id":2029,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"2975:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2028,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"2961:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2961:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"2896:83:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2033,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2994:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2034,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"3006:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3018:9:9","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"3006:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"src":"2994:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502062797465732076616c75652e","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3029:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","typeString":"literal_string \"Invalid RLP bytes value.\""},"value":"Invalid RLP bytes value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","typeString":"literal_string \"Invalid RLP bytes value.\""}],"id":2032,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2986:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"2986:70:9"},{"expression":{"arguments":[{"expression":{"id":2041,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3076:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2042,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3080:3:9","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"3076:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2043,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"3085:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2044,"name":"itemLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3097:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2040,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[2581,2599],"referencedDeclaration":2581,"src":"3070:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes memory)"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2020,"id":2046,"nodeType":"Return","src":"3063:45:9"}]},"documentation":{"id":2013,"nodeType":"StructuredDocumentation","src":"2699:112:9","text":" Reads an RLP bytes value into bytes.\n @param _in RLP bytes value.\n @return Decoded bytes."},"id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes","nameLocation":"2823:9:9","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"_in","nameLocation":"2848:3:9","nodeType":"VariableDeclaration","scope":2048,"src":"2833:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2015,"nodeType":"UserDefinedTypeName","pathNode":{"id":2014,"name":"RLPItem","nameLocations":["2833:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"2833:7:9"},"referencedDeclaration":1869,"src":"2833:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"2832:20:9"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2048,"src":"2876:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"2876:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2875:14:9"},"scope":2600,"src":"2814:299:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2062,"nodeType":"Block","src":"3306:43:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2058,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"3339:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2057,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3329:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$1869_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3329:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2056,"name":"readBytes","nodeType":"Identifier","overloadedDeclarations":[2048,2063],"referencedDeclaration":2048,"src":"3319:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2055,"id":2061,"nodeType":"Return","src":"3312:32:9"}]},"documentation":{"id":2049,"nodeType":"StructuredDocumentation","src":"3117:112:9","text":" Reads an RLP bytes value into bytes.\n @param _in RLP bytes value.\n @return Decoded bytes."},"id":2063,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes","nameLocation":"3241:9:9","nodeType":"FunctionDefinition","parameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"_in","nameLocation":"3264:3:9","nodeType":"VariableDeclaration","scope":2063,"src":"3251:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"3251:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3250:18:9"},"returnParameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2063,"src":"3292:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2053,"name":"bytes","nodeType":"ElementaryTypeName","src":"3292:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3291:14:9"},"scope":2600,"src":"3232:117:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2079,"nodeType":"Block","src":"3552:40:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2075,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"3582:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2074,"name":"readBytes","nodeType":"Identifier","overloadedDeclarations":[2048,2063],"referencedDeclaration":2048,"src":"3572:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3565:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2072,"name":"string","nodeType":"ElementaryTypeName","src":"3565:6:9","typeDescriptions":{}}},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2071,"id":2078,"nodeType":"Return","src":"3558:29:9"}]},"documentation":{"id":2064,"nodeType":"StructuredDocumentation","src":"3353:118:9","text":" Reads an RLP string value into a string.\n @param _in RLP string value.\n @return Decoded string."},"id":2080,"implemented":true,"kind":"function","modifiers":[],"name":"readString","nameLocation":"3483:10:9","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"_in","nameLocation":"3509:3:9","nodeType":"VariableDeclaration","scope":2080,"src":"3494:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2066,"nodeType":"UserDefinedTypeName","pathNode":{"id":2065,"name":"RLPItem","nameLocations":["3494:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"3494:7:9"},"referencedDeclaration":1869,"src":"3494:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"3493:20:9"},"returnParameters":{"id":2071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2070,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2080,"src":"3537:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2069,"name":"string","nodeType":"ElementaryTypeName","src":"3537:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3536:15:9"},"scope":2600,"src":"3474:118:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2094,"nodeType":"Block","src":"3793:44:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2090,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2083,"src":"3827:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2089,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"3817:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$1869_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3817:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2088,"name":"readString","nodeType":"Identifier","overloadedDeclarations":[2080,2095],"referencedDeclaration":2080,"src":"3806:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (string memory)"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3806:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2087,"id":2093,"nodeType":"Return","src":"3799:33:9"}]},"documentation":{"id":2081,"nodeType":"StructuredDocumentation","src":"3596:118:9","text":" Reads an RLP string value into a string.\n @param _in RLP string value.\n @return Decoded string."},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"readString","nameLocation":"3726:10:9","nodeType":"FunctionDefinition","parameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"_in","nameLocation":"3750:3:9","nodeType":"VariableDeclaration","scope":2095,"src":"3737:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2082,"name":"bytes","nodeType":"ElementaryTypeName","src":"3737:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3736:18:9"},"returnParameters":{"id":2087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2095,"src":"3778:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2085,"name":"string","nodeType":"ElementaryTypeName","src":"3778:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3777:15:9"},"scope":2600,"src":"3717:120:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2146,"nodeType":"Block","src":"4039:530:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2105,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"4077:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4081:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"4077:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3333","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4090:2:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"33"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4095:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4090:6:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"}},"src":"4077:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4098:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""},"value":"Invalid RLP bytes32 value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""}],"id":2104,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4069:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4069:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2113,"nodeType":"ExpressionStatement","src":"4069:58:9"},{"assignments":[2115,2117,2120],"declarations":[{"constant":false,"id":2115,"mutability":"mutable","name":"itemOffset","nameLocation":"4143:10:9","nodeType":"VariableDeclaration","scope":2146,"src":"4135:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"4135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2117,"mutability":"mutable","name":"itemLength","nameLocation":"4163:10:9","nodeType":"VariableDeclaration","scope":2146,"src":"4155:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2116,"name":"uint256","nodeType":"ElementaryTypeName","src":"4155:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2120,"mutability":"mutable","name":"itemType","nameLocation":"4187:8:9","nodeType":"VariableDeclaration","scope":2146,"src":"4175:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":2119,"nodeType":"UserDefinedTypeName","pathNode":{"id":2118,"name":"RLPItemType","nameLocations":["4175:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1864,"src":"4175:11:9"},"referencedDeclaration":1864,"src":"4175:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"id":2124,"initialValue":{"arguments":[{"id":2122,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"4213:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2121,"name":"_decodeLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"4199:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256,uint256,enum RLPReader.RLPItemType)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4199:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"nodeType":"VariableDeclarationStatement","src":"4134:83:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"itemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2120,"src":"4232:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2127,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"4244:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4256:9:9","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"4244:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"src":"4232:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4267:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""},"value":"Invalid RLP bytes32 value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","typeString":"literal_string \"Invalid RLP bytes32 value.\""}],"id":2125,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4224:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4224:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2132,"nodeType":"ExpressionStatement","src":"4224:72:9"},{"assignments":[2134],"declarations":[{"constant":false,"id":2134,"mutability":"mutable","name":"ptr","nameLocation":"4311:3:9","nodeType":"VariableDeclaration","scope":2146,"src":"4303:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"4303:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2139,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2135,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2099,"src":"4317:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4321:3:9","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"4317:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2137,"name":"itemOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"4327:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4317:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4303:34:9"},{"assignments":[2141],"declarations":[{"constant":false,"id":2141,"mutability":"mutable","name":"out","nameLocation":"4351:3:9","nodeType":"VariableDeclaration","scope":2146,"src":"4343:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4343:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2142,"nodeType":"VariableDeclarationStatement","src":"4343:11:9"},{"AST":{"nodeType":"YulBlock","src":"4369:179:9","statements":[{"nodeType":"YulAssignment","src":"4377:17:9","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4390:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4384:5:9"},"nodeType":"YulFunctionCall","src":"4384:10:9"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"4377:3:9"}]},{"body":{"nodeType":"YulBlock","src":"4478:64:9","statements":[{"nodeType":"YulAssignment","src":"4488:46:9","value":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"4499:3:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4508:3:9","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4517:2:9","type":"","value":"32"},{"name":"itemLength","nodeType":"YulIdentifier","src":"4521:10:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4513:3:9"},"nodeType":"YulFunctionCall","src":"4513:19:9"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"4504:3:9"},"nodeType":"YulFunctionCall","src":"4504:29:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4495:3:9"},"nodeType":"YulFunctionCall","src":"4495:39:9"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"4488:3:9"}]}]},"condition":{"arguments":[{"name":"itemLength","nodeType":"YulIdentifier","src":"4462:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"4474:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4459:2:9"},"nodeType":"YulFunctionCall","src":"4459:18:9"},"nodeType":"YulIf","src":"4456:86:9"}]},"evmVersion":"london","externalReferences":[{"declaration":2117,"isOffset":false,"isSlot":false,"src":"4462:10:9","valueSize":1},{"declaration":2117,"isOffset":false,"isSlot":false,"src":"4521:10:9","valueSize":1},{"declaration":2141,"isOffset":false,"isSlot":false,"src":"4377:3:9","valueSize":1},{"declaration":2141,"isOffset":false,"isSlot":false,"src":"4488:3:9","valueSize":1},{"declaration":2141,"isOffset":false,"isSlot":false,"src":"4499:3:9","valueSize":1},{"declaration":2134,"isOffset":false,"isSlot":false,"src":"4390:3:9","valueSize":1}],"id":2143,"nodeType":"InlineAssembly","src":"4360:188:9"},{"expression":{"id":2144,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"4561:3:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2103,"id":2145,"nodeType":"Return","src":"4554:10:9"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"3841:122:9","text":" Reads an RLP bytes32 value into a bytes32.\n @param _in RLP bytes32 value.\n @return Decoded bytes32."},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"3975:11:9","nodeType":"FunctionDefinition","parameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"_in","nameLocation":"4002:3:9","nodeType":"VariableDeclaration","scope":2147,"src":"3987:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2098,"nodeType":"UserDefinedTypeName","pathNode":{"id":2097,"name":"RLPItem","nameLocations":["3987:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"3987:7:9"},"referencedDeclaration":1869,"src":"3987:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"3986:20:9"},"returnParameters":{"id":2103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2147,"src":"4030:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4030:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4029:9:9"},"scope":2600,"src":"3966:603:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2161,"nodeType":"Block","src":"4769:45:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2157,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"4804:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2156,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"4794:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$1869_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4794:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2155,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[2147,2162],"referencedDeclaration":2147,"src":"4782:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2154,"id":2160,"nodeType":"Return","src":"4775:34:9"}]},"documentation":{"id":2148,"nodeType":"StructuredDocumentation","src":"4573:122:9","text":" Reads an RLP bytes32 value into a bytes32.\n @param _in RLP bytes32 value.\n @return Decoded bytes32."},"id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"readBytes32","nameLocation":"4707:11:9","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"_in","nameLocation":"4732:3:9","nodeType":"VariableDeclaration","scope":2162,"src":"4719:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2149,"name":"bytes","nodeType":"ElementaryTypeName","src":"4719:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4718:18:9"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"4760:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4760:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4759:9:9"},"scope":2600,"src":"4698:116:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"5016:43:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2174,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"5049:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2173,"name":"readBytes32","nodeType":"Identifier","overloadedDeclarations":[2147,2162],"referencedDeclaration":2147,"src":"5037:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes32)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5037:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5029:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2171,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:9","typeDescriptions":{}}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2170,"id":2177,"nodeType":"Return","src":"5022:32:9"}]},"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"4818:122:9","text":" Reads an RLP uint256 value into a uint256.\n @param _in RLP uint256 value.\n @return Decoded uint256."},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","nameLocation":"4952:11:9","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"_in","nameLocation":"4979:3:9","nodeType":"VariableDeclaration","scope":2179,"src":"4964:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2165,"nodeType":"UserDefinedTypeName","pathNode":{"id":2164,"name":"RLPItem","nameLocations":["4964:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"4964:7:9"},"referencedDeclaration":1869,"src":"4964:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"4963:20:9"},"returnParameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"5007:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"5007:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5006:9:9"},"scope":2600,"src":"4943:116:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"5259:45:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2189,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5294:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2188,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"5284:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$1869_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5284:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2187,"name":"readUint256","nodeType":"Identifier","overloadedDeclarations":[2179,2194],"referencedDeclaration":2179,"src":"5272:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5272:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2186,"id":2192,"nodeType":"Return","src":"5265:34:9"}]},"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"5063:122:9","text":" Reads an RLP uint256 value into a uint256.\n @param _in RLP uint256 value.\n @return Decoded uint256."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"readUint256","nameLocation":"5197:11:9","nodeType":"FunctionDefinition","parameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"_in","nameLocation":"5222:3:9","nodeType":"VariableDeclaration","scope":2194,"src":"5209:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2181,"name":"bytes","nodeType":"ElementaryTypeName","src":"5209:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5208:18:9"},"returnParameters":{"id":2186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2194,"src":"5250:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2184,"name":"uint256","nodeType":"ElementaryTypeName","src":"5250:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5249:9:9"},"scope":2600,"src":"5188:116:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"5488:282:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2204,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"5502:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5506:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"5502:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5516:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5502:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020626f6f6c65616e2076616c75652e","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5519:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f8f0c9c05acf0cd50562c9d3d6d407e972c8243af862a438314d07063a3dca1","typeString":"literal_string \"Invalid RLP boolean value.\""},"value":"Invalid RLP boolean value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f8f0c9c05acf0cd50562c9d3d6d407e972c8243af862a438314d07063a3dca1","typeString":"literal_string \"Invalid RLP boolean value.\""}],"id":2203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5494:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5494:54:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2210,"nodeType":"ExpressionStatement","src":"5494:54:9"},{"assignments":[2212],"declarations":[{"constant":false,"id":2212,"mutability":"mutable","name":"ptr","nameLocation":"5563:3:9","nodeType":"VariableDeclaration","scope":2235,"src":"5555:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"5555:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2215,"initialValue":{"expression":{"id":2213,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"5569:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2214,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5573:3:9","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"5569:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5555:21:9"},{"assignments":[2217],"declarations":[{"constant":false,"id":2217,"mutability":"mutable","name":"out","nameLocation":"5590:3:9","nodeType":"VariableDeclaration","scope":2235,"src":"5582:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5582:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2218,"nodeType":"VariableDeclarationStatement","src":"5582:11:9"},{"AST":{"nodeType":"YulBlock","src":"5608:40:9","statements":[{"nodeType":"YulAssignment","src":"5616:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5628:1:9","type":"","value":"0"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5637:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5631:5:9"},"nodeType":"YulFunctionCall","src":"5631:10:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"5623:4:9"},"nodeType":"YulFunctionCall","src":"5623:19:9"},"variableNames":[{"name":"out","nodeType":"YulIdentifier","src":"5616:3:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2217,"isOffset":false,"isSlot":false,"src":"5616:3:9","valueSize":1},{"declaration":2212,"isOffset":false,"isSlot":false,"src":"5637:3:9","valueSize":1}],"id":2219,"nodeType":"InlineAssembly","src":"5599:49:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5662:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5669:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5662:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2224,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5674:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5674:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5662:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c69625f524c505265616465723a20496e76616c696420524c5020626f6f6c65616e2076616c75652c206d7573742062652030206f722031","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5684:58:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_fde08809139da424e56770eb1214d54bfc635eebfb4310c90ffede9d9074c3c0","typeString":"literal_string \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\""},"value":"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fde08809139da424e56770eb1214d54bfc635eebfb4310c90ffede9d9074c3c0","typeString":"literal_string \"Lib_RLPReader: Invalid RLP boolean value, must be 0 or 1\""}],"id":2220,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5654:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5654:89:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2230,"nodeType":"ExpressionStatement","src":"5654:89:9"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5757:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5764:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5757:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2202,"id":2234,"nodeType":"Return","src":"5750:15:9"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"5308:110:9","text":" Reads an RLP bool value into a bool.\n @param _in RLP bool value.\n @return Decoded bool."},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"readBool","nameLocation":"5430:8:9","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"_in","nameLocation":"5454:3:9","nodeType":"VariableDeclaration","scope":2236,"src":"5439:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2197,"nodeType":"UserDefinedTypeName","pathNode":{"id":2196,"name":"RLPItem","nameLocations":["5439:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"5439:7:9"},"referencedDeclaration":1869,"src":"5439:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"5438:20:9"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"5482:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2200,"name":"bool","nodeType":"ElementaryTypeName","src":"5482:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5481:6:9"},"scope":2600,"src":"5421:349:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2250,"nodeType":"Block","src":"5952:42:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2246,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"5984:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2245,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"5974:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$1869_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5974:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2244,"name":"readBool","nodeType":"Identifier","overloadedDeclarations":[2236,2251],"referencedDeclaration":2236,"src":"5965:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bool_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bool)"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2243,"id":2249,"nodeType":"Return","src":"5958:31:9"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"5774:110:9","text":" Reads an RLP bool value into a bool.\n @param _in RLP bool value.\n @return Decoded bool."},"id":2251,"implemented":true,"kind":"function","modifiers":[],"name":"readBool","nameLocation":"5896:8:9","nodeType":"FunctionDefinition","parameters":{"id":2240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"_in","nameLocation":"5918:3:9","nodeType":"VariableDeclaration","scope":2251,"src":"5905:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2238,"name":"bytes","nodeType":"ElementaryTypeName","src":"5905:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5904:18:9"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2251,"src":"5946:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2241,"name":"bool","nodeType":"ElementaryTypeName","src":"5946:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5945:6:9"},"scope":2600,"src":"5887:107:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2289,"nodeType":"Block","src":"6196:173:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2260,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"6206:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6210:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"6206:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6220:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6206:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2270,"nodeType":"IfStatement","src":"6202:53:9","trueBody":{"id":2269,"nodeType":"Block","src":"6223:32:9","statements":[{"expression":{"arguments":[{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6246:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6238:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"6238:7:9","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6238:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2259,"id":2268,"nodeType":"Return","src":"6231:17:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2272,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"6269:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6273:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"6269:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3231","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:2:9","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"src":"6269:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c5020616464726573732076616c75652e","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6287:28:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a3c570d87b7de672f933cbe715f40a3d65ef8c8e2e231b1b150ebbdb2d252b9f","typeString":"literal_string \"Invalid RLP address value.\""},"value":"Invalid RLP address value."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a3c570d87b7de672f933cbe715f40a3d65ef8c8e2e231b1b150ebbdb2d252b9f","typeString":"literal_string \"Invalid RLP address value.\""}],"id":2271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6261:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6261:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2278,"nodeType":"ExpressionStatement","src":"6261:55:9"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2284,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"6358:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2283,"name":"readUint256","nodeType":"Identifier","overloadedDeclarations":[2179,2194],"referencedDeclaration":2179,"src":"6346:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (uint256)"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6338:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2281,"name":"uint160","nodeType":"ElementaryTypeName","src":"6338:7:9","typeDescriptions":{}}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6330:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"6330:7:9","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6330:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2259,"id":2288,"nodeType":"Return","src":"6323:41:9"}]},"documentation":{"id":2252,"nodeType":"StructuredDocumentation","src":"5998:122:9","text":" Reads an RLP address value into a address.\n @param _in RLP address value.\n @return Decoded address."},"id":2290,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"6132:11:9","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2255,"mutability":"mutable","name":"_in","nameLocation":"6159:3:9","nodeType":"VariableDeclaration","scope":2290,"src":"6144:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2254,"nodeType":"UserDefinedTypeName","pathNode":{"id":2253,"name":"RLPItem","nameLocations":["6144:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"6144:7:9"},"referencedDeclaration":1869,"src":"6144:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"6143:20:9"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2290,"src":"6187:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"6187:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6186:9:9"},"scope":2600,"src":"6123:246:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2304,"nodeType":"Block","src":"6569:45:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2300,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"6604:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2299,"name":"toRLPItem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"6594:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_struct$_RLPItem_$1869_memory_ptr_$","typeString":"function (bytes memory) pure returns (struct RLPReader.RLPItem memory)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6594:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2298,"name":"readAddress","nodeType":"Identifier","overloadedDeclarations":[2290,2305],"referencedDeclaration":2290,"src":"6582:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_address_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (address)"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2297,"id":2303,"nodeType":"Return","src":"6575:34:9"}]},"documentation":{"id":2291,"nodeType":"StructuredDocumentation","src":"6373:122:9","text":" Reads an RLP address value into a address.\n @param _in RLP address value.\n @return Decoded address."},"id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"readAddress","nameLocation":"6507:11:9","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2293,"mutability":"mutable","name":"_in","nameLocation":"6532:3:9","nodeType":"VariableDeclaration","scope":2305,"src":"6519:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2292,"name":"bytes","nodeType":"ElementaryTypeName","src":"6519:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6518:18:9"},"returnParameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"6560:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"6560:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6559:9:9"},"scope":2600,"src":"6498:116:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2318,"nodeType":"Block","src":"6812:28:9","statements":[{"expression":{"arguments":[{"id":2315,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"6831:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}],"id":2314,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[2581,2599],"referencedDeclaration":2599,"src":"6825:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_RLPItem_$1869_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (struct RLPReader.RLPItem memory) pure returns (bytes memory)"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6825:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2313,"id":2317,"nodeType":"Return","src":"6818:17:9"}]},"documentation":{"id":2306,"nodeType":"StructuredDocumentation","src":"6618:112:9","text":" Reads the raw bytes of an RLP item.\n @param _in RLP item to read.\n @return Raw RLP bytes."},"id":2319,"implemented":true,"kind":"function","modifiers":[],"name":"readRawBytes","nameLocation":"6742:12:9","nodeType":"FunctionDefinition","parameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"_in","nameLocation":"6770:3:9","nodeType":"VariableDeclaration","scope":2319,"src":"6755:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2308,"nodeType":"UserDefinedTypeName","pathNode":{"id":2307,"name":"RLPItem","nameLocations":["6755:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"6755:7:9"},"referencedDeclaration":1869,"src":"6755:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"6754:20:9"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2319,"src":"6798:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2311,"name":"bytes","nodeType":"ElementaryTypeName","src":"6798:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6797:14:9"},"scope":2600,"src":"6733:107:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2497,"nodeType":"Block","src":"7278:1738:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2334,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"7292:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7296:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"7292:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7305:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7292:14:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"524c50206974656d2063616e6e6f74206265206e756c6c2e","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7308:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","typeString":"literal_string \"RLP item cannot be null.\""},"value":"RLP item cannot be null."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","typeString":"literal_string \"RLP item cannot be null.\""}],"id":2333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7284:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"7284:51:9"},{"assignments":[2342],"declarations":[{"constant":false,"id":2342,"mutability":"mutable","name":"ptr","nameLocation":"7350:3:9","nodeType":"VariableDeclaration","scope":2497,"src":"7342:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2341,"name":"uint256","nodeType":"ElementaryTypeName","src":"7342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2345,"initialValue":{"expression":{"id":2343,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"7356:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7360:3:9","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"7356:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7342:21:9"},{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"prefix","nameLocation":"7377:6:9","nodeType":"VariableDeclaration","scope":2497,"src":"7369:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"7369:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2348,"nodeType":"VariableDeclarationStatement","src":"7369:14:9"},{"AST":{"nodeType":"YulBlock","src":"7398:43:9","statements":[{"nodeType":"YulAssignment","src":"7406:29:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7421:1:9","type":"","value":"0"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7430:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7424:5:9"},"nodeType":"YulFunctionCall","src":"7424:10:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"7416:4:9"},"nodeType":"YulFunctionCall","src":"7416:19:9"},"variableNames":[{"name":"prefix","nodeType":"YulIdentifier","src":"7406:6:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2347,"isOffset":false,"isSlot":false,"src":"7406:6:9","valueSize":1},{"declaration":2342,"isOffset":false,"isSlot":false,"src":"7430:3:9","valueSize":1}],"id":2349,"nodeType":"InlineAssembly","src":"7389:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"7451:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"id":2353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30783766","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7460:4:9","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"0x7f"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7467:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7460:8:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"}},"src":"7451:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"7554:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"id":2365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30786237","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7563:4:9","typeDescriptions":{"typeIdentifier":"t_rational_183_by_1","typeString":"int_const 183"},"value":"0xb7"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7570:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7563:8:9","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"}},"src":"7554:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2388,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"7818:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"id":2391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30786266","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7827:4:9","typeDescriptions":{"typeIdentifier":"t_rational_191_by_1","typeString":"int_const 191"},"value":"0xbf"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7834:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7827:8:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"}},"src":"7818:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2430,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"8300:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"30786637","id":2431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8309:4:9","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"0xf7"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8309:8:9","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"}},"src":"8300:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2492,"nodeType":"Block","src":"8558:454:9","statements":[{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"lenOfListLen","nameLocation":"8594:12:9","nodeType":"VariableDeclaration","scope":2492,"src":"8586:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2456,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2461,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2458,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"8609:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786637","id":2459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8618:4:9","typeDescriptions":{"typeIdentifier":"t_rational_247_by_1","typeString":"int_const 247"},"value":"0xf7"},"src":"8609:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8586:36:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2463,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"8639:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8643:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"8639:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2465,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8652:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8639:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e67206c697374206c656e6774682e","id":2467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8666:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","typeString":"literal_string \"Invalid RLP long list length.\""},"value":"Invalid RLP long list length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","typeString":"literal_string \"Invalid RLP long list length.\""}],"id":2462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8631:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8631:67:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2469,"nodeType":"ExpressionStatement","src":"8631:67:9"},{"assignments":[2471],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"listLen","nameLocation":"8715:7:9","nodeType":"VariableDeclaration","scope":2492,"src":"8707:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"8707:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2472,"nodeType":"VariableDeclarationStatement","src":"8707:15:9"},{"AST":{"nodeType":"YulBlock","src":"8739:122:9","statements":[{"nodeType":"YulAssignment","src":"8786:67:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8811:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8816:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8807:3:9"},"nodeType":"YulFunctionCall","src":"8807:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8801:5:9"},"nodeType":"YulFunctionCall","src":"8801:18:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8825:3:9","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8834:2:9","type":"","value":"32"},{"name":"lenOfListLen","nodeType":"YulIdentifier","src":"8838:12:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8830:3:9"},"nodeType":"YulFunctionCall","src":"8830:21:9"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8821:3:9"},"nodeType":"YulFunctionCall","src":"8821:31:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8797:3:9"},"nodeType":"YulFunctionCall","src":"8797:56:9"},"variableNames":[{"name":"listLen","nodeType":"YulIdentifier","src":"8786:7:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2457,"isOffset":false,"isSlot":false,"src":"8838:12:9","valueSize":1},{"declaration":2471,"isOffset":false,"isSlot":false,"src":"8786:7:9","valueSize":1},{"declaration":2342,"isOffset":false,"isSlot":false,"src":"8811:3:9","valueSize":1}],"id":2473,"nodeType":"InlineAssembly","src":"8730:131:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2475,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"8877:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8881:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"8877:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8890:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2478,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8905:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8890:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8877:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e67206c6973742e","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8914:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","typeString":"literal_string \"Invalid RLP long list.\""},"value":"Invalid RLP long list."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","typeString":"literal_string \"Invalid RLP long list.\""}],"id":2474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8869:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2483,"nodeType":"ExpressionStatement","src":"8869:70:9"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2485,"name":"lenOfListLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"8960:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8956:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2487,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8974:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2488,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"8983:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8995:9:9","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":1863,"src":"8983:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}}],"id":2490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8955:50:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":2332,"id":2491,"nodeType":"Return","src":"8948:57:9"}]},"id":2493,"nodeType":"IfStatement","src":"8296:716:9","trueBody":{"id":2455,"nodeType":"Block","src":"8319:233:9","statements":[{"assignments":[2436],"declarations":[{"constant":false,"id":2436,"mutability":"mutable","name":"listLen","nameLocation":"8406:7:9","nodeType":"VariableDeclaration","scope":2455,"src":"8398:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"8398:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2440,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2437,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"8416:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786330","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8425:4:9","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"0xc0"},"src":"8416:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8398:31:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2442,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"8446:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8450:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"8446:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2444,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8459:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8446:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502073686f7274206c6973742e","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8468:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","typeString":"literal_string \"Invalid RLP short list.\""},"value":"Invalid RLP short list."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","typeString":"literal_string \"Invalid RLP short list.\""}],"id":2441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8438:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8438:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2448,"nodeType":"ExpressionStatement","src":"8438:56:9"},{"expression":{"components":[{"hexValue":"31","id":2449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8511:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":2450,"name":"listLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2451,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"8523:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8535:9:9","memberName":"LIST_ITEM","nodeType":"MemberAccess","referencedDeclaration":1863,"src":"8523:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}}],"id":2453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8510:35:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(int_const 1,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":2332,"id":2454,"nodeType":"Return","src":"8503:42:9"}]}},"id":2494,"nodeType":"IfStatement","src":"7814:1198:9","trueBody":{"id":2429,"nodeType":"Block","src":"7837:453:9","statements":[{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"lenOfStrLen","nameLocation":"7875:11:9","nodeType":"VariableDeclaration","scope":2429,"src":"7867:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2393,"name":"uint256","nodeType":"ElementaryTypeName","src":"7867:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2398,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2395,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"7889:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30786237","id":2396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7898:4:9","typeDescriptions":{"typeIdentifier":"t_rational_183_by_1","typeString":"int_const 183"},"value":"0xb7"},"src":"7889:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7867:35:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2400,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"7919:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7923:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"7919:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2402,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"7932:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7919:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7945:33:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","typeString":"literal_string \"Invalid RLP long string length.\""},"value":"Invalid RLP long string length."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","typeString":"literal_string \"Invalid RLP long string length.\""}],"id":2399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7911:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7911:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2406,"nodeType":"ExpressionStatement","src":"7911:68:9"},{"assignments":[2408],"declarations":[{"constant":false,"id":2408,"mutability":"mutable","name":"strLen","nameLocation":"7996:6:9","nodeType":"VariableDeclaration","scope":2429,"src":"7988:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2407,"name":"uint256","nodeType":"ElementaryTypeName","src":"7988:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2409,"nodeType":"VariableDeclarationStatement","src":"7988:14:9"},{"AST":{"nodeType":"YulBlock","src":"8019:122:9","statements":[{"nodeType":"YulAssignment","src":"8068:65:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8092:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8097:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8088:3:9"},"nodeType":"YulFunctionCall","src":"8088:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8082:5:9"},"nodeType":"YulFunctionCall","src":"8082:18:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8106:3:9","type":"","value":"256"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8115:2:9","type":"","value":"32"},{"name":"lenOfStrLen","nodeType":"YulIdentifier","src":"8119:11:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8111:3:9"},"nodeType":"YulFunctionCall","src":"8111:20:9"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"8102:3:9"},"nodeType":"YulFunctionCall","src":"8102:30:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8078:3:9"},"nodeType":"YulFunctionCall","src":"8078:55:9"},"variableNames":[{"name":"strLen","nodeType":"YulIdentifier","src":"8068:6:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2394,"isOffset":false,"isSlot":false,"src":"8119:11:9","valueSize":1},{"declaration":2342,"isOffset":false,"isSlot":false,"src":"8092:3:9","valueSize":1},{"declaration":2408,"isOffset":false,"isSlot":false,"src":"8068:6:9","valueSize":1}],"id":2410,"nodeType":"InlineAssembly","src":"8010:131:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2412,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"8157:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8161:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"8157:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8170:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2415,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8184:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8170:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8157:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e672e","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8192:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","typeString":"literal_string \"Invalid RLP long string.\""},"value":"Invalid RLP long string."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","typeString":"literal_string \"Invalid RLP long string.\""}],"id":2411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8149:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8149:70:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2420,"nodeType":"ExpressionStatement","src":"8149:70:9"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2422,"name":"lenOfStrLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"8240:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8236:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2424,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2408,"src":"8253:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2425,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"8261:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8273:9:9","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"8261:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}}],"id":2427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8235:48:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(uint256,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":2332,"id":2428,"nodeType":"Return","src":"8228:55:9"}]}},"id":2495,"nodeType":"IfStatement","src":"7550:1462:9","trueBody":{"id":2387,"nodeType":"Block","src":"7573:235:9","statements":[{"assignments":[2368],"declarations":[{"constant":false,"id":2368,"mutability":"mutable","name":"strLen","nameLocation":"7663:6:9","nodeType":"VariableDeclaration","scope":2387,"src":"7655:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"7655:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2372,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2369,"name":"prefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"7672:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"30783830","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7681:4:9","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"7672:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7655:30:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2374,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"7702:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7706:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"7702:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2376,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7715:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7702:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420524c502073686f727420737472696e672e","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7723:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","typeString":"literal_string \"Invalid RLP short string.\""},"value":"Invalid RLP short string."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","typeString":"literal_string \"Invalid RLP short string.\""}],"id":2373,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7694:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7694:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2380,"nodeType":"ExpressionStatement","src":"7694:57:9"},{"expression":{"components":[{"hexValue":"31","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7768:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":2382,"name":"strLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"7771:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2383,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"7779:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7791:9:9","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"7779:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}}],"id":2385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7767:34:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_uint256_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(int_const 1,uint256,enum RLPReader.RLPItemType)"}},"functionReturnParameters":2332,"id":2386,"nodeType":"Return","src":"7760:41:9"}]}},"id":2496,"nodeType":"IfStatement","src":"7447:1565:9","trueBody":{"id":2361,"nodeType":"Block","src":"7470:74:9","statements":[{"expression":{"components":[{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7509:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"31","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7512:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"expression":{"id":2357,"name":"RLPItemType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"7515:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RLPItemType_$1864_$","typeString":"type(enum RLPReader.RLPItemType)"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7527:9:9","memberName":"DATA_ITEM","nodeType":"MemberAccess","referencedDeclaration":1862,"src":"7515:21:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}}],"id":2359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7508:29:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_1_by_1_$_t_enum$_RLPItemType_$1864_$","typeString":"tuple(int_const 0,int_const 1,enum RLPReader.RLPItemType)"}},"functionReturnParameters":2332,"id":2360,"nodeType":"Return","src":"7501:36:9"}]}}]},"documentation":{"id":2320,"nodeType":"StructuredDocumentation","src":"6921:220:9","text":" Decodes the length of an RLP item.\n @param _in RLP item to decode.\n @return Offset of the encoded data.\n @return Length of the encoded data.\n @return RLP item type (LIST_ITEM or DATA_ITEM)."},"id":2498,"implemented":true,"kind":"function","modifiers":[],"name":"_decodeLength","nameLocation":"7153:13:9","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"_in","nameLocation":"7182:3:9","nodeType":"VariableDeclaration","scope":2498,"src":"7167:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2322,"nodeType":"UserDefinedTypeName","pathNode":{"id":2321,"name":"RLPItem","nameLocations":["7167:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"7167:7:9"},"referencedDeclaration":1869,"src":"7167:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"7166:20:9"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2498,"src":"7228:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"7228:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2498,"src":"7243:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"7243:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2498,"src":"7258:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"},"typeName":{"id":2330,"nodeType":"UserDefinedTypeName","pathNode":{"id":2329,"name":"RLPItemType","nameLocations":["7258:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":1864,"src":"7258:11:9"},"referencedDeclaration":1864,"src":"7258:11:9","typeDescriptions":{"typeIdentifier":"t_enum$_RLPItemType_$1864","typeString":"enum RLPReader.RLPItemType"}},"visibility":"internal"}],"src":"7220:55:9"},"scope":2600,"src":"7144:1872:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2580,"nodeType":"Block","src":"9370:674:9","statements":[{"assignments":[2511],"declarations":[{"constant":false,"id":2511,"mutability":"mutable","name":"out","nameLocation":"9389:3:9","nodeType":"VariableDeclaration","scope":2580,"src":"9376:16:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2510,"name":"bytes","nodeType":"ElementaryTypeName","src":"9376:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2516,"initialValue":{"arguments":[{"id":2514,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"9405:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9395:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2512,"name":"bytes","nodeType":"ElementaryTypeName","src":"9399:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9395:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9376:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2517,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"9423:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9427:6:9","memberName":"length","nodeType":"MemberAccess","src":"9423:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9437:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9423:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2524,"nodeType":"IfStatement","src":"9419:46:9","trueBody":{"id":2523,"nodeType":"Block","src":"9440:25:9","statements":[{"expression":{"id":2521,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"9455:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2509,"id":2522,"nodeType":"Return","src":"9448:10:9"}]}},{"assignments":[2526],"declarations":[{"constant":false,"id":2526,"mutability":"mutable","name":"src","nameLocation":"9479:3:9","nodeType":"VariableDeclaration","scope":2580,"src":"9471:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2525,"name":"uint256","nodeType":"ElementaryTypeName","src":"9471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2530,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"_src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"9485:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2528,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"9492:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9485:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9471:28:9"},{"assignments":[2532],"declarations":[{"constant":false,"id":2532,"mutability":"mutable","name":"dest","nameLocation":"9513:4:9","nodeType":"VariableDeclaration","scope":2580,"src":"9505:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"9505:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2533,"nodeType":"VariableDeclarationStatement","src":"9505:12:9"},{"AST":{"nodeType":"YulBlock","src":"9532:34:9","statements":[{"nodeType":"YulAssignment","src":"9540:20:9","value":{"arguments":[{"name":"out","nodeType":"YulIdentifier","src":"9552:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9557:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9548:3:9"},"nodeType":"YulFunctionCall","src":"9548:12:9"},"variableNames":[{"name":"dest","nodeType":"YulIdentifier","src":"9540:4:9"}]}]},"evmVersion":"london","externalReferences":[{"declaration":2532,"isOffset":false,"isSlot":false,"src":"9540:4:9","valueSize":1},{"declaration":2511,"isOffset":false,"isSlot":false,"src":"9552:3:9","valueSize":1}],"id":2534,"nodeType":"InlineAssembly","src":"9523:43:9"},{"body":{"id":2557,"nodeType":"Block","src":"9663:141:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9680:42:9","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9697:4:9"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9709:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9703:5:9"},"nodeType":"YulFunctionCall","src":"9703:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9690:6:9"},"nodeType":"YulFunctionCall","src":"9690:24:9"},"nodeType":"YulExpressionStatement","src":"9690:24:9"}]},"evmVersion":"london","externalReferences":[{"declaration":2532,"isOffset":false,"isSlot":false,"src":"9697:4:9","valueSize":1},{"declaration":2526,"isOffset":false,"isSlot":false,"src":"9709:3:9","valueSize":1}],"id":2544,"nodeType":"InlineAssembly","src":"9671:51:9"},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2545,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"9730:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9737:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9730:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2548,"nodeType":"ExpressionStatement","src":"9730:9:9"},{"expression":{"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2549,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"9747:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9755:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9747:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2552,"nodeType":"ExpressionStatement","src":"9747:10:9"},{"id":2556,"nodeType":"UncheckedBlock","src":"9766:32:9","statements":[{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"9786:3:9","subExpression":{"id":2553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"9788:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"9786:3:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2539,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"9643:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2540,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"9647:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3332","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9647:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9643:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2558,"initializationExpression":{"assignments":[2536],"declarations":[{"constant":false,"id":2536,"mutability":"mutable","name":"i","nameLocation":"9636:1:9","nodeType":"VariableDeclaration","scope":2558,"src":"9628:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2538,"initialValue":{"hexValue":"30","id":2537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9640:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9628:13:9"},"nodeType":"ForStatement","src":"9623:181:9"},{"assignments":[2560],"declarations":[{"constant":false,"id":2560,"mutability":"mutable","name":"mask","nameLocation":"9855:4:9","nodeType":"VariableDeclaration","scope":2580,"src":"9847:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2559,"name":"uint256","nodeType":"ElementaryTypeName","src":"9847:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2561,"nodeType":"VariableDeclarationStatement","src":"9847:12:9"},{"id":2576,"nodeType":"UncheckedBlock","src":"9865:62:9","statements":[{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2562,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"9883:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9890:3:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9896:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2565,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"9902:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9912:2:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9902:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2568,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9901:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9896:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9895:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9890:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9919:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9890:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9883:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"9883:37:9"}]},{"AST":{"nodeType":"YulBlock","src":"9942:82:9","statements":[{"expression":{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"9957:4:9"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9976:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9970:5:9"},"nodeType":"YulFunctionCall","src":"9970:10:9"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"9986:4:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9982:3:9"},"nodeType":"YulFunctionCall","src":"9982:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9966:3:9"},"nodeType":"YulFunctionCall","src":"9966:26:9"},{"arguments":[{"arguments":[{"name":"dest","nodeType":"YulIdentifier","src":"10004:4:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9998:5:9"},"nodeType":"YulFunctionCall","src":"9998:11:9"},{"name":"mask","nodeType":"YulIdentifier","src":"10011:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9994:3:9"},"nodeType":"YulFunctionCall","src":"9994:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9963:2:9"},"nodeType":"YulFunctionCall","src":"9963:54:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9950:6:9"},"nodeType":"YulFunctionCall","src":"9950:68:9"},"nodeType":"YulExpressionStatement","src":"9950:68:9"}]},"evmVersion":"london","externalReferences":[{"declaration":2532,"isOffset":false,"isSlot":false,"src":"10004:4:9","valueSize":1},{"declaration":2532,"isOffset":false,"isSlot":false,"src":"9957:4:9","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"10011:4:9","valueSize":1},{"declaration":2560,"isOffset":false,"isSlot":false,"src":"9986:4:9","valueSize":1},{"declaration":2526,"isOffset":false,"isSlot":false,"src":"9976:3:9","valueSize":1}],"id":2577,"nodeType":"InlineAssembly","src":"9933:91:9"},{"expression":{"id":2578,"name":"out","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"10036:3:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2509,"id":2579,"nodeType":"Return","src":"10029:10:9"}]},"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"9020:232:9","text":" Copies the bytes from a memory location.\n @param _src Pointer to the location to read from.\n @param _offset Offset to start reading from.\n @param _length Number of bytes to read.\n @return Copied bytes."},"id":2581,"implemented":true,"kind":"function","modifiers":[],"name":"_copy","nameLocation":"9264:5:9","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"_src","nameLocation":"9283:4:9","nodeType":"VariableDeclaration","scope":2581,"src":"9275:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"9275:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"_offset","nameLocation":"9301:7:9","nodeType":"VariableDeclaration","scope":2581,"src":"9293:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"9293:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"_length","nameLocation":"9322:7:9","nodeType":"VariableDeclaration","scope":2581,"src":"9314:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"9314:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9269:64:9"},"returnParameters":{"id":2509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2581,"src":"9356:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2507,"name":"bytes","nodeType":"ElementaryTypeName","src":"9356:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9355:14:9"},"scope":2600,"src":"9255:789:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2598,"nodeType":"Block","src":"10228:47:9","statements":[{"expression":{"arguments":[{"expression":{"id":2591,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"10247:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10251:3:9","memberName":"ptr","nodeType":"MemberAccess","referencedDeclaration":1868,"src":"10247:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10256:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":2594,"name":"_in","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"10259:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem memory"}},"id":2595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10263:6:9","memberName":"length","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"10259:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2590,"name":"_copy","nodeType":"Identifier","overloadedDeclarations":[2581,2599],"referencedDeclaration":2581,"src":"10241:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes memory)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10241:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2589,"id":2597,"nodeType":"Return","src":"10234:36:9"}]},"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"10048:106:9","text":" Copies an RLP item into bytes.\n @param _in RLP item to copy.\n @return Copied bytes."},"id":2599,"implemented":true,"kind":"function","modifiers":[],"name":"_copy","nameLocation":"10166:5:9","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"_in","nameLocation":"10187:3:9","nodeType":"VariableDeclaration","scope":2599,"src":"10172:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_memory_ptr","typeString":"struct RLPReader.RLPItem"},"typeName":{"id":2584,"nodeType":"UserDefinedTypeName","pathNode":{"id":2583,"name":"RLPItem","nameLocations":["10172:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1869,"src":"10172:7:9"},"referencedDeclaration":1869,"src":"10172:7:9","typeDescriptions":{"typeIdentifier":"t_struct$_RLPItem_$1869_storage_ptr","typeString":"struct RLPReader.RLPItem"}},"visibility":"internal"}],"src":"10171:20:9"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2599,"src":"10214:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2587,"name":"bytes","nodeType":"ElementaryTypeName","src":"10214:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10213:14:9"},"scope":2600,"src":"10157:118:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2601,"src":"242:10035:9","usedErrors":[]}],"src":"46:10232:9"},"id":9},"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol":{"ast":{"absolutePath":"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol","exportedSymbols":{"MerkleTrie":[1752],"SecureMerkleTrie":[2679]},"id":2680,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2602,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:10"},{"absolutePath":"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol","file":"./MerkleTrie.sol","id":2604,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2680,"sourceUnit":1753,"src":"93:44:10","symbolAliases":[{"foreign":{"id":2603,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"101:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SecureMerkleTrie","contractDependencies":[],"contractKind":"library","documentation":{"id":2605,"nodeType":"StructuredDocumentation","src":"139:188:10","text":" @title SecureMerkleTrie\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_SecureMerkleTrie.sol"},"fullyImplemented":true,"id":2679,"linearizedBaseContracts":[2679],"name":"SecureMerkleTrie","nameLocation":"336:16:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":2633,"nodeType":"Block","src":"1276:121:10","statements":[{"assignments":[2620],"declarations":[{"constant":false,"id":2620,"mutability":"mutable","name":"key","nameLocation":"1295:3:10","nodeType":"VariableDeclaration","scope":2633,"src":"1282:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2619,"name":"bytes","nodeType":"ElementaryTypeName","src":"1282:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2624,"initialValue":{"arguments":[{"id":2622,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2621,"name":"_getSecureKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"1301:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1282:38:10"},{"expression":{"arguments":[{"id":2627,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"1365:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2628,"name":"_value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"1370:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2629,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1378:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2630,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"1386:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2625,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"1333:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTrie_$1752_$","typeString":"type(library MerkleTrie)"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1344:20:10","memberName":"verifyInclusionProof","nodeType":"MemberAccess","referencedDeclaration":1173,"src":"1333:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes memory,bytes memory,bytes memory,bytes32) pure returns (bool)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1333:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2618,"id":2632,"nodeType":"Return","src":"1326:66:10"}]},"documentation":{"id":2606,"nodeType":"StructuredDocumentation","src":"437:671:10","text":" @notice Verifies a proof that a given key/value pair is present in the\n Merkle trie.\n @param _key Key of the node to search for, as a hex string.\n @param _value Value of the node to search for, as a hex string.\n @param _proof Merkle trie inclusion proof for the desired node. Unlike\n traditional Merkle trees, this proof is executed top-down and consists\n of a list of RLP-encoded nodes that make a path down to the target node.\n @param _root Known root of the Merkle trie. Used to verify that the\n included proof is correctly constructed.\n @return _verified `true` if the k/v pair exists in the trie, `false` otherwise."},"id":2634,"implemented":true,"kind":"function","modifiers":[],"name":"verifyInclusionProof","nameLocation":"1120:20:10","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"_key","nameLocation":"1159:4:10","nodeType":"VariableDeclaration","scope":2634,"src":"1146:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2607,"name":"bytes","nodeType":"ElementaryTypeName","src":"1146:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"_value","nameLocation":"1182:6:10","nodeType":"VariableDeclaration","scope":2634,"src":"1169:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2609,"name":"bytes","nodeType":"ElementaryTypeName","src":"1169:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2612,"mutability":"mutable","name":"_proof","nameLocation":"1207:6:10","nodeType":"VariableDeclaration","scope":2634,"src":"1194:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2611,"name":"bytes","nodeType":"ElementaryTypeName","src":"1194:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2614,"mutability":"mutable","name":"_root","nameLocation":"1227:5:10","nodeType":"VariableDeclaration","scope":2634,"src":"1219:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2613,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1140:96:10"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"_verified","nameLocation":"1265:9:10","nodeType":"VariableDeclaration","scope":2634,"src":"1260:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2616,"name":"bool","nodeType":"ElementaryTypeName","src":"1260:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1259:16:10"},"scope":2679,"src":"1111:286:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2661,"nodeType":"Block","src":"1879:96:10","statements":[{"assignments":[2649],"declarations":[{"constant":false,"id":2649,"mutability":"mutable","name":"key","nameLocation":"1898:3:10","nodeType":"VariableDeclaration","scope":2661,"src":"1885:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2648,"name":"bytes","nodeType":"ElementaryTypeName","src":"1885:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2653,"initialValue":{"arguments":[{"id":2651,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"1918:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2650,"name":"_getSecureKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"1904:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) pure returns (bytes memory)"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1885:38:10"},{"expression":{"arguments":[{"id":2656,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"1951:3:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2657,"name":"_proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"1956:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2658,"name":"_root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"1964:5:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2654,"name":"MerkleTrie","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"1936:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleTrie_$1752_$","typeString":"type(library MerkleTrie)"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1947:3:10","memberName":"get","nodeType":"MemberAccess","referencedDeclaration":1243,"src":"1936:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes32) pure returns (bool,bytes memory)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1936:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2647,"id":2660,"nodeType":"Return","src":"1929:41:10"}]},"documentation":{"id":2635,"nodeType":"StructuredDocumentation","src":"1401:333:10","text":" @notice Retrieves the value associated with a given key.\n @param _key Key to search for, as hex bytes.\n @param _proof Merkle trie inclusion proof for the key.\n @param _root Known root of the Merkle trie.\n @return _exists Whether or not the key exists.\n @return _value Value of the key if it exists."},"id":2662,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"1746:3:10","nodeType":"FunctionDefinition","parameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2637,"mutability":"mutable","name":"_key","nameLocation":"1768:4:10","nodeType":"VariableDeclaration","scope":2662,"src":"1755:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2636,"name":"bytes","nodeType":"ElementaryTypeName","src":"1755:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"_proof","nameLocation":"1791:6:10","nodeType":"VariableDeclaration","scope":2662,"src":"1778:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2638,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"_root","nameLocation":"1811:5:10","nodeType":"VariableDeclaration","scope":2662,"src":"1803:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2640,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1749:71:10"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2644,"mutability":"mutable","name":"_exists","nameLocation":"1849:7:10","nodeType":"VariableDeclaration","scope":2662,"src":"1844:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2643,"name":"bool","nodeType":"ElementaryTypeName","src":"1844:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2646,"mutability":"mutable","name":"_value","nameLocation":"1871:6:10","nodeType":"VariableDeclaration","scope":2662,"src":"1858:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2645,"name":"bytes","nodeType":"ElementaryTypeName","src":"1858:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1843:35:10"},"scope":2679,"src":"1737:238:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2677,"nodeType":"Block","src":"2302:51:10","statements":[{"expression":{"arguments":[{"arguments":[{"id":2673,"name":"_key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2665,"src":"2342:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2672,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2332:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2670,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2315:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2319:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"2315:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2315:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2669,"id":2676,"nodeType":"Return","src":"2308:40:10"}]},"documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"2056:154:10","text":" Computes the secure counterpart to a key.\n @param _key Key to get a secure key from.\n @return _secureKey Secure version of the key."},"id":2678,"implemented":true,"kind":"function","modifiers":[],"name":"_getSecureKey","nameLocation":"2222:13:10","nodeType":"FunctionDefinition","parameters":{"id":2666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2665,"mutability":"mutable","name":"_key","nameLocation":"2249:4:10","nodeType":"VariableDeclaration","scope":2678,"src":"2236:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2664,"name":"bytes","nodeType":"ElementaryTypeName","src":"2236:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2235:19:10"},"returnParameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2668,"mutability":"mutable","name":"_secureKey","nameLocation":"2290:10:10","nodeType":"VariableDeclaration","scope":2678,"src":"2277:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2667,"name":"bytes","nodeType":"ElementaryTypeName","src":"2277:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2276:25:10"},"scope":2679,"src":"2213:140:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2680,"src":"328:2027:10","usedErrors":[]}],"src":"46:2310:10"},"id":10},"contracts/messaging/interfaces/IConnector.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/IConnector.sol","exportedSymbols":{"IConnector":[2715],"IProposedOwnable":[3144]},"id":2716,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2681,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:11"},{"absolutePath":"contracts/shared/interfaces/IProposedOwnable.sol","file":"../../shared/interfaces/IProposedOwnable.sol","id":2683,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2716,"sourceUnit":3145,"src":"71:78:11","symbolAliases":[{"foreign":{"id":2682,"name":"IProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"79:16:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2685,"name":"IProposedOwnable","nameLocations":["1907:16:11"],"nodeType":"IdentifierPath","referencedDeclaration":3144,"src":"1907:16:11"},"id":2686,"nodeType":"InheritanceSpecifier","src":"1907:16:11"}],"canonicalName":"IConnector","contractDependencies":[],"contractKind":"interface","documentation":{"id":2684,"nodeType":"StructuredDocumentation","src":"151:1731:11","text":" @notice This interface is what the Connext contract will send and receive messages through.\n The messaging layer should conform to this interface, and should be interchangeable (i.e.\n could be Nomad or a generic AMB under the hood).\n @dev This uses the nomad format to ensure nomad can be added in as it comes back online.\n Flow from transfer from polygon to optimism:\n 1. User calls `xcall` with destination specified\n 2. This will swap in to the bridge assets\n 3. The swapped assets will get burned\n 4. The Connext contract will call `dispatch` on the messaging contract to add the transfer\n    to the root\n 5. [At some time interval] Relayers call `send` to send the current root from polygon to\n    mainnet. This is done on all \"spoke\" domains.\n 6. [At some time interval] Relayers call `propagate` [better name] on mainnet, this generates a new merkle\n    root from all of the AMBs\n    - This function must be able to read root data from all AMBs and aggregate them into a single merkle\n      tree root\n    - Will send the mixed root from all chains back through the respective AMBs to all other chains\n 7. AMB will call `update` to update the latest root on the messaging contract on spoke domains\n 8. [At any point] Relayers can call `proveAndProcess` to prove inclusion of dispatched message, and call\n    process on the `Connext` contract\n 9. Takes minted bridge tokens and credits the LP\n AMB requirements:\n - Access `msg.sender` both from mainnet -> spoke and vice versa\n - Ability to read *our root* from the AMB\n AMBs:\n - PoS bridge from polygon\n - arbitrum bridge\n - optimism bridge\n - gnosis chain\n - bsc (use multichain for messaging)"},"fullyImplemented":false,"id":2715,"linearizedBaseContracts":[2715,3144],"name":"IConnector","nameLocation":"1893:10:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2687,"nodeType":"StructuredDocumentation","src":"1966:266:11","text":" @notice Emitted whenever a message is successfully sent over an AMB\n @param data The contents of the message\n @param encodedData Data used to send the message; specific to connector\n @param caller Who called the function (sent the message)"},"eventSelector":"dcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e9355077","id":2695,"name":"MessageSent","nameLocation":"2241:11:11","nodeType":"EventDefinition","parameters":{"id":2694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"2259:4:11","nodeType":"VariableDeclaration","scope":2695,"src":"2253:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2688,"name":"bytes","nodeType":"ElementaryTypeName","src":"2253:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2691,"indexed":false,"mutability":"mutable","name":"encodedData","nameLocation":"2271:11:11","nodeType":"VariableDeclaration","scope":2695,"src":"2265:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2690,"name":"bytes","nodeType":"ElementaryTypeName","src":"2265:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2693,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"2292:6:11","nodeType":"VariableDeclaration","scope":2695,"src":"2284:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2692,"name":"address","nodeType":"ElementaryTypeName","src":"2284:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2252:47:11"},"src":"2235:65:11"},{"anonymous":false,"documentation":{"id":2696,"nodeType":"StructuredDocumentation","src":"2304:174:11","text":" @notice Emitted whenever a message is successfully received over an AMB\n @param data The contents of the message\n @param caller Who called the function"},"eventSelector":"b3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced","id":2702,"name":"MessageProcessed","nameLocation":"2487:16:11","nodeType":"EventDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2698,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"2510:4:11","nodeType":"VariableDeclaration","scope":2702,"src":"2504:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2697,"name":"bytes","nodeType":"ElementaryTypeName","src":"2504:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2700,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"2524:6:11","nodeType":"VariableDeclaration","scope":2702,"src":"2516:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2699,"name":"address","nodeType":"ElementaryTypeName","src":"2516:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:28:11"},"src":"2481:51:11"},{"functionSelector":"4ff746f6","id":2707,"implemented":false,"kind":"function","modifiers":[],"name":"processMessage","nameLocation":"2588:14:11","nodeType":"FunctionDefinition","parameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"_data","nameLocation":"2616:5:11","nodeType":"VariableDeclaration","scope":2707,"src":"2603:18:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2703,"name":"bytes","nodeType":"ElementaryTypeName","src":"2603:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2602:20:11"},"returnParameters":{"id":2706,"nodeType":"ParameterList","parameters":[],"src":"2631:0:11"},"scope":2715,"src":"2579:53:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"db1b7659","id":2714,"implemented":false,"kind":"function","modifiers":[],"name":"verifySender","nameLocation":"2645:12:11","nodeType":"FunctionDefinition","parameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"_expected","nameLocation":"2666:9:11","nodeType":"VariableDeclaration","scope":2714,"src":"2658:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2708,"name":"address","nodeType":"ElementaryTypeName","src":"2658:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2657:19:11"},"returnParameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2714,"src":"2695:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2711,"name":"bool","nodeType":"ElementaryTypeName","src":"2695:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2694:6:11"},"scope":2715,"src":"2636:65:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2716,"src":"1883:820:11","usedErrors":[]}],"src":"46:2658:11"},"id":11},"contracts/messaging/interfaces/IRootManager.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/IRootManager.sol","exportedSymbols":{"IRootManager":[2739]},"id":2740,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2717,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IRootManager","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2739,"linearizedBaseContracts":[2739],"name":"IRootManager","nameLocation":"81:12:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2718,"nodeType":"StructuredDocumentation","src":"98:203:12","text":" @notice This is called by relayers to generate + send the mixed root from mainnet via AMB to\n spoke domains.\n @dev This must read information for the root from the registered AMBs."},"functionSelector":"412e12db","id":2730,"implemented":false,"kind":"function","modifiers":[],"name":"propagate","nameLocation":"313:9:12","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"_connectors","nameLocation":"347:11:12","nodeType":"VariableDeclaration","scope":2730,"src":"328:30:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"328:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2720,"nodeType":"ArrayTypeName","src":"328:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2724,"mutability":"mutable","name":"_fees","nameLocation":"383:5:12","nodeType":"VariableDeclaration","scope":2730,"src":"364:24:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2722,"name":"uint256","nodeType":"ElementaryTypeName","src":"364:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"nodeType":"ArrayTypeName","src":"364:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2727,"mutability":"mutable","name":"_encodedData","nameLocation":"409:12:12","nodeType":"VariableDeclaration","scope":2730,"src":"394:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":2725,"name":"bytes","nodeType":"ElementaryTypeName","src":"394:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":2726,"nodeType":"ArrayTypeName","src":"394:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"322:103:12"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[],"src":"442:0:12"},"scope":2739,"src":"304:139:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"447:198:12","text":" @notice Called by the connectors for various domains on the hub to aggregate their latest\n inbound root.\n @dev This must read information for the root from the registered AMBs"},"functionSelector":"8e7d93fa","id":2738,"implemented":false,"kind":"function","modifiers":[],"name":"aggregate","nameLocation":"657:9:12","nodeType":"FunctionDefinition","parameters":{"id":2736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"_domain","nameLocation":"674:7:12","nodeType":"VariableDeclaration","scope":2738,"src":"667:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2732,"name":"uint32","nodeType":"ElementaryTypeName","src":"667:6:12","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2735,"mutability":"mutable","name":"_outbound","nameLocation":"691:9:12","nodeType":"VariableDeclaration","scope":2738,"src":"683:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"683:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"666:35:12"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[],"src":"710:0:12"},"scope":2739,"src":"648:63:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2740,"src":"71:642:12","usedErrors":[]}],"src":"46:668:12"},"id":12},"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol","exportedSymbols":{"ChainBatchHeader":[2752],"ChainInclusionProof":[2758],"IStateCommitmentChain":[2848],"L2MessageInclusionProof":[2771]},"id":2849,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2741,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:13"},{"canonicalName":"ChainBatchHeader","id":2752,"members":[{"constant":false,"id":2743,"mutability":"mutable","name":"batchIndex","nameLocation":"287:10:13","nodeType":"VariableDeclaration","scope":2752,"src":"279:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2742,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2745,"mutability":"mutable","name":"batchRoot","nameLocation":"309:9:13","nodeType":"VariableDeclaration","scope":2752,"src":"301:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2744,"name":"bytes32","nodeType":"ElementaryTypeName","src":"301:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"batchSize","nameLocation":"330:9:13","nodeType":"VariableDeclaration","scope":2752,"src":"322:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"322:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"prevTotalElements","nameLocation":"351:17:13","nodeType":"VariableDeclaration","scope":2752,"src":"343:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2751,"mutability":"mutable","name":"extraData","nameLocation":"378:9:13","nodeType":"VariableDeclaration","scope":2752,"src":"372:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2750,"name":"bytes","nodeType":"ElementaryTypeName","src":"372:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"ChainBatchHeader","nameLocation":"258:16:13","nodeType":"StructDefinition","scope":2849,"src":"251:139:13","visibility":"public"},{"canonicalName":"ChainInclusionProof","id":2758,"members":[{"constant":false,"id":2754,"mutability":"mutable","name":"index","nameLocation":"611:5:13","nodeType":"VariableDeclaration","scope":2758,"src":"603:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2753,"name":"uint256","nodeType":"ElementaryTypeName","src":"603:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"siblings","nameLocation":"630:8:13","nodeType":"VariableDeclaration","scope":2758,"src":"620:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"620:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2756,"nodeType":"ArrayTypeName","src":"620:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"name":"ChainInclusionProof","nameLocation":"579:19:13","nodeType":"StructDefinition","scope":2849,"src":"572:69:13","visibility":"public"},{"canonicalName":"L2MessageInclusionProof","id":2771,"members":[{"constant":false,"id":2760,"mutability":"mutable","name":"stateRoot","nameLocation":"874:9:13","nodeType":"VariableDeclaration","scope":2771,"src":"866:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"866:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"stateRootBatchHeader","nameLocation":"904:20:13","nodeType":"VariableDeclaration","scope":2771,"src":"887:37:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_storage_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":2762,"nodeType":"UserDefinedTypeName","pathNode":{"id":2761,"name":"ChainBatchHeader","nameLocations":["887:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2752,"src":"887:16:13"},"referencedDeclaration":2752,"src":"887:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"stateRootProof","nameLocation":"948:14:13","nodeType":"VariableDeclaration","scope":2771,"src":"928:34:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$2758_storage_ptr","typeString":"struct ChainInclusionProof"},"typeName":{"id":2765,"nodeType":"UserDefinedTypeName","pathNode":{"id":2764,"name":"ChainInclusionProof","nameLocations":["928:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2758,"src":"928:19:13"},"referencedDeclaration":2758,"src":"928:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$2758_storage_ptr","typeString":"struct ChainInclusionProof"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"stateTrieWitness","nameLocation":"972:16:13","nodeType":"VariableDeclaration","scope":2771,"src":"966:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2767,"name":"bytes","nodeType":"ElementaryTypeName","src":"966:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"storageTrieWitness","nameLocation":"998:18:13","nodeType":"VariableDeclaration","scope":2771,"src":"992:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2769,"name":"bytes","nodeType":"ElementaryTypeName","src":"992:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"L2MessageInclusionProof","nameLocation":"838:23:13","nodeType":"StructDefinition","scope":2849,"src":"831:188:13","visibility":"public"},{"abstract":false,"baseContracts":[],"canonicalName":"IStateCommitmentChain","contractDependencies":[],"contractKind":"interface","documentation":{"id":2772,"nodeType":"StructuredDocumentation","src":"1021:189:13","text":" @title IStateCommitmentChain\n @dev modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/IStateCommitmentChain.sol"},"fullyImplemented":false,"id":2848,"linearizedBaseContracts":[2848],"name":"IStateCommitmentChain","nameLocation":"1221:21:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"16be4c5129a4e03cf3350262e181dc02ddfb4a6008d925368c0899fcd97ca9c5","id":2784,"name":"StateBatchAppended","nameLocation":"1297:18:13","nodeType":"EventDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"indexed":true,"mutability":"mutable","name":"_batchIndex","nameLocation":"1337:11:13","nodeType":"VariableDeclaration","scope":2784,"src":"1321:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2773,"name":"uint256","nodeType":"ElementaryTypeName","src":"1321:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2776,"indexed":false,"mutability":"mutable","name":"_batchRoot","nameLocation":"1362:10:13","nodeType":"VariableDeclaration","scope":2784,"src":"1354:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1354:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2778,"indexed":false,"mutability":"mutable","name":"_batchSize","nameLocation":"1386:10:13","nodeType":"VariableDeclaration","scope":2784,"src":"1378:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2780,"indexed":false,"mutability":"mutable","name":"_prevTotalElements","nameLocation":"1410:18:13","nodeType":"VariableDeclaration","scope":2784,"src":"1402:26:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2782,"indexed":false,"mutability":"mutable","name":"_extraData","nameLocation":"1440:10:13","nodeType":"VariableDeclaration","scope":2784,"src":"1434:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2781,"name":"bytes","nodeType":"ElementaryTypeName","src":"1434:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1315:139:13"},"src":"1291:164:13"},{"anonymous":false,"eventSelector":"8747b69ce8fdb31c3b9b0a67bd8049ad8c1a69ea417b69b12174068abd9cbd64","id":2790,"name":"StateBatchDeleted","nameLocation":"1465:17:13","nodeType":"EventDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"indexed":true,"mutability":"mutable","name":"_batchIndex","nameLocation":"1499:11:13","nodeType":"VariableDeclaration","scope":2790,"src":"1483:27:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2788,"indexed":false,"mutability":"mutable","name":"_batchRoot","nameLocation":"1520:10:13","nodeType":"VariableDeclaration","scope":2790,"src":"1512:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2787,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1512:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1482:49:13"},"src":"1459:73:13"},{"documentation":{"id":2791,"nodeType":"StructuredDocumentation","src":"1610:118:13","text":" Retrieves the total number of elements submitted.\n @return _totalElements Total submitted elements."},"functionSelector":"7aa63a86","id":2796,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalElements","nameLocation":"1740:16:13","nodeType":"FunctionDefinition","parameters":{"id":2792,"nodeType":"ParameterList","parameters":[],"src":"1756:2:13"},"returnParameters":{"id":2795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"_totalElements","nameLocation":"1790:14:13","nodeType":"VariableDeclaration","scope":2796,"src":"1782:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2793,"name":"uint256","nodeType":"ElementaryTypeName","src":"1782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1781:24:13"},"scope":2848,"src":"1731:75:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"1810:115:13","text":" Retrieves the total number of batches submitted.\n @return _totalBatches Total submitted batches."},"functionSelector":"e561dddc","id":2802,"implemented":false,"kind":"function","modifiers":[],"name":"getTotalBatches","nameLocation":"1937:15:13","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[],"src":"1952:2:13"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"_totalBatches","nameLocation":"1986:13:13","nodeType":"VariableDeclaration","scope":2802,"src":"1978:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"1978:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1977:23:13"},"scope":2848,"src":"1928:73:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"2005:153:13","text":" Retrieves the timestamp of the last batch submitted by the sequencer.\n @return _lastSequencerTimestamp Last sequencer batch timestamp."},"functionSelector":"7ad168a0","id":2808,"implemented":false,"kind":"function","modifiers":[],"name":"getLastSequencerTimestamp","nameLocation":"2170:25:13","nodeType":"FunctionDefinition","parameters":{"id":2804,"nodeType":"ParameterList","parameters":[],"src":"2195:2:13"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"_lastSequencerTimestamp","nameLocation":"2229:23:13","nodeType":"VariableDeclaration","scope":2808,"src":"2221:31:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"2221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2220:33:13"},"scope":2848,"src":"2161:93:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2809,"nodeType":"StructuredDocumentation","src":"2258:189:13","text":" Appends a batch of state roots to the chain.\n @param _batch Batch of state roots.\n @param _shouldStartAtElement Index of the element at which this batch should start."},"functionSelector":"8ca5cbb9","id":2817,"implemented":false,"kind":"function","modifiers":[],"name":"appendStateBatch","nameLocation":"2459:16:13","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"_batch","nameLocation":"2495:6:13","nodeType":"VariableDeclaration","scope":2817,"src":"2476:25:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2476:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2811,"nodeType":"ArrayTypeName","src":"2476:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2814,"mutability":"mutable","name":"_shouldStartAtElement","nameLocation":"2511:21:13","nodeType":"VariableDeclaration","scope":2817,"src":"2503:29:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"2503:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2475:58:13"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[],"src":"2542:0:13"},"scope":2848,"src":"2450:93:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"2547:144:13","text":" Deletes all state roots after (and including) a given batch.\n @param _batchHeader Header of the batch to start deleting from."},"functionSelector":"b8e189ac","id":2824,"implemented":false,"kind":"function","modifiers":[],"name":"deleteStateBatch","nameLocation":"2703:16:13","nodeType":"FunctionDefinition","parameters":{"id":2822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2821,"mutability":"mutable","name":"_batchHeader","nameLocation":"2744:12:13","nodeType":"VariableDeclaration","scope":2824,"src":"2720:36:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_memory_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":2820,"nodeType":"UserDefinedTypeName","pathNode":{"id":2819,"name":"ChainBatchHeader","nameLocations":["2720:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2752,"src":"2720:16:13"},"referencedDeclaration":2752,"src":"2720:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"}],"src":"2719:38:13"},"returnParameters":{"id":2823,"nodeType":"ParameterList","parameters":[],"src":"2766:0:13"},"scope":2848,"src":"2694:73:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2825,"nodeType":"StructuredDocumentation","src":"2771:251:13","text":" Verifies a batch inclusion proof.\n @param _element Hash of the element to verify a proof for.\n @param _batchHeader Header of the batch in which the element was included.\n @param _proof Merkle inclusion proof for the element."},"functionSelector":"4d69ee57","id":2838,"implemented":false,"kind":"function","modifiers":[],"name":"verifyStateCommitment","nameLocation":"3034:21:13","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2827,"mutability":"mutable","name":"_element","nameLocation":"3069:8:13","nodeType":"VariableDeclaration","scope":2838,"src":"3061:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2830,"mutability":"mutable","name":"_batchHeader","nameLocation":"3107:12:13","nodeType":"VariableDeclaration","scope":2838,"src":"3083:36:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_memory_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":2829,"nodeType":"UserDefinedTypeName","pathNode":{"id":2828,"name":"ChainBatchHeader","nameLocations":["3083:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2752,"src":"3083:16:13"},"referencedDeclaration":2752,"src":"3083:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"_proof","nameLocation":"3152:6:13","nodeType":"VariableDeclaration","scope":2838,"src":"3125:33:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$2758_memory_ptr","typeString":"struct ChainInclusionProof"},"typeName":{"id":2832,"nodeType":"UserDefinedTypeName","pathNode":{"id":2831,"name":"ChainInclusionProof","nameLocations":["3125:19:13"],"nodeType":"IdentifierPath","referencedDeclaration":2758,"src":"3125:19:13"},"referencedDeclaration":2758,"src":"3125:19:13","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInclusionProof_$2758_storage_ptr","typeString":"struct ChainInclusionProof"}},"visibility":"internal"}],"src":"3055:107:13"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"_verified","nameLocation":"3191:9:13","nodeType":"VariableDeclaration","scope":2838,"src":"3186:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2835,"name":"bool","nodeType":"ElementaryTypeName","src":"3186:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3185:16:13"},"scope":2848,"src":"3025:177:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2839,"nodeType":"StructuredDocumentation","src":"3206:218:13","text":" Checks whether a given batch is still inside its fraud proof window.\n @param _batchHeader Header of the batch to check.\n @return _inside Whether or not the batch is inside the fraud proof window."},"functionSelector":"9418bddd","id":2847,"implemented":false,"kind":"function","modifiers":[],"name":"insideFraudProofWindow","nameLocation":"3436:22:13","nodeType":"FunctionDefinition","parameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"_batchHeader","nameLocation":"3483:12:13","nodeType":"VariableDeclaration","scope":2847,"src":"3459:36:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_memory_ptr","typeString":"struct ChainBatchHeader"},"typeName":{"id":2841,"nodeType":"UserDefinedTypeName","pathNode":{"id":2840,"name":"ChainBatchHeader","nameLocations":["3459:16:13"],"nodeType":"IdentifierPath","referencedDeclaration":2752,"src":"3459:16:13"},"referencedDeclaration":2752,"src":"3459:16:13","typeDescriptions":{"typeIdentifier":"t_struct$_ChainBatchHeader_$2752_storage_ptr","typeString":"struct ChainBatchHeader"}},"visibility":"internal"}],"src":"3458:38:13"},"returnParameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"_inside","nameLocation":"3525:7:13","nodeType":"VariableDeclaration","scope":2847,"src":"3520:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2844,"name":"bool","nodeType":"ElementaryTypeName","src":"3520:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3519:14:13"},"scope":2848,"src":"3427:107:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2849,"src":"1211:2325:13","usedErrors":[]}],"src":"46:3491:13"},"id":13},"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol":{"ast":{"absolutePath":"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol","exportedSymbols":{"OptimismAmb":[2866]},"id":2867,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":2850,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"OptimismAmb","contractDependencies":[],"contractKind":"interface","documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"71:937:14","text":" @dev The optimism bridge shares both of these functions, but it is important\n to note that when going from L2 -> L1, the message cannot be processed by the\n AMB until the challenge period elapses.\n HOWEVER, before the challenge elapses, you can read the state of the L2 as it is\n placed on mainnet. By processing data from the L2 state, we are able to \"circumvent\"\n this delay to a reasonable degree.\n This means that for messages going L1 -> L2, you can call \"processMessage\" and expect\n the call to be executed to pass up the aggregate root. When going from L2 -> L1, you\n must read the root from the L2 state\n L2 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol\n L1 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol"},"fullyImplemented":false,"id":2866,"linearizedBaseContracts":[2866],"name":"OptimismAmb","nameLocation":"1019:11:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3dbb202b","id":2860,"implemented":false,"kind":"function","modifiers":[],"name":"sendMessage","nameLocation":"1044:11:14","nodeType":"FunctionDefinition","parameters":{"id":2858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"_target","nameLocation":"1069:7:14","nodeType":"VariableDeclaration","scope":2860,"src":"1061:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2852,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"_message","nameLocation":"1095:8:14","nodeType":"VariableDeclaration","scope":2860,"src":"1082:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2854,"name":"bytes","nodeType":"ElementaryTypeName","src":"1082:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2857,"mutability":"mutable","name":"_gasLimit","nameLocation":"1116:9:14","nodeType":"VariableDeclaration","scope":2860,"src":"1109:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2856,"name":"uint32","nodeType":"ElementaryTypeName","src":"1109:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1055:74:14"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[],"src":"1138:0:14"},"scope":2866,"src":"1035:104:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e296e45","id":2865,"implemented":false,"kind":"function","modifiers":[],"name":"xDomainMessageSender","nameLocation":"1152:20:14","nodeType":"FunctionDefinition","parameters":{"id":2861,"nodeType":"ParameterList","parameters":[],"src":"1172:2:14"},"returnParameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2865,"src":"1198:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2862,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1197:9:14"},"scope":2866,"src":"1143:64:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2867,"src":"1009:200:14","usedErrors":[]}],"src":"46:1164:14"},"id":14},"contracts/shared/ProposedOwnable.sol":{"ast":{"absolutePath":"contracts/shared/ProposedOwnable.sol","exportedSymbols":{"IProposedOwnable":[3144],"ProposedOwnable":[3106]},"id":3107,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2868,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"39:23:15"},{"absolutePath":"contracts/shared/interfaces/IProposedOwnable.sol","file":"./interfaces/IProposedOwnable.sol","id":2870,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3107,"sourceUnit":3145,"src":"64:67:15","symbolAliases":[{"foreign":{"id":2869,"name":"IProposedOwnable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"72:16:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2872,"name":"IProposedOwnable","nameLocations":["872:16:15"],"nodeType":"IdentifierPath","referencedDeclaration":3144,"src":"872:16:15"},"id":2873,"nodeType":"InheritanceSpecifier","src":"872:16:15"}],"canonicalName":"ProposedOwnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"133:701:15","text":" @title ProposedOwnable\n @notice Contract module which provides a basic access control mechanism,\n where there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed via a two step process:\n 1. Call `proposeOwner`\n 2. Wait out the delay period\n 3. Call `acceptOwner`\n @dev This module is used through inheritance. It will make available the\n modifier `onlyOwner`, which can be applied to your functions to restrict\n their use to the owner.\n @dev The majority of this code was taken from the openzeppelin Ownable\n contract"},"fullyImplemented":true,"id":3106,"linearizedBaseContracts":[3106,3144],"name":"ProposedOwnable","nameLocation":"853:15:15","nodeType":"ContractDefinition","nodes":[{"errorSelector":"8d450dd8","id":2875,"name":"ProposedOwnable__onlyOwner_notOwner","nameLocation":"942:35:15","nodeType":"ErrorDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[],"src":"977:2:15"},"src":"936:44:15"},{"errorSelector":"234fe4e2","id":2877,"name":"ProposedOwnable__onlyProposed_notProposedOwner","nameLocation":"989:46:15","nodeType":"ErrorDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[],"src":"1035:2:15"},"src":"983:55:15"},{"errorSelector":"9380a17c","id":2879,"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","nameLocation":"1047:54:15","nodeType":"ErrorDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[],"src":"1101:2:15"},"src":"1041:63:15"},{"errorSelector":"23780cca","id":2881,"name":"ProposedOwnable__proposeNewOwner_invalidProposal","nameLocation":"1113:48:15","nodeType":"ErrorDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[],"src":"1161:2:15"},"src":"1107:57:15"},{"errorSelector":"945f6e7e","id":2883,"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","nameLocation":"1173:50:15","nodeType":"ErrorDefinition","parameters":{"id":2882,"nodeType":"ParameterList","parameters":[],"src":"1223:2:15"},"src":"1167:59:15"},{"errorSelector":"392cc0fc","id":2885,"name":"ProposedOwnable__renounceOwnership_noProposal","nameLocation":"1235:45:15","nodeType":"ErrorDefinition","parameters":{"id":2884,"nodeType":"ParameterList","parameters":[],"src":"1280:2:15"},"src":"1229:54:15"},{"errorSelector":"23295ef9","id":2887,"name":"ProposedOwnable__renounceOwnership_invalidProposal","nameLocation":"1292:50:15","nodeType":"ErrorDefinition","parameters":{"id":2886,"nodeType":"ParameterList","parameters":[],"src":"1342:2:15"},"src":"1286:59:15"},{"constant":false,"id":2889,"mutability":"mutable","name":"_owner","nameLocation":"1408:6:15","nodeType":"VariableDeclaration","scope":3106,"src":"1392:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"1392:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2891,"mutability":"mutable","name":"_proposed","nameLocation":"1435:9:15","nodeType":"VariableDeclaration","scope":3106,"src":"1419:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2890,"name":"address","nodeType":"ElementaryTypeName","src":"1419:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2893,"mutability":"mutable","name":"_proposedOwnershipTimestamp","nameLocation":"1464:27:15","nodeType":"VariableDeclaration","scope":3106,"src":"1448:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":2896,"mutability":"constant","name":"_delay","nameLocation":"1521:6:15","nodeType":"VariableDeclaration","scope":3106,"src":"1496:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":2895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:6:15","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"private"},{"baseFunctions":[3127],"body":{"id":2904,"nodeType":"Block","src":"1696:24:15","statements":[{"expression":{"id":2902,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"1709:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2901,"id":2903,"nodeType":"Return","src":"1702:13:15"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"1574:64:15","text":" @notice Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1650:5:15","nodeType":"FunctionDefinition","parameters":{"id":2898,"nodeType":"ParameterList","parameters":[],"src":"1655:2:15"},"returnParameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"1687:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1686:9:15"},"scope":3106,"src":"1641:79:15","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3133],"body":{"id":2913,"nodeType":"Block","src":"1850:27:15","statements":[{"expression":{"id":2911,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"1863:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2910,"id":2912,"nodeType":"Return","src":"1856:16:15"}]},"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"1724:65:15","text":" @notice Returns the address of the proposed owner."},"functionSelector":"d1851c92","id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"proposed","nameLocation":"1801:8:15","nodeType":"FunctionDefinition","parameters":{"id":2907,"nodeType":"ParameterList","parameters":[],"src":"1809:2:15"},"returnParameters":{"id":2910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2914,"src":"1841:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"1841:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1840:9:15"},"scope":3106,"src":"1792:85:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2922,"nodeType":"Block","src":"2016:45:15","statements":[{"expression":{"id":2920,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2029:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2919,"id":2921,"nodeType":"Return","src":"2022:34:15"}]},"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"1881:65:15","text":" @notice Returns the address of the proposed owner."},"functionSelector":"3cf52ffb","id":2923,"implemented":true,"kind":"function","modifiers":[],"name":"proposedTimestamp","nameLocation":"1958:17:15","nodeType":"FunctionDefinition","parameters":{"id":2916,"nodeType":"ParameterList","parameters":[],"src":"1975:2:15"},"returnParameters":{"id":2919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2923,"src":"2007:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2007:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2006:9:15"},"scope":3106,"src":"1949:112:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2931,"nodeType":"Block","src":"2206:24:15","statements":[{"expression":{"id":2929,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2219:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2928,"id":2930,"nodeType":"Return","src":"2212:13:15"}]},"documentation":{"id":2924,"nodeType":"StructuredDocumentation","src":"2065:83:15","text":" @notice Returns the delay period before a new owner can be accepted."},"functionSelector":"6a42b8f8","id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"delay","nameLocation":"2160:5:15","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[],"src":"2165:2:15"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2932,"src":"2197:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"2197:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2196:9:15"},"scope":3106,"src":"2151:79:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2944,"nodeType":"Block","src":"2334:88:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"2344:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2936,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2354:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2354:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2344:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2942,"nodeType":"IfStatement","src":"2340:70:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2939,"name":"ProposedOwnable__onlyOwner_notOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"2373:35:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2941,"nodeType":"RevertStatement","src":"2366:44:15"}},{"id":2943,"nodeType":"PlaceholderStatement","src":"2416:1:15"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"2234:76:15","text":" @notice Throws if called by any account other than the owner."},"id":2945,"name":"onlyOwner","nameLocation":"2322:9:15","nodeType":"ModifierDefinition","parameters":{"id":2934,"nodeType":"ParameterList","parameters":[],"src":"2331:2:15"},"src":"2313:109:15","virtual":false,"visibility":"internal"},{"body":{"id":2957,"nodeType":"Block","src":"2538:102:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"2548:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":2949,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2561:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2565:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2561:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2548:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2955,"nodeType":"IfStatement","src":"2544:84:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2952,"name":"ProposedOwnable__onlyProposed_notProposedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"2580:46:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2580:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2954,"nodeType":"RevertStatement","src":"2573:55:15"}},{"id":2956,"nodeType":"PlaceholderStatement","src":"2634:1:15"}]},"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"2426:85:15","text":" @notice Throws if called by any account other than the proposed owner."},"id":2958,"name":"onlyProposed","nameLocation":"2523:12:15","nodeType":"ModifierDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[],"src":"2535:2:15"},"src":"2514:126:15","virtual":false,"visibility":"internal"},{"body":{"id":2973,"nodeType":"Block","src":"2748:182:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2961,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2791:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2797:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"2791:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2963,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"2809:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2791:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2965,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2790:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2966,"name":"_delay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"2841:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2790:57:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2971,"nodeType":"IfStatement","src":"2786:132:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2968,"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"2862:54:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:56:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"RevertStatement","src":"2855:63:15"}},{"id":2972,"nodeType":"PlaceholderStatement","src":"2924:1:15"}]},"documentation":{"id":2959,"nodeType":"StructuredDocumentation","src":"2644:68:15","text":" @notice Throws if the ownership delay has not elapsed"},"id":2974,"name":"ownershipDelayElapsed","nameLocation":"2724:21:15","nodeType":"ModifierDefinition","parameters":{"id":2960,"nodeType":"ParameterList","parameters":[],"src":"2745:2:15"},"src":"2715:215:15","virtual":false,"visibility":"internal"},{"body":{"id":2987,"nodeType":"Block","src":"3103:38:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"3116:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3134:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3126:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"3126:7:15","typeDescriptions":{}}},"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3126:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3116:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2979,"id":2986,"nodeType":"Return","src":"3109:27:15"}]},"documentation":{"id":2975,"nodeType":"StructuredDocumentation","src":"2934:118:15","text":" @notice Indicates if the ownership has been renounced() by\n checking if current owner is address(0)"},"functionSelector":"d232c220","id":2988,"implemented":true,"kind":"function","modifiers":[],"name":"renounced","nameLocation":"3064:9:15","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[],"src":"3073:2:15"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2988,"src":"3097:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2977,"name":"bool","nodeType":"ElementaryTypeName","src":"3097:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3096:6:15"},"scope":3106,"src":"3055:86:15","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[3139],"body":{"id":3018,"nodeType":"Block","src":"3394:347:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"3439:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2997,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"3452:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3439:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"3469:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3500:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3469:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3439:62:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3006,"nodeType":"IfStatement","src":"3435:131:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3003,"name":"ProposedOwnable__proposeNewOwner_invalidProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2881,"src":"3516:48:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3516:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"RevertStatement","src":"3509:57:15"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3007,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"3618:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3008,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"3628:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3618:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3013,"nodeType":"IfStatement","src":"3614:88:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3010,"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"3650:50:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3650:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3012,"nodeType":"RevertStatement","src":"3643:59:15"}},{"expression":{"arguments":[{"id":3015,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"3722:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3014,"name":"_setProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"3709:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3709:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3017,"nodeType":"ExpressionStatement","src":"3709:27:15"}]},"documentation":{"id":2989,"nodeType":"StructuredDocumentation","src":"3179:139:15","text":" @notice Sets the timestamp for an owner to be proposed, and sets the\n newly proposed owner as step 1 in a 2-step process"},"functionSelector":"b1f8100d","id":3019,"implemented":true,"kind":"function","modifiers":[{"id":2994,"kind":"modifierInvocation","modifierName":{"id":2993,"name":"onlyOwner","nameLocations":["3384:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2945,"src":"3384:9:15"},"nodeType":"ModifierInvocation","src":"3384:9:15"}],"name":"proposeNewOwner","nameLocation":"3330:15:15","nodeType":"FunctionDefinition","parameters":{"id":2992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"newlyProposed","nameLocation":"3354:13:15","nodeType":"VariableDeclaration","scope":3019,"src":"3346:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"3346:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3345:23:15"},"returnParameters":{"id":2995,"nodeType":"ParameterList","parameters":[],"src":"3394:0:15"},"scope":3106,"src":"3321:420:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3051,"nodeType":"Block","src":"3896:366:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"3960:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3991:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3960:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3033,"nodeType":"IfStatement","src":"3956:92:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3030,"name":"ProposedOwnable__renounceOwnership_noProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2885,"src":"4001:45:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4001:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3032,"nodeType":"RevertStatement","src":"3994:54:15"}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"4095:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4116:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"4108:7:15","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4108:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4095:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3043,"nodeType":"IfStatement","src":"4091:88:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3040,"name":"ProposedOwnable__renounceOwnership_invalidProposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"4127:50:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3042,"nodeType":"RevertStatement","src":"4120:59:15"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4254:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4246:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"4246:7:15","typeDescriptions":{}}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4246:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3044,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"4236:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4236:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3050,"nodeType":"ExpressionStatement","src":"4236:21:15"}]},"documentation":{"id":3020,"nodeType":"StructuredDocumentation","src":"3745:72:15","text":" @notice Renounces ownership of the contract after a delay"},"functionSelector":"715018a6","id":3052,"implemented":true,"kind":"function","modifiers":[{"id":3023,"kind":"modifierInvocation","modifierName":{"id":3022,"name":"onlyOwner","nameLocations":["3864:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2945,"src":"3864:9:15"},"nodeType":"ModifierInvocation","src":"3864:9:15"},{"id":3025,"kind":"modifierInvocation","modifierName":{"id":3024,"name":"ownershipDelayElapsed","nameLocations":["3874:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":2974,"src":"3874:21:15"},"nodeType":"ModifierInvocation","src":"3874:21:15"}],"name":"renounceOwnership","nameLocation":"3829:17:15","nodeType":"FunctionDefinition","parameters":{"id":3021,"nodeType":"ParameterList","parameters":[],"src":"3846:2:15"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[],"src":"3896:0:15"},"scope":3106,"src":"3820:442:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3143],"body":{"id":3064,"nodeType":"Block","src":"4485:458:15","statements":[{"expression":{"arguments":[{"id":3061,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"4928:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3060,"name":"_setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"4918:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4918:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3063,"nodeType":"ExpressionStatement","src":"4918:20:15"}]},"documentation":{"id":3053,"nodeType":"StructuredDocumentation","src":"4266:135:15","text":" @notice Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"c5b350df","id":3065,"implemented":true,"kind":"function","modifiers":[{"id":3056,"kind":"modifierInvocation","modifierName":{"id":3055,"name":"onlyProposed","nameLocations":["4450:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2958,"src":"4450:12:15"},"nodeType":"ModifierInvocation","src":"4450:12:15"},{"id":3058,"kind":"modifierInvocation","modifierName":{"id":3057,"name":"ownershipDelayElapsed","nameLocations":["4463:21:15"],"nodeType":"IdentifierPath","referencedDeclaration":2974,"src":"4463:21:15"},"nodeType":"ModifierInvocation","src":"4463:21:15"}],"name":"acceptProposedOwner","nameLocation":"4413:19:15","nodeType":"FunctionDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[],"src":"4432:2:15"},"returnParameters":{"id":3059,"nodeType":"ParameterList","parameters":[],"src":"4485:0:15"},"scope":3106,"src":"4404:539:15","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":3085,"nodeType":"Block","src":"5027:139:15","statements":[{"eventCall":{"arguments":[{"id":3071,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"5059:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3072,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"5067:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3070,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"5038:20:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5038:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3074,"nodeType":"EmitStatement","src":"5033:43:15"},{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3075,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"5082:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3076,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"5091:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5082:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3078,"nodeType":"ExpressionStatement","src":"5082:17:15"},{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5105:34:15","subExpression":{"id":3079,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"5112:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3081,"nodeType":"ExpressionStatement","src":"5105:34:15"},{"expression":{"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5145:16:15","subExpression":{"id":3082,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"5152:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3084,"nodeType":"ExpressionStatement","src":"5145:16:15"}]},"id":3086,"implemented":true,"kind":"function","modifiers":[],"name":"_setOwner","nameLocation":"4990:9:15","nodeType":"FunctionDefinition","parameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"newOwner","nameLocation":"5008:8:15","nodeType":"VariableDeclaration","scope":3086,"src":"5000:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3066,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4999:18:15"},"returnParameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"5027:0:15"},"scope":3106,"src":"4981:185:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3104,"nodeType":"Block","src":"5223:130:15","statements":[{"expression":{"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3091,"name":"_proposedOwnershipTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"5229:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3092,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5259:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5265:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"5259:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5229:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"5229:45:15"},{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3096,"name":"_proposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"5280:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3097,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"5292:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5280:25:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3099,"nodeType":"ExpressionStatement","src":"5280:25:15"},{"eventCall":{"arguments":[{"id":3101,"name":"newlyProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"5334:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3100,"name":"OwnershipProposed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"5316:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5316:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3103,"nodeType":"EmitStatement","src":"5311:37:15"}]},"id":3105,"implemented":true,"kind":"function","modifiers":[],"name":"_setProposed","nameLocation":"5179:12:15","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"newlyProposed","nameLocation":"5200:13:15","nodeType":"VariableDeclaration","scope":3105,"src":"5192:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3087,"name":"address","nodeType":"ElementaryTypeName","src":"5192:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5191:23:15"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[],"src":"5223:0:15"},"scope":3106,"src":"5170:183:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":3107,"src":"835:4520:15","usedErrors":[2875,2877,2879,2881,2883,2885,2887]}],"src":"39:5317:15"},"id":15},"contracts/shared/interfaces/IProposedOwnable.sol":{"ast":{"absolutePath":"contracts/shared/interfaces/IProposedOwnable.sol","exportedSymbols":{"IProposedOwnable":[3144]},"id":3145,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3108,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"32:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IProposedOwnable","contractDependencies":[],"contractKind":"interface","documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"57:138:16","text":" @title IProposedOwnable\n @notice Defines a minimal interface for ownership with a two step proposal and acceptance\n process"},"fullyImplemented":false,"id":3144,"linearizedBaseContracts":[3144],"name":"IProposedOwnable","nameLocation":"206:16:16","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"227:82:16","text":" @dev This emits when change in ownership of a contract is proposed."},"eventSelector":"6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a","id":3114,"name":"OwnershipProposed","nameLocation":"318:17:16","nodeType":"EventDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"indexed":true,"mutability":"mutable","name":"proposedOwner","nameLocation":"352:13:16","nodeType":"VariableDeclaration","scope":3114,"src":"336:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3111,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"335:31:16"},"src":"312:55:16"},{"anonymous":false,"documentation":{"id":3115,"nodeType":"StructuredDocumentation","src":"371:68:16","text":" @dev This emits when ownership of a contract changes."},"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":3121,"name":"OwnershipTransferred","nameLocation":"448:20:16","nodeType":"EventDefinition","parameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3117,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"485:13:16","nodeType":"VariableDeclaration","scope":3121,"src":"469:29:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"469:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3119,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"516:8:16","nodeType":"VariableDeclaration","scope":3121,"src":"500:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3118,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"468:57:16"},"src":"442:84:16"},{"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"530:97:16","text":" @notice Get the address of the owner\n @return owner_ The address of the owner."},"functionSelector":"8da5cb5b","id":3127,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"639:5:16","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[],"src":"644:2:16"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"owner_","nameLocation":"678:6:16","nodeType":"VariableDeclaration","scope":3127,"src":"670:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3124,"name":"address","nodeType":"ElementaryTypeName","src":"670:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"669:16:16"},"scope":3144,"src":"630:56:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3128,"nodeType":"StructuredDocumentation","src":"690:112:16","text":" @notice Get the address of the proposed owner\n @return proposed_ The address of the proposed."},"functionSelector":"d1851c92","id":3133,"implemented":false,"kind":"function","modifiers":[],"name":"proposed","nameLocation":"814:8:16","nodeType":"FunctionDefinition","parameters":{"id":3129,"nodeType":"ParameterList","parameters":[],"src":"822:2:16"},"returnParameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"proposed_","nameLocation":"856:9:16","nodeType":"VariableDeclaration","scope":3133,"src":"848:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"848:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"847:19:16"},"scope":3144,"src":"805:62:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"871:141:16","text":" @notice Set the address of the proposed owner of the contract\n @param newlyProposed The proposed new owner of the contract"},"functionSelector":"b1f8100d","id":3139,"implemented":false,"kind":"function","modifiers":[],"name":"proposeNewOwner","nameLocation":"1024:15:16","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"newlyProposed","nameLocation":"1048:13:16","nodeType":"VariableDeclaration","scope":3139,"src":"1040:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"1040:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1039:23:16"},"returnParameters":{"id":3138,"nodeType":"ParameterList","parameters":[],"src":"1071:0:16"},"scope":3144,"src":"1015:57:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"1076:76:16","text":" @notice Set the address of the proposed owner of the contract"},"functionSelector":"c5b350df","id":3143,"implemented":false,"kind":"function","modifiers":[],"name":"acceptProposedOwner","nameLocation":"1164:19:16","nodeType":"FunctionDefinition","parameters":{"id":3141,"nodeType":"ParameterList","parameters":[],"src":"1183:2:16"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[],"src":"1194:0:16"},"scope":3144,"src":"1155:40:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3145,"src":"196:1001:16","usedErrors":[]}],"src":"32:1166:16"},"id":16},"contracts/shared/libraries/TypedMemView.sol":{"ast":{"absolutePath":"contracts/shared/libraries/TypedMemView.sol","exportedSymbols":{"TypedMemView":[4221]},"id":4222,"license":"MIT OR Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":3146,"literals":["solidity","0.8",".17"],"nodeType":"PragmaDirective","src":"46:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"TypedMemView","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4221,"linearizedBaseContracts":[4221],"name":"TypedMemView","nameLocation":"79:12:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"f26be3fc","id":3149,"mutability":"constant","name":"NULL","nameLocation":"2502:4:17","nodeType":"VariableDeclaration","scope":4221,"src":"2478:94:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3147,"name":"bytes29","nodeType":"ElementaryTypeName","src":"2478:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"value":{"hexValue":"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2509:63:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7894ac7152936831bdd146bb58cc79cdde7fa746d05d79c2b1dea4074b875c40","typeString":"literal_string hex\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\""}},"visibility":"public"},{"constant":true,"id":3152,"mutability":"constant","name":"LOW_12_MASK","nameLocation":"2593:11:17","nodeType":"VariableDeclaration","scope":4221,"src":"2576:57:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666666666666666666666666666666666666666","id":3151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2607:26:17","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950335_by_1","typeString":"int_const 79228162514264337593543950335"},"value":"0xffffffffffffffffffffffff"},"visibility":"internal"},{"constant":true,"id":3157,"mutability":"constant","name":"TWENTY_SEVEN_BYTES","nameLocation":"2654:18:17","nodeType":"VariableDeclaration","scope":4221,"src":"2637:44:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2675:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3237","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2679:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"2675:6:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"}},"visibility":"internal"},{"constant":true,"id":3162,"mutability":"constant","name":"_27_BYTES_IN_BITS","nameLocation":"2710:17:17","nodeType":"VariableDeclaration","scope":4221,"src":"2685:51:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":3159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2730:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3237","id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2734:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"2730:6:17","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"}},"visibility":"private"},{"constant":true,"id":3165,"mutability":"constant","name":"LOW_27_BYTES_MASK","nameLocation":"2827:17:17","nodeType":"VariableDeclaration","scope":4221,"src":"2802:101:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3078666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:56:17","typeDescriptions":{"typeIdentifier":"t_rational_105312291668557186697918027683670432318895095400549111254310977535_by_1","typeString":"int_const 1053...(58 digits omitted)...7535"},"value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffff"},"visibility":"private"},{"errorSelector":"d32c1d37","id":3171,"name":"TypedMemView__assertType_typeAssertionFailed","nameLocation":"2990:44:17","nodeType":"ErrorDefinition","parameters":{"id":3170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"actual","nameLocation":"3043:6:17","nodeType":"VariableDeclaration","scope":3171,"src":"3035:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3035:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3169,"mutability":"mutable","name":"expected","nameLocation":"3059:8:17","nodeType":"VariableDeclaration","scope":3171,"src":"3051:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3034:34:17"},"src":"2984:85:17"},{"errorSelector":"78218d29","id":3181,"name":"TypedMemView__index_overrun","nameLocation":"3078:27:17","nodeType":"ErrorDefinition","parameters":{"id":3180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"loc","nameLocation":"3114:3:17","nodeType":"VariableDeclaration","scope":3181,"src":"3106:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"3106:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"len","nameLocation":"3127:3:17","nodeType":"VariableDeclaration","scope":3181,"src":"3119:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3119:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3177,"mutability":"mutable","name":"index","nameLocation":"3140:5:17","nodeType":"VariableDeclaration","scope":3181,"src":"3132:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3132:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3179,"mutability":"mutable","name":"slice","nameLocation":"3155:5:17","nodeType":"VariableDeclaration","scope":3181,"src":"3147:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3178,"name":"uint256","nodeType":"ElementaryTypeName","src":"3147:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3105:56:17"},"src":"3072:90:17"},{"errorSelector":"045df3f9","id":3183,"name":"TypedMemView__index_indexMoreThan32Bytes","nameLocation":"3171:40:17","nodeType":"ErrorDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[],"src":"3211:2:17"},"src":"3165:49:17"},{"errorSelector":"523544cc","id":3185,"name":"TypedMemView__unsafeCopyTo_nullPointer","nameLocation":"3223:38:17","nodeType":"ErrorDefinition","parameters":{"id":3184,"nodeType":"ParameterList","parameters":[],"src":"3261:2:17"},"src":"3217:47:17"},{"errorSelector":"5dc12922","id":3187,"name":"TypedMemView__unsafeCopyTo_invalidPointer","nameLocation":"3273:41:17","nodeType":"ErrorDefinition","parameters":{"id":3186,"nodeType":"ParameterList","parameters":[],"src":"3314:2:17"},"src":"3267:50:17"},{"errorSelector":"abc6f66c","id":3189,"name":"TypedMemView__unsafeCopyTo_identityOOG","nameLocation":"3326:38:17","nodeType":"ErrorDefinition","parameters":{"id":3188,"nodeType":"ParameterList","parameters":[],"src":"3364:2:17"},"src":"3320:47:17"},{"errorSelector":"252e0d83","id":3191,"name":"TypedMemView__assertValid_validityAssertionFailed","nameLocation":"3376:49:17","nodeType":"ErrorDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[],"src":"3425:2:17"},"src":"3370:58:17"},{"body":{"id":3287,"nodeType":"Block","src":"3763:928:17","statements":[{"expression":{"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3199,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3769:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3200,"name":"_b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"3773:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3202,"nodeType":"ExpressionStatement","src":"3769:6:17"},{"expression":{"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3203,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3800:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3204,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3812:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3817:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"3812:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3207,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3811:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646","id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3822:66:17","typeDescriptions":{"typeIdentifier":"t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1","typeString":"int_const 4505...(67 digits omitted)...9455"},"value":"0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"},"src":"3811:77:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3210,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3810:79:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3211,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3900:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646303046463030464630304646","id":3212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3904:66:17","typeDescriptions":{"typeIdentifier":"t_rational_450552876409790643671482431940419874915447411150352389258589821042463539455_by_1","typeString":"int_const 4505...(67 digits omitted)...9455"},"value":"0x00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF00FF"},"src":"3900:70:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3899:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3975:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"3899:77:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3217,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3898:79:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3810:167:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3800:177:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3220,"nodeType":"ExpressionStatement","src":"3800:177:17"},{"expression":{"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3221,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4013:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3222,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4025:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4030:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4025:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4024:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4036:66:17","typeDescriptions":{"typeIdentifier":"t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1","typeString":"int_const 1766...(65 digits omitted)...4255"},"value":"0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"},"src":"4024:78:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3228,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4023:80:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4114:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030464646463030303046464646303030304646464630303030464646463030303046464646303030304646464630303030464646463030303046464646","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4118:66:17","typeDescriptions":{"typeIdentifier":"t_rational_1766820105243087041267848467410591083712559083657179364930612997358944255_by_1","typeString":"int_const 1766...(65 digits omitted)...4255"},"value":"0x0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF"},"src":"4114:70:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4113:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4189:2:17","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"4113:78:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4112:80:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4023:169:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4013:179:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3238,"nodeType":"ExpressionStatement","src":"4013:179:17"},{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3239,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4228:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4240:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4245:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4240:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4239:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646","id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4251:66:17","typeDescriptions":{"typeIdentifier":"t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1","typeString":"int_const 2695...(60 digits omitted)...3855"},"value":"0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"},"src":"4239:78:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4238:80:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3247,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4329:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030304646464646464646303030303030303046464646464646463030303030303030464646464646464630303030303030304646464646464646","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:66:17","typeDescriptions":{"typeIdentifier":"t_rational_26959946660873538060741835960174461801791452538186943042387869433855_by_1","typeString":"int_const 2695...(60 digits omitted)...3855"},"value":"0x00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF00000000FFFFFFFF"},"src":"4329:70:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3250,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4328:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4404:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4328:78:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4327:80:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4238:169:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4228:179:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3256,"nodeType":"ExpressionStatement","src":"4228:179:17"},{"expression":{"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3257,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4443:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3258,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4455:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4460:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4455:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4454:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4466:66:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763495507056286727952657427581105975853055_by_1","typeString":"int_const 6277...(50 digits omitted)...3055"},"value":"0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"},"src":"4454:78:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3264,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4453:80:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4544:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307830303030303030303030303030303030464646464646464646464646464646463030303030303030303030303030303046464646464646464646464646464646","id":3266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4548:66:17","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763495507056286727952657427581105975853055_by_1","typeString":"int_const 6277...(50 digits omitted)...3055"},"value":"0x0000000000000000FFFFFFFFFFFFFFFF0000000000000000FFFFFFFFFFFFFFFF"},"src":"4544:70:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4543:72:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4619:2:17","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"4543:78:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3271,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4542:80:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:169:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4443:179:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3274,"nodeType":"ExpressionStatement","src":"4443:179:17"},{"expression":{"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3275,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4659:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3276,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4664:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4669:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"4664:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4663:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4677:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4682:3:17","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"4677:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4676:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4663:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4659:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3286,"nodeType":"ExpressionStatement","src":"4659:27:17"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"3432:258:17","text":" @notice          Changes the endianness of a uint256.\n @dev             https://graphics.stanford.edu/~seander/bithacks.html#ReverseParallel\n @param _b        The unsigned integer to reverse\n @return          v - The reversed value"},"id":3288,"implemented":true,"kind":"function","modifiers":[],"name":"reverseUint256","nameLocation":"3702:14:17","nodeType":"FunctionDefinition","parameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"_b","nameLocation":"3725:2:17","nodeType":"VariableDeclaration","scope":3288,"src":"3717:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"3717:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3716:12:17"},"returnParameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"v","nameLocation":"3760:1:17","nodeType":"VariableDeclaration","scope":3288,"src":"3752:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3752:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3751:11:17"},"scope":4221,"src":"3693:998:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3297,"nodeType":"Block","src":"4902:220:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4953:165:17","statements":[{"nodeType":"YulAssignment","src":"5019:93:17","value":{"arguments":[{"arguments":[{"name":"_len","nodeType":"YulIdentifier","src":"5035:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"5041:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5031:3:17"},"nodeType":"YulFunctionCall","src":"5031:12:17"},{"kind":"number","nodeType":"YulLiteral","src":"5045:66:17","type":"","value":"0x8000000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"sar","nodeType":"YulIdentifier","src":"5027:3:17"},"nodeType":"YulFunctionCall","src":"5027:85:17"},"variableNames":[{"name":"mask","nodeType":"YulIdentifier","src":"5019:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3291,"isOffset":false,"isSlot":false,"src":"5035:4:17","valueSize":1},{"declaration":3294,"isOffset":false,"isSlot":false,"src":"5019:4:17","valueSize":1}],"id":3296,"nodeType":"InlineAssembly","src":"4944:174:17"}]},"documentation":{"id":3289,"nodeType":"StructuredDocumentation","src":"4695:138:17","text":" @notice      Create a mask with the highest `_len` bits set.\n @param _len  The length\n @return      mask - The mask"},"id":3298,"implemented":true,"kind":"function","modifiers":[],"name":"leftMask","nameLocation":"4845:8:17","nodeType":"FunctionDefinition","parameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"_len","nameLocation":"4860:4:17","nodeType":"VariableDeclaration","scope":3298,"src":"4854:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3290,"name":"uint8","nodeType":"ElementaryTypeName","src":"4854:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4853:12:17"},"returnParameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"mask","nameLocation":"4896:4:17","nodeType":"VariableDeclaration","scope":3298,"src":"4888:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:14:17"},"scope":4221,"src":"4836:286:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3306,"nodeType":"Block","src":"5272:22:17","statements":[{"expression":{"id":3304,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"5285:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3303,"id":3305,"nodeType":"Return","src":"5278:11:17"}]},"documentation":{"id":3299,"nodeType":"StructuredDocumentation","src":"5126:91:17","text":" @notice      Return the null view.\n @return      bytes29 - The null view"},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"nullView","nameLocation":"5229:8:17","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[],"src":"5237:2:17"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"5263:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3301,"name":"bytes29","nodeType":"ElementaryTypeName","src":"5263:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"5262:9:17"},"scope":4221,"src":"5220:74:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3319,"nodeType":"Block","src":"5467:33:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3315,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5480:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3316,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"5491:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"5480:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3314,"id":3318,"nodeType":"Return","src":"5473:22:17"}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"5298:104:17","text":" @notice      Check if the view is null.\n @return      bool - True if the view is null"},"id":3320,"implemented":true,"kind":"function","modifiers":[],"name":"isNull","nameLocation":"5414:6:17","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"memView","nameLocation":"5429:7:17","nodeType":"VariableDeclaration","scope":3320,"src":"5421:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3309,"name":"bytes29","nodeType":"ElementaryTypeName","src":"5421:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"5420:17:17"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3320,"src":"5461:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3312,"name":"bool","nodeType":"ElementaryTypeName","src":"5461:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5460:6:17"},"scope":4221,"src":"5405:95:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3333,"nodeType":"Block","src":"5682:34:17","statements":[{"expression":{"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5695:16:17","subExpression":{"arguments":[{"id":3329,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"5703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3328,"name":"isNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"5696:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5696:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3327,"id":3332,"nodeType":"Return","src":"5688:23:17"}]},"documentation":{"id":3321,"nodeType":"StructuredDocumentation","src":"5504:112:17","text":" @notice      Check if the view is not null.\n @return      bool - True if the view is not null"},"id":3334,"implemented":true,"kind":"function","modifiers":[],"name":"notNull","nameLocation":"5628:7:17","nodeType":"FunctionDefinition","parameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"memView","nameLocation":"5644:7:17","nodeType":"VariableDeclaration","scope":3334,"src":"5636:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3322,"name":"bytes29","nodeType":"ElementaryTypeName","src":"5636:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"5635:17:17"},"returnParameters":{"id":3327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3334,"src":"5676:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3325,"name":"bool","nodeType":"ElementaryTypeName","src":"5676:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5675:6:17"},"scope":4221,"src":"5619:97:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3358,"nodeType":"Block","src":"6191:220:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3343,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"6208:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3342,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"6201:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"307866666666666666666666","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6220:12:17","typeDescriptions":{"typeIdentifier":"t_rational_1099511627775_by_1","typeString":"int_const 1099511627775"},"value":"0xffffffffff"},"src":"6201:31:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3350,"nodeType":"IfStatement","src":"6197:63:17","trueBody":{"id":3349,"nodeType":"Block","src":"6234:26:17","statements":[{"expression":{"hexValue":"74727565","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6249:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3341,"id":3348,"nodeType":"Return","src":"6242:11:17"}]}},{"assignments":[3352],"declarations":[{"constant":false,"id":3352,"mutability":"mutable","name":"_end","nameLocation":"6273:4:17","nodeType":"VariableDeclaration","scope":3358,"src":"6265:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"6265:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3356,"initialValue":{"arguments":[{"id":3354,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"6284:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3353,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"6280:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6265:27:17"},{"AST":{"nodeType":"YulBlock","src":"6307:100:17","statements":[{"nodeType":"YulAssignment","src":"6373:28:17","value":{"arguments":[{"name":"_end","nodeType":"YulIdentifier","src":"6383:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6395:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6389:5:17"},"nodeType":"YulFunctionCall","src":"6389:11:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6380:2:17"},"nodeType":"YulFunctionCall","src":"6380:21:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6373:3:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3352,"isOffset":false,"isSlot":false,"src":"6383:4:17","valueSize":1},{"declaration":3340,"isOffset":false,"isSlot":false,"src":"6373:3:17","valueSize":1}],"id":3357,"nodeType":"InlineAssembly","src":"6298:109:17"}]},"documentation":{"id":3335,"nodeType":"StructuredDocumentation","src":"5720:398:17","text":" @notice          Check if the view is of a invalid type and points to a valid location\n                  in memory.\n @dev             We perform this check by examining solidity's unallocated memory\n                  pointer and ensuring that the view's upper bound is less than that.\n @param memView   The view\n @return          ret - True if the view is invalid"},"id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"isNotValid","nameLocation":"6130:10:17","nodeType":"FunctionDefinition","parameters":{"id":3338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3337,"mutability":"mutable","name":"memView","nameLocation":"6149:7:17","nodeType":"VariableDeclaration","scope":3359,"src":"6141:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3336,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6141:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6140:17:17"},"returnParameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"ret","nameLocation":"6186:3:17","nodeType":"VariableDeclaration","scope":3359,"src":"6181:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3339,"name":"bool","nodeType":"ElementaryTypeName","src":"6181:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6180:10:17"},"scope":4221,"src":"6121:290:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"6702:114:17","statements":[{"condition":{"arguments":[{"id":3368,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"6723:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3367,"name":"isNotValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"6712:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6712:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3373,"nodeType":"IfStatement","src":"6708:83:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3370,"name":"TypedMemView__assertValid_validityAssertionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"6740:49:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6740:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3372,"nodeType":"RevertStatement","src":"6733:58:17"}},{"expression":{"id":3374,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"6804:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3366,"id":3375,"nodeType":"Return","src":"6797:14:17"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"6415:214:17","text":" @notice          Require that a typed memory view be valid.\n @dev             Returns the view for easy chaining.\n @param memView   The view\n @return          bytes29 - The validated view"},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"assertValid","nameLocation":"6641:11:17","nodeType":"FunctionDefinition","parameters":{"id":3363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3362,"mutability":"mutable","name":"memView","nameLocation":"6661:7:17","nodeType":"VariableDeclaration","scope":3377,"src":"6653:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3361,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6653:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6652:17:17"},"returnParameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"6693:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3364,"name":"bytes29","nodeType":"ElementaryTypeName","src":"6693:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"6692:9:17"},"scope":4221,"src":"6632:184:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"7147:46:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3388,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"7167:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3387,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"7160:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7160:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3390,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"7179:9:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"7160:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3386,"id":3392,"nodeType":"Return","src":"7153:35:17"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"6820:244:17","text":" @notice          Return true if the memview is of the expected type. Otherwise false.\n @param memView   The view\n @param _expected The expected type\n @return          bool - True if the memview is of the expected type"},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"isType","nameLocation":"7076:6:17","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"memView","nameLocation":"7091:7:17","nodeType":"VariableDeclaration","scope":3394,"src":"7083:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3379,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7083:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"_expected","nameLocation":"7107:9:17","nodeType":"VariableDeclaration","scope":3394,"src":"7100:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3381,"name":"uint40","nodeType":"ElementaryTypeName","src":"7100:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"7082:35:17"},"returnParameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3394,"src":"7141:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3384,"name":"bool","nodeType":"ElementaryTypeName","src":"7141:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7140:6:17"},"scope":4221,"src":"7067:126:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3426,"nodeType":"Block","src":"7562:175:17","statements":[{"condition":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7572:27:17","subExpression":{"arguments":[{"id":3405,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"7580:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3406,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"7589:9:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3404,"name":"isType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"7573:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint40_$returns$_t_bool_$","typeString":"function (bytes29,uint40) pure returns (bool)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7573:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"7568:145:17","trueBody":{"id":3422,"nodeType":"Block","src":"7601:112:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"arguments":[{"id":3413,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"7676:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3412,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"7669:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7661:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"7661:7:17","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7661:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3418,"name":"_expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"7695:9:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7687:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3416,"name":"uint256","nodeType":"ElementaryTypeName","src":"7687:7:17","typeDescriptions":{}}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7687:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3409,"name":"TypedMemView__assertType_typeAssertionFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"7616:44:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7616:90:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3421,"nodeType":"RevertStatement","src":"7609:97:17"}]}},{"expression":{"id":3424,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"7725:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3403,"id":3425,"nodeType":"Return","src":"7718:14:17"}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"7197:275:17","text":" @notice          Require that a typed memory view has a specific type.\n @dev             Returns the view for easy chaining.\n @param memView   The view\n @param _expected The expected type\n @return          bytes29 - The view with validated type"},"id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"assertType","nameLocation":"7484:10:17","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"memView","nameLocation":"7503:7:17","nodeType":"VariableDeclaration","scope":3427,"src":"7495:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3396,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7495:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"_expected","nameLocation":"7519:9:17","nodeType":"VariableDeclaration","scope":3427,"src":"7512:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3398,"name":"uint40","nodeType":"ElementaryTypeName","src":"7512:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"7494:35:17"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"7553:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3401,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7553:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"7552:9:17"},"scope":4221,"src":"7475:262:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3438,"nodeType":"Block","src":"8048:236:17","statements":[{"AST":{"nodeType":"YulBlock","src":"8093:187:17","statements":[{"nodeType":"YulAssignment","src":"8194:80:17","value":{"arguments":[{"arguments":[{"name":"memView","nodeType":"YulIdentifier","src":"8212:7:17"},{"name":"LOW_27_BYTES_MASK","nodeType":"YulIdentifier","src":"8221:17:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8208:3:17"},"nodeType":"YulFunctionCall","src":"8208:31:17"},{"arguments":[{"name":"_27_BYTES_IN_BITS","nodeType":"YulIdentifier","src":"8245:17:17"},{"name":"_newType","nodeType":"YulIdentifier","src":"8264:8:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8241:3:17"},"nodeType":"YulFunctionCall","src":"8241:32:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8205:2:17"},"nodeType":"YulFunctionCall","src":"8205:69:17"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"8194:7:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3165,"isOffset":false,"isSlot":false,"src":"8221:17:17","valueSize":1},{"declaration":3162,"isOffset":false,"isSlot":false,"src":"8245:17:17","valueSize":1},{"declaration":3432,"isOffset":false,"isSlot":false,"src":"8264:8:17","valueSize":1},{"declaration":3430,"isOffset":false,"isSlot":false,"src":"8212:7:17","valueSize":1},{"declaration":3435,"isOffset":false,"isSlot":false,"src":"8194:7:17","valueSize":1}],"id":3437,"nodeType":"InlineAssembly","src":"8084:196:17"}]},"documentation":{"id":3428,"nodeType":"StructuredDocumentation","src":"7741:214:17","text":" @notice          Return an identical view with a different type.\n @param memView   The view\n @param _newType  The new type\n @return          newView - The new view with the specified type"},"id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"castTo","nameLocation":"7967:6:17","nodeType":"FunctionDefinition","parameters":{"id":3433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"memView","nameLocation":"7982:7:17","nodeType":"VariableDeclaration","scope":3439,"src":"7974:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3429,"name":"bytes29","nodeType":"ElementaryTypeName","src":"7974:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"_newType","nameLocation":"7998:8:17","nodeType":"VariableDeclaration","scope":3439,"src":"7991:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3431,"name":"uint40","nodeType":"ElementaryTypeName","src":"7991:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"7973:34:17"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3435,"mutability":"mutable","name":"newView","nameLocation":"8039:7:17","nodeType":"VariableDeclaration","scope":3439,"src":"8031:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3434,"name":"bytes29","nodeType":"ElementaryTypeName","src":"8031:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"8030:17:17"},"scope":4221,"src":"7958:326:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"8933:529:17","statements":[{"assignments":[3452],"declarations":[{"constant":false,"id":3452,"mutability":"mutable","name":"_uint96Bits","nameLocation":"8947:11:17","nodeType":"VariableDeclaration","scope":3485,"src":"8939:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"8939:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3454,"initialValue":{"hexValue":"3936","id":3453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:2:17","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"nodeType":"VariableDeclarationStatement","src":"8939:24:17"},{"assignments":[3456],"declarations":[{"constant":false,"id":3456,"mutability":"mutable","name":"_emptyBits","nameLocation":"8977:10:17","nodeType":"VariableDeclaration","scope":3485,"src":"8969:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"8969:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3458,"initialValue":{"hexValue":"3234","id":3457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:17","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"nodeType":"VariableDeclarationStatement","src":"8969:23:17"},{"assignments":[3460],"declarations":[{"constant":false,"id":3460,"mutability":"mutable","name":"len_","nameLocation":"9062:4:17","nodeType":"VariableDeclaration","scope":3485,"src":"9055:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3459,"name":"uint96","nodeType":"ElementaryTypeName","src":"9055:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3465,"initialValue":{"arguments":[{"id":3463,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"9076:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9069:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3461,"name":"uint96","nodeType":"ElementaryTypeName","src":"9069:6:17","typeDescriptions":{}}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9069:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"9055:26:17"},{"assignments":[3467],"declarations":[{"constant":false,"id":3467,"mutability":"mutable","name":"loc_","nameLocation":"9094:4:17","nodeType":"VariableDeclaration","scope":3485,"src":"9087:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3466,"name":"uint96","nodeType":"ElementaryTypeName","src":"9087:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3472,"initialValue":{"arguments":[{"id":3470,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"9108:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9101:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3468,"name":"uint96","nodeType":"ElementaryTypeName","src":"9101:6:17","typeDescriptions":{}}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9101:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"9087:26:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3474,"name":"len_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"9127:4:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3475,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"9135:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9127:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"loc_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3467,"src":"9143:4:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3478,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"9151:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9143:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9127:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"217472756e6361746564","id":3481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9157:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","typeString":"literal_string \"!truncated\""},"value":"!truncated"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","typeString":"literal_string \"!truncated\""}],"id":3473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9119:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3483,"nodeType":"ExpressionStatement","src":"9119:51:17"},{"AST":{"nodeType":"YulBlock","src":"9186:272:17","statements":[{"nodeType":"YulAssignment","src":"9260:34:17","value":{"arguments":[{"name":"_uint96Bits","nodeType":"YulIdentifier","src":"9275:11:17"},{"name":"_type","nodeType":"YulIdentifier","src":"9288:5:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9271:3:17"},"nodeType":"YulFunctionCall","src":"9271:23:17"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"9260:7:17"}]},{"nodeType":"YulAssignment","src":"9316:46:17","value":{"arguments":[{"name":"_uint96Bits","nodeType":"YulIdentifier","src":"9331:11:17"},{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"9347:7:17"},{"name":"loc_","nodeType":"YulIdentifier","src":"9356:4:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9344:2:17"},"nodeType":"YulFunctionCall","src":"9344:17:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9327:3:17"},"nodeType":"YulFunctionCall","src":"9327:35:17"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"9316:7:17"}]},{"nodeType":"YulAssignment","src":"9383:45:17","value":{"arguments":[{"name":"_emptyBits","nodeType":"YulIdentifier","src":"9398:10:17"},{"arguments":[{"name":"newView","nodeType":"YulIdentifier","src":"9413:7:17"},{"name":"len_","nodeType":"YulIdentifier","src":"9422:4:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9410:2:17"},"nodeType":"YulFunctionCall","src":"9410:17:17"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9394:3:17"},"nodeType":"YulFunctionCall","src":"9394:34:17"},"variableNames":[{"name":"newView","nodeType":"YulIdentifier","src":"9383:7:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3456,"isOffset":false,"isSlot":false,"src":"9398:10:17","valueSize":1},{"declaration":3442,"isOffset":false,"isSlot":false,"src":"9288:5:17","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"9275:11:17","valueSize":1},{"declaration":3452,"isOffset":false,"isSlot":false,"src":"9331:11:17","valueSize":1},{"declaration":3460,"isOffset":false,"isSlot":false,"src":"9422:4:17","valueSize":1},{"declaration":3467,"isOffset":false,"isSlot":false,"src":"9356:4:17","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"9260:7:17","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"9316:7:17","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"9347:7:17","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"9383:7:17","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"9413:7:17","valueSize":1}],"id":3484,"nodeType":"InlineAssembly","src":"9177:281:17"}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"8288:514:17","text":" @notice          Unsafe raw pointer construction. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @dev             Unsafe raw pointer construction. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @param _type     The type\n @param _loc      The memory address\n @param _len      The length\n @return          newView - The new view with the specified type, location and length"},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeBuildUnchecked","nameLocation":"8814:20:17","nodeType":"FunctionDefinition","parameters":{"id":3447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"_type","nameLocation":"8848:5:17","nodeType":"VariableDeclaration","scope":3486,"src":"8840:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"8840:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3444,"mutability":"mutable","name":"_loc","nameLocation":"8867:4:17","nodeType":"VariableDeclaration","scope":3486,"src":"8859:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3443,"name":"uint256","nodeType":"ElementaryTypeName","src":"8859:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3446,"mutability":"mutable","name":"_len","nameLocation":"8885:4:17","nodeType":"VariableDeclaration","scope":3486,"src":"8877:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8834:59:17"},"returnParameters":{"id":3450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3449,"mutability":"mutable","name":"newView","nameLocation":"8924:7:17","nodeType":"VariableDeclaration","scope":3486,"src":"8916:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3448,"name":"bytes29","nodeType":"ElementaryTypeName","src":"8916:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"8915:17:17"},"scope":4221,"src":"8805:657:17","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3520,"nodeType":"Block","src":"10093:276:17","statements":[{"assignments":[3499],"declarations":[{"constant":false,"id":3499,"mutability":"mutable","name":"_end","nameLocation":"10107:4:17","nodeType":"VariableDeclaration","scope":3520,"src":"10099:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"10099:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3503,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"10114:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3501,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"10121:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10114:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10099:26:17"},{"AST":{"nodeType":"YulBlock","src":"10140:124:17","statements":[{"body":{"nodeType":"YulBlock","src":"10231:27:17","statements":[{"nodeType":"YulAssignment","src":"10241:9:17","value":{"kind":"number","nodeType":"YulLiteral","src":"10249:1:17","type":"","value":"0"},"variableNames":[{"name":"_end","nodeType":"YulIdentifier","src":"10241:4:17"}]}]},"condition":{"arguments":[{"name":"_end","nodeType":"YulIdentifier","src":"10212:4:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10224:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10218:5:17"},"nodeType":"YulFunctionCall","src":"10218:11:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10209:2:17"},"nodeType":"YulFunctionCall","src":"10209:21:17"},"nodeType":"YulIf","src":"10206:52:17"}]},"evmVersion":"london","externalReferences":[{"declaration":3499,"isOffset":false,"isSlot":false,"src":"10212:4:17","valueSize":1},{"declaration":3499,"isOffset":false,"isSlot":false,"src":"10241:4:17","valueSize":1}],"id":3504,"nodeType":"InlineAssembly","src":"10131:133:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3505,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"10273:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10281:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10273:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3511,"nodeType":"IfStatement","src":"10269:41:17","trueBody":{"id":3510,"nodeType":"Block","src":"10284:26:17","statements":[{"expression":{"id":3508,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"10299:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3497,"id":3509,"nodeType":"Return","src":"10292:11:17"}]}},{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3512,"name":"newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"10315:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3514,"name":"_type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"10346:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3515,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"10353:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3516,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"10359:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3513,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"10325:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10325:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"10315:49:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":3519,"nodeType":"ExpressionStatement","src":"10315:49:17"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"9466:510:17","text":" @notice          Instantiate a new memory view. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @dev             Instantiate a new memory view. This should generally not be called\n                  directly. Prefer `ref` wherever possible.\n @param _type     The type\n @param _loc      The memory address\n @param _len      The length\n @return          newView - The new view with the specified type, location and length"},"id":3521,"implemented":true,"kind":"function","modifiers":[],"name":"build","nameLocation":"9988:5:17","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"_type","nameLocation":"10007:5:17","nodeType":"VariableDeclaration","scope":3521,"src":"9999:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"_loc","nameLocation":"10026:4:17","nodeType":"VariableDeclaration","scope":3521,"src":"10018:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3490,"name":"uint256","nodeType":"ElementaryTypeName","src":"10018:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3493,"mutability":"mutable","name":"_len","nameLocation":"10044:4:17","nodeType":"VariableDeclaration","scope":3521,"src":"10036:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"10036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9993:59:17"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"newView","nameLocation":"10084:7:17","nodeType":"VariableDeclaration","scope":3521,"src":"10076:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3495,"name":"bytes29","nodeType":"ElementaryTypeName","src":"10076:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"10075:17:17"},"scope":4221,"src":"9979:390:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3546,"nodeType":"Block","src":"10827:246:17","statements":[{"assignments":[3532],"declarations":[{"constant":false,"id":3532,"mutability":"mutable","name":"_len","nameLocation":"10841:4:17","nodeType":"VariableDeclaration","scope":3546,"src":"10833:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"10833:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3535,"initialValue":{"expression":{"id":3533,"name":"arr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"10848:3:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10852:6:17","memberName":"length","nodeType":"MemberAccess","src":"10848:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10833:25:17"},{"assignments":[3537],"declarations":[{"constant":false,"id":3537,"mutability":"mutable","name":"_loc","nameLocation":"10873:4:17","nodeType":"VariableDeclaration","scope":3546,"src":"10865:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3536,"name":"uint256","nodeType":"ElementaryTypeName","src":"10865:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3538,"nodeType":"VariableDeclarationStatement","src":"10865:12:17"},{"AST":{"nodeType":"YulBlock","src":"10892:137:17","statements":[{"nodeType":"YulAssignment","src":"10958:22:17","value":{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"10970:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10975:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10966:3:17"},"nodeType":"YulFunctionCall","src":"10966:14:17"},"variableNames":[{"name":"_loc","nodeType":"YulIdentifier","src":"10958:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3537,"isOffset":false,"isSlot":false,"src":"10958:4:17","valueSize":1},{"declaration":3524,"isOffset":false,"isSlot":false,"src":"10970:3:17","valueSize":1}],"id":3539,"nodeType":"InlineAssembly","src":"10883:146:17"},{"expression":{"arguments":[{"id":3541,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"11048:7:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":3542,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3537,"src":"11057:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3543,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"11063:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3540,"name":"build","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"11042:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11042:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3530,"id":3545,"nodeType":"Return","src":"11035:33:17"}]},"documentation":{"id":3522,"nodeType":"StructuredDocumentation","src":"10373:372:17","text":" @notice          Instantiate a memory view from a byte array.\n @dev             Note that due to Solidity memory representation, it is not possible to\n                  implement a deref, as the `bytes` type stores its len in memory.\n @param arr       The byte array\n @param newType   The type\n @return          bytes29 - The memory view"},"id":3547,"implemented":true,"kind":"function","modifiers":[],"name":"ref","nameLocation":"10757:3:17","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"arr","nameLocation":"10774:3:17","nodeType":"VariableDeclaration","scope":3547,"src":"10761:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3523,"name":"bytes","nodeType":"ElementaryTypeName","src":"10761:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"newType","nameLocation":"10786:7:17","nodeType":"VariableDeclaration","scope":3547,"src":"10779:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3525,"name":"uint40","nodeType":"ElementaryTypeName","src":"10779:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"10760:34:17"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3547,"src":"10818:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3528,"name":"bytes29","nodeType":"ElementaryTypeName","src":"10818:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"10817:9:17"},"scope":4221,"src":"10748:325:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3556,"nodeType":"Block","src":"11323:184:17","statements":[{"AST":{"nodeType":"YulBlock","src":"11338:165:17","statements":[{"nodeType":"YulAssignment","src":"11429:40:17","value":{"arguments":[{"name":"_27_BYTES_IN_BITS","nodeType":"YulIdentifier","src":"11442:17:17"},{"name":"memView","nodeType":"YulIdentifier","src":"11461:7:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11438:3:17"},"nodeType":"YulFunctionCall","src":"11438:31:17"},"variableNames":[{"name":"_type","nodeType":"YulIdentifier","src":"11429:5:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3162,"isOffset":false,"isSlot":false,"src":"11442:17:17","valueSize":1},{"declaration":3553,"isOffset":false,"isSlot":false,"src":"11429:5:17","valueSize":1},{"declaration":3550,"isOffset":false,"isSlot":false,"src":"11461:7:17","valueSize":1}],"id":3555,"nodeType":"InlineAssembly","src":"11329:174:17"}]},"documentation":{"id":3548,"nodeType":"StructuredDocumentation","src":"11077:173:17","text":" @notice          Return the associated type information.\n @param memView   The memory view\n @return          _type - The type associated with the view"},"id":3557,"implemented":true,"kind":"function","modifiers":[],"name":"typeOf","nameLocation":"11262:6:17","nodeType":"FunctionDefinition","parameters":{"id":3551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3550,"mutability":"mutable","name":"memView","nameLocation":"11277:7:17","nodeType":"VariableDeclaration","scope":3557,"src":"11269:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3549,"name":"bytes29","nodeType":"ElementaryTypeName","src":"11269:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"11268:17:17"},"returnParameters":{"id":3554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3553,"mutability":"mutable","name":"_type","nameLocation":"11316:5:17","nodeType":"VariableDeclaration","scope":3557,"src":"11309:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3552,"name":"uint40","nodeType":"ElementaryTypeName","src":"11309:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"11308:14:17"},"scope":4221,"src":"11253:254:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3570,"nodeType":"Block","src":"11741:266:17","statements":[{"assignments":[3566],"declarations":[{"constant":false,"id":3566,"mutability":"mutable","name":"_mask","nameLocation":"11755:5:17","nodeType":"VariableDeclaration","scope":3570,"src":"11747:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"11747:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3568,"initialValue":{"id":3567,"name":"LOW_12_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"11763:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11747:27:17"},{"AST":{"nodeType":"YulBlock","src":"11819:184:17","statements":[{"nodeType":"YulAssignment","src":"11960:37:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11976:3:17","type":"","value":"120"},{"name":"memView","nodeType":"YulIdentifier","src":"11981:7:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11972:3:17"},"nodeType":"YulFunctionCall","src":"11972:17:17"},{"name":"_mask","nodeType":"YulIdentifier","src":"11991:5:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11968:3:17"},"nodeType":"YulFunctionCall","src":"11968:29:17"},"variableNames":[{"name":"_loc","nodeType":"YulIdentifier","src":"11960:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3563,"isOffset":false,"isSlot":false,"src":"11960:4:17","valueSize":1},{"declaration":3566,"isOffset":false,"isSlot":false,"src":"11991:5:17","valueSize":1},{"declaration":3560,"isOffset":false,"isSlot":false,"src":"11981:7:17","valueSize":1}],"id":3569,"nodeType":"InlineAssembly","src":"11810:193:17"}]},"documentation":{"id":3558,"nodeType":"StructuredDocumentation","src":"11511:161:17","text":" @notice          Return the memory address of the underlying bytes.\n @param memView   The view\n @return          _loc - The memory address"},"id":3571,"implemented":true,"kind":"function","modifiers":[],"name":"loc","nameLocation":"11684:3:17","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"memView","nameLocation":"11696:7:17","nodeType":"VariableDeclaration","scope":3571,"src":"11688:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3559,"name":"bytes29","nodeType":"ElementaryTypeName","src":"11688:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"11687:17:17"},"returnParameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"_loc","nameLocation":"11735:4:17","nodeType":"VariableDeclaration","scope":3571,"src":"11728:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3562,"name":"uint96","nodeType":"ElementaryTypeName","src":"11728:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11727:13:17"},"scope":4221,"src":"11675:332:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"12265:51:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3582,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"12291:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3581,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"12287:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12287:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12279:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"12279:7:17","typeDescriptions":{}}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12279:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3331","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:2:17","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"12279:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3587,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12278:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3332","id":3588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12309:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12278:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3578,"id":3590,"nodeType":"Return","src":"12271:40:17"}]},"documentation":{"id":3572,"nodeType":"StructuredDocumentation","src":"12011:187:17","text":" @notice          The number of memory words this memory view occupies, rounded up.\n @param memView   The view\n @return          uint256 - The number of memory words"},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"words","nameLocation":"12210:5:17","nodeType":"FunctionDefinition","parameters":{"id":3575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3574,"mutability":"mutable","name":"memView","nameLocation":"12224:7:17","nodeType":"VariableDeclaration","scope":3592,"src":"12216:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3573,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12216:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12215:17:17"},"returnParameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"12256:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3576,"name":"uint256","nodeType":"ElementaryTypeName","src":"12256:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12255:9:17"},"scope":4221,"src":"12201:115:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3606,"nodeType":"Block","src":"12591:37:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3601,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3595,"src":"12610:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3600,"name":"words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"12604:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12604:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12621:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12604:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3599,"id":3605,"nodeType":"Return","src":"12597:26:17"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"12320:200:17","text":" @notice          The in-memory footprint of a fresh copy of the view.\n @param memView   The view\n @return          uint256 - The in-memory footprint of a fresh copy of the view."},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"footprint","nameLocation":"12532:9:17","nodeType":"FunctionDefinition","parameters":{"id":3596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"memView","nameLocation":"12550:7:17","nodeType":"VariableDeclaration","scope":3607,"src":"12542:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3594,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12542:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12541:17:17"},"returnParameters":{"id":3599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"12582:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"12582:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12581:9:17"},"scope":4221,"src":"12523:105:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3620,"nodeType":"Block","src":"12848:190:17","statements":[{"assignments":[3616],"declarations":[{"constant":false,"id":3616,"mutability":"mutable","name":"_mask","nameLocation":"12862:5:17","nodeType":"VariableDeclaration","scope":3620,"src":"12854:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"12854:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3618,"initialValue":{"id":3617,"name":"LOW_12_MASK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"12870:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12854:27:17"},{"AST":{"nodeType":"YulBlock","src":"12926:108:17","statements":[{"nodeType":"YulAssignment","src":"12992:36:17","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13008:2:17","type":"","value":"24"},{"name":"memView","nodeType":"YulIdentifier","src":"13012:7:17"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"13004:3:17"},"nodeType":"YulFunctionCall","src":"13004:16:17"},{"name":"_mask","nodeType":"YulIdentifier","src":"13022:5:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13000:3:17"},"nodeType":"YulFunctionCall","src":"13000:28:17"},"variableNames":[{"name":"_len","nodeType":"YulIdentifier","src":"12992:4:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3613,"isOffset":false,"isSlot":false,"src":"12992:4:17","valueSize":1},{"declaration":3616,"isOffset":false,"isSlot":false,"src":"13022:5:17","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"13012:7:17","valueSize":1}],"id":3619,"nodeType":"InlineAssembly","src":"12917:117:17"}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"12632:147:17","text":" @notice          The number of bytes of the view.\n @param memView   The view\n @return          _len - The length of the view"},"id":3621,"implemented":true,"kind":"function","modifiers":[],"name":"len","nameLocation":"12791:3:17","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"memView","nameLocation":"12803:7:17","nodeType":"VariableDeclaration","scope":3621,"src":"12795:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3609,"name":"bytes29","nodeType":"ElementaryTypeName","src":"12795:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"12794:17:17"},"returnParameters":{"id":3614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"_len","nameLocation":"12842:4:17","nodeType":"VariableDeclaration","scope":3621,"src":"12835:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3612,"name":"uint96","nodeType":"ElementaryTypeName","src":"12835:6:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"12834:13:17"},"scope":4221,"src":"12782:256:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3638,"nodeType":"Block","src":"13262:69:17","statements":[{"id":3637,"nodeType":"UncheckedBlock","src":"13268:59:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3630,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"13297:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3629,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"13293:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13293:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":3633,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"13312:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3632,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"13308:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13308:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"13293:27:17","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3628,"id":3636,"nodeType":"Return","src":"13286:34:17"}]}]},"documentation":{"id":3622,"nodeType":"StructuredDocumentation","src":"13042:155:17","text":" @notice          Returns the endpoint of `memView`.\n @param memView   The view\n @return          uint256 - The endpoint of `memView`"},"id":3639,"implemented":true,"kind":"function","modifiers":[],"name":"end","nameLocation":"13209:3:17","nodeType":"FunctionDefinition","parameters":{"id":3625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3624,"mutability":"mutable","name":"memView","nameLocation":"13221:7:17","nodeType":"VariableDeclaration","scope":3639,"src":"13213:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3623,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13213:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"13212:17:17"},"returnParameters":{"id":3628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3639,"src":"13253:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"13253:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13252:9:17"},"scope":4221,"src":"13200:131:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3684,"nodeType":"Block","src":"13723:219:17","statements":[{"assignments":[3654],"declarations":[{"constant":false,"id":3654,"mutability":"mutable","name":"_loc","nameLocation":"13737:4:17","nodeType":"VariableDeclaration","scope":3684,"src":"13729:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3653,"name":"uint256","nodeType":"ElementaryTypeName","src":"13729:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3658,"initialValue":{"arguments":[{"id":3656,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"13748:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3655,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"13744:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13744:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"13729:27:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3659,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"13809:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3660,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"13816:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13809:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3662,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"13825:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13809:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3665,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"13836:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3664,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"13832:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13832:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13809:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3671,"nodeType":"IfStatement","src":"13805:67:17","trueBody":{"id":3670,"nodeType":"Block","src":"13846:26:17","statements":[{"expression":{"id":3668,"name":"NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"13861:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3652,"id":3669,"nodeType":"Return","src":"13854:11:17"}]}},{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3672,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"13878:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"13885:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3674,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"13892:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13885:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13878:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3677,"nodeType":"ExpressionStatement","src":"13878:20:17"},{"expression":{"arguments":[{"id":3679,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3648,"src":"13917:7:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":3680,"name":"_loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3654,"src":"13926:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3681,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"13932:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3678,"name":"build","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"13911:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13911:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3652,"id":3683,"nodeType":"Return","src":"13904:33:17"}]},"documentation":{"id":3640,"nodeType":"StructuredDocumentation","src":"13335:255:17","text":" @notice          Safe slicing without memory modification.\n @param memView   The view\n @param _index    The start index\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"slice","nameLocation":"13602:5:17","nodeType":"FunctionDefinition","parameters":{"id":3649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"memView","nameLocation":"13621:7:17","nodeType":"VariableDeclaration","scope":3685,"src":"13613:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3641,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13613:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"_index","nameLocation":"13642:6:17","nodeType":"VariableDeclaration","scope":3685,"src":"13634:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3643,"name":"uint256","nodeType":"ElementaryTypeName","src":"13634:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3646,"mutability":"mutable","name":"_len","nameLocation":"13662:4:17","nodeType":"VariableDeclaration","scope":3685,"src":"13654:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"13654:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3648,"mutability":"mutable","name":"newType","nameLocation":"13679:7:17","nodeType":"VariableDeclaration","scope":3685,"src":"13672:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3647,"name":"uint40","nodeType":"ElementaryTypeName","src":"13672:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"13607:83:17"},"returnParameters":{"id":3652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3685,"src":"13714:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3650,"name":"bytes29","nodeType":"ElementaryTypeName","src":"13714:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"13713:9:17"},"scope":4221,"src":"13593:349:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3704,"nodeType":"Block","src":"14305:50:17","statements":[{"expression":{"arguments":[{"id":3698,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"14324:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"hexValue":"30","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14333:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":3700,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"14336:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3701,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"14342:7:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3697,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14318:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint256_$_t_uint40_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256,uint256,uint40) pure returns (bytes29)"}},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14318:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3696,"id":3703,"nodeType":"Return","src":"14311:39:17"}]},"documentation":{"id":3686,"nodeType":"StructuredDocumentation","src":"13946:245:17","text":" @notice          Shortcut to `slice`. Gets a view representing the first `_len` bytes.\n @param memView   The view\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":3705,"implemented":true,"kind":"function","modifiers":[],"name":"prefix","nameLocation":"14203:6:17","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"memView","nameLocation":"14223:7:17","nodeType":"VariableDeclaration","scope":3705,"src":"14215:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3687,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14215:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"_len","nameLocation":"14244:4:17","nodeType":"VariableDeclaration","scope":3705,"src":"14236:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3689,"name":"uint256","nodeType":"ElementaryTypeName","src":"14236:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"newType","nameLocation":"14261:7:17","nodeType":"VariableDeclaration","scope":3705,"src":"14254:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3691,"name":"uint40","nodeType":"ElementaryTypeName","src":"14254:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14209:63:17"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3705,"src":"14296:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3694,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14296:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"14295:9:17"},"scope":4221,"src":"14194:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3731,"nodeType":"Block","src":"14717:77:17","statements":[{"expression":{"arguments":[{"id":3718,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"14736:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3722,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"14757:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3721,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"14753:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14753:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14745:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"14745:7:17","typeDescriptions":{}}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14745:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3725,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"14769:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14745:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3727,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"14775:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3728,"name":"newType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"14781:7:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint40","typeString":"uint40"}],"id":3717,"name":"slice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14730:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint256_$_t_uint40_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256,uint256,uint40) pure returns (bytes29)"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14730:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"functionReturnParameters":3716,"id":3730,"nodeType":"Return","src":"14723:66:17"}]},"documentation":{"id":3706,"nodeType":"StructuredDocumentation","src":"14359:243:17","text":" @notice          Shortcut to `slice`. Gets a view representing the last `_len` byte.\n @param memView   The view\n @param _len      The length\n @param newType   The new type\n @return          bytes29 - The new view"},"id":3732,"implemented":true,"kind":"function","modifiers":[],"name":"postfix","nameLocation":"14614:7:17","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"memView","nameLocation":"14635:7:17","nodeType":"VariableDeclaration","scope":3732,"src":"14627:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3707,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14627:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"_len","nameLocation":"14656:4:17","nodeType":"VariableDeclaration","scope":3732,"src":"14648:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"14648:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"newType","nameLocation":"14673:7:17","nodeType":"VariableDeclaration","scope":3732,"src":"14666:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3711,"name":"uint40","nodeType":"ElementaryTypeName","src":"14666:6:17","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14621:63:17"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3732,"src":"14708:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3714,"name":"bytes29","nodeType":"ElementaryTypeName","src":"14708:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"14707:9:17"},"scope":4221,"src":"14605:189:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"15391:698:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"15401:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15411:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15401:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3753,"nodeType":"IfStatement","src":"15397:49:17","trueBody":{"id":3752,"nodeType":"Block","src":"15414:32:17","statements":[{"expression":{"arguments":[{"hexValue":"30","id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15437:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15429:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3747,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15429:7:17","typeDescriptions":{}}},"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15429:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3743,"id":3751,"nodeType":"Return","src":"15422:17:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"15455:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3755,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"15464:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"15455:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":3758,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"15477:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3757,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"15473:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15473:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"15455:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3776,"nodeType":"IfStatement","src":"15451:282:17","trueBody":{"id":3775,"nodeType":"Block","src":"15487:246:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3763,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"15678:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3762,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"15674:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15674:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"arguments":[{"id":3766,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"15692:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3765,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"15688:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15688:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3768,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"15702:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3771,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"15718:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15710:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3769,"name":"uint256","nodeType":"ElementaryTypeName","src":"15710:7:17","typeDescriptions":{}}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15710:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3761,"name":"TypedMemView__index_overrun","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"15646:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256) pure"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15646:80:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3774,"nodeType":"RevertStatement","src":"15639:87:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3777,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"15742:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3332","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15751:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"15742:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3783,"nodeType":"IfStatement","src":"15738:66:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3780,"name":"TypedMemView__index_indexMoreThan32Bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"15762:40:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15762:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3782,"nodeType":"RevertStatement","src":"15755:49:17"}},{"assignments":[3785],"declarations":[{"constant":false,"id":3785,"mutability":"mutable","name":"bitLength","nameLocation":"15817:9:17","nodeType":"VariableDeclaration","scope":3807,"src":"15811:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3784,"name":"uint8","nodeType":"ElementaryTypeName","src":"15811:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3786,"nodeType":"VariableDeclarationStatement","src":"15811:15:17"},{"id":3793,"nodeType":"UncheckedBlock","src":"15832:47:17","statements":[{"expression":{"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3787,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"15850:9:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3788,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3739,"src":"15862:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15871:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"15862:10:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"15850:22:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3792,"nodeType":"ExpressionStatement","src":"15850:22:17"}]},{"assignments":[3795],"declarations":[{"constant":false,"id":3795,"mutability":"mutable","name":"_loc","nameLocation":"15892:4:17","nodeType":"VariableDeclaration","scope":3807,"src":"15884:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3794,"name":"uint256","nodeType":"ElementaryTypeName","src":"15884:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3799,"initialValue":{"arguments":[{"id":3797,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"15903:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3796,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"15899:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15899:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"15884:27:17"},{"assignments":[3801],"declarations":[{"constant":false,"id":3801,"mutability":"mutable","name":"_mask","nameLocation":"15925:5:17","nodeType":"VariableDeclaration","scope":3807,"src":"15917:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3800,"name":"uint256","nodeType":"ElementaryTypeName","src":"15917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3805,"initialValue":{"arguments":[{"id":3803,"name":"bitLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"15942:9:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3802,"name":"leftMask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"15933:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint8) pure returns (uint256)"}},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15933:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15917:35:17"},{"AST":{"nodeType":"YulBlock","src":"15967:118:17","statements":[{"nodeType":"YulAssignment","src":"16033:46:17","value":{"arguments":[{"arguments":[{"arguments":[{"name":"_loc","nodeType":"YulIdentifier","src":"16057:4:17"},{"name":"_index","nodeType":"YulIdentifier","src":"16063:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16053:3:17"},"nodeType":"YulFunctionCall","src":"16053:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16047:5:17"},"nodeType":"YulFunctionCall","src":"16047:24:17"},{"name":"_mask","nodeType":"YulIdentifier","src":"16073:5:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16043:3:17"},"nodeType":"YulFunctionCall","src":"16043:36:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"16033:6:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3737,"isOffset":false,"isSlot":false,"src":"16063:6:17","valueSize":1},{"declaration":3795,"isOffset":false,"isSlot":false,"src":"16057:4:17","valueSize":1},{"declaration":3801,"isOffset":false,"isSlot":false,"src":"16073:5:17","valueSize":1},{"declaration":3742,"isOffset":false,"isSlot":false,"src":"16033:6:17","valueSize":1}],"id":3806,"nodeType":"InlineAssembly","src":"15958:127:17"}]},"documentation":{"id":3733,"nodeType":"StructuredDocumentation","src":"14798:473:17","text":" @notice          Load up to 32 bytes from the view onto the stack.\n @dev             Returns a bytes32 with only the `_bytes` highest bytes set.\n                  This can be immediately cast to a smaller fixed-length byte array.\n                  To automatically cast to an integer, use `indexUint`.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The 32 byte result"},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"index","nameLocation":"15283:5:17","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"memView","nameLocation":"15302:7:17","nodeType":"VariableDeclaration","scope":3808,"src":"15294:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3734,"name":"bytes29","nodeType":"ElementaryTypeName","src":"15294:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"_index","nameLocation":"15323:6:17","nodeType":"VariableDeclaration","scope":3808,"src":"15315:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"15315:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3739,"mutability":"mutable","name":"_bytes","nameLocation":"15341:6:17","nodeType":"VariableDeclaration","scope":3808,"src":"15335:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3738,"name":"uint8","nodeType":"ElementaryTypeName","src":"15335:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15288:63:17"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"result","nameLocation":"15383:6:17","nodeType":"VariableDeclaration","scope":3808,"src":"15375:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15375:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15374:16:17"},"scope":4221,"src":"15274:815:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3837,"nodeType":"Block","src":"16538:80:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3823,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"16565:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3824,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"16574:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3825,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"16582:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3822,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"16559:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16559:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16551:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"16551:7:17","typeDescriptions":{}}},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16551:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":3828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16596:2:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3829,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"16601:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16596:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16595:13:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16611:1:17","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"16595:17:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3834,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16594:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16551:62:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3819,"id":3836,"nodeType":"Return","src":"16544:69:17"}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"16093:321:17","text":" @notice          Parse an unsigned integer from the view at `_index`.\n @dev             Requires that the view have >= `_bytes` bytes following that index.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The unsigned integer"},"id":3838,"implemented":true,"kind":"function","modifiers":[],"name":"indexUint","nameLocation":"16426:9:17","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"memView","nameLocation":"16449:7:17","nodeType":"VariableDeclaration","scope":3838,"src":"16441:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3810,"name":"bytes29","nodeType":"ElementaryTypeName","src":"16441:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"_index","nameLocation":"16470:6:17","nodeType":"VariableDeclaration","scope":3838,"src":"16462:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"16462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"_bytes","nameLocation":"16488:6:17","nodeType":"VariableDeclaration","scope":3838,"src":"16482:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3814,"name":"uint8","nodeType":"ElementaryTypeName","src":"16482:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16435:63:17"},"returnParameters":{"id":3819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"result","nameLocation":"16530:6:17","nodeType":"VariableDeclaration","scope":3838,"src":"16522:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"16522:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16521:16:17"},"scope":4221,"src":"16417:201:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3861,"nodeType":"Block","src":"16967:73:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3854,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"17009:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3855,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"17018:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3856,"name":"_bytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"17026:6:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3853,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"17003:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_bytes32_$","typeString":"function (bytes29,uint256,uint8) pure returns (bytes32)"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17003:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16995:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"16995:7:17","typeDescriptions":{}}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16995:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3850,"name":"reverseUint256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"16980:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16980:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3849,"id":3860,"nodeType":"Return","src":"16973:62:17"}]},"documentation":{"id":3839,"nodeType":"StructuredDocumentation","src":"16622:219:17","text":" @notice          Parse an unsigned integer from LE bytes.\n @param memView   The view\n @param _index    The index\n @param _bytes    The bytes\n @return          result - The unsigned integer"},"id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"indexLEUint","nameLocation":"16853:11:17","nodeType":"FunctionDefinition","parameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"memView","nameLocation":"16878:7:17","nodeType":"VariableDeclaration","scope":3862,"src":"16870:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3840,"name":"bytes29","nodeType":"ElementaryTypeName","src":"16870:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3843,"mutability":"mutable","name":"_index","nameLocation":"16899:6:17","nodeType":"VariableDeclaration","scope":3862,"src":"16891:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3842,"name":"uint256","nodeType":"ElementaryTypeName","src":"16891:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3845,"mutability":"mutable","name":"_bytes","nameLocation":"16917:6:17","nodeType":"VariableDeclaration","scope":3862,"src":"16911:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3844,"name":"uint8","nodeType":"ElementaryTypeName","src":"16911:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16864:63:17"},"returnParameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"result","nameLocation":"16959:6:17","nodeType":"VariableDeclaration","scope":3862,"src":"16951:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"16951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16950:16:17"},"scope":4221,"src":"16844:196:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"17400:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3877,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"17439:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3878,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"17448:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3230","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17456:2:17","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":3876,"name":"indexUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"17429:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (bytes29,uint256,uint8) pure returns (uint256)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17429:30:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17421:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3874,"name":"uint160","nodeType":"ElementaryTypeName","src":"17421:7:17","typeDescriptions":{}}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17421:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17413:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3872,"name":"address","nodeType":"ElementaryTypeName","src":"17413:7:17","typeDescriptions":{}}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17413:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3871,"id":3883,"nodeType":"Return","src":"17406:55:17"}]},"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"17044:266:17","text":" @notice          Parse an address from the view at `_index`. Requires that the view have >= 20 bytes\n                  following that index.\n @param memView   The view\n @param _index    The index\n @return          address - The address"},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"indexAddress","nameLocation":"17322:12:17","nodeType":"FunctionDefinition","parameters":{"id":3868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"memView","nameLocation":"17343:7:17","nodeType":"VariableDeclaration","scope":3885,"src":"17335:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3864,"name":"bytes29","nodeType":"ElementaryTypeName","src":"17335:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3867,"mutability":"mutable","name":"_index","nameLocation":"17360:6:17","nodeType":"VariableDeclaration","scope":3885,"src":"17352:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3866,"name":"uint256","nodeType":"ElementaryTypeName","src":"17352:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17334:33:17"},"returnParameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3885,"src":"17391:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"17391:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17390:9:17"},"scope":4221,"src":"17313:153:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3906,"nodeType":"Block","src":"17733:188:17","statements":[{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"_loc","nameLocation":"17747:4:17","nodeType":"VariableDeclaration","scope":3906,"src":"17739:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"17739:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3898,"initialValue":{"arguments":[{"id":3896,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"17758:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3895,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"17754:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17754:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"17739:27:17"},{"assignments":[3900],"declarations":[{"constant":false,"id":3900,"mutability":"mutable","name":"_len","nameLocation":"17780:4:17","nodeType":"VariableDeclaration","scope":3906,"src":"17772:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3899,"name":"uint256","nodeType":"ElementaryTypeName","src":"17772:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3904,"initialValue":{"arguments":[{"id":3902,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"17791:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3901,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"17787:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17787:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"17772:27:17"},{"AST":{"nodeType":"YulBlock","src":"17814:103:17","statements":[{"nodeType":"YulAssignment","src":"17880:31:17","value":{"arguments":[{"name":"_loc","nodeType":"YulIdentifier","src":"17900:4:17"},{"name":"_len","nodeType":"YulIdentifier","src":"17906:4:17"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"17890:9:17"},"nodeType":"YulFunctionCall","src":"17890:21:17"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"17880:6:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3900,"isOffset":false,"isSlot":false,"src":"17906:4:17","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"17900:4:17","valueSize":1},{"declaration":3891,"isOffset":false,"isSlot":false,"src":"17880:6:17","valueSize":1}],"id":3905,"nodeType":"InlineAssembly","src":"17805:112:17"}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"17470:188:17","text":" @notice          Return the keccak256 hash of the underlying memory\n @param memView   The view\n @return          digest - The keccak256 hash of the underlying memory"},"id":3907,"implemented":true,"kind":"function","modifiers":[],"name":"keccak","nameLocation":"17670:6:17","nodeType":"FunctionDefinition","parameters":{"id":3889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"memView","nameLocation":"17685:7:17","nodeType":"VariableDeclaration","scope":3907,"src":"17677:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3887,"name":"bytes29","nodeType":"ElementaryTypeName","src":"17677:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"17676:17:17"},"returnParameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"digest","nameLocation":"17725:6:17","nodeType":"VariableDeclaration","scope":3907,"src":"17717:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17717:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17716:16:17"},"scope":4221,"src":"17661:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3942,"nodeType":"Block","src":"18241:103:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3918,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"18259:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3917,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"18255:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18255:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3921,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"18272:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3920,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"18268:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18268:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18255:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3925,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"18286:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3924,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"18282:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18282:9:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3928,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"18299:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3927,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"18295:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18295:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"18282:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18255:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18254:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3934,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"18317:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3933,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"18310:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18310:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3937,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"18333:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3936,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"18326:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18326:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"18310:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"18254:85:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3916,"id":3941,"nodeType":"Return","src":"18247:92:17"}]},"documentation":{"id":3908,"nodeType":"StructuredDocumentation","src":"17925:233:17","text":" @notice          Return true if the underlying memory is equal. Else false.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the underlying memory is equal"},"id":3943,"implemented":true,"kind":"function","modifiers":[],"name":"untypedEqual","nameLocation":"18170:12:17","nodeType":"FunctionDefinition","parameters":{"id":3913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3910,"mutability":"mutable","name":"left","nameLocation":"18191:4:17","nodeType":"VariableDeclaration","scope":3943,"src":"18183:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3909,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3912,"mutability":"mutable","name":"right","nameLocation":"18205:5:17","nodeType":"VariableDeclaration","scope":3943,"src":"18197:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3911,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18197:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"18182:29:17"},"returnParameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3943,"src":"18235:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3914,"name":"bool","nodeType":"ElementaryTypeName","src":"18235:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18234:6:17"},"scope":4221,"src":"18161:183:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3959,"nodeType":"Block","src":"18668:44:17","statements":[{"expression":{"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18681:26:17","subExpression":{"arguments":[{"id":3954,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3946,"src":"18695:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":3955,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3948,"src":"18701:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3953,"name":"untypedEqual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"18682:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29,bytes29) pure returns (bool)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18682:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3952,"id":3958,"nodeType":"Return","src":"18674:33:17"}]},"documentation":{"id":3944,"nodeType":"StructuredDocumentation","src":"18348:234:17","text":" @notice          Return false if the underlying memory is equal. Else true.\n @param left      The first view\n @param right     The second view\n @return          bool - False if the underlying memory is equal"},"id":3960,"implemented":true,"kind":"function","modifiers":[],"name":"untypedNotEqual","nameLocation":"18594:15:17","nodeType":"FunctionDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"left","nameLocation":"18618:4:17","nodeType":"VariableDeclaration","scope":3960,"src":"18610:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3945,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18610:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3948,"mutability":"mutable","name":"right","nameLocation":"18632:5:17","nodeType":"VariableDeclaration","scope":3960,"src":"18624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3947,"name":"bytes29","nodeType":"ElementaryTypeName","src":"18624:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"18609:29:17"},"returnParameters":{"id":3952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3960,"src":"18662:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3950,"name":"bool","nodeType":"ElementaryTypeName","src":"18662:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18661:6:17"},"scope":4221,"src":"18585:127:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3991,"nodeType":"Block","src":"19081:99:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"19094:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3971,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"19102:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"19094:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint40","typeString":"uint40"},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3974,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"19119:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3973,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"19112:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19112:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3977,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"19135:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3976,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"19128:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19128:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"19112:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3981,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"19152:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3980,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"19145:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19145:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":3984,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"19168:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":3983,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"19161:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19161:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"19145:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19112:62:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3988,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19111:64:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19094:81:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3969,"id":3990,"nodeType":"Return","src":"19087:88:17"}]},"documentation":{"id":3961,"nodeType":"StructuredDocumentation","src":"18716:289:17","text":" @notice          Compares type equality.\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the types are the same"},"id":3992,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"19017:5:17","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"left","nameLocation":"19031:4:17","nodeType":"VariableDeclaration","scope":3992,"src":"19023:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3962,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19023:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"right","nameLocation":"19045:5:17","nodeType":"VariableDeclaration","scope":3992,"src":"19037:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3964,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19037:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"19022:29:17"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3992,"src":"19075:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3967,"name":"bool","nodeType":"ElementaryTypeName","src":"19075:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19074:6:17"},"scope":4221,"src":"19008:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4008,"nodeType":"Block","src":"19558:37:17","statements":[{"expression":{"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"19571:19:17","subExpression":{"arguments":[{"id":4003,"name":"left","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3995,"src":"19578:4:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"id":4004,"name":"right","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"19584:5:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4002,"name":"equal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"19572:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29,bytes29) pure returns (bool)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19572:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4001,"id":4007,"nodeType":"Return","src":"19564:26:17"}]},"documentation":{"id":3993,"nodeType":"StructuredDocumentation","src":"19184:295:17","text":" @notice          Compares type inequality.\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param left      The first view\n @param right     The second view\n @return          bool - True if the types are not the same"},"id":4009,"implemented":true,"kind":"function","modifiers":[],"name":"notEqual","nameLocation":"19491:8:17","nodeType":"FunctionDefinition","parameters":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3995,"mutability":"mutable","name":"left","nameLocation":"19508:4:17","nodeType":"VariableDeclaration","scope":4009,"src":"19500:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3994,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19500:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":3997,"mutability":"mutable","name":"right","nameLocation":"19522:5:17","nodeType":"VariableDeclaration","scope":4009,"src":"19514:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":3996,"name":"bytes29","nodeType":"ElementaryTypeName","src":"19514:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"19499:29:17"},"returnParameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4009,"src":"19552:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3999,"name":"bool","nodeType":"ElementaryTypeName","src":"19552:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19551:6:17"},"scope":4221,"src":"19482:113:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4068,"nodeType":"Block","src":"20228:798:17","statements":[{"condition":{"arguments":[{"id":4020,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"20245:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4019,"name":"isNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"20238:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20238:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4025,"nodeType":"IfStatement","src":"20234:68:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4022,"name":"TypedMemView__unsafeCopyTo_nullPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3185,"src":"20262:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20262:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4024,"nodeType":"RevertStatement","src":"20255:47:17"}},{"condition":{"arguments":[{"id":4027,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"20323:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4026,"name":"isNotValid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"20312:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bool_$","typeString":"function (bytes29) pure returns (bool)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20312:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"IfStatement","src":"20308:75:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4029,"name":"TypedMemView__unsafeCopyTo_invalidPointer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"20340:41:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20340:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4031,"nodeType":"RevertStatement","src":"20333:50:17"}},{"assignments":[4034],"declarations":[{"constant":false,"id":4034,"mutability":"mutable","name":"_len","nameLocation":"20398:4:17","nodeType":"VariableDeclaration","scope":4068,"src":"20390:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4038,"initialValue":{"arguments":[{"id":4036,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"20409:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4035,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"20405:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20405:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"20390:27:17"},{"assignments":[4040],"declarations":[{"constant":false,"id":4040,"mutability":"mutable","name":"_oldLoc","nameLocation":"20431:7:17","nodeType":"VariableDeclaration","scope":4068,"src":"20423:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"20423:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4044,"initialValue":{"arguments":[{"id":4042,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"20445:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4041,"name":"loc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"20441:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20441:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"20423:30:17"},{"assignments":[4046],"declarations":[{"constant":false,"id":4046,"mutability":"mutable","name":"ptr","nameLocation":"20468:3:17","nodeType":"VariableDeclaration","scope":4068,"src":"20460:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4045,"name":"uint256","nodeType":"ElementaryTypeName","src":"20460:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4047,"nodeType":"VariableDeclarationStatement","src":"20460:11:17"},{"assignments":[4049],"declarations":[{"constant":false,"id":4049,"mutability":"mutable","name":"res","nameLocation":"20482:3:17","nodeType":"VariableDeclaration","scope":4068,"src":"20477:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4048,"name":"bool","nodeType":"ElementaryTypeName","src":"20477:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4050,"nodeType":"VariableDeclarationStatement","src":"20477:8:17"},{"AST":{"nodeType":"YulBlock","src":"20500:391:17","statements":[{"nodeType":"YulAssignment","src":"20566:18:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20579:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20573:5:17"},"nodeType":"YulFunctionCall","src":"20573:11:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"20566:3:17"}]},{"body":{"nodeType":"YulBlock","src":"20663:60:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20680:4:17","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"20686:4:17","type":"","value":"0x20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20673:6:17"},"nodeType":"YulFunctionCall","src":"20673:18:17"},"nodeType":"YulExpressionStatement","src":"20673:18:17"}]},"condition":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"20649:3:17"},{"name":"_newLoc","nodeType":"YulIdentifier","src":"20654:7:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20646:2:17"},"nodeType":"YulFunctionCall","src":"20646:16:17"},"nodeType":"YulIf","src":"20643:80:17"},{"nodeType":"YulAssignment","src":"20828:57:17","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"20846:3:17"},"nodeType":"YulFunctionCall","src":"20846:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"20853:1:17","type":"","value":"4"},{"name":"_oldLoc","nodeType":"YulIdentifier","src":"20856:7:17"},{"name":"_len","nodeType":"YulIdentifier","src":"20865:4:17"},{"name":"_newLoc","nodeType":"YulIdentifier","src":"20871:7:17"},{"name":"_len","nodeType":"YulIdentifier","src":"20880:4:17"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"20835:10:17"},"nodeType":"YulFunctionCall","src":"20835:50:17"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"20828:3:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4034,"isOffset":false,"isSlot":false,"src":"20865:4:17","valueSize":1},{"declaration":4034,"isOffset":false,"isSlot":false,"src":"20880:4:17","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"20654:7:17","valueSize":1},{"declaration":4014,"isOffset":false,"isSlot":false,"src":"20871:7:17","valueSize":1},{"declaration":4040,"isOffset":false,"isSlot":false,"src":"20856:7:17","valueSize":1},{"declaration":4046,"isOffset":false,"isSlot":false,"src":"20566:3:17","valueSize":1},{"declaration":4046,"isOffset":false,"isSlot":false,"src":"20649:3:17","valueSize":1},{"declaration":4049,"isOffset":false,"isSlot":false,"src":"20828:3:17","valueSize":1}],"id":4051,"nodeType":"InlineAssembly","src":"20491:400:17"},{"condition":{"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"20900:4:17","subExpression":{"id":4052,"name":"res","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"20901:3:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4057,"nodeType":"IfStatement","src":"20896:57:17","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4054,"name":"TypedMemView__unsafeCopyTo_identityOOG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"20913:38:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20913:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4056,"nodeType":"RevertStatement","src":"20906:47:17"}},{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4058,"name":"written","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"20959:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4061,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4012,"src":"20997:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4060,"name":"typeOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"20990:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint40_$","typeString":"function (bytes29) pure returns (uint40)"}},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20990:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},{"id":4063,"name":"_newLoc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"21007:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4064,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"21016:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint40","typeString":"uint40"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4059,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"20969:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20969:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"20959:62:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4067,"nodeType":"ExpressionStatement","src":"20959:62:17"}]},"documentation":{"id":4010,"nodeType":"StructuredDocumentation","src":"19599:531:17","text":" @notice          Copy the view to a location, return an unsafe memory reference\n @dev             Super Dangerous direct memory access.\n                  This reference can be overwritten if anything else modifies memory (!!!).\n                  As such it MUST be consumed IMMEDIATELY.\n                  This function is private to prevent unsafe usage by callers.\n @param memView   The view\n @param _newLoc   The new location\n @return          written - the unsafe memory reference"},"id":4069,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeCopyTo","nameLocation":"20142:12:17","nodeType":"FunctionDefinition","parameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4012,"mutability":"mutable","name":"memView","nameLocation":"20163:7:17","nodeType":"VariableDeclaration","scope":4069,"src":"20155:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":4011,"name":"bytes29","nodeType":"ElementaryTypeName","src":"20155:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"},{"constant":false,"id":4014,"mutability":"mutable","name":"_newLoc","nameLocation":"20180:7:17","nodeType":"VariableDeclaration","scope":4069,"src":"20172:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"20172:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20154:34:17"},"returnParameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"written","nameLocation":"20219:7:17","nodeType":"VariableDeclaration","scope":4069,"src":"20211:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":4016,"name":"bytes29","nodeType":"ElementaryTypeName","src":"20211:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"20210:17:17"},"scope":4221,"src":"20133:893:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4096,"nodeType":"Block","src":"21453:483:17","statements":[{"assignments":[4078],"declarations":[{"constant":false,"id":4078,"mutability":"mutable","name":"ptr","nameLocation":"21467:3:17","nodeType":"VariableDeclaration","scope":4096,"src":"21459:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4077,"name":"uint256","nodeType":"ElementaryTypeName","src":"21459:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4079,"nodeType":"VariableDeclarationStatement","src":"21459:11:17"},{"assignments":[4081],"declarations":[{"constant":false,"id":4081,"mutability":"mutable","name":"_len","nameLocation":"21484:4:17","nodeType":"VariableDeclaration","scope":4096,"src":"21476:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4080,"name":"uint256","nodeType":"ElementaryTypeName","src":"21476:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4085,"initialValue":{"arguments":[{"id":4083,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"21495:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4082,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"21491:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21491:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"21476:27:17"},{"AST":{"nodeType":"YulBlock","src":"21518:137:17","statements":[{"nodeType":"YulAssignment","src":"21584:18:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21597:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21591:5:17"},"nodeType":"YulFunctionCall","src":"21591:11:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"21584:3:17"}]},{"nodeType":"YulAssignment","src":"21639:10:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21646:3:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21639:3:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4078,"isOffset":false,"isSlot":false,"src":"21584:3:17","valueSize":1},{"declaration":4078,"isOffset":false,"isSlot":false,"src":"21646:3:17","valueSize":1},{"declaration":4075,"isOffset":false,"isSlot":false,"src":"21639:3:17","valueSize":1}],"id":4086,"nodeType":"InlineAssembly","src":"21509:146:17"},{"id":4094,"nodeType":"UncheckedBlock","src":"21660:58:17","statements":[{"expression":{"arguments":[{"id":4088,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"21691:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4089,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4078,"src":"21700:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":4090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21706:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"21700:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4087,"name":"unsafeCopyTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"21678:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256) view returns (bytes29)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21678:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4093,"nodeType":"ExpressionStatement","src":"21678:33:17"}]},{"AST":{"nodeType":"YulBlock","src":"21732:200:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21805:4:17","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21819:3:17"},{"name":"_len","nodeType":"YulIdentifier","src":"21824:4:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21815:3:17"},"nodeType":"YulFunctionCall","src":"21815:14:17"},{"kind":"number","nodeType":"YulLiteral","src":"21831:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21811:3:17"},"nodeType":"YulFunctionCall","src":"21811:25:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21798:6:17"},"nodeType":"YulFunctionCall","src":"21798:39:17"},"nodeType":"YulExpressionStatement","src":"21798:39:17"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21879:3:17"},{"name":"_len","nodeType":"YulIdentifier","src":"21884:4:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21872:6:17"},"nodeType":"YulFunctionCall","src":"21872:17:17"},"nodeType":"YulExpressionStatement","src":"21872:17:17"}]},"evmVersion":"london","externalReferences":[{"declaration":4081,"isOffset":false,"isSlot":false,"src":"21824:4:17","valueSize":1},{"declaration":4081,"isOffset":false,"isSlot":false,"src":"21884:4:17","valueSize":1},{"declaration":4078,"isOffset":false,"isSlot":false,"src":"21819:3:17","valueSize":1},{"declaration":4078,"isOffset":false,"isSlot":false,"src":"21879:3:17","valueSize":1}],"id":4095,"nodeType":"InlineAssembly","src":"21723:209:17"}]},"documentation":{"id":4070,"nodeType":"StructuredDocumentation","src":"21030:347:17","text":" @notice          Copies the referenced memory to a new loc in memory, returning a `bytes` pointing to\n                  the new memory\n @dev             Shortcuts if the pointers are identical, otherwise compares type and digest.\n @param memView   The view\n @return          ret - The view pointing to the new memory"},"id":4097,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"21389:5:17","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"memView","nameLocation":"21403:7:17","nodeType":"VariableDeclaration","scope":4097,"src":"21395:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":4071,"name":"bytes29","nodeType":"ElementaryTypeName","src":"21395:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"21394:17:17"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"ret","nameLocation":"21448:3:17","nodeType":"VariableDeclaration","scope":4097,"src":"21435:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4074,"name":"bytes","nodeType":"ElementaryTypeName","src":"21435:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21434:18:17"},"scope":4221,"src":"21380:556:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4158,"nodeType":"Block","src":"22570:583:17","statements":[{"AST":{"nodeType":"YulBlock","src":"22585:235:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22651:22:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22668:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22662:5:17"},"nodeType":"YulFunctionCall","src":"22662:11:17"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"22655:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"22754:60:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22771:4:17","type":"","value":"0x60"},{"kind":"number","nodeType":"YulLiteral","src":"22777:4:17","type":"","value":"0x20"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22764:6:17"},"nodeType":"YulFunctionCall","src":"22764:18:17"},"nodeType":"YulExpressionStatement","src":"22764:18:17"}]},"condition":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22738:3:17"},{"name":"_location","nodeType":"YulIdentifier","src":"22743:9:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22735:2:17"},"nodeType":"YulFunctionCall","src":"22735:18:17"},"nodeType":"YulIf","src":"22732:82:17"}]},"evmVersion":"london","externalReferences":[{"declaration":4103,"isOffset":false,"isSlot":false,"src":"22743:9:17","valueSize":1}],"id":4108,"nodeType":"InlineAssembly","src":"22576:244:17"},{"assignments":[4110],"declarations":[{"constant":false,"id":4110,"mutability":"mutable","name":"_offset","nameLocation":"22834:7:17","nodeType":"VariableDeclaration","scope":4158,"src":"22826:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"22826:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4112,"initialValue":{"hexValue":"30","id":4111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22826:19:17"},{"assignments":[4114],"declarations":[{"constant":false,"id":4114,"mutability":"mutable","name":"_len","nameLocation":"22859:4:17","nodeType":"VariableDeclaration","scope":4158,"src":"22851:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"22851:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4117,"initialValue":{"expression":{"id":4115,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"22866:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22875:6:17","memberName":"length","nodeType":"MemberAccess","src":"22866:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22851:30:17"},{"body":{"id":4148,"nodeType":"Block","src":"22919:168:17","statements":[{"assignments":[4126],"declarations":[{"constant":false,"id":4126,"mutability":"mutable","name":"memView","nameLocation":"22935:7:17","nodeType":"VariableDeclaration","scope":4148,"src":"22927:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":4125,"name":"bytes29","nodeType":"ElementaryTypeName","src":"22927:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":4130,"initialValue":{"baseExpression":{"id":4127,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4101,"src":"22945:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},"id":4129,"indexExpression":{"id":4128,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"22954:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22945:11:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"VariableDeclarationStatement","src":"22927:29:17"},{"id":4147,"nodeType":"UncheckedBlock","src":"22964:117:17","statements":[{"expression":{"arguments":[{"id":4132,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"22997:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"_location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"23006:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4134,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"23018:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23006:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4131,"name":"unsafeCopyTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"22984:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes29_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29,uint256) view returns (bytes29)"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22984:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4137,"nodeType":"ExpressionStatement","src":"22984:42:17"},{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4138,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"23036:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":4140,"name":"memView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"23051:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4139,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"23047:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23047:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"23036:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"nodeType":"ExpressionStatement","src":"23036:23:17"},{"expression":{"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"23069:3:17","subExpression":{"id":4144,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"23071:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4146,"nodeType":"ExpressionStatement","src":"23069:3:17"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"22907:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4123,"name":"_len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"22911:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22907:8:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"initializationExpression":{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"i","nameLocation":"22900:1:17","nodeType":"VariableDeclaration","scope":4149,"src":"22892:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"22892:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4121,"initialValue":{"hexValue":"30","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22904:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"22892:13:17"},"nodeType":"ForStatement","src":"22887:200:17"},{"expression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4150,"name":"unsafeView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"23092:10:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23126:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":4153,"name":"_location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"23129:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4154,"name":"_offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"23140:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4151,"name":"unsafeBuildUnchecked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"23105:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (uint256,uint256,uint256) pure returns (bytes29)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23105:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"23092:56:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4157,"nodeType":"ExpressionStatement","src":"23092:56:17"}]},"documentation":{"id":4098,"nodeType":"StructuredDocumentation","src":"21940:519:17","text":" @notice          Join the views in memory, return an unsafe reference to the memory.\n @dev             Super Dangerous direct memory access.\n                  This reference can be overwritten if anything else modifies memory (!!!).\n                  As such it MUST be consumed IMMEDIATELY.\n                  This function is private to prevent unsafe usage by callers.\n @param memViews  The views\n @return          unsafeView - The conjoined view pointing to the new memory"},"id":4159,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeJoin","nameLocation":"22471:10:17","nodeType":"FunctionDefinition","parameters":{"id":4104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4101,"mutability":"mutable","name":"memViews","nameLocation":"22499:8:17","nodeType":"VariableDeclaration","scope":4159,"src":"22482:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":4099,"name":"bytes29","nodeType":"ElementaryTypeName","src":"22482:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4100,"nodeType":"ArrayTypeName","src":"22482:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"},{"constant":false,"id":4103,"mutability":"mutable","name":"_location","nameLocation":"22517:9:17","nodeType":"VariableDeclaration","scope":4159,"src":"22509:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"22509:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22481:46:17"},"returnParameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4106,"mutability":"mutable","name":"unsafeView","nameLocation":"22558:10:17","nodeType":"VariableDeclaration","scope":4159,"src":"22550:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":4105,"name":"bytes29","nodeType":"ElementaryTypeName","src":"22550:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"src":"22549:20:17"},"scope":4221,"src":"22462:691:17","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4179,"nodeType":"Block","src":"23432:202:17","statements":[{"assignments":[4169],"declarations":[{"constant":false,"id":4169,"mutability":"mutable","name":"ptr","nameLocation":"23446:3:17","nodeType":"VariableDeclaration","scope":4179,"src":"23438:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"23438:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4170,"nodeType":"VariableDeclarationStatement","src":"23438:11:17"},{"AST":{"nodeType":"YulBlock","src":"23464:120:17","statements":[{"nodeType":"YulAssignment","src":"23530:18:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23543:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23537:5:17"},"nodeType":"YulFunctionCall","src":"23537:11:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"23530:3:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4169,"isOffset":false,"isSlot":false,"src":"23530:3:17","valueSize":1}],"id":4171,"nodeType":"InlineAssembly","src":"23455:129:17"},{"expression":{"arguments":[{"arguments":[{"id":4174,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"23614:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},{"id":4175,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"23624:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4173,"name":"unsafeJoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"23603:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes29_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29[] memory,uint256) view returns (bytes29)"}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23603:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4172,"name":"keccak","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"23596:6:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_bytes32_$","typeString":"function (bytes29) pure returns (bytes32)"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23596:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4167,"id":4178,"nodeType":"Return","src":"23589:40:17"}]},"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"23157:193:17","text":" @notice          Produce the keccak256 digest of the concatenated contents of multiple views.\n @param memViews  The views\n @return          bytes32 - The keccak256 digest"},"id":4180,"implemented":true,"kind":"function","modifiers":[],"name":"joinKeccak","nameLocation":"23362:10:17","nodeType":"FunctionDefinition","parameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"memViews","nameLocation":"23390:8:17","nodeType":"VariableDeclaration","scope":4180,"src":"23373:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":4161,"name":"bytes29","nodeType":"ElementaryTypeName","src":"23373:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4162,"nodeType":"ArrayTypeName","src":"23373:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"}],"src":"23372:27:17"},"returnParameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4180,"src":"23423:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23423:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"23422:9:17"},"scope":4221,"src":"23353:281:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4219,"nodeType":"Block","src":"23884:602:17","statements":[{"assignments":[4190],"declarations":[{"constant":false,"id":4190,"mutability":"mutable","name":"ptr","nameLocation":"23898:3:17","nodeType":"VariableDeclaration","scope":4219,"src":"23890:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"23890:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4191,"nodeType":"VariableDeclarationStatement","src":"23890:11:17"},{"AST":{"nodeType":"YulBlock","src":"23916:120:17","statements":[{"nodeType":"YulAssignment","src":"23982:18:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23995:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23989:5:17"},"nodeType":"YulFunctionCall","src":"23989:11:17"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"23982:3:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4190,"isOffset":false,"isSlot":false,"src":"23982:3:17","valueSize":1}],"id":4192,"nodeType":"InlineAssembly","src":"23907:129:17"},{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"_newView","nameLocation":"24050:8:17","nodeType":"VariableDeclaration","scope":4219,"src":"24042:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"},"typeName":{"id":4193,"name":"bytes29","nodeType":"ElementaryTypeName","src":"24042:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"visibility":"internal"}],"id":4195,"nodeType":"VariableDeclarationStatement","src":"24042:16:17"},{"id":4205,"nodeType":"UncheckedBlock","src":"24064:68:17","statements":[{"expression":{"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4196,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"24082:8:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4198,"name":"memViews","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4184,"src":"24104:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4199,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"24114:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24120:4:17","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"24114:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4197,"name":"unsafeJoin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"24093:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_bytes29_$dyn_memory_ptr_$_t_uint256_$returns$_t_bytes29_$","typeString":"function (bytes29[] memory,uint256) view returns (bytes29)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24093:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"src":"24082:43:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4204,"nodeType":"ExpressionStatement","src":"24082:43:17"}]},{"assignments":[4207],"declarations":[{"constant":false,"id":4207,"mutability":"mutable","name":"_written","nameLocation":"24145:8:17","nodeType":"VariableDeclaration","scope":4219,"src":"24137:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4206,"name":"uint256","nodeType":"ElementaryTypeName","src":"24137:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4211,"initialValue":{"arguments":[{"id":4209,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"24160:8:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4208,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"24156:3:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint96_$","typeString":"function (bytes29) pure returns (uint96)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24156:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"24137:32:17"},{"assignments":[4213],"declarations":[{"constant":false,"id":4213,"mutability":"mutable","name":"_footprint","nameLocation":"24183:10:17","nodeType":"VariableDeclaration","scope":4219,"src":"24175:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"24175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4217,"initialValue":{"arguments":[{"id":4215,"name":"_newView","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"24206:8:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes29","typeString":"bytes29"}],"id":4214,"name":"footprint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3607,"src":"24196:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes29_$returns$_t_uint256_$","typeString":"function (bytes29) pure returns (uint256)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24196:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24175:40:17"},{"AST":{"nodeType":"YulBlock","src":"24231:251:17","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"24330:3:17"},{"name":"_written","nodeType":"YulIdentifier","src":"24335:8:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24323:6:17"},"nodeType":"YulFunctionCall","src":"24323:21:17"},"nodeType":"YulExpressionStatement","src":"24323:21:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24421:4:17","type":"","value":"0x40"},{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"24435:3:17"},{"name":"_footprint","nodeType":"YulIdentifier","src":"24440:10:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24431:3:17"},"nodeType":"YulFunctionCall","src":"24431:20:17"},{"kind":"number","nodeType":"YulLiteral","src":"24453:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24427:3:17"},"nodeType":"YulFunctionCall","src":"24427:31:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24414:6:17"},"nodeType":"YulFunctionCall","src":"24414:45:17"},"nodeType":"YulExpressionStatement","src":"24414:45:17"},{"nodeType":"YulAssignment","src":"24466:10:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"24473:3:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24466:3:17"}]}]},"evmVersion":"london","externalReferences":[{"declaration":4213,"isOffset":false,"isSlot":false,"src":"24440:10:17","valueSize":1},{"declaration":4207,"isOffset":false,"isSlot":false,"src":"24335:8:17","valueSize":1},{"declaration":4190,"isOffset":false,"isSlot":false,"src":"24330:3:17","valueSize":1},{"declaration":4190,"isOffset":false,"isSlot":false,"src":"24435:3:17","valueSize":1},{"declaration":4190,"isOffset":false,"isSlot":false,"src":"24473:3:17","valueSize":1},{"declaration":4187,"isOffset":false,"isSlot":false,"src":"24466:3:17","valueSize":1}],"id":4218,"nodeType":"InlineAssembly","src":"24222:260:17"}]},"documentation":{"id":4181,"nodeType":"StructuredDocumentation","src":"23638:161:17","text":" @notice          copies all views, joins them into a new bytearray.\n @param memViews  The views\n @return          ret - The new byte array"},"id":4220,"implemented":true,"kind":"function","modifiers":[],"name":"join","nameLocation":"23811:4:17","nodeType":"FunctionDefinition","parameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"memViews","nameLocation":"23833:8:17","nodeType":"VariableDeclaration","scope":4220,"src":"23816:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_memory_ptr","typeString":"bytes29[]"},"typeName":{"baseType":{"id":4182,"name":"bytes29","nodeType":"ElementaryTypeName","src":"23816:7:17","typeDescriptions":{"typeIdentifier":"t_bytes29","typeString":"bytes29"}},"id":4183,"nodeType":"ArrayTypeName","src":"23816:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes29_$dyn_storage_ptr","typeString":"bytes29[]"}},"visibility":"internal"}],"src":"23815:27:17"},"returnParameters":{"id":4188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4187,"mutability":"mutable","name":"ret","nameLocation":"23879:3:17","nodeType":"VariableDeclaration","scope":4220,"src":"23866:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4186,"name":"bytes","nodeType":"ElementaryTypeName","src":"23866:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23865:18:17"},"scope":4221,"src":"23802:684:17","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4222,"src":"71:24417:17","usedErrors":[3171,3181,3183,3185,3187,3189,3191]}],"src":"46:24443:17"},"id":17}},"contracts":{"contracts/messaging/connectors/Connector.sol":{"Connector":{"abi":[{"inputs":[],"name":"Connector__processMessage_notUsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previous","type":"address"},{"indexed":false,"internalType":"address","name":"current","type":"address"}],"name":"MirrorConnectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"mirrorDomain","type":"uint32"},{"indexed":false,"internalType":"address","name":"amb","type":"address"},{"indexed":false,"internalType":"address","name":"rootManager","type":"address"},{"indexed":false,"internalType":"address","name":"mirrorConnector","type":"address"}],"name":"NewConnector","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"AMB","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIRROR_DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mirrorConnector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_mirrorConnector","type":"address"}],"name":"setMirrorConnector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"AMB()":"d69f9d61","DOMAIN()":"52a9674b","MIRROR_DOMAIN()":"14168416","ROOT_MANAGER()":"5f61e3ec","acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","mirrorConnector()":"cc394283","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","setMirrorConnector(address)":"5bd11efc","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Connector__processMessage_notUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"MirrorConnectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"mirrorDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"amb\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rootManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mirrorConnector\",\"type\":\"address\"}],\"name\":\"NewConnector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIRROR_DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mirrorConnector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"}],\"name\":\"setMirrorConnector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Connext Labs, Inc.\",\"details\":\"This contract stores information about mirror connectors, but can be used as a base for contracts that do not have a mirror (i.e. the connector handling messaging on mainnet). In this case, the `mirrorConnector` and `MIRROR_DOMAIN` will be emptyIf ownership is renounced, this contract will be unable to update its `mirrorConnector` or `mirrorGas`\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The connectors are deployed such that there is one on each side of an AMB (i.e. for optimism, there is one connector on optimism and one connector on mainnet)\",\"params\":{\"_amb\":\"The address of the amb on the domain this connector lives on\",\"_domain\":\"The domain this connector lives on\",\"_mirrorConnector\":\"The address of the spoke connector\",\"_mirrorDomain\":\"The spoke domain\",\"_rootManager\":\"The address of the RootManager on mainnet\"}},\"processMessage(bytes)\":{\"details\":\"This is called by AMBs to process messages originating from mirror connector\"}},\"title\":\"Connector\",\"version\":1},\"userdoc\":{\"events\":{\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"AMB()\":{\"notice\":\"Address of the AMB on this domain.\"},\"DOMAIN()\":{\"notice\":\"The domain of this Messaging (i.e. Connector) contract.\"},\"MIRROR_DOMAIN()\":{\"notice\":\"The domain of the corresponding messaging (i.e. Connector) contract.\"},\"ROOT_MANAGER()\":{\"notice\":\"RootManager contract address.\"},\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"constructor\":{\"notice\":\"Creates a new HubConnector instance\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"mirrorConnector()\":{\"notice\":\"Connector on L2 for L1 connectors, and vice versa.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"processMessage(bytes)\":{\"notice\":\"Processes a message received by an AMB\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"},\"setMirrorConnector(address)\":{\"notice\":\"Sets the address of the l2Connector for this domain\"},\"verifySender(address)\":{\"notice\":\"Checks the cross domain sender for a given address\"}},\"notice\":\"This contract has the messaging interface functions used by all connectors.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/Connector.sol\":\"Connector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/Connector.sol\":{\"keccak256\":\"0x08d4077a1b5caf9f46491206064bb24bee467dd741b42fed3d30a608eea83368\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://457a269ab150779b4605bc9612676076152857069beb0428d62f44408ac84be4\",\"dweb:/ipfs/QmeSkwvuyUEqUnQgtJe9kr9B7ukRG2zGeKDJ9Xe7JJMbNr\"]},\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/GasCap.sol":{"GasCap":{"abi":[{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_previous","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_updated","type":"uint256"}],"name":"GasCapUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"name":"setGasCap","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","setGasCap(uint256)":"7850b020"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updated\",\"type\":\"uint256\"}],\"name\":\"GasCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"name\":\"setGasCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"params\":{\"_previous\":\"The starting value\",\"_updated\":\"The final value\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"notice\":\"Emitted when admin updates the gas cap\"}},\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/GasCap.sol\":\"GasCap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/GasCap.sol\":{\"keccak256\":\"0xb8b52a3372f08490c918d1f490ad80764d54bd62d1638e4d17a5b552efe6587d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6bb20af8d934307c6fa183bc20e11bad0767174a3a305013d2a61d71443f47a5\",\"dweb:/ipfs/QmQMDihNR1ZLK1jX4Ev5NZttBoYhah8ZaZxGZdREZaWEkK\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/HubConnector.sol":{"HubConnector":{"abi":[{"inputs":[],"name":"Connector__processMessage_notUsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previous","type":"address"},{"indexed":false,"internalType":"address","name":"current","type":"address"}],"name":"MirrorConnectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"mirrorDomain","type":"uint32"},{"indexed":false,"internalType":"address","name":"amb","type":"address"},{"indexed":false,"internalType":"address","name":"rootManager","type":"address"},{"indexed":false,"internalType":"address","name":"mirrorConnector","type":"address"}],"name":"NewConnector","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"AMB","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIRROR_DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mirrorConnector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_encodedData","type":"bytes"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_mirrorConnector","type":"address"}],"name":"setMirrorConnector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"AMB()":"d69f9d61","DOMAIN()":"52a9674b","MIRROR_DOMAIN()":"14168416","ROOT_MANAGER()":"5f61e3ec","acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","mirrorConnector()":"cc394283","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","sendMessage(bytes,bytes)":"48e6fa23","setMirrorConnector(address)":"5bd11efc","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Connector__processMessage_notUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"MirrorConnectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"mirrorDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"amb\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rootManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mirrorConnector\",\"type\":\"address\"}],\"name\":\"NewConnector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIRROR_DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mirrorConnector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_encodedData\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"}],\"name\":\"setMirrorConnector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Connext Labs, Inc.\",\"details\":\"This contract should be deployed on the hub-side of an AMB (i.e. on L1), and contracts which extend this should implement the virtual functions defined in the BaseConnector class\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"The connectors are deployed such that there is one on each side of an AMB (i.e. for optimism, there is one connector on optimism and one connector on mainnet)\",\"params\":{\"_amb\":\"The address of the amb on the domain this connector lives on\",\"_domain\":\"The domain this connector lives on\",\"_mirrorConnector\":\"The address of the spoke connector\",\"_mirrorDomain\":\"The spoke domain\",\"_rootManager\":\"The address of the RootManager on mainnet\"}},\"processMessage(bytes)\":{\"details\":\"This is called by AMBs to process messages originating from mirror connector\"},\"sendMessage(bytes,bytes)\":{\"details\":\"This is called by the root manager *only* on mainnet to propagate the aggregate root\"}},\"title\":\"HubConnector\",\"version\":1},\"userdoc\":{\"events\":{\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"AMB()\":{\"notice\":\"Address of the AMB on this domain.\"},\"DOMAIN()\":{\"notice\":\"The domain of this Messaging (i.e. Connector) contract.\"},\"MIRROR_DOMAIN()\":{\"notice\":\"The domain of the corresponding messaging (i.e. Connector) contract.\"},\"ROOT_MANAGER()\":{\"notice\":\"RootManager contract address.\"},\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"constructor\":{\"notice\":\"Creates a new HubConnector instance\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"mirrorConnector()\":{\"notice\":\"Connector on L2 for L1 connectors, and vice versa.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"processMessage(bytes)\":{\"notice\":\"Processes a message received by an AMB\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"},\"sendMessage(bytes,bytes)\":{\"notice\":\"Sends a message over the amb\"},\"setMirrorConnector(address)\":{\"notice\":\"Sets the address of the l2Connector for this domain\"},\"verifySender(address)\":{\"notice\":\"Checks the cross domain sender for a given address\"}},\"notice\":\"This contract implements the messaging functions needed on the hub-side of a given AMB. The HubConnector has a limited set of functionality compared to the SpokeConnector, namely that it contains no logic to store or prove messages.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/HubConnector.sol\":\"HubConnector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/Connector.sol\":{\"keccak256\":\"0x08d4077a1b5caf9f46491206064bb24bee467dd741b42fed3d30a608eea83368\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://457a269ab150779b4605bc9612676076152857069beb0428d62f44408ac84be4\",\"dweb:/ipfs/QmeSkwvuyUEqUnQgtJe9kr9B7ukRG2zGeKDJ9Xe7JJMbNr\"]},\"contracts/messaging/connectors/HubConnector.sol\":{\"keccak256\":\"0xc35621419ca872ed0550b0943a577b39942f3d2c9b54de008fee382d5ad290e4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b999c13a2d438bb5cb81a3e4e308e8fa0c1c7f3505ac48415552e6df66cafa78\",\"dweb:/ipfs/QmSY4h4sQCXgxbmJp6msrmm9KsHZHeLBg8NrHzWsD2dMiq\"]},\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/BaseOptimism.sol":{"BaseOptimism":{"abi":[{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_previous","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_updated","type":"uint256"}],"name":"GasCapUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"name":"setGasCap","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","setGasCap(uint256)":"7850b020"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updated\",\"type\":\"uint256\"}],\"name\":\"GasCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"name\":\"setGasCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"notice\":\"Emitted when admin updates the gas cap\"}},\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/BaseOptimism.sol\":\"BaseOptimism\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/GasCap.sol\":{\"keccak256\":\"0xb8b52a3372f08490c918d1f490ad80764d54bd62d1638e4d17a5b552efe6587d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6bb20af8d934307c6fa183bc20e11bad0767174a3a305013d2a61d71443f47a5\",\"dweb:/ipfs/QmQMDihNR1ZLK1jX4Ev5NZttBoYhah8ZaZxGZdREZaWEkK\"]},\"contracts/messaging/connectors/optimism/BaseOptimism.sol\":{\"keccak256\":\"0x87034df88ba7e4d767c451ff2d0180f8eee25f502682153af7a018e280eab8e3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3e8e4944ea00bc2f6276ec6d6cb8329c85b42cb44b3ece45ebec35d16d37676f\",\"dweb:/ipfs/QmV1uDysbrcXKUWHbVZT36YE5tSR6NjvbSdsHfnNFj7Hj3\"]},\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":{\"keccak256\":\"0xbce6aaa568441bd8ad60f2b5f1ad8d9e3c61cbc91ce4405d7a390980920f66f3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7cdea925bfc43e25eab526074b1b5454b0a44676e88cb7834707e8b273aff820\",\"dweb:/ipfs/Qmd2WyxCPaguNGKfm7sNxfQgxEU8o7vvR6Fe4pK7GZoUUe\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/OptimismHubConnector.sol":{"OptimismHubConnector":{"abi":[{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"},{"internalType":"uint32","name":"_mirrorDomain","type":"uint32"},{"internalType":"address","name":"_amb","type":"address"},{"internalType":"address","name":"_rootManager","type":"address"},{"internalType":"address","name":"_mirrorConnector","type":"address"},{"internalType":"address","name":"_stateCommitmentChain","type":"address"},{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"Connector__processMessage_notUsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"inputs":[],"name":"TypedMemView__index_indexMoreThan32Bytes","type":"error"},{"inputs":[{"internalType":"uint256","name":"loc","type":"uint256"},{"internalType":"uint256","name":"len","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"slice","type":"uint256"}],"name":"TypedMemView__index_overrun","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_previous","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_updated","type":"uint256"}],"name":"GasCapUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previous","type":"address"},{"indexed":false,"internalType":"address","name":"current","type":"address"}],"name":"MirrorConnectorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint32","name":"domain","type":"uint32"},{"indexed":true,"internalType":"uint32","name":"mirrorDomain","type":"uint32"},{"indexed":false,"internalType":"address","name":"amb","type":"address"},{"indexed":false,"internalType":"address","name":"rootManager","type":"address"},{"indexed":false,"internalType":"address","name":"mirrorConnector","type":"address"}],"name":"NewConnector","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"AMB","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIRROR_DOMAIN","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROOT_MANAGER","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mirrorConnector","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint256","name":"_messageNonce","type":"uint256"},{"components":[{"internalType":"bytes32","name":"stateRoot","type":"bytes32"},{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"stateRootBatchHeader","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"siblings","type":"bytes32[]"}],"internalType":"struct ChainInclusionProof","name":"stateRootProof","type":"tuple"},{"internalType":"bytes","name":"stateTrieWitness","type":"bytes"},{"internalType":"bytes","name":"storageTrieWitness","type":"bytes"}],"internalType":"struct L2MessageInclusionProof","name":"_proof","type":"tuple"}],"name":"processMessageFromRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"processed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"},{"internalType":"bytes","name":"_encodedData","type":"bytes"}],"name":"sendMessage","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_gasCap","type":"uint256"}],"name":"setGasCap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_mirrorConnector","type":"address"}],"name":"setMirrorConnector","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stateCommitmentChain","outputs":[{"internalType":"contract IStateCommitmentChain","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"@_146":{"entryPoint":null,"id":146,"parameterSlots":5,"returnSlots":0},"@_264":{"entryPoint":null,"id":264,"parameterSlots":1,"returnSlots":0},"@_342":{"entryPoint":null,"id":342,"parameterSlots":5,"returnSlots":0},"@_383":{"entryPoint":null,"id":383,"parameterSlots":1,"returnSlots":0},"@_513":{"entryPoint":null,"id":513,"parameterSlots":7,"returnSlots":0},"@_setGasCap_292":{"entryPoint":1053,"id":292,"parameterSlots":1,"returnSlots":0},"@_setMirrorConnector_237":{"entryPoint":892,"id":237,"parameterSlots":1,"returnSlots":0},"@_setOwner_3086":{"entryPoint":660,"id":3086,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":1272,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint32t_uint32t_addresst_addresst_addresst_addresst_uint256_fromMemory":{"entryPoint":1354,"id":null,"parameterSlots":2,"returnSlots":7},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1778,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack":{"entryPoint":1705,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack":{"entryPoint":1591,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":1901,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":1856,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed":{"entryPoint":1795,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1630,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":1918,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1533,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1226,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1194,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1295,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1129,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1124,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1":{"entryPoint":1664,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04":{"entryPoint":1550,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1246,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1305,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:6349:18","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:18","statements":[{"nodeType":"YulAssignment","src":"57:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:18"},"nodeType":"YulFunctionCall","src":"67:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:18","type":""}],"src":"7:75:18"},{"body":{"nodeType":"YulBlock","src":"177:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:18"},"nodeType":"YulFunctionCall","src":"187:12:18"},"nodeType":"YulExpressionStatement","src":"187:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:18"},{"body":{"nodeType":"YulBlock","src":"300:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:18"},"nodeType":"YulFunctionCall","src":"310:12:18"},"nodeType":"YulExpressionStatement","src":"310:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:18"},{"body":{"nodeType":"YulBlock","src":"378:49:18","statements":[{"nodeType":"YulAssignment","src":"388:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"410:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:18"},"nodeType":"YulFunctionCall","src":"399:22:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:18"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:18","type":""}],"src":"334:93:18"},{"body":{"nodeType":"YulBlock","src":"475:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"531:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"540:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"543:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"533:6:18"},"nodeType":"YulFunctionCall","src":"533:12:18"},"nodeType":"YulExpressionStatement","src":"533:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"498:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"522:5:18"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"505:16:18"},"nodeType":"YulFunctionCall","src":"505:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"495:2:18"},"nodeType":"YulFunctionCall","src":"495:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"488:6:18"},"nodeType":"YulFunctionCall","src":"488:42:18"},"nodeType":"YulIf","src":"485:62:18"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"468:5:18","type":""}],"src":"433:120:18"},{"body":{"nodeType":"YulBlock","src":"621:79:18","statements":[{"nodeType":"YulAssignment","src":"631:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"646:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"640:5:18"},"nodeType":"YulFunctionCall","src":"640:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"631:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"688:5:18"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"662:25:18"},"nodeType":"YulFunctionCall","src":"662:32:18"},"nodeType":"YulExpressionStatement","src":"662:32:18"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"599:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"607:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"615:5:18","type":""}],"src":"559:141:18"},{"body":{"nodeType":"YulBlock","src":"751:81:18","statements":[{"nodeType":"YulAssignment","src":"761:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"776:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"783:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"772:3:18"},"nodeType":"YulFunctionCall","src":"772:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"761:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"733:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"743:7:18","type":""}],"src":"706:126:18"},{"body":{"nodeType":"YulBlock","src":"883:51:18","statements":[{"nodeType":"YulAssignment","src":"893:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"904:17:18"},"nodeType":"YulFunctionCall","src":"904:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"893:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"865:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"875:7:18","type":""}],"src":"838:96:18"},{"body":{"nodeType":"YulBlock","src":"983:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"1040:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1049:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1052:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1042:6:18"},"nodeType":"YulFunctionCall","src":"1042:12:18"},"nodeType":"YulExpressionStatement","src":"1042:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1006:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1031:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1013:17:18"},"nodeType":"YulFunctionCall","src":"1013:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1003:2:18"},"nodeType":"YulFunctionCall","src":"1003:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"996:6:18"},"nodeType":"YulFunctionCall","src":"996:43:18"},"nodeType":"YulIf","src":"993:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"976:5:18","type":""}],"src":"940:122:18"},{"body":{"nodeType":"YulBlock","src":"1131:80:18","statements":[{"nodeType":"YulAssignment","src":"1141:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1156:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1150:5:18"},"nodeType":"YulFunctionCall","src":"1150:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1141:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1199:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1172:26:18"},"nodeType":"YulFunctionCall","src":"1172:33:18"},"nodeType":"YulExpressionStatement","src":"1172:33:18"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1117:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1125:5:18","type":""}],"src":"1068:143:18"},{"body":{"nodeType":"YulBlock","src":"1262:32:18","statements":[{"nodeType":"YulAssignment","src":"1272:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1283:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1272:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1244:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1254:7:18","type":""}],"src":"1217:77:18"},{"body":{"nodeType":"YulBlock","src":"1343:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"1400:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1409:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1412:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1402:6:18"},"nodeType":"YulFunctionCall","src":"1402:12:18"},"nodeType":"YulExpressionStatement","src":"1402:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1366:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1391:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1373:17:18"},"nodeType":"YulFunctionCall","src":"1373:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1363:2:18"},"nodeType":"YulFunctionCall","src":"1363:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1356:6:18"},"nodeType":"YulFunctionCall","src":"1356:43:18"},"nodeType":"YulIf","src":"1353:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1336:5:18","type":""}],"src":"1300:122:18"},{"body":{"nodeType":"YulBlock","src":"1491:80:18","statements":[{"nodeType":"YulAssignment","src":"1501:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1516:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1510:5:18"},"nodeType":"YulFunctionCall","src":"1510:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1501:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1559:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1532:26:18"},"nodeType":"YulFunctionCall","src":"1532:33:18"},"nodeType":"YulExpressionStatement","src":"1532:33:18"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1469:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1477:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1485:5:18","type":""}],"src":"1428:143:18"},{"body":{"nodeType":"YulBlock","src":"1754:1110:18","statements":[{"body":{"nodeType":"YulBlock","src":"1801:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1803:77:18"},"nodeType":"YulFunctionCall","src":"1803:79:18"},"nodeType":"YulExpressionStatement","src":"1803:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1775:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1784:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1771:3:18"},"nodeType":"YulFunctionCall","src":"1771:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1796:3:18","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1767:3:18"},"nodeType":"YulFunctionCall","src":"1767:33:18"},"nodeType":"YulIf","src":"1764:120:18"},{"nodeType":"YulBlock","src":"1894:127:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1909:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1923:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1913:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1938:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1983:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1994:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:18"},"nodeType":"YulFunctionCall","src":"1979:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2003:7:18"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"1948:30:18"},"nodeType":"YulFunctionCall","src":"1948:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1938:6:18"}]}]},{"nodeType":"YulBlock","src":"2031:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2046:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2060:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2050:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2076:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2121:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2132:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:18"},"nodeType":"YulFunctionCall","src":"2117:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2141:7:18"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"2086:30:18"},"nodeType":"YulFunctionCall","src":"2086:63:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2076:6:18"}]}]},{"nodeType":"YulBlock","src":"2169:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2184:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2198:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2188:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2214:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2260:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2271:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2256:3:18"},"nodeType":"YulFunctionCall","src":"2256:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2280:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2224:31:18"},"nodeType":"YulFunctionCall","src":"2224:64:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2214:6:18"}]}]},{"nodeType":"YulBlock","src":"2308:129:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2323:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2337:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2327:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2353:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2410:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:18"},"nodeType":"YulFunctionCall","src":"2395:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2419:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2363:31:18"},"nodeType":"YulFunctionCall","src":"2363:64:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2353:6:18"}]}]},{"nodeType":"YulBlock","src":"2447:130:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2462:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2476:3:18","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2466:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2493:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2539:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2535:3:18"},"nodeType":"YulFunctionCall","src":"2535:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2559:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2503:31:18"},"nodeType":"YulFunctionCall","src":"2503:64:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2493:6:18"}]}]},{"nodeType":"YulBlock","src":"2587:130:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2602:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2616:3:18","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2606:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2633:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2679:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2690:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2675:3:18"},"nodeType":"YulFunctionCall","src":"2675:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2699:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"2643:31:18"},"nodeType":"YulFunctionCall","src":"2643:64:18"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2633:6:18"}]}]},{"nodeType":"YulBlock","src":"2727:130:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2742:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2756:3:18","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2746:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2773:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2819:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2830:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2815:3:18"},"nodeType":"YulFunctionCall","src":"2815:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2839:7:18"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"2783:31:18"},"nodeType":"YulFunctionCall","src":"2783:64:18"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"2773:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint32t_uint32t_addresst_addresst_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1676:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1687:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1699:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1707:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1715:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1723:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1731:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1739:6:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"1747:6:18","type":""}],"src":"1577:1287:18"},{"body":{"nodeType":"YulBlock","src":"2966:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2983:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2988:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2976:6:18"},"nodeType":"YulFunctionCall","src":"2976:19:18"},"nodeType":"YulExpressionStatement","src":"2976:19:18"},{"nodeType":"YulAssignment","src":"3004:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3023:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3028:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3019:3:18"},"nodeType":"YulFunctionCall","src":"3019:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3004:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2938:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"2943:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2954:11:18","type":""}],"src":"2870:169:18"},{"body":{"nodeType":"YulBlock","src":"3151:56:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3173:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3181:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3169:3:18"},"nodeType":"YulFunctionCall","src":"3169:14:18"},{"hexValue":"656d70747920646f6d61696e","kind":"string","nodeType":"YulLiteral","src":"3185:14:18","type":"","value":"empty domain"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3162:6:18"},"nodeType":"YulFunctionCall","src":"3162:38:18"},"nodeType":"YulExpressionStatement","src":"3162:38:18"}]},"name":"store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3143:6:18","type":""}],"src":"3045:162:18"},{"body":{"nodeType":"YulBlock","src":"3359:220:18","statements":[{"nodeType":"YulAssignment","src":"3369:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3435:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3440:2:18","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3376:58:18"},"nodeType":"YulFunctionCall","src":"3376:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3369:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3541:3:18"}],"functionName":{"name":"store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04","nodeType":"YulIdentifier","src":"3452:88:18"},"nodeType":"YulFunctionCall","src":"3452:93:18"},"nodeType":"YulExpressionStatement","src":"3452:93:18"},{"nodeType":"YulAssignment","src":"3554:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3565:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3570:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3561:3:18"},"nodeType":"YulFunctionCall","src":"3561:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3554:3:18"}]}]},"name":"abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3347:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3355:3:18","type":""}],"src":"3213:366:18"},{"body":{"nodeType":"YulBlock","src":"3756:248:18","statements":[{"nodeType":"YulAssignment","src":"3766:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3778:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3789:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3774:3:18"},"nodeType":"YulFunctionCall","src":"3774:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3766:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3813:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3824:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3809:3:18"},"nodeType":"YulFunctionCall","src":"3809:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3832:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3838:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3828:3:18"},"nodeType":"YulFunctionCall","src":"3828:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3802:6:18"},"nodeType":"YulFunctionCall","src":"3802:47:18"},"nodeType":"YulExpressionStatement","src":"3802:47:18"},{"nodeType":"YulAssignment","src":"3858:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3992:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3866:124:18"},"nodeType":"YulFunctionCall","src":"3866:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3858:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3736:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3751:4:18","type":""}],"src":"3585:419:18"},{"body":{"nodeType":"YulBlock","src":"4116:61:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"4138:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4146:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4134:3:18"},"nodeType":"YulFunctionCall","src":"4134:14:18"},{"hexValue":"656d70747920726f6f744d616e61676572","kind":"string","nodeType":"YulLiteral","src":"4150:19:18","type":"","value":"empty rootManager"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4127:6:18"},"nodeType":"YulFunctionCall","src":"4127:43:18"},"nodeType":"YulExpressionStatement","src":"4127:43:18"}]},"name":"store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"4108:6:18","type":""}],"src":"4010:167:18"},{"body":{"nodeType":"YulBlock","src":"4329:220:18","statements":[{"nodeType":"YulAssignment","src":"4339:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4405:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4410:2:18","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4346:58:18"},"nodeType":"YulFunctionCall","src":"4346:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4339:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4511:3:18"}],"functionName":{"name":"store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1","nodeType":"YulIdentifier","src":"4422:88:18"},"nodeType":"YulFunctionCall","src":"4422:93:18"},"nodeType":"YulExpressionStatement","src":"4422:93:18"},{"nodeType":"YulAssignment","src":"4524:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4535:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4540:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4531:3:18"},"nodeType":"YulFunctionCall","src":"4531:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4524:3:18"}]}]},"name":"abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4317:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4325:3:18","type":""}],"src":"4183:366:18"},{"body":{"nodeType":"YulBlock","src":"4726:248:18","statements":[{"nodeType":"YulAssignment","src":"4736:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4748:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4759:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4744:3:18"},"nodeType":"YulFunctionCall","src":"4744:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4736:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4794:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4779:3:18"},"nodeType":"YulFunctionCall","src":"4779:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4802:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4808:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4798:3:18"},"nodeType":"YulFunctionCall","src":"4798:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4772:6:18"},"nodeType":"YulFunctionCall","src":"4772:47:18"},"nodeType":"YulExpressionStatement","src":"4772:47:18"},{"nodeType":"YulAssignment","src":"4828:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"4962:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4836:124:18"},"nodeType":"YulFunctionCall","src":"4836:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4828:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4706:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4721:4:18","type":""}],"src":"4555:419:18"},{"body":{"nodeType":"YulBlock","src":"5045:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5062:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5085:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5067:17:18"},"nodeType":"YulFunctionCall","src":"5067:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5055:6:18"},"nodeType":"YulFunctionCall","src":"5055:37:18"},"nodeType":"YulExpressionStatement","src":"5055:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5033:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5040:3:18","type":""}],"src":"4980:118:18"},{"body":{"nodeType":"YulBlock","src":"5258:288:18","statements":[{"nodeType":"YulAssignment","src":"5268:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5280:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5291:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5276:3:18"},"nodeType":"YulFunctionCall","src":"5276:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5268:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5348:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5361:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5372:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5357:3:18"},"nodeType":"YulFunctionCall","src":"5357:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5304:43:18"},"nodeType":"YulFunctionCall","src":"5304:71:18"},"nodeType":"YulExpressionStatement","src":"5304:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5429:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5453:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5438:3:18"},"nodeType":"YulFunctionCall","src":"5438:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5385:43:18"},"nodeType":"YulFunctionCall","src":"5385:72:18"},"nodeType":"YulExpressionStatement","src":"5385:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5511:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5524:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5535:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5520:3:18"},"nodeType":"YulFunctionCall","src":"5520:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5467:43:18"},"nodeType":"YulFunctionCall","src":"5467:72:18"},"nodeType":"YulExpressionStatement","src":"5467:72:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5214:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5226:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5234:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5242:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5253:4:18","type":""}],"src":"5104:442:18"},{"body":{"nodeType":"YulBlock","src":"5678:206:18","statements":[{"nodeType":"YulAssignment","src":"5688:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5700:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5711:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5696:3:18"},"nodeType":"YulFunctionCall","src":"5696:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5688:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5768:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5781:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5792:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5777:3:18"},"nodeType":"YulFunctionCall","src":"5777:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5724:43:18"},"nodeType":"YulFunctionCall","src":"5724:71:18"},"nodeType":"YulExpressionStatement","src":"5724:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5849:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5862:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5873:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5858:3:18"},"nodeType":"YulFunctionCall","src":"5858:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5805:43:18"},"nodeType":"YulFunctionCall","src":"5805:72:18"},"nodeType":"YulExpressionStatement","src":"5805:72:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5642:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5654:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5662:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5673:4:18","type":""}],"src":"5552:332:18"},{"body":{"nodeType":"YulBlock","src":"5955:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5972:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5995:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5977:17:18"},"nodeType":"YulFunctionCall","src":"5977:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5965:6:18"},"nodeType":"YulFunctionCall","src":"5965:37:18"},"nodeType":"YulExpressionStatement","src":"5965:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5943:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5950:3:18","type":""}],"src":"5890:118:18"},{"body":{"nodeType":"YulBlock","src":"6140:206:18","statements":[{"nodeType":"YulAssignment","src":"6150:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6162:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6173:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6158:3:18"},"nodeType":"YulFunctionCall","src":"6158:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6150:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6230:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6243:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6254:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6239:3:18"},"nodeType":"YulFunctionCall","src":"6239:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6186:43:18"},"nodeType":"YulFunctionCall","src":"6186:71:18"},"nodeType":"YulExpressionStatement","src":"6186:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"6311:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6324:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6335:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6320:3:18"},"nodeType":"YulFunctionCall","src":"6320:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6267:43:18"},"nodeType":"YulFunctionCall","src":"6267:72:18"},"nodeType":"YulExpressionStatement","src":"6267:72:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6104:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6116:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6124:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6135:4:18","type":""}],"src":"6014:332:18"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint32t_uint32t_addresst_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04(memPtr) {\n\n        mstore(add(memPtr, 0), \"empty domain\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b980d245a48554c42a057c8ef003e5a19b5b34e47ac4e478764a99637073c04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"empty rootManager\")\n\n    }\n\n    function abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2200a5301d5a9fab771f4ada9a1572d9aedc137a1a712ff31972d5e5bd1639e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x572E CODESIZE SUB DUP1 PUSH3 0x572E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x54A JUMP JUMPDEST DUP1 DUP1 DUP9 DUP9 DUP9 DUP9 DUP9 DUP5 DUP5 DUP5 DUP5 DUP5 PUSH3 0x55 CALLER PUSH3 0x294 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND SUB PUSH3 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x98 SWAP1 PUSH3 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x113 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x10A SWAP1 PUSH3 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0x80 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x1EA JUMPI PUSH3 0x1E9 DUP2 PUSH3 0x37C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST DUP4 PUSH4 0xFFFFFFFF AND DUP6 PUSH4 0xFFFFFFFF AND PUSH32 0x4F9C27C2FE3F84576EA469D367D044DA53C45E951617E8389F2B5ED8DB9D25F0 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x22D SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP POP PUSH3 0x250 DUP2 PUSH3 0x41D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x100 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP POP POP POP POP PUSH3 0x7AB JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0xC77BEC288FC88F168427F2F7DA682EADB26CAC89D8D591AF6E443DA98DFF2BBC PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH3 0x3D1 SWAP3 SWAP2 SWAP1 PUSH3 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH32 0x877A02CB809DA0364D23ADCA3CD50C451B53F279D3DF632E1FC11EB66335BCE5 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH3 0x452 SWAP3 SWAP2 SWAP1 PUSH3 0x77E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x484 DUP2 PUSH3 0x469 JUMP JUMPDEST DUP2 EQ PUSH3 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4A4 DUP2 PUSH3 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D7 DUP3 PUSH3 0x4AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4E9 DUP2 PUSH3 0x4CA JUMP JUMPDEST DUP2 EQ PUSH3 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x509 DUP2 PUSH3 0x4DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x524 DUP2 PUSH3 0x50F JUMP JUMPDEST DUP2 EQ PUSH3 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x544 DUP2 PUSH3 0x519 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x56C JUMPI PUSH3 0x56B PUSH3 0x464 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x57C DUP11 DUP3 DUP12 ADD PUSH3 0x493 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH3 0x58F DUP11 DUP3 DUP12 ADD PUSH3 0x493 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH3 0x5A2 DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH3 0x5B5 DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH3 0x5C8 DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH3 0x5DB DUP11 DUP3 DUP12 ADD PUSH3 0x4F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH3 0x5EE DUP11 DUP3 DUP12 ADD PUSH3 0x533 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x656D70747920646F6D61696E0000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x646 PUSH1 0xC DUP4 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH3 0x653 DUP3 PUSH3 0x60E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x679 DUP2 PUSH3 0x637 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x656D70747920726F6F744D616E61676572000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6B8 PUSH1 0x11 DUP4 PUSH3 0x5FD JUMP JUMPDEST SWAP2 POP PUSH3 0x6C5 DUP3 PUSH3 0x680 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x6EB DUP2 PUSH3 0x6A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6FD DUP2 PUSH3 0x4CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0x71A PUSH1 0x0 DUP4 ADD DUP7 PUSH3 0x6F2 JUMP JUMPDEST PUSH3 0x729 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x6F2 JUMP JUMPDEST PUSH3 0x738 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x6F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x757 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x6F2 JUMP JUMPDEST PUSH3 0x766 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x6F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0x778 DUP2 PUSH3 0x50F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH3 0x795 PUSH1 0x0 DUP4 ADD DUP6 PUSH3 0x76D JUMP JUMPDEST PUSH3 0x7A4 PUSH1 0x20 DUP4 ADD DUP5 PUSH3 0x76D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x4F0D PUSH3 0x821 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4A6 ADD MSTORE PUSH2 0x16FD ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4CA ADD MSTORE PUSH2 0x9CA ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4F8 ADD MSTORE DUP2 DUP2 PUSH2 0x757 ADD MSTORE PUSH2 0x98E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x5CF ADD MSTORE DUP2 DUP2 PUSH2 0x1066 ADD MSTORE DUP2 DUP2 PUSH2 0x115A ADD MSTORE PUSH2 0x16CD ADD MSTORE PUSH1 0x0 PUSH2 0x6A2 ADD MSTORE PUSH2 0x4F0D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC5B350DF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC5B350DF EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xCC394283 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD1851C92 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xD232C220 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD69F9D61 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDB1B7659 EQ PUSH2 0x467 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7850B020 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xB1F8100D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xC1F0808A EQ PUSH2 0x367 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x52A9674B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x52A9674B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x5BD11EFC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x5F61E3EC EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x6A42B8F8 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6E2EDB4E EQ PUSH2 0x2AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0xF329EF8 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x14168416 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x3CF52FFB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x48E6FA23 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4FF746F6 EQ PUSH2 0x1D7 JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x3118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x32FB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x3795 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH2 0xA9C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x3875 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xEC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0x3935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58E DUP3 DUP3 PUSH2 0x109A JUMP JUMPDEST PUSH32 0xDCAA37A042A0087DE79018C629BBD29CEE82CA80BD9BE394E1696BF9E9355077 DUP3 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0x3A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x695 SWAP3 SWAP2 SWAP1 PUSH2 0x3A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x1242 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x3B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x3B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x890 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP PUSH2 0x89C DUP2 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x3BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH1 0x0 DUP7 PUSH2 0x13A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x939 PUSH1 0x20 PUSH2 0x909 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA92 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E7D93FA PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP3 SWAP2 SWAP1 PUSH2 0x3C8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE CALLER PUSH1 0x40 MLOAD PUSH2 0xA89 SWAP3 SWAP2 SWAP1 PUSH2 0x3A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST GT PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x392CC0FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295EF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC38 PUSH1 0x0 PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x15F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDD9 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23780CCA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x945F6E7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x1638 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x234FE4E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST GT PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1093 DUP3 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D5 SWAP1 PUSH2 0x3D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x4FF746F6 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x3D73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1207 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0BF6D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xC77BEC288FC88F168427F2F7DA682EADB26CAC89D8D591AF6E443DA98DFF2BBC PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12FA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCBD4ECE900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138C DUP3 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI POP PUSH2 0x139D DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP1 POP PUSH2 0x13C7 DUP5 PUSH5 0xFFFFFFFFFF AND DUP3 DUP5 PUSH2 0x191E JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x18 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 SHL SWAP1 POP PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x1411 DUP5 PUSH2 0x13D1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0xFF AND DUP5 PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST GT ISZERO PUSH2 0x148A JUMPI PUSH2 0x143D DUP5 PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1446 DUP6 PUSH2 0x13D1 JUMP JUMPDEST DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0x78218D2900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1481 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x45DF3F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL SWAP1 POP PUSH1 0x0 PUSH2 0x14DB DUP7 PUSH2 0x1985 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x14F6 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP4 ADD MLOAD AND SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x877A02CB809DA0364D23ADCA3CD50C451B53F279D3DF632E1FC11EB66335BCE5 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP3 SWAP2 SWAP1 PUSH2 0x3EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AB4D119F23076E8AD491BC65CE85F017FB0591DCE08755BA8591059CC51737A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F2 PUSH32 0x0 DUP4 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D69EE57 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x4156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0x4200000000000000000000000000000000000007 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17D6 SWAP3 SWAP2 SWAP1 PUSH2 0x4207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17FF SWAP3 SWAP2 SWAP1 PUSH2 0x4271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1860 PUSH20 0x4200000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1842 SWAP2 SWAP1 PUSH2 0x429D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A2 SWAP1 PUSH2 0x4350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B6 DUP3 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x190D DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x43CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP10 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x1BDC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x192D SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x196F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 SWAP2 POP POP PUSH2 0x197E JUMP JUMPDEST PUSH2 0x197A DUP6 DUP6 DUP6 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x78 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 DUP4 SUB SAR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3B SWAP1 PUSH2 0x4435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACA SWAP2 SWAP1 PUSH2 0x446A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1AF8 DUP7 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP PUSH2 0x1B05 DUP2 DUP7 DUP7 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B1A PUSH2 0x3037 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B25 DUP4 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1B56 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DC2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B7F DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DC2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA8 DUP4 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1B9B JUMPI PUSH2 0x1B9A PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD1 DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD7 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BE8 DUP7 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF6 DUP2 DUP7 DUP7 DUP7 PUSH2 0x1ED8 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 SWAP1 POP PUSH1 0x0 PUSH1 0x18 SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP DUP6 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1C42 JUMPI POP DUP7 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1C81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C78 SWAP1 PUSH2 0x4512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 SHL SWAP5 POP DUP1 DUP6 OR DUP5 SHL SWAP5 POP DUP2 DUP6 OR DUP4 SHL SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CB9 SWAP2 SWAP1 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CDE DUP6 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP11 DUP10 PUSH2 0x1FFE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 DUP4 MLOAD EQ SWAP1 POP DUP1 DUP1 PUSH2 0x1D07 JUMPI POP DUP2 JUMPDEST PUSH2 0x1D46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3D SWAP1 PUSH2 0x457E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1D91 DUP7 PUSH1 0x1 DUP8 PUSH2 0x1D73 SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D84 JUMPI PUSH2 0x1D83 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2413 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DBB PUSH2 0x1DB6 DUP4 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCD DUP3 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 PUSH1 0x0 ADD MLOAD LT PUSH2 0x1E20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E17 SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E2E DUP6 PUSH2 0x2679 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x460A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E5B JUMPI PUSH2 0x1E5A PUSH2 0x460A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1E9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E92 SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1EAD SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x20 DUP5 LT ISZERO PUSH2 0x1ECB JUMPI DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP DUP2 DIV SWAP1 POP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EE8 DUP8 DUP7 DUP7 PUSH2 0x1CCF JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1EFF JUMPI POP PUSH2 0x1EFE DUP7 DUP3 PUSH2 0x2996 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F18 DUP4 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F37 JUMPI PUSH2 0x1F36 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F70 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1F5D PUSH2 0x3065 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F55 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FF2 JUMPI PUSH1 0x0 PUSH2 0x1FA9 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F9C JUMPI PUSH2 0x1F9B PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC5 DUP4 PUSH2 0x1DA8 JUMP JUMPDEST DUP2 MSTORE POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F7C JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x2014 DUP8 PUSH2 0x2A47 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2026 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x0 DUP13 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23C2 JUMPI DUP14 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP DUP4 DUP6 PUSH2 0x2060 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP9 PUSH2 0x206F SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP8 POP PUSH1 0x0 DUP6 SUB PUSH2 0x20CB JUMPI DUP6 DUP4 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x20C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20BD SWAP1 PUSH2 0x4685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x1F DUP4 PUSH1 0x0 ADD MLOAD MLOAD GT PUSH2 0x2127 JUMPI DUP6 PUSH2 0x20E6 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2BEA JUMP JUMPDEST EQ PUSH2 0x2126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211D SWAP1 PUSH2 0x46F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x10 PUSH2 0x213C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x21B1 JUMPI DUP7 MLOAD DUP6 SUB ISZERO PUSH2 0x23C2 JUMPI PUSH1 0x0 DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2165 JUMPI PUSH2 0x2164 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2191 JUMPI PUSH2 0x2190 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x21A4 DUP2 PUSH2 0x2C24 JUMP JUMPDEST SWAP8 POP PUSH1 0x1 SWAP6 POP POP POP PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x2382 JUMPI PUSH1 0x0 PUSH2 0x21C9 DUP5 PUSH2 0x2C62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x21E1 JUMPI PUSH2 0x21E0 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0x2200 SWAP2 SWAP1 PUSH2 0x4740 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x220C SWAP2 SWAP1 PUSH2 0x4771 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x221D DUP5 DUP4 PUSH1 0xFF AND PUSH2 0x2C9B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x222B DUP13 DUP12 PUSH2 0x2C9B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2239 DUP4 DUP4 PUSH2 0x2CDC JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x2256 JUMPI POP PUSH1 0x3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x22B3 JUMPI DUP1 DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x226B JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST ISZERO PUSH2 0x227F JUMPI DUP1 DUP12 PUSH2 0x227C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP11 POP JUMPDEST PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x22CE JUMPI POP PUSH1 0x1 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x2347 JUMPI DUP3 MLOAD DUP2 EQ PUSH2 0x230F JUMPI PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x23C2 JUMP JUMPDEST PUSH2 0x2337 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C24 JUMP JUMPDEST SWAP12 POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2379 SWAP1 PUSH2 0x4818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B4 SWAP1 PUSH2 0x4884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x202F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP7 EQ SWAP1 POP DUP8 PUSH2 0x23FB DUP9 DUP8 PUSH2 0x2C9B JUMP JUMPDEST DUP3 SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x244D DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD MLOAD PUSH2 0x242F SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2440 JUMPI PUSH2 0x243F PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245C PUSH2 0x307F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x2490 DUP5 PUSH2 0x2679 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A7 PUSH2 0x460A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x24BB JUMPI PUSH2 0x24BA PUSH2 0x460A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x24FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F2 SWAP1 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2518 JUMPI PUSH2 0x2517 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2551 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x253E PUSH2 0x307F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2536 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP5 SWAP1 POP JUMPDEST DUP7 PUSH1 0x0 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2669 JUMPI PUSH1 0x20 DUP3 LT PUSH2 0x25AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A1 SWAP1 PUSH2 0x4982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25E8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0x25CB SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP13 PUSH1 0x20 ADD MLOAD PUSH2 0x25E0 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MSTORE POP PUSH2 0x2679 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 PUSH2 0x2604 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP12 PUSH1 0x20 ADD MLOAD PUSH2 0x2619 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MSTORE POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x262F JUMPI PUSH2 0x262E PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP5 PUSH2 0x2647 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP4 POP DUP1 DUP3 PUSH2 0x2655 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP4 PUSH2 0x2660 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x255B JUMP JUMPDEST DUP2 DUP4 MSTORE DUP3 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD GT PUSH2 0x26C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BB SWAP1 PUSH2 0x49EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x26F2 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0xB8 DUP2 LT ISZERO PUSH2 0x2765 JUMPI PUSH1 0x0 PUSH1 0x80 DUP3 PUSH2 0x270A SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2749 SWAP1 PUSH2 0x4A5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2847 JUMPI PUSH1 0x0 PUSH1 0xB7 DUP3 PUSH2 0x277D SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27BC SWAP1 PUSH2 0x4AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x27E3 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x281F SWAP1 PUSH2 0x4B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x2835 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0xF8 DUP2 LT ISZERO PUSH2 0x28BA JUMPI PUSH1 0x0 PUSH1 0xC0 DUP3 PUSH2 0x285F SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x28A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289E SWAP1 PUSH2 0x4B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF7 DUP3 PUSH2 0x28C9 SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2911 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2908 SWAP1 PUSH2 0x4C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x292F SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296B SWAP1 PUSH2 0x4C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x2981 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x29C1 DUP6 PUSH2 0x2679 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29DB JUMPI PUSH2 0x29DA PUSH2 0x460A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29EE JUMPI PUSH2 0x29ED PUSH2 0x460A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2A2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A25 SWAP1 PUSH2 0x4CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A3D DUP6 PUSH1 0x20 ADD MLOAD DUP5 DUP5 PUSH2 0x2D9F JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 MLOAD PUSH2 0x2A59 SWAP2 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A72 JUMPI PUSH2 0x2A71 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BDF JUMPI PUSH1 0x4 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2ACD JUMPI PUSH2 0x2ACC PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR DUP4 PUSH1 0x2 DUP4 PUSH2 0x2B0A SWAP2 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2B1B JUMPI PUSH2 0x2B1A PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B5F JUMPI PUSH2 0x2B5E PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x2B77 SWAP2 SWAP1 PUSH2 0x4740 JUMP JUMPDEST PUSH1 0xF8 SHL DUP4 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x2B8A SWAP2 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH2 0x2B94 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BA5 JUMPI PUSH2 0x2BA4 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2AB0 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD LT ISZERO PUSH2 0x2C08 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x2C1F JUMP JUMPDEST DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2C1C SWAP2 SWAP1 PUSH2 0x4D59 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x20 DUP4 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x2C45 JUMPI PUSH2 0x2C3E DUP4 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x2C4E DUP4 PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2C5A DUP2 PUSH2 0x2BEA JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C94 PUSH2 0x2C8F DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C82 JUMPI PUSH2 0x2C81 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29B1 JUMP JUMPDEST PUSH2 0x2A47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD DUP3 LT PUSH2 0x2CBC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2CD6 JUMP JUMPDEST PUSH2 0x2CD3 DUP4 DUP4 DUP5 DUP7 MLOAD PUSH2 0x2CCE SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST PUSH2 0x2EAE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP1 DUP5 MLOAD GT DUP1 ISZERO PUSH2 0x2CF4 JUMPI POP DUP1 DUP4 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x2D7D JUMPI POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D4E JUMPI PUSH2 0x2D4D PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x2D95 JUMPI DUP1 DUP1 PUSH2 0x2D8D SWAP1 PUSH2 0x4D86 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CE4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBC PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DEF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2E04 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2E95 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 PUSH2 0x2E12 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2E2C SWAP2 SWAP1 PUSH2 0x4DCE JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2E60 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 PUSH2 0x2E44 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 PUSH2 0x2E53 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2E1F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x20 DUP8 DUP2 PUSH2 0x2E76 JUMPI PUSH2 0x2E75 PUSH2 0x4711 JUMP JUMPDEST JUMPDEST MOD PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 DUP3 MLOAD AND DUP2 NOT DUP5 MLOAD AND OR DUP3 MSTORE DUP4 SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EA7 DUP3 PUSH2 0x301A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1F DUP4 PUSH2 0x2EBE SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST LT ISZERO PUSH2 0x2EFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EF6 SWAP1 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 DUP5 PUSH2 0x2F0C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST LT ISZERO PUSH2 0x2F4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F44 SWAP1 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x2F59 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x2F9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F93 SWAP1 PUSH2 0x4EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ISZERO PUSH1 0x0 DUP2 EQ PUSH2 0x2FBD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x300E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x2FFB JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FDE JUMP JUMPDEST POP DUP7 DUP6 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND PUSH1 0x40 MSTORE POP POP POP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3030 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30DE PUSH2 0x30D9 PUSH2 0x30D4 DUP5 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F0 DUP3 PUSH2 0x30C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3102 DUP3 PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3112 DUP2 PUSH2 0x30F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x312D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x314C DUP2 PUSH2 0x3133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3167 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3180 DUP2 PUSH2 0x316D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x319B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3208 DUP3 PUSH2 0x31BF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323A PUSH2 0x31A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3246 DUP3 DUP3 PUSH2 0x31FF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3266 JUMPI PUSH2 0x3265 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH2 0x326F DUP3 PUSH2 0x31BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329E PUSH2 0x3299 DUP5 PUSH2 0x324B JUMP JUMPDEST PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x32BA JUMPI PUSH2 0x32B9 PUSH2 0x31BA JUMP JUMPDEST JUMPDEST PUSH2 0x32C5 DUP5 DUP3 DUP6 PUSH2 0x327C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32E2 JUMPI PUSH2 0x32E1 PUSH2 0x31B5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32F2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x328B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3312 JUMPI PUSH2 0x3311 PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3330 JUMPI PUSH2 0x332F PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x333C DUP6 DUP3 DUP7 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x335D JUMPI PUSH2 0x335C PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x3369 DUP6 DUP3 DUP7 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3389 JUMPI PUSH2 0x3388 PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A7 JUMPI PUSH2 0x33A6 PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x33B3 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C7 DUP3 PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33D7 DUP2 PUSH2 0x33BC JUMP JUMPDEST DUP2 EQ PUSH2 0x33E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33F4 DUP2 PUSH2 0x33CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3410 JUMPI PUSH2 0x340F PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341E DUP5 DUP3 DUP6 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3430 DUP2 PUSH2 0x33BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x344B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x345A DUP2 PUSH2 0x316D JUMP JUMPDEST DUP2 EQ PUSH2 0x3465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3477 DUP2 PUSH2 0x3451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349A DUP2 PUSH2 0x3487 JUMP JUMPDEST DUP2 EQ PUSH2 0x34A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34B7 DUP2 PUSH2 0x3491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D3 JUMPI PUSH2 0x34D2 PUSH2 0x347D JUMP JUMPDEST JUMPDEST PUSH2 0x34DD PUSH1 0xA0 PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34ED DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x3501 DUP5 DUP3 DUP6 ADD PUSH2 0x34A8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3515 DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x3529 DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x354D JUMPI PUSH2 0x354C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3559 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3580 JUMPI PUSH2 0x357F PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35A9 PUSH2 0x35A4 DUP5 PUSH2 0x3565 JUMP JUMPDEST PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x35CC JUMPI PUSH2 0x35CB PUSH2 0x3591 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35F5 JUMPI DUP1 PUSH2 0x35E1 DUP9 DUP3 PUSH2 0x34A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35CE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3614 JUMPI PUSH2 0x3613 PUSH2 0x31B5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3624 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3643 JUMPI PUSH2 0x3642 PUSH2 0x347D JUMP JUMPDEST JUMPDEST PUSH2 0x364D PUSH1 0x40 PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x365D DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3681 JUMPI PUSH2 0x3680 PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x368D DUP5 DUP3 DUP6 ADD PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36AF JUMPI PUSH2 0x36AE PUSH2 0x347D JUMP JUMPDEST JUMPDEST PUSH2 0x36B9 PUSH1 0xA0 PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36C9 DUP5 DUP3 DUP6 ADD PUSH2 0x34A8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36ED JUMPI PUSH2 0x36EC PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x36F9 DUP5 DUP3 DUP6 ADD PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371D JUMPI PUSH2 0x371C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3729 DUP5 DUP3 DUP6 ADD PUSH2 0x362D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x374D JUMPI PUSH2 0x374C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3759 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x377D JUMPI PUSH2 0x377C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3789 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37B1 JUMPI PUSH2 0x37B0 PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37BF DUP9 DUP3 DUP10 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x37D0 DUP9 DUP3 DUP10 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37F1 JUMPI PUSH2 0x37F0 PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x37FD DUP9 DUP3 DUP10 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x380E DUP9 DUP3 DUP10 ADD PUSH2 0x3468 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x382F JUMPI PUSH2 0x382E PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x383B DUP9 DUP3 DUP10 ADD PUSH2 0x3699 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x385E JUMPI PUSH2 0x385D PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x386C DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388A PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3899 DUP5 DUP3 DUP6 ADD PUSH2 0x34A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38B7 DUP2 PUSH2 0x38A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x21726F6F744D616E616765720000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391F PUSH1 0xC DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x392A DUP3 PUSH2 0x38E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394E DUP2 PUSH2 0x3912 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x398F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3974 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A6 DUP3 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x39B0 DUP2 DUP6 PUSH2 0x3960 JUMP JUMPDEST SWAP4 POP PUSH2 0x39C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3971 JUMP JUMPDEST PUSH2 0x39C9 DUP2 PUSH2 0x31BF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39EE DUP2 DUP7 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3A02 DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3A11 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x21414D4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4F PUSH1 0x4 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A5A DUP3 PUSH2 0x3A19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A7E DUP2 PUSH2 0x3A42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9F DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3AAE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x216D6972726F72436F6E6E6563746F7200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AEB PUSH1 0x10 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AF6 DUP3 PUSH2 0x3AB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B1A DUP2 PUSH2 0x3ADE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2174686973000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B57 PUSH1 0x5 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B62 DUP3 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B86 DUP2 PUSH2 0x3B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2170726F6F660000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC3 PUSH1 0x6 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BCE DUP3 PUSH2 0x3B8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BF2 DUP2 PUSH2 0x3BB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C4B DUP3 PUSH2 0x3BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C56 DUP4 PUSH2 0x3BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C7A JUMPI PUSH2 0x3C79 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C89 DUP2 PUSH2 0x3487 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CA4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3143 JUMP JUMPDEST PUSH2 0x3CB1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDE DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE9 DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3D01 JUMPI PUSH2 0x3D00 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x216C656E67746800000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3D PUSH1 0x7 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D48 DUP3 PUSH2 0x3D07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D6C DUP2 PUSH2 0x3D30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D8D DUP2 DUP5 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3DAA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3427 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3DBC DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3DCB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3143 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3427 JUMP JUMPDEST PUSH2 0x3DF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E11 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3427 JUMP JUMPDEST PUSH2 0x3E1E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3427 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E30 DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E3F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E53 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x3E5E DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E76 JUMPI PUSH2 0x3E75 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E97 PUSH2 0x3E92 PUSH2 0x3E8D DUP5 PUSH2 0x3BF9 JUMP JUMPDEST PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x316D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA7 DUP2 PUSH2 0x3E7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3EC2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3ECF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3EDC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3177 JUMP JUMPDEST PUSH2 0x3EE9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F07 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3177 JUMP JUMPDEST PUSH2 0x3F14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3F24 DUP2 PUSH2 0x316D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3F33 DUP2 PUSH2 0x3487 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F55 DUP3 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x3F5F DUP2 DUP6 PUSH2 0x3F39 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F6F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3971 JUMP JUMPDEST PUSH2 0x3F78 DUP2 PUSH2 0x31BF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3F9B PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3FAE PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x3F2A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3FC1 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x3FD4 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x3FEC DUP3 DUP3 PUSH2 0x3F4A JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4031 DUP4 DUP4 PUSH2 0x3F2A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4055 DUP3 PUSH2 0x3FF9 JUMP JUMPDEST PUSH2 0x405F DUP2 DUP6 PUSH2 0x4004 JUMP JUMPDEST SWAP4 POP PUSH2 0x406A DUP4 PUSH2 0x4015 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x409B JUMPI DUP2 MLOAD PUSH2 0x4082 DUP9 DUP3 PUSH2 0x4025 JUMP JUMPDEST SWAP8 POP PUSH2 0x408D DUP4 PUSH2 0x403D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x406E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x40C0 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x40D8 DUP3 DUP3 PUSH2 0x404A JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x40FA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C80 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x410C DUP2 DUP6 PUSH2 0x3F83 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4120 DUP2 DUP5 PUSH2 0x40A8 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4133 DUP2 PUSH2 0x38A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x413E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4150 DUP2 PUSH2 0x412A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x416C JUMPI PUSH2 0x416B PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x417A DUP5 DUP3 DUP6 ADD PUSH2 0x4141 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4199 DUP3 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x41A3 DUP2 DUP6 PUSH2 0x4183 JUMP JUMPDEST SWAP4 POP PUSH2 0x41B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3971 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D7 DUP3 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E9 DUP3 PUSH2 0x41CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4201 PUSH2 0x41FC DUP3 PUSH2 0x33BC JUMP JUMPDEST PUSH2 0x41DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4213 DUP3 DUP6 PUSH2 0x418E JUMP JUMPDEST SWAP2 POP PUSH2 0x421F DUP3 DUP5 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424A PUSH2 0x4245 DUP3 PUSH2 0x3487 JUMP JUMPDEST PUSH2 0x422F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x426B PUSH2 0x4266 DUP3 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x4250 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427D DUP3 DUP6 PUSH2 0x4239 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x428D DUP3 DUP5 PUSH2 0x425A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A9 DUP3 DUP5 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6573736167652070617373696E67207072656465706C6F7920686173206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206265656E20696E697469616C697A6564206F7220696E76616C6964207072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F662070726F76696465642E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433A PUSH1 0x4D DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4345 DUP3 PUSH2 0x42B8 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4369 DUP2 PUSH2 0x432D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437C DUP3 DUP5 PUSH2 0x4239 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B0 DUP3 PUSH2 0x4398 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43C8 PUSH2 0x43C3 DUP3 PUSH2 0x438B JUMP JUMPDEST PUSH2 0x43A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43DA DUP3 DUP5 PUSH2 0x43B7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2162726964676500000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441F PUSH1 0x7 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x442A DUP3 PUSH2 0x43E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x444E DUP2 PUSH2 0x4412 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4464 DUP2 PUSH2 0x33CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4480 JUMPI PUSH2 0x447F PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x448E DUP5 DUP3 DUP6 ADD PUSH2 0x4455 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x217472756E636174656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44FC PUSH1 0xA DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4507 DUP3 PUSH2 0x44C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x452B DUP2 PUSH2 0x44EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F76696465642070726F6F6620697320696E76616C69642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4568 PUSH1 0x1A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4573 DUP3 PUSH2 0x4532 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4597 DUP2 PUSH2 0x455B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C5020627974657333322076616C75652E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D4 PUSH1 0x1A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x45DF DUP3 PUSH2 0x459E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4603 DUP2 PUSH2 0x45C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420726F6F742068617368000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466F PUSH1 0x11 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x467A DUP3 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x469E DUP2 PUSH2 0x4662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E7465726E616C206E6F64652068617368000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46DB PUSH1 0x1A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E6 DUP3 PUSH2 0x46A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x470A DUP2 PUSH2 0x46CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x474B DUP3 PUSH2 0x438B JUMP JUMPDEST SWAP2 POP PUSH2 0x4756 DUP4 PUSH2 0x438B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4766 JUMPI PUSH2 0x4765 PUSH2 0x4711 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477C DUP3 PUSH2 0x438B JUMP JUMPDEST SWAP2 POP PUSH2 0x4787 DUP4 PUSH2 0x438B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x47A0 JUMPI PUSH2 0x479F PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656365697665642061206E6F6465207769746820616E20756E6B6E6F776E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7072656669780000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4802 PUSH1 0x26 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x480D DUP3 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4831 DUP2 PUSH2 0x47F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563656976656420616E20756E706172736561626C65206E6F64652E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486E PUSH1 0x1D DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4879 DUP3 PUSH2 0x4838 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x489D DUP2 PUSH2 0x4861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6973742076616C75652E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48DA PUSH1 0x17 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x48E5 DUP3 PUSH2 0x48A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4909 DUP2 PUSH2 0x48CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F766964656420524C50206C6973742065786365656473206D6178206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374206C656E6774682E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496C PUSH1 0x2A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4977 DUP3 PUSH2 0x4910 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x499B DUP2 PUSH2 0x495F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x524C50206974656D2063616E6E6F74206265206E756C6C2E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D8 PUSH1 0x18 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E3 DUP3 PUSH2 0x49A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A07 DUP2 PUSH2 0x49CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F727420737472696E672E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A44 PUSH1 0x19 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A4F DUP3 PUSH2 0x4A0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A73 DUP2 PUSH2 0x4A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E67206C656E6774682E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB0 PUSH1 0x1F DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ABB DUP3 PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ADF DUP2 PUSH2 0x4AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E672E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1C PUSH1 0x18 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B27 DUP3 PUSH2 0x4AE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B4B DUP2 PUSH2 0x4B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F7274206C6973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B88 PUSH1 0x17 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B93 DUP3 PUSH2 0x4B52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB7 DUP2 PUSH2 0x4B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C697374206C656E6774682E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF4 PUSH1 0x1D DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BFF DUP3 PUSH2 0x4BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C23 DUP2 PUSH2 0x4BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C6973742E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C60 PUSH1 0x16 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C6B DUP3 PUSH2 0x4C2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C8F DUP2 PUSH2 0x4C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502062797465732076616C75652E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCC PUSH1 0x18 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD7 DUP3 PUSH2 0x4C96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CFB DUP2 PUSH2 0x4CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0D DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x4D18 DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4D26 DUP2 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4D3D JUMPI PUSH2 0x4D3C PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D53 DUP2 PUSH2 0x3491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D6F JUMPI PUSH2 0x4D6E PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D7D DUP5 DUP3 DUP6 ADD PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D91 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4DC3 JUMPI PUSH2 0x4DC2 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD9 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x4DE4 DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4DF4 JUMPI PUSH2 0x4DF3 PUSH2 0x4711 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E35 PUSH1 0xE DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E40 DUP3 PUSH2 0x4DFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E64 DUP2 PUSH2 0x4E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736C6963655F6F75744F66426F756E6473000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA1 PUSH1 0x11 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EAC DUP3 PUSH2 0x4E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ED0 DUP2 PUSH2 0x4E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDA 0xD 0xE3 0xBE 0xB9 0xBF MULMOD CREATE2 BLOCKHASH LOG0 DUP14 0x24 GASLIMIT INVALID 0xA7 PUSH20 0x53D2F7C504120329440FF8B54409E264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"724:7364:4:-:0;;;1476:367;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1756:7;311::3;1681::4;1690:13;1705:4;1711:12;1725:16;1355:7:2;1364:13;1379:4;1385:12;1399:16;3038:21:0::1;3048:10;3038:9;;;:21;;:::i;:::-;3116:1;3105:7;:12;;::::0;3097:37:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3172:1;3148:26;;:12;:26;;::::0;3140:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3317:7;3308:16;;;;;;;;::::0;::::1;3336:4;3330:10;;;;;;;;::::0;::::1;3361:12;3346:27;;;;;;;;::::0;::::1;3395:13;3379:29;;;;;;;;::::0;::::1;3477:1;3449:30;;:16;:30;;;3445:88;;3489:37;3509:16;3489:19;;;:37;;:::i;:::-;3445:88;3566:13;3544:74;;3557:7;3544:74;;;3581:4;3587:12;3601:16;3544:74;;;;;;;;:::i;:::-;;;;;;;;2857:766:::0;;;;;1209:210:2;;;;;791:19:1;802:7;791:10;;;:19;;:::i;:::-;756:59;275:47:3;1816:21:4::2;1771:67;;;;;;;;::::0;::::2;1476:367:::0;;;;;;;724:7364;;4981:185:15;5067:8;5038:38;;5059:6;;;;;;;;;;5038:38;;;;;;;;;;;;5091:8;5082:6;;:17;;;;;;;;;;;;;;;;;;5112:27;5105:34;;;5152:9;;5145:16;;;;;;;;;;;4981:185;:::o;5838::0:-;5921:57;5944:15;;;;;;;;;;;5961:16;5921:57;;;;;;;:::i;:::-;;;;;;;;6002:16;5984:15;;:34;;;;;;;;;;;;;;;;;;5838:185;:::o;1089:114:1:-;1146:30;1160:6;;1168:7;1146:30;;;;;;;:::i;:::-;;;;;;;;1191:7;1182:6;:16;;;;1089:114;:::o;88:117:18:-;197:1;194;187:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:141::-;615:5;646:6;640:13;631:22;;662:32;688:5;662:32;:::i;:::-;559:141;;;;:::o;706:126::-;743:7;783:42;776:5;772:54;761:65;;706:126;;;:::o;838:96::-;875:7;904:24;922:5;904:24;:::i;:::-;893:35;;838:96;;;:::o;940:122::-;1013:24;1031:5;1013:24;:::i;:::-;1006:5;1003:35;993:63;;1052:1;1049;1042:12;993:63;940:122;:::o;1068:143::-;1125:5;1156:6;1150:13;1141:22;;1172:33;1199:5;1172:33;:::i;:::-;1068:143;;;;:::o;1217:77::-;1254:7;1283:5;1272:16;;1217:77;;;:::o;1300:122::-;1373:24;1391:5;1373:24;:::i;:::-;1366:5;1363:35;1353:63;;1412:1;1409;1402:12;1353:63;1300:122;:::o;1428:143::-;1485:5;1516:6;1510:13;1501:22;;1532:33;1559:5;1532:33;:::i;:::-;1428:143;;;;:::o;1577:1287::-;1699:6;1707;1715;1723;1731;1739;1747;1796:3;1784:9;1775:7;1771:23;1767:33;1764:120;;;1803:79;;:::i;:::-;1764:120;1923:1;1948:63;2003:7;1994:6;1983:9;1979:22;1948:63;:::i;:::-;1938:73;;1894:127;2060:2;2086:63;2141:7;2132:6;2121:9;2117:22;2086:63;:::i;:::-;2076:73;;2031:128;2198:2;2224:64;2280:7;2271:6;2260:9;2256:22;2224:64;:::i;:::-;2214:74;;2169:129;2337:2;2363:64;2419:7;2410:6;2399:9;2395:22;2363:64;:::i;:::-;2353:74;;2308:129;2476:3;2503:64;2559:7;2550:6;2539:9;2535:22;2503:64;:::i;:::-;2493:74;;2447:130;2616:3;2643:64;2699:7;2690:6;2679:9;2675:22;2643:64;:::i;:::-;2633:74;;2587:130;2756:3;2783:64;2839:7;2830:6;2819:9;2815:22;2783:64;:::i;:::-;2773:74;;2727:130;1577:1287;;;;;;;;;;:::o;2870:169::-;2954:11;2988:6;2983:3;2976:19;3028:4;3023:3;3019:14;3004:29;;2870:169;;;;:::o;3045:162::-;3185:14;3181:1;3173:6;3169:14;3162:38;3045:162;:::o;3213:366::-;3355:3;3376:67;3440:2;3435:3;3376:67;:::i;:::-;3369:74;;3452:93;3541:3;3452:93;:::i;:::-;3570:2;3565:3;3561:12;3554:19;;3213:366;;;:::o;3585:419::-;3751:4;3789:2;3778:9;3774:18;3766:26;;3838:9;3832:4;3828:20;3824:1;3813:9;3809:17;3802:47;3866:131;3992:4;3866:131;:::i;:::-;3858:139;;3585:419;;;:::o;4010:167::-;4150:19;4146:1;4138:6;4134:14;4127:43;4010:167;:::o;4183:366::-;4325:3;4346:67;4410:2;4405:3;4346:67;:::i;:::-;4339:74;;4422:93;4511:3;4422:93;:::i;:::-;4540:2;4535:3;4531:12;4524:19;;4183:366;;;:::o;4555:419::-;4721:4;4759:2;4748:9;4744:18;4736:26;;4808:9;4802:4;4798:20;4794:1;4783:9;4779:17;4772:47;4836:131;4962:4;4836:131;:::i;:::-;4828:139;;4555:419;;;:::o;4980:118::-;5067:24;5085:5;5067:24;:::i;:::-;5062:3;5055:37;4980:118;;:::o;5104:442::-;5253:4;5291:2;5280:9;5276:18;5268:26;;5304:71;5372:1;5361:9;5357:17;5348:6;5304:71;:::i;:::-;5385:72;5453:2;5442:9;5438:18;5429:6;5385:72;:::i;:::-;5467;5535:2;5524:9;5520:18;5511:6;5467:72;:::i;:::-;5104:442;;;;;;:::o;5552:332::-;5673:4;5711:2;5700:9;5696:18;5688:26;;5724:71;5792:1;5781:9;5777:17;5768:6;5724:71;:::i;:::-;5805:72;5873:2;5862:9;5858:18;5849:6;5805:72;:::i;:::-;5552:332;;;;;:::o;5890:118::-;5977:24;5995:5;5977:24;:::i;:::-;5972:3;5965:37;5890:118;;:::o;6014:332::-;6135:4;6173:2;6162:9;6158:18;6150:26;;6186:71;6254:1;6243:9;6239:17;6230:6;6186:71;:::i;:::-;6267:72;6335:2;6324:9;6320:18;6311:6;6267:72;:::i;:::-;6014:332;;;;;:::o;724:7364:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@AMB_36":{"entryPoint":4196,"id":36,"parameterSlots":0,"returnSlots":0},"@DOMAIN_33":{"entryPoint":1696,"id":33,"parameterSlots":0,"returnSlots":0},"@MIRROR_DOMAIN_42":{"entryPoint":1224,"id":42,"parameterSlots":0,"returnSlots":0},"@ROOT_MANAGER_39":{"entryPoint":1877,"id":39,"parameterSlots":0,"returnSlots":0},"@_151":{"entryPoint":null,"id":151,"parameterSlots":0,"returnSlots":0},"@_copy_2581":{"entryPoint":11679,"id":2581,"parameterSlots":3,"returnSlots":1},"@_copy_2599":{"entryPoint":12314,"id":2599,"parameterSlots":1,"returnSlots":1},"@_decodeLength_2498":{"entryPoint":9849,"id":2498,"parameterSlots":1,"returnSlots":3},"@_encodeXDomainCalldata_820":{"entryPoint":4833,"id":820,"parameterSlots":4,"returnSlots":1},"@_getNodeID_1669":{"entryPoint":11300,"id":1669,"parameterSlots":1,"returnSlots":1},"@_getNodePath_1690":{"entryPoint":11362,"id":1690,"parameterSlots":1,"returnSlots":1},"@_getNodeValue_1712":{"entryPoint":9235,"id":1712,"parameterSlots":1,"returnSlots":1},"@_getSecureKey_2678":{"entryPoint":7327,"id":2678,"parameterSlots":1,"returnSlots":1},"@_getSharedNibbleLength_1751":{"entryPoint":11484,"id":1751,"parameterSlots":2,"returnSlots":1},"@_parseProof_1630":{"entryPoint":7947,"id":1630,"parameterSlots":1,"returnSlots":1},"@_processMessage_214":{"entryPoint":4624,"id":214,"parameterSlots":1,"returnSlots":0},"@_sendMessage_567":{"entryPoint":4250,"id":567,"parameterSlots":2,"returnSlots":0},"@_setGasCap_292":{"entryPoint":5619,"id":292,"parameterSlots":1,"returnSlots":0},"@_setMirrorConnector_237":{"entryPoint":4674,"id":237,"parameterSlots":1,"returnSlots":0},"@_setOwner_3086":{"entryPoint":5387,"id":3086,"parameterSlots":1,"returnSlots":0},"@_setProposed_3105":{"entryPoint":5688,"id":3105,"parameterSlots":1,"returnSlots":0},"@_verifySender_409":{"entryPoint":6612,"id":409,"parameterSlots":2,"returnSlots":1},"@_verifySender_527":{"entryPoint":5830,"id":527,"parameterSlots":1,"returnSlots":1},"@_verifyStateRootProof_707":{"entryPoint":5881,"id":707,"parameterSlots":1,"returnSlots":1},"@_verifyStorageProof_796":{"entryPoint":6060,"id":796,"parameterSlots":2,"returnSlots":1},"@_verifyXDomainMessage_687":{"entryPoint":4993,"id":687,"parameterSlots":2,"returnSlots":1},"@_walkNodePath_1554":{"entryPoint":8190,"id":1554,"parameterSlots":3,"returnSlots":3},"@acceptProposedOwner_3065":{"entryPoint":3777,"id":3065,"parameterSlots":0,"returnSlots":0},"@build_3521":{"entryPoint":6430,"id":3521,"parameterSlots":3,"returnSlots":1},"@decodeEVMAccount_1814":{"entryPoint":6930,"id":1814,"parameterSlots":1,"returnSlots":1},"@delay_2932":{"entryPoint":1913,"id":2932,"parameterSlots":0,"returnSlots":1},"@equal_1091":{"entryPoint":10646,"id":1091,"parameterSlots":2,"returnSlots":1},"@get_1243":{"entryPoint":7375,"id":1243,"parameterSlots":3,"returnSlots":2},"@get_2662":{"entryPoint":6889,"id":2662,"parameterSlots":3,"returnSlots":2},"@index_3808":{"entryPoint":5105,"id":3808,"parameterSlots":3,"returnSlots":1},"@leftMask_3298":{"entryPoint":6565,"id":3298,"parameterSlots":1,"returnSlots":1},"@len_3621":{"entryPoint":5073,"id":3621,"parameterSlots":1,"returnSlots":1},"@loc_3571":{"entryPoint":6533,"id":3571,"parameterSlots":1,"returnSlots":1},"@mirrorConnector_45":{"entryPoint":4030,"id":45,"parameterSlots":0,"returnSlots":0},"@owner_2905":{"entryPoint":3275,"id":2905,"parameterSlots":0,"returnSlots":1},"@processMessageFromRoot_665":{"entryPoint":1924,"id":665,"parameterSlots":5,"returnSlots":0},"@processMessage_183":{"entryPoint":1485,"id":183,"parameterSlots":1,"returnSlots":0},"@processed_479":{"entryPoint":3745,"id":479,"parameterSlots":0,"returnSlots":0},"@proposeNewOwner_3019":{"entryPoint":3316,"id":3019,"parameterSlots":1,"returnSlots":0},"@proposedTimestamp_2923":{"entryPoint":1260,"id":2923,"parameterSlots":0,"returnSlots":1},"@proposed_2914":{"entryPoint":4068,"id":2914,"parameterSlots":0,"returnSlots":1},"@readBytes32_2147":{"entryPoint":7639,"id":2147,"parameterSlots":1,"returnSlots":1},"@readBytes_2048":{"entryPoint":10673,"id":2048,"parameterSlots":1,"returnSlots":1},"@readList_1995":{"entryPoint":9346,"id":1995,"parameterSlots":1,"returnSlots":1},"@readList_2012":{"entryPoint":7592,"id":2012,"parameterSlots":1,"returnSlots":1},"@readRawBytes_2319":{"entryPoint":11932,"id":2319,"parameterSlots":1,"returnSlots":1},"@readUint256_2179":{"entryPoint":7618,"id":2179,"parameterSlots":1,"returnSlots":1},"@ref_3547":{"entryPoint":5030,"id":3547,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_3052":{"entryPoint":2716,"id":3052,"parameterSlots":0,"returnSlots":0},"@renounced_2988":{"entryPoint":4110,"id":2988,"parameterSlots":0,"returnSlots":1},"@sendMessage_365":{"entryPoint":1270,"id":365,"parameterSlots":2,"returnSlots":0},"@setGasCap_276":{"entryPoint":3130,"id":276,"parameterSlots":1,"returnSlots":0},"@setMirrorConnector_164":{"entryPoint":1732,"id":164,"parameterSlots":1,"returnSlots":0},"@slice_870":{"entryPoint":11950,"id":870,"parameterSlots":3,"returnSlots":1},"@slice_900":{"entryPoint":11419,"id":900,"parameterSlots":2,"returnSlots":1},"@stateCommitmentChain_475":{"entryPoint":1188,"id":475,"parameterSlots":0,"returnSlots":0},"@toBytes32_928":{"entryPoint":11242,"id":928,"parameterSlots":1,"returnSlots":1},"@toNibbles_1013":{"entryPoint":10823,"id":1013,"parameterSlots":1,"returnSlots":1},"@toRLPItem_1889":{"entryPoint":9300,"id":1889,"parameterSlots":1,"returnSlots":1},"@unsafeBuildUnchecked_3486":{"entryPoint":7169,"id":3486,"parameterSlots":3,"returnSlots":1},"@verifyInclusionProof_1173":{"entryPoint":7896,"id":1173,"parameterSlots":4,"returnSlots":1},"@verifyInclusionProof_2634":{"entryPoint":7132,"id":2634,"parameterSlots":4,"returnSlots":1},"@verifySender_196":{"entryPoint":4232,"id":196,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":13718,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":12939,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":13285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":17493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":13823,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":16705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":13480,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":19780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":13005,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_ChainBatchHeader_$2752_memory_ptr":{"entryPoint":13501,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_ChainInclusionProof_$2758_memory_ptr":{"entryPoint":13869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_L2MessageInclusionProof_$2771_memory_ptr":{"entryPoint":13977,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":13306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":17514,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptrt_uint256t_struct$_L2MessageInclusionProof_$2771_memory_ptr":{"entryPoint":14229,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":16726,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":14453,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":19801,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":13171,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":13051,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":14408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":16421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":13351,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":16880,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16458,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":14510,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":16170,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":15488,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":16953,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr":{"entryPoint":16202,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14747,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16782,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_contract$_IStateCommitmentChain_$2848_to_t_address_fromStack":{"entryPoint":12553,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack":{"entryPoint":15178,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack":{"entryPoint":19431,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack":{"entryPoint":17755,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack":{"entryPoint":19539,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack":{"entryPoint":17197,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack":{"entryPoint":18529,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack":{"entryPoint":19107,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack":{"entryPoint":18783,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack":{"entryPoint":17426,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack":{"entryPoint":17647,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack":{"entryPoint":20008,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack":{"entryPoint":15286,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack":{"entryPoint":17863,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack":{"entryPoint":15070,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack":{"entryPoint":18637,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack":{"entryPoint":18999,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack":{"entryPoint":18421,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack":{"entryPoint":14914,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack":{"entryPoint":18891,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack":{"entryPoint":20116,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack":{"entryPoint":15664,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack":{"entryPoint":19215,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack":{"entryPoint":18126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack":{"entryPoint":19647,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack":{"entryPoint":14610,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack":{"entryPoint":18018,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack":{"entryPoint":19323,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_ChainBatchHeader_$2752_memory_ptr_to_t_struct$_ChainBatchHeader_$2752_memory_ptr_fromStack":{"entryPoint":16259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_ChainInclusionProof_$2758_memory_ptr_to_t_struct$_ChainInclusionProof_$2758_memory_ptr_fromStack":{"entryPoint":16552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":16155,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":16986,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12611,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack":{"entryPoint":17335,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":16030,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":17053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":17264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":17009,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":16903,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_uint8__to_t_uint8__nonPadded_inplace_fromStack_reversed":{"entryPoint":17358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":13366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":15827,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":15868,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed":{"entryPoint":15765,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":14525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":15544,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_struct$_ChainBatchHeader_$2752_memory_ptr_t_struct$_ChainInclusionProof_$2758_memory_ptr__to_t_bytes32_t_struct$_ChainBatchHeader_$2752_memory_ptr_t_struct$_ChainInclusionProof_$2758_memory_ptr__fromStack_reversed":{"entryPoint":16613,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":15731,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed":{"entryPoint":14981,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed":{"entryPoint":14804,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_contract$_IStateCommitmentChain_$2848__to_t_address__fromStack_reversed":{"entryPoint":12568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15213,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19466,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17790,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19574,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17232,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18564,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19142,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18818,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17461,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17682,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15321,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17898,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15105,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19034,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14949,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18926,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20151,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19250,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19682,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14645,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18053,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19358,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16114,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":12626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed":{"entryPoint":15503,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":16045,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":12848,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12705,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":13669,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":12875,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16405,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16377,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14677,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16445,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":16388,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr":{"entryPoint":16185,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14688,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":16771,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14552,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":15944,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":19918,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":19714,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":15571,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":18289,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":15424,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":13244,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":14498,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13447,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12441,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12653,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":12595,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":17291,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":15353,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_IStateCommitmentChain_$2848_to_t_address":{"entryPoint":12535,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":12517,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":12483,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":15996,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":12924,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14705,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":12799,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":12473,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":19846,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":16862,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":16943,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":16844,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":16976,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint8":{"entryPoint":17317,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint8":{"entryPoint":18240,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15377,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":18193,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":17930,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17559,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":12752,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":12725,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":13437,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":13442,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":13713,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":12730,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12720,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12715,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12735,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_248":{"entryPoint":17304,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":16831,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033":{"entryPoint":15137,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da":{"entryPoint":19390,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403":{"entryPoint":17714,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a":{"entryPoint":19498,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492":{"entryPoint":17080,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40":{"entryPoint":18488,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67":{"entryPoint":19066,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1":{"entryPoint":18704,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c":{"entryPoint":17385,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728":{"entryPoint":17606,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e":{"entryPoint":19967,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec":{"entryPoint":15245,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5":{"entryPoint":17822,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d":{"entryPoint":15029,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a":{"entryPoint":18596,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975":{"entryPoint":18958,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc":{"entryPoint":18342,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e":{"entryPoint":14873,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29":{"entryPoint":18850,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0":{"entryPoint":20075,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1":{"entryPoint":15623,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b":{"entryPoint":19174,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b":{"entryPoint":18085,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554":{"entryPoint":19606,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2":{"entryPoint":14569,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c":{"entryPoint":17977,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1":{"entryPoint":19282,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":13262,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":16682,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":13457,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13393,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:61093:18","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:18","statements":[{"nodeType":"YulAssignment","src":"62:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:18"},"nodeType":"YulFunctionCall","src":"73:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:18","type":""}],"src":"7:126:18"},{"body":{"nodeType":"YulBlock","src":"171:28:18","statements":[{"nodeType":"YulAssignment","src":"181:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"188:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"181:3:18"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"157:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"167:3:18","type":""}],"src":"139:60:18"},{"body":{"nodeType":"YulBlock","src":"265:82:18","statements":[{"nodeType":"YulAssignment","src":"275:66:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"333:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"315:17:18"},"nodeType":"YulFunctionCall","src":"315:24:18"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"306:8:18"},"nodeType":"YulFunctionCall","src":"306:34:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"288:17:18"},"nodeType":"YulFunctionCall","src":"288:53:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"275:9:18"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"245:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"255:9:18","type":""}],"src":"205:142:18"},{"body":{"nodeType":"YulBlock","src":"413:66:18","statements":[{"nodeType":"YulAssignment","src":"423:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"467:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"436:30:18"},"nodeType":"YulFunctionCall","src":"436:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"423:9:18"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"393:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"403:9:18","type":""}],"src":"353:126:18"},{"body":{"nodeType":"YulBlock","src":"575:66:18","statements":[{"nodeType":"YulAssignment","src":"585:50:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"629:5:18"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"598:30:18"},"nodeType":"YulFunctionCall","src":"598:37:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"585:9:18"}]}]},"name":"convert_t_contract$_IStateCommitmentChain_$2848_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"555:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"565:9:18","type":""}],"src":"485:156:18"},{"body":{"nodeType":"YulBlock","src":"742:96:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"759:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"825:5:18"}],"functionName":{"name":"convert_t_contract$_IStateCommitmentChain_$2848_to_t_address","nodeType":"YulIdentifier","src":"764:60:18"},"nodeType":"YulFunctionCall","src":"764:67:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"752:6:18"},"nodeType":"YulFunctionCall","src":"752:80:18"},"nodeType":"YulExpressionStatement","src":"752:80:18"}]},"name":"abi_encode_t_contract$_IStateCommitmentChain_$2848_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"730:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"737:3:18","type":""}],"src":"647:191:18"},{"body":{"nodeType":"YulBlock","src":"972:154:18","statements":[{"nodeType":"YulAssignment","src":"982:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"994:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"990:3:18"},"nodeType":"YulFunctionCall","src":"990:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"982:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1092:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1105:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1116:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1101:3:18"},"nodeType":"YulFunctionCall","src":"1101:17:18"}],"functionName":{"name":"abi_encode_t_contract$_IStateCommitmentChain_$2848_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1018:73:18"},"nodeType":"YulFunctionCall","src":"1018:101:18"},"nodeType":"YulExpressionStatement","src":"1018:101:18"}]},"name":"abi_encode_tuple_t_contract$_IStateCommitmentChain_$2848__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"944:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"956:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"967:4:18","type":""}],"src":"844:282:18"},{"body":{"nodeType":"YulBlock","src":"1176:49:18","statements":[{"nodeType":"YulAssignment","src":"1186:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1201:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1208:10:18","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1197:3:18"},"nodeType":"YulFunctionCall","src":"1197:22:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1186:7:18"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1158:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1168:7:18","type":""}],"src":"1132:93:18"},{"body":{"nodeType":"YulBlock","src":"1294:52:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1311:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1333:5:18"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1316:16:18"},"nodeType":"YulFunctionCall","src":"1316:23:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1304:6:18"},"nodeType":"YulFunctionCall","src":"1304:36:18"},"nodeType":"YulExpressionStatement","src":"1304:36:18"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1282:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1289:3:18","type":""}],"src":"1231:115:18"},{"body":{"nodeType":"YulBlock","src":"1448:122:18","statements":[{"nodeType":"YulAssignment","src":"1458:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1470:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1481:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1466:3:18"},"nodeType":"YulFunctionCall","src":"1466:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1458:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1536:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1549:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1560:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1545:3:18"},"nodeType":"YulFunctionCall","src":"1545:17:18"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"1494:41:18"},"nodeType":"YulFunctionCall","src":"1494:69:18"},"nodeType":"YulExpressionStatement","src":"1494:69:18"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1420:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1432:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1443:4:18","type":""}],"src":"1352:218:18"},{"body":{"nodeType":"YulBlock","src":"1621:32:18","statements":[{"nodeType":"YulAssignment","src":"1631:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1642:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1631:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1603:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1613:7:18","type":""}],"src":"1576:77:18"},{"body":{"nodeType":"YulBlock","src":"1724:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1741:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1764:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1746:17:18"},"nodeType":"YulFunctionCall","src":"1746:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1734:6:18"},"nodeType":"YulFunctionCall","src":"1734:37:18"},"nodeType":"YulExpressionStatement","src":"1734:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1712:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1719:3:18","type":""}],"src":"1659:118:18"},{"body":{"nodeType":"YulBlock","src":"1881:124:18","statements":[{"nodeType":"YulAssignment","src":"1891:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1903:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1914:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1899:3:18"},"nodeType":"YulFunctionCall","src":"1899:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1891:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1971:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1984:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1995:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1980:3:18"},"nodeType":"YulFunctionCall","src":"1980:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1927:43:18"},"nodeType":"YulFunctionCall","src":"1927:71:18"},"nodeType":"YulExpressionStatement","src":"1927:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1853:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1865:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1876:4:18","type":""}],"src":"1783:222:18"},{"body":{"nodeType":"YulBlock","src":"2051:35:18","statements":[{"nodeType":"YulAssignment","src":"2061:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2077:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2071:5:18"},"nodeType":"YulFunctionCall","src":"2071:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2061:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2044:6:18","type":""}],"src":"2011:75:18"},{"body":{"nodeType":"YulBlock","src":"2181:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2198:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2201:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2191:6:18"},"nodeType":"YulFunctionCall","src":"2191:12:18"},"nodeType":"YulExpressionStatement","src":"2191:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2092:117:18"},{"body":{"nodeType":"YulBlock","src":"2304:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2321:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2324:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2314:6:18"},"nodeType":"YulFunctionCall","src":"2314:12:18"},"nodeType":"YulExpressionStatement","src":"2314:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2215:117:18"},{"body":{"nodeType":"YulBlock","src":"2427:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2444:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2447:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2437:6:18"},"nodeType":"YulFunctionCall","src":"2437:12:18"},"nodeType":"YulExpressionStatement","src":"2437:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2338:117:18"},{"body":{"nodeType":"YulBlock","src":"2550:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2567:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2570:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2560:6:18"},"nodeType":"YulFunctionCall","src":"2560:12:18"},"nodeType":"YulExpressionStatement","src":"2560:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"2461:117:18"},{"body":{"nodeType":"YulBlock","src":"2632:54:18","statements":[{"nodeType":"YulAssignment","src":"2642:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2660:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2667:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2656:3:18"},"nodeType":"YulFunctionCall","src":"2656:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2676:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2672:3:18"},"nodeType":"YulFunctionCall","src":"2672:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2652:3:18"},"nodeType":"YulFunctionCall","src":"2652:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2642:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2615:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2625:6:18","type":""}],"src":"2584:102:18"},{"body":{"nodeType":"YulBlock","src":"2720:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2737:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2740:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2730:6:18"},"nodeType":"YulFunctionCall","src":"2730:88:18"},"nodeType":"YulExpressionStatement","src":"2730:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2834:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2837:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2827:6:18"},"nodeType":"YulFunctionCall","src":"2827:15:18"},"nodeType":"YulExpressionStatement","src":"2827:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2858:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2861:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2851:6:18"},"nodeType":"YulFunctionCall","src":"2851:15:18"},"nodeType":"YulExpressionStatement","src":"2851:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2692:180:18"},{"body":{"nodeType":"YulBlock","src":"2921:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2931:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2953:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2983:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2961:21:18"},"nodeType":"YulFunctionCall","src":"2961:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2949:3:18"},"nodeType":"YulFunctionCall","src":"2949:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2935:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3100:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3102:16:18"},"nodeType":"YulFunctionCall","src":"3102:18:18"},"nodeType":"YulExpressionStatement","src":"3102:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3043:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"3055:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3040:2:18"},"nodeType":"YulFunctionCall","src":"3040:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3079:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3091:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3076:2:18"},"nodeType":"YulFunctionCall","src":"3076:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3037:2:18"},"nodeType":"YulFunctionCall","src":"3037:62:18"},"nodeType":"YulIf","src":"3034:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3138:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3142:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3131:6:18"},"nodeType":"YulFunctionCall","src":"3131:22:18"},"nodeType":"YulExpressionStatement","src":"3131:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2907:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"2915:4:18","type":""}],"src":"2878:281:18"},{"body":{"nodeType":"YulBlock","src":"3206:88:18","statements":[{"nodeType":"YulAssignment","src":"3216:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3226:18:18"},"nodeType":"YulFunctionCall","src":"3226:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3216:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3275:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"3283:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3255:19:18"},"nodeType":"YulFunctionCall","src":"3255:33:18"},"nodeType":"YulExpressionStatement","src":"3255:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3190:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3199:6:18","type":""}],"src":"3165:129:18"},{"body":{"nodeType":"YulBlock","src":"3366:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"3471:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3473:16:18"},"nodeType":"YulFunctionCall","src":"3473:18:18"},"nodeType":"YulExpressionStatement","src":"3473:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3443:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3451:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3440:2:18"},"nodeType":"YulFunctionCall","src":"3440:30:18"},"nodeType":"YulIf","src":"3437:56:18"},{"nodeType":"YulAssignment","src":"3503:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3533:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3511:21:18"},"nodeType":"YulFunctionCall","src":"3511:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3503:4:18"}]},{"nodeType":"YulAssignment","src":"3577:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3589:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3595:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3585:3:18"},"nodeType":"YulFunctionCall","src":"3585:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3577:4:18"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3350:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3361:4:18","type":""}],"src":"3300:307:18"},{"body":{"nodeType":"YulBlock","src":"3677:82:18","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3700:3:18"},{"name":"src","nodeType":"YulIdentifier","src":"3705:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"3710:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3687:12:18"},"nodeType":"YulFunctionCall","src":"3687:30:18"},"nodeType":"YulExpressionStatement","src":"3687:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3737:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"3742:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3733:3:18"},"nodeType":"YulFunctionCall","src":"3733:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"3751:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3726:6:18"},"nodeType":"YulFunctionCall","src":"3726:27:18"},"nodeType":"YulExpressionStatement","src":"3726:27:18"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3659:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3664:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"3669:6:18","type":""}],"src":"3613:146:18"},{"body":{"nodeType":"YulBlock","src":"3848:340:18","statements":[{"nodeType":"YulAssignment","src":"3858:74:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3924:6:18"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"3883:40:18"},"nodeType":"YulFunctionCall","src":"3883:48:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"3867:15:18"},"nodeType":"YulFunctionCall","src":"3867:65:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3858:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3948:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"3955:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3941:6:18"},"nodeType":"YulFunctionCall","src":"3941:21:18"},"nodeType":"YulExpressionStatement","src":"3941:21:18"},{"nodeType":"YulVariableDeclaration","src":"3971:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3986:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3993:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3982:3:18"},"nodeType":"YulFunctionCall","src":"3982:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"3975:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4036:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4038:77:18"},"nodeType":"YulFunctionCall","src":"4038:79:18"},"nodeType":"YulExpressionStatement","src":"4038:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4017:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"4022:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4013:3:18"},"nodeType":"YulFunctionCall","src":"4013:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"4031:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4010:2:18"},"nodeType":"YulFunctionCall","src":"4010:25:18"},"nodeType":"YulIf","src":"4007:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4165:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"4170:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"4175:6:18"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4128:36:18"},"nodeType":"YulFunctionCall","src":"4128:54:18"},"nodeType":"YulExpressionStatement","src":"4128:54:18"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3821:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"3826:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3834:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3842:5:18","type":""}],"src":"3765:423:18"},{"body":{"nodeType":"YulBlock","src":"4268:277:18","statements":[{"body":{"nodeType":"YulBlock","src":"4317:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4319:77:18"},"nodeType":"YulFunctionCall","src":"4319:79:18"},"nodeType":"YulExpressionStatement","src":"4319:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4296:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4304:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4292:3:18"},"nodeType":"YulFunctionCall","src":"4292:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"4311:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4288:3:18"},"nodeType":"YulFunctionCall","src":"4288:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4281:6:18"},"nodeType":"YulFunctionCall","src":"4281:35:18"},"nodeType":"YulIf","src":"4278:122:18"},{"nodeType":"YulVariableDeclaration","src":"4409:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4436:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4423:12:18"},"nodeType":"YulFunctionCall","src":"4423:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4413:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4452:87:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4512:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4520:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4508:3:18"},"nodeType":"YulFunctionCall","src":"4508:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"4527:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"4535:3:18"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"4461:46:18"},"nodeType":"YulFunctionCall","src":"4461:78:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4452:5:18"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4246:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4254:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4262:5:18","type":""}],"src":"4207:338:18"},{"body":{"nodeType":"YulBlock","src":"4652:729:18","statements":[{"body":{"nodeType":"YulBlock","src":"4698:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4700:77:18"},"nodeType":"YulFunctionCall","src":"4700:79:18"},"nodeType":"YulExpressionStatement","src":"4700:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4673:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4682:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4669:3:18"},"nodeType":"YulFunctionCall","src":"4669:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4694:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4665:3:18"},"nodeType":"YulFunctionCall","src":"4665:32:18"},"nodeType":"YulIf","src":"4662:119:18"},{"nodeType":"YulBlock","src":"4791:286:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4806:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4837:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4848:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4833:3:18"},"nodeType":"YulFunctionCall","src":"4833:17:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4820:12:18"},"nodeType":"YulFunctionCall","src":"4820:31:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4810:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4898:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4900:77:18"},"nodeType":"YulFunctionCall","src":"4900:79:18"},"nodeType":"YulExpressionStatement","src":"4900:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4870:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4878:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4867:2:18"},"nodeType":"YulFunctionCall","src":"4867:30:18"},"nodeType":"YulIf","src":"4864:117:18"},{"nodeType":"YulAssignment","src":"4995:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5039:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5050:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:18"},"nodeType":"YulFunctionCall","src":"5035:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5005:29:18"},"nodeType":"YulFunctionCall","src":"5005:62:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4995:6:18"}]}]},{"nodeType":"YulBlock","src":"5087:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5102:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5133:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5144:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5129:3:18"},"nodeType":"YulFunctionCall","src":"5129:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5116:12:18"},"nodeType":"YulFunctionCall","src":"5116:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5106:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5195:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5197:77:18"},"nodeType":"YulFunctionCall","src":"5197:79:18"},"nodeType":"YulExpressionStatement","src":"5197:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5167:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5175:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5164:2:18"},"nodeType":"YulFunctionCall","src":"5164:30:18"},"nodeType":"YulIf","src":"5161:117:18"},{"nodeType":"YulAssignment","src":"5292:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:18"},"nodeType":"YulFunctionCall","src":"5332:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5302:29:18"},"nodeType":"YulFunctionCall","src":"5302:62:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5292:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4614:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4625:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4637:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4645:6:18","type":""}],"src":"4551:830:18"},{"body":{"nodeType":"YulBlock","src":"5462:432:18","statements":[{"body":{"nodeType":"YulBlock","src":"5508:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5510:77:18"},"nodeType":"YulFunctionCall","src":"5510:79:18"},"nodeType":"YulExpressionStatement","src":"5510:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5483:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5492:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5479:3:18"},"nodeType":"YulFunctionCall","src":"5479:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5504:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5475:3:18"},"nodeType":"YulFunctionCall","src":"5475:32:18"},"nodeType":"YulIf","src":"5472:119:18"},{"nodeType":"YulBlock","src":"5601:286:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5616:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5647:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"5658:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5643:3:18"},"nodeType":"YulFunctionCall","src":"5643:17:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5630:12:18"},"nodeType":"YulFunctionCall","src":"5630:31:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5620:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5708:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5710:77:18"},"nodeType":"YulFunctionCall","src":"5710:79:18"},"nodeType":"YulExpressionStatement","src":"5710:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5680:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"5688:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5677:2:18"},"nodeType":"YulFunctionCall","src":"5677:30:18"},"nodeType":"YulIf","src":"5674:117:18"},{"nodeType":"YulAssignment","src":"5805:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5849:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5860:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5845:3:18"},"nodeType":"YulFunctionCall","src":"5845:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5869:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"5815:29:18"},"nodeType":"YulFunctionCall","src":"5815:62:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5805:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5432:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5443:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5455:6:18","type":""}],"src":"5387:507:18"},{"body":{"nodeType":"YulBlock","src":"5945:51:18","statements":[{"nodeType":"YulAssignment","src":"5955:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5984:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5966:17:18"},"nodeType":"YulFunctionCall","src":"5966:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5955:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5927:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5937:7:18","type":""}],"src":"5900:96:18"},{"body":{"nodeType":"YulBlock","src":"6045:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"6102:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6111:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6114:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6104:6:18"},"nodeType":"YulFunctionCall","src":"6104:12:18"},"nodeType":"YulExpressionStatement","src":"6104:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6068:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6093:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6075:17:18"},"nodeType":"YulFunctionCall","src":"6075:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6065:2:18"},"nodeType":"YulFunctionCall","src":"6065:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6058:6:18"},"nodeType":"YulFunctionCall","src":"6058:43:18"},"nodeType":"YulIf","src":"6055:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6038:5:18","type":""}],"src":"6002:122:18"},{"body":{"nodeType":"YulBlock","src":"6182:87:18","statements":[{"nodeType":"YulAssignment","src":"6192:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6214:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6201:12:18"},"nodeType":"YulFunctionCall","src":"6201:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6192:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6257:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6230:26:18"},"nodeType":"YulFunctionCall","src":"6230:33:18"},"nodeType":"YulExpressionStatement","src":"6230:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6160:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"6168:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6176:5:18","type":""}],"src":"6130:139:18"},{"body":{"nodeType":"YulBlock","src":"6341:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"6387:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6389:77:18"},"nodeType":"YulFunctionCall","src":"6389:79:18"},"nodeType":"YulExpressionStatement","src":"6389:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6362:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6371:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6358:3:18"},"nodeType":"YulFunctionCall","src":"6358:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6383:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6354:3:18"},"nodeType":"YulFunctionCall","src":"6354:32:18"},"nodeType":"YulIf","src":"6351:119:18"},{"nodeType":"YulBlock","src":"6480:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6495:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6509:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6499:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6524:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6559:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6570:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6555:3:18"},"nodeType":"YulFunctionCall","src":"6555:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6579:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6534:20:18"},"nodeType":"YulFunctionCall","src":"6534:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6524:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6311:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6322:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6334:6:18","type":""}],"src":"6275:329:18"},{"body":{"nodeType":"YulBlock","src":"6675:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6692:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6715:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6697:17:18"},"nodeType":"YulFunctionCall","src":"6697:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6685:6:18"},"nodeType":"YulFunctionCall","src":"6685:37:18"},"nodeType":"YulExpressionStatement","src":"6685:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6663:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6670:3:18","type":""}],"src":"6610:118:18"},{"body":{"nodeType":"YulBlock","src":"6832:124:18","statements":[{"nodeType":"YulAssignment","src":"6842:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6854:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6865:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6850:3:18"},"nodeType":"YulFunctionCall","src":"6850:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6842:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6922:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6935:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6946:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6931:3:18"},"nodeType":"YulFunctionCall","src":"6931:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"6878:43:18"},"nodeType":"YulFunctionCall","src":"6878:71:18"},"nodeType":"YulExpressionStatement","src":"6878:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6804:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6816:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6827:4:18","type":""}],"src":"6734:222:18"},{"body":{"nodeType":"YulBlock","src":"7005:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"7062:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7071:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7074:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7064:6:18"},"nodeType":"YulFunctionCall","src":"7064:12:18"},"nodeType":"YulExpressionStatement","src":"7064:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7028:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7053:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7035:17:18"},"nodeType":"YulFunctionCall","src":"7035:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7025:2:18"},"nodeType":"YulFunctionCall","src":"7025:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7018:6:18"},"nodeType":"YulFunctionCall","src":"7018:43:18"},"nodeType":"YulIf","src":"7015:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6998:5:18","type":""}],"src":"6962:122:18"},{"body":{"nodeType":"YulBlock","src":"7142:87:18","statements":[{"nodeType":"YulAssignment","src":"7152:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7174:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7161:12:18"},"nodeType":"YulFunctionCall","src":"7161:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7152:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7217:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"7190:26:18"},"nodeType":"YulFunctionCall","src":"7190:33:18"},"nodeType":"YulExpressionStatement","src":"7190:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7120:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"7128:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7136:5:18","type":""}],"src":"7090:139:18"},{"body":{"nodeType":"YulBlock","src":"7324:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7341:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7344:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7334:6:18"},"nodeType":"YulFunctionCall","src":"7334:12:18"},"nodeType":"YulExpressionStatement","src":"7334:12:18"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulFunctionDefinition","src":"7235:117:18"},{"body":{"nodeType":"YulBlock","src":"7447:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7464:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7467:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7457:6:18"},"nodeType":"YulFunctionCall","src":"7457:12:18"},"nodeType":"YulExpressionStatement","src":"7457:12:18"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulFunctionDefinition","src":"7358:117:18"},{"body":{"nodeType":"YulBlock","src":"7526:32:18","statements":[{"nodeType":"YulAssignment","src":"7536:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"7547:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"7536:7:18"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7508:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"7518:7:18","type":""}],"src":"7481:77:18"},{"body":{"nodeType":"YulBlock","src":"7607:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"7664:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7673:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7676:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7666:6:18"},"nodeType":"YulFunctionCall","src":"7666:12:18"},"nodeType":"YulExpressionStatement","src":"7666:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7630:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7655:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"7637:17:18"},"nodeType":"YulFunctionCall","src":"7637:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7627:2:18"},"nodeType":"YulFunctionCall","src":"7627:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7620:6:18"},"nodeType":"YulFunctionCall","src":"7620:43:18"},"nodeType":"YulIf","src":"7617:63:18"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7600:5:18","type":""}],"src":"7564:122:18"},{"body":{"nodeType":"YulBlock","src":"7744:87:18","statements":[{"nodeType":"YulAssignment","src":"7754:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7776:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7763:12:18"},"nodeType":"YulFunctionCall","src":"7763:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7754:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7819:5:18"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"7792:26:18"},"nodeType":"YulFunctionCall","src":"7792:33:18"},"nodeType":"YulExpressionStatement","src":"7792:33:18"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7722:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"7730:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7738:5:18","type":""}],"src":"7692:139:18"},{"body":{"nodeType":"YulBlock","src":"7957:1181:18","statements":[{"body":{"nodeType":"YulBlock","src":"8001:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"8003:77:18"},"nodeType":"YulFunctionCall","src":"8003:79:18"},"nodeType":"YulExpressionStatement","src":"8003:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"7978:3:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7983:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7974:3:18"},"nodeType":"YulFunctionCall","src":"7974:19:18"},{"kind":"number","nodeType":"YulLiteral","src":"7995:4:18","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7970:3:18"},"nodeType":"YulFunctionCall","src":"7970:30:18"},"nodeType":"YulIf","src":"7967:117:18"},{"nodeType":"YulAssignment","src":"8093:30:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8118:4:18","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8102:15:18"},"nodeType":"YulFunctionCall","src":"8102:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8093:5:18"}]},{"nodeType":"YulBlock","src":"8133:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8174:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8188:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8178:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8214:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8221:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8210:3:18"},"nodeType":"YulFunctionCall","src":"8210:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8253:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8264:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8249:3:18"},"nodeType":"YulFunctionCall","src":"8249:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"8273:3:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8228:20:18"},"nodeType":"YulFunctionCall","src":"8228:49:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8203:6:18"},"nodeType":"YulFunctionCall","src":"8203:75:18"},"nodeType":"YulExpressionStatement","src":"8203:75:18"}]},{"nodeType":"YulBlock","src":"8299:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8339:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8353:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8343:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8380:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8387:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8376:3:18"},"nodeType":"YulFunctionCall","src":"8376:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8430:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:18"},"nodeType":"YulFunctionCall","src":"8415:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"8439:3:18"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"8394:20:18"},"nodeType":"YulFunctionCall","src":"8394:49:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8369:6:18"},"nodeType":"YulFunctionCall","src":"8369:75:18"},"nodeType":"YulExpressionStatement","src":"8369:75:18"}]},{"nodeType":"YulBlock","src":"8465:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8505:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8519:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8509:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8546:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8553:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:18"},"nodeType":"YulFunctionCall","src":"8542:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8585:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8596:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8581:3:18"},"nodeType":"YulFunctionCall","src":"8581:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"8605:3:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8560:20:18"},"nodeType":"YulFunctionCall","src":"8560:49:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8535:6:18"},"nodeType":"YulFunctionCall","src":"8535:75:18"},"nodeType":"YulExpressionStatement","src":"8535:75:18"}]},{"nodeType":"YulBlock","src":"8631:164:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8679:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8693:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8683:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8720:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8727:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8716:3:18"},"nodeType":"YulFunctionCall","src":"8716:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8759:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"8770:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8755:3:18"},"nodeType":"YulFunctionCall","src":"8755:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"8779:3:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8734:20:18"},"nodeType":"YulFunctionCall","src":"8734:49:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8709:6:18"},"nodeType":"YulFunctionCall","src":"8709:75:18"},"nodeType":"YulExpressionStatement","src":"8709:75:18"}]},{"nodeType":"YulBlock","src":"8805:326:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8845:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8876:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8887:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8872:3:18"},"nodeType":"YulFunctionCall","src":"8872:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8859:12:18"},"nodeType":"YulFunctionCall","src":"8859:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8849:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8939:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"8941:77:18"},"nodeType":"YulFunctionCall","src":"8941:79:18"},"nodeType":"YulExpressionStatement","src":"8941:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8911:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8919:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8908:2:18"},"nodeType":"YulFunctionCall","src":"8908:30:18"},"nodeType":"YulIf","src":"8905:117:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9047:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9043:3:18"},"nodeType":"YulFunctionCall","src":"9043:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9095:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9106:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9091:3:18"},"nodeType":"YulFunctionCall","src":"9091:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"9115:3:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9061:29:18"},"nodeType":"YulFunctionCall","src":"9061:58:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9036:6:18"},"nodeType":"YulFunctionCall","src":"9036:84:18"},"nodeType":"YulExpressionStatement","src":"9036:84:18"}]}]},"name":"abi_decode_t_struct$_ChainBatchHeader_$2752_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7932:9:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"7943:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"7951:5:18","type":""}],"src":"7868:1270:18"},{"body":{"nodeType":"YulBlock","src":"9226:229:18","statements":[{"body":{"nodeType":"YulBlock","src":"9331:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9333:16:18"},"nodeType":"YulFunctionCall","src":"9333:18:18"},"nodeType":"YulExpressionStatement","src":"9333:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9303:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9311:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9300:2:18"},"nodeType":"YulFunctionCall","src":"9300:30:18"},"nodeType":"YulIf","src":"9297:56:18"},{"nodeType":"YulAssignment","src":"9363:25:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9375:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9383:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9371:3:18"},"nodeType":"YulFunctionCall","src":"9371:17:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9363:4:18"}]},{"nodeType":"YulAssignment","src":"9425:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9437:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"9443:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9433:3:18"},"nodeType":"YulFunctionCall","src":"9433:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9425:4:18"}]}]},"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9210:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9221:4:18","type":""}],"src":"9144:311:18"},{"body":{"nodeType":"YulBlock","src":"9550:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9567:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9570:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9560:6:18"},"nodeType":"YulFunctionCall","src":"9560:12:18"},"nodeType":"YulExpressionStatement","src":"9560:12:18"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"9461:117:18"},{"body":{"nodeType":"YulBlock","src":"9703:608:18","statements":[{"nodeType":"YulAssignment","src":"9713:90:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9795:6:18"}],"functionName":{"name":"array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9738:56:18"},"nodeType":"YulFunctionCall","src":"9738:64:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"9722:15:18"},"nodeType":"YulFunctionCall","src":"9722:81:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9713:5:18"}]},{"nodeType":"YulVariableDeclaration","src":"9812:16:18","value":{"name":"array","nodeType":"YulIdentifier","src":"9823:5:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"9816:3:18","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9845:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"9852:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9838:6:18"},"nodeType":"YulFunctionCall","src":"9838:21:18"},"nodeType":"YulExpressionStatement","src":"9838:21:18"},{"nodeType":"YulAssignment","src":"9868:23:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"9879:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"9886:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9875:3:18"},"nodeType":"YulFunctionCall","src":"9875:16:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9868:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"9901:44:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9919:6:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9931:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9939:4:18","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9927:3:18"},"nodeType":"YulFunctionCall","src":"9927:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9915:3:18"},"nodeType":"YulFunctionCall","src":"9915:30:18"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"9905:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9973:103:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9987:77:18"},"nodeType":"YulFunctionCall","src":"9987:79:18"},"nodeType":"YulExpressionStatement","src":"9987:79:18"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"9960:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"9968:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9957:2:18"},"nodeType":"YulFunctionCall","src":"9957:15:18"},"nodeType":"YulIf","src":"9954:122:18"},{"body":{"nodeType":"YulBlock","src":"10161:144:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10176:21:18","value":{"name":"src","nodeType":"YulIdentifier","src":"10194:3:18"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"10180:10:18","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10218:3:18"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"10244:10:18"},{"name":"end","nodeType":"YulIdentifier","src":"10256:3:18"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10223:20:18"},"nodeType":"YulFunctionCall","src":"10223:37:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10211:6:18"},"nodeType":"YulFunctionCall","src":"10211:50:18"},"nodeType":"YulExpressionStatement","src":"10211:50:18"},{"nodeType":"YulAssignment","src":"10274:21:18","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"10285:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10290:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10281:3:18"},"nodeType":"YulFunctionCall","src":"10281:14:18"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"10274:3:18"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10114:3:18"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"10119:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10111:2:18"},"nodeType":"YulFunctionCall","src":"10111:15:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10127:25:18","statements":[{"nodeType":"YulAssignment","src":"10129:21:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10140:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"10145:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10136:3:18"},"nodeType":"YulFunctionCall","src":"10136:14:18"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"10129:3:18"}]}]},"pre":{"nodeType":"YulBlock","src":"10089:21:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10091:17:18","value":{"name":"offset","nodeType":"YulIdentifier","src":"10102:6:18"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"10095:3:18","type":""}]}]},"src":"10085:220:18"}]},"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9673:6:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"9681:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"9689:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9697:5:18","type":""}],"src":"9601:710:18"},{"body":{"nodeType":"YulBlock","src":"10411:293:18","statements":[{"body":{"nodeType":"YulBlock","src":"10460:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10462:77:18"},"nodeType":"YulFunctionCall","src":"10462:79:18"},"nodeType":"YulExpressionStatement","src":"10462:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10439:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10447:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10435:3:18"},"nodeType":"YulFunctionCall","src":"10435:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"10454:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10431:3:18"},"nodeType":"YulFunctionCall","src":"10431:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10424:6:18"},"nodeType":"YulFunctionCall","src":"10424:35:18"},"nodeType":"YulIf","src":"10421:122:18"},{"nodeType":"YulVariableDeclaration","src":"10552:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10579:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10566:12:18"},"nodeType":"YulFunctionCall","src":"10566:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10556:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10595:103:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10671:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10679:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10667:3:18"},"nodeType":"YulFunctionCall","src":"10667:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"10686:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"10694:3:18"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10604:62:18"},"nodeType":"YulFunctionCall","src":"10604:94:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10595:5:18"}]}]},"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10389:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"10397:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10405:5:18","type":""}],"src":"10334:370:18"},{"body":{"nodeType":"YulBlock","src":"10836:684:18","statements":[{"body":{"nodeType":"YulBlock","src":"10880:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"10882:77:18"},"nodeType":"YulFunctionCall","src":"10882:79:18"},"nodeType":"YulExpressionStatement","src":"10882:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"10857:3:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10862:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10853:3:18"},"nodeType":"YulFunctionCall","src":"10853:19:18"},{"kind":"number","nodeType":"YulLiteral","src":"10874:4:18","type":"","value":"0x40"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10849:3:18"},"nodeType":"YulFunctionCall","src":"10849:30:18"},"nodeType":"YulIf","src":"10846:117:18"},{"nodeType":"YulAssignment","src":"10972:30:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10997:4:18","type":"","value":"0x40"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10981:15:18"},"nodeType":"YulFunctionCall","src":"10981:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10972:5:18"}]},{"nodeType":"YulBlock","src":"11012:151:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11048:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11062:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11052:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11088:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"11095:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11084:3:18"},"nodeType":"YulFunctionCall","src":"11084:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11127:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11138:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11123:3:18"},"nodeType":"YulFunctionCall","src":"11123:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"11147:3:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11102:20:18"},"nodeType":"YulFunctionCall","src":"11102:49:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11077:6:18"},"nodeType":"YulFunctionCall","src":"11077:75:18"},"nodeType":"YulExpressionStatement","src":"11077:75:18"}]},{"nodeType":"YulBlock","src":"11173:340:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11212:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11243:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11254:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11239:3:18"},"nodeType":"YulFunctionCall","src":"11239:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11226:12:18"},"nodeType":"YulFunctionCall","src":"11226:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11216:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"11305:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"11307:77:18"},"nodeType":"YulFunctionCall","src":"11307:79:18"},"nodeType":"YulExpressionStatement","src":"11307:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11277:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11285:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11274:2:18"},"nodeType":"YulFunctionCall","src":"11274:30:18"},"nodeType":"YulIf","src":"11271:117:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11413:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"11420:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11409:3:18"},"nodeType":"YulFunctionCall","src":"11409:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11488:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11473:3:18"},"nodeType":"YulFunctionCall","src":"11473:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"11497:3:18"}],"functionName":{"name":"abi_decode_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11427:45:18"},"nodeType":"YulFunctionCall","src":"11427:74:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11402:6:18"},"nodeType":"YulFunctionCall","src":"11402:100:18"},"nodeType":"YulExpressionStatement","src":"11402:100:18"}]}]},"name":"abi_decode_t_struct$_ChainInclusionProof_$2758_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10811:9:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"10822:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"10830:5:18","type":""}],"src":"10744:776:18"},{"body":{"nodeType":"YulBlock","src":"11660:1764:18","statements":[{"body":{"nodeType":"YulBlock","src":"11704:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nodeType":"YulIdentifier","src":"11706:77:18"},"nodeType":"YulFunctionCall","src":"11706:79:18"},"nodeType":"YulExpressionStatement","src":"11706:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"11681:3:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11686:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11677:3:18"},"nodeType":"YulFunctionCall","src":"11677:19:18"},{"kind":"number","nodeType":"YulLiteral","src":"11698:4:18","type":"","value":"0xa0"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11673:3:18"},"nodeType":"YulFunctionCall","src":"11673:30:18"},"nodeType":"YulIf","src":"11670:117:18"},{"nodeType":"YulAssignment","src":"11796:30:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11821:4:18","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11805:15:18"},"nodeType":"YulFunctionCall","src":"11805:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11796:5:18"}]},{"nodeType":"YulBlock","src":"11836:155:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11876:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11890:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11880:6:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11916:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"11923:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11912:3:18"},"nodeType":"YulFunctionCall","src":"11912:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11955:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11966:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11951:3:18"},"nodeType":"YulFunctionCall","src":"11951:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"11975:3:18"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11930:20:18"},"nodeType":"YulFunctionCall","src":"11930:49:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11905:6:18"},"nodeType":"YulFunctionCall","src":"11905:75:18"},"nodeType":"YulExpressionStatement","src":"11905:75:18"}]},{"nodeType":"YulBlock","src":"12001:361:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12052:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12083:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12094:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12079:3:18"},"nodeType":"YulFunctionCall","src":"12079:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12066:12:18"},"nodeType":"YulFunctionCall","src":"12066:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12056:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"12145:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"12147:77:18"},"nodeType":"YulFunctionCall","src":"12147:79:18"},"nodeType":"YulExpressionStatement","src":"12147:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12117:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12125:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12114:2:18"},"nodeType":"YulFunctionCall","src":"12114:30:18"},"nodeType":"YulIf","src":"12111:117:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12253:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"12260:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12249:3:18"},"nodeType":"YulFunctionCall","src":"12249:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12326:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12337:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12322:3:18"},"nodeType":"YulFunctionCall","src":"12322:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"12346:3:18"}],"functionName":{"name":"abi_decode_t_struct$_ChainBatchHeader_$2752_memory_ptr","nodeType":"YulIdentifier","src":"12267:54:18"},"nodeType":"YulFunctionCall","src":"12267:83:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12242:6:18"},"nodeType":"YulFunctionCall","src":"12242:109:18"},"nodeType":"YulExpressionStatement","src":"12242:109:18"}]},{"nodeType":"YulBlock","src":"12372:358:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12417:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12448:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12459:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12444:3:18"},"nodeType":"YulFunctionCall","src":"12444:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12431:12:18"},"nodeType":"YulFunctionCall","src":"12431:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12421:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"12510:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"12512:77:18"},"nodeType":"YulFunctionCall","src":"12512:79:18"},"nodeType":"YulExpressionStatement","src":"12512:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12482:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12490:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12479:2:18"},"nodeType":"YulFunctionCall","src":"12479:30:18"},"nodeType":"YulIf","src":"12476:117:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12618:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"12625:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12614:3:18"},"nodeType":"YulFunctionCall","src":"12614:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12694:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12705:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12690:3:18"},"nodeType":"YulFunctionCall","src":"12690:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"12714:3:18"}],"functionName":{"name":"abi_decode_t_struct$_ChainInclusionProof_$2758_memory_ptr","nodeType":"YulIdentifier","src":"12632:57:18"},"nodeType":"YulFunctionCall","src":"12632:86:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12607:6:18"},"nodeType":"YulFunctionCall","src":"12607:112:18"},"nodeType":"YulExpressionStatement","src":"12607:112:18"}]},{"nodeType":"YulBlock","src":"12740:332:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12787:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12818:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12829:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12814:3:18"},"nodeType":"YulFunctionCall","src":"12814:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12801:12:18"},"nodeType":"YulFunctionCall","src":"12801:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12791:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"12880:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"12882:77:18"},"nodeType":"YulFunctionCall","src":"12882:79:18"},"nodeType":"YulExpressionStatement","src":"12882:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12852:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12860:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12849:2:18"},"nodeType":"YulFunctionCall","src":"12849:30:18"},"nodeType":"YulIf","src":"12846:117:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12988:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"12995:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12984:3:18"},"nodeType":"YulFunctionCall","src":"12984:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13036:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"13047:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13032:3:18"},"nodeType":"YulFunctionCall","src":"13032:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"13056:3:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13002:29:18"},"nodeType":"YulFunctionCall","src":"13002:58:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12977:6:18"},"nodeType":"YulFunctionCall","src":"12977:84:18"},"nodeType":"YulExpressionStatement","src":"12977:84:18"}]},{"nodeType":"YulBlock","src":"13082:335:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13131:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13162:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13173:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13158:3:18"},"nodeType":"YulFunctionCall","src":"13158:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13145:12:18"},"nodeType":"YulFunctionCall","src":"13145:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13135:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"13225:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nodeType":"YulIdentifier","src":"13227:77:18"},"nodeType":"YulFunctionCall","src":"13227:79:18"},"nodeType":"YulExpressionStatement","src":"13227:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13197:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13205:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13194:2:18"},"nodeType":"YulFunctionCall","src":"13194:30:18"},"nodeType":"YulIf","src":"13191:117:18"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13333:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"13340:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13329:3:18"},"nodeType":"YulFunctionCall","src":"13329:16:18"},{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13381:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"13392:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13377:3:18"},"nodeType":"YulFunctionCall","src":"13377:22:18"},{"name":"end","nodeType":"YulIdentifier","src":"13401:3:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13347:29:18"},"nodeType":"YulFunctionCall","src":"13347:58:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13322:6:18"},"nodeType":"YulFunctionCall","src":"13322:84:18"},"nodeType":"YulExpressionStatement","src":"13322:84:18"}]}]},"name":"abi_decode_t_struct$_L2MessageInclusionProof_$2771_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11635:9:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"11646:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11654:5:18","type":""}],"src":"11564:1860:18"},{"body":{"nodeType":"YulBlock","src":"13614:1147:18","statements":[{"body":{"nodeType":"YulBlock","src":"13661:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13663:77:18"},"nodeType":"YulFunctionCall","src":"13663:79:18"},"nodeType":"YulExpressionStatement","src":"13663:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13635:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13644:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13631:3:18"},"nodeType":"YulFunctionCall","src":"13631:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"13656:3:18","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13627:3:18"},"nodeType":"YulFunctionCall","src":"13627:33:18"},"nodeType":"YulIf","src":"13624:120:18"},{"nodeType":"YulBlock","src":"13754:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13769:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"13783:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13773:6:18","type":""}]},{"nodeType":"YulAssignment","src":"13798:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13833:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"13844:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13829:3:18"},"nodeType":"YulFunctionCall","src":"13829:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13853:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13808:20:18"},"nodeType":"YulFunctionCall","src":"13808:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13798:6:18"}]}]},{"nodeType":"YulBlock","src":"13881:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13896:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"13910:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13900:6:18","type":""}]},{"nodeType":"YulAssignment","src":"13926:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13961:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"13972:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13957:3:18"},"nodeType":"YulFunctionCall","src":"13957:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13981:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13936:20:18"},"nodeType":"YulFunctionCall","src":"13936:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13926:6:18"}]}]},{"nodeType":"YulBlock","src":"14009:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14024:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14055:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14066:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14051:3:18"},"nodeType":"YulFunctionCall","src":"14051:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14038:12:18"},"nodeType":"YulFunctionCall","src":"14038:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14028:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"14117:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14119:77:18"},"nodeType":"YulFunctionCall","src":"14119:79:18"},"nodeType":"YulExpressionStatement","src":"14119:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14089:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14097:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14086:2:18"},"nodeType":"YulFunctionCall","src":"14086:30:18"},"nodeType":"YulIf","src":"14083:117:18"},{"nodeType":"YulAssignment","src":"14214:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14258:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"14269:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14254:3:18"},"nodeType":"YulFunctionCall","src":"14254:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14278:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14224:29:18"},"nodeType":"YulFunctionCall","src":"14224:62:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14214:6:18"}]}]},{"nodeType":"YulBlock","src":"14306:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14321:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"14335:2:18","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14325:6:18","type":""}]},{"nodeType":"YulAssignment","src":"14351:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14386:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"14397:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14382:3:18"},"nodeType":"YulFunctionCall","src":"14382:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14406:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14361:20:18"},"nodeType":"YulFunctionCall","src":"14361:53:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"14351:6:18"}]}]},{"nodeType":"YulBlock","src":"14434:320:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14449:47:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14480:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14491:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14476:3:18"},"nodeType":"YulFunctionCall","src":"14476:19:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14463:12:18"},"nodeType":"YulFunctionCall","src":"14463:33:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14453:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"14543:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14545:77:18"},"nodeType":"YulFunctionCall","src":"14545:79:18"},"nodeType":"YulExpressionStatement","src":"14545:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14515:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14523:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14512:2:18"},"nodeType":"YulFunctionCall","src":"14512:30:18"},"nodeType":"YulIf","src":"14509:117:18"},{"nodeType":"YulAssignment","src":"14640:104:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14716:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"14727:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14712:3:18"},"nodeType":"YulFunctionCall","src":"14712:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14736:7:18"}],"functionName":{"name":"abi_decode_t_struct$_L2MessageInclusionProof_$2771_memory_ptr","nodeType":"YulIdentifier","src":"14650:61:18"},"nodeType":"YulFunctionCall","src":"14650:94:18"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"14640:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptrt_uint256t_struct$_L2MessageInclusionProof_$2771_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13552:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13563:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13575:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13583:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13591:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13599:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"13607:6:18","type":""}],"src":"13430:1331:18"},{"body":{"nodeType":"YulBlock","src":"14833:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"14879:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14881:77:18"},"nodeType":"YulFunctionCall","src":"14881:79:18"},"nodeType":"YulExpressionStatement","src":"14881:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14854:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"14863:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14850:3:18"},"nodeType":"YulFunctionCall","src":"14850:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"14875:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14846:3:18"},"nodeType":"YulFunctionCall","src":"14846:32:18"},"nodeType":"YulIf","src":"14843:119:18"},{"nodeType":"YulBlock","src":"14972:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14987:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"15001:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14991:6:18","type":""}]},{"nodeType":"YulAssignment","src":"15016:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15051:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"15062:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15047:3:18"},"nodeType":"YulFunctionCall","src":"15047:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15071:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"15026:20:18"},"nodeType":"YulFunctionCall","src":"15026:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15016:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14803:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14814:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14826:6:18","type":""}],"src":"14767:329:18"},{"body":{"nodeType":"YulBlock","src":"15168:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"15214:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15216:77:18"},"nodeType":"YulFunctionCall","src":"15216:79:18"},"nodeType":"YulExpressionStatement","src":"15216:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15189:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"15198:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15185:3:18"},"nodeType":"YulFunctionCall","src":"15185:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"15210:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15181:3:18"},"nodeType":"YulFunctionCall","src":"15181:32:18"},"nodeType":"YulIf","src":"15178:119:18"},{"nodeType":"YulBlock","src":"15307:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15322:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"15336:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15326:6:18","type":""}]},{"nodeType":"YulAssignment","src":"15351:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15386:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"15397:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15382:3:18"},"nodeType":"YulFunctionCall","src":"15382:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15406:7:18"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"15361:20:18"},"nodeType":"YulFunctionCall","src":"15361:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15351:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15138:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15149:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15161:6:18","type":""}],"src":"15102:329:18"},{"body":{"nodeType":"YulBlock","src":"15479:48:18","statements":[{"nodeType":"YulAssignment","src":"15489:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15514:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15507:6:18"},"nodeType":"YulFunctionCall","src":"15507:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15500:6:18"},"nodeType":"YulFunctionCall","src":"15500:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"15489:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15461:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"15471:7:18","type":""}],"src":"15437:90:18"},{"body":{"nodeType":"YulBlock","src":"15592:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15609:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15629:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"15614:14:18"},"nodeType":"YulFunctionCall","src":"15614:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15602:6:18"},"nodeType":"YulFunctionCall","src":"15602:34:18"},"nodeType":"YulExpressionStatement","src":"15602:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15580:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15587:3:18","type":""}],"src":"15533:109:18"},{"body":{"nodeType":"YulBlock","src":"15740:118:18","statements":[{"nodeType":"YulAssignment","src":"15750:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15762:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15773:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15758:3:18"},"nodeType":"YulFunctionCall","src":"15758:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15750:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15824:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15837:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15848:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15833:3:18"},"nodeType":"YulFunctionCall","src":"15833:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"15786:37:18"},"nodeType":"YulFunctionCall","src":"15786:65:18"},"nodeType":"YulExpressionStatement","src":"15786:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15712:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15724:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15735:4:18","type":""}],"src":"15648:210:18"},{"body":{"nodeType":"YulBlock","src":"15960:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15977:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"15982:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15970:6:18"},"nodeType":"YulFunctionCall","src":"15970:19:18"},"nodeType":"YulExpressionStatement","src":"15970:19:18"},{"nodeType":"YulAssignment","src":"15998:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16017:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16022:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16013:3:18"},"nodeType":"YulFunctionCall","src":"16013:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15998:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15932:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"15937:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15948:11:18","type":""}],"src":"15864:169:18"},{"body":{"nodeType":"YulBlock","src":"16145:56:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16167:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16175:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16163:3:18"},"nodeType":"YulFunctionCall","src":"16163:14:18"},{"hexValue":"21726f6f744d616e61676572","kind":"string","nodeType":"YulLiteral","src":"16179:14:18","type":"","value":"!rootManager"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16156:6:18"},"nodeType":"YulFunctionCall","src":"16156:38:18"},"nodeType":"YulExpressionStatement","src":"16156:38:18"}]},"name":"store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16137:6:18","type":""}],"src":"16039:162:18"},{"body":{"nodeType":"YulBlock","src":"16353:220:18","statements":[{"nodeType":"YulAssignment","src":"16363:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16429:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16434:2:18","type":"","value":"12"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16370:58:18"},"nodeType":"YulFunctionCall","src":"16370:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16363:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16535:3:18"}],"functionName":{"name":"store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2","nodeType":"YulIdentifier","src":"16446:88:18"},"nodeType":"YulFunctionCall","src":"16446:93:18"},"nodeType":"YulExpressionStatement","src":"16446:93:18"},{"nodeType":"YulAssignment","src":"16548:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16559:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"16564:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16555:3:18"},"nodeType":"YulFunctionCall","src":"16555:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16548:3:18"}]}]},"name":"abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16341:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16349:3:18","type":""}],"src":"16207:366:18"},{"body":{"nodeType":"YulBlock","src":"16750:248:18","statements":[{"nodeType":"YulAssignment","src":"16760:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16772:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16783:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16768:3:18"},"nodeType":"YulFunctionCall","src":"16768:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16760:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16807:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16818:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16803:3:18"},"nodeType":"YulFunctionCall","src":"16803:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16826:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"16832:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16822:3:18"},"nodeType":"YulFunctionCall","src":"16822:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16796:6:18"},"nodeType":"YulFunctionCall","src":"16796:47:18"},"nodeType":"YulExpressionStatement","src":"16796:47:18"},{"nodeType":"YulAssignment","src":"16852:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16986:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16860:124:18"},"nodeType":"YulFunctionCall","src":"16860:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16852:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16730:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16745:4:18","type":""}],"src":"16579:419:18"},{"body":{"nodeType":"YulBlock","src":"17062:40:18","statements":[{"nodeType":"YulAssignment","src":"17073:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17089:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17083:5:18"},"nodeType":"YulFunctionCall","src":"17083:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17073:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17045:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17055:6:18","type":""}],"src":"17004:98:18"},{"body":{"nodeType":"YulBlock","src":"17203:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17220:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17225:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17213:6:18"},"nodeType":"YulFunctionCall","src":"17213:19:18"},"nodeType":"YulExpressionStatement","src":"17213:19:18"},{"nodeType":"YulAssignment","src":"17241:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17260:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17265:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17256:3:18"},"nodeType":"YulFunctionCall","src":"17256:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17241:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17175:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"17180:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17191:11:18","type":""}],"src":"17108:168:18"},{"body":{"nodeType":"YulBlock","src":"17344:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"17354:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"17363:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"17358:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"17423:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17448:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"17453:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17444:3:18"},"nodeType":"YulFunctionCall","src":"17444:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17467:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"17472:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17463:3:18"},"nodeType":"YulFunctionCall","src":"17463:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17457:5:18"},"nodeType":"YulFunctionCall","src":"17457:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17437:6:18"},"nodeType":"YulFunctionCall","src":"17437:39:18"},"nodeType":"YulExpressionStatement","src":"17437:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17384:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"17387:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17381:2:18"},"nodeType":"YulFunctionCall","src":"17381:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"17395:19:18","statements":[{"nodeType":"YulAssignment","src":"17397:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"17406:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"17409:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17402:3:18"},"nodeType":"YulFunctionCall","src":"17402:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"17397:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"17377:3:18","statements":[]},"src":"17373:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17506:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17511:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17502:3:18"},"nodeType":"YulFunctionCall","src":"17502:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"17520:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17495:6:18"},"nodeType":"YulFunctionCall","src":"17495:27:18"},"nodeType":"YulExpressionStatement","src":"17495:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17326:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17331:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"17336:6:18","type":""}],"src":"17282:246:18"},{"body":{"nodeType":"YulBlock","src":"17624:283:18","statements":[{"nodeType":"YulVariableDeclaration","src":"17634:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17680:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"17648:31:18"},"nodeType":"YulFunctionCall","src":"17648:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17638:6:18","type":""}]},{"nodeType":"YulAssignment","src":"17695:77:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17760:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17765:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17702:57:18"},"nodeType":"YulFunctionCall","src":"17702:70:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17695:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17820:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"17827:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17816:3:18"},"nodeType":"YulFunctionCall","src":"17816:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"17834:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17839:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17781:34:18"},"nodeType":"YulFunctionCall","src":"17781:65:18"},"nodeType":"YulExpressionStatement","src":"17781:65:18"},{"nodeType":"YulAssignment","src":"17855:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17866:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17893:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17871:21:18"},"nodeType":"YulFunctionCall","src":"17871:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17862:3:18"},"nodeType":"YulFunctionCall","src":"17862:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17855:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17605:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17612:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17620:3:18","type":""}],"src":"17534:373:18"},{"body":{"nodeType":"YulBlock","src":"18103:426:18","statements":[{"nodeType":"YulAssignment","src":"18113:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18125:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18136:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18121:3:18"},"nodeType":"YulFunctionCall","src":"18121:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18113:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18160:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18171:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18156:3:18"},"nodeType":"YulFunctionCall","src":"18156:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18179:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"18185:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18175:3:18"},"nodeType":"YulFunctionCall","src":"18175:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18149:6:18"},"nodeType":"YulFunctionCall","src":"18149:47:18"},"nodeType":"YulExpressionStatement","src":"18149:47:18"},{"nodeType":"YulAssignment","src":"18205:84:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18275:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"18284:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18213:61:18"},"nodeType":"YulFunctionCall","src":"18213:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18205:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18310:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18321:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18306:3:18"},"nodeType":"YulFunctionCall","src":"18306:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18330:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"18336:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18326:3:18"},"nodeType":"YulFunctionCall","src":"18326:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18299:6:18"},"nodeType":"YulFunctionCall","src":"18299:48:18"},"nodeType":"YulExpressionStatement","src":"18299:48:18"},{"nodeType":"YulAssignment","src":"18356:84:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18426:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"18435:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18364:61:18"},"nodeType":"YulFunctionCall","src":"18364:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18356:4:18"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18494:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18507:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18518:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18503:3:18"},"nodeType":"YulFunctionCall","src":"18503:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18450:43:18"},"nodeType":"YulFunctionCall","src":"18450:72:18"},"nodeType":"YulExpressionStatement","src":"18450:72:18"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18059:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18071:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18079:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18087:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18098:4:18","type":""}],"src":"17913:616:18"},{"body":{"nodeType":"YulBlock","src":"18641:48:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18663:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18671:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18659:3:18"},"nodeType":"YulFunctionCall","src":"18659:14:18"},{"hexValue":"21414d42","kind":"string","nodeType":"YulLiteral","src":"18675:6:18","type":"","value":"!AMB"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18652:6:18"},"nodeType":"YulFunctionCall","src":"18652:30:18"},"nodeType":"YulExpressionStatement","src":"18652:30:18"}]},"name":"store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18633:6:18","type":""}],"src":"18535:154:18"},{"body":{"nodeType":"YulBlock","src":"18841:219:18","statements":[{"nodeType":"YulAssignment","src":"18851:73:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18917:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18922:1:18","type":"","value":"4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18858:58:18"},"nodeType":"YulFunctionCall","src":"18858:66:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18851:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19022:3:18"}],"functionName":{"name":"store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e","nodeType":"YulIdentifier","src":"18933:88:18"},"nodeType":"YulFunctionCall","src":"18933:93:18"},"nodeType":"YulExpressionStatement","src":"18933:93:18"},{"nodeType":"YulAssignment","src":"19035:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19046:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19051:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19042:3:18"},"nodeType":"YulFunctionCall","src":"19042:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19035:3:18"}]}]},"name":"abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18829:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18837:3:18","type":""}],"src":"18695:365:18"},{"body":{"nodeType":"YulBlock","src":"19237:248:18","statements":[{"nodeType":"YulAssignment","src":"19247:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19259:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19270:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19255:3:18"},"nodeType":"YulFunctionCall","src":"19255:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19247:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19294:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19305:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19290:3:18"},"nodeType":"YulFunctionCall","src":"19290:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19313:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"19319:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19309:3:18"},"nodeType":"YulFunctionCall","src":"19309:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19283:6:18"},"nodeType":"YulFunctionCall","src":"19283:47:18"},"nodeType":"YulExpressionStatement","src":"19283:47:18"},{"nodeType":"YulAssignment","src":"19339:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19473:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19347:124:18"},"nodeType":"YulFunctionCall","src":"19347:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19339:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19217:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19232:4:18","type":""}],"src":"19066:419:18"},{"body":{"nodeType":"YulBlock","src":"19635:275:18","statements":[{"nodeType":"YulAssignment","src":"19645:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19657:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19668:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19653:3:18"},"nodeType":"YulFunctionCall","src":"19653:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19645:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19692:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19703:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19688:3:18"},"nodeType":"YulFunctionCall","src":"19688:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19711:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"19717:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19707:3:18"},"nodeType":"YulFunctionCall","src":"19707:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19681:6:18"},"nodeType":"YulFunctionCall","src":"19681:47:18"},"nodeType":"YulExpressionStatement","src":"19681:47:18"},{"nodeType":"YulAssignment","src":"19737:84:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19807:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"19816:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19745:61:18"},"nodeType":"YulFunctionCall","src":"19745:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19737:4:18"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19875:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19888:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19899:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19884:3:18"},"nodeType":"YulFunctionCall","src":"19884:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19831:43:18"},"nodeType":"YulFunctionCall","src":"19831:72:18"},"nodeType":"YulExpressionStatement","src":"19831:72:18"}]},"name":"abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19599:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19611:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19619:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19630:4:18","type":""}],"src":"19491:419:18"},{"body":{"nodeType":"YulBlock","src":"20022:60:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20044:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20052:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20040:3:18"},"nodeType":"YulFunctionCall","src":"20040:14:18"},{"hexValue":"216d6972726f72436f6e6e6563746f72","kind":"string","nodeType":"YulLiteral","src":"20056:18:18","type":"","value":"!mirrorConnector"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20033:6:18"},"nodeType":"YulFunctionCall","src":"20033:42:18"},"nodeType":"YulExpressionStatement","src":"20033:42:18"}]},"name":"store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20014:6:18","type":""}],"src":"19916:166:18"},{"body":{"nodeType":"YulBlock","src":"20234:220:18","statements":[{"nodeType":"YulAssignment","src":"20244:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20310:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20315:2:18","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20251:58:18"},"nodeType":"YulFunctionCall","src":"20251:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20244:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20416:3:18"}],"functionName":{"name":"store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d","nodeType":"YulIdentifier","src":"20327:88:18"},"nodeType":"YulFunctionCall","src":"20327:93:18"},"nodeType":"YulExpressionStatement","src":"20327:93:18"},{"nodeType":"YulAssignment","src":"20429:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20440:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20445:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20436:3:18"},"nodeType":"YulFunctionCall","src":"20436:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20429:3:18"}]}]},"name":"abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20222:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20230:3:18","type":""}],"src":"20088:366:18"},{"body":{"nodeType":"YulBlock","src":"20631:248:18","statements":[{"nodeType":"YulAssignment","src":"20641:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20653:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20664:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20649:3:18"},"nodeType":"YulFunctionCall","src":"20649:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20641:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20688:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20699:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20684:3:18"},"nodeType":"YulFunctionCall","src":"20684:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20707:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"20713:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20703:3:18"},"nodeType":"YulFunctionCall","src":"20703:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20677:6:18"},"nodeType":"YulFunctionCall","src":"20677:47:18"},"nodeType":"YulExpressionStatement","src":"20677:47:18"},{"nodeType":"YulAssignment","src":"20733:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20867:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20741:124:18"},"nodeType":"YulFunctionCall","src":"20741:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20733:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20611:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20626:4:18","type":""}],"src":"20460:419:18"},{"body":{"nodeType":"YulBlock","src":"20991:49:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21013:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21021:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21009:3:18"},"nodeType":"YulFunctionCall","src":"21009:14:18"},{"hexValue":"2174686973","kind":"string","nodeType":"YulLiteral","src":"21025:7:18","type":"","value":"!this"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21002:6:18"},"nodeType":"YulFunctionCall","src":"21002:31:18"},"nodeType":"YulExpressionStatement","src":"21002:31:18"}]},"name":"store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20983:6:18","type":""}],"src":"20885:155:18"},{"body":{"nodeType":"YulBlock","src":"21192:219:18","statements":[{"nodeType":"YulAssignment","src":"21202:73:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21268:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21273:1:18","type":"","value":"5"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21209:58:18"},"nodeType":"YulFunctionCall","src":"21209:66:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21202:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21373:3:18"}],"functionName":{"name":"store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033","nodeType":"YulIdentifier","src":"21284:88:18"},"nodeType":"YulFunctionCall","src":"21284:93:18"},"nodeType":"YulExpressionStatement","src":"21284:93:18"},{"nodeType":"YulAssignment","src":"21386:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21397:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21402:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21393:3:18"},"nodeType":"YulFunctionCall","src":"21393:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21386:3:18"}]}]},"name":"abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21180:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21188:3:18","type":""}],"src":"21046:365:18"},{"body":{"nodeType":"YulBlock","src":"21588:248:18","statements":[{"nodeType":"YulAssignment","src":"21598:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21610:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21621:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21606:3:18"},"nodeType":"YulFunctionCall","src":"21606:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21598:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21645:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"21656:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21641:3:18"},"nodeType":"YulFunctionCall","src":"21641:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21664:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"21670:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21660:3:18"},"nodeType":"YulFunctionCall","src":"21660:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21634:6:18"},"nodeType":"YulFunctionCall","src":"21634:47:18"},"nodeType":"YulExpressionStatement","src":"21634:47:18"},{"nodeType":"YulAssignment","src":"21690:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21824:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21698:124:18"},"nodeType":"YulFunctionCall","src":"21698:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21690:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21568:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21583:4:18","type":""}],"src":"21417:419:18"},{"body":{"nodeType":"YulBlock","src":"21948:50:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21970:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21978:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21966:3:18"},"nodeType":"YulFunctionCall","src":"21966:14:18"},{"hexValue":"2170726f6f66","kind":"string","nodeType":"YulLiteral","src":"21982:8:18","type":"","value":"!proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21959:6:18"},"nodeType":"YulFunctionCall","src":"21959:32:18"},"nodeType":"YulExpressionStatement","src":"21959:32:18"}]},"name":"store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21940:6:18","type":""}],"src":"21842:156:18"},{"body":{"nodeType":"YulBlock","src":"22150:219:18","statements":[{"nodeType":"YulAssignment","src":"22160:73:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22226:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"22231:1:18","type":"","value":"6"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22167:58:18"},"nodeType":"YulFunctionCall","src":"22167:66:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22160:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22331:3:18"}],"functionName":{"name":"store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec","nodeType":"YulIdentifier","src":"22242:88:18"},"nodeType":"YulFunctionCall","src":"22242:93:18"},"nodeType":"YulExpressionStatement","src":"22242:93:18"},{"nodeType":"YulAssignment","src":"22344:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22355:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"22360:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22351:3:18"},"nodeType":"YulFunctionCall","src":"22351:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22344:3:18"}]}]},"name":"abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22138:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22146:3:18","type":""}],"src":"22004:365:18"},{"body":{"nodeType":"YulBlock","src":"22546:248:18","statements":[{"nodeType":"YulAssignment","src":"22556:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22568:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22579:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22564:3:18"},"nodeType":"YulFunctionCall","src":"22564:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22556:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22603:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22614:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22599:3:18"},"nodeType":"YulFunctionCall","src":"22599:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22622:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"22628:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22618:3:18"},"nodeType":"YulFunctionCall","src":"22618:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22592:6:18"},"nodeType":"YulFunctionCall","src":"22592:47:18"},"nodeType":"YulExpressionStatement","src":"22592:47:18"},{"nodeType":"YulAssignment","src":"22648:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22782:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22656:124:18"},"nodeType":"YulFunctionCall","src":"22656:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22648:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22526:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22541:4:18","type":""}],"src":"22375:419:18"},{"body":{"nodeType":"YulBlock","src":"22844:65:18","statements":[{"nodeType":"YulAssignment","src":"22854:49:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22869:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"22876:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22865:3:18"},"nodeType":"YulFunctionCall","src":"22865:38:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"22854:7:18"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22826:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"22836:7:18","type":""}],"src":"22800:109:18"},{"body":{"nodeType":"YulBlock","src":"22943:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22960:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22963:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22953:6:18"},"nodeType":"YulFunctionCall","src":"22953:88:18"},"nodeType":"YulExpressionStatement","src":"22953:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23057:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"23060:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23050:6:18"},"nodeType":"YulFunctionCall","src":"23050:15:18"},"nodeType":"YulExpressionStatement","src":"23050:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23081:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23084:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23074:6:18"},"nodeType":"YulFunctionCall","src":"23074:15:18"},"nodeType":"YulExpressionStatement","src":"23074:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22915:180:18"},{"body":{"nodeType":"YulBlock","src":"23145:172:18","statements":[{"nodeType":"YulAssignment","src":"23155:24:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23177:1:18"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"23160:16:18"},"nodeType":"YulFunctionCall","src":"23160:19:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23155:1:18"}]},{"nodeType":"YulAssignment","src":"23188:24:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23210:1:18"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"23193:16:18"},"nodeType":"YulFunctionCall","src":"23193:19:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23188:1:18"}]},{"nodeType":"YulAssignment","src":"23221:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23233:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"23236:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23229:3:18"},"nodeType":"YulFunctionCall","src":"23229:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"23221:4:18"}]},{"body":{"nodeType":"YulBlock","src":"23288:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23290:16:18"},"nodeType":"YulFunctionCall","src":"23290:18:18"},"nodeType":"YulExpressionStatement","src":"23290:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"23254:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"23260:26:18","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23251:2:18"},"nodeType":"YulFunctionCall","src":"23251:36:18"},"nodeType":"YulIf","src":"23248:62:18"}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23131:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"23134:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"23140:4:18","type":""}],"src":"23101:216:18"},{"body":{"nodeType":"YulBlock","src":"23388:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23405:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23428:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23410:17:18"},"nodeType":"YulFunctionCall","src":"23410:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23398:6:18"},"nodeType":"YulFunctionCall","src":"23398:37:18"},"nodeType":"YulExpressionStatement","src":"23398:37:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23376:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23383:3:18","type":""}],"src":"23323:118:18"},{"body":{"nodeType":"YulBlock","src":"23571:204:18","statements":[{"nodeType":"YulAssignment","src":"23581:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23593:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23604:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23589:3:18"},"nodeType":"YulFunctionCall","src":"23589:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23581:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23659:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23672:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23683:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23668:3:18"},"nodeType":"YulFunctionCall","src":"23668:17:18"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"23617:41:18"},"nodeType":"YulFunctionCall","src":"23617:69:18"},"nodeType":"YulExpressionStatement","src":"23617:69:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23740:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23753:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23764:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23749:3:18"},"nodeType":"YulFunctionCall","src":"23749:18:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23696:43:18"},"nodeType":"YulFunctionCall","src":"23696:72:18"},"nodeType":"YulExpressionStatement","src":"23696:72:18"}]},"name":"abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23535:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23547:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23555:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23566:4:18","type":""}],"src":"23447:328:18"},{"body":{"nodeType":"YulBlock","src":"23879:124:18","statements":[{"nodeType":"YulAssignment","src":"23889:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23901:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23912:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23897:3:18"},"nodeType":"YulFunctionCall","src":"23897:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23889:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23969:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23982:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23993:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23978:3:18"},"nodeType":"YulFunctionCall","src":"23978:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23925:43:18"},"nodeType":"YulFunctionCall","src":"23925:71:18"},"nodeType":"YulExpressionStatement","src":"23925:71:18"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23851:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23863:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23874:4:18","type":""}],"src":"23781:222:18"},{"body":{"nodeType":"YulBlock","src":"24054:149:18","statements":[{"nodeType":"YulAssignment","src":"24064:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24087:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24069:17:18"},"nodeType":"YulFunctionCall","src":"24069:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24064:1:18"}]},{"nodeType":"YulAssignment","src":"24098:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24121:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24103:17:18"},"nodeType":"YulFunctionCall","src":"24103:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24098:1:18"}]},{"nodeType":"YulAssignment","src":"24132:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24144:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"24147:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24140:3:18"},"nodeType":"YulFunctionCall","src":"24140:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24132:4:18"}]},{"body":{"nodeType":"YulBlock","src":"24174:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24176:16:18"},"nodeType":"YulFunctionCall","src":"24176:18:18"},"nodeType":"YulExpressionStatement","src":"24176:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"24165:4:18"},{"name":"x","nodeType":"YulIdentifier","src":"24171:1:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24162:2:18"},"nodeType":"YulFunctionCall","src":"24162:11:18"},"nodeType":"YulIf","src":"24159:37:18"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24040:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"24043:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24049:4:18","type":""}],"src":"24009:194:18"},{"body":{"nodeType":"YulBlock","src":"24315:51:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24337:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"24345:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24333:3:18"},"nodeType":"YulFunctionCall","src":"24333:14:18"},{"hexValue":"216c656e677468","kind":"string","nodeType":"YulLiteral","src":"24349:9:18","type":"","value":"!length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24326:6:18"},"nodeType":"YulFunctionCall","src":"24326:33:18"},"nodeType":"YulExpressionStatement","src":"24326:33:18"}]},"name":"store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24307:6:18","type":""}],"src":"24209:157:18"},{"body":{"nodeType":"YulBlock","src":"24518:219:18","statements":[{"nodeType":"YulAssignment","src":"24528:73:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24594:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"24599:1:18","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24535:58:18"},"nodeType":"YulFunctionCall","src":"24535:66:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24528:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24699:3:18"}],"functionName":{"name":"store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1","nodeType":"YulIdentifier","src":"24610:88:18"},"nodeType":"YulFunctionCall","src":"24610:93:18"},"nodeType":"YulExpressionStatement","src":"24610:93:18"},{"nodeType":"YulAssignment","src":"24712:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24723:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"24728:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24719:3:18"},"nodeType":"YulFunctionCall","src":"24719:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24712:3:18"}]}]},"name":"abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24506:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24514:3:18","type":""}],"src":"24372:365:18"},{"body":{"nodeType":"YulBlock","src":"24914:248:18","statements":[{"nodeType":"YulAssignment","src":"24924:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24936:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24947:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24932:3:18"},"nodeType":"YulFunctionCall","src":"24932:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24924:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24971:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24982:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24967:3:18"},"nodeType":"YulFunctionCall","src":"24967:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24990:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"24996:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24986:3:18"},"nodeType":"YulFunctionCall","src":"24986:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24960:6:18"},"nodeType":"YulFunctionCall","src":"24960:47:18"},"nodeType":"YulExpressionStatement","src":"24960:47:18"},{"nodeType":"YulAssignment","src":"25016:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25150:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25024:124:18"},"nodeType":"YulFunctionCall","src":"25024:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25016:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24894:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24909:4:18","type":""}],"src":"24743:419:18"},{"body":{"nodeType":"YulBlock","src":"25284:193:18","statements":[{"nodeType":"YulAssignment","src":"25294:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25306:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25317:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25302:3:18"},"nodeType":"YulFunctionCall","src":"25302:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25294:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25341:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25352:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25337:3:18"},"nodeType":"YulFunctionCall","src":"25337:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25360:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"25366:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25356:3:18"},"nodeType":"YulFunctionCall","src":"25356:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25330:6:18"},"nodeType":"YulFunctionCall","src":"25330:47:18"},"nodeType":"YulExpressionStatement","src":"25330:47:18"},{"nodeType":"YulAssignment","src":"25386:84:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25456:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"25465:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25394:61:18"},"nodeType":"YulFunctionCall","src":"25394:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25386:4:18"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25256:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25268:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25279:4:18","type":""}],"src":"25168:309:18"},{"body":{"nodeType":"YulBlock","src":"25653:355:18","statements":[{"nodeType":"YulAssignment","src":"25663:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25675:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25686:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25671:3:18"},"nodeType":"YulFunctionCall","src":"25671:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25663:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25743:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25756:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25767:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25752:3:18"},"nodeType":"YulFunctionCall","src":"25752:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25699:43:18"},"nodeType":"YulFunctionCall","src":"25699:71:18"},"nodeType":"YulExpressionStatement","src":"25699:71:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25791:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25802:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25787:3:18"},"nodeType":"YulFunctionCall","src":"25787:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25811:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"25817:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25807:3:18"},"nodeType":"YulFunctionCall","src":"25807:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25780:6:18"},"nodeType":"YulFunctionCall","src":"25780:48:18"},"nodeType":"YulExpressionStatement","src":"25780:48:18"},{"nodeType":"YulAssignment","src":"25837:84:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25907:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"25916:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25845:61:18"},"nodeType":"YulFunctionCall","src":"25845:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25837:4:18"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25973:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25986:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25997:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25982:3:18"},"nodeType":"YulFunctionCall","src":"25982:18:18"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"25931:41:18"},"nodeType":"YulFunctionCall","src":"25931:70:18"},"nodeType":"YulExpressionStatement","src":"25931:70:18"}]},"name":"abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25609:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25621:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25629:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25637:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25648:4:18","type":""}],"src":"25483:525:18"},{"body":{"nodeType":"YulBlock","src":"26140:206:18","statements":[{"nodeType":"YulAssignment","src":"26150:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26162:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26173:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26158:3:18"},"nodeType":"YulFunctionCall","src":"26158:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26150:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26230:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26243:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26254:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26239:3:18"},"nodeType":"YulFunctionCall","src":"26239:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26186:43:18"},"nodeType":"YulFunctionCall","src":"26186:71:18"},"nodeType":"YulExpressionStatement","src":"26186:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26311:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26324:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26335:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26320:3:18"},"nodeType":"YulFunctionCall","src":"26320:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26267:43:18"},"nodeType":"YulFunctionCall","src":"26267:72:18"},"nodeType":"YulExpressionStatement","src":"26267:72:18"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26104:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26116:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26124:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26135:4:18","type":""}],"src":"26014:332:18"},{"body":{"nodeType":"YulBlock","src":"26552:440:18","statements":[{"nodeType":"YulAssignment","src":"26562:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26574:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26585:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26570:3:18"},"nodeType":"YulFunctionCall","src":"26570:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26562:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26643:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26656:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26667:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26652:3:18"},"nodeType":"YulFunctionCall","src":"26652:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26599:43:18"},"nodeType":"YulFunctionCall","src":"26599:71:18"},"nodeType":"YulExpressionStatement","src":"26599:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26724:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26737:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26748:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26733:3:18"},"nodeType":"YulFunctionCall","src":"26733:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26680:43:18"},"nodeType":"YulFunctionCall","src":"26680:72:18"},"nodeType":"YulExpressionStatement","src":"26680:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26773:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26784:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26769:3:18"},"nodeType":"YulFunctionCall","src":"26769:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26793:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"26799:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26789:3:18"},"nodeType":"YulFunctionCall","src":"26789:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26762:6:18"},"nodeType":"YulFunctionCall","src":"26762:48:18"},"nodeType":"YulExpressionStatement","src":"26762:48:18"},{"nodeType":"YulAssignment","src":"26819:84:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26889:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"26898:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26827:61:18"},"nodeType":"YulFunctionCall","src":"26827:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26819:4:18"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26957:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26970:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26981:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26966:3:18"},"nodeType":"YulFunctionCall","src":"26966:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26913:43:18"},"nodeType":"YulFunctionCall","src":"26913:72:18"},"nodeType":"YulExpressionStatement","src":"26913:72:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26500:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"26512:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"26520:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26528:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26536:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26547:4:18","type":""}],"src":"26352:640:18"},{"body":{"nodeType":"YulBlock","src":"27042:147:18","statements":[{"nodeType":"YulAssignment","src":"27052:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27075:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27057:17:18"},"nodeType":"YulFunctionCall","src":"27057:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27052:1:18"}]},{"nodeType":"YulAssignment","src":"27086:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27109:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27091:17:18"},"nodeType":"YulFunctionCall","src":"27091:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27086:1:18"}]},{"nodeType":"YulAssignment","src":"27120:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27131:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"27134:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27127:3:18"},"nodeType":"YulFunctionCall","src":"27127:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"27120:3:18"}]},{"body":{"nodeType":"YulBlock","src":"27160:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27162:16:18"},"nodeType":"YulFunctionCall","src":"27162:18:18"},"nodeType":"YulExpressionStatement","src":"27162:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27152:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"27155:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27149:2:18"},"nodeType":"YulFunctionCall","src":"27149:10:18"},"nodeType":"YulIf","src":"27146:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27029:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"27032:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"27038:3:18","type":""}],"src":"26998:191:18"},{"body":{"nodeType":"YulBlock","src":"27254:81:18","statements":[{"nodeType":"YulAssignment","src":"27264:65:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27321:5:18"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27304:16:18"},"nodeType":"YulFunctionCall","src":"27304:23:18"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27295:8:18"},"nodeType":"YulFunctionCall","src":"27295:33:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27277:17:18"},"nodeType":"YulFunctionCall","src":"27277:52:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27264:9:18"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27234:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27244:9:18","type":""}],"src":"27195:140:18"},{"body":{"nodeType":"YulBlock","src":"27405:65:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27422:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27457:5:18"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"27427:29:18"},"nodeType":"YulFunctionCall","src":"27427:36:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27415:6:18"},"nodeType":"YulFunctionCall","src":"27415:49:18"},"nodeType":"YulExpressionStatement","src":"27415:49:18"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27393:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27400:3:18","type":""}],"src":"27341:129:18"},{"body":{"nodeType":"YulBlock","src":"27656:369:18","statements":[{"nodeType":"YulAssignment","src":"27666:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27678:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27689:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27674:3:18"},"nodeType":"YulFunctionCall","src":"27674:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27666:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27746:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27759:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27770:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27755:3:18"},"nodeType":"YulFunctionCall","src":"27755:17:18"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27703:42:18"},"nodeType":"YulFunctionCall","src":"27703:70:18"},"nodeType":"YulExpressionStatement","src":"27703:70:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27826:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27839:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27850:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27835:3:18"},"nodeType":"YulFunctionCall","src":"27835:18:18"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27783:42:18"},"nodeType":"YulFunctionCall","src":"27783:71:18"},"nodeType":"YulExpressionStatement","src":"27783:71:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"27908:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27921:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27932:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27917:3:18"},"nodeType":"YulFunctionCall","src":"27917:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27864:43:18"},"nodeType":"YulFunctionCall","src":"27864:72:18"},"nodeType":"YulExpressionStatement","src":"27864:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"27990:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28003:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28014:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27999:3:18"},"nodeType":"YulFunctionCall","src":"27999:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27946:43:18"},"nodeType":"YulFunctionCall","src":"27946:72:18"},"nodeType":"YulExpressionStatement","src":"27946:72:18"}]},"name":"abi_encode_tuple_t_uint96_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27604:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"27616:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27624:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27632:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27640:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27651:4:18","type":""}],"src":"27476:549:18"},{"body":{"nodeType":"YulBlock","src":"28157:206:18","statements":[{"nodeType":"YulAssignment","src":"28167:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28179:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28190:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28175:3:18"},"nodeType":"YulFunctionCall","src":"28175:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28167:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28247:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28260:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28271:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28256:3:18"},"nodeType":"YulFunctionCall","src":"28256:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28203:43:18"},"nodeType":"YulFunctionCall","src":"28203:71:18"},"nodeType":"YulExpressionStatement","src":"28203:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28328:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28341:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28352:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28337:3:18"},"nodeType":"YulFunctionCall","src":"28337:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28284:43:18"},"nodeType":"YulFunctionCall","src":"28284:72:18"},"nodeType":"YulExpressionStatement","src":"28284:72:18"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28121:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28133:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28141:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28152:4:18","type":""}],"src":"28031:332:18"},{"body":{"nodeType":"YulBlock","src":"28424:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28441:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28464:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28446:17:18"},"nodeType":"YulFunctionCall","src":"28446:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28434:6:18"},"nodeType":"YulFunctionCall","src":"28434:37:18"},"nodeType":"YulExpressionStatement","src":"28434:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28412:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28419:3:18","type":""}],"src":"28369:108:18"},{"body":{"nodeType":"YulBlock","src":"28538:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28555:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28578:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"28560:17:18"},"nodeType":"YulFunctionCall","src":"28560:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28548:6:18"},"nodeType":"YulFunctionCall","src":"28548:37:18"},"nodeType":"YulExpressionStatement","src":"28548:37:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28526:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28533:3:18","type":""}],"src":"28483:108:18"},{"body":{"nodeType":"YulBlock","src":"28682:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28699:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"28704:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28692:6:18"},"nodeType":"YulFunctionCall","src":"28692:19:18"},"nodeType":"YulExpressionStatement","src":"28692:19:18"},{"nodeType":"YulAssignment","src":"28720:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28739:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"28744:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28735:3:18"},"nodeType":"YulFunctionCall","src":"28735:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"28720:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28654:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"28659:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"28670:11:18","type":""}],"src":"28597:158:18"},{"body":{"nodeType":"YulBlock","src":"28841:273:18","statements":[{"nodeType":"YulVariableDeclaration","src":"28851:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28897:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"28865:31:18"},"nodeType":"YulFunctionCall","src":"28865:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"28855:6:18","type":""}]},{"nodeType":"YulAssignment","src":"28912:67:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28967:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"28972:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"28919:47:18"},"nodeType":"YulFunctionCall","src":"28919:60:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28912:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29027:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"29034:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29023:3:18"},"nodeType":"YulFunctionCall","src":"29023:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"29041:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"29046:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"28988:34:18"},"nodeType":"YulFunctionCall","src":"28988:65:18"},"nodeType":"YulExpressionStatement","src":"28988:65:18"},{"nodeType":"YulAssignment","src":"29062:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29073:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"29100:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"29078:21:18"},"nodeType":"YulFunctionCall","src":"29078:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29069:3:18"},"nodeType":"YulFunctionCall","src":"29069:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29062:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28822:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"28829:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28837:3:18","type":""}],"src":"28761:353:18"},{"body":{"nodeType":"YulBlock","src":"29320:1036:18","statements":[{"nodeType":"YulVariableDeclaration","src":"29330:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29346:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29351:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29342:3:18"},"nodeType":"YulFunctionCall","src":"29342:14:18"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"29334:4:18","type":""}]},{"nodeType":"YulBlock","src":"29366:170:18","statements":[{"nodeType":"YulVariableDeclaration","src":"29407:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29437:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"29444:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29433:3:18"},"nodeType":"YulFunctionCall","src":"29433:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29427:5:18"},"nodeType":"YulFunctionCall","src":"29427:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29411:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"29497:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29515:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29520:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29511:3:18"},"nodeType":"YulFunctionCall","src":"29511:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29463:33:18"},"nodeType":"YulFunctionCall","src":"29463:63:18"},"nodeType":"YulExpressionStatement","src":"29463:63:18"}]},{"nodeType":"YulBlock","src":"29546:169:18","statements":[{"nodeType":"YulVariableDeclaration","src":"29586:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29616:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"29623:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29612:3:18"},"nodeType":"YulFunctionCall","src":"29612:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29606:5:18"},"nodeType":"YulFunctionCall","src":"29606:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29590:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"29676:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29694:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29699:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29690:3:18"},"nodeType":"YulFunctionCall","src":"29690:14:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"29642:33:18"},"nodeType":"YulFunctionCall","src":"29642:63:18"},"nodeType":"YulExpressionStatement","src":"29642:63:18"}]},{"nodeType":"YulBlock","src":"29725:169:18","statements":[{"nodeType":"YulVariableDeclaration","src":"29765:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29795:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"29802:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29791:3:18"},"nodeType":"YulFunctionCall","src":"29791:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29785:5:18"},"nodeType":"YulFunctionCall","src":"29785:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29769:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"29855:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29873:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29878:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29869:3:18"},"nodeType":"YulFunctionCall","src":"29869:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"29821:33:18"},"nodeType":"YulFunctionCall","src":"29821:63:18"},"nodeType":"YulExpressionStatement","src":"29821:63:18"}]},{"nodeType":"YulBlock","src":"29904:177:18","statements":[{"nodeType":"YulVariableDeclaration","src":"29952:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29982:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"29989:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29978:3:18"},"nodeType":"YulFunctionCall","src":"29978:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29972:5:18"},"nodeType":"YulFunctionCall","src":"29972:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"29956:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"30042:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30060:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30065:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30056:3:18"},"nodeType":"YulFunctionCall","src":"30056:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"30008:33:18"},"nodeType":"YulFunctionCall","src":"30008:63:18"},"nodeType":"YulExpressionStatement","src":"30008:63:18"}]},{"nodeType":"YulBlock","src":"30091:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"30131:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30161:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"30168:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30157:3:18"},"nodeType":"YulFunctionCall","src":"30157:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30151:5:18"},"nodeType":"YulFunctionCall","src":"30151:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"30135:12:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30199:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30204:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30195:3:18"},"nodeType":"YulFunctionCall","src":"30195:14:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30215:4:18"},{"name":"pos","nodeType":"YulIdentifier","src":"30221:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30211:3:18"},"nodeType":"YulFunctionCall","src":"30211:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30188:6:18"},"nodeType":"YulFunctionCall","src":"30188:38:18"},"nodeType":"YulExpressionStatement","src":"30188:38:18"},{"nodeType":"YulAssignment","src":"30239:79:18","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"30299:12:18"},{"name":"tail","nodeType":"YulIdentifier","src":"30313:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"30247:51:18"},"nodeType":"YulFunctionCall","src":"30247:71:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30239:4:18"}]}]},{"nodeType":"YulAssignment","src":"30339:11:18","value":{"name":"tail","nodeType":"YulIdentifier","src":"30346:4:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30339:3:18"}]}]},"name":"abi_encode_t_struct$_ChainBatchHeader_$2752_memory_ptr_to_t_struct$_ChainBatchHeader_$2752_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29299:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"29306:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29315:3:18","type":""}],"src":"29178:1178:18"},{"body":{"nodeType":"YulBlock","src":"30436:40:18","statements":[{"nodeType":"YulAssignment","src":"30447:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30463:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"30457:5:18"},"nodeType":"YulFunctionCall","src":"30457:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"30447:6:18"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30419:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"30429:6:18","type":""}],"src":"30362:114:18"},{"body":{"nodeType":"YulBlock","src":"30583:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30600:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"30605:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30593:6:18"},"nodeType":"YulFunctionCall","src":"30593:19:18"},"nodeType":"YulExpressionStatement","src":"30593:19:18"},{"nodeType":"YulAssignment","src":"30621:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30640:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30645:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30636:3:18"},"nodeType":"YulFunctionCall","src":"30636:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"30621:11:18"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30555:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"30560:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"30571:11:18","type":""}],"src":"30482:174:18"},{"body":{"nodeType":"YulBlock","src":"30734:60:18","statements":[{"nodeType":"YulAssignment","src":"30744:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"30752:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30744:4:18"}]},{"nodeType":"YulAssignment","src":"30765:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"30777:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30782:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30773:3:18"},"nodeType":"YulFunctionCall","src":"30773:14:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"30765:4:18"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"30721:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"30729:4:18","type":""}],"src":"30662:132:18"},{"body":{"nodeType":"YulBlock","src":"30880:99:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30924:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"30932:3:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"30890:33:18"},"nodeType":"YulFunctionCall","src":"30890:46:18"},"nodeType":"YulExpressionStatement","src":"30890:46:18"},{"nodeType":"YulAssignment","src":"30945:28:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30963:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30968:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30959:3:18"},"nodeType":"YulFunctionCall","src":"30959:14:18"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"30945:10:18"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"30853:6:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30861:3:18","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"30869:10:18","type":""}],"src":"30800:179:18"},{"body":{"nodeType":"YulBlock","src":"31060:38:18","statements":[{"nodeType":"YulAssignment","src":"31070:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"31082:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"31087:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31078:3:18"},"nodeType":"YulFunctionCall","src":"31078:14:18"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"31070:4:18"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"31047:3:18","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"31055:4:18","type":""}],"src":"30985:113:18"},{"body":{"nodeType":"YulBlock","src":"31248:598:18","statements":[{"nodeType":"YulVariableDeclaration","src":"31258:68:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31320:5:18"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31272:47:18"},"nodeType":"YulFunctionCall","src":"31272:54:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"31262:6:18","type":""}]},{"nodeType":"YulAssignment","src":"31335:83:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31406:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"31411:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31342:63:18"},"nodeType":"YulFunctionCall","src":"31342:76:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31335:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"31427:71:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"31492:5:18"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31442:49:18"},"nodeType":"YulFunctionCall","src":"31442:56:18"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"31431:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"31507:21:18","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"31521:7:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"31511:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"31597:224:18","statements":[{"nodeType":"YulVariableDeclaration","src":"31611:34:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31638:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"31632:5:18"},"nodeType":"YulFunctionCall","src":"31632:13:18"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"31615:13:18","type":""}]},{"nodeType":"YulAssignment","src":"31658:70:18","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"31709:13:18"},{"name":"pos","nodeType":"YulIdentifier","src":"31724:3:18"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"31665:43:18"},"nodeType":"YulFunctionCall","src":"31665:63:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31658:3:18"}]},{"nodeType":"YulAssignment","src":"31741:70:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31804:6:18"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"31751:52:18"},"nodeType":"YulFunctionCall","src":"31751:60:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"31741:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31559:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"31562:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"31556:2:18"},"nodeType":"YulFunctionCall","src":"31556:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"31570:18:18","statements":[{"nodeType":"YulAssignment","src":"31572:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"31581:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"31584:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31577:3:18"},"nodeType":"YulFunctionCall","src":"31577:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"31572:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"31541:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"31543:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"31552:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"31547:1:18","type":""}]}]},"src":"31537:284:18"},{"nodeType":"YulAssignment","src":"31830:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"31837:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31830:3:18"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"31227:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"31234:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31243:3:18","type":""}],"src":"31134:712:18"},{"body":{"nodeType":"YulBlock","src":"32064:517:18","statements":[{"nodeType":"YulVariableDeclaration","src":"32074:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32090:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"32095:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32086:3:18"},"nodeType":"YulFunctionCall","src":"32086:14:18"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"32078:4:18","type":""}]},{"nodeType":"YulBlock","src":"32110:165:18","statements":[{"nodeType":"YulVariableDeclaration","src":"32146:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32176:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"32183:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32172:3:18"},"nodeType":"YulFunctionCall","src":"32172:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32166:5:18"},"nodeType":"YulFunctionCall","src":"32166:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32150:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32236:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32254:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"32259:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32250:3:18"},"nodeType":"YulFunctionCall","src":"32250:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"32202:33:18"},"nodeType":"YulFunctionCall","src":"32202:63:18"},"nodeType":"YulExpressionStatement","src":"32202:63:18"}]},{"nodeType":"YulBlock","src":"32285:269:18","statements":[{"nodeType":"YulVariableDeclaration","src":"32324:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32354:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"32361:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32350:3:18"},"nodeType":"YulFunctionCall","src":"32350:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32344:5:18"},"nodeType":"YulFunctionCall","src":"32344:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"32328:12:18","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32392:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"32397:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32388:3:18"},"nodeType":"YulFunctionCall","src":"32388:14:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32408:4:18"},{"name":"pos","nodeType":"YulIdentifier","src":"32414:3:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32404:3:18"},"nodeType":"YulFunctionCall","src":"32404:14:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32381:6:18"},"nodeType":"YulFunctionCall","src":"32381:38:18"},"nodeType":"YulExpressionStatement","src":"32381:38:18"},{"nodeType":"YulAssignment","src":"32432:111:18","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"32524:12:18"},{"name":"tail","nodeType":"YulIdentifier","src":"32538:4:18"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"32440:83:18"},"nodeType":"YulFunctionCall","src":"32440:103:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32432:4:18"}]}]},{"nodeType":"YulAssignment","src":"32564:11:18","value":{"name":"tail","nodeType":"YulIdentifier","src":"32571:4:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32564:3:18"}]}]},"name":"abi_encode_t_struct$_ChainInclusionProof_$2758_memory_ptr_to_t_struct$_ChainInclusionProof_$2758_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32043:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32050:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32059:3:18","type":""}],"src":"31916:665:18"},{"body":{"nodeType":"YulBlock","src":"32883:532:18","statements":[{"nodeType":"YulAssignment","src":"32893:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32905:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32916:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32901:3:18"},"nodeType":"YulFunctionCall","src":"32901:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32893:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32973:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32986:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32997:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32982:3:18"},"nodeType":"YulFunctionCall","src":"32982:17:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"32929:43:18"},"nodeType":"YulFunctionCall","src":"32929:71:18"},"nodeType":"YulExpressionStatement","src":"32929:71:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33021:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33032:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33017:3:18"},"nodeType":"YulFunctionCall","src":"33017:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33041:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"33047:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33037:3:18"},"nodeType":"YulFunctionCall","src":"33037:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33010:6:18"},"nodeType":"YulFunctionCall","src":"33010:48:18"},"nodeType":"YulExpressionStatement","src":"33010:48:18"},{"nodeType":"YulAssignment","src":"33067:134:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33187:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"33196:4:18"}],"functionName":{"name":"abi_encode_t_struct$_ChainBatchHeader_$2752_memory_ptr_to_t_struct$_ChainBatchHeader_$2752_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33075:111:18"},"nodeType":"YulFunctionCall","src":"33075:126:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33067:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33222:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33233:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33218:3:18"},"nodeType":"YulFunctionCall","src":"33218:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33242:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"33248:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33238:3:18"},"nodeType":"YulFunctionCall","src":"33238:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33211:6:18"},"nodeType":"YulFunctionCall","src":"33211:48:18"},"nodeType":"YulExpressionStatement","src":"33211:48:18"},{"nodeType":"YulAssignment","src":"33268:140:18","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33394:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"33403:4:18"}],"functionName":{"name":"abi_encode_t_struct$_ChainInclusionProof_$2758_memory_ptr_to_t_struct$_ChainInclusionProof_$2758_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33276:117:18"},"nodeType":"YulFunctionCall","src":"33276:132:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33268:4:18"}]}]},"name":"abi_encode_tuple_t_bytes32_t_struct$_ChainBatchHeader_$2752_memory_ptr_t_struct$_ChainInclusionProof_$2758_memory_ptr__to_t_bytes32_t_struct$_ChainBatchHeader_$2752_memory_ptr_t_struct$_ChainInclusionProof_$2758_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32839:9:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"32851:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32859:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32867:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32878:4:18","type":""}],"src":"32587:828:18"},{"body":{"nodeType":"YulBlock","src":"33461:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"33515:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33524:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33527:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33517:6:18"},"nodeType":"YulFunctionCall","src":"33517:12:18"},"nodeType":"YulExpressionStatement","src":"33517:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33484:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33506:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"33491:14:18"},"nodeType":"YulFunctionCall","src":"33491:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"33481:2:18"},"nodeType":"YulFunctionCall","src":"33481:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"33474:6:18"},"nodeType":"YulFunctionCall","src":"33474:40:18"},"nodeType":"YulIf","src":"33471:60:18"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33454:5:18","type":""}],"src":"33421:116:18"},{"body":{"nodeType":"YulBlock","src":"33603:77:18","statements":[{"nodeType":"YulAssignment","src":"33613:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33628:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33622:5:18"},"nodeType":"YulFunctionCall","src":"33622:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33613:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33668:5:18"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"33644:23:18"},"nodeType":"YulFunctionCall","src":"33644:30:18"},"nodeType":"YulExpressionStatement","src":"33644:30:18"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"33581:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"33589:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"33597:5:18","type":""}],"src":"33543:137:18"},{"body":{"nodeType":"YulBlock","src":"33760:271:18","statements":[{"body":{"nodeType":"YulBlock","src":"33806:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33808:77:18"},"nodeType":"YulFunctionCall","src":"33808:79:18"},"nodeType":"YulExpressionStatement","src":"33808:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33781:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"33790:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33777:3:18"},"nodeType":"YulFunctionCall","src":"33777:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"33802:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33773:3:18"},"nodeType":"YulFunctionCall","src":"33773:32:18"},"nodeType":"YulIf","src":"33770:119:18"},{"nodeType":"YulBlock","src":"33899:125:18","statements":[{"nodeType":"YulVariableDeclaration","src":"33914:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"33928:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"33918:6:18","type":""}]},{"nodeType":"YulAssignment","src":"33943:71:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33986:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"33997:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33982:3:18"},"nodeType":"YulFunctionCall","src":"33982:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34006:7:18"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"33953:28:18"},"nodeType":"YulFunctionCall","src":"33953:61:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"33943:6:18"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33730:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33741:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33753:6:18","type":""}],"src":"33686:345:18"},{"body":{"nodeType":"YulBlock","src":"34150:34:18","statements":[{"nodeType":"YulAssignment","src":"34160:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"34175:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34160:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34122:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"34127:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34138:11:18","type":""}],"src":"34037:147:18"},{"body":{"nodeType":"YulBlock","src":"34298:278:18","statements":[{"nodeType":"YulVariableDeclaration","src":"34308:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34354:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34322:31:18"},"nodeType":"YulFunctionCall","src":"34322:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34312:6:18","type":""}]},{"nodeType":"YulAssignment","src":"34369:95:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34452:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"34457:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"34376:75:18"},"nodeType":"YulFunctionCall","src":"34376:88:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34369:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34512:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"34519:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34508:3:18"},"nodeType":"YulFunctionCall","src":"34508:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"34526:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"34531:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"34473:34:18"},"nodeType":"YulFunctionCall","src":"34473:65:18"},"nodeType":"YulExpressionStatement","src":"34473:65:18"},{"nodeType":"YulAssignment","src":"34547:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34558:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"34563:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34554:3:18"},"nodeType":"YulFunctionCall","src":"34554:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34547:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34279:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34286:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34294:3:18","type":""}],"src":"34190:386:18"},{"body":{"nodeType":"YulBlock","src":"34624:52:18","statements":[{"nodeType":"YulAssignment","src":"34634:35:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34659:2:18","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"34663:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"34655:3:18"},"nodeType":"YulFunctionCall","src":"34655:14:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34634:8:18"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34605:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34615:8:18","type":""}],"src":"34582:94:18"},{"body":{"nodeType":"YulBlock","src":"34729:47:18","statements":[{"nodeType":"YulAssignment","src":"34739:31:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34764:5:18"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"34750:13:18"},"nodeType":"YulFunctionCall","src":"34750:20:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"34739:7:18"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34711:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"34721:7:18","type":""}],"src":"34682:94:18"},{"body":{"nodeType":"YulBlock","src":"34829:53:18","statements":[{"nodeType":"YulAssignment","src":"34839:37:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34870:5:18"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"34850:19:18"},"nodeType":"YulFunctionCall","src":"34850:26:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"34839:7:18"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34811:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"34821:7:18","type":""}],"src":"34782:100:18"},{"body":{"nodeType":"YulBlock","src":"34971:74:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34988:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35031:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"35013:17:18"},"nodeType":"YulFunctionCall","src":"35013:24:18"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"34993:19:18"},"nodeType":"YulFunctionCall","src":"34993:45:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34981:6:18"},"nodeType":"YulFunctionCall","src":"34981:58:18"},"nodeType":"YulExpressionStatement","src":"34981:58:18"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34959:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34966:3:18","type":""}],"src":"34888:157:18"},{"body":{"nodeType":"YulBlock","src":"35213:250:18","statements":[{"nodeType":"YulAssignment","src":"35224:100:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35311:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"35320:3:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35231:79:18"},"nodeType":"YulFunctionCall","src":"35231:93:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35224:3:18"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35396:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"35405:3:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"35334:61:18"},"nodeType":"YulFunctionCall","src":"35334:75:18"},"nodeType":"YulExpressionStatement","src":"35334:75:18"},{"nodeType":"YulAssignment","src":"35418:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35429:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"35434:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35425:3:18"},"nodeType":"YulFunctionCall","src":"35425:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35418:3:18"}]},{"nodeType":"YulAssignment","src":"35447:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"35454:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35447:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35184:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35190:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35198:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35209:3:18","type":""}],"src":"35051:412:18"},{"body":{"nodeType":"YulBlock","src":"35516:32:18","statements":[{"nodeType":"YulAssignment","src":"35526:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"35537:5:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35526:7:18"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35498:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35508:7:18","type":""}],"src":"35469:79:18"},{"body":{"nodeType":"YulBlock","src":"35637:74:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35654:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35697:5:18"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"35679:17:18"},"nodeType":"YulFunctionCall","src":"35679:24:18"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"35659:19:18"},"nodeType":"YulFunctionCall","src":"35659:45:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35647:6:18"},"nodeType":"YulFunctionCall","src":"35647:58:18"},"nodeType":"YulExpressionStatement","src":"35647:58:18"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35625:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35632:3:18","type":""}],"src":"35554:157:18"},{"body":{"nodeType":"YulBlock","src":"35764:32:18","statements":[{"nodeType":"YulAssignment","src":"35774:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"35785:5:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"35774:7:18"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35746:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"35756:7:18","type":""}],"src":"35717:79:18"},{"body":{"nodeType":"YulBlock","src":"35885:74:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35902:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35945:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35927:17:18"},"nodeType":"YulFunctionCall","src":"35927:24:18"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"35907:19:18"},"nodeType":"YulFunctionCall","src":"35907:45:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35895:6:18"},"nodeType":"YulFunctionCall","src":"35895:58:18"},"nodeType":"YulExpressionStatement","src":"35895:58:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"35873:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"35880:3:18","type":""}],"src":"35802:157:18"},{"body":{"nodeType":"YulBlock","src":"36109:253:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36182:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"36191:3:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36120:61:18"},"nodeType":"YulFunctionCall","src":"36120:75:18"},"nodeType":"YulExpressionStatement","src":"36120:75:18"},{"nodeType":"YulAssignment","src":"36204:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36215:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"36220:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36211:3:18"},"nodeType":"YulFunctionCall","src":"36211:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36204:3:18"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"36295:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"36304:3:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36233:61:18"},"nodeType":"YulFunctionCall","src":"36233:75:18"},"nodeType":"YulExpressionStatement","src":"36233:75:18"},{"nodeType":"YulAssignment","src":"36317:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36328:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"36333:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36324:3:18"},"nodeType":"YulFunctionCall","src":"36324:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36317:3:18"}]},{"nodeType":"YulAssignment","src":"36346:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"36353:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36346:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36080:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"36086:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36094:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36105:3:18","type":""}],"src":"35965:397:18"},{"body":{"nodeType":"YulBlock","src":"36484:140:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"36557:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"36566:3:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36495:61:18"},"nodeType":"YulFunctionCall","src":"36495:75:18"},"nodeType":"YulExpressionStatement","src":"36495:75:18"},{"nodeType":"YulAssignment","src":"36579:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36590:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"36595:2:18","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36586:3:18"},"nodeType":"YulFunctionCall","src":"36586:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36579:3:18"}]},{"nodeType":"YulAssignment","src":"36608:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"36615:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36608:3:18"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36463:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"36469:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36480:3:18","type":""}],"src":"36368:256:18"},{"body":{"nodeType":"YulBlock","src":"36736:195:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36758:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"36766:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36754:3:18"},"nodeType":"YulFunctionCall","src":"36754:14:18"},{"hexValue":"4d6573736167652070617373696e67207072656465706c6f7920686173206e6f","kind":"string","nodeType":"YulLiteral","src":"36770:34:18","type":"","value":"Message passing predeploy has no"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36747:6:18"},"nodeType":"YulFunctionCall","src":"36747:58:18"},"nodeType":"YulExpressionStatement","src":"36747:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36826:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"36834:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36822:3:18"},"nodeType":"YulFunctionCall","src":"36822:15:18"},{"hexValue":"74206265656e20696e697469616c697a6564206f7220696e76616c6964207072","kind":"string","nodeType":"YulLiteral","src":"36839:34:18","type":"","value":"t been initialized or invalid pr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36815:6:18"},"nodeType":"YulFunctionCall","src":"36815:59:18"},"nodeType":"YulExpressionStatement","src":"36815:59:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36895:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"36903:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36891:3:18"},"nodeType":"YulFunctionCall","src":"36891:15:18"},{"hexValue":"6f6f662070726f76696465642e","kind":"string","nodeType":"YulLiteral","src":"36908:15:18","type":"","value":"oof provided."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36884:6:18"},"nodeType":"YulFunctionCall","src":"36884:40:18"},"nodeType":"YulExpressionStatement","src":"36884:40:18"}]},"name":"store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36728:6:18","type":""}],"src":"36630:301:18"},{"body":{"nodeType":"YulBlock","src":"37083:220:18","statements":[{"nodeType":"YulAssignment","src":"37093:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37159:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"37164:2:18","type":"","value":"77"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37100:58:18"},"nodeType":"YulFunctionCall","src":"37100:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37093:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37265:3:18"}],"functionName":{"name":"store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492","nodeType":"YulIdentifier","src":"37176:88:18"},"nodeType":"YulFunctionCall","src":"37176:93:18"},"nodeType":"YulExpressionStatement","src":"37176:93:18"},{"nodeType":"YulAssignment","src":"37278:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37289:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"37294:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37285:3:18"},"nodeType":"YulFunctionCall","src":"37285:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37278:3:18"}]}]},"name":"abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37071:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37079:3:18","type":""}],"src":"36937:366:18"},{"body":{"nodeType":"YulBlock","src":"37480:248:18","statements":[{"nodeType":"YulAssignment","src":"37490:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37502:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37513:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37498:3:18"},"nodeType":"YulFunctionCall","src":"37498:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37490:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37537:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"37548:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37533:3:18"},"nodeType":"YulFunctionCall","src":"37533:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37556:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"37562:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37552:3:18"},"nodeType":"YulFunctionCall","src":"37552:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37526:6:18"},"nodeType":"YulFunctionCall","src":"37526:47:18"},"nodeType":"YulExpressionStatement","src":"37526:47:18"},{"nodeType":"YulAssignment","src":"37582:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37716:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37590:124:18"},"nodeType":"YulFunctionCall","src":"37590:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37582:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37460:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37475:4:18","type":""}],"src":"37309:419:18"},{"body":{"nodeType":"YulBlock","src":"37850:140:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37923:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"37932:3:18"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37861:61:18"},"nodeType":"YulFunctionCall","src":"37861:75:18"},"nodeType":"YulExpressionStatement","src":"37861:75:18"},{"nodeType":"YulAssignment","src":"37945:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37956:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"37961:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37952:3:18"},"nodeType":"YulFunctionCall","src":"37952:12:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37945:3:18"}]},{"nodeType":"YulAssignment","src":"37974:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"37981:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37974:3:18"}]}]},"name":"abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37829:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37835:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37846:3:18","type":""}],"src":"37734:256:18"},{"body":{"nodeType":"YulBlock","src":"38039:43:18","statements":[{"nodeType":"YulAssignment","src":"38049:27:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38064:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"38071:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"38060:3:18"},"nodeType":"YulFunctionCall","src":"38060:16:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"38049:7:18"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38021:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"38031:7:18","type":""}],"src":"37996:86:18"},{"body":{"nodeType":"YulBlock","src":"38131:53:18","statements":[{"nodeType":"YulAssignment","src":"38141:36:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"38166:3:18","type":"","value":"248"},{"name":"value","nodeType":"YulIdentifier","src":"38171:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"38162:3:18"},"nodeType":"YulFunctionCall","src":"38162:15:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"38141:8:18"}]}]},"name":"shift_left_248","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38112:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"38122:8:18","type":""}],"src":"38088:96:18"},{"body":{"nodeType":"YulBlock","src":"38235:48:18","statements":[{"nodeType":"YulAssignment","src":"38245:32:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38271:5:18"}],"functionName":{"name":"shift_left_248","nodeType":"YulIdentifier","src":"38256:14:18"},"nodeType":"YulFunctionCall","src":"38256:21:18"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"38245:7:18"}]}]},"name":"leftAlign_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38217:5:18","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"38227:7:18","type":""}],"src":"38190:93:18"},{"body":{"nodeType":"YulBlock","src":"38368:70:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38385:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38424:5:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"38408:15:18"},"nodeType":"YulFunctionCall","src":"38408:22:18"}],"functionName":{"name":"leftAlign_t_uint8","nodeType":"YulIdentifier","src":"38390:17:18"},"nodeType":"YulFunctionCall","src":"38390:41:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38378:6:18"},"nodeType":"YulFunctionCall","src":"38378:54:18"},"nodeType":"YulExpressionStatement","src":"38378:54:18"}]},"name":"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"38356:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38363:3:18","type":""}],"src":"38289:149:18"},{"body":{"nodeType":"YulBlock","src":"38556:135:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38625:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"38634:3:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38567:57:18"},"nodeType":"YulFunctionCall","src":"38567:71:18"},"nodeType":"YulExpressionStatement","src":"38567:71:18"},{"nodeType":"YulAssignment","src":"38647:18:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38658:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"38663:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38654:3:18"},"nodeType":"YulFunctionCall","src":"38654:11:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38647:3:18"}]},{"nodeType":"YulAssignment","src":"38675:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"38682:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38675:3:18"}]}]},"name":"abi_encode_tuple_packed_t_uint8__to_t_uint8__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38535:3:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38541:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38552:3:18","type":""}],"src":"38444:247:18"},{"body":{"nodeType":"YulBlock","src":"38803:51:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38825:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"38833:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38821:3:18"},"nodeType":"YulFunctionCall","src":"38821:14:18"},{"hexValue":"21627269646765","kind":"string","nodeType":"YulLiteral","src":"38837:9:18","type":"","value":"!bridge"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38814:6:18"},"nodeType":"YulFunctionCall","src":"38814:33:18"},"nodeType":"YulExpressionStatement","src":"38814:33:18"}]},"name":"store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38795:6:18","type":""}],"src":"38697:157:18"},{"body":{"nodeType":"YulBlock","src":"39006:219:18","statements":[{"nodeType":"YulAssignment","src":"39016:73:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39082:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"39087:1:18","type":"","value":"7"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39023:58:18"},"nodeType":"YulFunctionCall","src":"39023:66:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39016:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39187:3:18"}],"functionName":{"name":"store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c","nodeType":"YulIdentifier","src":"39098:88:18"},"nodeType":"YulFunctionCall","src":"39098:93:18"},"nodeType":"YulExpressionStatement","src":"39098:93:18"},{"nodeType":"YulAssignment","src":"39200:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39211:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"39216:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39207:3:18"},"nodeType":"YulFunctionCall","src":"39207:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39200:3:18"}]}]},"name":"abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38994:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39002:3:18","type":""}],"src":"38860:365:18"},{"body":{"nodeType":"YulBlock","src":"39402:248:18","statements":[{"nodeType":"YulAssignment","src":"39412:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39424:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39435:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39420:3:18"},"nodeType":"YulFunctionCall","src":"39420:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39412:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39459:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"39470:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39455:3:18"},"nodeType":"YulFunctionCall","src":"39455:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39478:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"39484:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39474:3:18"},"nodeType":"YulFunctionCall","src":"39474:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39448:6:18"},"nodeType":"YulFunctionCall","src":"39448:47:18"},"nodeType":"YulExpressionStatement","src":"39448:47:18"},{"nodeType":"YulAssignment","src":"39504:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39638:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39512:124:18"},"nodeType":"YulFunctionCall","src":"39512:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39504:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39382:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39397:4:18","type":""}],"src":"39231:419:18"},{"body":{"nodeType":"YulBlock","src":"39719:80:18","statements":[{"nodeType":"YulAssignment","src":"39729:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"39744:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"39738:5:18"},"nodeType":"YulFunctionCall","src":"39738:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"39729:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"39787:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"39760:26:18"},"nodeType":"YulFunctionCall","src":"39760:33:18"},"nodeType":"YulExpressionStatement","src":"39760:33:18"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"39697:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"39705:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"39713:5:18","type":""}],"src":"39656:143:18"},{"body":{"nodeType":"YulBlock","src":"39882:274:18","statements":[{"body":{"nodeType":"YulBlock","src":"39928:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"39930:77:18"},"nodeType":"YulFunctionCall","src":"39930:79:18"},"nodeType":"YulExpressionStatement","src":"39930:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"39903:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"39912:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39899:3:18"},"nodeType":"YulFunctionCall","src":"39899:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"39924:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"39895:3:18"},"nodeType":"YulFunctionCall","src":"39895:32:18"},"nodeType":"YulIf","src":"39892:119:18"},{"nodeType":"YulBlock","src":"40021:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"40036:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"40050:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"40040:6:18","type":""}]},{"nodeType":"YulAssignment","src":"40065:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40111:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"40122:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40107:3:18"},"nodeType":"YulFunctionCall","src":"40107:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"40131:7:18"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"40075:31:18"},"nodeType":"YulFunctionCall","src":"40075:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"40065:6:18"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39852:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"39863:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"39875:6:18","type":""}],"src":"39805:351:18"},{"body":{"nodeType":"YulBlock","src":"40190:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40207:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40210:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40200:6:18"},"nodeType":"YulFunctionCall","src":"40200:88:18"},"nodeType":"YulExpressionStatement","src":"40200:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40304:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"40307:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40297:6:18"},"nodeType":"YulFunctionCall","src":"40297:15:18"},"nodeType":"YulExpressionStatement","src":"40297:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"40328:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"40331:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"40321:6:18"},"nodeType":"YulFunctionCall","src":"40321:15:18"},"nodeType":"YulExpressionStatement","src":"40321:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"40162:180:18"},{"body":{"nodeType":"YulBlock","src":"40454:54:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40476:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"40484:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40472:3:18"},"nodeType":"YulFunctionCall","src":"40472:14:18"},{"hexValue":"217472756e6361746564","kind":"string","nodeType":"YulLiteral","src":"40488:12:18","type":"","value":"!truncated"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40465:6:18"},"nodeType":"YulFunctionCall","src":"40465:36:18"},"nodeType":"YulExpressionStatement","src":"40465:36:18"}]},"name":"store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40446:6:18","type":""}],"src":"40348:160:18"},{"body":{"nodeType":"YulBlock","src":"40660:220:18","statements":[{"nodeType":"YulAssignment","src":"40670:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40736:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"40741:2:18","type":"","value":"10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40677:58:18"},"nodeType":"YulFunctionCall","src":"40677:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40670:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40842:3:18"}],"functionName":{"name":"store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728","nodeType":"YulIdentifier","src":"40753:88:18"},"nodeType":"YulFunctionCall","src":"40753:93:18"},"nodeType":"YulExpressionStatement","src":"40753:93:18"},{"nodeType":"YulAssignment","src":"40855:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40866:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"40871:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40862:3:18"},"nodeType":"YulFunctionCall","src":"40862:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40855:3:18"}]}]},"name":"abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40648:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40656:3:18","type":""}],"src":"40514:366:18"},{"body":{"nodeType":"YulBlock","src":"41057:248:18","statements":[{"nodeType":"YulAssignment","src":"41067:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41079:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41090:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41075:3:18"},"nodeType":"YulFunctionCall","src":"41075:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41067:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41114:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41125:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41110:3:18"},"nodeType":"YulFunctionCall","src":"41110:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41133:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"41139:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41129:3:18"},"nodeType":"YulFunctionCall","src":"41129:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41103:6:18"},"nodeType":"YulFunctionCall","src":"41103:47:18"},"nodeType":"YulExpressionStatement","src":"41103:47:18"},{"nodeType":"YulAssignment","src":"41159:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41293:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41167:124:18"},"nodeType":"YulFunctionCall","src":"41167:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41159:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41037:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41052:4:18","type":""}],"src":"40886:419:18"},{"body":{"nodeType":"YulBlock","src":"41417:70:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41439:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"41447:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41435:3:18"},"nodeType":"YulFunctionCall","src":"41435:14:18"},{"hexValue":"50726f76696465642070726f6f6620697320696e76616c69642e","kind":"string","nodeType":"YulLiteral","src":"41451:28:18","type":"","value":"Provided proof is invalid."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41428:6:18"},"nodeType":"YulFunctionCall","src":"41428:52:18"},"nodeType":"YulExpressionStatement","src":"41428:52:18"}]},"name":"store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41409:6:18","type":""}],"src":"41311:176:18"},{"body":{"nodeType":"YulBlock","src":"41639:220:18","statements":[{"nodeType":"YulAssignment","src":"41649:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41715:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"41720:2:18","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41656:58:18"},"nodeType":"YulFunctionCall","src":"41656:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41649:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41821:3:18"}],"functionName":{"name":"store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403","nodeType":"YulIdentifier","src":"41732:88:18"},"nodeType":"YulFunctionCall","src":"41732:93:18"},"nodeType":"YulExpressionStatement","src":"41732:93:18"},{"nodeType":"YulAssignment","src":"41834:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41845:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"41850:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41841:3:18"},"nodeType":"YulFunctionCall","src":"41841:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41834:3:18"}]}]},"name":"abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41627:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41635:3:18","type":""}],"src":"41493:366:18"},{"body":{"nodeType":"YulBlock","src":"42036:248:18","statements":[{"nodeType":"YulAssignment","src":"42046:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42058:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42069:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42054:3:18"},"nodeType":"YulFunctionCall","src":"42054:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42046:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42093:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42104:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42089:3:18"},"nodeType":"YulFunctionCall","src":"42089:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42112:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"42118:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42108:3:18"},"nodeType":"YulFunctionCall","src":"42108:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42082:6:18"},"nodeType":"YulFunctionCall","src":"42082:47:18"},"nodeType":"YulExpressionStatement","src":"42082:47:18"},{"nodeType":"YulAssignment","src":"42138:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42272:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42146:124:18"},"nodeType":"YulFunctionCall","src":"42146:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42138:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42016:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42031:4:18","type":""}],"src":"41865:419:18"},{"body":{"nodeType":"YulBlock","src":"42396:70:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42418:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"42426:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42414:3:18"},"nodeType":"YulFunctionCall","src":"42414:14:18"},{"hexValue":"496e76616c696420524c5020627974657333322076616c75652e","kind":"string","nodeType":"YulLiteral","src":"42430:28:18","type":"","value":"Invalid RLP bytes32 value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42407:6:18"},"nodeType":"YulFunctionCall","src":"42407:52:18"},"nodeType":"YulExpressionStatement","src":"42407:52:18"}]},"name":"store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42388:6:18","type":""}],"src":"42290:176:18"},{"body":{"nodeType":"YulBlock","src":"42618:220:18","statements":[{"nodeType":"YulAssignment","src":"42628:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42694:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"42699:2:18","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42635:58:18"},"nodeType":"YulFunctionCall","src":"42635:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42628:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42800:3:18"}],"functionName":{"name":"store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5","nodeType":"YulIdentifier","src":"42711:88:18"},"nodeType":"YulFunctionCall","src":"42711:93:18"},"nodeType":"YulExpressionStatement","src":"42711:93:18"},{"nodeType":"YulAssignment","src":"42813:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42824:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"42829:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42820:3:18"},"nodeType":"YulFunctionCall","src":"42820:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42813:3:18"}]}]},"name":"abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42606:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42614:3:18","type":""}],"src":"42472:366:18"},{"body":{"nodeType":"YulBlock","src":"43015:248:18","statements":[{"nodeType":"YulAssignment","src":"43025:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43037:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43048:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43033:3:18"},"nodeType":"YulFunctionCall","src":"43033:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43025:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43072:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43083:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43068:3:18"},"nodeType":"YulFunctionCall","src":"43068:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43091:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"43097:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43087:3:18"},"nodeType":"YulFunctionCall","src":"43087:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43061:6:18"},"nodeType":"YulFunctionCall","src":"43061:47:18"},"nodeType":"YulExpressionStatement","src":"43061:47:18"},{"nodeType":"YulAssignment","src":"43117:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43251:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43125:124:18"},"nodeType":"YulFunctionCall","src":"43125:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43117:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42995:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43010:4:18","type":""}],"src":"42844:419:18"},{"body":{"nodeType":"YulBlock","src":"43297:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43314:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43317:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43307:6:18"},"nodeType":"YulFunctionCall","src":"43307:88:18"},"nodeType":"YulExpressionStatement","src":"43307:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43411:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"43414:4:18","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43404:6:18"},"nodeType":"YulFunctionCall","src":"43404:15:18"},"nodeType":"YulExpressionStatement","src":"43404:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"43435:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"43438:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"43428:6:18"},"nodeType":"YulFunctionCall","src":"43428:15:18"},"nodeType":"YulExpressionStatement","src":"43428:15:18"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"43269:180:18"},{"body":{"nodeType":"YulBlock","src":"43561:61:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43583:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43591:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43579:3:18"},"nodeType":"YulFunctionCall","src":"43579:14:18"},{"hexValue":"496e76616c696420726f6f742068617368","kind":"string","nodeType":"YulLiteral","src":"43595:19:18","type":"","value":"Invalid root hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43572:6:18"},"nodeType":"YulFunctionCall","src":"43572:43:18"},"nodeType":"YulExpressionStatement","src":"43572:43:18"}]},"name":"store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43553:6:18","type":""}],"src":"43455:167:18"},{"body":{"nodeType":"YulBlock","src":"43774:220:18","statements":[{"nodeType":"YulAssignment","src":"43784:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43850:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"43855:2:18","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43791:58:18"},"nodeType":"YulFunctionCall","src":"43791:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43784:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43956:3:18"}],"functionName":{"name":"store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c","nodeType":"YulIdentifier","src":"43867:88:18"},"nodeType":"YulFunctionCall","src":"43867:93:18"},"nodeType":"YulExpressionStatement","src":"43867:93:18"},{"nodeType":"YulAssignment","src":"43969:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43980:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"43985:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43976:3:18"},"nodeType":"YulFunctionCall","src":"43976:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43969:3:18"}]}]},"name":"abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43762:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43770:3:18","type":""}],"src":"43628:366:18"},{"body":{"nodeType":"YulBlock","src":"44171:248:18","statements":[{"nodeType":"YulAssignment","src":"44181:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44193:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"44204:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44189:3:18"},"nodeType":"YulFunctionCall","src":"44189:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44181:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44228:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"44239:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44224:3:18"},"nodeType":"YulFunctionCall","src":"44224:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44247:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"44253:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44243:3:18"},"nodeType":"YulFunctionCall","src":"44243:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44217:6:18"},"nodeType":"YulFunctionCall","src":"44217:47:18"},"nodeType":"YulExpressionStatement","src":"44217:47:18"},{"nodeType":"YulAssignment","src":"44273:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44407:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44281:124:18"},"nodeType":"YulFunctionCall","src":"44281:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44273:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44151:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44166:4:18","type":""}],"src":"44000:419:18"},{"body":{"nodeType":"YulBlock","src":"44531:70:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44553:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44561:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44549:3:18"},"nodeType":"YulFunctionCall","src":"44549:14:18"},{"hexValue":"496e76616c696420696e7465726e616c206e6f64652068617368","kind":"string","nodeType":"YulLiteral","src":"44565:28:18","type":"","value":"Invalid internal node hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44542:6:18"},"nodeType":"YulFunctionCall","src":"44542:52:18"},"nodeType":"YulExpressionStatement","src":"44542:52:18"}]},"name":"store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44523:6:18","type":""}],"src":"44425:176:18"},{"body":{"nodeType":"YulBlock","src":"44753:220:18","statements":[{"nodeType":"YulAssignment","src":"44763:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44829:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"44834:2:18","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44770:58:18"},"nodeType":"YulFunctionCall","src":"44770:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44763:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44935:3:18"}],"functionName":{"name":"store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b","nodeType":"YulIdentifier","src":"44846:88:18"},"nodeType":"YulFunctionCall","src":"44846:93:18"},"nodeType":"YulExpressionStatement","src":"44846:93:18"},{"nodeType":"YulAssignment","src":"44948:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44959:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"44964:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44955:3:18"},"nodeType":"YulFunctionCall","src":"44955:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44948:3:18"}]}]},"name":"abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44741:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44749:3:18","type":""}],"src":"44607:366:18"},{"body":{"nodeType":"YulBlock","src":"45150:248:18","statements":[{"nodeType":"YulAssignment","src":"45160:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45172:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"45183:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45168:3:18"},"nodeType":"YulFunctionCall","src":"45168:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45160:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45207:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"45218:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45203:3:18"},"nodeType":"YulFunctionCall","src":"45203:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45226:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"45232:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45222:3:18"},"nodeType":"YulFunctionCall","src":"45222:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45196:6:18"},"nodeType":"YulFunctionCall","src":"45196:47:18"},"nodeType":"YulExpressionStatement","src":"45196:47:18"},{"nodeType":"YulAssignment","src":"45252:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45386:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45260:124:18"},"nodeType":"YulFunctionCall","src":"45260:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45252:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45130:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45145:4:18","type":""}],"src":"44979:419:18"},{"body":{"nodeType":"YulBlock","src":"45432:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45449:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45452:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45442:6:18"},"nodeType":"YulFunctionCall","src":"45442:88:18"},"nodeType":"YulExpressionStatement","src":"45442:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45546:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"45549:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45539:6:18"},"nodeType":"YulFunctionCall","src":"45539:15:18"},"nodeType":"YulExpressionStatement","src":"45539:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"45570:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"45573:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"45563:6:18"},"nodeType":"YulFunctionCall","src":"45563:15:18"},"nodeType":"YulExpressionStatement","src":"45563:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"45404:180:18"},{"body":{"nodeType":"YulBlock","src":"45622:138:18","statements":[{"nodeType":"YulAssignment","src":"45632:23:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"45653:1:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"45637:15:18"},"nodeType":"YulFunctionCall","src":"45637:18:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"45632:1:18"}]},{"nodeType":"YulAssignment","src":"45664:23:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"45685:1:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"45669:15:18"},"nodeType":"YulFunctionCall","src":"45669:18:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"45664:1:18"}]},{"body":{"nodeType":"YulBlock","src":"45709:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"45711:16:18"},"nodeType":"YulFunctionCall","src":"45711:18:18"},"nodeType":"YulExpressionStatement","src":"45711:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"45706:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"45699:6:18"},"nodeType":"YulFunctionCall","src":"45699:9:18"},"nodeType":"YulIf","src":"45696:35:18"},{"nodeType":"YulAssignment","src":"45740:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"45749:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"45752:1:18"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"45745:3:18"},"nodeType":"YulFunctionCall","src":"45745:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"45740:1:18"}]}]},"name":"mod_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"45611:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"45614:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"45620:1:18","type":""}],"src":"45590:170:18"},{"body":{"nodeType":"YulBlock","src":"45809:148:18","statements":[{"nodeType":"YulAssignment","src":"45819:23:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"45840:1:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"45824:15:18"},"nodeType":"YulFunctionCall","src":"45824:18:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"45819:1:18"}]},{"nodeType":"YulAssignment","src":"45851:23:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"45872:1:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"45856:15:18"},"nodeType":"YulFunctionCall","src":"45856:18:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"45851:1:18"}]},{"nodeType":"YulAssignment","src":"45883:17:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"45895:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"45898:1:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45891:3:18"},"nodeType":"YulFunctionCall","src":"45891:9:18"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"45883:4:18"}]},{"body":{"nodeType":"YulBlock","src":"45928:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"45930:16:18"},"nodeType":"YulFunctionCall","src":"45930:18:18"},"nodeType":"YulExpressionStatement","src":"45930:18:18"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"45916:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"45922:4:18","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"45913:2:18"},"nodeType":"YulFunctionCall","src":"45913:14:18"},"nodeType":"YulIf","src":"45910:40:18"}]},"name":"checked_sub_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"45795:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"45798:1:18","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"45804:4:18","type":""}],"src":"45766:191:18"},{"body":{"nodeType":"YulBlock","src":"46069:119:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46091:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"46099:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46087:3:18"},"nodeType":"YulFunctionCall","src":"46087:14:18"},{"hexValue":"52656365697665642061206e6f6465207769746820616e20756e6b6e6f776e20","kind":"string","nodeType":"YulLiteral","src":"46103:34:18","type":"","value":"Received a node with an unknown "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46080:6:18"},"nodeType":"YulFunctionCall","src":"46080:58:18"},"nodeType":"YulExpressionStatement","src":"46080:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46159:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"46167:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46155:3:18"},"nodeType":"YulFunctionCall","src":"46155:15:18"},{"hexValue":"707265666978","kind":"string","nodeType":"YulLiteral","src":"46172:8:18","type":"","value":"prefix"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46148:6:18"},"nodeType":"YulFunctionCall","src":"46148:33:18"},"nodeType":"YulExpressionStatement","src":"46148:33:18"}]},"name":"store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46061:6:18","type":""}],"src":"45963:225:18"},{"body":{"nodeType":"YulBlock","src":"46340:220:18","statements":[{"nodeType":"YulAssignment","src":"46350:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46416:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"46421:2:18","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46357:58:18"},"nodeType":"YulFunctionCall","src":"46357:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46350:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46522:3:18"}],"functionName":{"name":"store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc","nodeType":"YulIdentifier","src":"46433:88:18"},"nodeType":"YulFunctionCall","src":"46433:93:18"},"nodeType":"YulExpressionStatement","src":"46433:93:18"},{"nodeType":"YulAssignment","src":"46535:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46546:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"46551:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46542:3:18"},"nodeType":"YulFunctionCall","src":"46542:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46535:3:18"}]}]},"name":"abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46328:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46336:3:18","type":""}],"src":"46194:366:18"},{"body":{"nodeType":"YulBlock","src":"46737:248:18","statements":[{"nodeType":"YulAssignment","src":"46747:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46759:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"46770:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46755:3:18"},"nodeType":"YulFunctionCall","src":"46755:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46747:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46794:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"46805:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46790:3:18"},"nodeType":"YulFunctionCall","src":"46790:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46813:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"46819:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46809:3:18"},"nodeType":"YulFunctionCall","src":"46809:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46783:6:18"},"nodeType":"YulFunctionCall","src":"46783:47:18"},"nodeType":"YulExpressionStatement","src":"46783:47:18"},{"nodeType":"YulAssignment","src":"46839:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46973:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46847:124:18"},"nodeType":"YulFunctionCall","src":"46847:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46839:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46717:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46732:4:18","type":""}],"src":"46566:419:18"},{"body":{"nodeType":"YulBlock","src":"47097:73:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47119:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"47127:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47115:3:18"},"nodeType":"YulFunctionCall","src":"47115:14:18"},{"hexValue":"526563656976656420616e20756e706172736561626c65206e6f64652e","kind":"string","nodeType":"YulLiteral","src":"47131:31:18","type":"","value":"Received an unparseable node."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47108:6:18"},"nodeType":"YulFunctionCall","src":"47108:55:18"},"nodeType":"YulExpressionStatement","src":"47108:55:18"}]},"name":"store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47089:6:18","type":""}],"src":"46991:179:18"},{"body":{"nodeType":"YulBlock","src":"47322:220:18","statements":[{"nodeType":"YulAssignment","src":"47332:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47398:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"47403:2:18","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47339:58:18"},"nodeType":"YulFunctionCall","src":"47339:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47332:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47504:3:18"}],"functionName":{"name":"store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40","nodeType":"YulIdentifier","src":"47415:88:18"},"nodeType":"YulFunctionCall","src":"47415:93:18"},"nodeType":"YulExpressionStatement","src":"47415:93:18"},{"nodeType":"YulAssignment","src":"47517:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47528:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"47533:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47524:3:18"},"nodeType":"YulFunctionCall","src":"47524:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47517:3:18"}]}]},"name":"abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47310:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47318:3:18","type":""}],"src":"47176:366:18"},{"body":{"nodeType":"YulBlock","src":"47719:248:18","statements":[{"nodeType":"YulAssignment","src":"47729:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47741:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"47752:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47737:3:18"},"nodeType":"YulFunctionCall","src":"47737:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47729:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47776:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"47787:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47772:3:18"},"nodeType":"YulFunctionCall","src":"47772:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47795:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"47801:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47791:3:18"},"nodeType":"YulFunctionCall","src":"47791:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47765:6:18"},"nodeType":"YulFunctionCall","src":"47765:47:18"},"nodeType":"YulExpressionStatement","src":"47765:47:18"},{"nodeType":"YulAssignment","src":"47821:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47955:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47829:124:18"},"nodeType":"YulFunctionCall","src":"47829:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47821:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47699:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47714:4:18","type":""}],"src":"47548:419:18"},{"body":{"nodeType":"YulBlock","src":"48079:67:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48101:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"48109:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48097:3:18"},"nodeType":"YulFunctionCall","src":"48097:14:18"},{"hexValue":"496e76616c696420524c50206c6973742076616c75652e","kind":"string","nodeType":"YulLiteral","src":"48113:25:18","type":"","value":"Invalid RLP list value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48090:6:18"},"nodeType":"YulFunctionCall","src":"48090:49:18"},"nodeType":"YulExpressionStatement","src":"48090:49:18"}]},"name":"store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48071:6:18","type":""}],"src":"47973:173:18"},{"body":{"nodeType":"YulBlock","src":"48298:220:18","statements":[{"nodeType":"YulAssignment","src":"48308:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48374:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"48379:2:18","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48315:58:18"},"nodeType":"YulFunctionCall","src":"48315:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48308:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48480:3:18"}],"functionName":{"name":"store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a","nodeType":"YulIdentifier","src":"48391:88:18"},"nodeType":"YulFunctionCall","src":"48391:93:18"},"nodeType":"YulExpressionStatement","src":"48391:93:18"},{"nodeType":"YulAssignment","src":"48493:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48504:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"48509:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48500:3:18"},"nodeType":"YulFunctionCall","src":"48500:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48493:3:18"}]}]},"name":"abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48286:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48294:3:18","type":""}],"src":"48152:366:18"},{"body":{"nodeType":"YulBlock","src":"48695:248:18","statements":[{"nodeType":"YulAssignment","src":"48705:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48717:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"48728:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48713:3:18"},"nodeType":"YulFunctionCall","src":"48713:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48705:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48752:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"48763:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48748:3:18"},"nodeType":"YulFunctionCall","src":"48748:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48771:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"48777:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48767:3:18"},"nodeType":"YulFunctionCall","src":"48767:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48741:6:18"},"nodeType":"YulFunctionCall","src":"48741:47:18"},"nodeType":"YulExpressionStatement","src":"48741:47:18"},{"nodeType":"YulAssignment","src":"48797:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48931:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48805:124:18"},"nodeType":"YulFunctionCall","src":"48805:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48797:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48675:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48690:4:18","type":""}],"src":"48524:419:18"},{"body":{"nodeType":"YulBlock","src":"49055:123:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49077:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"49085:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49073:3:18"},"nodeType":"YulFunctionCall","src":"49073:14:18"},{"hexValue":"50726f766964656420524c50206c6973742065786365656473206d6178206c69","kind":"string","nodeType":"YulLiteral","src":"49089:34:18","type":"","value":"Provided RLP list exceeds max li"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49066:6:18"},"nodeType":"YulFunctionCall","src":"49066:58:18"},"nodeType":"YulExpressionStatement","src":"49066:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49145:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"49153:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49141:3:18"},"nodeType":"YulFunctionCall","src":"49141:15:18"},{"hexValue":"7374206c656e6774682e","kind":"string","nodeType":"YulLiteral","src":"49158:12:18","type":"","value":"st length."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49134:6:18"},"nodeType":"YulFunctionCall","src":"49134:37:18"},"nodeType":"YulExpressionStatement","src":"49134:37:18"}]},"name":"store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49047:6:18","type":""}],"src":"48949:229:18"},{"body":{"nodeType":"YulBlock","src":"49330:220:18","statements":[{"nodeType":"YulAssignment","src":"49340:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49406:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"49411:2:18","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49347:58:18"},"nodeType":"YulFunctionCall","src":"49347:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49340:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49512:3:18"}],"functionName":{"name":"store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1","nodeType":"YulIdentifier","src":"49423:88:18"},"nodeType":"YulFunctionCall","src":"49423:93:18"},"nodeType":"YulExpressionStatement","src":"49423:93:18"},{"nodeType":"YulAssignment","src":"49525:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49536:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"49541:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49532:3:18"},"nodeType":"YulFunctionCall","src":"49532:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49525:3:18"}]}]},"name":"abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49318:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49326:3:18","type":""}],"src":"49184:366:18"},{"body":{"nodeType":"YulBlock","src":"49727:248:18","statements":[{"nodeType":"YulAssignment","src":"49737:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49749:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"49760:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49745:3:18"},"nodeType":"YulFunctionCall","src":"49745:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49737:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49784:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"49795:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49780:3:18"},"nodeType":"YulFunctionCall","src":"49780:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49803:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"49809:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49799:3:18"},"nodeType":"YulFunctionCall","src":"49799:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49773:6:18"},"nodeType":"YulFunctionCall","src":"49773:47:18"},"nodeType":"YulExpressionStatement","src":"49773:47:18"},{"nodeType":"YulAssignment","src":"49829:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49963:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49837:124:18"},"nodeType":"YulFunctionCall","src":"49837:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49829:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49707:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49722:4:18","type":""}],"src":"49556:419:18"},{"body":{"nodeType":"YulBlock","src":"50087:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50109:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"50117:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50105:3:18"},"nodeType":"YulFunctionCall","src":"50105:14:18"},{"hexValue":"524c50206974656d2063616e6e6f74206265206e756c6c2e","kind":"string","nodeType":"YulLiteral","src":"50121:26:18","type":"","value":"RLP item cannot be null."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50098:6:18"},"nodeType":"YulFunctionCall","src":"50098:50:18"},"nodeType":"YulExpressionStatement","src":"50098:50:18"}]},"name":"store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50079:6:18","type":""}],"src":"49981:174:18"},{"body":{"nodeType":"YulBlock","src":"50307:220:18","statements":[{"nodeType":"YulAssignment","src":"50317:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50383:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"50388:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50324:58:18"},"nodeType":"YulFunctionCall","src":"50324:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50317:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50489:3:18"}],"functionName":{"name":"store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29","nodeType":"YulIdentifier","src":"50400:88:18"},"nodeType":"YulFunctionCall","src":"50400:93:18"},"nodeType":"YulExpressionStatement","src":"50400:93:18"},{"nodeType":"YulAssignment","src":"50502:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50513:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"50518:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50509:3:18"},"nodeType":"YulFunctionCall","src":"50509:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50502:3:18"}]}]},"name":"abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50295:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50303:3:18","type":""}],"src":"50161:366:18"},{"body":{"nodeType":"YulBlock","src":"50704:248:18","statements":[{"nodeType":"YulAssignment","src":"50714:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50726:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"50737:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50722:3:18"},"nodeType":"YulFunctionCall","src":"50722:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50714:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50761:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"50772:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50757:3:18"},"nodeType":"YulFunctionCall","src":"50757:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50780:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"50786:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50776:3:18"},"nodeType":"YulFunctionCall","src":"50776:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50750:6:18"},"nodeType":"YulFunctionCall","src":"50750:47:18"},"nodeType":"YulExpressionStatement","src":"50750:47:18"},{"nodeType":"YulAssignment","src":"50806:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50940:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50814:124:18"},"nodeType":"YulFunctionCall","src":"50814:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50806:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50684:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50699:4:18","type":""}],"src":"50533:419:18"},{"body":{"nodeType":"YulBlock","src":"51064:69:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51086:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"51094:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51082:3:18"},"nodeType":"YulFunctionCall","src":"51082:14:18"},{"hexValue":"496e76616c696420524c502073686f727420737472696e672e","kind":"string","nodeType":"YulLiteral","src":"51098:27:18","type":"","value":"Invalid RLP short string."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51075:6:18"},"nodeType":"YulFunctionCall","src":"51075:51:18"},"nodeType":"YulExpressionStatement","src":"51075:51:18"}]},"name":"store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51056:6:18","type":""}],"src":"50958:175:18"},{"body":{"nodeType":"YulBlock","src":"51285:220:18","statements":[{"nodeType":"YulAssignment","src":"51295:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51361:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"51366:2:18","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51302:58:18"},"nodeType":"YulFunctionCall","src":"51302:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51295:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51467:3:18"}],"functionName":{"name":"store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975","nodeType":"YulIdentifier","src":"51378:88:18"},"nodeType":"YulFunctionCall","src":"51378:93:18"},"nodeType":"YulExpressionStatement","src":"51378:93:18"},{"nodeType":"YulAssignment","src":"51480:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51491:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"51496:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51487:3:18"},"nodeType":"YulFunctionCall","src":"51487:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51480:3:18"}]}]},"name":"abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51273:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51281:3:18","type":""}],"src":"51139:366:18"},{"body":{"nodeType":"YulBlock","src":"51682:248:18","statements":[{"nodeType":"YulAssignment","src":"51692:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51704:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"51715:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51700:3:18"},"nodeType":"YulFunctionCall","src":"51700:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51692:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51739:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"51750:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51735:3:18"},"nodeType":"YulFunctionCall","src":"51735:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51758:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"51764:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51754:3:18"},"nodeType":"YulFunctionCall","src":"51754:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51728:6:18"},"nodeType":"YulFunctionCall","src":"51728:47:18"},"nodeType":"YulExpressionStatement","src":"51728:47:18"},{"nodeType":"YulAssignment","src":"51784:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51918:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51792:124:18"},"nodeType":"YulFunctionCall","src":"51792:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51784:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51662:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51677:4:18","type":""}],"src":"51511:419:18"},{"body":{"nodeType":"YulBlock","src":"52042:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"52064:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"52072:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52060:3:18"},"nodeType":"YulFunctionCall","src":"52060:14:18"},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e67206c656e6774682e","kind":"string","nodeType":"YulLiteral","src":"52076:33:18","type":"","value":"Invalid RLP long string length."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52053:6:18"},"nodeType":"YulFunctionCall","src":"52053:57:18"},"nodeType":"YulExpressionStatement","src":"52053:57:18"}]},"name":"store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"52034:6:18","type":""}],"src":"51936:181:18"},{"body":{"nodeType":"YulBlock","src":"52269:220:18","statements":[{"nodeType":"YulAssignment","src":"52279:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52345:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"52350:2:18","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52286:58:18"},"nodeType":"YulFunctionCall","src":"52286:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"52279:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52451:3:18"}],"functionName":{"name":"store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67","nodeType":"YulIdentifier","src":"52362:88:18"},"nodeType":"YulFunctionCall","src":"52362:93:18"},"nodeType":"YulExpressionStatement","src":"52362:93:18"},{"nodeType":"YulAssignment","src":"52464:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"52475:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"52480:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52471:3:18"},"nodeType":"YulFunctionCall","src":"52471:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"52464:3:18"}]}]},"name":"abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"52257:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"52265:3:18","type":""}],"src":"52123:366:18"},{"body":{"nodeType":"YulBlock","src":"52666:248:18","statements":[{"nodeType":"YulAssignment","src":"52676:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52688:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"52699:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52684:3:18"},"nodeType":"YulFunctionCall","src":"52684:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52676:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"52723:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"52734:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52719:3:18"},"nodeType":"YulFunctionCall","src":"52719:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52742:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"52748:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"52738:3:18"},"nodeType":"YulFunctionCall","src":"52738:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52712:6:18"},"nodeType":"YulFunctionCall","src":"52712:47:18"},"nodeType":"YulExpressionStatement","src":"52712:47:18"},{"nodeType":"YulAssignment","src":"52768:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"52902:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"52776:124:18"},"nodeType":"YulFunctionCall","src":"52776:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"52768:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"52646:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"52661:4:18","type":""}],"src":"52495:419:18"},{"body":{"nodeType":"YulBlock","src":"53026:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"53048:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"53056:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53044:3:18"},"nodeType":"YulFunctionCall","src":"53044:14:18"},{"hexValue":"496e76616c696420524c50206c6f6e6720737472696e672e","kind":"string","nodeType":"YulLiteral","src":"53060:26:18","type":"","value":"Invalid RLP long string."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53037:6:18"},"nodeType":"YulFunctionCall","src":"53037:50:18"},"nodeType":"YulExpressionStatement","src":"53037:50:18"}]},"name":"store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53018:6:18","type":""}],"src":"52920:174:18"},{"body":{"nodeType":"YulBlock","src":"53246:220:18","statements":[{"nodeType":"YulAssignment","src":"53256:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53322:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"53327:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53263:58:18"},"nodeType":"YulFunctionCall","src":"53263:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"53256:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53428:3:18"}],"functionName":{"name":"store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b","nodeType":"YulIdentifier","src":"53339:88:18"},"nodeType":"YulFunctionCall","src":"53339:93:18"},"nodeType":"YulExpressionStatement","src":"53339:93:18"},{"nodeType":"YulAssignment","src":"53441:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"53452:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"53457:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53448:3:18"},"nodeType":"YulFunctionCall","src":"53448:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"53441:3:18"}]}]},"name":"abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"53234:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"53242:3:18","type":""}],"src":"53100:366:18"},{"body":{"nodeType":"YulBlock","src":"53643:248:18","statements":[{"nodeType":"YulAssignment","src":"53653:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53665:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"53676:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53661:3:18"},"nodeType":"YulFunctionCall","src":"53661:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53653:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"53700:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"53711:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53696:3:18"},"nodeType":"YulFunctionCall","src":"53696:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53719:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"53725:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"53715:3:18"},"nodeType":"YulFunctionCall","src":"53715:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"53689:6:18"},"nodeType":"YulFunctionCall","src":"53689:47:18"},"nodeType":"YulExpressionStatement","src":"53689:47:18"},{"nodeType":"YulAssignment","src":"53745:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"53879:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"53753:124:18"},"nodeType":"YulFunctionCall","src":"53753:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"53745:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"53623:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"53638:4:18","type":""}],"src":"53472:419:18"},{"body":{"nodeType":"YulBlock","src":"54003:67:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"54025:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"54033:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54021:3:18"},"nodeType":"YulFunctionCall","src":"54021:14:18"},{"hexValue":"496e76616c696420524c502073686f7274206c6973742e","kind":"string","nodeType":"YulLiteral","src":"54037:25:18","type":"","value":"Invalid RLP short list."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54014:6:18"},"nodeType":"YulFunctionCall","src":"54014:49:18"},"nodeType":"YulExpressionStatement","src":"54014:49:18"}]},"name":"store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"53995:6:18","type":""}],"src":"53897:173:18"},{"body":{"nodeType":"YulBlock","src":"54222:220:18","statements":[{"nodeType":"YulAssignment","src":"54232:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54298:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"54303:2:18","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54239:58:18"},"nodeType":"YulFunctionCall","src":"54239:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"54232:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54404:3:18"}],"functionName":{"name":"store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1","nodeType":"YulIdentifier","src":"54315:88:18"},"nodeType":"YulFunctionCall","src":"54315:93:18"},"nodeType":"YulExpressionStatement","src":"54315:93:18"},{"nodeType":"YulAssignment","src":"54417:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"54428:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"54433:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54424:3:18"},"nodeType":"YulFunctionCall","src":"54424:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"54417:3:18"}]}]},"name":"abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"54210:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"54218:3:18","type":""}],"src":"54076:366:18"},{"body":{"nodeType":"YulBlock","src":"54619:248:18","statements":[{"nodeType":"YulAssignment","src":"54629:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54641:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"54652:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54637:3:18"},"nodeType":"YulFunctionCall","src":"54637:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54629:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"54676:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"54687:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54672:3:18"},"nodeType":"YulFunctionCall","src":"54672:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54695:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"54701:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"54691:3:18"},"nodeType":"YulFunctionCall","src":"54691:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54665:6:18"},"nodeType":"YulFunctionCall","src":"54665:47:18"},"nodeType":"YulExpressionStatement","src":"54665:47:18"},{"nodeType":"YulAssignment","src":"54721:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"54855:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"54729:124:18"},"nodeType":"YulFunctionCall","src":"54729:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"54721:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"54599:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"54614:4:18","type":""}],"src":"54448:419:18"},{"body":{"nodeType":"YulBlock","src":"54979:73:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55001:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"55009:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54997:3:18"},"nodeType":"YulFunctionCall","src":"54997:14:18"},{"hexValue":"496e76616c696420524c50206c6f6e67206c697374206c656e6774682e","kind":"string","nodeType":"YulLiteral","src":"55013:31:18","type":"","value":"Invalid RLP long list length."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"54990:6:18"},"nodeType":"YulFunctionCall","src":"54990:55:18"},"nodeType":"YulExpressionStatement","src":"54990:55:18"}]},"name":"store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"54971:6:18","type":""}],"src":"54873:179:18"},{"body":{"nodeType":"YulBlock","src":"55204:220:18","statements":[{"nodeType":"YulAssignment","src":"55214:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55280:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"55285:2:18","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55221:58:18"},"nodeType":"YulFunctionCall","src":"55221:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"55214:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55386:3:18"}],"functionName":{"name":"store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da","nodeType":"YulIdentifier","src":"55297:88:18"},"nodeType":"YulFunctionCall","src":"55297:93:18"},"nodeType":"YulExpressionStatement","src":"55297:93:18"},{"nodeType":"YulAssignment","src":"55399:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"55410:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"55415:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55406:3:18"},"nodeType":"YulFunctionCall","src":"55406:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"55399:3:18"}]}]},"name":"abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"55192:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"55200:3:18","type":""}],"src":"55058:366:18"},{"body":{"nodeType":"YulBlock","src":"55601:248:18","statements":[{"nodeType":"YulAssignment","src":"55611:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55623:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"55634:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55619:3:18"},"nodeType":"YulFunctionCall","src":"55619:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55611:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"55658:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"55669:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55654:3:18"},"nodeType":"YulFunctionCall","src":"55654:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55677:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"55683:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"55673:3:18"},"nodeType":"YulFunctionCall","src":"55673:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55647:6:18"},"nodeType":"YulFunctionCall","src":"55647:47:18"},"nodeType":"YulExpressionStatement","src":"55647:47:18"},{"nodeType":"YulAssignment","src":"55703:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"55837:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"55711:124:18"},"nodeType":"YulFunctionCall","src":"55711:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"55703:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"55581:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"55596:4:18","type":""}],"src":"55430:419:18"},{"body":{"nodeType":"YulBlock","src":"55961:66:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"55983:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"55991:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55979:3:18"},"nodeType":"YulFunctionCall","src":"55979:14:18"},{"hexValue":"496e76616c696420524c50206c6f6e67206c6973742e","kind":"string","nodeType":"YulLiteral","src":"55995:24:18","type":"","value":"Invalid RLP long list."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"55972:6:18"},"nodeType":"YulFunctionCall","src":"55972:48:18"},"nodeType":"YulExpressionStatement","src":"55972:48:18"}]},"name":"store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"55953:6:18","type":""}],"src":"55855:172:18"},{"body":{"nodeType":"YulBlock","src":"56179:220:18","statements":[{"nodeType":"YulAssignment","src":"56189:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56255:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"56260:2:18","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56196:58:18"},"nodeType":"YulFunctionCall","src":"56196:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56189:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56361:3:18"}],"functionName":{"name":"store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a","nodeType":"YulIdentifier","src":"56272:88:18"},"nodeType":"YulFunctionCall","src":"56272:93:18"},"nodeType":"YulExpressionStatement","src":"56272:93:18"},{"nodeType":"YulAssignment","src":"56374:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56385:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"56390:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56381:3:18"},"nodeType":"YulFunctionCall","src":"56381:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56374:3:18"}]}]},"name":"abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"56167:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56175:3:18","type":""}],"src":"56033:366:18"},{"body":{"nodeType":"YulBlock","src":"56576:248:18","statements":[{"nodeType":"YulAssignment","src":"56586:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56598:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"56609:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56594:3:18"},"nodeType":"YulFunctionCall","src":"56594:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56586:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"56633:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"56644:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56629:3:18"},"nodeType":"YulFunctionCall","src":"56629:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56652:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"56658:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"56648:3:18"},"nodeType":"YulFunctionCall","src":"56648:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56622:6:18"},"nodeType":"YulFunctionCall","src":"56622:47:18"},"nodeType":"YulExpressionStatement","src":"56622:47:18"},{"nodeType":"YulAssignment","src":"56678:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"56812:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56686:124:18"},"nodeType":"YulFunctionCall","src":"56686:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"56678:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"56556:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"56571:4:18","type":""}],"src":"56405:419:18"},{"body":{"nodeType":"YulBlock","src":"56936:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56958:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"56966:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56954:3:18"},"nodeType":"YulFunctionCall","src":"56954:14:18"},{"hexValue":"496e76616c696420524c502062797465732076616c75652e","kind":"string","nodeType":"YulLiteral","src":"56970:26:18","type":"","value":"Invalid RLP bytes value."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56947:6:18"},"nodeType":"YulFunctionCall","src":"56947:50:18"},"nodeType":"YulExpressionStatement","src":"56947:50:18"}]},"name":"store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"56928:6:18","type":""}],"src":"56830:174:18"},{"body":{"nodeType":"YulBlock","src":"57156:220:18","statements":[{"nodeType":"YulAssignment","src":"57166:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57232:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"57237:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57173:58:18"},"nodeType":"YulFunctionCall","src":"57173:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"57166:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57338:3:18"}],"functionName":{"name":"store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554","nodeType":"YulIdentifier","src":"57249:88:18"},"nodeType":"YulFunctionCall","src":"57249:93:18"},"nodeType":"YulExpressionStatement","src":"57249:93:18"},{"nodeType":"YulAssignment","src":"57351:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"57362:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"57367:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57358:3:18"},"nodeType":"YulFunctionCall","src":"57358:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"57351:3:18"}]}]},"name":"abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"57144:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"57152:3:18","type":""}],"src":"57010:366:18"},{"body":{"nodeType":"YulBlock","src":"57553:248:18","statements":[{"nodeType":"YulAssignment","src":"57563:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57575:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57586:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57571:3:18"},"nodeType":"YulFunctionCall","src":"57571:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57563:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57610:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57621:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57606:3:18"},"nodeType":"YulFunctionCall","src":"57606:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57629:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"57635:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57625:3:18"},"nodeType":"YulFunctionCall","src":"57625:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57599:6:18"},"nodeType":"YulFunctionCall","src":"57599:47:18"},"nodeType":"YulExpressionStatement","src":"57599:47:18"},{"nodeType":"YulAssignment","src":"57655:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57789:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57663:124:18"},"nodeType":"YulFunctionCall","src":"57663:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57655:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57533:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57548:4:18","type":""}],"src":"57382:419:18"},{"body":{"nodeType":"YulBlock","src":"57855:362:18","statements":[{"nodeType":"YulAssignment","src":"57865:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"57888:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"57870:17:18"},"nodeType":"YulFunctionCall","src":"57870:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"57865:1:18"}]},{"nodeType":"YulAssignment","src":"57899:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"57922:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"57904:17:18"},"nodeType":"YulFunctionCall","src":"57904:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"57899:1:18"}]},{"nodeType":"YulVariableDeclaration","src":"57933:28:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"57956:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"57959:1:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"57952:3:18"},"nodeType":"YulFunctionCall","src":"57952:9:18"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"57937:11:18","type":""}]},{"nodeType":"YulAssignment","src":"57970:41:18","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"57999:11:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"57981:17:18"},"nodeType":"YulFunctionCall","src":"57981:30:18"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"57970:7:18"}]},{"body":{"nodeType":"YulBlock","src":"58188:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"58190:16:18"},"nodeType":"YulFunctionCall","src":"58190:18:18"},"nodeType":"YulExpressionStatement","src":"58190:18:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"58121:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"58114:6:18"},"nodeType":"YulFunctionCall","src":"58114:9:18"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"58144:1:18"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"58151:7:18"},{"name":"x","nodeType":"YulIdentifier","src":"58160:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"58147:3:18"},"nodeType":"YulFunctionCall","src":"58147:15:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"58141:2:18"},"nodeType":"YulFunctionCall","src":"58141:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"58094:2:18"},"nodeType":"YulFunctionCall","src":"58094:83:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"58074:6:18"},"nodeType":"YulFunctionCall","src":"58074:113:18"},"nodeType":"YulIf","src":"58071:139:18"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"57838:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"57841:1:18","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"57847:7:18","type":""}],"src":"57807:410:18"},{"body":{"nodeType":"YulBlock","src":"58286:80:18","statements":[{"nodeType":"YulAssignment","src":"58296:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"58311:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"58305:5:18"},"nodeType":"YulFunctionCall","src":"58305:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"58296:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58354:5:18"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"58327:26:18"},"nodeType":"YulFunctionCall","src":"58327:33:18"},"nodeType":"YulExpressionStatement","src":"58327:33:18"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"58264:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"58272:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"58280:5:18","type":""}],"src":"58223:143:18"},{"body":{"nodeType":"YulBlock","src":"58449:274:18","statements":[{"body":{"nodeType":"YulBlock","src":"58495:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"58497:77:18"},"nodeType":"YulFunctionCall","src":"58497:79:18"},"nodeType":"YulExpressionStatement","src":"58497:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"58470:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"58479:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"58466:3:18"},"nodeType":"YulFunctionCall","src":"58466:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"58491:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"58462:3:18"},"nodeType":"YulFunctionCall","src":"58462:32:18"},"nodeType":"YulIf","src":"58459:119:18"},{"nodeType":"YulBlock","src":"58588:128:18","statements":[{"nodeType":"YulVariableDeclaration","src":"58603:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"58617:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"58607:6:18","type":""}]},{"nodeType":"YulAssignment","src":"58632:74:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58678:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"58689:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58674:3:18"},"nodeType":"YulFunctionCall","src":"58674:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"58698:7:18"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"58642:31:18"},"nodeType":"YulFunctionCall","src":"58642:64:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"58632:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58419:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"58430:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"58442:6:18","type":""}],"src":"58372:351:18"},{"body":{"nodeType":"YulBlock","src":"58772:190:18","statements":[{"nodeType":"YulAssignment","src":"58782:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58809:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"58791:17:18"},"nodeType":"YulFunctionCall","src":"58791:24:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"58782:5:18"}]},{"body":{"nodeType":"YulBlock","src":"58905:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"58907:16:18"},"nodeType":"YulFunctionCall","src":"58907:18:18"},"nodeType":"YulExpressionStatement","src":"58907:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58830:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"58837:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"58827:2:18"},"nodeType":"YulFunctionCall","src":"58827:77:18"},"nodeType":"YulIf","src":"58824:103:18"},{"nodeType":"YulAssignment","src":"58936:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58947:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"58954:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58943:3:18"},"nodeType":"YulFunctionCall","src":"58943:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"58936:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"58758:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"58768:3:18","type":""}],"src":"58729:233:18"},{"body":{"nodeType":"YulBlock","src":"59010:143:18","statements":[{"nodeType":"YulAssignment","src":"59020:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59043:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"59025:17:18"},"nodeType":"YulFunctionCall","src":"59025:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"59020:1:18"}]},{"nodeType":"YulAssignment","src":"59054:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"59077:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"59059:17:18"},"nodeType":"YulFunctionCall","src":"59059:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"59054:1:18"}]},{"body":{"nodeType":"YulBlock","src":"59101:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"59103:16:18"},"nodeType":"YulFunctionCall","src":"59103:18:18"},"nodeType":"YulExpressionStatement","src":"59103:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"59098:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"59091:6:18"},"nodeType":"YulFunctionCall","src":"59091:9:18"},"nodeType":"YulIf","src":"59088:35:18"},{"nodeType":"YulAssignment","src":"59133:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"59142:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"59145:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"59138:3:18"},"nodeType":"YulFunctionCall","src":"59138:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"59133:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"58999:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"59002:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"59008:1:18","type":""}],"src":"58968:185:18"},{"body":{"nodeType":"YulBlock","src":"59265:58:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"59287:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"59295:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59283:3:18"},"nodeType":"YulFunctionCall","src":"59283:14:18"},{"hexValue":"736c6963655f6f766572666c6f77","kind":"string","nodeType":"YulLiteral","src":"59299:16:18","type":"","value":"slice_overflow"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59276:6:18"},"nodeType":"YulFunctionCall","src":"59276:40:18"},"nodeType":"YulExpressionStatement","src":"59276:40:18"}]},"name":"store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"59257:6:18","type":""}],"src":"59159:164:18"},{"body":{"nodeType":"YulBlock","src":"59475:220:18","statements":[{"nodeType":"YulAssignment","src":"59485:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59551:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"59556:2:18","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59492:58:18"},"nodeType":"YulFunctionCall","src":"59492:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"59485:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59657:3:18"}],"functionName":{"name":"store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e","nodeType":"YulIdentifier","src":"59568:88:18"},"nodeType":"YulFunctionCall","src":"59568:93:18"},"nodeType":"YulExpressionStatement","src":"59568:93:18"},{"nodeType":"YulAssignment","src":"59670:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"59681:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"59686:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59677:3:18"},"nodeType":"YulFunctionCall","src":"59677:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"59670:3:18"}]}]},"name":"abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"59463:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"59471:3:18","type":""}],"src":"59329:366:18"},{"body":{"nodeType":"YulBlock","src":"59872:248:18","statements":[{"nodeType":"YulAssignment","src":"59882:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59894:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"59905:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59890:3:18"},"nodeType":"YulFunctionCall","src":"59890:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59882:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59929:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"59940:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59925:3:18"},"nodeType":"YulFunctionCall","src":"59925:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59948:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"59954:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59944:3:18"},"nodeType":"YulFunctionCall","src":"59944:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59918:6:18"},"nodeType":"YulFunctionCall","src":"59918:47:18"},"nodeType":"YulExpressionStatement","src":"59918:47:18"},{"nodeType":"YulAssignment","src":"59974:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60108:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59982:124:18"},"nodeType":"YulFunctionCall","src":"59982:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59974:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59852:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"59867:4:18","type":""}],"src":"59701:419:18"},{"body":{"nodeType":"YulBlock","src":"60232:61:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"60254:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"60262:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60250:3:18"},"nodeType":"YulFunctionCall","src":"60250:14:18"},{"hexValue":"736c6963655f6f75744f66426f756e6473","kind":"string","nodeType":"YulLiteral","src":"60266:19:18","type":"","value":"slice_outOfBounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60243:6:18"},"nodeType":"YulFunctionCall","src":"60243:43:18"},"nodeType":"YulExpressionStatement","src":"60243:43:18"}]},"name":"store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"60224:6:18","type":""}],"src":"60126:167:18"},{"body":{"nodeType":"YulBlock","src":"60445:220:18","statements":[{"nodeType":"YulAssignment","src":"60455:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60521:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"60526:2:18","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60462:58:18"},"nodeType":"YulFunctionCall","src":"60462:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"60455:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60627:3:18"}],"functionName":{"name":"store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0","nodeType":"YulIdentifier","src":"60538:88:18"},"nodeType":"YulFunctionCall","src":"60538:93:18"},"nodeType":"YulExpressionStatement","src":"60538:93:18"},{"nodeType":"YulAssignment","src":"60640:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"60651:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"60656:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60647:3:18"},"nodeType":"YulFunctionCall","src":"60647:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"60640:3:18"}]}]},"name":"abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"60433:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"60441:3:18","type":""}],"src":"60299:366:18"},{"body":{"nodeType":"YulBlock","src":"60842:248:18","statements":[{"nodeType":"YulAssignment","src":"60852:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60864:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"60875:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60860:3:18"},"nodeType":"YulFunctionCall","src":"60860:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60852:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"60899:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"60910:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"60895:3:18"},"nodeType":"YulFunctionCall","src":"60895:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"60918:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"60924:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"60914:3:18"},"nodeType":"YulFunctionCall","src":"60914:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"60888:6:18"},"nodeType":"YulFunctionCall","src":"60888:47:18"},"nodeType":"YulExpressionStatement","src":"60888:47:18"},{"nodeType":"YulAssignment","src":"60944:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"61078:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"60952:124:18"},"nodeType":"YulFunctionCall","src":"60952:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"60944:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"60822:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"60837:4:18","type":""}],"src":"60671:419:18"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IStateCommitmentChain_$2848_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IStateCommitmentChain_$2848_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IStateCommitmentChain_$2848_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IStateCommitmentChain_$2848__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IStateCommitmentChain_$2848_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // struct ChainBatchHeader\n    function abi_decode_t_struct$_ChainBatchHeader_$2752_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // batchIndex\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // batchRoot\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // batchSize\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // prevTotalElements\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // extraData\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x80), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct ChainInclusionProof\n    function abi_decode_t_struct$_ChainInclusionProof_$2758_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // index\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // siblings\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x20), abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct L2MessageInclusionProof\n    function abi_decode_t_struct$_L2MessageInclusionProof_$2771_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // stateRoot\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_bytes32(add(headStart, offset), end))\n\n        }\n\n        {\n            // stateRootBatchHeader\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x20), abi_decode_t_struct$_ChainBatchHeader_$2752_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // stateRootProof\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x40), abi_decode_t_struct$_ChainInclusionProof_$2758_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // stateTrieWitness\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x60), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // storageTrieWitness\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() }\n\n            mstore(add(value, 0x80), abi_decode_t_bytes_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptrt_uint256t_struct$_L2MessageInclusionProof_$2771_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_struct$_L2MessageInclusionProof_$2771_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2(memPtr) {\n\n        mstore(add(memPtr, 0), \"!rootManager\")\n\n    }\n\n    function abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f53dc022905a0a2225e8c3ff0673639ed9f375ab56ff523da9fcb36afd04ffe2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e(memPtr) {\n\n        mstore(add(memPtr, 0), \"!AMB\")\n\n    }\n\n    function abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94823938e2be2ac349c9e79d782231d0e3bda712662b369a6835220a437fb15e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d(memPtr) {\n\n        mstore(add(memPtr, 0), \"!mirrorConnector\")\n\n    }\n\n    function abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7df9cf92a8429192439b1200ea707d05073f5966828ab65a83ca3a0ab628ad9d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033(memPtr) {\n\n        mstore(add(memPtr, 0), \"!this\")\n\n    }\n\n    function abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n        store_literal_in_memory_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1945466d8297d124a74cd1815c3681e97e828860265acaaea52d7392b2e28033_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec(memPtr) {\n\n        mstore(add(memPtr, 0), \"!proof\")\n\n    }\n\n    function abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6257fa65cb3e2131130f078fa0b2c0b28695aa9be00e6235d4f462589ad75bec_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_bytes32__to_t_uint32_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1(memPtr) {\n\n        mstore(add(memPtr, 0), \"!length\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6d4317401afed461b6930c87ddfcfb2c5bbd2f5b40cf51f83bf139b8be14ad1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr_t_uint32__to_t_address_t_bytes_memory_ptr_t_uint32__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bytes_memory_ptr_t_uint256__to_t_address_t_address_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct ChainBatchHeader -> struct ChainBatchHeader\n    function abi_encode_t_struct$_ChainBatchHeader_$2752_memory_ptr_to_t_struct$_ChainBatchHeader_$2752_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // batchIndex\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // batchRoot\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // batchSize\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // prevTotalElements\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // extraData\n\n            let memberValue0 := mload(add(value, 0x80))\n\n            mstore(add(pos, 0x80), sub(tail, pos))\n            tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct ChainInclusionProof -> struct ChainInclusionProof\n    function abi_encode_t_struct$_ChainInclusionProof_$2758_memory_ptr_to_t_struct$_ChainInclusionProof_$2758_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // index\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // siblings\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_bytes32_t_struct$_ChainBatchHeader_$2752_memory_ptr_t_struct$_ChainInclusionProof_$2758_memory_ptr__to_t_bytes32_t_struct$_ChainBatchHeader_$2752_memory_ptr_t_struct$_ChainInclusionProof_$2758_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ChainBatchHeader_$2752_memory_ptr_to_t_struct$_ChainBatchHeader_$2752_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_struct$_ChainInclusionProof_$2758_memory_ptr_to_t_struct$_ChainInclusionProof_$2758_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_address__to_t_bytes_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_bytes32_t_uint256__to_t_bytes32_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492(memPtr) {\n\n        mstore(add(memPtr, 0), \"Message passing predeploy has no\")\n\n        mstore(add(memPtr, 32), \"t been initialized or invalid pr\")\n\n        mstore(add(memPtr, 64), \"oof provided.\")\n\n    }\n\n    function abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 77)\n        store_literal_in_memory_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_39eecfdff5c282a731d38dbcdc63390f0cf2731e0f36b58f09ddf52a0f962492_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_packed_t_bytes32__to_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function shift_left_248(value) -> newValue {\n        newValue :=\n\n        shl(248, value)\n\n    }\n\n    function leftAlign_t_uint8(value) -> aligned {\n        aligned := shift_left_248(value)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint8(cleanup_t_uint8(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint8__to_t_uint8__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_uint8_to_t_uint8_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 1)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c(memPtr) {\n\n        mstore(add(memPtr, 0), \"!bridge\")\n\n    }\n\n    function abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5bd20fa0eac50a6892371dae18efeb7d2b1c7a8479150f38626e21052ac8472c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728(memPtr) {\n\n        mstore(add(memPtr, 0), \"!truncated\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d0cff77d956ef960915dcfad018b5689f8690171673b6a194d3f0bc84802728_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403(memPtr) {\n\n        mstore(add(memPtr, 0), \"Provided proof is invalid.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e7ade99c3b21d92da381624c75600d4d8827f17ae2b049a19c6287b6f740403_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP bytes32 value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_697f2b4b75a3a3464c831501f59169c7eaa7683b6eb1ecfc8fd6c0d4011086b5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid root hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f80c2a45ec3706bf6827e456edd04bddc9929616615a2e1a2a2462809e20942c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid internal node hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9e55fd097279baafdb4899794fb4962ef0a885668e60ace65bd9cacedd5b27b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Received a node with an unknown \")\n\n        mstore(add(memPtr, 32), \"prefix\")\n\n    }\n\n    function abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_907f215123609329de6771559e9fb247bc5ec60375a7811e373541560cb612bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40(memPtr) {\n\n        mstore(add(memPtr, 0), \"Received an unparseable node.\")\n\n    }\n\n    function abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44be0f743167942a406d825903e699357e663ee7ba0bc41f4d988c3023209e40_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP list value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_848de431415f0c3627b6ae0a9dbc7e8072c165b6a18cec94d54fe6ab8855172a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Provided RLP list exceeds max li\")\n\n        mstore(add(memPtr, 32), \"st length.\")\n\n    }\n\n    function abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5087e62b30af24eb438474b5124c062b0df85cd3cdf4ea6c03991870220714c1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29(memPtr) {\n\n        mstore(add(memPtr, 0), \"RLP item cannot be null.\")\n\n    }\n\n    function abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbfd45d6cbabcf1f972bc6e670a58703dc2f15f95d28d9e580f69e92be3c3b29_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP short string.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8aca44bbbcae5e1f45d4afe6279225dc68170211b861c4daf13bd2681ef32975_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long string length.\")\n\n    }\n\n    function abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bb18a3f980d71dabb635b00d5ab88ff971a36edd9dc79fbb99312849c9fce67_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long string.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e91bee799143bea684e6e3b2005af43754801e59e0ad19b6af4182fcfef3328b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP short list.\")\n\n    }\n\n    function abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_faacf826bd31e02dc921ea35583cf601fa5cc747d5ee46904a18ead089c4f2e1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long list length.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1ab842401d58445ea8b599f677fc3eda93bc858b970ca455538ed6faecc256da_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP long list.\")\n\n    }\n\n    function abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20f694aafe1a6d12fb1d006f7106bcafe640e6950031327d022975fd11504e5a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid RLP bytes value.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea5c908f6fb9ba591809871c4bac08fa77a46fe28384af8030ba9c22e2978554_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e(memPtr) {\n\n        mstore(add(memPtr, 0), \"slice_overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"slice_outOfBounds\")\n\n    }\n\n    function abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"33":[{"length":32,"start":1698}],"36":[{"length":32,"start":1487},{"length":32,"start":4198},{"length":32,"start":4442},{"length":32,"start":5837}],"39":[{"length":32,"start":1272},{"length":32,"start":1879},{"length":32,"start":2446}],"42":[{"length":32,"start":1226},{"length":32,"start":2506}],"475":[{"length":32,"start":1190},{"length":32,"start":5885}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC5B350DF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC5B350DF EQ PUSH2 0x3A4 JUMPI DUP1 PUSH4 0xCC394283 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD1851C92 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0xD232C220 EQ PUSH2 0x411 JUMPI DUP1 PUSH4 0xD69F9D61 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0xDB1B7659 EQ PUSH2 0x467 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x7850B020 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xB1F8100D EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0xC1F0808A EQ PUSH2 0x367 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x52A9674B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x52A9674B EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x5BD11EFC EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x5F61E3EC EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x6A42B8F8 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6E2EDB4E EQ PUSH2 0x2AA JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0xF329EF8 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0x14168416 EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x3CF52FFB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x48E6FA23 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4FF746F6 EQ PUSH2 0x1D7 JUMPI PUSH2 0x135 JUMP JUMPDEST CALLDATASIZE PUSH2 0x135 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14F PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x3118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x171 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x32FB JUMP JUMPDEST PUSH2 0x4F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x3373 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x294 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x3186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x3795 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E8 PUSH2 0xA9C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST PUSH2 0xC3A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH2 0xCCB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x365 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0xCF4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x373 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x389 SWAP2 SWAP1 PUSH2 0x3875 JUMP JUMPDEST PUSH2 0xEA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0xEC1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D0 PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FB PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x408 SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x426 PUSH2 0x100E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x451 PUSH2 0x1064 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45E SWAP2 SWAP1 PUSH2 0x3436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x48E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x489 SWAP2 SWAP1 PUSH2 0x33FA JUMP JUMPDEST PUSH2 0x1088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x38BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x584 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57B SWAP1 PUSH2 0x3935 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58E DUP3 DUP3 PUSH2 0x109A JUMP JUMPDEST PUSH32 0xDCAA37A042A0087DE79018C629BBD29CEE82CA80BD9BE394E1696BF9E9355077 DUP3 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x5C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x39D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x65B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x652 SWAP1 PUSH2 0x3A65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x664 DUP2 PUSH2 0x1210 JUMP JUMPDEST PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 CALLER PUSH1 0x40 MLOAD PUSH2 0x695 SWAP3 SWAP2 SWAP1 PUSH2 0x3A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x752 DUP2 PUSH2 0x1242 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x93A80 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80B SWAP1 PUSH2 0x3B01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x882 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x879 SWAP1 PUSH2 0x3B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x890 DUP7 DUP7 DUP7 DUP7 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP PUSH2 0x89C DUP2 DUP4 PUSH2 0x1381 JUMP JUMPDEST PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D2 SWAP1 PUSH2 0x3BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH1 0x0 DUP7 PUSH2 0x13A6 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x939 PUSH1 0x20 PUSH2 0x909 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x3C40 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP5 PUSH3 0xFFFFFF NOT AND PUSH2 0x13F1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA92 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8E7D93FA PUSH32 0x0 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA07 SWAP3 SWAP2 SWAP1 PUSH2 0x3C8F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xB3ABC57BFEEBD2CAC918901DB582F71972A8E628BCCF19F5AE3E3482B98A5CED DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA6B SWAP2 SWAP1 PUSH2 0x3CB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE CALLER PUSH1 0x40 MLOAD PUSH2 0xA89 SWAP3 SWAP2 SWAP1 PUSH2 0x3A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xB33 SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST GT PUSH2 0xB6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x392CC0FC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x23295EF900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC38 PUSH1 0x0 PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x15F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8D450DD800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xDD9 JUMPI POP PUSH1 0x0 PUSH1 0x2 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23780CCA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x945F6E7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x1638 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x234FE4E200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x93A80 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0xF5A SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST GT PUSH2 0xF91 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9380A17C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFBC PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x150B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1093 DUP3 PUSH2 0x16C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP3 MLOAD EQ PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D5 SWAP1 PUSH2 0x3D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH4 0x4FF746F6 PUSH1 0xE0 SHL DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x3D73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3DBB202B PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1207 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5B0BF6D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xC77BEC288FC88F168427F2F7DA682EADB26CAC89D8D591AF6E443DA98DFF2BBC PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x1295 SWAP3 SWAP2 SWAP1 PUSH2 0x3DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12FA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3DFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xCBD4ECE900000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x138C DUP3 PUSH2 0x16F9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x139E JUMPI POP PUSH2 0x139D DUP4 DUP4 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP6 ADD SWAP1 POP PUSH2 0x13C7 DUP5 PUSH5 0xFFFFFFFFFF AND DUP3 DUP5 PUSH2 0x191E JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x18 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0xFF AND SUB PUSH2 0x1408 JUMPI PUSH1 0x0 DUP1 SHL SWAP1 POP PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x1411 DUP5 PUSH2 0x13D1 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0xFF AND DUP5 PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST GT ISZERO PUSH2 0x148A JUMPI PUSH2 0x143D DUP5 PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x1446 DUP6 PUSH2 0x13D1 JUMP JUMPDEST DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0x78218D2900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1481 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3EAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 PUSH1 0xFF AND GT ISZERO PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x45DF3F900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL SWAP1 POP PUSH1 0x0 PUSH2 0x14DB DUP7 PUSH2 0x1985 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH2 0x14F6 DUP4 PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP DUP1 DUP7 DUP4 ADD MLOAD AND SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x877A02CB809DA0364D23ADCA3CD50C451B53F279D3DF632E1FC11EB66335BCE5 PUSH1 0x4 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x1626 SWAP3 SWAP2 SWAP1 PUSH2 0x3EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6AB4D119F23076E8AD491BC65CE85F017FB0591DCE08755BA8591059CC51737A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16F2 PUSH32 0x0 DUP4 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D69EE57 DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1764 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x40E5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1781 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17A5 SWAP2 SWAP1 PUSH2 0x4156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0x4200000000000000000000000000000000000007 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17D6 SWAP3 SWAP2 SWAP1 PUSH2 0x4207 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17FF SWAP3 SWAP2 SWAP1 PUSH2 0x4271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1860 PUSH20 0x4200000000000000000000000000000000000000 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1842 SWAP2 SWAP1 PUSH2 0x429D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP7 PUSH1 0x60 ADD MLOAD DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x1AE9 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0x18AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A2 SWAP1 PUSH2 0x4350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B6 DUP3 PUSH2 0x1B12 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x190D DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x18EF SWAP2 SWAP1 PUSH2 0x43CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP10 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x1BDC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 PUSH2 0x192D SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP2 GT ISZERO PUSH2 0x193E JUMPI PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x196F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 SWAP2 POP POP PUSH2 0x197E JUMP JUMPDEST PUSH2 0x197A DUP6 DUP6 DUP6 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP DUP1 DUP4 PUSH1 0x78 SHR AND SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x1 DUP4 SUB SAR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3B SWAP1 PUSH2 0x4435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E296E45 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1ACA SWAP2 SWAP1 PUSH2 0x446A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1AF8 DUP7 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP PUSH2 0x1B05 DUP2 DUP7 DUP7 PUSH2 0x1CCF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B1A PUSH2 0x3037 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B25 DUP4 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1B56 DUP4 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1B49 JUMPI PUSH2 0x1B48 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DC2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B7F DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1B72 JUMPI PUSH2 0x1B71 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DC2 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BA8 DUP4 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x1B9B JUMPI PUSH2 0x1B9A PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD7 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1BD1 DUP4 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x1BC4 JUMPI PUSH2 0x1BC3 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD7 JUMP JUMPDEST DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BE8 DUP7 PUSH2 0x1C9F JUMP JUMPDEST SWAP1 POP PUSH2 0x1BF6 DUP2 DUP7 DUP7 DUP7 PUSH2 0x1ED8 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 SWAP1 POP PUSH1 0x0 PUSH1 0x18 SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP DUP6 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1C42 JUMPI POP DUP7 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x1C81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C78 SWAP1 PUSH2 0x4512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 SHL SWAP5 POP DUP1 DUP6 OR DUP5 SHL SWAP5 POP DUP2 DUP6 OR DUP4 SHL SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CB9 SWAP2 SWAP1 PUSH2 0x4370 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH2 0x1CDE DUP6 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1CF0 DUP5 DUP11 DUP10 PUSH2 0x1FFE JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 DUP4 MLOAD EQ SWAP1 POP DUP1 DUP1 PUSH2 0x1D07 JUMPI POP DUP2 JUMPDEST PUSH2 0x1D46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D3D SWAP1 PUSH2 0x457E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D92 JUMP JUMPDEST PUSH2 0x1D91 DUP7 PUSH1 0x1 DUP8 PUSH2 0x1D73 SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x1D84 JUMPI PUSH2 0x1D83 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2413 JUMP JUMPDEST JUMPDEST SWAP1 POP DUP2 DUP2 SWAP8 POP SWAP8 POP POP POP POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1DBB PUSH2 0x1DB6 DUP4 PUSH2 0x2454 JUMP JUMPDEST PUSH2 0x2482 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DCD DUP3 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x22 DUP3 PUSH1 0x0 ADD MLOAD LT PUSH2 0x1E20 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E17 SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1E2E DUP6 PUSH2 0x2679 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E48 JUMPI PUSH2 0x1E47 PUSH2 0x460A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E5B JUMPI PUSH2 0x1E5A PUSH2 0x460A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x1E9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E92 SWAP1 PUSH2 0x45EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP7 PUSH1 0x20 ADD MLOAD PUSH2 0x1EAD SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x20 DUP5 LT ISZERO PUSH2 0x1ECB JUMPI DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP DUP2 DIV SWAP1 POP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1EE8 DUP8 DUP7 DUP7 PUSH2 0x1CCF JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1EFF JUMPI POP PUSH2 0x1EFE DUP7 DUP3 PUSH2 0x2996 JUMP JUMPDEST JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F18 DUP4 PUSH2 0x1DA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F37 JUMPI PUSH2 0x1F36 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F70 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1F5D PUSH2 0x3065 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1F55 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FF2 JUMPI PUSH1 0x0 PUSH2 0x1FA9 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1F9C JUMPI PUSH2 0x1F9B PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FC5 DUP4 PUSH2 0x1DA8 JUMP JUMPDEST DUP2 MSTORE POP DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FDB JUMPI PUSH2 0x1FDA PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F7C JUMP JUMPDEST POP DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0x2014 DUP8 PUSH2 0x2A47 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2026 PUSH2 0x3065 JUMP JUMPDEST PUSH1 0x0 DUP13 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x23C2 JUMPI DUP14 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x204A JUMPI PUSH2 0x2049 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP DUP4 DUP6 PUSH2 0x2060 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP9 PUSH2 0x206F SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP8 POP PUSH1 0x0 DUP6 SUB PUSH2 0x20CB JUMPI DUP6 DUP4 PUSH1 0x0 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x20C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20BD SWAP1 PUSH2 0x4685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2128 JUMP JUMPDEST PUSH1 0x1F DUP4 PUSH1 0x0 ADD MLOAD MLOAD GT PUSH2 0x2127 JUMPI DUP6 PUSH2 0x20E6 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2BEA JUMP JUMPDEST EQ PUSH2 0x2126 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211D SWAP1 PUSH2 0x46F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH1 0x1 PUSH1 0x10 PUSH2 0x213C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x21B1 JUMPI DUP7 MLOAD DUP6 SUB ISZERO PUSH2 0x23C2 JUMPI PUSH1 0x0 DUP8 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2165 JUMPI PUSH2 0x2164 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0xFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2191 JUMPI PUSH2 0x2190 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x21A4 DUP2 PUSH2 0x2C24 JUMP JUMPDEST SWAP8 POP PUSH1 0x1 SWAP6 POP POP POP PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x2 DUP4 PUSH1 0x20 ADD MLOAD MLOAD SUB PUSH2 0x2382 JUMPI PUSH1 0x0 PUSH2 0x21C9 DUP5 PUSH2 0x2C62 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x21E1 JUMPI PUSH2 0x21E0 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH2 0x2200 SWAP2 SWAP1 PUSH2 0x4740 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x220C SWAP2 SWAP1 PUSH2 0x4771 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x221D DUP5 DUP4 PUSH1 0xFF AND PUSH2 0x2C9B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x222B DUP13 DUP12 PUSH2 0x2C9B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2239 DUP4 DUP4 PUSH2 0x2CDC JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x2256 JUMPI POP PUSH1 0x3 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x22B3 JUMPI DUP1 DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x226B JUMPI POP DUP1 DUP3 MLOAD EQ JUMPDEST ISZERO PUSH2 0x227F JUMPI DUP1 DUP12 PUSH2 0x227C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP11 POP JUMPDEST PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x23C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ DUP1 PUSH2 0x22CE JUMPI POP PUSH1 0x1 PUSH1 0xFF AND DUP6 PUSH1 0xFF AND EQ JUMPDEST ISZERO PUSH2 0x2347 JUMPI DUP3 MLOAD DUP2 EQ PUSH2 0x230F JUMPI PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP12 POP POP POP POP POP POP POP PUSH2 0x23C2 JUMP JUMPDEST PUSH2 0x2337 DUP10 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x232A JUMPI PUSH2 0x2329 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2C24 JUMP JUMPDEST SWAP12 POP DUP1 SWAP10 POP POP POP POP POP POP POP PUSH2 0x23BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2379 SWAP1 PUSH2 0x4818 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23B4 SWAP1 PUSH2 0x4884 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x202F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x80 PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP7 EQ SWAP1 POP DUP8 PUSH2 0x23FB DUP9 DUP8 PUSH2 0x2C9B JUMP JUMPDEST DUP3 SWAP11 POP SWAP11 POP SWAP11 POP POP POP POP POP POP POP POP POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x244D DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x1 DUP5 PUSH1 0x20 ADD MLOAD MLOAD PUSH2 0x242F SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2440 JUMPI PUSH2 0x243F PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x245C PUSH2 0x307F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH2 0x2490 DUP5 PUSH2 0x2679 JUMP JUMPDEST SWAP3 POP POP SWAP2 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x24A8 JUMPI PUSH2 0x24A7 PUSH2 0x460A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x24BB JUMPI PUSH2 0x24BA PUSH2 0x460A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x24FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24F2 SWAP1 PUSH2 0x48F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2518 JUMPI PUSH2 0x2517 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2551 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x253E PUSH2 0x307F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2536 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 DUP5 SWAP1 POP JUMPDEST DUP7 PUSH1 0x0 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2669 JUMPI PUSH1 0x20 DUP3 LT PUSH2 0x25AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25A1 SWAP1 PUSH2 0x4982 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x25E8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP13 PUSH1 0x0 ADD MLOAD PUSH2 0x25CB SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP13 PUSH1 0x20 ADD MLOAD PUSH2 0x25E0 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MSTORE POP PUSH2 0x2679 JUMP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 PUSH2 0x2604 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP12 PUSH1 0x20 ADD MLOAD PUSH2 0x2619 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MSTORE POP DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x262F JUMPI PUSH2 0x262E PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP5 PUSH2 0x2647 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP4 POP DUP1 DUP3 PUSH2 0x2655 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP4 PUSH2 0x2660 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x255B JUMP JUMPDEST DUP2 DUP4 MSTORE DUP3 SWAP6 POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH1 0x0 ADD MLOAD GT PUSH2 0x26C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BB SWAP1 PUSH2 0x49EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x26F2 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP5 POP SWAP5 POP SWAP5 POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0xB8 DUP2 LT ISZERO PUSH2 0x2765 JUMPI PUSH1 0x0 PUSH1 0x80 DUP3 PUSH2 0x270A SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2752 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2749 SWAP1 PUSH2 0x4A5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2847 JUMPI PUSH1 0x0 PUSH1 0xB7 DUP3 PUSH2 0x277D SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27BC SWAP1 PUSH2 0x4AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x27E3 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2828 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x281F SWAP1 PUSH2 0x4B32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x2835 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0xF8 DUP2 LT ISZERO PUSH2 0x28BA JUMPI PUSH1 0x0 PUSH1 0xC0 DUP3 PUSH2 0x285F SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x28A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x289E SWAP1 PUSH2 0x4B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF7 DUP3 PUSH2 0x28C9 SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2911 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2908 SWAP1 PUSH2 0x4C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SUB PUSH2 0x100 EXP PUSH1 0x1 DUP6 ADD MLOAD DIV SWAP1 POP DUP1 DUP3 PUSH2 0x292F SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP9 PUSH1 0x0 ADD MLOAD GT PUSH2 0x2974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x296B SWAP1 PUSH2 0x4C76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH2 0x2981 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 PUSH1 0x1 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x29C1 DUP6 PUSH2 0x2679 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29DB JUMPI PUSH2 0x29DA PUSH2 0x460A JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x29EE JUMPI PUSH2 0x29ED PUSH2 0x460A JUMP JUMPDEST JUMPDEST EQ PUSH2 0x2A2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A25 SWAP1 PUSH2 0x4CE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A3D DUP6 PUSH1 0x20 ADD MLOAD DUP5 DUP5 PUSH2 0x2D9F JUMP JUMPDEST SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 MLOAD PUSH2 0x2A59 SWAP2 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A72 JUMPI PUSH2 0x2A71 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AA4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BDF JUMPI PUSH1 0x4 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2ACD JUMPI PUSH2 0x2ACC PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SHR DUP4 PUSH1 0x2 DUP4 PUSH2 0x2B0A SWAP2 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2B1B JUMPI PUSH2 0x2B1A PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x10 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2B5F JUMPI PUSH2 0x2B5E PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH2 0x2B77 SWAP2 SWAP1 PUSH2 0x4740 JUMP JUMPDEST PUSH1 0xF8 SHL DUP4 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x2B8A SWAP2 SWAP1 PUSH2 0x4D02 JUMP JUMPDEST PUSH2 0x2B94 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x2BA5 JUMPI PUSH2 0x2BA4 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2AB0 JUMP JUMPDEST POP DUP2 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MLOAD LT ISZERO PUSH2 0x2C08 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP PUSH2 0x2C1F JUMP JUMPDEST DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2C1C SWAP2 SWAP1 PUSH2 0x4D59 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x20 DUP4 PUSH1 0x0 ADD MLOAD LT ISZERO PUSH2 0x2C45 JUMPI PUSH2 0x2C3E DUP4 PUSH2 0x2E9C JUMP JUMPDEST SWAP1 POP PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x2C4E DUP4 PUSH2 0x29B1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x2C5A DUP2 PUSH2 0x2BEA JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C94 PUSH2 0x2C8F DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2C82 JUMPI PUSH2 0x2C81 PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x29B1 JUMP JUMPDEST PUSH2 0x2A47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 MLOAD DUP3 LT PUSH2 0x2CBC JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0x2CD6 JUMP JUMPDEST PUSH2 0x2CD3 DUP4 DUP4 DUP5 DUP7 MLOAD PUSH2 0x2CCE SWAP2 SWAP1 PUSH2 0x3CD3 JUMP JUMPDEST PUSH2 0x2EAE JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP1 DUP5 MLOAD GT DUP1 ISZERO PUSH2 0x2CF4 JUMPI POP DUP1 DUP4 MLOAD GT JUMPDEST DUP1 ISZERO PUSH2 0x2D7D JUMPI POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2D0E JUMPI PUSH2 0x2D0D PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2D4E JUMPI PUSH2 0x2D4D PUSH2 0x4497 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST ISZERO PUSH2 0x2D95 JUMPI DUP1 DUP1 PUSH2 0x2D8D SWAP1 PUSH2 0x4D86 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2CE4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBC PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DEF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x2E04 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2E95 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP7 PUSH2 0x2E12 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP4 ADD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP7 PUSH2 0x2E2C SWAP2 SWAP1 PUSH2 0x4DCE JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x2E60 JUMPI DUP3 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 PUSH2 0x2E44 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 PUSH2 0x2E53 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST SWAP2 POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x2E1F JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x20 DUP8 DUP2 PUSH2 0x2E76 JUMPI PUSH2 0x2E75 PUSH2 0x4711 JUMP JUMPDEST JUMPDEST MOD PUSH1 0x20 SUB PUSH2 0x100 EXP SUB SWAP1 POP DUP1 DUP3 MLOAD AND DUP2 NOT DUP5 MLOAD AND OR DUP3 MSTORE DUP4 SWAP5 POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EA7 DUP3 PUSH2 0x301A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x1F DUP4 PUSH2 0x2EBE SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST LT ISZERO PUSH2 0x2EFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EF6 SWAP1 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP3 DUP5 PUSH2 0x2F0C SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST LT ISZERO PUSH2 0x2F4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F44 SWAP1 PUSH2 0x4E4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH2 0x2F59 SWAP2 SWAP1 PUSH2 0x3E48 JUMP JUMPDEST DUP5 MLOAD LT ISZERO PUSH2 0x2F9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F93 SWAP1 PUSH2 0x4EB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ISZERO PUSH1 0x0 DUP2 EQ PUSH2 0x2FBD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x300E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x2FFB JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FDE JUMP JUMPDEST POP DUP7 DUP6 MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND PUSH1 0x40 MSTORE POP POP POP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3030 DUP3 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2D9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30DE PUSH2 0x30D9 PUSH2 0x30D4 DUP5 PUSH2 0x3099 JUMP JUMPDEST PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F0 DUP3 PUSH2 0x30C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3102 DUP3 PUSH2 0x30E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3112 DUP2 PUSH2 0x30F7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x312D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x314C DUP2 PUSH2 0x3133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3167 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3180 DUP2 PUSH2 0x316D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x319B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3208 DUP3 PUSH2 0x31BF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3227 JUMPI PUSH2 0x3226 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x323A PUSH2 0x31A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x3246 DUP3 DUP3 PUSH2 0x31FF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3266 JUMPI PUSH2 0x3265 PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH2 0x326F DUP3 PUSH2 0x31BF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x329E PUSH2 0x3299 DUP5 PUSH2 0x324B JUMP JUMPDEST PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x32BA JUMPI PUSH2 0x32B9 PUSH2 0x31BA JUMP JUMPDEST JUMPDEST PUSH2 0x32C5 DUP5 DUP3 DUP6 PUSH2 0x327C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x32E2 JUMPI PUSH2 0x32E1 PUSH2 0x31B5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x32F2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x328B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3312 JUMPI PUSH2 0x3311 PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3330 JUMPI PUSH2 0x332F PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x333C DUP6 DUP3 DUP7 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x335D JUMPI PUSH2 0x335C PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x3369 DUP6 DUP3 DUP7 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3389 JUMPI PUSH2 0x3388 PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x33A7 JUMPI PUSH2 0x33A6 PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x33B3 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33C7 DUP3 PUSH2 0x3099 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x33D7 DUP2 PUSH2 0x33BC JUMP JUMPDEST DUP2 EQ PUSH2 0x33E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x33F4 DUP2 PUSH2 0x33CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3410 JUMPI PUSH2 0x340F PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x341E DUP5 DUP3 DUP6 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3430 DUP2 PUSH2 0x33BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x344B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x345A DUP2 PUSH2 0x316D JUMP JUMPDEST DUP2 EQ PUSH2 0x3465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3477 DUP2 PUSH2 0x3451 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x349A DUP2 PUSH2 0x3487 JUMP JUMPDEST DUP2 EQ PUSH2 0x34A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34B7 DUP2 PUSH2 0x3491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34D3 JUMPI PUSH2 0x34D2 PUSH2 0x347D JUMP JUMPDEST JUMPDEST PUSH2 0x34DD PUSH1 0xA0 PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x34ED DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x3501 DUP5 DUP3 DUP6 ADD PUSH2 0x34A8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x3515 DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x3529 DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x354D JUMPI PUSH2 0x354C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3559 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3580 JUMPI PUSH2 0x357F PUSH2 0x31D0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35A9 PUSH2 0x35A4 DUP5 PUSH2 0x3565 JUMP JUMPDEST PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x35CC JUMPI PUSH2 0x35CB PUSH2 0x3591 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x35F5 JUMPI DUP1 PUSH2 0x35E1 DUP9 DUP3 PUSH2 0x34A8 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x35CE JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3614 JUMPI PUSH2 0x3613 PUSH2 0x31B5 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3624 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3596 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3643 JUMPI PUSH2 0x3642 PUSH2 0x347D JUMP JUMPDEST JUMPDEST PUSH2 0x364D PUSH1 0x40 PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x365D DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3681 JUMPI PUSH2 0x3680 PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x368D DUP5 DUP3 DUP6 ADD PUSH2 0x35FF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36AF JUMPI PUSH2 0x36AE PUSH2 0x347D JUMP JUMPDEST JUMPDEST PUSH2 0x36B9 PUSH1 0xA0 PUSH2 0x3230 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x36C9 DUP5 DUP3 DUP6 ADD PUSH2 0x34A8 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36ED JUMPI PUSH2 0x36EC PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x36F9 DUP5 DUP3 DUP6 ADD PUSH2 0x34BD JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x371D JUMPI PUSH2 0x371C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3729 DUP5 DUP3 DUP6 ADD PUSH2 0x362D JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x374D JUMPI PUSH2 0x374C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3759 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x377D JUMPI PUSH2 0x377C PUSH2 0x3482 JUMP JUMPDEST JUMPDEST PUSH2 0x3789 DUP5 DUP3 DUP6 ADD PUSH2 0x32CD JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x37B1 JUMPI PUSH2 0x37B0 PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x37BF DUP9 DUP3 DUP10 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x37D0 DUP9 DUP3 DUP10 ADD PUSH2 0x33E5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x37F1 JUMPI PUSH2 0x37F0 PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x37FD DUP9 DUP3 DUP10 ADD PUSH2 0x32CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x380E DUP9 DUP3 DUP10 ADD PUSH2 0x3468 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x382F JUMPI PUSH2 0x382E PUSH2 0x31B0 JUMP JUMPDEST JUMPDEST PUSH2 0x383B DUP9 DUP3 DUP10 ADD PUSH2 0x3699 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x385E JUMPI PUSH2 0x385D PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x386C DUP5 DUP3 DUP6 ADD PUSH2 0x3468 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x388B JUMPI PUSH2 0x388A PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3899 DUP5 DUP3 DUP6 ADD PUSH2 0x34A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38B7 DUP2 PUSH2 0x38A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38D2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x38AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x21726F6F744D616E616765720000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391F PUSH1 0xC DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x392A DUP3 PUSH2 0x38E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394E DUP2 PUSH2 0x3912 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x398F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3974 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39A6 DUP3 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x39B0 DUP2 DUP6 PUSH2 0x3960 JUMP JUMPDEST SWAP4 POP PUSH2 0x39C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3971 JUMP JUMPDEST PUSH2 0x39C9 DUP2 PUSH2 0x31BF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39EE DUP2 DUP7 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3A02 DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3A11 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x21414D4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A4F PUSH1 0x4 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A5A DUP3 PUSH2 0x3A19 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A7E DUP2 PUSH2 0x3A42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A9F DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3AAE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x216D6972726F72436F6E6E6563746F7200000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AEB PUSH1 0x10 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3AF6 DUP3 PUSH2 0x3AB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B1A DUP2 PUSH2 0x3ADE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2174686973000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B57 PUSH1 0x5 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B62 DUP3 PUSH2 0x3B21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3B86 DUP2 PUSH2 0x3B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2170726F6F660000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BC3 PUSH1 0x6 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3BCE DUP3 PUSH2 0x3B8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BF2 DUP2 PUSH2 0x3BB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3C4B DUP3 PUSH2 0x3BF9 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C56 DUP4 PUSH2 0x3BF9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C7A JUMPI PUSH2 0x3C79 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C89 DUP2 PUSH2 0x3487 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3CA4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3143 JUMP JUMPDEST PUSH2 0x3CB1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3CCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3CDE DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x3CE9 DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3D01 JUMPI PUSH2 0x3D00 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x216C656E67746800000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D3D PUSH1 0x7 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D48 DUP3 PUSH2 0x3D07 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D6C DUP2 PUSH2 0x3D30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D8D DUP2 DUP5 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3DAA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3427 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x3DBC DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3DCB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3143 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3DE8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3427 JUMP JUMPDEST PUSH2 0x3DF5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3427 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3E11 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3427 JUMP JUMPDEST PUSH2 0x3E1E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3427 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3E30 DUP2 DUP6 PUSH2 0x399B JUMP JUMPDEST SWAP1 POP PUSH2 0x3E3F PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E53 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x3E5E DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E76 JUMPI PUSH2 0x3E75 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E97 PUSH2 0x3E92 PUSH2 0x3E8D DUP5 PUSH2 0x3BF9 JUMP JUMPDEST PUSH2 0x30B9 JUMP JUMPDEST PUSH2 0x316D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA7 DUP2 PUSH2 0x3E7C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3EC2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3ECF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x3E9E JUMP JUMPDEST PUSH2 0x3EDC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x3177 JUMP JUMPDEST PUSH2 0x3EE9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3F07 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x3177 JUMP JUMPDEST PUSH2 0x3F14 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3177 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3F24 DUP2 PUSH2 0x316D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3F33 DUP2 PUSH2 0x3487 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F55 DUP3 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x3F5F DUP2 DUP6 PUSH2 0x3F39 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F6F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3971 JUMP JUMPDEST PUSH2 0x3F78 DUP2 PUSH2 0x31BF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x3F9B PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3FAE PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x3F2A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3FC1 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x3FD4 PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x3FEC DUP3 DUP3 PUSH2 0x3F4A JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4031 DUP4 DUP4 PUSH2 0x3F2A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4055 DUP3 PUSH2 0x3FF9 JUMP JUMPDEST PUSH2 0x405F DUP2 DUP6 PUSH2 0x4004 JUMP JUMPDEST SWAP4 POP PUSH2 0x406A DUP4 PUSH2 0x4015 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x409B JUMPI DUP2 MLOAD PUSH2 0x4082 DUP9 DUP3 PUSH2 0x4025 JUMP JUMPDEST SWAP8 POP PUSH2 0x408D DUP4 PUSH2 0x403D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x406E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x40C0 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x3F1B JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x40D8 DUP3 DUP3 PUSH2 0x404A JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x40FA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3C80 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x410C DUP2 DUP6 PUSH2 0x3F83 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4120 DUP2 DUP5 PUSH2 0x40A8 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4133 DUP2 PUSH2 0x38A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x413E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4150 DUP2 PUSH2 0x412A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x416C JUMPI PUSH2 0x416B PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x417A DUP5 DUP3 DUP6 ADD PUSH2 0x4141 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4199 DUP3 PUSH2 0x3955 JUMP JUMPDEST PUSH2 0x41A3 DUP2 DUP6 PUSH2 0x4183 JUMP JUMPDEST SWAP4 POP PUSH2 0x41B3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3971 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D7 DUP3 PUSH2 0x41BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41E9 DUP3 PUSH2 0x41CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4201 PUSH2 0x41FC DUP3 PUSH2 0x33BC JUMP JUMPDEST PUSH2 0x41DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4213 DUP3 DUP6 PUSH2 0x418E JUMP JUMPDEST SWAP2 POP PUSH2 0x421F DUP3 DUP5 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x424A PUSH2 0x4245 DUP3 PUSH2 0x3487 JUMP JUMPDEST PUSH2 0x422F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x426B PUSH2 0x4266 DUP3 PUSH2 0x316D JUMP JUMPDEST PUSH2 0x4250 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x427D DUP3 DUP6 PUSH2 0x4239 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x428D DUP3 DUP5 PUSH2 0x425A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42A9 DUP3 DUP5 PUSH2 0x41F0 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D6573736167652070617373696E67207072656465706C6F7920686173206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74206265656E20696E697469616C697A6564206F7220696E76616C6964207072 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6F6F662070726F76696465642E00000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x433A PUSH1 0x4D DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4345 DUP3 PUSH2 0x42B8 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4369 DUP2 PUSH2 0x432D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x437C DUP3 DUP5 PUSH2 0x4239 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xF8 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B0 DUP3 PUSH2 0x4398 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43C8 PUSH2 0x43C3 DUP3 PUSH2 0x438B JUMP JUMPDEST PUSH2 0x43A5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43DA DUP3 DUP5 PUSH2 0x43B7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x2162726964676500000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441F PUSH1 0x7 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x442A DUP3 PUSH2 0x43E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x444E DUP2 PUSH2 0x4412 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4464 DUP2 PUSH2 0x33CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4480 JUMPI PUSH2 0x447F PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x448E DUP5 DUP3 DUP6 ADD PUSH2 0x4455 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x217472756E636174656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44FC PUSH1 0xA DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4507 DUP3 PUSH2 0x44C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x452B DUP2 PUSH2 0x44EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F76696465642070726F6F6620697320696E76616C69642E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4568 PUSH1 0x1A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4573 DUP3 PUSH2 0x4532 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4597 DUP2 PUSH2 0x455B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C5020627974657333322076616C75652E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45D4 PUSH1 0x1A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x45DF DUP3 PUSH2 0x459E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4603 DUP2 PUSH2 0x45C7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x496E76616C696420726F6F742068617368000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466F PUSH1 0x11 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x467A DUP3 PUSH2 0x4639 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x469E DUP2 PUSH2 0x4662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E7465726E616C206E6F64652068617368000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46DB PUSH1 0x1A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x46E6 DUP3 PUSH2 0x46A5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x470A DUP2 PUSH2 0x46CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x474B DUP3 PUSH2 0x438B JUMP JUMPDEST SWAP2 POP PUSH2 0x4756 DUP4 PUSH2 0x438B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4766 JUMPI PUSH2 0x4765 PUSH2 0x4711 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x477C DUP3 PUSH2 0x438B JUMP JUMPDEST SWAP2 POP PUSH2 0x4787 DUP4 PUSH2 0x438B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x47A0 JUMPI PUSH2 0x479F PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x52656365697665642061206E6F6465207769746820616E20756E6B6E6F776E20 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7072656669780000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4802 PUSH1 0x26 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x480D DUP3 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4831 DUP2 PUSH2 0x47F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526563656976656420616E20756E706172736561626C65206E6F64652E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x486E PUSH1 0x1D DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4879 DUP3 PUSH2 0x4838 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x489D DUP2 PUSH2 0x4861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6973742076616C75652E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48DA PUSH1 0x17 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x48E5 DUP3 PUSH2 0x48A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4909 DUP2 PUSH2 0x48CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726F766964656420524C50206C6973742065786365656473206D6178206C69 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7374206C656E6774682E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496C PUSH1 0x2A DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4977 DUP3 PUSH2 0x4910 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x499B DUP2 PUSH2 0x495F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x524C50206974656D2063616E6E6F74206265206E756C6C2E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D8 PUSH1 0x18 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x49E3 DUP3 PUSH2 0x49A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A07 DUP2 PUSH2 0x49CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F727420737472696E672E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A44 PUSH1 0x19 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A4F DUP3 PUSH2 0x4A0E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A73 DUP2 PUSH2 0x4A37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E67206C656E6774682E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AB0 PUSH1 0x1F DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4ABB DUP3 PUSH2 0x4A7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ADF DUP2 PUSH2 0x4AA3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E6720737472696E672E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B1C PUSH1 0x18 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B27 DUP3 PUSH2 0x4AE6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B4B DUP2 PUSH2 0x4B0F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502073686F7274206C6973742E000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B88 PUSH1 0x17 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B93 DUP3 PUSH2 0x4B52 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BB7 DUP2 PUSH2 0x4B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C697374206C656E6774682E000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BF4 PUSH1 0x1D DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BFF DUP3 PUSH2 0x4BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C23 DUP2 PUSH2 0x4BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C50206C6F6E67206C6973742E00000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C60 PUSH1 0x16 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C6B DUP3 PUSH2 0x4C2A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C8F DUP2 PUSH2 0x4C53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420524C502062797465732076616C75652E0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CCC PUSH1 0x18 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CD7 DUP3 PUSH2 0x4C96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CFB DUP2 PUSH2 0x4CBF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0D DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x4D18 DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4D26 DUP2 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4D3D JUMPI PUSH2 0x4D3C PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D53 DUP2 PUSH2 0x3491 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D6F JUMPI PUSH2 0x4D6E PUSH2 0x31AB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4D7D DUP5 DUP3 DUP6 ADD PUSH2 0x4D44 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D91 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x4DC3 JUMPI PUSH2 0x4DC2 PUSH2 0x3C11 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DD9 DUP3 PUSH2 0x316D JUMP JUMPDEST SWAP2 POP PUSH2 0x4DE4 DUP4 PUSH2 0x316D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4DF4 JUMPI PUSH2 0x4DF3 PUSH2 0x4711 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x736C6963655F6F766572666C6F77000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E35 PUSH1 0xE DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4E40 DUP3 PUSH2 0x4DFF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4E64 DUP2 PUSH2 0x4E28 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x736C6963655F6F75744F66426F756E6473000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4EA1 PUSH1 0x11 DUP4 PUSH2 0x38D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x4EAC DUP3 PUSH2 0x4E6B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4ED0 DUP2 PUSH2 0x4E94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xDA 0xD 0xE3 0xBE 0xB9 0xBF MULMOD CREATE2 BLOCKHASH LOG0 DUP14 0x24 GASLIMIT INVALID 0xA7 PUSH20 0x53D2F7C504120329440FF8B54409E264736F6C63 NUMBER STOP ADDMOD GT STOP CALLER ","sourceMap":"724:7364:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;935:59;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1587:37:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1949:112:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:200:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4262:148:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1268:30;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3939:119;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1451:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2151:79:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2843:1751:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3820:442:15;;;;;;;;;;;;;:::i;:::-;;860:83:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1641:79:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3321:420;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1387:41:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4404:539:15;;;;;;;;;;;;;:::i;:::-;;1705:30:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1792:85:15;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3055:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1363:28:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4490:107;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;935:59:4;;;:::o;1587:37:0:-;;;:::o;1949:112:15:-;2007:7;2029:27;;2022:34;;1949:112;:::o;1614:200:2:-;2226:12:0;2212:26;;:10;:26;;;2204:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;1721:33:2::1;1734:5;1741:12;1721;:33::i;:::-;1765:44;1777:5;1784:12;1798:10;1765:44;;;;;;;;:::i;:::-;;;;;;;;1614:200:::0;;:::o;4262:148:0:-;1905:3;1891:17;;:10;:17;;;1883:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;4337:22:::1;4353:5;4337:15;:22::i;:::-;4370:35;4387:5;4394:10;4370:35;;;;;;;:::i;:::-;;;;;;;;4262:148:::0;:::o;1268:30::-;;;:::o;3939:119::-;2354:10:15;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;4016:37:0::1;4036:16;4016:19;:37::i;:::-;3939:119:::0;:::o;1451:37::-;;;:::o;2151:79:15:-;2197:7;1530:6;2212:13;;2151:79;:::o;2843:1751:4:-;3096:15;;;;;;;;;;;3085:26;;:7;:26;;;3077:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3208:4;3189:24;;:7;:24;;;3181:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3258:24;3285:65;3308:7;3317;3326:8;3336:13;3285:22;:65::i;:::-;3258:92;;3365:42;3387:11;3400:6;3365:21;:42::i;:::-;3357:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;4187:13;4203:15;4216:1;4203:8;:12;;:15;;;;:::i;:::-;4187:31;;4224:12;4239:33;4265:2;4251:11;:5;:9;;;;:11::i;:::-;:16;;;;:::i;:::-;4239:33;;4269:2;4239:5;:11;;;;;:33;;;;;:::i;:::-;4224:48;;4284:9;:15;4294:4;4284:15;;;;;;;;;;;;;;;;;;;;;4279:260;;4358:4;4340:9;:15;4350:4;4340:15;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;4428:12;4415:36;;;4452:13;4467:4;4415:57;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:46;4514:4;4503:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;4521:10;4486:46;;;;;;;:::i;:::-;;;;;;;;4279:260;3027:1567;;;2843:1751;;;;;:::o;3820:442:15:-;2354:10;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;1530:6:::1;2809:27;;2791:15;:45;;;;:::i;:::-;2790:57;2786:132;;2862:56;;;;;;;;;;;;;;2786:132;3991:1:::2;3960:27;;:32:::0;3956:92:::2;;4001:47;;;;;;;;;;;;;;3956:92;4116:1;4095:23;;:9;;;;;;;;;;;:23;;;4091:88;;4127:52;;;;;;;;;;;;;;4091:88;4236:21;4254:1;4236:9;:21::i;:::-;3820:442::o:0;860:83:1:-;2354:10:15;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;919:19:1::1;930:7;919:10;:19::i;:::-;860:83:::0;:::o;1641:79:15:-;1687:7;1709:6;;;;;;;;;;;1702:13;;1641:79;:::o;3321:420::-;2354:10;2344:20;;:6;;;;;;;;;;:20;;;2340:70;;2373:37;;;;;;;;;;;;;;2340:70;3452:13:::1;3439:26;;:9;;;;;;;;;;;:26;;;:62;;;;;3500:1;3469:27;;:32;;3439:62;3435:131;;;3516:50;;;;;;;;;;;;;;3435:131;3628:13;3618:23;;:6;::::0;::::1;;;;;;;;:23;;::::0;3614:88:::1;;3650:52;;;;;;;;;;;;;;3614:88;3709:27;3722:13;3709:12;:27::i;:::-;3321:420:::0;:::o;1387:41:4:-;;;;;;;;;;;;;;;;;;;;;;:::o;4404:539:15:-;2561:10;2548:23;;:9;;;;;;;;;;;:23;;;2544:84;;2580:48;;;;;;;;;;;;;;2544:84;1530:6:::1;2809:27;;2791:15;:45;;;;:::i;:::-;2790:57;2786:132;;2862:56;;;;;;;;;;;;;;2786:132;4918:20:::2;4928:9;;;;;;;;;;;4918;:20::i;:::-;4404:539::o:0;1705:30:0:-;;;;;;;;;;;;;:::o;1792:85:15:-;1841:7;1863:9;;;;;;;;;;;1856:16;;1792:85;:::o;3055:86::-;3097:4;3134:1;3116:20;;:6;;;;;;;;;;:20;;;3109:27;;3055:86;:::o;1363:28:0:-;;;:::o;4490:107::-;4549:4;4568:24;4582:9;4568:13;:24::i;:::-;4561:31;;4490:107;;;:::o;2085:412:4:-;2257:2;2241:5;:12;:18;2233:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2301:22;2349:33;;;2384:5;2326:64;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:89;;2432:3;2420:28;;;2449:15;;;;;;;;;;;2466:9;2484:6;;2420:72;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:325;2085:412;;:::o;5220:267:0:-;5447:35;;;;;;;;;;;;;;5838:185;5921:57;5944:15;;;;;;;;;;;5961:16;5921:57;;;;;;;:::i;:::-;;;;;;;;6002:16;5984:15;;:34;;;;;;;;;;;;;;;;;;5838:185;:::o;7780:306:4:-;7935:12;8039:7;8048;8057:8;8067:13;7968:113;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7955:126;;7780:306;;;;;;:::o;5013:242::-;5149:4;5171:29;5193:6;5171:21;:29::i;:::-;:78;;;;;5204:45;5224:16;5242:6;5204:19;:45::i;:::-;5171:78;5163:87;;5013:242;;;;:::o;10748:325:17:-;10818:7;10833:12;10848:3;:10;10833:25;;10865:12;10975:4;10970:3;10966:14;10958:22;;11042:26;11048:7;11042:26;;11057:4;11063;11042:5;:26::i;:::-;11035:33;;;;10748:325;;;;:::o;12782:256::-;12835:11;12854:13;2607:26;12854:27;;13022:5;13012:7;13008:2;13004:16;13000:28;12992:36;;12926:108;12782:256;;;:::o;15274:815::-;15375:14;15411:1;15401:6;:11;;;15397:49;;15437:1;15429:10;;15422:17;;;;15397:49;15473:12;15477:7;15473:3;:12::i;:::-;15455:30;;15464:6;15455:15;;:6;:15;;;;:::i;:::-;:30;15451:282;;;15674:12;15678:7;15674:3;:12::i;:::-;15688;15692:7;15688:3;:12::i;:::-;15702:6;15718;15710:15;;15646:80;;;;;;;;;;;;;;:::i;:::-;;;;;;;;15451:282;15751:2;15742:6;:11;;;15738:66;;;15762:42;;;;;;;;;;;;;;15738:66;15811:15;15871:1;15862:6;:10;15850:22;;15884:12;15899;15903:7;15899:3;:12::i;:::-;15884:27;;;;15917:13;15933:19;15942:9;15933:8;:19::i;:::-;15917:35;;16073:5;16063:6;16057:4;16053:17;16047:24;16043:36;16033:46;;15967:118;;;15274:815;;;;;;:::o;4981:185:15:-;5067:8;5038:38;;5059:6;;;;;;;;;;5038:38;;;;;;;;;;;;5091:8;5082:6;;:17;;;;;;;;;;;;;;;;;;5112:27;5105:34;;;5152:9;;5145:16;;;;;;;;;;;4981:185;:::o;1089:114:1:-;1146:30;1160:6;;1168:7;1146:30;;;;;;;:::i;:::-;;;;;;;;1191:7;1182:6;:16;;;;1089:114;:::o;5170:183:15:-;5259:15;5229:27;:45;;;;5292:13;5280:9;;:25;;;;;;;;;;;;;;;;;;5334:13;5316:32;;;;;;;;;;;;5170:183;:::o;1891:127:4:-;1965:4;1984:29;1998:3;2003:9;1984:13;:29::i;:::-;1977:36;;1891:127;;;:::o;5638:235::-;5731:4;5756:20;:42;;;5799:6;:16;;;5817:6;:27;;;5846:6;:21;;;5756:112;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5743:125;;5638:235;;;:::o;6314:987::-;6448:4;6462:18;6553:16;736:42:8;6536:80:4;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6526:91;;;;;;6635:1;6500:145;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6483:168;;;;;;6462:189;;6659:11;6672:41;6717:149;352:42:8;6745:60:4;;;;;;;;:::i;:::-;;;;;;;;;;;;;6813:6;:23;;;6844:6;:16;;;6717:20;:149::i;:::-;6658:208;;;;6891:4;6881:14;;:6;:14;;;6873:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;6984:34;7021:55;7047:28;7021:25;:55::i;:::-;6984:92;;7083:8;7094:183;7158:10;7141:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;7202:1;7179:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;7215:6;:25;;;7250:7;:19;;;7094:37;:183::i;:::-;7083:194;;7292:4;7285:11;;;;;;;6314:987;;;;:::o;9979:390:17:-;10076:15;10099:12;10121:4;10114;:11;;;;:::i;:::-;10099:26;;10224:4;10218:11;10212:4;10209:21;10206:52;;;10249:1;10241:9;;10206:52;10281:1;10273:4;:9;10269:41;;10299:4;10292:11;;;;;10269:41;10325:39;10346:5;10353:4;10359;10325:20;:39::i;:::-;10315:49;;10093:276;9979:390;;;;;;:::o;11675:332::-;11728:11;11747:13;2607:26;11747:27;;11991:5;11981:7;11976:3;11972:17;11968:29;11960:37;;11819:184;11675:332;;;:::o;4836:286::-;4888:12;5045:66;5041:1;5035:4;5031:12;5027:85;5019:93;;4836:286;;;:::o;370:200:3:-;449:4;483;469:18;;:10;:18;;;461:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;556:9;512:53;;524:4;512:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;505:60;;370:200;;;;:::o;1737:238:10:-;1844:12;1858:19;1885:16;1904:19;1918:4;1904:13;:19::i;:::-;1885:38;;1936:34;1951:3;1956:6;1964:5;1936:14;:34::i;:::-;1929:41;;;;;1737:238;;;;;;:::o;660:443:7:-;732:17;;:::i;:::-;757:39;799:28;818:8;799:18;:28::i;:::-;757:70;;847:251;;;;;;;;875:38;897:12;910:1;897:15;;;;;;;;:::i;:::-;;;;;;;;875:21;:38::i;:::-;847:251;;;;932:38;954:12;967:1;954:15;;;;;;;;:::i;:::-;;;;;;;;932:21;:38::i;:::-;847:251;;;;993:38;1015:12;1028:1;1015:15;;;;;;;;:::i;:::-;;;;;;;;993:21;:38::i;:::-;847:251;;;;1051:38;1073:12;1086:1;1073:15;;;;;;;;:::i;:::-;;;;;;;;1051:21;:38::i;:::-;847:251;;;834:264;;;660:443;;;:::o;1111:286:10:-;1260:14;1282:16;1301:19;1315:4;1301:13;:19::i;:::-;1282:38;;1333:59;1365:3;1370:6;1378;1386:5;1333:31;:59::i;:::-;1326:66;;;1111:286;;;;;;:::o;8805:657:17:-;8916:15;8939:19;8961:2;8939:24;;8969:18;8990:2;8969:23;;9055:11;9076:4;9055:26;;9087:11;9108:4;9087:26;;9135:4;9127;:12;;;:28;;;;;9151:4;9143;:12;;;9127:28;9119:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;9288:5;9275:11;9271:23;9260:34;;9356:4;9347:7;9344:17;9331:11;9327:35;9316:46;;9422:4;9413:7;9410:17;9398:10;9394:34;9383:45;;9186:272;;;;8805:657;;;;;:::o;2213:140:10:-;2277:23;2342:4;2332:15;;;;;;2315:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;2308:40;;2213:140;;;:::o;3091:531:6:-;3198:12;3212:19;3239:23;3265:19;3277:6;3265:11;:19::i;:::-;3239:45;;3291:18;3311:25;3338:16;3358:33;3372:5;3379:4;3385:5;3358:13;:33::i;:::-;3290:101;;;;;;3398:11;3435:1;3412:12;:19;:24;3398:38;;3451:6;:21;;;;3461:11;3451:21;3443:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3510:18;3531:6;:57;;3579:9;;;;;;;;;;;;3531:57;;;3540:36;3554:5;3573:1;3560:10;:14;;;;:::i;:::-;3554:21;;;;;;;;:::i;:::-;;;;;;;;3540:13;:36::i;:::-;3531:57;3510:78;;3603:6;3611:5;3595:22;;;;;;;;;;3091:531;;;;;;:::o;2576:119:9:-;2635:16;2666:24;2675:14;2685:3;2675:9;:14::i;:::-;2666:8;:24::i;:::-;2659:31;;2576:119;;;:::o;4943:116::-;5007:7;5037:16;5049:3;5037:11;:16::i;:::-;5029:25;;5022:32;;4943:116;;;:::o;3966:603::-;4030:7;4090:6;4077:3;:10;;;:19;4069:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4135:18;4155;4175:20;4199:18;4213:3;4199:13;:18::i;:::-;4134:83;;;;;;4244:21;4232:33;;;;;;;;:::i;:::-;;:8;:33;;;;;;;;:::i;:::-;;;4224:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;4303:11;4327:10;4317:3;:7;;;:20;;;;:::i;:::-;4303:34;;4343:11;4390:3;4384:10;4377:17;;4474:2;4462:10;4459:18;4456:86;;;4521:10;4517:2;4513:19;4508:3;4504:29;4499:3;4495:39;4488:46;;4456:86;4561:3;4554:10;;;;;;;3966:603;;;:::o;2458:293:6:-;2607:14;2630:11;2643:18;2665:24;2669:4;2675:6;2683:5;2665:3;:24::i;:::-;2629:60;;;;2704:6;:41;;;;;2714:31;2731:6;2739:5;2714:16;:31::i;:::-;2704:41;2696:50;;;;2458:293;;;;;;:::o;8403:503::-;8467:25;8500:32;8535:26;8554:6;8535:18;:26::i;:::-;8500:61;;8567:23;8608:5;:12;8593:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8567:54;;8628:11;8642:5;:12;8628:26;;8665:9;8660:223;8684:3;8680:1;:7;8660:223;;;8699:20;8722:29;8742:5;8748:1;8742:8;;;;;;;;:::i;:::-;;;;;;;;8722:19;:29::i;:::-;8699:52;;8770:66;;;;;;;;8789:7;8770:66;;;;8807:27;8826:7;8807:18;:27::i;:::-;8770:66;;;8759:5;8765:1;8759:8;;;;;;;;:::i;:::-;;;;;;;:77;;;;8865:3;;;;;8691:192;8660:223;;;;8896:5;8889:12;;;;;8403:503;;;:::o;4093:4112::-;4233:19;4260:26;4294:17;4326:18;4347:1;4326:22;;4354:16;4373:26;4394:4;4373:20;:26::i;:::-;4354:45;;4406:21;4430:5;4406:29;;4441:23;4474:27;4511;;:::i;:::-;4612:11;4626:6;:13;4612:27;;4650:9;4645:3361;4669:3;4665:1;:7;4645:3361;;;4698:6;4705:1;4698:9;;;;;;;;:::i;:::-;;;;;;;;4684:23;;4734:19;4715:38;;;;;:::i;:::-;;;4912:1;4898:15;;;;;:::i;:::-;;;4945:1;4926:15;:20;4922:578;;5056:13;5032:11;:19;;;5022:30;;;;;;:47;5014:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;4922:578;;;5139:6;5110:11;:19;;;:26;:35;5106:394;;5447:13;5402:41;5423:11;:19;;;5402:20;:41::i;:::-;:58;5394:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;5106:394;4922:578;5596:3;;;;;911:1;778:2;898:14;;;;:::i;:::-;5620:11;:19;;;:26;:48;5616:2384;;5703:3;:10;5684:15;:29;5680:546;5835:5;5680:546;5989:15;6013:3;6017:15;6013:20;;;;;;;;:::i;:::-;;;;;;;;;;6007:27;;5989:45;;6046:33;6082:11;:19;;;6102:9;6082:30;;;;;;;;;;:::i;:::-;;;;;;;;6046:66;;6140:20;6151:8;6140:10;:20::i;:::-;6124:36;;6194:1;6172:23;;6207:8;;;;5616:2384;1051:1;6244:11;:19;;;:26;:59;6240:1760;;6315:17;6335:25;6348:11;6335:12;:25::i;:::-;6315:45;;6370:12;6391:4;6396:1;6391:7;;;;;;;;:::i;:::-;;;;;;;;;;6385:14;;6370:29;;6409:12;6438:1;6429:6;:10;;;;:::i;:::-;6424:1;:16;;;;:::i;:::-;6409:31;;6450:26;6479:30;6496:4;6502:6;6479:30;;:16;:30::i;:::-;6450:59;;6519:25;6547:38;6564:3;6569:15;6547:16;:38::i;:::-;6519:66;;6595:26;6624:51;6647:13;6662:12;6624:22;:51::i;:::-;6595:80;;1555:1;6690:26;;:6;:26;;;:55;;;;1593:1;6720:25;;:6;:25;;;6690:55;6686:1242;;;6787:18;6763:13;:20;:42;:87;;;;;6832:18;6809:12;:19;:41;6763:87;6759:299;;;7027:18;7008:37;;;;;:::i;:::-;;;6759:299;1694:4;1687:12;;7155:17;;;7139:33;;7184:5;;;;;;;;6686:1242;1473:1;7210:31;;:6;:31;;;:65;;;;1516:1;7245:30;;:6;:30;;;7210:65;7206:722;;;7315:13;:20;7293:18;:42;7289:552;;1694:4;1687:12;;7541:17;;;7525:33;;7572:5;;;;;;;;7289:552;7718:34;7729:11;:19;;;7749:1;7729:22;;;;;;;;:::i;:::-;;;;;;;;7718:10;:34::i;:::-;7702:50;;7788:18;7766:40;;7820:8;;;;;;;;7206:722;7869:48;;;;;;;;;;:::i;:::-;;;;;;;;6240:1760;7952:39;;;;;;;;;;:::i;:::-;;;;;;;;4645:3361;;;;;8069:16;1694:4;1687:12;;8105:17;;;8088:13;:34;8069:53;;8136:10;8148:38;8165:3;8170:15;8148:16;:38::i;:::-;8188:11;8128:72;;;;;;;;;;;;;;4093:4112;;;;;;;:::o;10090:167::-;10158:19;10192:60;10212:5;:13;;;10249:1;10226:5;:13;;;:20;:24;;;;:::i;:::-;10212:39;;;;;;;;:::i;:::-;;;;;;;;10192:19;:60::i;:::-;10185:67;;10090:167;;;:::o;808:198:9:-;868:14;;:::i;:::-;890:11;940:2;935:3;931:12;924:19;;962:39;;;;;;;;979:3;:10;962:39;;;;996:3;962:39;;;955:46;;;808:198;;;:::o;1146:1290::-;1207:16;1232:18;1254:20;1278:18;1292:3;1278:13;:18::i;:::-;1231:65;;;;;1323:21;1311:33;;;;;;;;:::i;:::-;;:8;:33;;;;;;;;:::i;:::-;;;1303:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1755:20;361:2;1778:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1755:53;;1815:17;1842:14;1859:10;1842:27;;1875:426;1891:3;:10;;;1882:6;:19;1875:426;;;361:2;1919:9;:27;1911:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2003:18;2023;2047:92;2070:61;;;;;;;;2100:6;2087:3;:10;;;:19;;;;:::i;:::-;2070:61;;;;2123:6;2113:3;:7;;;:16;;;;:::i;:::-;2070:61;;;2047:13;:92::i;:::-;2002:137;;;;;2165:65;;;;;;;;2195:10;2182;:23;;;;:::i;:::-;2165:65;;;;2222:6;2212:3;:7;;;:16;;;;:::i;:::-;2165:65;;;2148:3;2152:9;2148:14;;;;;;;;:::i;:::-;;;;;;;:82;;;;2252:1;2239:14;;;;;:::i;:::-;;;2284:10;2271;:23;;;;:::i;:::-;2261:33;;;;;:::i;:::-;;;1903:398;;1875:426;;;2399:9;2394:3;2387:22;2428:3;2421:10;;;;;;;1146:1290;;;:::o;7144:1872::-;7228:7;7243;7258:11;7305:1;7292:3;:10;;;:14;7284:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;7342:11;7356:3;:7;;;7342:21;;7369:14;7430:3;7424:10;7421:1;7416:19;7406:29;;7460:8;7451:6;:17;7447:1565;;;7509:1;7512;7515:21;7501:36;;;;;;;;;;7447:1565;7563:8;7554:6;:17;7550:1462;;;7655:14;7681:4;7672:6;:13;;;;:::i;:::-;7655:30;;7715:6;7702:3;:10;;;:19;7694:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;7768:1;7771:6;7779:21;7760:41;;;;;;;;;;;7550:1462;7827:8;7818:6;:17;7814:1198;;;7867:19;7898:4;7889:6;:13;;;;:::i;:::-;7867:35;;7932:11;7919:3;:10;;;:24;7911:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7988:14;8119:11;8115:2;8111:20;8106:3;8102:30;8097:1;8092:3;8088:11;8082:18;8078:55;8068:65;;8184:6;8170:11;:20;;;;:::i;:::-;8157:3;:10;;;:33;8149:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8240:11;8236:1;:15;;;;:::i;:::-;8253:6;8261:21;8228:55;;;;;;;;;;;;7814:1198;8309:8;8300:6;:17;8296:716;;;8398:15;8425:4;8416:6;:13;;;;:::i;:::-;8398:31;;8459:7;8446:3;:10;;;:20;8438:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;8511:1;8514:7;8523:21;8503:42;;;;;;;;;;;8296:716;8586:20;8618:4;8609:6;:13;;;;:::i;:::-;8586:36;;8652:12;8639:3;:10;;;:25;8631:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8707:15;8838:12;8834:2;8830:21;8825:3;8821:31;8816:1;8811:3;8807:11;8801:18;8797:56;8786:67;;8905:7;8890:12;:22;;;;:::i;:::-;8877:3;:10;;;:35;8869:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;8960:12;8956:1;:16;;;;:::i;:::-;8974:7;8983:21;8948:57;;;;;;;;;;7144:1872;;;;;;:::o;4163:142:5:-;4243:4;4293:6;4283:17;;;;;;4272:6;4262:17;;;;;;:38;4255:45;;4163:142;;;;:::o;2814:299:9:-;2876:12;2897:18;2917;2937:20;2961:18;2975:3;2961:13;:18::i;:::-;2896:83;;;;;;3006:21;2994:33;;;;;;;;:::i;:::-;;:8;:33;;;;;;;;:::i;:::-;;;2986:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3070:38;3076:3;:7;;;3085:10;3097;3070:5;:38::i;:::-;3063:45;;;;;2814:299;;;:::o;3454:374:5:-;3517:12;3537:20;3586:1;3570:6;:13;:17;;;;:::i;:::-;3560:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3537:51;;3595:11;3609:6;:13;3595:27;;3633:9;3628:175;3652:3;3648:1;:7;3628:175;;;3697:1;3684:6;3691:1;3684:9;;;;;;;;:::i;:::-;;;;;;;;;;:14;;;;;3667:7;3679:1;3675;:5;;;;:::i;:::-;3667:14;;;;;;;;:::i;:::-;;;;;:31;;;;;;;;;;;3753:2;3740:6;3747:1;3740:9;;;;;;;;:::i;:::-;;;;;;;;;;3734:16;;:21;;;;:::i;:::-;3727:29;;3706:7;3722:1;3718;3714;:5;;;;:::i;:::-;:9;;;;:::i;:::-;3706:18;;;;;;;;:::i;:::-;;;;;:50;;;;;;;;;;;3785:3;;;;;3628:175;;;;3816:7;3809:14;;;;3454:374;;;:::o;3030:300::-;3093:7;3128:2;3112:6;:13;:18;3108:131;;;3140:11;3203:2;3195:6;3191:15;3185:22;3178:29;;3229:3;3222:10;;;;;3108:131;3263:6;3252:29;;;;;;;;;;;;:::i;:::-;3245:36;;3030:300;;;;:::o;9202:401:6:-;9276:15;9299:19;9344:2;9329:5;:12;;;:17;9325:232;;;9419:29;9442:5;9419:22;:29::i;:::-;9410:38;;9325:232;;;9524:26;9544:5;9524:19;:26::i;:::-;9515:35;;9325:232;9570:28;9591:6;9570:20;:28::i;:::-;9563:35;;;9202:401;;;:::o;9782:164::-;9849:18;9882:59;9903:37;9923:5;:13;;;9937:1;9923:16;;;;;;;;:::i;:::-;;;;;;;;9903:19;:37::i;:::-;9882:20;:59::i;:::-;9875:66;;9782:164;;;:::o;2808:218:5:-;2883:12;2917:6;:13;2907:6;:23;2903:60;;2947:9;;;;;;;;;;;;2940:16;;;;2903:60;2976:45;2982:6;2990;3014;2998;:13;:22;;;;:::i;:::-;2976:5;:45::i;:::-;2969:52;;2808:218;;;;;:::o;10485:223:6:-;10573:15;10596:9;10608:1;10596:13;;10615:75;10634:1;10622:2;:9;:13;:30;;;;;10651:1;10639:2;:9;:13;10622:30;:48;;;;;10665:2;10668:1;10665:5;;;;;;;;:::i;:::-;;;;;;;;;;10656:14;;;:2;10659:1;10656:5;;;;;;;;:::i;:::-;;;;;;;;;;:14;;;;10622:48;10615:75;;;10680:3;;;;;:::i;:::-;;;;10615:75;;;10702:1;10695:8;;;10485:223;;;;:::o;9255:789:9:-;9356:12;9376:16;9405:7;9395:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9376:37;;9437:1;9423:3;:10;:15;9419:46;;9455:3;9448:10;;;;;9419:46;9471:11;9492:7;9485:4;:14;;;;:::i;:::-;9471:28;;9505:12;9557:2;9552:3;9548:12;9540:20;;9628:9;9623:181;9657:2;9647:7;:12;;;;:::i;:::-;9643:1;:16;9623:181;;;9709:3;9703:10;9697:4;9690:24;9737:2;9730:9;;;;;:::i;:::-;;;9755:2;9747:10;;;;;:::i;:::-;;;9786:3;;;;;9623:181;;;;9847:12;9919:1;9912:2;9902:7;:12;;;;;:::i;:::-;;;9896:2;:19;9890:3;:26;:30;9883:37;;10011:4;10004;9998:11;9994:22;9986:4;9982:9;9976:3;9970:10;9966:26;9963:54;9957:4;9950:68;10036:3;10029:10;;;;;;9255:789;;;;;;:::o;6733:107::-;6798:12;6825:10;6831:3;6825:5;:10::i;:::-;6818:17;;6733:107;;;:::o;352:2452:5:-;460:12;504:7;498:2;488:7;:12;;;;:::i;:::-;:23;;480:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;564:6;553:7;544:6;:16;;;;:::i;:::-;:26;;536:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;629:7;620:6;:16;;;;:::i;:::-;603:6;:13;:33;;595:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;665:22;725:7;718:15;745:1;740:1693;;;;2554:4;2548:11;2535:24;;2717:1;2706:9;2699:20;2757:4;2746:9;2742:20;2736:4;2729:34;711:2060;;740:1693;898:4;892:11;879:24;;1485:2;1476:7;1472:16;1827:9;1820:17;1814:4;1810:28;1798:9;1787;1783:25;1779:60;1867:7;1863:2;1859:16;2081:6;2067:9;2060:17;2054:4;2050:28;2038:9;2030:6;2026:22;2022:57;2018:70;1885:341;2106:3;2102:2;2099:11;1885:341;;;2212:2;2206:9;2202:2;2195:21;2137:4;2133:2;2129:13;2123:19;;2167:4;2163:2;2159:13;2153:19;;1885:341;;;1889:209;2254:7;2243:9;2236:26;2420:2;2416:7;2411:2;2407;2403:11;2399:25;2393:4;2386:39;747:1686;;;711:2060;;2790:9;2783:16;;;352:2452;;;;;:::o;10157:118:9:-;10214:12;10241:29;10247:3;:7;;;10256:1;10259:3;:10;;;10241:5;:29::i;:::-;10234:36;;10157:118;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;7:126:18:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:156::-;565:9;598:37;629:5;598:37;:::i;:::-;585:50;;485:156;;;:::o;647:191::-;764:67;825:5;764:67;:::i;:::-;759:3;752:80;647:191;;:::o;844:282::-;967:4;1005:2;994:9;990:18;982:26;;1018:101;1116:1;1105:9;1101:17;1092:6;1018:101;:::i;:::-;844:282;;;;:::o;1132:93::-;1168:7;1208:10;1201:5;1197:22;1186:33;;1132:93;;;:::o;1231:115::-;1316:23;1333:5;1316:23;:::i;:::-;1311:3;1304:36;1231:115;;:::o;1352:218::-;1443:4;1481:2;1470:9;1466:18;1458:26;;1494:69;1560:1;1549:9;1545:17;1536:6;1494:69;:::i;:::-;1352:218;;;;:::o;1576:77::-;1613:7;1642:5;1631:16;;1576:77;;;:::o;1659:118::-;1746:24;1764:5;1746:24;:::i;:::-;1741:3;1734:37;1659:118;;:::o;1783:222::-;1876:4;1914:2;1903:9;1899:18;1891:26;;1927:71;1995:1;1984:9;1980:17;1971:6;1927:71;:::i;:::-;1783:222;;;;:::o;2011:75::-;2044:6;2077:2;2071:9;2061:19;;2011:75;:::o;2092:117::-;2201:1;2198;2191:12;2215:117;2324:1;2321;2314:12;2338:117;2447:1;2444;2437:12;2461:117;2570:1;2567;2560:12;2584:102;2625:6;2676:2;2672:7;2667:2;2660:5;2656:14;2652:28;2642:38;;2584:102;;;:::o;2692:180::-;2740:77;2737:1;2730:88;2837:4;2834:1;2827:15;2861:4;2858:1;2851:15;2878:281;2961:27;2983:4;2961:27;:::i;:::-;2953:6;2949:40;3091:6;3079:10;3076:22;3055:18;3043:10;3040:34;3037:62;3034:88;;;3102:18;;:::i;:::-;3034:88;3142:10;3138:2;3131:22;2921:238;2878:281;;:::o;3165:129::-;3199:6;3226:20;;:::i;:::-;3216:30;;3255:33;3283:4;3275:6;3255:33;:::i;:::-;3165:129;;;:::o;3300:307::-;3361:4;3451:18;3443:6;3440:30;3437:56;;;3473:18;;:::i;:::-;3437:56;3511:29;3533:6;3511:29;:::i;:::-;3503:37;;3595:4;3589;3585:15;3577:23;;3300:307;;;:::o;3613:146::-;3710:6;3705:3;3700;3687:30;3751:1;3742:6;3737:3;3733:16;3726:27;3613:146;;;:::o;3765:423::-;3842:5;3867:65;3883:48;3924:6;3883:48;:::i;:::-;3867:65;:::i;:::-;3858:74;;3955:6;3948:5;3941:21;3993:4;3986:5;3982:16;4031:3;4022:6;4017:3;4013:16;4010:25;4007:112;;;4038:79;;:::i;:::-;4007:112;4128:54;4175:6;4170:3;4165;4128:54;:::i;:::-;3848:340;3765:423;;;;;:::o;4207:338::-;4262:5;4311:3;4304:4;4296:6;4292:17;4288:27;4278:122;;4319:79;;:::i;:::-;4278:122;4436:6;4423:20;4461:78;4535:3;4527:6;4520:4;4512:6;4508:17;4461:78;:::i;:::-;4452:87;;4268:277;4207:338;;;;:::o;4551:830::-;4637:6;4645;4694:2;4682:9;4673:7;4669:23;4665:32;4662:119;;;4700:79;;:::i;:::-;4662:119;4848:1;4837:9;4833:17;4820:31;4878:18;4870:6;4867:30;4864:117;;;4900:79;;:::i;:::-;4864:117;5005:62;5059:7;5050:6;5039:9;5035:22;5005:62;:::i;:::-;4995:72;;4791:286;5144:2;5133:9;5129:18;5116:32;5175:18;5167:6;5164:30;5161:117;;;5197:79;;:::i;:::-;5161:117;5302:62;5356:7;5347:6;5336:9;5332:22;5302:62;:::i;:::-;5292:72;;5087:287;4551:830;;;;;:::o;5387:507::-;5455:6;5504:2;5492:9;5483:7;5479:23;5475:32;5472:119;;;5510:79;;:::i;:::-;5472:119;5658:1;5647:9;5643:17;5630:31;5688:18;5680:6;5677:30;5674:117;;;5710:79;;:::i;:::-;5674:117;5815:62;5869:7;5860:6;5849:9;5845:22;5815:62;:::i;:::-;5805:72;;5601:286;5387:507;;;;:::o;5900:96::-;5937:7;5966:24;5984:5;5966:24;:::i;:::-;5955:35;;5900:96;;;:::o;6002:122::-;6075:24;6093:5;6075:24;:::i;:::-;6068:5;6065:35;6055:63;;6114:1;6111;6104:12;6055:63;6002:122;:::o;6130:139::-;6176:5;6214:6;6201:20;6192:29;;6230:33;6257:5;6230:33;:::i;:::-;6130:139;;;;:::o;6275:329::-;6334:6;6383:2;6371:9;6362:7;6358:23;6354:32;6351:119;;;6389:79;;:::i;:::-;6351:119;6509:1;6534:53;6579:7;6570:6;6559:9;6555:22;6534:53;:::i;:::-;6524:63;;6480:117;6275:329;;;;:::o;6610:118::-;6697:24;6715:5;6697:24;:::i;:::-;6692:3;6685:37;6610:118;;:::o;6734:222::-;6827:4;6865:2;6854:9;6850:18;6842:26;;6878:71;6946:1;6935:9;6931:17;6922:6;6878:71;:::i;:::-;6734:222;;;;:::o;6962:122::-;7035:24;7053:5;7035:24;:::i;:::-;7028:5;7025:35;7015:63;;7074:1;7071;7064:12;7015:63;6962:122;:::o;7090:139::-;7136:5;7174:6;7161:20;7152:29;;7190:33;7217:5;7190:33;:::i;:::-;7090:139;;;;:::o;7235:117::-;7344:1;7341;7334:12;7358:117;7467:1;7464;7457:12;7481:77;7518:7;7547:5;7536:16;;7481:77;;;:::o;7564:122::-;7637:24;7655:5;7637:24;:::i;:::-;7630:5;7627:35;7617:63;;7676:1;7673;7666:12;7617:63;7564:122;:::o;7692:139::-;7738:5;7776:6;7763:20;7754:29;;7792:33;7819:5;7792:33;:::i;:::-;7692:139;;;;:::o;7868:1270::-;7951:5;7995:4;7983:9;7978:3;7974:19;7970:30;7967:117;;;8003:79;;:::i;:::-;7967:117;8102:21;8118:4;8102:21;:::i;:::-;8093:30;;8188:1;8228:49;8273:3;8264:6;8253:9;8249:22;8228:49;:::i;:::-;8221:4;8214:5;8210:16;8203:75;8133:156;8353:2;8394:49;8439:3;8430:6;8419:9;8415:22;8394:49;:::i;:::-;8387:4;8380:5;8376:16;8369:75;8299:156;8519:2;8560:49;8605:3;8596:6;8585:9;8581:22;8560:49;:::i;:::-;8553:4;8546:5;8542:16;8535:75;8465:156;8693:2;8734:49;8779:3;8770:6;8759:9;8755:22;8734:49;:::i;:::-;8727:4;8720:5;8716:16;8709:75;8631:164;8887:3;8876:9;8872:19;8859:33;8919:18;8911:6;8908:30;8905:117;;;8941:79;;:::i;:::-;8905:117;9061:58;9115:3;9106:6;9095:9;9091:22;9061:58;:::i;:::-;9054:4;9047:5;9043:16;9036:84;8805:326;7868:1270;;;;:::o;9144:311::-;9221:4;9311:18;9303:6;9300:30;9297:56;;;9333:18;;:::i;:::-;9297:56;9383:4;9375:6;9371:17;9363:25;;9443:4;9437;9433:15;9425:23;;9144:311;;;:::o;9461:117::-;9570:1;9567;9560:12;9601:710;9697:5;9722:81;9738:64;9795:6;9738:64;:::i;:::-;9722:81;:::i;:::-;9713:90;;9823:5;9852:6;9845:5;9838:21;9886:4;9879:5;9875:16;9868:23;;9939:4;9931:6;9927:17;9919:6;9915:30;9968:3;9960:6;9957:15;9954:122;;;9987:79;;:::i;:::-;9954:122;10102:6;10085:220;10119:6;10114:3;10111:15;10085:220;;;10194:3;10223:37;10256:3;10244:10;10223:37;:::i;:::-;10218:3;10211:50;10290:4;10285:3;10281:14;10274:21;;10161:144;10145:4;10140:3;10136:14;10129:21;;10085:220;;;10089:21;9703:608;;9601:710;;;;;:::o;10334:370::-;10405:5;10454:3;10447:4;10439:6;10435:17;10431:27;10421:122;;10462:79;;:::i;:::-;10421:122;10579:6;10566:20;10604:94;10694:3;10686:6;10679:4;10671:6;10667:17;10604:94;:::i;:::-;10595:103;;10411:293;10334:370;;;;:::o;10744:776::-;10830:5;10874:4;10862:9;10857:3;10853:19;10849:30;10846:117;;;10882:79;;:::i;:::-;10846:117;10981:21;10997:4;10981:21;:::i;:::-;10972:30;;11062:1;11102:49;11147:3;11138:6;11127:9;11123:22;11102:49;:::i;:::-;11095:4;11088:5;11084:16;11077:75;11012:151;11254:2;11243:9;11239:18;11226:32;11285:18;11277:6;11274:30;11271:117;;;11307:79;;:::i;:::-;11271:117;11427:74;11497:3;11488:6;11477:9;11473:22;11427:74;:::i;:::-;11420:4;11413:5;11409:16;11402:100;11173:340;10744:776;;;;:::o;11564:1860::-;11654:5;11698:4;11686:9;11681:3;11677:19;11673:30;11670:117;;;11706:79;;:::i;:::-;11670:117;11805:21;11821:4;11805:21;:::i;:::-;11796:30;;11890:1;11930:49;11975:3;11966:6;11955:9;11951:22;11930:49;:::i;:::-;11923:4;11916:5;11912:16;11905:75;11836:155;12094:2;12083:9;12079:18;12066:32;12125:18;12117:6;12114:30;12111:117;;;12147:79;;:::i;:::-;12111:117;12267:83;12346:3;12337:6;12326:9;12322:22;12267:83;:::i;:::-;12260:4;12253:5;12249:16;12242:109;12001:361;12459:2;12448:9;12444:18;12431:32;12490:18;12482:6;12479:30;12476:117;;;12512:79;;:::i;:::-;12476:117;12632:86;12714:3;12705:6;12694:9;12690:22;12632:86;:::i;:::-;12625:4;12618:5;12614:16;12607:112;12372:358;12829:2;12818:9;12814:18;12801:32;12860:18;12852:6;12849:30;12846:117;;;12882:79;;:::i;:::-;12846:117;13002:58;13056:3;13047:6;13036:9;13032:22;13002:58;:::i;:::-;12995:4;12988:5;12984:16;12977:84;12740:332;13173:3;13162:9;13158:19;13145:33;13205:18;13197:6;13194:30;13191:117;;;13227:79;;:::i;:::-;13191:117;13347:58;13401:3;13392:6;13381:9;13377:22;13347:58;:::i;:::-;13340:4;13333:5;13329:16;13322:84;13082:335;11564:1860;;;;:::o;13430:1331::-;13575:6;13583;13591;13599;13607;13656:3;13644:9;13635:7;13631:23;13627:33;13624:120;;;13663:79;;:::i;:::-;13624:120;13783:1;13808:53;13853:7;13844:6;13833:9;13829:22;13808:53;:::i;:::-;13798:63;;13754:117;13910:2;13936:53;13981:7;13972:6;13961:9;13957:22;13936:53;:::i;:::-;13926:63;;13881:118;14066:2;14055:9;14051:18;14038:32;14097:18;14089:6;14086:30;14083:117;;;14119:79;;:::i;:::-;14083:117;14224:62;14278:7;14269:6;14258:9;14254:22;14224:62;:::i;:::-;14214:72;;14009:287;14335:2;14361:53;14406:7;14397:6;14386:9;14382:22;14361:53;:::i;:::-;14351:63;;14306:118;14491:3;14480:9;14476:19;14463:33;14523:18;14515:6;14512:30;14509:117;;;14545:79;;:::i;:::-;14509:117;14650:94;14736:7;14727:6;14716:9;14712:22;14650:94;:::i;:::-;14640:104;;14434:320;13430:1331;;;;;;;;:::o;14767:329::-;14826:6;14875:2;14863:9;14854:7;14850:23;14846:32;14843:119;;;14881:79;;:::i;:::-;14843:119;15001:1;15026:53;15071:7;15062:6;15051:9;15047:22;15026:53;:::i;:::-;15016:63;;14972:117;14767:329;;;;:::o;15102:::-;15161:6;15210:2;15198:9;15189:7;15185:23;15181:32;15178:119;;;15216:79;;:::i;:::-;15178:119;15336:1;15361:53;15406:7;15397:6;15386:9;15382:22;15361:53;:::i;:::-;15351:63;;15307:117;15102:329;;;;:::o;15437:90::-;15471:7;15514:5;15507:13;15500:21;15489:32;;15437:90;;;:::o;15533:109::-;15614:21;15629:5;15614:21;:::i;:::-;15609:3;15602:34;15533:109;;:::o;15648:210::-;15735:4;15773:2;15762:9;15758:18;15750:26;;15786:65;15848:1;15837:9;15833:17;15824:6;15786:65;:::i;:::-;15648:210;;;;:::o;15864:169::-;15948:11;15982:6;15977:3;15970:19;16022:4;16017:3;16013:14;15998:29;;15864:169;;;;:::o;16039:162::-;16179:14;16175:1;16167:6;16163:14;16156:38;16039:162;:::o;16207:366::-;16349:3;16370:67;16434:2;16429:3;16370:67;:::i;:::-;16363:74;;16446:93;16535:3;16446:93;:::i;:::-;16564:2;16559:3;16555:12;16548:19;;16207:366;;;:::o;16579:419::-;16745:4;16783:2;16772:9;16768:18;16760:26;;16832:9;16826:4;16822:20;16818:1;16807:9;16803:17;16796:47;16860:131;16986:4;16860:131;:::i;:::-;16852:139;;16579:419;;;:::o;17004:98::-;17055:6;17089:5;17083:12;17073:22;;17004:98;;;:::o;17108:168::-;17191:11;17225:6;17220:3;17213:19;17265:4;17260:3;17256:14;17241:29;;17108:168;;;;:::o;17282:246::-;17363:1;17373:113;17387:6;17384:1;17381:13;17373:113;;;17472:1;17467:3;17463:11;17457:18;17453:1;17448:3;17444:11;17437:39;17409:2;17406:1;17402:10;17397:15;;17373:113;;;17520:1;17511:6;17506:3;17502:16;17495:27;17344:184;17282:246;;;:::o;17534:373::-;17620:3;17648:38;17680:5;17648:38;:::i;:::-;17702:70;17765:6;17760:3;17702:70;:::i;:::-;17695:77;;17781:65;17839:6;17834:3;17827:4;17820:5;17816:16;17781:65;:::i;:::-;17871:29;17893:6;17871:29;:::i;:::-;17866:3;17862:39;17855:46;;17624:283;17534:373;;;;:::o;17913:616::-;18098:4;18136:2;18125:9;18121:18;18113:26;;18185:9;18179:4;18175:20;18171:1;18160:9;18156:17;18149:47;18213:76;18284:4;18275:6;18213:76;:::i;:::-;18205:84;;18336:9;18330:4;18326:20;18321:2;18310:9;18306:18;18299:48;18364:76;18435:4;18426:6;18364:76;:::i;:::-;18356:84;;18450:72;18518:2;18507:9;18503:18;18494:6;18450:72;:::i;:::-;17913:616;;;;;;:::o;18535:154::-;18675:6;18671:1;18663:6;18659:14;18652:30;18535:154;:::o;18695:365::-;18837:3;18858:66;18922:1;18917:3;18858:66;:::i;:::-;18851:73;;18933:93;19022:3;18933:93;:::i;:::-;19051:2;19046:3;19042:12;19035:19;;18695:365;;;:::o;19066:419::-;19232:4;19270:2;19259:9;19255:18;19247:26;;19319:9;19313:4;19309:20;19305:1;19294:9;19290:17;19283:47;19347:131;19473:4;19347:131;:::i;:::-;19339:139;;19066:419;;;:::o;19491:::-;19630:4;19668:2;19657:9;19653:18;19645:26;;19717:9;19711:4;19707:20;19703:1;19692:9;19688:17;19681:47;19745:76;19816:4;19807:6;19745:76;:::i;:::-;19737:84;;19831:72;19899:2;19888:9;19884:18;19875:6;19831:72;:::i;:::-;19491:419;;;;;:::o;19916:166::-;20056:18;20052:1;20044:6;20040:14;20033:42;19916:166;:::o;20088:366::-;20230:3;20251:67;20315:2;20310:3;20251:67;:::i;:::-;20244:74;;20327:93;20416:3;20327:93;:::i;:::-;20445:2;20440:3;20436:12;20429:19;;20088:366;;;:::o;20460:419::-;20626:4;20664:2;20653:9;20649:18;20641:26;;20713:9;20707:4;20703:20;20699:1;20688:9;20684:17;20677:47;20741:131;20867:4;20741:131;:::i;:::-;20733:139;;20460:419;;;:::o;20885:155::-;21025:7;21021:1;21013:6;21009:14;21002:31;20885:155;:::o;21046:365::-;21188:3;21209:66;21273:1;21268:3;21209:66;:::i;:::-;21202:73;;21284:93;21373:3;21284:93;:::i;:::-;21402:2;21397:3;21393:12;21386:19;;21046:365;;;:::o;21417:419::-;21583:4;21621:2;21610:9;21606:18;21598:26;;21670:9;21664:4;21660:20;21656:1;21645:9;21641:17;21634:47;21698:131;21824:4;21698:131;:::i;:::-;21690:139;;21417:419;;;:::o;21842:156::-;21982:8;21978:1;21970:6;21966:14;21959:32;21842:156;:::o;22004:365::-;22146:3;22167:66;22231:1;22226:3;22167:66;:::i;:::-;22160:73;;22242:93;22331:3;22242:93;:::i;:::-;22360:2;22355:3;22351:12;22344:19;;22004:365;;;:::o;22375:419::-;22541:4;22579:2;22568:9;22564:18;22556:26;;22628:9;22622:4;22618:20;22614:1;22603:9;22599:17;22592:47;22656:131;22782:4;22656:131;:::i;:::-;22648:139;;22375:419;;;:::o;22800:109::-;22836:7;22876:26;22869:5;22865:38;22854:49;;22800:109;;;:::o;22915:180::-;22963:77;22960:1;22953:88;23060:4;23057:1;23050:15;23084:4;23081:1;23074:15;23101:216;23140:4;23160:19;23177:1;23160:19;:::i;:::-;23155:24;;23193:19;23210:1;23193:19;:::i;:::-;23188:24;;23236:1;23233;23229:9;23221:17;;23260:26;23254:4;23251:36;23248:62;;;23290:18;;:::i;:::-;23248:62;23101:216;;;;:::o;23323:118::-;23410:24;23428:5;23410:24;:::i;:::-;23405:3;23398:37;23323:118;;:::o;23447:328::-;23566:4;23604:2;23593:9;23589:18;23581:26;;23617:69;23683:1;23672:9;23668:17;23659:6;23617:69;:::i;:::-;23696:72;23764:2;23753:9;23749:18;23740:6;23696:72;:::i;:::-;23447:328;;;;;:::o;23781:222::-;23874:4;23912:2;23901:9;23897:18;23889:26;;23925:71;23993:1;23982:9;23978:17;23969:6;23925:71;:::i;:::-;23781:222;;;;:::o;24009:194::-;24049:4;24069:20;24087:1;24069:20;:::i;:::-;24064:25;;24103:20;24121:1;24103:20;:::i;:::-;24098:25;;24147:1;24144;24140:9;24132:17;;24171:1;24165:4;24162:11;24159:37;;;24176:18;;:::i;:::-;24159:37;24009:194;;;;:::o;24209:157::-;24349:9;24345:1;24337:6;24333:14;24326:33;24209:157;:::o;24372:365::-;24514:3;24535:66;24599:1;24594:3;24535:66;:::i;:::-;24528:73;;24610:93;24699:3;24610:93;:::i;:::-;24728:2;24723:3;24719:12;24712:19;;24372:365;;;:::o;24743:419::-;24909:4;24947:2;24936:9;24932:18;24924:26;;24996:9;24990:4;24986:20;24982:1;24971:9;24967:17;24960:47;25024:131;25150:4;25024:131;:::i;:::-;25016:139;;24743:419;;;:::o;25168:309::-;25279:4;25317:2;25306:9;25302:18;25294:26;;25366:9;25360:4;25356:20;25352:1;25341:9;25337:17;25330:47;25394:76;25465:4;25456:6;25394:76;:::i;:::-;25386:84;;25168:309;;;;:::o;25483:525::-;25648:4;25686:2;25675:9;25671:18;25663:26;;25699:71;25767:1;25756:9;25752:17;25743:6;25699:71;:::i;:::-;25817:9;25811:4;25807:20;25802:2;25791:9;25787:18;25780:48;25845:76;25916:4;25907:6;25845:76;:::i;:::-;25837:84;;25931:70;25997:2;25986:9;25982:18;25973:6;25931:70;:::i;:::-;25483:525;;;;;;:::o;26014:332::-;26135:4;26173:2;26162:9;26158:18;26150:26;;26186:71;26254:1;26243:9;26239:17;26230:6;26186:71;:::i;:::-;26267:72;26335:2;26324:9;26320:18;26311:6;26267:72;:::i;:::-;26014:332;;;;;:::o;26352:640::-;26547:4;26585:3;26574:9;26570:19;26562:27;;26599:71;26667:1;26656:9;26652:17;26643:6;26599:71;:::i;:::-;26680:72;26748:2;26737:9;26733:18;26724:6;26680:72;:::i;:::-;26799:9;26793:4;26789:20;26784:2;26773:9;26769:18;26762:48;26827:76;26898:4;26889:6;26827:76;:::i;:::-;26819:84;;26913:72;26981:2;26970:9;26966:18;26957:6;26913:72;:::i;:::-;26352:640;;;;;;;:::o;26998:191::-;27038:3;27057:20;27075:1;27057:20;:::i;:::-;27052:25;;27091:20;27109:1;27091:20;:::i;:::-;27086:25;;27134:1;27131;27127:9;27120:16;;27155:3;27152:1;27149:10;27146:36;;;27162:18;;:::i;:::-;27146:36;26998:191;;;;:::o;27195:140::-;27244:9;27277:52;27295:33;27304:23;27321:5;27304:23;:::i;:::-;27295:33;:::i;:::-;27277:52;:::i;:::-;27264:65;;27195:140;;;:::o;27341:129::-;27427:36;27457:5;27427:36;:::i;:::-;27422:3;27415:49;27341:129;;:::o;27476:549::-;27651:4;27689:3;27678:9;27674:19;27666:27;;27703:70;27770:1;27759:9;27755:17;27746:6;27703:70;:::i;:::-;27783:71;27850:2;27839:9;27835:18;27826:6;27783:71;:::i;:::-;27864:72;27932:2;27921:9;27917:18;27908:6;27864:72;:::i;:::-;27946;28014:2;28003:9;27999:18;27990:6;27946:72;:::i;:::-;27476:549;;;;;;;:::o;28031:332::-;28152:4;28190:2;28179:9;28175:18;28167:26;;28203:71;28271:1;28260:9;28256:17;28247:6;28203:71;:::i;:::-;28284:72;28352:2;28341:9;28337:18;28328:6;28284:72;:::i;:::-;28031:332;;;;;:::o;28369:108::-;28446:24;28464:5;28446:24;:::i;:::-;28441:3;28434:37;28369:108;;:::o;28483:::-;28560:24;28578:5;28560:24;:::i;:::-;28555:3;28548:37;28483:108;;:::o;28597:158::-;28670:11;28704:6;28699:3;28692:19;28744:4;28739:3;28735:14;28720:29;;28597:158;;;;:::o;28761:353::-;28837:3;28865:38;28897:5;28865:38;:::i;:::-;28919:60;28972:6;28967:3;28919:60;:::i;:::-;28912:67;;28988:65;29046:6;29041:3;29034:4;29027:5;29023:16;28988:65;:::i;:::-;29078:29;29100:6;29078:29;:::i;:::-;29073:3;29069:39;29062:46;;28841:273;28761:353;;;;:::o;29178:1178::-;29315:3;29351:4;29346:3;29342:14;29444:4;29437:5;29433:16;29427:23;29463:63;29520:4;29515:3;29511:14;29497:12;29463:63;:::i;:::-;29366:170;29623:4;29616:5;29612:16;29606:23;29642:63;29699:4;29694:3;29690:14;29676:12;29642:63;:::i;:::-;29546:169;29802:4;29795:5;29791:16;29785:23;29821:63;29878:4;29873:3;29869:14;29855:12;29821:63;:::i;:::-;29725:169;29989:4;29982:5;29978:16;29972:23;30008:63;30065:4;30060:3;30056:14;30042:12;30008:63;:::i;:::-;29904:177;30168:4;30161:5;30157:16;30151:23;30221:3;30215:4;30211:14;30204:4;30199:3;30195:14;30188:38;30247:71;30313:4;30299:12;30247:71;:::i;:::-;30239:79;;30091:238;30346:4;30339:11;;29320:1036;29178:1178;;;;:::o;30362:114::-;30429:6;30463:5;30457:12;30447:22;;30362:114;;;:::o;30482:174::-;30571:11;30605:6;30600:3;30593:19;30645:4;30640:3;30636:14;30621:29;;30482:174;;;;:::o;30662:132::-;30729:4;30752:3;30744:11;;30782:4;30777:3;30773:14;30765:22;;30662:132;;;:::o;30800:179::-;30869:10;30890:46;30932:3;30924:6;30890:46;:::i;:::-;30968:4;30963:3;30959:14;30945:28;;30800:179;;;;:::o;30985:113::-;31055:4;31087;31082:3;31078:14;31070:22;;30985:113;;;:::o;31134:712::-;31243:3;31272:54;31320:5;31272:54;:::i;:::-;31342:76;31411:6;31406:3;31342:76;:::i;:::-;31335:83;;31442:56;31492:5;31442:56;:::i;:::-;31521:7;31552:1;31537:284;31562:6;31559:1;31556:13;31537:284;;;31638:6;31632:13;31665:63;31724:3;31709:13;31665:63;:::i;:::-;31658:70;;31751:60;31804:6;31751:60;:::i;:::-;31741:70;;31597:224;31584:1;31581;31577:9;31572:14;;31537:284;;;31541:14;31837:3;31830:10;;31248:598;;;31134:712;;;;:::o;31916:665::-;32059:3;32095:4;32090:3;32086:14;32183:4;32176:5;32172:16;32166:23;32202:63;32259:4;32254:3;32250:14;32236:12;32202:63;:::i;:::-;32110:165;32361:4;32354:5;32350:16;32344:23;32414:3;32408:4;32404:14;32397:4;32392:3;32388:14;32381:38;32440:103;32538:4;32524:12;32440:103;:::i;:::-;32432:111;;32285:269;32571:4;32564:11;;32064:517;31916:665;;;;:::o;32587:828::-;32878:4;32916:2;32905:9;32901:18;32893:26;;32929:71;32997:1;32986:9;32982:17;32973:6;32929:71;:::i;:::-;33047:9;33041:4;33037:20;33032:2;33021:9;33017:18;33010:48;33075:126;33196:4;33187:6;33075:126;:::i;:::-;33067:134;;33248:9;33242:4;33238:20;33233:2;33222:9;33218:18;33211:48;33276:132;33403:4;33394:6;33276:132;:::i;:::-;33268:140;;32587:828;;;;;;:::o;33421:116::-;33491:21;33506:5;33491:21;:::i;:::-;33484:5;33481:32;33471:60;;33527:1;33524;33517:12;33471:60;33421:116;:::o;33543:137::-;33597:5;33628:6;33622:13;33613:22;;33644:30;33668:5;33644:30;:::i;:::-;33543:137;;;;:::o;33686:345::-;33753:6;33802:2;33790:9;33781:7;33777:23;33773:32;33770:119;;;33808:79;;:::i;:::-;33770:119;33928:1;33953:61;34006:7;33997:6;33986:9;33982:22;33953:61;:::i;:::-;33943:71;;33899:125;33686:345;;;;:::o;34037:147::-;34138:11;34175:3;34160:18;;34037:147;;;;:::o;34190:386::-;34294:3;34322:38;34354:5;34322:38;:::i;:::-;34376:88;34457:6;34452:3;34376:88;:::i;:::-;34369:95;;34473:65;34531:6;34526:3;34519:4;34512:5;34508:16;34473:65;:::i;:::-;34563:6;34558:3;34554:16;34547:23;;34298:278;34190:386;;;;:::o;34582:94::-;34615:8;34663:5;34659:2;34655:14;34634:35;;34582:94;;;:::o;34682:::-;34721:7;34750:20;34764:5;34750:20;:::i;:::-;34739:31;;34682:94;;;:::o;34782:100::-;34821:7;34850:26;34870:5;34850:26;:::i;:::-;34839:37;;34782:100;;;:::o;34888:157::-;34993:45;35013:24;35031:5;35013:24;:::i;:::-;34993:45;:::i;:::-;34988:3;34981:58;34888:157;;:::o;35051:412::-;35209:3;35231:93;35320:3;35311:6;35231:93;:::i;:::-;35224:100;;35334:75;35405:3;35396:6;35334:75;:::i;:::-;35434:2;35429:3;35425:12;35418:19;;35454:3;35447:10;;35051:412;;;;;:::o;35469:79::-;35508:7;35537:5;35526:16;;35469:79;;;:::o;35554:157::-;35659:45;35679:24;35697:5;35679:24;:::i;:::-;35659:45;:::i;:::-;35654:3;35647:58;35554:157;;:::o;35717:79::-;35756:7;35785:5;35774:16;;35717:79;;;:::o;35802:157::-;35907:45;35927:24;35945:5;35927:24;:::i;:::-;35907:45;:::i;:::-;35902:3;35895:58;35802:157;;:::o;35965:397::-;36105:3;36120:75;36191:3;36182:6;36120:75;:::i;:::-;36220:2;36215:3;36211:12;36204:19;;36233:75;36304:3;36295:6;36233:75;:::i;:::-;36333:2;36328:3;36324:12;36317:19;;36353:3;36346:10;;35965:397;;;;;:::o;36368:256::-;36480:3;36495:75;36566:3;36557:6;36495:75;:::i;:::-;36595:2;36590:3;36586:12;36579:19;;36615:3;36608:10;;36368:256;;;;:::o;36630:301::-;36770:34;36766:1;36758:6;36754:14;36747:58;36839:34;36834:2;36826:6;36822:15;36815:59;36908:15;36903:2;36895:6;36891:15;36884:40;36630:301;:::o;36937:366::-;37079:3;37100:67;37164:2;37159:3;37100:67;:::i;:::-;37093:74;;37176:93;37265:3;37176:93;:::i;:::-;37294:2;37289:3;37285:12;37278:19;;36937:366;;;:::o;37309:419::-;37475:4;37513:2;37502:9;37498:18;37490:26;;37562:9;37556:4;37552:20;37548:1;37537:9;37533:17;37526:47;37590:131;37716:4;37590:131;:::i;:::-;37582:139;;37309:419;;;:::o;37734:256::-;37846:3;37861:75;37932:3;37923:6;37861:75;:::i;:::-;37961:2;37956:3;37952:12;37945:19;;37981:3;37974:10;;37734:256;;;;:::o;37996:86::-;38031:7;38071:4;38064:5;38060:16;38049:27;;37996:86;;;:::o;38088:96::-;38122:8;38171:5;38166:3;38162:15;38141:36;;38088:96;;;:::o;38190:93::-;38227:7;38256:21;38271:5;38256:21;:::i;:::-;38245:32;;38190:93;;;:::o;38289:149::-;38390:41;38408:22;38424:5;38408:22;:::i;:::-;38390:41;:::i;:::-;38385:3;38378:54;38289:149;;:::o;38444:247::-;38552:3;38567:71;38634:3;38625:6;38567:71;:::i;:::-;38663:1;38658:3;38654:11;38647:18;;38682:3;38675:10;;38444:247;;;;:::o;38697:157::-;38837:9;38833:1;38825:6;38821:14;38814:33;38697:157;:::o;38860:365::-;39002:3;39023:66;39087:1;39082:3;39023:66;:::i;:::-;39016:73;;39098:93;39187:3;39098:93;:::i;:::-;39216:2;39211:3;39207:12;39200:19;;38860:365;;;:::o;39231:419::-;39397:4;39435:2;39424:9;39420:18;39412:26;;39484:9;39478:4;39474:20;39470:1;39459:9;39455:17;39448:47;39512:131;39638:4;39512:131;:::i;:::-;39504:139;;39231:419;;;:::o;39656:143::-;39713:5;39744:6;39738:13;39729:22;;39760:33;39787:5;39760:33;:::i;:::-;39656:143;;;;:::o;39805:351::-;39875:6;39924:2;39912:9;39903:7;39899:23;39895:32;39892:119;;;39930:79;;:::i;:::-;39892:119;40050:1;40075:64;40131:7;40122:6;40111:9;40107:22;40075:64;:::i;:::-;40065:74;;40021:128;39805:351;;;;:::o;40162:180::-;40210:77;40207:1;40200:88;40307:4;40304:1;40297:15;40331:4;40328:1;40321:15;40348:160;40488:12;40484:1;40476:6;40472:14;40465:36;40348:160;:::o;40514:366::-;40656:3;40677:67;40741:2;40736:3;40677:67;:::i;:::-;40670:74;;40753:93;40842:3;40753:93;:::i;:::-;40871:2;40866:3;40862:12;40855:19;;40514:366;;;:::o;40886:419::-;41052:4;41090:2;41079:9;41075:18;41067:26;;41139:9;41133:4;41129:20;41125:1;41114:9;41110:17;41103:47;41167:131;41293:4;41167:131;:::i;:::-;41159:139;;40886:419;;;:::o;41311:176::-;41451:28;41447:1;41439:6;41435:14;41428:52;41311:176;:::o;41493:366::-;41635:3;41656:67;41720:2;41715:3;41656:67;:::i;:::-;41649:74;;41732:93;41821:3;41732:93;:::i;:::-;41850:2;41845:3;41841:12;41834:19;;41493:366;;;:::o;41865:419::-;42031:4;42069:2;42058:9;42054:18;42046:26;;42118:9;42112:4;42108:20;42104:1;42093:9;42089:17;42082:47;42146:131;42272:4;42146:131;:::i;:::-;42138:139;;41865:419;;;:::o;42290:176::-;42430:28;42426:1;42418:6;42414:14;42407:52;42290:176;:::o;42472:366::-;42614:3;42635:67;42699:2;42694:3;42635:67;:::i;:::-;42628:74;;42711:93;42800:3;42711:93;:::i;:::-;42829:2;42824:3;42820:12;42813:19;;42472:366;;;:::o;42844:419::-;43010:4;43048:2;43037:9;43033:18;43025:26;;43097:9;43091:4;43087:20;43083:1;43072:9;43068:17;43061:47;43125:131;43251:4;43125:131;:::i;:::-;43117:139;;42844:419;;;:::o;43269:180::-;43317:77;43314:1;43307:88;43414:4;43411:1;43404:15;43438:4;43435:1;43428:15;43455:167;43595:19;43591:1;43583:6;43579:14;43572:43;43455:167;:::o;43628:366::-;43770:3;43791:67;43855:2;43850:3;43791:67;:::i;:::-;43784:74;;43867:93;43956:3;43867:93;:::i;:::-;43985:2;43980:3;43976:12;43969:19;;43628:366;;;:::o;44000:419::-;44166:4;44204:2;44193:9;44189:18;44181:26;;44253:9;44247:4;44243:20;44239:1;44228:9;44224:17;44217:47;44281:131;44407:4;44281:131;:::i;:::-;44273:139;;44000:419;;;:::o;44425:176::-;44565:28;44561:1;44553:6;44549:14;44542:52;44425:176;:::o;44607:366::-;44749:3;44770:67;44834:2;44829:3;44770:67;:::i;:::-;44763:74;;44846:93;44935:3;44846:93;:::i;:::-;44964:2;44959:3;44955:12;44948:19;;44607:366;;;:::o;44979:419::-;45145:4;45183:2;45172:9;45168:18;45160:26;;45232:9;45226:4;45222:20;45218:1;45207:9;45203:17;45196:47;45260:131;45386:4;45260:131;:::i;:::-;45252:139;;44979:419;;;:::o;45404:180::-;45452:77;45449:1;45442:88;45549:4;45546:1;45539:15;45573:4;45570:1;45563:15;45590:170;45620:1;45637:18;45653:1;45637:18;:::i;:::-;45632:23;;45669:18;45685:1;45669:18;:::i;:::-;45664:23;;45706:1;45696:35;;45711:18;;:::i;:::-;45696:35;45752:1;45749;45745:9;45740:14;;45590:170;;;;:::o;45766:191::-;45804:4;45824:18;45840:1;45824:18;:::i;:::-;45819:23;;45856:18;45872:1;45856:18;:::i;:::-;45851:23;;45898:1;45895;45891:9;45883:17;;45922:4;45916;45913:14;45910:40;;;45930:18;;:::i;:::-;45910:40;45766:191;;;;:::o;45963:225::-;46103:34;46099:1;46091:6;46087:14;46080:58;46172:8;46167:2;46159:6;46155:15;46148:33;45963:225;:::o;46194:366::-;46336:3;46357:67;46421:2;46416:3;46357:67;:::i;:::-;46350:74;;46433:93;46522:3;46433:93;:::i;:::-;46551:2;46546:3;46542:12;46535:19;;46194:366;;;:::o;46566:419::-;46732:4;46770:2;46759:9;46755:18;46747:26;;46819:9;46813:4;46809:20;46805:1;46794:9;46790:17;46783:47;46847:131;46973:4;46847:131;:::i;:::-;46839:139;;46566:419;;;:::o;46991:179::-;47131:31;47127:1;47119:6;47115:14;47108:55;46991:179;:::o;47176:366::-;47318:3;47339:67;47403:2;47398:3;47339:67;:::i;:::-;47332:74;;47415:93;47504:3;47415:93;:::i;:::-;47533:2;47528:3;47524:12;47517:19;;47176:366;;;:::o;47548:419::-;47714:4;47752:2;47741:9;47737:18;47729:26;;47801:9;47795:4;47791:20;47787:1;47776:9;47772:17;47765:47;47829:131;47955:4;47829:131;:::i;:::-;47821:139;;47548:419;;;:::o;47973:173::-;48113:25;48109:1;48101:6;48097:14;48090:49;47973:173;:::o;48152:366::-;48294:3;48315:67;48379:2;48374:3;48315:67;:::i;:::-;48308:74;;48391:93;48480:3;48391:93;:::i;:::-;48509:2;48504:3;48500:12;48493:19;;48152:366;;;:::o;48524:419::-;48690:4;48728:2;48717:9;48713:18;48705:26;;48777:9;48771:4;48767:20;48763:1;48752:9;48748:17;48741:47;48805:131;48931:4;48805:131;:::i;:::-;48797:139;;48524:419;;;:::o;48949:229::-;49089:34;49085:1;49077:6;49073:14;49066:58;49158:12;49153:2;49145:6;49141:15;49134:37;48949:229;:::o;49184:366::-;49326:3;49347:67;49411:2;49406:3;49347:67;:::i;:::-;49340:74;;49423:93;49512:3;49423:93;:::i;:::-;49541:2;49536:3;49532:12;49525:19;;49184:366;;;:::o;49556:419::-;49722:4;49760:2;49749:9;49745:18;49737:26;;49809:9;49803:4;49799:20;49795:1;49784:9;49780:17;49773:47;49837:131;49963:4;49837:131;:::i;:::-;49829:139;;49556:419;;;:::o;49981:174::-;50121:26;50117:1;50109:6;50105:14;50098:50;49981:174;:::o;50161:366::-;50303:3;50324:67;50388:2;50383:3;50324:67;:::i;:::-;50317:74;;50400:93;50489:3;50400:93;:::i;:::-;50518:2;50513:3;50509:12;50502:19;;50161:366;;;:::o;50533:419::-;50699:4;50737:2;50726:9;50722:18;50714:26;;50786:9;50780:4;50776:20;50772:1;50761:9;50757:17;50750:47;50814:131;50940:4;50814:131;:::i;:::-;50806:139;;50533:419;;;:::o;50958:175::-;51098:27;51094:1;51086:6;51082:14;51075:51;50958:175;:::o;51139:366::-;51281:3;51302:67;51366:2;51361:3;51302:67;:::i;:::-;51295:74;;51378:93;51467:3;51378:93;:::i;:::-;51496:2;51491:3;51487:12;51480:19;;51139:366;;;:::o;51511:419::-;51677:4;51715:2;51704:9;51700:18;51692:26;;51764:9;51758:4;51754:20;51750:1;51739:9;51735:17;51728:47;51792:131;51918:4;51792:131;:::i;:::-;51784:139;;51511:419;;;:::o;51936:181::-;52076:33;52072:1;52064:6;52060:14;52053:57;51936:181;:::o;52123:366::-;52265:3;52286:67;52350:2;52345:3;52286:67;:::i;:::-;52279:74;;52362:93;52451:3;52362:93;:::i;:::-;52480:2;52475:3;52471:12;52464:19;;52123:366;;;:::o;52495:419::-;52661:4;52699:2;52688:9;52684:18;52676:26;;52748:9;52742:4;52738:20;52734:1;52723:9;52719:17;52712:47;52776:131;52902:4;52776:131;:::i;:::-;52768:139;;52495:419;;;:::o;52920:174::-;53060:26;53056:1;53048:6;53044:14;53037:50;52920:174;:::o;53100:366::-;53242:3;53263:67;53327:2;53322:3;53263:67;:::i;:::-;53256:74;;53339:93;53428:3;53339:93;:::i;:::-;53457:2;53452:3;53448:12;53441:19;;53100:366;;;:::o;53472:419::-;53638:4;53676:2;53665:9;53661:18;53653:26;;53725:9;53719:4;53715:20;53711:1;53700:9;53696:17;53689:47;53753:131;53879:4;53753:131;:::i;:::-;53745:139;;53472:419;;;:::o;53897:173::-;54037:25;54033:1;54025:6;54021:14;54014:49;53897:173;:::o;54076:366::-;54218:3;54239:67;54303:2;54298:3;54239:67;:::i;:::-;54232:74;;54315:93;54404:3;54315:93;:::i;:::-;54433:2;54428:3;54424:12;54417:19;;54076:366;;;:::o;54448:419::-;54614:4;54652:2;54641:9;54637:18;54629:26;;54701:9;54695:4;54691:20;54687:1;54676:9;54672:17;54665:47;54729:131;54855:4;54729:131;:::i;:::-;54721:139;;54448:419;;;:::o;54873:179::-;55013:31;55009:1;55001:6;54997:14;54990:55;54873:179;:::o;55058:366::-;55200:3;55221:67;55285:2;55280:3;55221:67;:::i;:::-;55214:74;;55297:93;55386:3;55297:93;:::i;:::-;55415:2;55410:3;55406:12;55399:19;;55058:366;;;:::o;55430:419::-;55596:4;55634:2;55623:9;55619:18;55611:26;;55683:9;55677:4;55673:20;55669:1;55658:9;55654:17;55647:47;55711:131;55837:4;55711:131;:::i;:::-;55703:139;;55430:419;;;:::o;55855:172::-;55995:24;55991:1;55983:6;55979:14;55972:48;55855:172;:::o;56033:366::-;56175:3;56196:67;56260:2;56255:3;56196:67;:::i;:::-;56189:74;;56272:93;56361:3;56272:93;:::i;:::-;56390:2;56385:3;56381:12;56374:19;;56033:366;;;:::o;56405:419::-;56571:4;56609:2;56598:9;56594:18;56586:26;;56658:9;56652:4;56648:20;56644:1;56633:9;56629:17;56622:47;56686:131;56812:4;56686:131;:::i;:::-;56678:139;;56405:419;;;:::o;56830:174::-;56970:26;56966:1;56958:6;56954:14;56947:50;56830:174;:::o;57010:366::-;57152:3;57173:67;57237:2;57232:3;57173:67;:::i;:::-;57166:74;;57249:93;57338:3;57249:93;:::i;:::-;57367:2;57362:3;57358:12;57351:19;;57010:366;;;:::o;57382:419::-;57548:4;57586:2;57575:9;57571:18;57563:26;;57635:9;57629:4;57625:20;57621:1;57610:9;57606:17;57599:47;57663:131;57789:4;57663:131;:::i;:::-;57655:139;;57382:419;;;:::o;57807:410::-;57847:7;57870:20;57888:1;57870:20;:::i;:::-;57865:25;;57904:20;57922:1;57904:20;:::i;:::-;57899:25;;57959:1;57956;57952:9;57981:30;57999:11;57981:30;:::i;:::-;57970:41;;58160:1;58151:7;58147:15;58144:1;58141:22;58121:1;58114:9;58094:83;58071:139;;58190:18;;:::i;:::-;58071:139;57855:362;57807:410;;;;:::o;58223:143::-;58280:5;58311:6;58305:13;58296:22;;58327:33;58354:5;58327:33;:::i;:::-;58223:143;;;;:::o;58372:351::-;58442:6;58491:2;58479:9;58470:7;58466:23;58462:32;58459:119;;;58497:79;;:::i;:::-;58459:119;58617:1;58642:64;58698:7;58689:6;58678:9;58674:22;58642:64;:::i;:::-;58632:74;;58588:128;58372:351;;;;:::o;58729:233::-;58768:3;58791:24;58809:5;58791:24;:::i;:::-;58782:33;;58837:66;58830:5;58827:77;58824:103;;58907:18;;:::i;:::-;58824:103;58954:1;58947:5;58943:13;58936:20;;58729:233;;;:::o;58968:185::-;59008:1;59025:20;59043:1;59025:20;:::i;:::-;59020:25;;59059:20;59077:1;59059:20;:::i;:::-;59054:25;;59098:1;59088:35;;59103:18;;:::i;:::-;59088:35;59145:1;59142;59138:9;59133:14;;58968:185;;;;:::o;59159:164::-;59299:16;59295:1;59287:6;59283:14;59276:40;59159:164;:::o;59329:366::-;59471:3;59492:67;59556:2;59551:3;59492:67;:::i;:::-;59485:74;;59568:93;59657:3;59568:93;:::i;:::-;59686:2;59681:3;59677:12;59670:19;;59329:366;;;:::o;59701:419::-;59867:4;59905:2;59894:9;59890:18;59882:26;;59954:9;59948:4;59944:20;59940:1;59929:9;59925:17;59918:47;59982:131;60108:4;59982:131;:::i;:::-;59974:139;;59701:419;;;:::o;60126:167::-;60266:19;60262:1;60254:6;60250:14;60243:43;60126:167;:::o;60299:366::-;60441:3;60462:67;60526:2;60521:3;60462:67;:::i;:::-;60455:74;;60538:93;60627:3;60538:93;:::i;:::-;60656:2;60651:3;60647:12;60640:19;;60299:366;;;:::o;60671:419::-;60837:4;60875:2;60864:9;60860:18;60852:26;;60924:9;60918:4;60914:20;60910:1;60899:9;60895:17;60888:47;60952:131;61078:4;60952:131;:::i;:::-;60944:139;;60671:419;;;:::o"},"methodIdentifiers":{"AMB()":"d69f9d61","DOMAIN()":"52a9674b","MIRROR_DOMAIN()":"14168416","ROOT_MANAGER()":"5f61e3ec","acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","mirrorConnector()":"cc394283","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","processMessageFromRoot(address,address,bytes,uint256,(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]),bytes,bytes))":"6e2edb4e","processed(bytes32)":"c1f0808a","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220","sendMessage(bytes,bytes)":"48e6fa23","setGasCap(uint256)":"7850b020","setMirrorConnector(address)":"5bd11efc","stateCommitmentChain()":"0f329ef8","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_domain\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_mirrorDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"_amb\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rootManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stateCommitmentChain\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Connector__processMessage_notUsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__index_indexMoreThan32Bytes\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slice\",\"type\":\"uint256\"}],\"name\":\"TypedMemView__index_overrun\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_updated\",\"type\":\"uint256\"}],\"name\":\"GasCapUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previous\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"}],\"name\":\"MirrorConnectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"domain\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"mirrorDomain\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"amb\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rootManager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"mirrorConnector\",\"type\":\"address\"}],\"name\":\"NewConnector\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AMB\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIRROR_DOMAIN\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mirrorConnector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_messageNonce\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"stateRootBatchHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct ChainInclusionProof\",\"name\":\"stateRootProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"stateTrieWitness\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"storageTrieWitness\",\"type\":\"bytes\"}],\"internalType\":\"struct L2MessageInclusionProof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"processMessageFromRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"processed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_encodedData\",\"type\":\"bytes\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasCap\",\"type\":\"uint256\"}],\"name\":\"setGasCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mirrorConnector\",\"type\":\"address\"}],\"name\":\"setMirrorConnector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stateCommitmentChain\",\"outputs\":[{\"internalType\":\"contract IStateCommitmentChain\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"processMessage(bytes)\":{\"details\":\"This is called by AMBs to process messages originating from mirror connector\"},\"processMessageFromRoot(address,address,bytes,uint256,(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]),bytes,bytes))\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/9973c1da3211e094a180a8a96ba9f8bb1ab1b389/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol#L165\"},\"sendMessage(bytes,bytes)\":{\"details\":\"This is called by the root manager *only* on mainnet to propagate the aggregate root\"}},\"version\":1},\"userdoc\":{\"events\":{\"GasCapUpdated(uint256,uint256)\":{\"notice\":\"Emitted when admin updates the gas cap\"},\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"AMB()\":{\"notice\":\"Address of the AMB on this domain.\"},\"DOMAIN()\":{\"notice\":\"The domain of this Messaging (i.e. Connector) contract.\"},\"MIRROR_DOMAIN()\":{\"notice\":\"The domain of the corresponding messaging (i.e. Connector) contract.\"},\"ROOT_MANAGER()\":{\"notice\":\"RootManager contract address.\"},\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"mirrorConnector()\":{\"notice\":\"Connector on L2 for L1 connectors, and vice versa.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"processMessage(bytes)\":{\"notice\":\"Processes a message received by an AMB\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"},\"sendMessage(bytes,bytes)\":{\"notice\":\"Sends a message over the amb\"},\"setMirrorConnector(address)\":{\"notice\":\"Sets the address of the l2Connector for this domain\"},\"verifySender(address)\":{\"notice\":\"Checks the cross domain sender for a given address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/OptimismHubConnector.sol\":\"OptimismHubConnector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/Connector.sol\":{\"keccak256\":\"0x08d4077a1b5caf9f46491206064bb24bee467dd741b42fed3d30a608eea83368\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://457a269ab150779b4605bc9612676076152857069beb0428d62f44408ac84be4\",\"dweb:/ipfs/QmeSkwvuyUEqUnQgtJe9kr9B7ukRG2zGeKDJ9Xe7JJMbNr\"]},\"contracts/messaging/connectors/GasCap.sol\":{\"keccak256\":\"0xb8b52a3372f08490c918d1f490ad80764d54bd62d1638e4d17a5b552efe6587d\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://6bb20af8d934307c6fa183bc20e11bad0767174a3a305013d2a61d71443f47a5\",\"dweb:/ipfs/QmQMDihNR1ZLK1jX4Ev5NZttBoYhah8ZaZxGZdREZaWEkK\"]},\"contracts/messaging/connectors/HubConnector.sol\":{\"keccak256\":\"0xc35621419ca872ed0550b0943a577b39942f3d2c9b54de008fee382d5ad290e4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b999c13a2d438bb5cb81a3e4e308e8fa0c1c7f3505ac48415552e6df66cafa78\",\"dweb:/ipfs/QmSY4h4sQCXgxbmJp6msrmm9KsHZHeLBg8NrHzWsD2dMiq\"]},\"contracts/messaging/connectors/optimism/BaseOptimism.sol\":{\"keccak256\":\"0x87034df88ba7e4d767c451ff2d0180f8eee25f502682153af7a018e280eab8e3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://3e8e4944ea00bc2f6276ec6d6cb8329c85b42cb44b3ece45ebec35d16d37676f\",\"dweb:/ipfs/QmV1uDysbrcXKUWHbVZT36YE5tSR6NjvbSdsHfnNFj7Hj3\"]},\"contracts/messaging/connectors/optimism/OptimismHubConnector.sol\":{\"keccak256\":\"0x1815660ca23f47ff472b31205e05639588ce8385375d4037ddcf444667d92773\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b88bc49c3041d66948b9f4dae92e117d998d5370e37b16a258d0c18c7398003d\",\"dweb:/ipfs/QmTSPa7uBvRick9B4yw3cbmKbGiB7792kAb6aLukVQ4dcq\"]},\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]},\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":{\"keccak256\":\"0xef5a562ab39dd8072863bb6b3edc54396eacfce3e10d19a2d25482bbcde7873e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://05f5ccbdd9a8d611c6b78c13547c4965bdd680126bb534fbccb371e9c597e92a\",\"dweb:/ipfs/QmdNzcpdR4CP9XGrWfrJPg2LUKQ1ExZLo1EWefXgEW94Zz\"]},\"contracts/messaging/connectors/optimism/lib/OVMCodec.sol\":{\"keccak256\":\"0x777f550172e00112a8fcdde5a759c6d86ef71ca46d78a7850d6cac217a156b2b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://376a6ca2701939dffa697702958163f53b1812a133adab6411a87f9a72f83fbe\",\"dweb:/ipfs/Qmdh8XUjsma2tRkouK2JUgEx7dZdLusdpyjaVwryCZ8rmA\"]},\"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol\":{\"keccak256\":\"0xec0c20ed39e122e0f97a551b28ff9c845e012901bee3eef8d2cebb486007de03\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://234feae5659dea777b5fedaa4c44f878cf8aa3f16cd05f363fb7cb329b8f4fcd\",\"dweb:/ipfs/QmW2184MuxZRuuUYpomB5LX5qAVtJR5ovWRC7ydKGNGRxj\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]},\"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol\":{\"keccak256\":\"0x83dec50ac7d2349f24462c9f2d1928f3a42503ea7e8463757b843d497ea64959\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af423de7526168c1772b50272033bab2b8f7a6070c25406bd5f975645647b6fd\",\"dweb:/ipfs/QmbZ4vGum5pw1yhjXDcyV9gM6yXPJmtPuhi7JATu9UAoMF\"]},\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/messaging/interfaces/IRootManager.sol\":{\"keccak256\":\"0xa895dfaa4baad37a636e7e7e7da72a0a4badfd2d3d8256f975e5101cd5a98236\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://28e302637247d37c821454f4238c9b4896d9637fdda08a3393ac625d80e97e44\",\"dweb:/ipfs/QmPvYJZUq1dWQLLRRkH6abBLpaw2rG14qYvAegx6f5jN8B\"]},\"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol\":{\"keccak256\":\"0x76577b06af1692d10b9a41bd0beb4edf11f3a00cfb2895df416aaf872781788c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7e6a08ed3ed65cb8dd5225e5810fc05161bfc02619110cb7207e44f90b83300d\",\"dweb:/ipfs/QmSHXhgkXt1dDGrNpnyFC1Y8ZhKWZ2kmfpmx53ZVeAiY75\"]},\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":{\"keccak256\":\"0xbce6aaa568441bd8ad60f2b5f1ad8d9e3c61cbc91ce4405d7a390980920f66f3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7cdea925bfc43e25eab526074b1b5454b0a44676e88cb7834707e8b273aff820\",\"dweb:/ipfs/Qmd2WyxCPaguNGKfm7sNxfQgxEU8o7vvR6Fe4pK7GZoUUe\"]},\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]},\"contracts/shared/libraries/TypedMemView.sol\":{\"keccak256\":\"0x17e335daf53b9cd26f13d480b2f1e4f6babf202e39a14089d97b23b1d5d737ff\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://694cae783e2f6e85edbc1fff9bd6a47d9cf7023cc5f69754cdd0c85953a762c3\",\"dweb:/ipfs/QmUc41N4NTs4Tvhzy6ULkp7DSH8b7D5CcadNEBKBHgPPBc\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/BytesUtils.sol":{"BytesUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220481471e18dd1d8248fcf41397e7d17c8338cbc3b6ebdfafe4eb6789e7db14ccf64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE EQ PUSH18 0xE18DD1D8248FCF41397E7D17C8338CBC3B6E 0xBD STATICCALL INVALID 0x4E 0xB6 PUSH25 0x9E7DB14CCF64736F6C63430008110033000000000000000000 ","sourceMap":"249:4058:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220481471e18dd1d8248fcf41397e7d17c8338cbc3b6ebdfafe4eb6789e7db14ccf64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE EQ PUSH18 0xE18DD1D8248FCF41397E7D17C8338CBC3B6E 0xBD STATICCALL INVALID 0x4E 0xB6 PUSH25 0x9E7DB14CCF64736F6C63430008110033000000000000000000 ","sourceMap":"249:4058:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/utils/Lib_BytesUtils.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BytesUtils\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":\"BytesUtils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol":{"MerkleTrie":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082a280ced51ba54ed24b1ac80143ad14bf609b0056a3d78df3ac614f38e7a84c64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 LOG2 DUP1 0xCE 0xD5 SHL 0xA5 0x4E 0xD2 0x4B BYTE 0xC8 ADD NUMBER 0xAD EQ 0xBF PUSH1 0x9B STOP JUMP LOG3 0xD7 DUP14 RETURN 0xAC PUSH2 0x4F38 0xE7 0xA8 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"359:10351:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082a280ced51ba54ed24b1ac80143ad14bf609b0056a3d78df3ac614f38e7a84c64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 LOG2 DUP1 0xCE 0xD5 SHL 0xA5 0x4E 0xD2 0x4B BYTE 0xC8 ADD NUMBER 0xAD EQ 0xBF PUSH1 0x9B STOP JUMP LOG3 0xD7 DUP14 RETURN 0xAC PUSH2 0x4F38 0xE7 0xA8 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"359:10351:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_MerkleTrie.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MerkleTrie\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":\"MerkleTrie\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]},\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":{\"keccak256\":\"0xef5a562ab39dd8072863bb6b3edc54396eacfce3e10d19a2d25482bbcde7873e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://05f5ccbdd9a8d611c6b78c13547c4965bdd680126bb534fbccb371e9c597e92a\",\"dweb:/ipfs/QmdNzcpdR4CP9XGrWfrJPg2LUKQ1ExZLo1EWefXgEW94Zz\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/OVMCodec.sol":{"OVMCodec":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203299f61da9006677cfc8a5a4371845b0de1ce5e16153cb14fa48d9ab2e4adbe764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP10 0xF6 SAR 0xA9 STOP PUSH7 0x77CFC8A5A43718 GASLIMIT 0xB0 0xDE SHR 0xE5 0xE1 PUSH2 0x53CB EQ STATICCALL BASEFEE 0xD9 0xAB 0x2E 0x4A 0xDB 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"311:794:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203299f61da9006677cfc8a5a4371845b0de1ce5e16153cb14fa48d9ab2e4adbe764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN SWAP10 0xF6 SAR 0xA9 STOP PUSH7 0x77CFC8A5A43718 GASLIMIT 0xB0 0xDE SHR 0xE5 0xE1 PUSH2 0x53CB EQ STATICCALL BASEFEE 0xD9 0xAB 0x2E 0x4A 0xDB 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"311:794:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/codec/Lib_OVMCodec.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"OVMCodec\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/OVMCodec.sol\":\"OVMCodec\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/OVMCodec.sol\":{\"keccak256\":\"0x777f550172e00112a8fcdde5a759c6d86ef71ca46d78a7850d6cac217a156b2b\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://376a6ca2701939dffa697702958163f53b1812a133adab6411a87f9a72f83fbe\",\"dweb:/ipfs/Qmdh8XUjsma2tRkouK2JUgEx7dZdLusdpyjaVwryCZ8rmA\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol":{"PredeployAddresses":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffe4a8c7b0569d552816f1d4b7028c0d94d5335c852333778a4d6c8374427ce264736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE4 0xA8 0xC7 0xB0 JUMP SWAP14 SSTORE 0x28 AND CALL 0xD4 0xB7 MUL DUP13 0xD SWAP5 0xD5 CALLER 0x5C DUP6 0x23 CALLER PUSH24 0x8A4D6C8374427CE264736F6C634300081100330000000000 ","sourceMap":"269:1068:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ffe4a8c7b0569d552816f1d4b7028c0d94d5335c852333778a4d6c8374427ce264736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT 0xE4 0xA8 0xC7 0xB0 JUMP SWAP14 SSTORE 0x28 AND CALL 0xD4 0xB7 MUL DUP13 0xD SWAP5 0xD5 CALLER 0x5C DUP6 0x23 CALLER PUSH24 0x8A4D6C8374427CE264736F6C634300081100330000000000 ","sourceMap":"269:1068:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/constants/Lib_PredeployAddresses.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"PredeployAddresses\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol\":\"PredeployAddresses\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/PredeployAddresses.sol\":{\"keccak256\":\"0xec0c20ed39e122e0f97a551b28ff9c845e012901bee3eef8d2cebb486007de03\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://234feae5659dea777b5fedaa4c44f878cf8aa3f16cd05f363fb7cb329b8f4fcd\",\"dweb:/ipfs/QmW2184MuxZRuuUYpomB5LX5qAVtJR5ovWRC7ydKGNGRxj\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/RLPReader.sol":{"RLPReader":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af4091143e29251b2721ab34e9e0ae3c6273ac7b42d5f745c7c8441721a2776f64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF BLOCKHASH SWAP2 EQ RETURNDATACOPY 0x29 0x25 SHL 0x27 0x21 0xAB CALLVALUE 0xE9 0xE0 0xAE EXTCODECOPY PUSH3 0x73AC7B TIMESTAMP 0xD5 0xF7 GASLIMIT 0xC7 0xC8 DIFFICULTY OR 0x21 LOG2 PUSH24 0x6F64736F6C63430008110033000000000000000000000000 ","sourceMap":"242:10035:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220af4091143e29251b2721ab34e9e0ae3c6273ac7b42d5f745c7c8441721a2776f64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF BLOCKHASH SWAP2 EQ RETURNDATACOPY 0x29 0x25 SHL 0x27 0x21 0xAB CALLVALUE 0xE9 0xE0 0xAE EXTCODECOPY PUSH3 0x73AC7B TIMESTAMP 0xD5 0xF7 GASLIMIT 0xC7 0xC8 DIFFICULTY OR 0x21 LOG2 PUSH24 0x6F64736F6C63430008110033000000000000000000000000 ","sourceMap":"242:10035:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/rlp/Lib_RLPReader.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"RLPReader\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":\"RLPReader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]}},\"version\":1}"}},"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol":{"SecureMerkleTrie":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bace7f265625f750bb384eb9312a61fed6d2ac54bea18b18dd46bb275cd66a6364736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xCE PUSH32 0x265625F750BB384EB9312A61FED6D2AC54BEA18B18DD46BB275CD66A6364736F PUSH13 0x63430008110033000000000000 ","sourceMap":"328:2027:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bace7f265625f750bb384eb9312a61fed6d2ac54bea18b18dd46bb275cd66a6364736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xCE PUSH32 0x265625F750BB384EB9312A61FED6D2AC54BEA18B18DD46BB275CD66A6364736F PUSH13 0x63430008110033000000000000 ","sourceMap":"328:2027:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/libraries/trie/Lib_SecureMerkleTrie.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SecureMerkleTrie\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol\":\"SecureMerkleTrie\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/connectors/optimism/lib/BytesUtils.sol\":{\"keccak256\":\"0x81feab05c6cadccdf548b5cc8bbb8e5afdbb788f5215f1cc477e4ee877665578\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://8118a491a920b92cf31620966e21be47e77b980709acbbea525afabbcc86bf15\",\"dweb:/ipfs/QmWaLxqGXMuef7Q1DH3ofxB5D8ADptrj8byW5sb8bymvUm\"]},\"contracts/messaging/connectors/optimism/lib/MerkleTrie.sol\":{\"keccak256\":\"0xef5a562ab39dd8072863bb6b3edc54396eacfce3e10d19a2d25482bbcde7873e\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://05f5ccbdd9a8d611c6b78c13547c4965bdd680126bb534fbccb371e9c597e92a\",\"dweb:/ipfs/QmdNzcpdR4CP9XGrWfrJPg2LUKQ1ExZLo1EWefXgEW94Zz\"]},\"contracts/messaging/connectors/optimism/lib/RLPReader.sol\":{\"keccak256\":\"0x1770c68d08215690f873f1c8d95d8f63db546cf6b34e477a5b065379a9030e43\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5ab0f99f61b032926280e2caf857735dfaab420e305595dc42288248cff5a8e9\",\"dweb:/ipfs/QmP1ptWADWQeFGiArRy1L8izajt8m1WTV6pofv9FFtQQ6G\"]},\"contracts/messaging/connectors/optimism/lib/SecureMerkleTrie.sol\":{\"keccak256\":\"0x83dec50ac7d2349f24462c9f2d1928f3a42503ea7e8463757b843d497ea64959\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://af423de7526168c1772b50272033bab2b8f7a6070c25406bd5f975645647b6fd\",\"dweb:/ipfs/QmbZ4vGum5pw1yhjXDcyV9gM6yXPJmtPuhi7JATu9UAoMF\"]}},\"version\":1}"}},"contracts/messaging/interfaces/IConnector.sol":{"IConnector":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageProcessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"encodedData","type":"bytes"},{"indexed":false,"internalType":"address","name":"caller","type":"address"}],"name":"MessageSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"processMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"proposed_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_expected","type":"address"}],"name":"verifySender","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","owner()":"8da5cb5b","processMessage(bytes)":"4ff746f6","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","verifySender(address)":"db1b7659"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"MessageSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"processMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposed_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_expected\",\"type\":\"address\"}],\"name\":\"verifySender\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This uses the nomad format to ensure nomad can be added in as it comes back online. Flow from transfer from polygon to optimism: 1. User calls `xcall` with destination specified 2. This will swap in to the bridge assets 3. The swapped assets will get burned 4. The Connext contract will call `dispatch` on the messaging contract to add the transfer    to the root 5. [At some time interval] Relayers call `send` to send the current root from polygon to    mainnet. This is done on all \\\"spoke\\\" domains. 6. [At some time interval] Relayers call `propagate` [better name] on mainnet, this generates a new merkle    root from all of the AMBs    - This function must be able to read root data from all AMBs and aggregate them into a single merkle      tree root    - Will send the mixed root from all chains back through the respective AMBs to all other chains 7. AMB will call `update` to update the latest root on the messaging contract on spoke domains 8. [At any point] Relayers can call `proveAndProcess` to prove inclusion of dispatched message, and call    process on the `Connext` contract 9. Takes minted bridge tokens and credits the LP AMB requirements: - Access `msg.sender` both from mainnet -> spoke and vice versa - Ability to read *our root* from the AMB AMBs: - PoS bridge from polygon - arbitrum bridge - optimism bridge - gnosis chain - bsc (use multichain for messaging)\",\"events\":{\"MessageProcessed(bytes,address)\":{\"params\":{\"caller\":\"Who called the function\",\"data\":\"The contents of the message\"}},\"MessageSent(bytes,bytes,address)\":{\"params\":{\"caller\":\"Who called the function (sent the message)\",\"data\":\"The contents of the message\",\"encodedData\":\"Data used to send the message; specific to connector\"}}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"owner_\":\"The address of the owner.\"}},\"proposeNewOwner(address)\":{\"params\":{\"newlyProposed\":\"The proposed new owner of the contract\"}},\"proposed()\":{\"returns\":{\"proposed_\":\"The address of the proposed.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"MessageProcessed(bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully received over an AMB\"},\"MessageSent(bytes,bytes,address)\":{\"notice\":\"Emitted whenever a message is successfully sent over an AMB\"}},\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"owner()\":{\"notice\":\"Get the address of the owner\"},\"proposeNewOwner(address)\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"proposed()\":{\"notice\":\"Get the address of the proposed owner\"}},\"notice\":\"This interface is what the Connext contract will send and receive messages through. The messaging layer should conform to this interface, and should be interchangeable (i.e. could be Nomad or a generic AMB under the hood).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/IConnector.sol\":\"IConnector\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/IConnector.sol\":{\"keccak256\":\"0xfba166354b442fa72b05be07aed38400b47f68498e8dfdd94fc43df00c401ed1\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://d566f83d86de6ddb7013c03f455c225543fcc37a2eb1d0e5146a48acf33ed7e1\",\"dweb:/ipfs/QmeXnV564CfqNwGuTmRzxEdP2LZNveSLAR9oi8AJYztvj5\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/messaging/interfaces/IRootManager.sol":{"IRootManager":{"abi":[{"inputs":[{"internalType":"uint32","name":"_domain","type":"uint32"},{"internalType":"bytes32","name":"_outbound","type":"bytes32"}],"name":"aggregate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"_connectors","type":"address[]"},{"internalType":"uint256[]","name":"_fees","type":"uint256[]"},{"internalType":"bytes[]","name":"_encodedData","type":"bytes[]"}],"name":"propagate","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"aggregate(uint32,bytes32)":"8e7d93fa","propagate(address[],uint256[],bytes[])":"412e12db"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_domain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_outbound\",\"type\":\"bytes32\"}],\"name\":\"aggregate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_connectors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_fees\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_encodedData\",\"type\":\"bytes[]\"}],\"name\":\"propagate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"aggregate(uint32,bytes32)\":{\"details\":\"This must read information for the root from the registered AMBs\"},\"propagate(address[],uint256[],bytes[])\":{\"details\":\"This must read information for the root from the registered AMBs.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"aggregate(uint32,bytes32)\":{\"notice\":\"Called by the connectors for various domains on the hub to aggregate their latest inbound root.\"},\"propagate(address[],uint256[],bytes[])\":{\"notice\":\"This is called by relayers to generate + send the mixed root from mainnet via AMB to spoke domains.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/IRootManager.sol\":\"IRootManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/IRootManager.sol\":{\"keccak256\":\"0xa895dfaa4baad37a636e7e7e7da72a0a4badfd2d3d8256f975e5101cd5a98236\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://28e302637247d37c821454f4238c9b4896d9637fdda08a3393ac625d80e97e44\",\"dweb:/ipfs/QmPvYJZUq1dWQLLRRkH6abBLpaw2rG14qYvAegx6f5jN8B\"]}},\"version\":1}"}},"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol":{"IStateCommitmentChain":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_batchIndex","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"_batchRoot","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"_batchSize","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_prevTotalElements","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"_extraData","type":"bytes"}],"name":"StateBatchAppended","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"_batchIndex","type":"uint256"},{"indexed":false,"internalType":"bytes32","name":"_batchRoot","type":"bytes32"}],"name":"StateBatchDeleted","type":"event"},{"inputs":[{"internalType":"bytes32[]","name":"_batch","type":"bytes32[]"},{"internalType":"uint256","name":"_shouldStartAtElement","type":"uint256"}],"name":"appendStateBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"_batchHeader","type":"tuple"}],"name":"deleteStateBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getLastSequencerTimestamp","outputs":[{"internalType":"uint256","name":"_lastSequencerTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalBatches","outputs":[{"internalType":"uint256","name":"_totalBatches","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalElements","outputs":[{"internalType":"uint256","name":"_totalElements","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"_batchHeader","type":"tuple"}],"name":"insideFraudProofWindow","outputs":[{"internalType":"bool","name":"_inside","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_element","type":"bytes32"},{"components":[{"internalType":"uint256","name":"batchIndex","type":"uint256"},{"internalType":"bytes32","name":"batchRoot","type":"bytes32"},{"internalType":"uint256","name":"batchSize","type":"uint256"},{"internalType":"uint256","name":"prevTotalElements","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"}],"internalType":"struct ChainBatchHeader","name":"_batchHeader","type":"tuple"},{"components":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes32[]","name":"siblings","type":"bytes32[]"}],"internalType":"struct ChainInclusionProof","name":"_proof","type":"tuple"}],"name":"verifyStateCommitment","outputs":[{"internalType":"bool","name":"_verified","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"appendStateBatch(bytes32[],uint256)":"8ca5cbb9","deleteStateBatch((uint256,bytes32,uint256,uint256,bytes))":"b8e189ac","getLastSequencerTimestamp()":"7ad168a0","getTotalBatches()":"e561dddc","getTotalElements()":"7aa63a86","insideFraudProofWindow((uint256,bytes32,uint256,uint256,bytes))":"9418bddd","verifyStateCommitment(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]))":"4d69ee57"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_batchIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_batchRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_batchSize\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_prevTotalElements\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"StateBatchAppended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_batchIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_batchRoot\",\"type\":\"bytes32\"}],\"name\":\"StateBatchDeleted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_batch\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"_shouldStartAtElement\",\"type\":\"uint256\"}],\"name\":\"appendStateBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"_batchHeader\",\"type\":\"tuple\"}],\"name\":\"deleteStateBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastSequencerTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_lastSequencerTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBatches\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalBatches\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalElements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalElements\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"_batchHeader\",\"type\":\"tuple\"}],\"name\":\"insideFraudProofWindow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_inside\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_element\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"batchRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"batchSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prevTotalElements\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ChainBatchHeader\",\"name\":\"_batchHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"internalType\":\"struct ChainInclusionProof\",\"name\":\"_proof\",\"type\":\"tuple\"}],\"name\":\"verifyStateCommitment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_verified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"modified from: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/rollup/IStateCommitmentChain.sol\",\"kind\":\"dev\",\"methods\":{\"appendStateBatch(bytes32[],uint256)\":{\"params\":{\"_batch\":\"Batch of state roots.\",\"_shouldStartAtElement\":\"Index of the element at which this batch should start.\"}},\"deleteStateBatch((uint256,bytes32,uint256,uint256,bytes))\":{\"params\":{\"_batchHeader\":\"Header of the batch to start deleting from.\"}},\"getLastSequencerTimestamp()\":{\"returns\":{\"_lastSequencerTimestamp\":\"Last sequencer batch timestamp.\"}},\"getTotalBatches()\":{\"returns\":{\"_totalBatches\":\"Total submitted batches.\"}},\"getTotalElements()\":{\"returns\":{\"_totalElements\":\"Total submitted elements.\"}},\"insideFraudProofWindow((uint256,bytes32,uint256,uint256,bytes))\":{\"params\":{\"_batchHeader\":\"Header of the batch to check.\"},\"returns\":{\"_inside\":\"Whether or not the batch is inside the fraud proof window.\"}},\"verifyStateCommitment(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]))\":{\"params\":{\"_batchHeader\":\"Header of the batch in which the element was included.\",\"_element\":\"Hash of the element to verify a proof for.\",\"_proof\":\"Merkle inclusion proof for the element.\"}}},\"title\":\"IStateCommitmentChain\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"appendStateBatch(bytes32[],uint256)\":{\"notice\":\"Appends a batch of state roots to the chain.\"},\"deleteStateBatch((uint256,bytes32,uint256,uint256,bytes))\":{\"notice\":\"Deletes all state roots after (and including) a given batch.\"},\"getLastSequencerTimestamp()\":{\"notice\":\"Retrieves the timestamp of the last batch submitted by the sequencer.\"},\"getTotalBatches()\":{\"notice\":\"Retrieves the total number of batches submitted.\"},\"getTotalElements()\":{\"notice\":\"Retrieves the total number of elements submitted.\"},\"insideFraudProofWindow((uint256,bytes32,uint256,uint256,bytes))\":{\"notice\":\"Checks whether a given batch is still inside its fraud proof window.\"},\"verifyStateCommitment(bytes32,(uint256,bytes32,uint256,uint256,bytes),(uint256,bytes32[]))\":{\"notice\":\"Verifies a batch inclusion proof.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol\":\"IStateCommitmentChain\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/ambs/optimism/IStateCommitmentChain.sol\":{\"keccak256\":\"0x76577b06af1692d10b9a41bd0beb4edf11f3a00cfb2895df416aaf872781788c\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7e6a08ed3ed65cb8dd5225e5810fc05161bfc02619110cb7207e44f90b83300d\",\"dweb:/ipfs/QmSHXhgkXt1dDGrNpnyFC1Y8ZhKWZ2kmfpmx53ZVeAiY75\"]}},\"version\":1}"}},"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol":{"OptimismAmb":{"abi":[{"inputs":[{"internalType":"address","name":"_target","type":"address"},{"internalType":"bytes","name":"_message","type":"bytes"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"}],"name":"sendMessage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"xDomainMessageSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"sendMessage(address,bytes,uint32)":"3dbb202b","xDomainMessageSender()":"6e296e45"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The optimism bridge shares both of these functions, but it is important to note that when going from L2 -> L1, the message cannot be processed by the AMB until the challenge period elapses. HOWEVER, before the challenge elapses, you can read the state of the L2 as it is placed on mainnet. By processing data from the L2 state, we are able to \\\"circumvent\\\" this delay to a reasonable degree. This means that for messages going L1 -> L2, you can call \\\"processMessage\\\" and expect the call to be executed to pass up the aggregate root. When going from L2 -> L1, you must read the root from the L2 state L2 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L2/messaging/L2CrossDomainMessenger.sol L1 messenger: https://github.com/ethereum-optimism/optimism/blob/develop/packages/contracts/contracts/L1/messaging/L1CrossDomainMessenger.sol\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":\"OptimismAmb\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/messaging/interfaces/ambs/optimism/OptimismAmb.sol\":{\"keccak256\":\"0xbce6aaa568441bd8ad60f2b5f1ad8d9e3c61cbc91ce4405d7a390980920f66f3\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://7cdea925bfc43e25eab526074b1b5454b0a44676e88cb7834707e8b273aff820\",\"dweb:/ipfs/Qmd2WyxCPaguNGKfm7sNxfQgxEU8o7vvR6Fe4pK7GZoUUe\"]}},\"version\":1}"}},"contracts/shared/ProposedOwnable.sol":{"ProposedOwnable":{"abi":[{"inputs":[],"name":"ProposedOwnable__onlyOwner_notOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__onlyProposed_notProposedOwner","type":"error"},{"inputs":[],"name":"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__proposeNewOwner_noOwnershipChange","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_invalidProposal","type":"error"},{"inputs":[],"name":"ProposedOwnable__renounceOwnership_noProposal","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"delay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proposedTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounced","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","delay()":"6a42b8f8","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92","proposedTimestamp()":"3cf52ffb","renounceOwnership()":"715018a6","renounced()":"d232c220"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ProposedOwnable__onlyOwner_notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__onlyProposed_notProposedOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__ownershipDelayElapsed_delayNotElapsed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__proposeNewOwner_noOwnershipChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_invalidProposal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProposedOwnable__renounceOwnership_noProposal\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounced\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.The majority of this code was taken from the openzeppelin Ownable contract\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ProposedOwnable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"delay()\":{\"notice\":\"Returns the delay period before a new owner can be accepted.\"},\"owner()\":{\"notice\":\"Returns the address of the current owner.\"},\"proposeNewOwner(address)\":{\"notice\":\"Sets the timestamp for an owner to be proposed, and sets the newly proposed owner as step 1 in a 2-step process\"},\"proposed()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"proposedTimestamp()\":{\"notice\":\"Returns the address of the proposed owner.\"},\"renounceOwnership()\":{\"notice\":\"Renounces ownership of the contract after a delay\"},\"renounced()\":{\"notice\":\"Indicates if the ownership has been renounced() by checking if current owner is address(0)\"}},\"notice\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed via a two step process: 1. Call `proposeOwner` 2. Wait out the delay period 3. Call `acceptOwner`\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shared/ProposedOwnable.sol\":\"ProposedOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shared/ProposedOwnable.sol\":{\"keccak256\":\"0xa96eff4fdff55ffa29cda5c18285a9af04c3cbaf55f83696085cdd2251a8d6c0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b9e4b48b7be009f63aaa290cfb5cb4856b22e0209fc0e127410b58d27cf19a20\",\"dweb:/ipfs/QmRKgc44DxTYBh6Anx4nQ7QboJ3PbNz8iRvGKQMHqxMkrx\"]},\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/shared/interfaces/IProposedOwnable.sol":{"IProposedOwnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"proposedOwner","type":"address"}],"name":"OwnershipProposed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptProposedOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newlyProposed","type":"address"}],"name":"proposeNewOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"proposed","outputs":[{"internalType":"address","name":"proposed_","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptProposedOwner()":"c5b350df","owner()":"8da5cb5b","proposeNewOwner(address)":"b1f8100d","proposed()":"d1851c92"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"OwnershipProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptProposedOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newlyProposed\",\"type\":\"address\"}],\"name\":\"proposeNewOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proposed_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"OwnershipProposed(address)\":{\"details\":\"This emits when change in ownership of a contract is proposed.\"},\"OwnershipTransferred(address,address)\":{\"details\":\"This emits when ownership of a contract changes.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"owner_\":\"The address of the owner.\"}},\"proposeNewOwner(address)\":{\"params\":{\"newlyProposed\":\"The proposed new owner of the contract\"}},\"proposed()\":{\"returns\":{\"proposed_\":\"The address of the proposed.\"}}},\"title\":\"IProposedOwnable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptProposedOwner()\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"owner()\":{\"notice\":\"Get the address of the owner\"},\"proposeNewOwner(address)\":{\"notice\":\"Set the address of the proposed owner of the contract\"},\"proposed()\":{\"notice\":\"Get the address of the proposed owner\"}},\"notice\":\"Defines a minimal interface for ownership with a two step proposal and acceptance process\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shared/interfaces/IProposedOwnable.sol\":\"IProposedOwnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shared/interfaces/IProposedOwnable.sol\":{\"keccak256\":\"0x4ec1aa589d37d0c1eac9966e26d2d3540d1661b81763e678f14d2c6fa0682323\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f109a79c26ec5b05ab15302c458d0aca4e577e53bda52b6bec618222bca43449\",\"dweb:/ipfs/Qmawu9774ahEiu1HjSLupVoYjd57UTeQi9QRjydm86eCAE\"]}},\"version\":1}"}},"contracts/shared/libraries/TypedMemView.sol":{"TypedMemView":{"abi":[{"inputs":[{"internalType":"uint256","name":"actual","type":"uint256"},{"internalType":"uint256","name":"expected","type":"uint256"}],"name":"TypedMemView__assertType_typeAssertionFailed","type":"error"},{"inputs":[],"name":"TypedMemView__assertValid_validityAssertionFailed","type":"error"},{"inputs":[],"name":"TypedMemView__index_indexMoreThan32Bytes","type":"error"},{"inputs":[{"internalType":"uint256","name":"loc","type":"uint256"},{"internalType":"uint256","name":"len","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"uint256","name":"slice","type":"uint256"}],"name":"TypedMemView__index_overrun","type":"error"},{"inputs":[],"name":"TypedMemView__unsafeCopyTo_identityOOG","type":"error"},{"inputs":[],"name":"TypedMemView__unsafeCopyTo_invalidPointer","type":"error"},{"inputs":[],"name":"TypedMemView__unsafeCopyTo_nullPointer","type":"error"},{"inputs":[],"name":"NULL","outputs":[{"internalType":"bytes29","name":"","type":"bytes29"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60fe610052600b82828239805160001a607314610045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f26be3fc146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000081565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220b2e89d1df112d56200dd4e96697bc8e5c043ca68b20faf9e83528bdfa28ccf5464736f6c63430008110033","opcodes":"PUSH1 0xFE PUSH2 0x52 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x45 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF26BE3FC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE8 SWAP14 SAR CALL SLT 0xD5 PUSH3 0xDD4E SWAP7 PUSH10 0x7BC8E5C043CA68B20FAF SWAP15 DUP4 MSTORE DUP12 0xDF LOG2 DUP13 0xCF SLOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"71:24417:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@NULL_3149":{"entryPoint":82,"id":3149,"parameterSlots":0,"returnSlots":0},"abi_encode_t_bytes29_to_t_bytes29_fromStack_library":{"entryPoint":162,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bytes29__to_t_bytes29__fromStack_library_reversed":{"entryPoint":175,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_bytes29":{"entryPoint":118,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:536:18","statements":[{"body":{"nodeType":"YulBlock","src":"52:105:18","statements":[{"nodeType":"YulAssignment","src":"62:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"84:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:18"},"nodeType":"YulFunctionCall","src":"73:78:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:18"}]}]},"name":"cleanup_t_bytes29","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:18","type":""}],"src":"7:150:18"},{"body":{"nodeType":"YulBlock","src":"236:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"253:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"276:5:18"}],"functionName":{"name":"cleanup_t_bytes29","nodeType":"YulIdentifier","src":"258:17:18"},"nodeType":"YulFunctionCall","src":"258:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"246:6:18"},"nodeType":"YulFunctionCall","src":"246:37:18"},"nodeType":"YulExpressionStatement","src":"246:37:18"}]},"name":"abi_encode_t_bytes29_to_t_bytes29_fromStack_library","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"224:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"231:3:18","type":""}],"src":"163:126:18"},{"body":{"nodeType":"YulBlock","src":"401:132:18","statements":[{"nodeType":"YulAssignment","src":"411:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"423:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"434:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"419:3:18"},"nodeType":"YulFunctionCall","src":"419:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"411:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"499:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"512:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"523:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"508:3:18"},"nodeType":"YulFunctionCall","src":"508:17:18"}],"functionName":{"name":"abi_encode_t_bytes29_to_t_bytes29_fromStack_library","nodeType":"YulIdentifier","src":"447:51:18"},"nodeType":"YulFunctionCall","src":"447:79:18"},"nodeType":"YulExpressionStatement","src":"447:79:18"}]},"name":"abi_encode_tuple_t_bytes29__to_t_bytes29__fromStack_library_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"373:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"385:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"396:4:18","type":""}],"src":"295:238:18"}]},"contents":"{\n\n    function cleanup_t_bytes29(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000)\n    }\n\n    function abi_encode_t_bytes29_to_t_bytes29_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes29(value))\n    }\n\n    function abi_encode_tuple_t_bytes29__to_t_bytes29__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes29_to_t_bytes29_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063f26be3fc146038575b600080fd5b603e6052565b6040516049919060af565b60405180910390f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000081565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000082169050919050565b60a9816076565b82525050565b600060208201905060c2600083018460a2565b9291505056fea2646970667358221220b2e89d1df112d56200dd4e96697bc8e5c043ca68b20faf9e83528bdfa28ccf5464736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF26BE3FC EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA9 DUP2 PUSH1 0x76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xC2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0xA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xE8 SWAP14 SAR CALL SLT 0xD5 PUSH3 0xDD4E SWAP7 PUSH10 0x7BC8E5C043CA68B20FAF SWAP15 DUP4 MSTORE DUP12 0xDF LOG2 DUP13 0xCF SLOAD PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"71:24417:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;2478:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;7:150:18:-;44:7;84:66;77:5;73:78;62:89;;7:150;;;:::o;163:126::-;258:24;276:5;258:24;:::i;:::-;253:3;246:37;163:126;;:::o;295:238::-;396:4;434:2;423:9;419:18;411:26;;447:79;523:1;512:9;508:17;499:6;447:79;:::i;:::-;295:238;;;;:::o"},"methodIdentifiers":{"NULL()":"f26be3fc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"}],\"name\":\"TypedMemView__assertType_typeAssertionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__assertValid_validityAssertionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__index_indexMoreThan32Bytes\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"slice\",\"type\":\"uint256\"}],\"name\":\"TypedMemView__index_overrun\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__unsafeCopyTo_identityOOG\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__unsafeCopyTo_invalidPointer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TypedMemView__unsafeCopyTo_nullPointer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NULL\",\"outputs\":[{\"internalType\":\"bytes29\",\"name\":\"\",\"type\":\"bytes29\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shared/libraries/TypedMemView.sol\":\"TypedMemView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/shared/libraries/TypedMemView.sol\":{\"keccak256\":\"0x17e335daf53b9cd26f13d480b2f1e4f6babf202e39a14089d97b23b1d5d737ff\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://694cae783e2f6e85edbc1fff9bd6a47d9cf7023cc5f69754cdd0c85953a762c3\",\"dweb:/ipfs/QmUc41N4NTs4Tvhzy6ULkp7DSH8b7D5CcadNEBKBHgPPBc\"]}},\"version\":1}"}}}}}