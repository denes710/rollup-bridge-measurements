"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.axiosGet = exports.axiosPost = exports.AxiosQueryError = void 0;
const axios_1 = __importDefault(require("axios"));
const types_1 = require("../types");
class AxiosQueryError extends types_1.NxtpError {
    constructor(url, method, data, errorObj) {
        super(`Error sending axios request to url ${url}`, { url, data, method, error: errorObj }, AxiosQueryError.name);
    }
}
exports.AxiosQueryError = AxiosQueryError;
const axiosPost = async (url, data, config) => {
    try {
        const response = await axios_1.default.post(url, data, config);
        return response;
    }
    catch (error) {
        // eslint-disable-next-line import/no-named-as-default-member
        if (axios_1.default.isAxiosError(error)) {
            throw new AxiosQueryError(url, "post", data, { error: error.toJSON(), status: error.response?.status });
        }
        throw new AxiosQueryError(url, "post", data, (0, types_1.jsonifyError)(error));
    }
};
exports.axiosPost = axiosPost;
const axiosGet = async (url, data) => {
    try {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        const response = await axios_1.default.get(url, data);
        return response;
    }
    catch (error) {
        // eslint-disable-next-line import/no-named-as-default-member
        if (axios_1.default.isAxiosError(error)) {
            throw new AxiosQueryError(url, "get", data, { error: error.toJSON(), status: error.response?.status });
        }
        throw new AxiosQueryError(url, "get", data, (0, types_1.jsonifyError)(error));
    }
};
exports.axiosGet = axiosGet;
//# sourceMappingURL=axios.js.map